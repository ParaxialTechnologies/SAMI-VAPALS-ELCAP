KIDS Distribution saved on Aug 12, 2020@12:16:27
SAMI ORU ROUTINES AND PROTOCOLS
**KIDS**:SAMI ORU 1.0^

**INSTALL NAME**
SAMI ORU 1.0
"BLD",10815,0)
SAMI ORU 1.0^^0^3200812^n
"BLD",10815,1,0)
^^39^39^3200812^^
"BLD",10815,1,1,0)
HL7 components and routines for receiving ORM and sending ORU
"BLD",10815,1,2,0)
 
"BLD",10815,1,3,0)
ROUTINES       CHECK1^XTSUMBLD
"BLD",10815,1,4,0)
               after installation
"BLD",10815,1,5,0)
   SAMIHL7     89410050
"BLD",10815,1,6,0)
   SAMIORM     58083008
"BLD",10815,1,7,0)
   SAMIORU     148973212
"BLD",10815,1,8,0)
 
"BLD",10815,1,9,0)
PROTOCOL
"BLD",10815,1,10,0)
   PHX ENROLL ORU EVN
"BLD",10815,1,11,0)
   PHX ENROLL ORU RECV
"BLD",10815,1,12,0)
 
"BLD",10815,1,13,0)
HL7 APPLICATION PARAMETER
"BLD",10815,1,14,0)
   PHX ORU SEND
"BLD",10815,1,15,0)
   PHX ORU RECV
"BLD",10815,1,16,0)
 
"BLD",10815,1,17,0)
HL7 LOGICAL LINK
"BLD",10815,1,18,0)
   PHX ORU
"BLD",10815,1,19,0)
 
"BLD",10815,1,20,0)
 
"BLD",10815,1,21,0)
Installation instructions
"BLD",10815,1,22,0)
 
"BLD",10815,1,23,0)
1. Install SAMI ORU 1.0 patch
"BLD",10815,1,24,0)
 
"BLD",10815,1,25,0)
2. Using HL7 Interface Developer Options
"BLD",10815,1,26,0)
   Edit PHX ORU link to set
"BLD",10815,1,27,0)
      TCP/IP ADDRESS to that of Phoenix VA
"BLD",10815,1,28,0)
      TCP/IP PORT to Phoenix VA multi listener
"BLD",10815,1,29,0)
 
"BLD",10815,1,30,0)
3. Using HL7 Filer and Link Management Option Start/Stop Links
"BLD",10815,1,31,0)
   Start PHX ORU link
"BLD",10815,1,32,0)
   Check that link is enabled or in Inactive state
"BLD",10815,1,33,0)
 
"BLD",10815,1,34,0)
4. Use D ^%RI to bring ^%tt and ^%ttw  
"BLD",10815,1,35,0)
   NOTE: must add     Routine_%tt*=USER  to 
"BLD",10815,1,36,0)
         ; DLW - Added mapping for % globals and routines to USER for 
"BLD",10815,1,37,0)
                 VAPALS
"BLD",10815,1,38,0)
         BEFORE running ^%RI 
"BLD",10815,1,39,0)
         MASHTT.RO sent separately
"BLD",10815,4,0)
^9.64PA^^
"BLD",10815,6.3)
1
"BLD",10815,"KRN",0)
^9.67PA^1.5^24
"BLD",10815,"KRN",.4,0)
.4
"BLD",10815,"KRN",.401,0)
.401
"BLD",10815,"KRN",.402,0)
.402
"BLD",10815,"KRN",.403,0)
.403
"BLD",10815,"KRN",.5,0)
.5
"BLD",10815,"KRN",.84,0)
.84
"BLD",10815,"KRN",1.5,0)
1.5
"BLD",10815,"KRN",1.6,0)
1.6
"BLD",10815,"KRN",1.61,0)
1.61
"BLD",10815,"KRN",1.62,0)
1.62
"BLD",10815,"KRN",3.6,0)
3.6
"BLD",10815,"KRN",3.8,0)
3.8
"BLD",10815,"KRN",9.2,0)
9.2
"BLD",10815,"KRN",9.8,0)
9.8
"BLD",10815,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",10815,"KRN",9.8,"NM",1,0)
SAMIORM^^0^B58083008
"BLD",10815,"KRN",9.8,"NM",2,0)
SAMIHL7^^0^B89410050
"BLD",10815,"KRN",9.8,"NM",3,0)
SAMIORU^^0^B148973212
"BLD",10815,"KRN",9.8,"NM","B","SAMIHL7",2)

"BLD",10815,"KRN",9.8,"NM","B","SAMIORM",1)

"BLD",10815,"KRN",9.8,"NM","B","SAMIORU",3)

"BLD",10815,"KRN",19,0)
19
"BLD",10815,"KRN",19.1,0)
19.1
"BLD",10815,"KRN",101,0)
101
"BLD",10815,"KRN",101,"NM",0)
^9.68A^2^2
"BLD",10815,"KRN",101,"NM",1,0)
PHX ENROLL ORU EVN^^0
"BLD",10815,"KRN",101,"NM",2,0)
PHX ENROLL ORU RECV^^0
"BLD",10815,"KRN",101,"NM","B","PHX ENROLL ORU EVN",1)

"BLD",10815,"KRN",101,"NM","B","PHX ENROLL ORU RECV",2)

"BLD",10815,"KRN",409.61,0)
409.61
"BLD",10815,"KRN",771,0)
771
"BLD",10815,"KRN",771,"NM",0)
^9.68A^2^2
"BLD",10815,"KRN",771,"NM",1,0)
PHX ORU SEND^^0
"BLD",10815,"KRN",771,"NM",2,0)
PHX ORU RECV^^0
"BLD",10815,"KRN",771,"NM","B","PHX ORU RECV",2)

"BLD",10815,"KRN",771,"NM","B","PHX ORU SEND",1)

"BLD",10815,"KRN",779.2,0)
779.2
"BLD",10815,"KRN",870,0)
870
"BLD",10815,"KRN",870,"NM",0)
^9.68A^1^1
"BLD",10815,"KRN",870,"NM",1,0)
PHX ORU^^0
"BLD",10815,"KRN",870,"NM","B","PHX ORU",1)

"BLD",10815,"KRN",8989.51,0)
8989.51
"BLD",10815,"KRN",8989.52,0)
8989.52
"BLD",10815,"KRN",8994,0)
8994
"BLD",10815,"KRN","B",.4,.4)

"BLD",10815,"KRN","B",.401,.401)

"BLD",10815,"KRN","B",.402,.402)

"BLD",10815,"KRN","B",.403,.403)

"BLD",10815,"KRN","B",.5,.5)

"BLD",10815,"KRN","B",.84,.84)

"BLD",10815,"KRN","B",1.5,1.5)

"BLD",10815,"KRN","B",1.6,1.6)

"BLD",10815,"KRN","B",1.61,1.61)

"BLD",10815,"KRN","B",1.62,1.62)

"BLD",10815,"KRN","B",3.6,3.6)

"BLD",10815,"KRN","B",3.8,3.8)

"BLD",10815,"KRN","B",9.2,9.2)

"BLD",10815,"KRN","B",9.8,9.8)

"BLD",10815,"KRN","B",19,19)

"BLD",10815,"KRN","B",19.1,19.1)

"BLD",10815,"KRN","B",101,101)

"BLD",10815,"KRN","B",409.61,409.61)

"BLD",10815,"KRN","B",771,771)

"BLD",10815,"KRN","B",779.2,779.2)

"BLD",10815,"KRN","B",870,870)

"BLD",10815,"KRN","B",8989.51,8989.51)

"BLD",10815,"KRN","B",8989.52,8989.52)

"BLD",10815,"KRN","B",8994,8994)

"BLD",10815,"QUES",0)
^9.62^^
"KRN",101,6676,-1)
0^1
"KRN",101,6676,0)
PHX ENROLL ORU EVN^^^E^^^^^^^^
"KRN",101,6676,770)
PHX ORU SEND^^ORU^R01^^^^AL^NE^2.3^
"KRN",101,6676,775,0)
^101.0775PA^1^1
"KRN",101,6676,775,1,0)
6677
"KRN",101,6676,775,1,"^")
PHX ENROLL ORU RECV
"KRN",101,6677,-1)
0^2
"KRN",101,6677,0)
PHX ENROLL ORU RECV^^^S^^^^^^^^
"KRN",101,6677,770)
^PHX ORU RECV^^R01^^^PHX ORU^^^^ACK
"KRN",101,6677,773)
1^1
"KRN",771,264,-1)
0^1
"KRN",771,264,0)
PHX ORU SEND^a^VAPALS^^^^USA
"KRN",771,264,"EC")
^~\&
"KRN",771,264,"FS")
|
"KRN",771,265,-1)
0^2
"KRN",771,265,0)
PHX ORU RECV^a^VISTA^^^^USA
"KRN",771,265,"EC")
^~\&
"KRN",771,265,"FS")
|
"KRN",870,159,-1)
0^1
"KRN",870,159,0)
PHX ORU^PHOENIX^TCP^^^^^^^^^^^^^^^^^^10
"KRN",870,159,200)
^3^^120^120^^^^^I
"KRN",870,159,400)
54.190.168.134^5000^C^N^^^^^
"MBREQ")
0
"ORD",13,870)
870;13;1;;HLLL^XPDTA1;;HLLLE^XPDIA1;;;HLLLDEL^XPDIA1(%)
"ORD",13,870,0)
HL LOGICAL LINK
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","SAMIHL7")
0^2^B89410050
"RTN","SAMIHL7",1,0)
SAMIHL7 ;SAMI/lgc/arc - HL7 UTILITIES ;Jul 29, 2020@08:41
"RTN","SAMIHL7",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIHL7",3,0)
 ;
"RTN","SAMIHL7",4,0)
 quit ; not from top
"RTN","SAMIHL7",5,0)
 ;
"RTN","SAMIHL7",6,0)
 ; example incoming fields array
"RTN","SAMIHL7",7,0)
 ;
"RTN","SAMIHL7",8,0)
 ;fields("PID","segment")="PID|1||000002341||ZZTEST^MACHO^^^^^L||19271106000000|M|||7726 W ORCHID ST^^PHOENIX^AZ^85017||||||||000002341|"
"RTN","SAMIHL7",9,0)
 ;fields("PIV","segment")="PV1||O|PHX-PULM RN LSS PHONE|||||244088^GARCIA^DANIEL^P"
"RTN","SAMIHL7",10,0)
 ;fields("OBR","segment")="OBR||||PHO_LUNG^LUNG|"
"RTN","SAMIHL7",11,0)
 ;fields("ORC","segment")="ORC|NW|3200616135751|||NW||||20200616135751||||||20200616135751"
"RTN","SAMIHL7",12,0)
 ;
"RTN","SAMIHL7",13,0)
 ;fields("ORM",6799278.886493,"assignedlocation")="PHX-PULM RN LSS PHONE"
"RTN","SAMIHL7",14,0)
 ;fields("ORM",6799278.886493,"fulladdress")="7726 W ORCHID ST^^PHOENIX^AZ^85017"
"RTN","SAMIHL7",15,0)
 ;fields("ORM",6799278.886493,"msgid")="99000023ORM"
"RTN","SAMIHL7",16,0)
 ;fields("ORM",6799278.886493,"order")="PHO_LUNG"
"RTN","SAMIHL7",17,0)
 ;fields("ORM",6799278.886493,"order2")="LUNG"
"RTN","SAMIHL7",18,0)
 ;fields("ORM",6799278.886493,"ordercontrol")="NW"
"RTN","SAMIHL7",19,0)
 ;fields("ORM",6799278.886493,"ordereffectivedt")=20200616135751
"RTN","SAMIHL7",20,0)
 ;fields("ORM",6799278.886493,"ordernumber")=3200616135751
"RTN","SAMIHL7",21,0)
 ;fields("ORM",6799278.886493,"orderstatus")="NW"
"RTN","SAMIHL7",22,0)
 ;fields("ORM",6799278.886493,"patientclass")="O"
"RTN","SAMIHL7",23,0)
 ;fields("ORM",6799278.886493,"providerien")=244088
"RTN","SAMIHL7",24,0)
 ;fields("ORM",6799278.886493,"providernm")="GARCIA,DANIEL,P"
"RTN","SAMIHL7",25,0)
 ;fields("ORM",6799278.886493,"siteid")="PHO"
"RTN","SAMIHL7",26,0)
 ;fields("ORM",6799278.886493,"transactiondt")=20200616135751
"RTN","SAMIHL7",27,0)
 ;
"RTN","SAMIHL7",28,0)
 ; fields("address1")="7726 W ORCHID ST"
"RTN","SAMIHL7",29,0)
 ; fields("city")="PHOENIX"
"RTN","SAMIHL7",30,0)
 ; fields("icn")=""
"RTN","SAMIHL7",31,0)
 ; fields("last5")="Z2341"
"RTN","SAMIHL7",32,0)
 ; fields("phone")=""
"RTN","SAMIHL7",33,0)
 ; fields("saminame")="Zztest,Macho"
"RTN","SAMIHL7",34,0)
 ; fields("sbdob")=19271106000000
"RTN","SAMIHL7",35,0)
 ; fields("sex")="M"
"RTN","SAMIHL7",36,0)
 ; fields("sinamef")="Macho"
"RTN","SAMIHL7",37,0)
 ; fields("sinamel")="Zztest"
"RTN","SAMIHL7",38,0)
 ; fields("siteid")="PHO"
"RTN","SAMIHL7",39,0)
 ; fields("ssn")="000002341"
"RTN","SAMIHL7",40,0)
 ; fields("state")="AZ"
"RTN","SAMIHL7",41,0)
 ; fields("zip")=85017
"RTN","SAMIHL7",42,0)
 ;
"RTN","SAMIHL7",43,0)
 ;
"RTN","SAMIHL7",44,0)
 ;@ppi
"RTN","SAMIHL7",45,0)
UPDTPTL(fields) ;
"RTN","SAMIHL7",46,0)
 ; Update patient-lookup with a patient fields array
"RTN","SAMIHL7",47,0)
 ;@input
"RTN","SAMIHL7",48,0)
 ;   fields  = array of patient data
"RTN","SAMIHL7",49,0)
 ;@output
"RTN","SAMIHL7",50,0)
 ;   existing entry in patient-lookup graph updated
"RTN","SAMIHL7",51,0)
 ;     or new patient entered
"RTN","SAMIHL7",52,0)
 ;
"RTN","SAMIHL7",53,0)
 kill ^KBAP("SAMIHL7")
"RTN","SAMIHL7",54,0)
 set ^KBAP("SAMIHL7","UPDTPTL")=""
"RTN","SAMIHL7",55,0)
 ;
"RTN","SAMIHL7",56,0)
 ; bail if we didn't get a fields array
"RTN","SAMIHL7",57,0)
 quit:'$data(fields)
"RTN","SAMIHL7",58,0)
 ;
"RTN","SAMIHL7",59,0)
UPDTPTL1 ;
"RTN","SAMIHL7",60,0)
 ;
"RTN","SAMIHL7",61,0)
 set ^KBAP("SAMIHL7","UPDTPTL1")=""
"RTN","SAMIHL7",62,0)
 ;
"RTN","SAMIHL7",63,0)
 new rootpl s rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIHL7",64,0)
 new ptienssn,ptiennm,ptiendob,ptienssntmp
"RTN","SAMIHL7",65,0)
 set (ptienssn,ptiennm,ptiendob,ptienssntmp)=0
"RTN","SAMIHL7",66,0)
 new ptien,newpat set ptien=0,newpat=1
"RTN","SAMIHL7",67,0)
 ;
"RTN","SAMIHL7",68,0)
 ; Look for the existing patients with matching ssn.
"RTN","SAMIHL7",69,0)
 ;  if one has a matching name we don't make a new patient
"RTN","SAMIHL7",70,0)
 ;  but rather update the existing with changelog
"RTN","SAMIHL7",71,0)
 ;
"RTN","SAMIHL7",72,0)
 if $length($get(fields("ssn"))),$data(@rootpl@("ssn",$get(fields("ssn")))) do
"RTN","SAMIHL7",73,0)
 . set ptienssntmp=$order(@rootpl@("ssn",$get(fields("ssn")),0))
"RTN","SAMIHL7",74,0)
 . for  set ptienssn=$order(@rootpl@("ssn",$get(fields("ssn")),ptienssn)) quit:'ptienssn  do  quit:ptiennm
"RTN","SAMIHL7",75,0)
 .. if $length($get(fields("saminame"))),(@rootpl@(ptienssn,"saminame")=fields("saminame")) do
"RTN","SAMIHL7",76,0)
 ... set ptiennm=ptienssn
"RTN","SAMIHL7",77,0)
 ;
"RTN","SAMIHL7",78,0)
 set ^KBAP("SAMIHL7","UPDTPTL1","A")=""
"RTN","SAMIHL7",79,0)
 ;
"RTN","SAMIHL7",80,0)
 if ptienssn,ptiennm do
"RTN","SAMIHL7",81,0)
 . new fixdob s fixdob=@rootpl@(ptienssn,"sbdob")
"RTN","SAMIHL7",82,0)
 . set fixdob=$piece(fixdob,"-")_"-"_$tr($j($piece(fixdob,"-",2),2)," ","0")_"-"_$tr($j($piece(fixdob,"-",3),2)," ","0")
"RTN","SAMIHL7",83,0)
 . if $length($get(fields("sbdob"))),(fixdob=fields("sbdob")) set ptiendob=ptienssn
"RTN","SAMIHL7",84,0)
 . s newpat=0,ptien=ptienssn
"RTN","SAMIHL7",85,0)
 ;
"RTN","SAMIHL7",86,0)
 ;
"RTN","SAMIHL7",87,0)
 set ^KBAP("SAMIHL7","UPDTPTL1","B")=""
"RTN","SAMIHL7",88,0)
 ;
"RTN","SAMIHL7",89,0)
 ; if there was no name match, restore ptienssn to the first ssn cross ref match
"RTN","SAMIHL7",90,0)
 set:'ptienssn ptienssn=ptienssntmp
"RTN","SAMIHL7",91,0)
 ;
"RTN","SAMIHL7",92,0)
 ;  if existing patient save existing data
"RTN","SAMIHL7",93,0)
 new oldarr
"RTN","SAMIHL7",94,0)
 if ptien merge oldarr=@rootpl@(ptien)
"RTN","SAMIHL7",95,0)
 ;
"RTN","SAMIHL7",96,0)
 ;
"RTN","SAMIHL7",97,0)
 set ^KBAP("SAMIHL7","UPDTPTL1","C")=""
"RTN","SAMIHL7",98,0)
 ;
"RTN","SAMIHL7",99,0)
 ; If a new patient get the next ptien to use and set dfn
"RTN","SAMIHL7",100,0)
 if '$get(ptien) do
"RTN","SAMIHL7",101,0)
 . set ptien=$order(@rootpl@(999999999),-1)+1
"RTN","SAMIHL7",102,0)
 . set fields("dfn")=ptien
"RTN","SAMIHL7",103,0)
 . set newpat=1
"RTN","SAMIHL7",104,0)
 ;
"RTN","SAMIHL7",105,0)
 ;
"RTN","SAMIHL7",106,0)
 set ^KBAP("SAMIHL7","UPDTPTL1","D")=""
"RTN","SAMIHL7",107,0)
 ;
"RTN","SAMIHL7",108,0)
 set ^KBAP("SAMIHL7","ptien","newpat")=$get(ptien)_"^"_$get(newpat)
"RTN","SAMIHL7",109,0)
 set ^KBAP("SAMIHL7","fields(dfn)")=$get(fields("dfn"))
"RTN","SAMIHL7",110,0)
 ;
"RTN","SAMIHL7",111,0)
 ; bail if for some reason we didn't get a next patient ien
"RTN","SAMIHL7",112,0)
 quit:'ptien
"RTN","SAMIHL7",113,0)
 ;
"RTN","SAMIHL7",114,0)
 merge ^KBAP("SAMIHL7","fields")=fields
"RTN","SAMIHL7",115,0)
 set ^KBAP("SAMIHL7","ptien")=$get(ptien)
"RTN","SAMIHL7",116,0)
 ;
"RTN","SAMIHL7",117,0)
 ;
"RTN","SAMIHL7",118,0)
 ; Build MATCHLOG
"RTN","SAMIHL7",119,0)
 ;  If we are adding a new patient check whether we had a
"RTN","SAMIHL7",120,0)
 ;   match for ssn or name on an existing patient (with
"RTN","SAMIHL7",121,0)
 ;   precedence to the ssn).  If so set MATCHLOG equal
"RTN","SAMIHL7",122,0)
 ;   to the new patient ien and add the index to the
"RTN","SAMIHL7",123,0)
 ;   previously existing patient.
"RTN","SAMIHL7",124,0)
MATCHLOG ;
"RTN","SAMIHL7",125,0)
 new newptien,var set newptien=""
"RTN","SAMIHL7",126,0)
 if newpat do
"RTN","SAMIHL7",127,0)
 . set newptien=ptien ; ien of the new patient being added
"RTN","SAMIHL7",128,0)
 .;
"RTN","SAMIHL7",129,0)
 .; if there were 1 or more existing entries with this ssn, set MATCHLOG
"RTN","SAMIHL7",130,0)
 .;
"RTN","SAMIHL7",131,0)
 . if ptienssn do  quit
"RTN","SAMIHL7",132,0)
 .. new ssnien s ssnien=0
"RTN","SAMIHL7",133,0)
 .. for  s ssnien=$order(@rootpl@("ssn",$get(fields("ssn")),ssnien)) q:'ssnien  d
"RTN","SAMIHL7",134,0)
 ... set @rootpl@(ssnien,"HL7MATCHLOG")=newptien
"RTN","SAMIHL7",135,0)
 ... set @rootpl@("HL7MATCHLOG",ssnien,newptien)=""
"RTN","SAMIHL7",136,0)
 ... U $P write !,"HL7MATCHLOG ssn","--- ssnien=",ssnien,"--- newptien=",newptien
"RTN","SAMIHL7",137,0)
 .;
"RTN","SAMIHL7",138,0)
 .; if there were 1 or more existing entries with this patient name, set MATCHLOG
"RTN","SAMIHL7",139,0)
 .;
"RTN","SAMIHL7",140,0)
 . if ptiennm do
"RTN","SAMIHL7",141,0)
 .. new pnien s pnien=0
"RTN","SAMIHL7",142,0)
 .. for  s pnien=$order(@rootpl@("name",$get(fields("saminame")),pnien)) q:'pnien  d
"RTN","SAMIHL7",143,0)
 ... set @rootpl@(pnien,"HL7MATCHLOG")=newptien
"RTN","SAMIHL7",144,0)
 ... set @rootpl@("HL7MATCHLOG",pnien,newptien)=""
"RTN","SAMIHL7",145,0)
 ... U $P write !,"HL7MATCHLOG name","---",pnien
"RTN","SAMIHL7",146,0)
 ;
"RTN","SAMIHL7",147,0)
 ;
"RTN","SAMIHL7",148,0)
 new field s field=""
"RTN","SAMIHL7",149,0)
 ; run through every fields subscript and set the
"RTN","SAMIHL7",150,0)
 ;   appropriate subscript patient entry in patient-lookup
"RTN","SAMIHL7",151,0)
 for  set field=$order(fields(field)) q:field=""  do
"RTN","SAMIHL7",152,0)
 .;
"RTN","SAMIHL7",153,0)
 .;new patient ====================================
"RTN","SAMIHL7",154,0)
 .; if new patient just set all patient-lookup field with
"RTN","SAMIHL7",155,0)
 .; the data in field array
"RTN","SAMIHL7",156,0)
 .; Load ORM message data later
"RTN","SAMIHL7",157,0)
 .;
"RTN","SAMIHL7",158,0)
 . if newpat do
"RTN","SAMIHL7",159,0)
 .. if field="ORM" quit
"RTN","SAMIHL7",160,0)
 .. set @rootpl@(ptien,field)=fields(field)
"RTN","SAMIHL7",161,0)
 .;
"RTN","SAMIHL7",162,0)
 .;old patient ====================================
"RTN","SAMIHL7",163,0)
  .; if not a new patient only store field results that are NOT null.
"RTN","SAMIHL7",164,0)
 .;   Never overwrite an existing patient's "dfn", rather store
"RTN","SAMIHL7",165,0)
 .;     the dfn just received in the remotedfn field
"RTN","SAMIHL7",166,0)
 .;
"RTN","SAMIHL7",167,0)
 .;   With existing patients if the new data for a field doesn't match
"RTN","SAMIHL7",168,0)
 .;     the pre-existing, save the pre-existing data in a changelog entry
"RTN","SAMIHL7",169,0)
 .;
"RTN","SAMIHL7",170,0)
 . if '$get(newpat),'(fields(field)="") do
"RTN","SAMIHL7",171,0)
 .. if field="ORM" quit
"RTN","SAMIHL7",172,0)
 .. if field="dfn" quit
"RTN","SAMIHL7",173,0)
 ..;
"RTN","SAMIHL7",174,0)
 .. if '($get(@rootpl@(ptien,field))=fields(field)) do
"RTN","SAMIHL7",175,0)
 ... set @rootpl@(ptien,"hl7changelog",$$FMTE^XLFDT($$NOW^XLFDT,5),field)=fields(field)
"RTN","SAMIHL7",176,0)
 .. set @rootpl@(ptien,field)=fields(field)
"RTN","SAMIHL7",177,0)
 .;
"RTN","SAMIHL7",178,0)
 .;indicies =========================================
"RTN","SAMIHL7",179,0)
 .;set all indicies for old and new patients for this field
"RTN","SAMIHL7",180,0)
 .; NOTE: we must kill any existing earlier idicies on previously
"RTN","SAMIHL7",181,0)
 .;existing patients to prevent duplicate pointers
"RTN","SAMIHL7",182,0)
 .;
"RTN","SAMIHL7",183,0)
 . if $get(fields(field))="" quit
"RTN","SAMIHL7",184,0)
 .;
"RTN","SAMIHL7",185,0)
 .; field=dfn =====================================
"RTN","SAMIHL7",186,0)
 . if field="dfn" do
"RTN","SAMIHL7",187,0)
 .. if newpat do
"RTN","SAMIHL7",188,0)
 ... set @rootpl@("dfn",fields(field),ptien)=""
"RTN","SAMIHL7",189,0)
 ..;
"RTN","SAMIHL7",190,0)
 .; As DID NOT get DFN from the VA server (only ssn)
"RTN","SAMIHL7",191,0)
 .;  we cannot set the "remotedfn" field
"RTN","SAMIHL7",192,0)
 . set @rootpl@(ptien,"remotedfn")=""
"RTN","SAMIHL7",193,0)
 .;
"RTN","SAMIHL7",194,0)
 .; field=icn =====================================
"RTN","SAMIHL7",195,0)
 . if field="icn" do
"RTN","SAMIHL7",196,0)
 .. set @rootpl@("icn",fields(field),ptien)=""
"RTN","SAMIHL7",197,0)
 .;
"RTN","SAMIHL7",198,0)
 .; field=last5 ===================================
"RTN","SAMIHL7",199,0)
 . if field="last5" do
"RTN","SAMIHL7",200,0)
 .. if '$get(newpat) do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",201,0)
 .. set @rootpl@("last5",fields(field),ptien)="" quit
"RTN","SAMIHL7",202,0)
 .;
"RTN","SAMIHL7",203,0)
 .; field=saminame ================================
"RTN","SAMIHL7",204,0)
 . if field="saminame" do
"RTN","SAMIHL7",205,0)
 .. if '$get(newpat) do
"RTN","SAMIHL7",206,0)
 ... do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",207,0)
 ... do KILLREF("name",$get(oldarr("name")),ptien)
"RTN","SAMIHL7",208,0)
 ... do KILLREF("name",$$UP^XLFSTR($get(oldarr("name"))),ptien)
"RTN","SAMIHL7",209,0)
 .. set @rootpl@("name",fields(field),ptien)=""
"RTN","SAMIHL7",210,0)
 .. set @rootpl@("saminame",fields(field),ptien)=""
"RTN","SAMIHL7",211,0)
 .. set @rootpl@("name",$$UP^XLFSTR(fields(field)),ptien)=""
"RTN","SAMIHL7",212,0)
 .;
"RTN","SAMIHL7",213,0)
 .; field=sinamef ==================================
"RTN","SAMIHL7",214,0)
 . if field="sinamef" do
"RTN","SAMIHL7",215,0)
 .. i '$get(newpat) do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",216,0)
 .. set @rootpl@(field,fields(field),ptien)=""
"RTN","SAMIHL7",217,0)
 .;
"RTN","SAMIHL7",218,0)
 .; field=sinamel ==================================
"RTN","SAMIHL7",219,0)
 . if field="sinamel" do
"RTN","SAMIHL7",220,0)
 .. if '$get(newpat) do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",221,0)
 .. set @rootpl@(field,fields(field),ptien)=""
"RTN","SAMIHL7",222,0)
 .;
"RTN","SAMIHL7",223,0)
 .; field=ssn ======================================
"RTN","SAMIHL7",224,0)
 . if field="ssn" do
"RTN","SAMIHL7",225,0)
 .. if '$get(newpat) do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",226,0)
 .. set @rootpl@(field,fields(field),ptien)=""
"RTN","SAMIHL7",227,0)
 ;
"RTN","SAMIHL7",228,0)
 ;
"RTN","SAMIHL7",229,0)
 set @rootpl@("Date Last Updated")=$$HTE^XLFDT($horolog)
"RTN","SAMIHL7",230,0)
 ;
"RTN","SAMIHL7",231,0)
 ; set so SAMIORM can use ptien to file HL7 messages
"RTN","SAMIHL7",232,0)
 set fields("ptien")=$get(ptien)
"RTN","SAMIHL7",233,0)
 ;
"RTN","SAMIHL7",234,0)
 ; now capture most recent ORM message
"RTN","SAMIHL7",235,0)
 do CAPTORM(.fields,rootpl,ptien)
"RTN","SAMIHL7",236,0)
 ;
"RTN","SAMIHL7",237,0)
 merge ^KBAP("SAMIHL7","fields")=fields
"RTN","SAMIHL7",238,0)
 ;
"RTN","SAMIHL7",239,0)
 quit
"RTN","SAMIHL7",240,0)
 ;
"RTN","SAMIHL7",241,0)
 ;
"RTN","SAMIHL7",242,0)
CAPTORM(fields,rootpl,ptien) ; Save all ORM fields in patient-lookup
"RTN","SAMIHL7",243,0)
 new node,snode,invdt
"RTN","SAMIHL7",244,0)
 set node=$na(fields("ORM")),snode=$p(node,")")
"RTN","SAMIHL7",245,0)
 for  set node=$Q(@node) q:node'[snode  do
"RTN","SAMIHL7",246,0)
 . set invdt=$QS(node,2)
"RTN","SAMIHL7",247,0)
 . set @rootpl@(ptien,"ORM",invdt,$QS(node,3))=@node
"RTN","SAMIHL7",248,0)
 quit
"RTN","SAMIHL7",249,0)
 ;
"RTN","SAMIHL7",250,0)
KILLREF(field,oldrslt,ptien) ;
"RTN","SAMIHL7",251,0)
 ;
"RTN","SAMIHL7",252,0)
 quit:($get(oldrslt)="")
"RTN","SAMIHL7",253,0)
 kill @rootpl@(field,oldrslt,ptien)
"RTN","SAMIHL7",254,0)
 quit
"RTN","SAMIHL7",255,0)
 ;
"RTN","SAMIHL7",256,0)
 ;
"RTN","SAMIHL7",257,0)
 ;
"RTN","SAMIHL7",258,0)
 ;@ppi
"RTN","SAMIHL7",259,0)
 ;@input
"RTN","SAMIHL7",260,0)
 ;  Expects all HL7 variables captured on message reception to
"RTN","SAMIHL7",261,0)
 ;   be in environment
"RTN","SAMIHL7",262,0)
 ;@output
"RTN","SAMIHL7",263,0)
 ;  Sends com ACK through appropriate link
"RTN","SAMIHL7",264,0)
ACK ;Force a com ACK
"RTN","SAMIHL7",265,0)
 ;
"RTN","SAMIHL7",266,0)
 kill HLA("HLA")
"RTN","SAMIHL7",267,0)
 set HLA("HLA",1)="MSA"_HLREC("FS")_"CA"_HLREC("FS")_HLREC("MID")
"RTN","SAMIHL7",268,0)
 ;
"RTN","SAMIHL7",269,0)
 I $D(HLA("HLA")) S HLP("NAMESPACE")="HL" D  quit
"RTN","SAMIHL7",270,0)
 . merge ^KBAP("SAMIHL7","HLA")=HLA
"RTN","SAMIHL7",271,0)
 . D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.HLMTIENA,"",.HLP)
"RTN","SAMIHL7",272,0)
 ;
"RTN","SAMIHL7",273,0)
 ;
"RTN","SAMIHL7",274,0)
EOR ;End of routine SAMIHL7
"RTN","SAMIORM")
0^1^B58083008
"RTN","SAMIORM",1,0)
SAMIORM ;ven/arc/lgc - parse ORM to update  patient-lookup graph ;Jul 30, 2020@10:47
"RTN","SAMIORM",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIORM",3,0)
 ;
"RTN","SAMIORM",4,0)
 quit  ; No entry from top
"RTN","SAMIORM",5,0)
 ;
"RTN","SAMIORM",6,0)
 ;@license: see routine SAMIUL
"RTN","SAMIORM",7,0)
 ;
"RTN","SAMIORM",8,0)
 ; @section 0 primary development
"RTN","SAMIORM",9,0)
 ;
"RTN","SAMIORM",10,0)
 ; @routine-credits
"RTN","SAMIORM",11,0)
 ; @primary-dev:
"RTN","SAMIORM",12,0)
 ;   Alexis Carlson (arc)
"RTN","SAMIORM",13,0)
 ;     alexis.carlson@vistaexpertise.net
"RTN","SAMIORM",14,0)
 ;   Larry "poo" Carlson (lgc)
"RTN","SAMIORM",15,0)
 ;     larry@fiscientific.com
"RTN","SAMIORM",16,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIORM",17,0)
 ;   http://vistaexpertise.net
"RTN","SAMIORM",18,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIORM",19,0)
 ; @license: Apache 2.0
"RTN","SAMIORM",20,0)
 ;   https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIORM",21,0)
 ;
"RTN","SAMIORM",22,0)
 ; @last-updated: 2019-07-31T16:56Z
"RTN","SAMIORM",23,0)
 ; @application: SAMI
"RTN","SAMIORM",24,0)
 ; @version: 18.0
"RTN","SAMIORM",25,0)
 ; @patch-list: none yet
"RTN","SAMIORM",26,0)
 ;
"RTN","SAMIORM",27,0)
 ; @to-do
"RTN","SAMIORM",28,0)
 ;   Add label comments
"RTN","SAMIORM",29,0)
 ;
"RTN","SAMIORM",30,0)
 ; @change-log
"RTN","SAMIORM",31,0)
 ;
"RTN","SAMIORM",32,0)
 ; @section 1 code
"RTN","SAMIORM",33,0)
 ;
"RTN","SAMIORM",34,0)
 ; SAMIORM parses out an incoming ORM message into the
"RTN","SAMIORM",35,0)
 ;   fields array and then calls ORMHL7 to use the fields
"RTN","SAMIORM",36,0)
 ;   array to update patient-lookup graph
"RTN","SAMIORM",37,0)
 ;
"RTN","SAMIORM",38,0)
EN ; ORM message parsed into patient-lookup graph
"RTN","SAMIORM",39,0)
 ;
"RTN","SAMIORM",40,0)
 kill ^KBAP("SAMIORM")
"RTN","SAMIORM",41,0)
 set ^KBAP("SAMIORM","EN")=$$HTFM^XLFDT($H)_" TEST"
"RTN","SAMIORM",42,0)
 ;
"RTN","SAMIORM",43,0)
 ; Immediately return COMM ACK  ***** TMP TURNED OFF
"RTN","SAMIORM",44,0)
 do ACK^SAMIHL7
"RTN","SAMIORM",45,0)
 ;
"RTN","SAMIORM",46,0)
 ;
"RTN","SAMIORM",47,0)
BLDARR ; pull out message into array
"RTN","SAMIORM",48,0)
 ;
"RTN","SAMIORM",49,0)
 new HLARR,cnt,samihl7,invdt
"RTN","SAMIORM",50,0)
 set invdt=(9999999.9999-$$HTFM^XLFDT($H))
"RTN","SAMIORM",51,0)
 for  xecute HLNEXT quit:$get(HLNODE)=""  do
"RTN","SAMIORM",52,0)
 . set cnt=$get(cnt)+1
"RTN","SAMIORM",53,0)
 . set HLARR(cnt)=HLNODE
"RTN","SAMIORM",54,0)
 . set samihl7(cnt)=HLNODE
"RTN","SAMIORM",55,0)
 ;
"RTN","SAMIORM",56,0)
 kill ^KBAP("SAMIORM","BLDARR")
"RTN","SAMIORM",57,0)
 merge ^KBAP("SAMIORM","BLDARR","HLARR")=HLARR
"RTN","SAMIORM",58,0)
 ;
"RTN","SAMIORM",59,0)
DEBUG ;do ^ZTER
"RTN","SAMIORM",60,0)
 ;
"RTN","SAMIORM",61,0)
 new fields
"RTN","SAMIORM",62,0)
 set fields("ORM",invdt,"msgid")=$get(HLREC("MID"))
"RTN","SAMIORM",63,0)
 ;
"RTN","SAMIORM",64,0)
 new INFS set INFS=$G(HL("FS"))
"RTN","SAMIORM",65,0)
 new INCC set INCC=$E($G(HL("ECH")))
"RTN","SAMIORM",66,0)
 ;
"RTN","SAMIORM",67,0)
PMSG do PARSEMSG(.HLARR,.fields)
"RTN","SAMIORM",68,0)
 ;
"RTN","SAMIORM",69,0)
 merge ^KBAP("SAMIORM","samihl7")=samihl7
"RTN","SAMIORM",70,0)
 merge ^KBaP("SAMIORM","fields")=fields
"RTN","SAMIORM",71,0)
 ;
"RTN","SAMIORM",72,0)
 ;  update patient-lookup graph
"RTN","SAMIORM",73,0)
UPDTPTL do UPDTPTL^SAMIHL7(.fields)
"RTN","SAMIORM",74,0)
 ;
"RTN","SAMIORM",75,0)
 merge ^KBAP("SAMIORM","fields")=fields
"RTN","SAMIORM",76,0)
 ;
"RTN","SAMIORM",77,0)
 ; At this point the fields have been filed in the patient
"RTN","SAMIORM",78,0)
 ;   with ptien into the patient lookup graph.
"RTN","SAMIORM",79,0)
 ; I have the ptien in fields("ptien") and I have the HL7
"RTN","SAMIORM",80,0)
 ;   message segments in samihl7
"RTN","SAMIORM",81,0)
 ; Time to file the message into patient lookup
"RTN","SAMIORM",82,0)
 new ptien set ptien=$get(fields("ptien"))
"RTN","SAMIORM",83,0)
 if ptien do
"RTN","SAMIORM",84,0)
 . new rootpl,hl7cnt,cnt,seg
"RTN","SAMIORM",85,0)
 . set rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIORM",86,0)
 . set hl7cnt=$get(@rootpl@(ptien,"hl7 counter"))+1
"RTN","SAMIORM",87,0)
 . set @rootpl@(ptien,"hl7 counter")=hl7cnt
"RTN","SAMIORM",88,0)
 . set cnt=0
"RTN","SAMIORM",89,0)
 . for  set cnt=$order(samihl7(cnt)) quit:'cnt  do
"RTN","SAMIORM",90,0)
 .. set seg=$extract(samihl7(cnt),1,3)
"RTN","SAMIORM",91,0)
 .. set @rootpl@(ptien,"hl7",hl7cnt,seg)=samihl7(cnt)
"RTN","SAMIORM",92,0)
 ;
"RTN","SAMIORM",93,0)
 quit  ; End entry point EN
"RTN","SAMIORM",94,0)
 ;
"RTN","SAMIORM",95,0)
 ;
"RTN","SAMIORM",96,0)
PARSEMSG(HLARR,fields) ;
"RTN","SAMIORM",97,0)
 set ^KBAP("SAMIORM","PARSEMSG","INFS")=$get(INFS)
"RTN","SAMIORM",98,0)
 set ^KBAP("SAMIORM","PARSEMSG","INCC")=$get(INCC)
"RTN","SAMIORM",99,0)
 ; Pull patient data from ORM message
"RTN","SAMIORM",100,0)
 new cnt s cnt=0
"RTN","SAMIORM",101,0)
 for  set cnt=$order(HLARR(cnt)) quit:'cnt  do
"RTN","SAMIORM",102,0)
 . set segment=HLARR(cnt)
"RTN","SAMIORM",103,0)
 . new SEG set SEG=$piece(HLARR(cnt),HL("FS"))
"RTN","SAMIORM",104,0)
 . if SEG="PID" do PID(segment,.fields)
"RTN","SAMIORM",105,0)
 . if SEG="PV1" do PV1(segment,.fields)
"RTN","SAMIORM",106,0)
 . if SEG="ORC" do ORC(segment,.fields)
"RTN","SAMIORM",107,0)
 . if SEG="OBR" do OBR(segment,.fields)
"RTN","SAMIORM",108,0)
 ;
"RTN","SAMIORM",109,0)
 merge ^KBAP("SAMIORM","fields")=fields
"RTN","SAMIORM",110,0)
 quit
"RTN","SAMIORM",111,0)
 ;
"RTN","SAMIORM",112,0)
 ;
"RTN","SAMIORM",113,0)
PID(segment,fields) ;
"RTN","SAMIORM",114,0)
 ;
"RTN","SAMIORM",115,0)
 set ^KBAP("SAMIORM","fields","PID","segment")=segment
"RTN","SAMIORM",116,0)
 ;
"RTN","SAMIORM",117,0)
 new name,fname,lname,mname
"RTN","SAMIORM",118,0)
 set fields("icn")=""
"RTN","SAMIORM",119,0)
 set fields("ssn")=$piece($piece(segment,INFS,4),INCC)
"RTN","SAMIORM",120,0)
 ;
"RTN","SAMIORM",121,0)
 set name=$piece(segment,INFS,6)
"RTN","SAMIORM",122,0)
 set lname=$$CAMELCAS($piece(name,INCC,1))
"RTN","SAMIORM",123,0)
 set fname=$$CAMELCAS($piece(name,INCC,2))
"RTN","SAMIORM",124,0)
 set mname=""
"RTN","SAMIORM",125,0)
 if $length($piece(segment,INFS,6),INCC)>2 do
"RTN","SAMIORM",126,0)
 . set mname=$$CAMELCAS($piece($piece(segment,INFS,6),INCC,3))
"RTN","SAMIORM",127,0)
 ;
"RTN","SAMIORM",128,0)
 set name=lname_","_fname
"RTN","SAMIORM",129,0)
 if $length(mname) do
"RTN","SAMIORM",130,0)
 . set name=name_" "_mname
"RTN","SAMIORM",131,0)
 set fields("saminame")=name
"RTN","SAMIORM",132,0)
 set fields("sinamef")=$piece(name,",",2)
"RTN","SAMIORM",133,0)
 set fields("sinamel")=$piece(name,",")
"RTN","SAMIORM",134,0)
 ;
"RTN","SAMIORM",135,0)
 if $length(fields("ssn")),$length(fields("saminame")) do
"RTN","SAMIORM",136,0)
 . set fields("last5")=$$UP^XLFSTR($extract(fields("saminame")))_$extract(fields("ssn"),6,9)
"RTN","SAMIORM",137,0)
 . set ^KBAP("SAMIORM","MadeLast5")=$get(fields("last5"))
"RTN","SAMIORM",138,0)
 ;
"RTN","SAMIORM",139,0)
 set fields("sbdob")=$piece(segment,INFS,8)
"RTN","SAMIORM",140,0)
 set fields("sex")=$piece(segment,INFS,9)
"RTN","SAMIORM",141,0)
 ;
"RTN","SAMIORM",142,0)
ORMADDR set fields("ORM",invdt,"fulladdress")=$piece(segment,INFS,12)
"RTN","SAMIORM",143,0)
 ;
"RTN","SAMIORM",144,0)
 set fields("address1")=$piece($piece(segment,INFS,12),INCC)
"RTN","SAMIORM",145,0)
 set fields("city")=$piece($piece(segment,INFS,12),INCC,3)
"RTN","SAMIORM",146,0)
 set fields("state")=$piece($piece(segment,INFS,12),INCC,4)
"RTN","SAMIORM",147,0)
 set fields("zip")=$piece($piece(segment,INFS,12),INCC,5)
"RTN","SAMIORM",148,0)
 set fields("phone")=$piece(segment,INFS,14)
"RTN","SAMIORM",149,0)
 ;set fields("ssn")=$piece(segment,INFS,20)
"RTN","SAMIORM",150,0)
 quit
"RTN","SAMIORM",151,0)
 ;
"RTN","SAMIORM",152,0)
PV1(segment,fields) ;
"RTN","SAMIORM",153,0)
 ;
"RTN","SAMIORM",154,0)
 set ^KBAP("SAMIORM","fields","PIV","segment")=segment
"RTN","SAMIORM",155,0)
 ;
"RTN","SAMIORM",156,0)
 set fields("ORM",invdt,"patientclass")=$piece(segment,INFS,3)
"RTN","SAMIORM",157,0)
 set fields("ORM",invdt,"assignedlocation")=$piece(segment,INFS,4)
"RTN","SAMIORM",158,0)
 set fields("ORM",invdt,"providerien")=$piece($piece(segment,INFS,9),INCC)
"RTN","SAMIORM",159,0)
 set fields("ORM",invdt,"providernm")=$tr($piece($piece(segment,INFS,9),INCC,2,4),"^",",")
"RTN","SAMIORM",160,0)
 quit
"RTN","SAMIORM",161,0)
 ;
"RTN","SAMIORM",162,0)
ORC(segment,fields) ;
"RTN","SAMIORM",163,0)
 ;
"RTN","SAMIORM",164,0)
 set ^KBAP("SAMIORM","fields","ORC","segment")=segment
"RTN","SAMIORM",165,0)
 ;
"RTN","SAMIORM",166,0)
 set fields("ORM",invdt,"ordercontrol")=$piece(segment,INFS,2)
"RTN","SAMIORM",167,0)
 set fields("ORM",invdt,"ordernumber")=$piece(segment,INFS,3)
"RTN","SAMIORM",168,0)
 set fields("ORM",invdt,"orderstatus")=$piece(segment,INFS,6)
"RTN","SAMIORM",169,0)
 set fields("ORM",invdt,"transactiondt")=$piece(segment,INFS,10)
"RTN","SAMIORM",170,0)
 set fields("ORM",invdt,"ordereffectivedt")=$piece(segment,INFS,16)
"RTN","SAMIORM",171,0)
 quit
"RTN","SAMIORM",172,0)
 ;
"RTN","SAMIORM",173,0)
OBR(segment,fields) ;
"RTN","SAMIORM",174,0)
 ;
"RTN","SAMIORM",175,0)
 set ^KBAP("SAMIORM","fields","OBR","segment")=segment
"RTN","SAMIORM",176,0)
 ;
"RTN","SAMIORM",177,0)
 set fields("ORM",invdt,"order")=$piece($piece(segment,INFS,5),INCC)
"RTN","SAMIORM",178,0)
 ;
"RTN","SAMIORM",179,0)
 set fields("ORM",invdt,"siteid")=$piece($piece($piece(segment,INFS,5),INCC),"_")
"RTN","SAMIORM",180,0)
 set fields("siteid")=$piece($piece($piece(segment,INFS,5),INCC),"_")
"RTN","SAMIORM",181,0)
 ;
"RTN","SAMIORM",182,0)
 set fields("ORM",invdt,"order2")=$piece($piece(segment,INFS,5),INCC,2)
"RTN","SAMIORM",183,0)
 quit
"RTN","SAMIORM",184,0)
 ;
"RTN","SAMIORM",185,0)
 ;
"RTN","SAMIORM",186,0)
CAMELCAS(str) ;
"RTN","SAMIORM",187,0)
 ;
"RTN","SAMIORM",188,0)
 if $get(str)="" quit str
"RTN","SAMIORM",189,0)
 set str=$$LOW^XLFSTR(str)
"RTN","SAMIORM",190,0)
 set str=$$UP^XLFSTR($extract(str,1))_$extract(str,2,$length(str))
"RTN","SAMIORM",191,0)
 quit str
"RTN","SAMIORM",192,0)
 ;
"RTN","SAMIORM",193,0)
TEST K HLARR
"RTN","SAMIORM",194,0)
 set HLARR(1)="MSH|^~\&|MCAR-INST|VISTA|INST-MCAR|VAPALS|20200616135751-0700||ORM^O01|6442288610689|P|2.3|||||USA"
"RTN","SAMIORM",195,0)
 set HLARR(2)="PID|1||000002341||ZZTEST^MACHO^^^^^L||19271106000000|M|||7726 W ORCHID ST^^PHOENIX^AZ^85017||||||||000002341|"
"RTN","SAMIORM",196,0)
 set HLARR(3)="PV1||O|PHX-PULM RN LSS PHONE|||||244088^GARCIA^DANIEL^P"
"RTN","SAMIORM",197,0)
 set HLARR(4)="ORC|NW|3200616135751|||NW||||20200616135751||||||20200616135751"
"RTN","SAMIORM",198,0)
 set HLARR(5)="OBR||||PHO_LUNG^LUNG|"
"RTN","SAMIORM",199,0)
 ;
"RTN","SAMIORM",200,0)
 D HLENV^SAMIORU("MCAR ORM SERVER")
"RTN","SAMIORM",201,0)
 set HLNEXT="D HLNEXT^HLCSUTL"
"RTN","SAMIORM",202,0)
 set HLQUIT=0
"RTN","SAMIORM",203,0)
 DO EN
"RTN","SAMIORM",204,0)
 quit
"RTN","SAMIORM",205,0)
 ;
"RTN","SAMIORM",206,0)
EOR ; End of routine SAMIORM
"RTN","SAMIORU")
0^3^B148973212
"RTN","SAMIORU",1,0)
SAMIORU ;ven/lgc/arc - SEND ORU ENROLLMENT RESPONSE ;Aug 11, 2020@13:26
"RTN","SAMIORU",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIORU",3,0)
 ;
"RTN","SAMIORU",4,0)
 ;NOTE: We will only be sending ORU messages out for patients
"RTN","SAMIORU",5,0)
 ;      for whom at least one ORM has been received.  Thus,
"RTN","SAMIORU",6,0)
 ;      we can trust the information stored in the patient-lookup
"RTN","SAMIORU",7,0)
 ;      graph through an incoming ORM to fill in fields of
"RTN","SAMIORU",8,0)
 ;      any ORU generated messages.
"RTN","SAMIORU",9,0)
 ;
"RTN","SAMIORU",10,0)
 quit  ;  no entry from top
"RTN","SAMIORU",11,0)
 ;
"RTN","SAMIORU",12,0)
TESTALL kill filter
"RTN","SAMIORU",13,0)
 kill OUTHL
"RTN","SAMIORU",14,0)
 ;set filter("sendprotocol")="PHX ENROLL ORU EVN"
"RTN","SAMIORU",15,0)
 set filter("sid")="PHO00015"
"RTN","SAMIORU",16,0)
 set filter("key")="siform-2020-07-30"
"RTN","SAMIORU",17,0)
 ;set filter("sid")="SEA00014"
"RTN","SAMIORU",18,0)
 ;set filter("key")="siform-2020-06-03"
"RTN","SAMIORU",19,0)
 set filter("notenmbr")=2
"RTN","SAMIORU",20,0)
 ;set filter("climit")=66
"RTN","SAMIORU",21,0)
 do EN^SAMIORU(.filter)
"RTN","SAMIORU",22,0)
 ;set poopoo=$$EN^SAMIORU(.filter)
"RTN","SAMIORU",23,0)
 quit
"RTN","SAMIORU",24,0)
 ;
"RTN","SAMIORU",25,0)
 ;
"RTN","SAMIORU",26,0)
EN(filter) ; Build and send ORU enrollment response
"RTN","SAMIORU",27,0)
 ;@input
"RTN","SAMIORU",28,0)
 ;   filter   =  array by reference
"RTN","SAMIORU",29,0)
 ;               [filter("sendprotocol")] defaults to Phoenix
"RTN","SAMIORU",30,0)
 ;               filter("sid")=sid (e.g.PHO00015)
"RTN","SAMIORU",31,0)
 ;               filter("key")=sid (e.g. "siform-2020-07-30")
"RTN","SAMIORU",32,0)
 ;               [filter("notenmbr")= e.g. 2 ]
"RTN","SAMIORU",33,0)
 ;                     number of note in vapals-patients graph
"RTN","SAMIORU",34,0)
 ;               [filter("climit")] defaults to 66
"RTN","SAMIORU",35,0)
 ;                     limit to number of characters per line
"RTN","SAMIORU",36,0)
 ;                     for text to display in CPRS
"RTN","SAMIORU",37,0)
 ;
"RTN","SAMIORU",38,0)
 ;@output
"RTN","SAMIORU",39,0)
 ;   filter("rslt")  =  contains either
"RTN","SAMIORU",40,0)
 ;                      msgid - message generated
"RTN","SAMIORU",41,0)
 ;                      0 - error
"RTN","SAMIORU",42,0)
 ;   HL7 ORU message built and sent
"RTN","SAMIORU",43,0)
 ;   NOTE: if called as function contents of filter("rslt") is
"RTN","SAMIORU",44,0)
 ;         returned directly
"RTN","SAMIORU",45,0)
 ;
"RTN","SAMIORU",46,0)
 set filter("rslt")=0
"RTN","SAMIORU",47,0)
 ;
"RTN","SAMIORU",48,0)
 new rootpl,rootvp,sid,key,SNDPROT,climit,notenmbr
"RTN","SAMIORU",49,0)
 set (rootpl,filter("rootpl"))=$$setroot^%wd("patient-lookup")
"RTN","SAMIORU",50,0)
 set (rootvp,filter("rootvp"))=$$setroot^%wd("vapals-patients")
"RTN","SAMIORU",51,0)
 ;
"RTN","SAMIORU",52,0)
 set sid=$get(filter("sid")) if sid="" do  quit:$Q filter("rslt")  quit
"RTN","SAMIORU",53,0)
 . set filter("rlst")="0^no sid provided"
"RTN","SAMIORU",54,0)
 set key=$get(filter("key")) if key="" do  quit:$Q filter("rslt")  quit
"RTN","SAMIORU",55,0)
 . set filter("rslt")="0^no key provided"
"RTN","SAMIORU",56,0)
 set SNDPROT=$get(filter("sendprotocol")) if SNDPROT="" do
"RTN","SAMIORU",57,0)
 . set (SNDPROT,filter("sendprotocol"))="PHX ENROLL ORU EVN"
"RTN","SAMIORU",58,0)
 set climit=$get(filter("climit")) if +$get(climit)=0 do
"RTN","SAMIORU",59,0)
 . set climit=66
"RTN","SAMIORU",60,0)
 set filter("Cache")=($zversion["Cache")
"RTN","SAMIORU",61,0)
 set notenmbr=+$get(filter("notenmbr"))
"RTN","SAMIORU",62,0)
 if $get(filter("Cache")),notenmbr=0 do  quit:$Q filter("rslt")  quit
"RTN","SAMIORU",63,0)
 . set filter("rslt")="0^Cache requires note number"
"RTN","SAMIORU",64,0)
 ;
"RTN","SAMIORU",65,0)
DFN ; find vpien and plien
"RTN","SAMIORU",66,0)
 new dfn,vpien,plien
"RTN","SAMIORU",67,0)
 set (dfn,vpien,filter("vpien"),filter("dfn"))=@rootvp@("graph",sid,key,"dfn")
"RTN","SAMIORU",68,0)
 set (plien,filter("plien"))=$order(@rootpl@("dfn",vpien,0))
"RTN","SAMIORU",69,0)
 ;
"RTN","SAMIORU",70,0)
 ; Pull data from entry in patient-lookup graph
"RTN","SAMIORU",71,0)
 merge filter=@rootpl@(plien)
"RTN","SAMIORU",72,0)
 ; Return error if no ORM found
"RTN","SAMIORU",73,0)
 if '$data(filter("ORM")) do  quit:$Q filter("rslt")  quit
"RTN","SAMIORU",74,0)
 .  set filter("rslt")="0^Patient does not have previous ORM"
"RTN","SAMIORU",75,0)
 ;
"RTN","SAMIORU",76,0)
 kill filter("ORM")
"RTN","SAMIORU",77,0)
 do ORMVARS^SAMIORU(plien,.filter)
"RTN","SAMIORU",78,0)
 ;
"RTN","SAMIORU",79,0)
 ;Pull HL7 vars and escape sequences for building a message
"RTN","SAMIORU",80,0)
HL7VARS new HL,HLA,HLECH,HLQ,OUTHL,HLFS,HLCC
"RTN","SAMIORU",81,0)
 D HLENV(SNDPROT)
"RTN","SAMIORU",82,0)
 ;
"RTN","SAMIORU",83,0)
 ;   BUILD ; build segements in OUTHL
"RTN","SAMIORU",84,0)
 D PID(HLFS,HLCC,.filter,.OUTHL)
"RTN","SAMIORU",85,0)
 D OBR(HLFS,HLCC,.filter,.OUTHL)
"RTN","SAMIORU",86,0)
 D OBX(HLFS,HLCC,.filter,.OUTHL)
"RTN","SAMIORU",87,0)
 ;
"RTN","SAMIORU",88,0)
 new msgid
"RTN","SAMIORU",89,0)
 set (filter("rslt"),msgid)=$$SENDHL7(SNDPROT,.OUTHL)
"RTN","SAMIORU",90,0)
 ;
"RTN","SAMIORU",91,0)
 ; if a message id is returned, preface it with 1^
"RTN","SAMIORU",92,0)
 set:+$get(filter("rslt")) filter("rslt")=1_"^"_filter("rslt")
"RTN","SAMIORU",93,0)
 ;
"RTN","SAMIORU",94,0)
 quit:$Q $get(filter("rslt"))  quit
"RTN","SAMIORU",95,0)
 ;
"RTN","SAMIORU",96,0)
 ;
"RTN","SAMIORU",97,0)
 ;
"RTN","SAMIORU",98,0)
PID(HLFS,HLCC,filter,OUTHL) ;
"RTN","SAMIORU",99,0)
 ;
"RTN","SAMIORU",100,0)
 new vpien,plien,rootvp,rootpl,pid,name,address1,address2,address3
"RTN","SAMIORU",101,0)
 new ssn,sex,city,state,zip,str,fulladdress,dob
"RTN","SAMIORU",102,0)
 set rootpl=$get(filter("rootpl"))
"RTN","SAMIORU",103,0)
 set plien=$get(filter("plien"))
"RTN","SAMIORU",104,0)
 set outcnt=$order(OUTHL("A"),-1)
"RTN","SAMIORU",105,0)
PID1 set $piece(pid,HLFS,1)=1
"RTN","SAMIORU",106,0)
 ;
"RTN","SAMIORU",107,0)
PID3 set ssn=$get(@rootpl@(plien,"ssn"))
"RTN","SAMIORU",108,0)
 set $piece(pid,HLFS,3)=$get(ssn)
"RTN","SAMIORU",109,0)
 ;
"RTN","SAMIORU",110,0)
PID5 set name=$get(@rootpl@(plien,"saminame"))
"RTN","SAMIORU",111,0)
 set name=$translate($$UP^XLFSTR(name),",",HLCC)
"RTN","SAMIORU",112,0)
 set $piece(name,HLCC,7)="L"
"RTN","SAMIORU",113,0)
 set $piece(pid,HLFS,5)=$get(name)
"RTN","SAMIORU",114,0)
 ;
"RTN","SAMIORU",115,0)
PID7 set dob=$get(filter("sbdob"))
"RTN","SAMIORU",116,0)
 set $piece(pid,HLFS,7)=$get(dob)
"RTN","SAMIORU",117,0)
 ;
"RTN","SAMIORU",118,0)
PID8 set sex=$get(filter("sex"))
"RTN","SAMIORU",119,0)
 set $piece(pid,HLFS,8)=$get(sex)
"RTN","SAMIORU",120,0)
 ;
"RTN","SAMIORU",121,0)
PID11 set fulladdress=$get(filter("fulladdress"))
"RTN","SAMIORU",122,0)
 set $piece(pid,HLFS,11)=$get(fulladdress)
"RTN","SAMIORU",123,0)
 ;
"RTN","SAMIORU",124,0)
PID18 set $piece(pid,HLFS,13)=""
"RTN","SAMIORU",125,0)
 ;
"RTN","SAMIORU",126,0)
PID19 set $piece(pid,HLFS,19)=$get(@rootpl@(plien,"ssn"))
"RTN","SAMIORU",127,0)
 ;
"RTN","SAMIORU",128,0)
 set pid="PID"_HLFS_pid
"RTN","SAMIORU",129,0)
 ;
"RTN","SAMIORU",130,0)
 do ADD2MSG(pid)
"RTN","SAMIORU",131,0)
 quit
"RTN","SAMIORU",132,0)
 ;
"RTN","SAMIORU",133,0)
 ;
"RTN","SAMIORU",134,0)
 ;
"RTN","SAMIORU",135,0)
 ; OBR is built from variables gleaned from the initiating ORM
"RTN","SAMIORU",136,0)
 ;   message
"RTN","SAMIORU",137,0)
OBR(HLFS,HLCC,filter,OUTHL) ; Build ORU OBR
"RTN","SAMIORU",138,0)
 new obr,ordpvd
"RTN","SAMIORU",139,0)
 ;
"RTN","SAMIORU",140,0)
OBR1 set $piece(obr,HLFS,1)=1
"RTN","SAMIORU",141,0)
 ;
"RTN","SAMIORU",142,0)
OBR3 set $piece(obr,HLFS,3)=$get(filter("ordernumber")) ;universal identifier
"RTN","SAMIORU",143,0)
 ;
"RTN","SAMIORU",144,0)
OBR4 set $piece(obr,HLFS,4)=$get(filter("order"))_HLCC_$get(filter("order2"))
"RTN","SAMIORU",145,0)
 ;
"RTN","SAMIORU",146,0)
OBR7 set $piece(obr,HLFS,7)=$$FMTHL7^XLFDT($$HTFM^XLFDT($H)) ; our obsv date
"RTN","SAMIORU",147,0)
 ;
"RTN","SAMIORU",148,0)
OBR16 set ordpvd=$get(filter("providerien"))_HLCC_$get(filter("providernm"))
"RTN","SAMIORU",149,0)
 set ordpvd=$translate(ordpvd,",",HLCC)
"RTN","SAMIORU",150,0)
 set $piece(obr,HLFS,16)=ordpvd
"RTN","SAMIORU",151,0)
 ;
"RTN","SAMIORU",152,0)
OBR25 set $piece(obr,HLFS,25)="F" ; final
"RTN","SAMIORU",153,0)
 set obr="OBR"_HLFS_obr
"RTN","SAMIORU",154,0)
 ;
"RTN","SAMIORU",155,0)
 do ADD2MSG(obr)
"RTN","SAMIORU",156,0)
 ;
"RTN","SAMIORU",157,0)
 quit
"RTN","SAMIORU",158,0)
 ;
"RTN","SAMIORU",159,0)
 ;
"RTN","SAMIORU",160,0)
OBX(HLFS,HLCC,filter,OUTHL) ; Build text of note from vapals-patients nodes
"RTN","SAMIORU",161,0)
 new outcnt,rootvp,rootpl,segment,sid,key,notenumber,str
"RTN","SAMIORU",162,0)
 new ssn,dfn,plien,name,sex,line1,line2,climit
"RTN","SAMIORU",163,0)
 set sid=$get(filter("sid"))
"RTN","SAMIORU",164,0)
 set key=$get(filter("key"))
"RTN","SAMIORU",165,0)
 set rootvp=$get(filter("rootvp"))
"RTN","SAMIORU",166,0)
 set rootpl=$get(filter("rootpl"))
"RTN","SAMIORU",167,0)
 set plien=$get(filter("plien"))
"RTN","SAMIORU",168,0)
 set notenmbr=$get(filter("notenmbr"))
"RTN","SAMIORU",169,0)
 set climit=$get(filter("climit"))
"RTN","SAMIORU",170,0)
 ; build string used in each ORU OBX node
"RTN","SAMIORU",171,0)
 set str="TX"_HLFS_HLFS_"I1"_HLCC_"Intake Note"
"RTN","SAMIORU",172,0)
 ;
"RTN","SAMIORU",173,0)
 set name=$get(@rootpl@(plien,"saminame"))
"RTN","SAMIORU",174,0)
 set sex=$get(@rootpl@(plien,"sex"))
"RTN","SAMIORU",175,0)
 set ssn=$get(@rootpl@(plien,"ssn"))
"RTN","SAMIORU",176,0)
 set line1="Patient name : "_name_" "_HLFS_" "_sex
"RTN","SAMIORU",177,0)
 set line2="Record Number : "_ssn
"RTN","SAMIORU",178,0)
 set segment="OBX"_HLFS_1_HLFS_str_HLFS_line1_HLFS
"RTN","SAMIORU",179,0)
 do ADD2MSG(segment)
"RTN","SAMIORU",180,0)
 set segment="OBX"_HLFS_2_HLFS_str_HLFS_line2_HLFS
"RTN","SAMIORU",181,0)
 do ADD2MSG(segment)
"RTN","SAMIORU",182,0)
 ;
"RTN","SAMIORU",183,0)
 new node,snode,vpcnt,cnt
"RTN","SAMIORU",184,0)
 ;
"RTN","SAMIORU",185,0)
 ; *** in vapalsyotta
"RTN","SAMIORU",186,0)
 if '($get(filter("Cache"))) do
"RTN","SAMIORU",187,0)
 . set node=$na(@rootvp@("graph",sid,key,"note"))
"RTN","SAMIORU",188,0)
 ; *** in Cache
"RTN","SAMIORU",189,0)
 if $get(filter("Cache")) do
"RTN","SAMIORU",190,0)
 . set node=$na(@rootvp@("graph",sid,key,"notes",notenmbr,"text"))
"RTN","SAMIORU",191,0)
 ;
"RTN","SAMIORU",192,0)
 set snode=$piece(node,")")
"RTN","SAMIORU",193,0)
 ;
"RTN","SAMIORU",194,0)
 set cnt=2
"RTN","SAMIORU",195,0)
 for  set node=$Q(@node) quit:node'[snode  do
"RTN","SAMIORU",196,0)
 .; if the text in this node is less than our character limit
"RTN","SAMIORU",197,0)
 .;   then build an OBX segment
"RTN","SAMIORU",198,0)
 . if $length(@node)<climit do  quit
"RTN","SAMIORU",199,0)
 .. set vpcnt=$QS(node,7) quit:'vpcnt
"RTN","SAMIORU",200,0)
 .. set cnt=$get(cnt)+1
"RTN","SAMIORU",201,0)
 .. set segment="OBX"_HLFS_cnt_HLFS_str_HLFS_@node_HLFS
"RTN","SAMIORU",202,0)
 .. do ADD2MSG(segment)
"RTN","SAMIORU",203,0)
 .;
"RTN","SAMIORU",204,0)
 .; string @node is too long to display properly in CPRS
"RTN","SAMIORU",205,0)
 .;   The length is set in climit above
"RTN","SAMIORU",206,0)
 .; Now we will pull this string and all subsequent
"RTN","SAMIORU",207,0)
 .;   strings into a single string UNTIL we hit an empty node
"RTN","SAMIORU",208,0)
 .;
"RTN","SAMIORU",209,0)
BLDTXT . new poo,txtstr,exit
"RTN","SAMIORU",210,0)
 . set txtstr=@node
"RTN","SAMIORU",211,0)
 . set exit=0
"RTN","SAMIORU",212,0)
 . for  set node=$Q(@node) quit:$Q(@node)'[snode  do  quit:exit
"RTN","SAMIORU",213,0)
 .. set txtstr=$get(txtstr)_@node_" "
"RTN","SAMIORU",214,0)
 .. if ($translate(@($Q(@node))," ")="") set exit=1 quit
"RTN","SAMIORU",215,0)
 .. if $length(@($Q(@node)))<climit set exit=1 quit
"RTN","SAMIORU",216,0)
 . set poo(1)=txtstr
"RTN","SAMIORU",217,0)
 . do wrap^%tt("poo",climit)
"RTN","SAMIORU",218,0)
 .; now process text in poo(1) which has been limited
"RTN","SAMIORU",219,0)
 .;  by wrap call to the number of characters in climit
"RTN","SAMIORU",220,0)
 . new poocnt set poocnt=0
"RTN","SAMIORU",221,0)
 . for  set poocnt=$order(poo(poocnt)) quit:'poocnt  do
"RTN","SAMIORU",222,0)
 .. set cnt=$get(cnt)+1
"RTN","SAMIORU",223,0)
 .. set segment="OBX"_HLFS_cnt_HLFS_str_HLFS_poo(poocnt)_HLFS
"RTN","SAMIORU",224,0)
 .. do ADD2MSG(segment)
"RTN","SAMIORU",225,0)
 .; now back to main loop looking through note in graphstore
"RTN","SAMIORU",226,0)
 quit
"RTN","SAMIORU",227,0)
 ;
"RTN","SAMIORU",228,0)
 ;
"RTN","SAMIORU",229,0)
 ;
"RTN","SAMIORU",230,0)
SENDHL7(SNDPROT,OUTHL) ;Send out an HL7 message
"RTN","SAMIORU",231,0)
 ;@input
"RTN","SAMIORU",232,0)
 ;  OUTHL  = array containing message to send
"RTN","SAMIORU",233,0)
 ;@output
"RTN","SAMIORU",234,0)
 ;  msgid  = message ID
"RTN","SAMIORU",235,0)
 new HLRESLT
"RTN","SAMIORU",236,0)
 kill HLA("HLS")
"RTN","SAMIORU",237,0)
 merge HLA("HLS")=OUTHL
"RTN","SAMIORU",238,0)
 ;ZW HLA("HLS")
"RTN","SAMIORU",239,0)
 if $data(HLA("HLS")) do
"RTN","SAMIORU",240,0)
 .; W !,"GOT TO HERE"
"RTN","SAMIORU",241,0)
 . new HLEID,HLARYTYP,HLFORMAT,HLMTIEN,HLP
"RTN","SAMIORU",242,0)
 . set HL("MTN")="ORU"
"RTN","SAMIORU",243,0)
 . set HLEID=$O(^ORD(101,"B",SNDPROT,0))
"RTN","SAMIORU",244,0)
 . set HLARYTYP="LM"
"RTN","SAMIORU",245,0)
 . set HLFORMAT=1
"RTN","SAMIORU",246,0)
 . set HLMTIEN=""
"RTN","SAMIORU",247,0)
 . set HLP("PRIORITY")=1
"RTN","SAMIORU",248,0)
 . do GENERATE^HLMA(HLEID,HLARYTYP,HLFORMAT,.HLRESLT)
"RTN","SAMIORU",249,0)
 .; W !,"HLRESLT=",$get(HLRESLT),!
"RTN","SAMIORU",250,0)
 set msgid=$get(HLRESLT)
"RTN","SAMIORU",251,0)
 quit msgid
"RTN","SAMIORU",252,0)
 ;
"RTN","SAMIORU",253,0)
 ;
"RTN","SAMIORU",254,0)
 ;
"RTN","SAMIORU",255,0)
 ;
"RTN","SAMIORU",256,0)
 ; e.g. SNDPROT="PHX ENROLL ORM EVN"
"RTN","SAMIORU",257,0)
HLENV(SNDPROT) ; Set HL7 variables
"RTN","SAMIORU",258,0)
 ;@input
"RTN","SAMIORU",259,0)
 ;   SNDPROT = name of sending protocol (file #101)
"RTN","SAMIORU",260,0)
 ;@output
"RTN","SAMIORU",261,0)
 ;   sets all necessary HL variables for building a message
"RTN","SAMIORU",262,0)
 new PIEN,INT
"RTN","SAMIORU",263,0)
 set PIEN=$O(^ORD(101,"B",SNDPROT,0))
"RTN","SAMIORU",264,0)
 set HL="HLS(""HLS"")"
"RTN","SAMIORU",265,0)
 set INT=1
"RTN","SAMIORU",266,0)
 do INIT^HLFNC2(PIEN,.HL,INT)
"RTN","SAMIORU",267,0)
 set HLFS=$get(HL("FS"))
"RTN","SAMIORU",268,0)
 set HLECH=$get(HL("ECH"))
"RTN","SAMIORU",269,0)
 set HLCC=$E(HLECH)
"RTN","SAMIORU",270,0)
 quit
"RTN","SAMIORU",271,0)
 ;
"RTN","SAMIORU",272,0)
 ;
"RTN","SAMIORU",273,0)
ADD2MSG(segment) ; Add segment to OUTHL array
"RTN","SAMIORU",274,0)
 new outcnt set outcnt=$order(OUTHL("A"),-1),outcnt=$get(outcnt)+1
"RTN","SAMIORU",275,0)
 set OUTHL(outcnt)=segment
"RTN","SAMIORU",276,0)
 quit
"RTN","SAMIORU",277,0)
 ;
"RTN","SAMIORU",278,0)
 ;
"RTN","SAMIORU",279,0)
 ;
"RTN","SAMIORU",280,0)
 ; builds extra filter vars from the most recent ORM array found in
"RTN","SAMIORU",281,0)
 ;   the patient's patient-lookup graph
"RTN","SAMIORU",282,0)
 ; filter("assignedlocation")="PHX-PULM RN LSS PHONE"
"RTN","SAMIORU",283,0)
 ; filter("fulladdress")="7726 W ORCHID ST^^PHOENIX^AZ^85017"
"RTN","SAMIORU",284,0)
 ; filter("msgid")="99000031ORM"
"RTN","SAMIORU",285,0)
 ; filter("order")="PHO_LUNG"
"RTN","SAMIORU",286,0)
 ; filter("order2")="LUNG"
"RTN","SAMIORU",287,0)
 ; filter("ordercontrol")="NW"
"RTN","SAMIORU",288,0)
 ; filter("ordereffectivedt")=20200616135751
"RTN","SAMIORU",289,0)
 ; filter("ordernumber")=3200616135751
"RTN","SAMIORU",290,0)
 ; filter("orderstatus")="NW"
"RTN","SAMIORU",291,0)
 ; filter("patientclass")="O"
"RTN","SAMIORU",292,0)
 ; filter("providerien")=244088
"RTN","SAMIORU",293,0)
 ; filter("providernm")="GARCIA,DANIEL,P"
"RTN","SAMIORU",294,0)
 ; filter("siteid")="PHO"
"RTN","SAMIORU",295,0)
 ; filter("transactiondt")=20200616135751
"RTN","SAMIORU",296,0)
ORMVARS(plien,filter) ; get variables from most recent ORM on this patient
"RTN","SAMIORU",297,0)
 ;
"RTN","SAMIORU",298,0)
 new node,snode,rootpl,var,invdt
"RTN","SAMIORU",299,0)
 set rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIORU",300,0)
 set node=$na(@rootpl@(plien,"ORM")),snode=$p(node,")")
"RTN","SAMIORU",301,0)
 set invdt=$QS($Q(@node),5)
"RTN","SAMIORU",302,0)
 for  set node=$Q(@node) quit:node'[snode  quit:node'[invdt  do
"RTN","SAMIORU",303,0)
 . set var=$QS(node,6)
"RTN","SAMIORU",304,0)
 . set filter(var)=@node
"RTN","SAMIORU",305,0)
 ; don't confuse ORM message id with ORU message id
"RTN","SAMIORU",306,0)
 if $data(filter("msgid")) do
"RTN","SAMIORU",307,0)
 . set filter("ormmsgid")=filter("msgid")
"RTN","SAMIORU",308,0)
 . kill filter("msgid")
"RTN","SAMIORU",309,0)
 quit
"RTN","SAMIORU",310,0)
 ;
"RTN","SAMIORU",311,0)
 ;
"RTN","SAMIORU",312,0)
 ;
"RTN","SAMIORU",313,0)
TESTPID(plien) ; Test generating PID
"RTN","SAMIORU",314,0)
 new rootpl
"RTN","SAMIORU",315,0)
 set (filter("rootpl"),rootpl)=$$setroot^%wd("patient-lookup")
"RTN","SAMIORU",316,0)
 set filter("plien")=$get(plien)
"RTN","SAMIORU",317,0)
 set SNDPROT="PHX ENROLL ORU EVN"
"RTN","SAMIORU",318,0)
 do HLENV^SAMIORU(SNDPROT)
"RTN","SAMIORU",319,0)
 merge filter=@rootpl@(plien)
"RTN","SAMIORU",320,0)
 kill filter("ORM")
"RTN","SAMIORU",321,0)
 do ORMVARS^SAMIORU(plien,.filter)
"RTN","SAMIORU",322,0)
 do PID^SAMIORU(HLFS,HLCC,.filter,.OUTHL)
"RTN","SAMIORU",323,0)
 quit
"RTN","SAMIORU",324,0)
 ;
"RTN","SAMIORU",325,0)
 ;      ;
"RTN","SAMIORU",326,0)
TESTOBR(plien) ; Test generating OBR
"RTN","SAMIORU",327,0)
 new rootpl
"RTN","SAMIORU",328,0)
 set (filter("rootpl"),rootpl)=$$setroot^%wd("patient-lookup")
"RTN","SAMIORU",329,0)
 set filter("plien")=$get(plien)
"RTN","SAMIORU",330,0)
 set SNDPROT="PHX ENROLL ORU EVN"
"RTN","SAMIORU",331,0)
 do HLENV^SAMIORU(SNDPROT)
"RTN","SAMIORU",332,0)
 merge filter=@rootpl@(plien)
"RTN","SAMIORU",333,0)
 kill filter("ORM")
"RTN","SAMIORU",334,0)
 do ORMVARS^SAMIORU(plien,.filter)
"RTN","SAMIORU",335,0)
 do OBR^SAMIORU(HLFS,HLCC,.filter,.OUTHL)
"RTN","SAMIORU",336,0)
 quit
"RTN","SAMIORU",337,0)
 ;
"RTN","SAMIORU",338,0)
 ;
"RTN","SAMIORU",339,0)
TESTOBXV ; Test generating OBX in vapalsyotta
"RTN","SAMIORU",340,0)
 new rootpl,rootvp,filter
"RTN","SAMIORU",341,0)
 set (filter("rootpl"),rootpl)=$$setroot^%wd("patient-lookup")
"RTN","SAMIORU",342,0)
 set (filter("rootvp"),rootvp)=$$setroot^%wd("vapals-patients")
"RTN","SAMIORU",343,0)
 new SNDPROT,notenbr,msgid
"RTN","SAMIORU",344,0)
 set SNDPROT="PHX ENROLL ORU EVN"
"RTN","SAMIORU",345,0)
 do HLENV^SAMIORU(SNDPROT)
"RTN","SAMIORU",346,0)
 new sid,key
"RTN","SAMIORU",347,0)
 set (sid,filter("sid"))="PHO00015"
"RTN","SAMIORU",348,0)
 set (key,filter("key"))="siform-2020-07-30"
"RTN","SAMIORU",349,0)
 set (filter("plien"),plien)=@rootvp@("graph",sid,key,"dfn")
"RTN","SAMIORU",350,0)
 merge filter=@rootpl@(plien)
"RTN","SAMIORU",351,0)
 kill filter("ORM")
"RTN","SAMIORU",352,0)
 do ORMVARS^SAMIORU(plien,.filter)
"RTN","SAMIORU",353,0)
 new climit set climit=66
"RTN","SAMIORU",354,0)
 new notenbr set notenbr=1
"RTN","SAMIORU",355,0)
 do OBX^SAMIORU(HLFS,HLCC,.filter,.OUTHL)
"RTN","SAMIORU",356,0)
 quit
"RTN","SAMIORU",357,0)
 ;
"RTN","SAMIORU",358,0)
TESTOBXC ; Test generating OBX in Cache
"RTN","SAMIORU",359,0)
 new rootpl,rootvp,filter
"RTN","SAMIORU",360,0)
 set (filter("rootpl"),rootpl)=$$setroot^%wd("patient-lookup")
"RTN","SAMIORU",361,0)
 set (filter("rootvp"),rootvp)=$$setroot^%wd("vapals-patients")
"RTN","SAMIORU",362,0)
 new SNDPROT,notenbr,msgid
"RTN","SAMIORU",363,0)
 set SNDPROT="PHX ENROLL ORU EVN"
"RTN","SAMIORU",364,0)
 do HLENV^SAMIORU(SNDPROT)
"RTN","SAMIORU",365,0)
 new sid,key
"RTN","SAMIORU",366,0)
 set (sid,filter("sid"))="PHO00015"
"RTN","SAMIORU",367,0)
 set (key,filter("key"))="siform-2020-07-30"
"RTN","SAMIORU",368,0)
 set (filter("plien"),plien)=@rootvp@("graph",sid,key,"dfn")
"RTN","SAMIORU",369,0)
 merge filter=@rootpl@(plien)
"RTN","SAMIORU",370,0)
 kill filter("ORM")
"RTN","SAMIORU",371,0)
 do ORMVARS^SAMIORU(plien,.filter)
"RTN","SAMIORU",372,0)
 set filter("climit")=66
"RTN","SAMIORU",373,0)
 set filter("notenmbr")=2
"RTN","SAMIORU",374,0)
 set filter("Cache")=($zversion["Cache")
"RTN","SAMIORU",375,0)
 do OBX^SAMIORU(HLFS,HLCC,.filter,.OUTHL)
"RTN","SAMIORU",376,0)
 quit
"RTN","SAMIORU",377,0)
 ;
"RTN","SAMIORU",378,0)
EOR ;End of routine SAMIORU
"RTN","SAMIORU",379,0)
 ;
"RTN","SAMIORU",380,0)
 ;
"VER")
8.0^22.2
**END**
**END**
