KIDS Distribution saved on Nov 26, 2019@23:09:15
SAMIHL7 V 1.0
**KIDS**:SAMIHL7 V 1.0^

**INSTALL NAME**
SAMIHL7 V 1.0
"BLD",11312,0)
SAMIHL7 V 1.0^^0^3191126^n
"BLD",11312,1,0)
^^1^1^3191126^
"BLD",11312,1,1,0)
HL7 protocols,applications,links for TIU and ADT
"BLD",11312,4,0)
^9.64PA^^
"BLD",11312,6.3)
1
"BLD",11312,"KRN",0)
^9.67PA^1.5^24
"BLD",11312,"KRN",.4,0)
.4
"BLD",11312,"KRN",.401,0)
.401
"BLD",11312,"KRN",.402,0)
.402
"BLD",11312,"KRN",.403,0)
.403
"BLD",11312,"KRN",.5,0)
.5
"BLD",11312,"KRN",.84,0)
.84
"BLD",11312,"KRN",1.5,0)
1.5
"BLD",11312,"KRN",1.6,0)
1.6
"BLD",11312,"KRN",1.61,0)
1.61
"BLD",11312,"KRN",1.62,0)
1.62
"BLD",11312,"KRN",3.6,0)
3.6
"BLD",11312,"KRN",3.8,0)
3.8
"BLD",11312,"KRN",9.2,0)
9.2
"BLD",11312,"KRN",9.8,0)
9.8
"BLD",11312,"KRN",9.8,"NM",0)
^9.68A^6^6
"BLD",11312,"KRN",9.8,"NM",1,0)
SAMIHL7^^0^B34035272
"BLD",11312,"KRN",9.8,"NM",2,0)
SAMIADT^^0^B39703576
"BLD",11312,"KRN",9.8,"NM",3,0)
SAMITIU^^0^B7265978
"BLD",11312,"KRN",9.8,"NM",4,0)
SAMIUT7^^0^B20430771
"BLD",11312,"KRN",9.8,"NM",5,0)
SAMIUT7A^^0^B4445311
"BLD",11312,"KRN",9.8,"NM",6,0)
SAMIUT7T^^0^B4447347
"BLD",11312,"KRN",9.8,"NM","B","SAMIADT",2)

"BLD",11312,"KRN",9.8,"NM","B","SAMIHL7",1)

"BLD",11312,"KRN",9.8,"NM","B","SAMITIU",3)

"BLD",11312,"KRN",9.8,"NM","B","SAMIUT7",4)

"BLD",11312,"KRN",9.8,"NM","B","SAMIUT7A",5)

"BLD",11312,"KRN",9.8,"NM","B","SAMIUT7T",6)

"BLD",11312,"KRN",19,0)
19
"BLD",11312,"KRN",19.1,0)
19.1
"BLD",11312,"KRN",101,0)
101
"BLD",11312,"KRN",101,"NM",0)
^9.68A^4^4
"BLD",11312,"KRN",101,"NM",1,0)
SAMI RECV TIU EVENT^^0
"BLD",11312,"KRN",101,"NM",2,0)
SAMI RECV TIU SUBSC^^0
"BLD",11312,"KRN",101,"NM",3,0)
SAMI RECV ADT EVENT^^0
"BLD",11312,"KRN",101,"NM",4,0)
SAMI RECV ADT SUBS^^0
"BLD",11312,"KRN",101,"NM","B","SAMI RECV ADT EVENT",3)

"BLD",11312,"KRN",101,"NM","B","SAMI RECV ADT SUBS",4)

"BLD",11312,"KRN",101,"NM","B","SAMI RECV TIU EVENT",1)

"BLD",11312,"KRN",101,"NM","B","SAMI RECV TIU SUBSC",2)

"BLD",11312,"KRN",409.61,0)
409.61
"BLD",11312,"KRN",771,0)
771
"BLD",11312,"KRN",771,"NM",0)
^9.68A^4^4
"BLD",11312,"KRN",771,"NM",1,0)
SAMI RECV ADT EVNT^^0
"BLD",11312,"KRN",771,"NM",2,0)
SAMI RECV ADT SUBS^^0
"BLD",11312,"KRN",771,"NM",3,0)
SAMI RECV TIU EVNT^^0
"BLD",11312,"KRN",771,"NM",4,0)
SAMI RECV TIU SUBS^^0
"BLD",11312,"KRN",771,"NM","B","SAMI RECV ADT EVNT",1)

"BLD",11312,"KRN",771,"NM","B","SAMI RECV ADT SUBS",2)

"BLD",11312,"KRN",771,"NM","B","SAMI RECV TIU EVNT",3)

"BLD",11312,"KRN",771,"NM","B","SAMI RECV TIU SUBS",4)

"BLD",11312,"KRN",779.2,0)
779.2
"BLD",11312,"KRN",870,0)
870
"BLD",11312,"KRN",870,"NM",0)
^9.68A^3^3
"BLD",11312,"KRN",870,"NM",1,0)
SAMITIUR^^0
"BLD",11312,"KRN",870,"NM",2,0)
SAMITIUS^^0
"BLD",11312,"KRN",870,"NM",3,0)
SAMIADTR^^0
"BLD",11312,"KRN",870,"NM","B","SAMIADTR",3)

"BLD",11312,"KRN",870,"NM","B","SAMITIUR",1)

"BLD",11312,"KRN",870,"NM","B","SAMITIUS",2)

"BLD",11312,"KRN",8989.51,0)
8989.51
"BLD",11312,"KRN",8989.52,0)
8989.52
"BLD",11312,"KRN",8994,0)
8994
"BLD",11312,"KRN","B",.4,.4)

"BLD",11312,"KRN","B",.401,.401)

"BLD",11312,"KRN","B",.402,.402)

"BLD",11312,"KRN","B",.403,.403)

"BLD",11312,"KRN","B",.5,.5)

"BLD",11312,"KRN","B",.84,.84)

"BLD",11312,"KRN","B",1.5,1.5)

"BLD",11312,"KRN","B",1.6,1.6)

"BLD",11312,"KRN","B",1.61,1.61)

"BLD",11312,"KRN","B",1.62,1.62)

"BLD",11312,"KRN","B",3.6,3.6)

"BLD",11312,"KRN","B",3.8,3.8)

"BLD",11312,"KRN","B",9.2,9.2)

"BLD",11312,"KRN","B",9.8,9.8)

"BLD",11312,"KRN","B",19,19)

"BLD",11312,"KRN","B",19.1,19.1)

"BLD",11312,"KRN","B",101,101)

"BLD",11312,"KRN","B",409.61,409.61)

"BLD",11312,"KRN","B",771,771)

"BLD",11312,"KRN","B",779.2,779.2)

"BLD",11312,"KRN","B",870,870)

"BLD",11312,"KRN","B",8989.51,8989.51)

"BLD",11312,"KRN","B",8989.52,8989.52)

"BLD",11312,"KRN","B",8994,8994)

"BLD",11312,"QUES",0)
^9.62^^
"BLD",11312,"REQB",0)
^9.611^^
"KRN",101,5199,-1)
0^1
"KRN",101,5199,0)
SAMI RECV TIU EVENT^SAMI RECV TIU EVENT^^E^^^^^^^^
"KRN",101,5199,1,0)
^^1^1^3190927^^
"KRN",101,5199,1,1,0)
Receive TIU with patient data from VA server
"KRN",101,5199,99)
65280,59747
"KRN",101,5199,770)
SAMI RECV TIU EVNT^^MDM^T02^^^^AL^NE^2.3^
"KRN",101,5199,775,0)
^101.0775PA^1^1
"KRN",101,5199,775,1,0)
5200
"KRN",101,5199,775,1,"^")
SAMI RECV TIU SUBSC
"KRN",101,5200,-1)
0^2
"KRN",101,5200,0)
SAMI RECV TIU SUBSC^SAMI RECV TIU SUBSC^^S^^^^^^^^
"KRN",101,5200,1,0)
^^1^1^3190927^
"KRN",101,5200,1,1,0)
Subscriber for receiving TIU patient lists from VA
"KRN",101,5200,99)
65280,59877
"KRN",101,5200,770)
^SAMI RECV TIU SUBS^^T02^^^SAMITIUR^^^^ACK
"KRN",101,5200,771)
D EN^SAMITIU
"KRN",101,5200,773)
1^1
"KRN",101,5201,-1)
0^4
"KRN",101,5201,0)
SAMI RECV ADT SUBS^SAMI RECV ADT SUBS^^S^^^^^^^^
"KRN",101,5201,1,0)
^^3^3^3190930^^
"KRN",101,5201,1,1,0)
 
"KRN",101,5201,1,2,0)
Subscriber for receiving ADT messages from VA with updates for VAPALS 
"KRN",101,5201,1,3,0)
patient-lookup graph
"KRN",101,5201,99)
65283,63475
"KRN",101,5201,770)
^SAMI RECV ADT SUBS^^A08^^^SAMIADTR^^^^ACK
"KRN",101,5201,771)
D TESTERR^SAMIADT
"KRN",101,5201,773)
1^1
"KRN",101,5202,-1)
0^3
"KRN",101,5202,0)
SAMI RECV ADT EVENT^SAMI RECV ADT EVENT^^E^^^^^^^^
"KRN",101,5202,1,0)
^^1^1^3190927^
"KRN",101,5202,1,1,0)
Event listener for ADT messages to update VAPALS patient-lookup graph
"KRN",101,5202,99)
65283,66042
"KRN",101,5202,770)
SAMI RECV ADT EVNT^^ADT^A08^^^^AL^NE^2.3^
"KRN",101,5202,775,0)
^101.0775PA^1^1
"KRN",101,5202,775,1,0)
5201
"KRN",101,5202,775,1,"^")
SAMI RECV ADT SUBS
"KRN",771,251,-1)
0^3
"KRN",771,251,0)
SAMI RECV TIU EVNT^a^PHOENIX^^^^USA
"KRN",771,251,"EC")
~|\&
"KRN",771,251,"FS")
^
"KRN",771,252,-1)
0^4
"KRN",771,252,0)
SAMI RECV TIU SUBS^a^VISTA HEALTH CARE^^^^USA
"KRN",771,252,"EC")
~|\&
"KRN",771,252,"FS")
^
"KRN",771,253,-1)
0^1
"KRN",771,253,0)
SAMI RECV ADT EVNT^a^PHOENIX^SAMI ADT RECEIVER^^^USA
"KRN",771,253,"EC")
~|\&
"KRN",771,253,"FS")
^
"KRN",771,254,-1)
0^2
"KRN",771,254,0)
SAMI RECV ADT SUBS^a^VISTA HEALTH CARE^SAMI ADT RECEIVER^^^USA
"KRN",771,254,"EC")
~|\&
"KRN",771,254,"FS")
^
"KRN",870,79,-1)
0^1
"KRN",870,79,0)
SAMITIUR^VISTA HEALTH CARE^TCP^^^^^^^^^^^^^^^^^^10
"KRN",870,79,100)

"KRN",870,79,400)
^5084^S^N^^^^^
"KRN",870,80,-1)
0^2
"KRN",870,80,0)
SAMITIUS^PHOENIX VAMC^TCP^^^^^^^^^^^^^^^^^^10
"KRN",870,80,3,0)
^^1^1^3190917^
"KRN",870,80,3,1,0)
Link sending TIU documents to VA Server
"KRN",870,80,200)
^5
"KRN",870,80,400)
^^C^N^^^^^
"KRN",870,81,-1)
0^3
"KRN",870,81,0)
SAMIADTR^^TCP^^^^^^^^^^^^^^^^^^10
"KRN",870,81,3,0)
^^3^3^3190927^
"KRN",870,81,3,1,0)
 
"KRN",870,81,3,2,0)
HL7 link for incoming ADT messages to update the VAPALS patient-lookup 
"KRN",870,81,3,3,0)
graph
"KRN",870,81,400)
^5081^S^^^^^^
"MBREQ")
0
"ORD",13,870)
870;13;1;;HLLL^XPDTA1;;HLLLE^XPDIA1;;;HLLLDEL^XPDIA1(%)
"ORD",13,870,0)
HL LOGICAL LINK
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","SAMIADT")
0^2^B39703576
"RTN","SAMIADT",1,0)
SAMIADT ;ven/arc/lgc - Handler for HL7 ADTs ;Nov 25, 2019@17:52
"RTN","SAMIADT",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIADT",3,0)
 ;
"RTN","SAMIADT",4,0)
 quit  ; No entry from top
"RTN","SAMIADT",5,0)
 ;
"RTN","SAMIADT",6,0)
 ;@license: see routine SAMIUL
"RTN","SAMIADT",7,0)
 ;
"RTN","SAMIADT",8,0)
 ; @section 0 primary development
"RTN","SAMIADT",9,0)
 ;
"RTN","SAMIADT",10,0)
 ; @routine-credits
"RTN","SAMIADT",11,0)
 ; @primary-dev:
"RTN","SAMIADT",12,0)
 ;   Alexis Carlson (arc)
"RTN","SAMIADT",13,0)
 ;     alexis.carlson@vistaexpertise.net
"RTN","SAMIADT",14,0)
 ;   Larry "poo" Carlson (lgc)
"RTN","SAMIADT",15,0)
 ;     larry@fiscientific.com
"RTN","SAMIADT",16,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIADT",17,0)
 ;   http://vistaexpertise.net
"RTN","SAMIADT",18,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIADT",19,0)
 ; @license: Apache 2.0
"RTN","SAMIADT",20,0)
 ;   https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIADT",21,0)
 ;
"RTN","SAMIADT",22,0)
 ; @last-updated: 2019-07-31T16:56Z
"RTN","SAMIADT",23,0)
 ; @application: SAMI
"RTN","SAMIADT",24,0)
 ; @version: 18.0
"RTN","SAMIADT",25,0)
 ; @patch-list: none yet
"RTN","SAMIADT",26,0)
 ;
"RTN","SAMIADT",27,0)
 ; @to-do
"RTN","SAMIADT",28,0)
 ;   Add label comments
"RTN","SAMIADT",29,0)
 ;
"RTN","SAMIADT",30,0)
 ; @change-log
"RTN","SAMIADT",31,0)
 ;   2019-03-22 ven/arc : Have PRSTSV report fields for which the number of
"RTN","SAMIADT",32,0)
 ;     values does not match the number of labels
"RTN","SAMIADT",33,0)
 ;   2019-07-31 arc/ven : Add entry points to expand and update what's in the
"RTN","SAMIADT",34,0)
 ;     patient-lookup graph, export the patient-lookup graph for Phoenix, and
"RTN","SAMIADT",35,0)
 ;     import a TSV to pre-populate the patient-lookup graph
"RTN","SAMIADT",36,0)
 ;
"RTN","SAMIADT",37,0)
 ; @section 1 code
"RTN","SAMIADT",38,0)
 ;
"RTN","SAMIADT",39,0)
 ;
"RTN","SAMIADT",40,0)
 quit  ; No entry from top
"RTN","SAMIADT",41,0)
 ;
"RTN","SAMIADT",42,0)
 ;
"RTN","SAMIADT",43,0)
TESTERR ; Test entry point
"RTN","SAMIADT",44,0)
 do ^ZTER;
"RTN","SAMIADT",45,0)
 ;
"RTN","SAMIADT",46,0)
 quit  ; End of entry point TESTERR
"RTN","SAMIADT",47,0)
 ;
"RTN","SAMIADT",48,0)
 ;
"RTN","SAMIADT",49,0)
EN ; Primary entry point
"RTN","SAMIADT",50,0)
 ;
"RTN","SAMIADT",51,0)
 kill ^TMP("SAMI","ADT")
"RTN","SAMIADT",52,0)
 ;
"RTN","SAMIADT",53,0)
 new segtype set segtype=""
"RTN","SAMIADT",54,0)
 new segment set segment=""
"RTN","SAMIADT",55,0)
 ;
"RTN","SAMIADT",56,0)
 for  xecute HLNEXT quit:$get(HLNODE)=""  do
"RTN","SAMIADT",57,0)
 . set segtype=$extract(HLNODE,1,3)
"RTN","SAMIADT",58,0)
 . set segment=$extract(HLNODE,5,$length(HLNODE))
"RTN","SAMIADT",59,0)
 . if (segtype="MSH")!(segtype="PID") do @segtype@(segment)
"RTN","SAMIADT",60,0)
 ;
"RTN","SAMIADT",61,0)
 quit  ; End entry point EN
"RTN","SAMIADT",62,0)
 ;
"RTN","SAMIADT",63,0)
 ;
"RTN","SAMIADT",64,0)
PARSESEG(segment,segmentfields,graphfields) ;
"RTN","SAMIADT",65,0)
 ;
"RTN","SAMIADT",66,0)
 new separators
"RTN","SAMIADT",67,0)
 set separators("field")="^"
"RTN","SAMIADT",68,0)
 set separators("component")="~"
"RTN","SAMIADT",69,0)
 set separators("field repetition")="|"
"RTN","SAMIADT",70,0)
 set separators("sub-component")="&"
"RTN","SAMIADT",71,0)
 set separators("escape")="\"
"RTN","SAMIADT",72,0)
 ;
"RTN","SAMIADT",73,0)
 set graphfields("active duty")=""
"RTN","SAMIADT",74,0)
 set graphfields("address1")=""
"RTN","SAMIADT",75,0)
 set graphfields("address2")=""
"RTN","SAMIADT",76,0)
 set graphfields("address3")=""
"RTN","SAMIADT",77,0)
 set graphfields("age")="" ; We get DOB
"RTN","SAMIADT",78,0)
 set graphfields("city")=""
"RTN","SAMIADT",79,0)
 set graphfields("county")=""
"RTN","SAMIADT",80,0)
 set graphfields("dfn")=""
"RTN","SAMIADT",81,0)
 set graphfields("gender")="" ; M^MALE - we only get M (in sex)
"RTN","SAMIADT",82,0)
 set graphfields("icn")=""
"RTN","SAMIADT",83,0)
 set graphfields("last5")="" ; We get name and SSN
"RTN","SAMIADT",84,0)
 set graphfields("marital status")=""
"RTN","SAMIADT",85,0)
 set graphfields("phone")=""
"RTN","SAMIADT",86,0)
 set graphfields("saminame")=""
"RTN","SAMIADT",87,0)
 set graphfields("sbdob")=""
"RTN","SAMIADT",88,0)
 set graphfields("sensitive patient")=""
"RTN","SAMIADT",89,0)
 set graphfields("sex")="" ; M
"RTN","SAMIADT",90,0)
 set graphfields("sinamef")=""
"RTN","SAMIADT",91,0)
 set graphfields("sinamel")=""
"RTN","SAMIADT",92,0)
 set graphfields("ssn")=""
"RTN","SAMIADT",93,0)
 set graphfields("state")=""
"RTN","SAMIADT",94,0)
 set graphfields("zip")=""
"RTN","SAMIADT",95,0)
 ;
"RTN","SAMIADT",96,0)
 new node,subnode,field,component
"RTN","SAMIADT",97,0)
 set node=0
"RTN","SAMIADT",98,0)
 set field="",component=""
"RTN","SAMIADT",99,0)
 for  set node=$order(segmentfields(node)) quit:'node  do
"RTN","SAMIADT",100,0)
 . if $data(segmentfields(node))=11 do
"RTN","SAMIADT",101,0)
 . . set subnode=0
"RTN","SAMIADT",102,0)
 . . for  set subnode=$order(segmentfields(node,subnode)) quit:'subnode  do
"RTN","SAMIADT",103,0)
 . . . if $get(segmentfields(node,subnode))'="" do
"RTN","SAMIADT",104,0)
 . . . . set graphfields(segmentfields(node,subnode))=$piece($piece(segment,separators("field"),node),separators("component"),subnode)
"RTN","SAMIADT",105,0)
 . . . . if graphfields(segmentfields(node,subnode))="""""""""" set graphfields(segmentfields(node,subnode))=""
"RTN","SAMIADT",106,0)
 . else  do
"RTN","SAMIADT",107,0)
 . . if $get(segmentfields(node))'="" do
"RTN","SAMIADT",108,0)
 . . . set graphfields(segmentfields(node))=$piece(segment,separators("field"),node)
"RTN","SAMIADT",109,0)
 . . . if graphfields(segmentfields(node))="""""""""" set graphfields(segmentfields(node))=""
"RTN","SAMIADT",110,0)
 ;
"RTN","SAMIADT",111,0)
 ; Handle special cases
"RTN","SAMIADT",112,0)
 new countyien,county,ERR
"RTN","SAMIADT",113,0)
 if graphfields("sbdob")'="" set graphfields("age")=$$age^%th($$HL7TFM^XLFDT(graphfields("sbdob")))
"RTN","SAMIADT",114,0)
 if graphfields("county")'="" do
"RTN","SAMIADT",115,0)
 . set countyien=$$FIND1^DIC(5.13,,"B",graphfields("county"),,,"ERR")
"RTN","SAMIADT",116,0)
 . if '$data(ERR)&(countyien'=0) set county=$$GET1^DIQ(5.13,countyien,1,,,"ERR")
"RTN","SAMIADT",117,0)
 . if '$data(ERR)&(county'="") set graphfields("county")=county
"RTN","SAMIADT",118,0)
 set graphfields("dfn")=+graphfields("dfn")
"RTN","SAMIADT",119,0)
 set graphfields("last5")=$extract(graphfields("sinamel"),1)_$extract(graphfields("ssn"),6,9)
"RTN","SAMIADT",120,0)
 set graphfields("saminame")=graphfields("sinamel")_","_graphfields("sinamef")
"RTN","SAMIADT",121,0)
 if graphfields("sex")="F" set graphfields("gender")="F^FEMALE"
"RTN","SAMIADT",122,0)
 if graphfields("sex")="M" set graphfields("gender")="M^MALE"
"RTN","SAMIADT",123,0)
 ;
"RTN","SAMIADT",124,0)
 quit  ; End entry point PARSESEG
"RTN","SAMIADT",125,0)
 ;
"RTN","SAMIADT",126,0)
 ;
"RTN","SAMIADT",127,0)
MSH(segment) ;
"RTN","SAMIADT",128,0)
 ;
"RTN","SAMIADT",129,0)
 ; set ^TMP("SAMI","ADT","MSH")=segment
"RTN","SAMIADT",130,0)
 do:'($get(%ut)) ACK^SAMIHL7
"RTN","SAMIADT",131,0)
 ;
"RTN","SAMIADT",132,0)
 quit  ; End entry point MSH
"RTN","SAMIADT",133,0)
 ;
"RTN","SAMIADT",134,0)
 ;
"RTN","SAMIADT",135,0)
PID(segment) ;
"RTN","SAMIADT",136,0)
 ;
"RTN","SAMIADT",137,0)
 new segmentfields
"RTN","SAMIADT",138,0)
 set segmentfields(1)="address1"
"RTN","SAMIADT",139,0)
 set segmentfields(2)="icn"
"RTN","SAMIADT",140,0)
 set segmentfields(3)="dfn"
"RTN","SAMIADT",141,0)
 set segmentfields(5)=""
"RTN","SAMIADT",142,0)
 set segmentfields(5,1)="sinamel"
"RTN","SAMIADT",143,0)
 set segmentfields(5,2)="sinamef"
"RTN","SAMIADT",144,0)
 set segmentfields(7)="sbdob"
"RTN","SAMIADT",145,0)
 set segmentfields(8)="sex" ; Use this for sex and expand for gender
"RTN","SAMIADT",146,0)
 set segmentfields(11)=""
"RTN","SAMIADT",147,0)
 set segmentfields(11,1)="address1"
"RTN","SAMIADT",148,0)
 set segmentfields(11,3)="city"
"RTN","SAMIADT",149,0)
 set segmentfields(11,4)="state"
"RTN","SAMIADT",150,0)
 set segmentfields(11,5)="zip"
"RTN","SAMIADT",151,0)
 set segmentfields(12)="county"
"RTN","SAMIADT",152,0)
 set segmentfields(13)="phone"
"RTN","SAMIADT",153,0)
 set segmentfields(19)="ssn"
"RTN","SAMIADT",154,0)
 ;
"RTN","SAMIADT",155,0)
 new graphfields
"RTN","SAMIADT",156,0)
 do PARSESEG(segment,.segmentfields,.graphfields)
"RTN","SAMIADT",157,0)
 ;
"RTN","SAMIADT",158,0)
 ; merge ^TMP("SAMI","ADT","PID")=graphfields
"RTN","SAMIADT",159,0)
 do UPDTPTL^SAMIHL7(.graphfields)
"RTN","SAMIADT",160,0)
 ;
"RTN","SAMIADT",161,0)
 quit  ; End of entry point PID
"RTN","SAMIADT",162,0)
 ;
"RTN","SAMIADT",163,0)
 ;
"RTN","SAMIADT",164,0)
EOR ; End of routine SAMIADT
"RTN","SAMIHL7")
0^1^B34035272
"RTN","SAMIHL7",1,0)
SAMIHL7 ;SAMI/lgc/arc - HL7 UTILITIES ;Nov 25, 2019@17:54
"RTN","SAMIHL7",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIHL7",3,0)
 ;
"RTN","SAMIHL7",4,0)
 quit  ; no entry from top
"RTN","SAMIHL7",5,0)
 ;
"RTN","SAMIHL7",6,0)
 ; example fields array
"RTN","SAMIHL7",7,0)
 ;fields("active duty")="N"
"RTN","SAMIHL7",8,0)
 ;fields("address1")="86099 Edgar Track"
"RTN","SAMIHL7",9,0)
 ;fields("address2")=""
"RTN","SAMIHL7",10,0)
 ;fields("address3")=""
"RTN","SAMIHL7",11,0)
 ;fields("age")=49
"RTN","SAMIHL7",12,0)
 ;fields("city")="Milton"
"RTN","SAMIHL7",13,0)
 ;fields("county")=""
"RTN","SAMIHL7",14,0)
 ;fields("dfn")=129
"RTN","SAMIHL7",15,0)
 ;fields("gender")="M"
"RTN","SAMIHL7",16,0)
 ;fields("icn")=50000104 (or 50000104V910386)
"RTN","SAMIHL7",17,0)
 ;fields("last5")="H5813"
"RTN","SAMIHL7",18,0)
 ;fields("marital status")=""
"RTN","SAMIHL7",19,0)
 ;fields("phone")="648-421-4239"
"RTN","SAMIHL7",20,0)
 ;fields("saminame")="Huel366,Jack277"
"RTN","SAMIHL7",21,0)
 ;fields("sbdob")="1970-09-02"
"RTN","SAMIHL7",22,0)
 ;fields("sensitive patient")=0
"RTN","SAMIHL7",23,0)
 ;fields("sex")="M"
"RTN","SAMIHL7",24,0)
 ;fields("sinamef")="Jack277"
"RTN","SAMIHL7",25,0)
 ;fields("sinamel")="Huel366"
"RTN","SAMIHL7",26,0)
 ;fields("ssn")=999235813
"RTN","SAMIHL7",27,0)
 ;fields("state")="MA"
"RTN","SAMIHL7",28,0)
 ;fields("zip")="02186"
"RTN","SAMIHL7",29,0)
 ;
"RTN","SAMIHL7",30,0)
 ;
"RTN","SAMIHL7",31,0)
 ;@ppi
"RTN","SAMIHL7",32,0)
UPDTPTL(fields) ; Update patient-lookup with a patient fields array
"RTN","SAMIHL7",33,0)
 ;@input
"RTN","SAMIHL7",34,0)
 ;   fields  = array of patient data
"RTN","SAMIHL7",35,0)
 ;@output
"RTN","SAMIHL7",36,0)
 ;   existing entry in patient-lookup graph updated
"RTN","SAMIHL7",37,0)
 ;     or new patient entered
"RTN","SAMIHL7",38,0)
 ;
"RTN","SAMIHL7",39,0)
 ; bail if we didn't get a fields array
"RTN","SAMIHL7",40,0)
 quit:'$data(fields)
"RTN","SAMIHL7",41,0)
 ;
"RTN","SAMIHL7",42,0)
 ;? I could use setroot, but that would build if it
"RTN","SAMIHL7",43,0)
 ;   didn't exist.  Perhaps this is what we want.
"RTN","SAMIHL7",44,0)
 new dien s dien=$order(^%wd(17.040801,"B","patient-lookup",0))
"RTN","SAMIHL7",45,0)
 ; bail if the patient-lookup graph doesn't exist
"RTN","SAMIHL7",46,0)
 quit:'dien
"RTN","SAMIHL7",47,0)
 ;
"RTN","SAMIHL7",48,0)
 new root s root=$$setroot^%wd("patient-lookup")
"RTN","SAMIHL7",49,0)
 new ptien,newpat set newpat=0
"RTN","SAMIHL7",50,0)
 ;
"RTN","SAMIHL7",51,0)
 ; Using ICN as the patient identifier
"RTN","SAMIHL7",52,0)
 set ptien=$order(@root@("icn",$get(fields("icn")),0))
"RTN","SAMIHL7",53,0)
 ;
"RTN","SAMIHL7",54,0)
 ; If this patient already in patient-lookup save
"RTN","SAMIHL7",55,0)
 ;  existing patient data to correct indicies later
"RTN","SAMIHL7",56,0)
 ; Also prepare to save in ^TMP
"RTN","SAMIHL7",57,0)
 new tmpcnt set tmpcnt=$get(^TMP("SAMIHL7",0))+1
"RTN","SAMIHL7",58,0)
 if $get(ptien) do
"RTN","SAMIHL7",59,0)
 . kill oldarr m oldarr=@root@(ptien)
"RTN","SAMIHL7",60,0)
 . merge ^TMP("SAMIHL7",tmpcnt,"A")=@root@(ptien)
"RTN","SAMIHL7",61,0)
 ;
"RTN","SAMIHL7",62,0)
 ; If a new patient get the next ptien to use
"RTN","SAMIHL7",63,0)
 set:'$get(ptien) ptien=$order(@root@(999999999),-1)+1,newpat=1
"RTN","SAMIHL7",64,0)
 ;
"RTN","SAMIHL7",65,0)
 ; bail if for some reason we didn't get a next patient ien
"RTN","SAMIHL7",66,0)
 quit:'ptien
"RTN","SAMIHL7",67,0)
 ;
"RTN","SAMIHL7",68,0)
 new field s field=""
"RTN","SAMIHL7",69,0)
 ; run through every fields subscript and set the
"RTN","SAMIHL7",70,0)
 ;   appropriate subscript patient entry in patient-lookup
"RTN","SAMIHL7",71,0)
 for  set field=$order(fields(field)) q:field=""  do
"RTN","SAMIHL7",72,0)
 .;
"RTN","SAMIHL7",73,0)
 .;new patient ====================================
"RTN","SAMIHL7",74,0)
 .; if new patient set null fields as well to setup subscript
"RTN","SAMIHL7",75,0)
 . if newpat do
"RTN","SAMIHL7",76,0)
 .. set @root@(ptien,field)=fields(field)
"RTN","SAMIHL7",77,0)
 .;
"RTN","SAMIHL7",78,0)
 .;old patient ====================================
"RTN","SAMIHL7",79,0)
 .; if not a new patient only store field results
"RTN","SAMIHL7",80,0)
 .;   that are NOT null.  However, do not overwrite
"RTN","SAMIHL7",81,0)
 .;   dfn as it may be a manually entered patient and
"RTN","SAMIHL7",82,0)
 .;   in this case we only want to store the VA dfn
"RTN","SAMIHL7",83,0)
 .;   in the remotedfn field
"RTN","SAMIHL7",84,0)
 . if '$get(newpat),'(fields(field)="") do
"RTN","SAMIHL7",85,0)
 .. if field="dfn" quit
"RTN","SAMIHL7",86,0)
 .. set @root@(ptien,field)=fields(field)
"RTN","SAMIHL7",87,0)
 .;
"RTN","SAMIHL7",88,0)
 .; now set all the indicies for this patient
"RTN","SAMIHL7",89,0)
 .; NOTE: we must kill any existing earlier idicies on previously
"RTN","SAMIHL7",90,0)
 .;       existing patients to prevent duplicate pointers
"RTN","SAMIHL7",91,0)
 .;
"RTN","SAMIHL7",92,0)
 . if fields(field)="" quit
"RTN","SAMIHL7",93,0)
 .;
"RTN","SAMIHL7",94,0)
 .; field=dfn =====================================
"RTN","SAMIHL7",95,0)
 . if field="dfn" do
"RTN","SAMIHL7",96,0)
 .. if newpat do
"RTN","SAMIHL7",97,0)
 ... set @root@("dfn",fields(field),ptien)=""
"RTN","SAMIHL7",98,0)
 ..;
"RTN","SAMIHL7",99,0)
 ..; As we have the patient's DFN from the VA server
"RTN","SAMIHL7",100,0)
 ..;  we can set the "remotedfn" field as well
"RTN","SAMIHL7",101,0)
 .. set @root@(ptien,"remotedfn")=fields(field)
"RTN","SAMIHL7",102,0)
 .. set @root@("remotedfn",fields(field),ptien)=""
"RTN","SAMIHL7",103,0)
 .;
"RTN","SAMIHL7",104,0)
 .; field=icn =====================================
"RTN","SAMIHL7",105,0)
 . if field="icn" do
"RTN","SAMIHL7",106,0)
 .. if '$get(newpat) do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",107,0)
 .. set @root@("icn",fields(field),ptien)=""
"RTN","SAMIHL7",108,0)
 .;
"RTN","SAMIHL7",109,0)
 .; field=last5 ===================================
"RTN","SAMIHL7",110,0)
 . if field="last5" do
"RTN","SAMIHL7",111,0)
 .. if '$get(newpat) do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",112,0)
 .. set @root@("last5",fields(field),ptien)="" quit
"RTN","SAMIHL7",113,0)
 .;
"RTN","SAMIHL7",114,0)
 .; field=saminame ================================
"RTN","SAMIHL7",115,0)
 . if field="saminame" do
"RTN","SAMIHL7",116,0)
 .. if '$get(newpat) do
"RTN","SAMIHL7",117,0)
 ... do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",118,0)
 ... do KILLREF("name",$get(oldarr("name")),ptien)
"RTN","SAMIHL7",119,0)
 ... do KILLREF("name",$$UP^XLFSTR($get(oldarr("name"))),ptien)
"RTN","SAMIHL7",120,0)
 .. set @root@("saminame",fields(field),ptien)=""
"RTN","SAMIHL7",121,0)
 .. set @root@("name",fields(field),ptien)=""
"RTN","SAMIHL7",122,0)
 .. set @root@("name",$$UP^XLFSTR(fields(field)),ptien)=""
"RTN","SAMIHL7",123,0)
 .;
"RTN","SAMIHL7",124,0)
 .; field=sinamef ==================================
"RTN","SAMIHL7",125,0)
 . if field="sinamef" do
"RTN","SAMIHL7",126,0)
 .. i '$get(newpat) do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",127,0)
 .. set @root@(field,fields(field),ptien)=""
"RTN","SAMIHL7",128,0)
 .;
"RTN","SAMIHL7",129,0)
 .; field=sinamel ==================================
"RTN","SAMIHL7",130,0)
 . if field="sinamel" do
"RTN","SAMIHL7",131,0)
 .. if '$get(newpat) do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",132,0)
 .. set @root@(field,fields(field),ptien)=""
"RTN","SAMIHL7",133,0)
 .;
"RTN","SAMIHL7",134,0)
 .; field=ssn ======================================
"RTN","SAMIHL7",135,0)
 . if field="ssn" do
"RTN","SAMIHL7",136,0)
 .. if '$get(newpat) do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",137,0)
 .. set @root@(field,fields(field),ptien)=""
"RTN","SAMIHL7",138,0)
 ;
"RTN","SAMIHL7",139,0)
 ; Now save new data in ^TMP
"RTN","SAMIHL7",140,0)
 merge ^TMP("SAMIHL7",tmpcnt,"B")=@root@(ptien)
"RTN","SAMIHL7",141,0)
 ;
"RTN","SAMIHL7",142,0)
 quit
"RTN","SAMIHL7",143,0)
 ;
"RTN","SAMIHL7",144,0)
 ;
"RTN","SAMIHL7",145,0)
KILLREF(field,oldrslt,ptien) ;
"RTN","SAMIHL7",146,0)
 quit:($get(oldrslt)="")
"RTN","SAMIHL7",147,0)
 kill @root@(field,oldrslt,ptien)
"RTN","SAMIHL7",148,0)
 quit
"RTN","SAMIHL7",149,0)
 ;
"RTN","SAMIHL7",150,0)
 ;
"RTN","SAMIHL7",151,0)
DELPTL ; Delete patient-lookup graph without changing root
"RTN","SAMIHL7",152,0)
 new root set root=$$setroot^%wd("patient-lookup")
"RTN","SAMIHL7",153,0)
 kill @root set @root@(0)="patient-lookup" quit
"RTN","SAMIHL7",154,0)
 ;
"RTN","SAMIHL7",155,0)
 ;@ppi
"RTN","SAMIHL7",156,0)
 ;@input
"RTN","SAMIHL7",157,0)
 ;  Expects all HL7 variables captured on message reception to
"RTN","SAMIHL7",158,0)
 ;   be in environment
"RTN","SAMIHL7",159,0)
 ;@output
"RTN","SAMIHL7",160,0)
 ;  Sends com ACK through appropriate link
"RTN","SAMIHL7",161,0)
ACK ;Send a com ACK
"RTN","SAMIHL7",162,0)
 I $D(HLA("HLA")) S HLP("NAMESPACE")="HL" D  quit
"RTN","SAMIHL7",163,0)
 . D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.HLMTIENA,"",.HLP)
"RTN","SAMIHL7",164,0)
 ;
"RTN","SAMIHL7",165,0)
 ;
"RTN","SAMIHL7",166,0)
EOR ;End of routine SAMIHL7
"RTN","SAMITIU")
0^3^B7265978
"RTN","SAMITIU",1,0)
SAMITIU ;SAMI/lgc/arc - HL7 PATIENT LIST TIU processing for VAPALS ;Nov 25, 2019@17:57
"RTN","SAMITIU",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMITIU",3,0)
 ;
"RTN","SAMITIU",4,0)
 quit  ; no entry from top
"RTN","SAMITIU",5,0)
 ;
"RTN","SAMITIU",6,0)
 ;
"RTN","SAMITIU",7,0)
EN ;
"RTN","SAMITIU",8,0)
 ;do ^ZTER
"RTN","SAMITIU",9,0)
 ;
"RTN","SAMITIU",10,0)
 ;
"RTN","SAMITIU",11,0)
 ;---------- PREPARE FOR SENDING ACK/NAK --------------------------
"RTN","SAMITIU",12,0)
 ;
"RTN","SAMITIU",13,0)
 ; Move message from HL7 global to ^KBAP(
"RTN","SAMITIU",14,0)
 ; 
"RTN","SAMITIU",15,0)
 new nodecnt,fields
"RTN","SAMITIU",16,0)
 kill ^KBAP("SAMITIU")
"RTN","SAMITIU",17,0)
 ;
"RTN","SAMITIU",18,0)
 ; Save every segment to the ^KBAP("SAMITIU" global
"RTN","SAMITIU",19,0)
 for  X HLNEXT Q:HLQUIT'>0  quit:HLNODE=""  do SVNODE
"RTN","SAMITIU",20,0)
 ;
"RTN","SAMITIU",21,0)
 ;Now run processing routine to put patient data
"RTN","SAMITIU",22,0)
 ;   into VAPALS patient-lookup graph
"RTN","SAMITIU",23,0)
 do RECTIU(.fields)
"RTN","SAMITIU",24,0)
 ;
"RTN","SAMITIU",25,0)
 ; Don't (ACK)nowledge ACK messages (ien into file 771.2)
"RTN","SAMITIU",26,0)
 I $G(HL("MTP"))=1 Q
"RTN","SAMITIU",27,0)
 ;
"RTN","SAMITIU",28,0)
 ; Send ACK message
"RTN","SAMITIU",29,0)
ACK D:'($get(%ut)) ACK^SAMIHL7
"RTN","SAMITIU",30,0)
 ;
"RTN","SAMITIU",31,0)
 Q
"RTN","SAMITIU",32,0)
 ;
"RTN","SAMITIU",33,0)
 ;
"RTN","SAMITIU",34,0)
 ;@ppi
"RTN","SAMITIU",35,0)
SVNODE ; Save HL7 segment to ^KBAP global
"RTN","SAMITIU",36,0)
 new kbapcnt
"RTN","SAMITIU",37,0)
 set ^KBAP("SAMITIU",0)=$get(^KBAP("SAMITIU",0))+1
"RTN","SAMITIU",38,0)
 set kbapcnt=$get(^KBAP("SAMITIU",0))
"RTN","SAMITIU",39,0)
 set ^KBAP("SAMITIU",kbapcnt)=HLNODE
"RTN","SAMITIU",40,0)
 Q
"RTN","SAMITIU",41,0)
 ;
"RTN","SAMITIU",42,0)
 ;
"RTN","SAMITIU",43,0)
 ;@ppi
"RTN","SAMITIU",44,0)
RECTIU(fields) ; Parse contents of ^KBAP("SAMITIU") into patient-lookup graph
"RTN","SAMITIU",45,0)
 ;@input
"RTN","SAMITIU",46,0)
 ;  fields = variable by reference. Used when unit testing
"RTN","SAMITIU",47,0)
 ;@output
"RTN","SAMITIU",48,0)
 ;  fields = array of last entry parsed by PARSE
"RTN","SAMITIU",49,0)
 ;
"RTN","SAMITIU",50,0)
 kill fields
"RTN","SAMITIU",51,0)
 new node,nodecnt,fieldstr
"RTN","SAMITIU",52,0)
 set fieldstr="",nodecnt=0
"RTN","SAMITIU",53,0)
 for  set nodecnt=$order(^KBAP("SAMITIU",nodecnt)) quit:'nodecnt  do
"RTN","SAMITIU",54,0)
 . if ^KBAP("SAMITIU",nodecnt)["MSH^~" quit
"RTN","SAMITIU",55,0)
 . if ^KBAP("SAMITIU",nodecnt)["active duty" do  quit
"RTN","SAMITIU",56,0)
 .. set fieldstr=^KBAP("SAMITIU",nodecnt)
"RTN","SAMITIU",57,0)
 .; ok we have a node with patient data
"RTN","SAMITIU",58,0)
 . s node=^KBAP("SAMITIU",nodecnt)
"RTN","SAMITIU",59,0)
 . do PARSE(node,fieldstr,.fields)
"RTN","SAMITIU",60,0)
 .; do not update patient-lookup graph if doing unit testing
"RTN","SAMITIU",61,0)
 . do:'$data(%ut) UPDTPTL^SAMIHL7(.fields)
"RTN","SAMITIU",62,0)
 quit
"RTN","SAMITIU",63,0)
 ;
"RTN","SAMITIU",64,0)
 ;
"RTN","SAMITIU",65,0)
 ;@ppi
"RTN","SAMITIU",66,0)
PARSE(node,fieldstr,fields) ;
"RTN","SAMITIU",67,0)
 ;@input
"RTN","SAMITIU",68,0)
 ;   node     = node in ^KBAP("SAMITIU" global
"RTN","SAMITIU",69,0)
 ;   fieldstr = delimited string of field names
"RTN","SAMITIU",70,0)
 ;   fields   = array by reference
"RTN","SAMITIU",71,0)
 ;@output
"RTN","SAMITIU",72,0)
 ;   fields  = array with information from ^KBAP entry
"RTN","SAMITIU",73,0)
 ;
"RTN","SAMITIU",74,0)
 kill fields
"RTN","SAMITIU",75,0)
 new fldcnt,ss
"RTN","SAMITIU",76,0)
 for fldcnt=1:1:$length(fieldstr,"^") do
"RTN","SAMITIU",77,0)
 . set ss=$piece(fieldstr,"^",fldcnt)
"RTN","SAMITIU",78,0)
 . set fields(ss)=$piece(node,"^",fldcnt)
"RTN","SAMITIU",79,0)
 . if ss="sex" do
"RTN","SAMITIU",80,0)
 .. set fields(ss)=fields(ss)_"^"_$select(fields(ss)["M":"MALE",fields(ss)["F":"FEMALE",1:"")
"RTN","SAMITIU",81,0)
 .. set fields("gender")=fields("sex")
"RTN","SAMITIU",82,0)
 zwr fields
"RTN","SAMITIU",83,0)
 write !
"RTN","SAMITIU",84,0)
 quit
"RTN","SAMITIU",85,0)
 ;
"RTN","SAMITIU",86,0)
 ;
"RTN","SAMITIU",87,0)
EOR ;End of routine SAMITIU
"RTN","SAMIUT7")
0^4^B20430771
"RTN","SAMIUT7",1,0)
SAMIUT7 ;ven/lgc - UNIT TEST for SAMIHL7 ;Oct 04, 2019@20:42
"RTN","SAMIUT7",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUT7",3,0)
 ;
"RTN","SAMIUT7",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUT7",5,0)
 ;
"RTN","SAMIUT7",6,0)
 ; @section 0 primary development
"RTN","SAMIUT7",7,0)
 ;
"RTN","SAMIUT7",8,0)
 ; @routine-credits
"RTN","SAMIUT7",9,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUT7",10,0)
 ;  larry@fiscientific.com
"RTN","SAMIUT7",11,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUT7",12,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUT7",13,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUT7",14,0)
 ; @license: Apache 2.0
"RTN","SAMIUT7",15,0)
 ;  https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIUT7",16,0)
 ;
"RTN","SAMIUT7",17,0)
 ; @application: SAMI
"RTN","SAMIUT7",18,0)
 ; @version: 18.0
"RTN","SAMIUT7",19,0)
 ; @patch-list: none yet
"RTN","SAMIUT7",20,0)
 ;
"RTN","SAMIUT7",21,0)
 ; @to-do
"RTN","SAMIUT7",22,0)
 ;
"RTN","SAMIUT7",23,0)
 ; @section 1 code
"RTN","SAMIUT7",24,0)
 ;
"RTN","SAMIUT7",25,0)
START i $t(^%ut)="" w !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","SAMIUT7",26,0)
 d EN^%ut($T(+0),2)
"RTN","SAMIUT7",27,0)
 q
"RTN","SAMIUT7",28,0)
 ;
"RTN","SAMIUT7",29,0)
STARTUP n utsuccess
"RTN","SAMIUT7",30,0)
 q
"RTN","SAMIUT7",31,0)
 ;
"RTN","SAMIUT7",32,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUT7",33,0)
 k utsuccess
"RTN","SAMIUT7",34,0)
 q
"RTN","SAMIUT7",35,0)
 ;
"RTN","SAMIUT7",36,0)
 ;
"RTN","SAMIUT7",37,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUT7",38,0)
 D ^SAMIHL7
"RTN","SAMIUT7",39,0)
 d SUCCEED^%ut
"RTN","SAMIUT7",40,0)
 q
"RTN","SAMIUT7",41,0)
 ;
"RTN","SAMIUT7",42,0)
UTUPDT ; @TEST - Update patient-lookup graph
"RTN","SAMIUT7",43,0)
 ;UPDTPTL^SAMIHL7
"RTN","SAMIUT7",44,0)
 ;
"RTN","SAMIUT7",45,0)
 ; keep track of whether patient-lookup existed before this
"RTN","SAMIUT7",46,0)
 ;   unit test.  If not, delete the graph after testing
"RTN","SAMIUT7",47,0)
 new dien s dien=$order(^%wd(17.040801,"B","patient-lookup",0))
"RTN","SAMIUT7",48,0)
 ; 
"RTN","SAMIUT7",49,0)
 new root s root=$$setroot^%wd("patient-lookup")
"RTN","SAMIUT7",50,0)
 new ptien,newpat set newpat=0
"RTN","SAMIUT7",51,0)
 ;
"RTN","SAMIUT7",52,0)
 ;Build fields variable
"RTN","SAMIUT7",53,0)
 new field,cnt,fields
"RTN","SAMIUT7",54,0)
 set cnt=0
"RTN","SAMIUT7",55,0)
 for  set cnt=cnt+1,field=$Text(FIELDS+cnt) quit:(field["***END***")  do
"RTN","SAMIUT7",56,0)
 . set fields($piece($piece(field,";;",2),"^"))=$piece($piece(field,";;",2),"^",2)
"RTN","SAMIUT7",57,0)
 ;
"RTN","SAMIUT7",58,0)
 D UPDTPTL^SAMIHL7(.fields)
"RTN","SAMIUT7",59,0)
 ;
"RTN","SAMIUT7",60,0)
 ; Now look for entry in patient-lookup graph
"RTN","SAMIUT7",61,0)
 ;
"RTN","SAMIUT7",62,0)
 new ptien set ptien=$order(@root@("dfn",$get(fields("dfn")),0))
"RTN","SAMIUT7",63,0)
 set utsuccess=(ptien>0)
"RTN","SAMIUT7",64,0)
 ;if utsuccess write !,"UPDATE:A patient-lookup graph- ok"
"RTN","SAMIUT7",65,0)
 do CHKEQ^%ut(utsuccess,1,"UPDATE:A patient-lookup graph failed!")
"RTN","SAMIUT7",66,0)
 new ss s ss="",utsuccess=1
"RTN","SAMIUT7",67,0)
 for  set ss=$order(fields(ss)) quit:(ss="")  d  quit:'utsuccess
"RTN","SAMIUT7",68,0)
 . if '($data(@root@(ptien,ss))) set utsuccess=0 quit
"RTN","SAMIUT7",69,0)
 . if '((@root@(ptien,ss))=fields(ss)) s utsuccess=0
"RTN","SAMIUT7",70,0)
 ;if utsuccess write !,"UPDATE:B patient-lookup graph- ok"
"RTN","SAMIUT7",71,0)
 do CHKEQ^%ut(utsuccess,1,"UPDATE:B patient-lookup graph failed!")
"RTN","SAMIUT7",72,0)
 set utsuccess=1
"RTN","SAMIUT7",73,0)
 if '$order(@root@("dfn",fields("dfn"),0)) set utsuccess=0
"RTN","SAMIUT7",74,0)
 if '$order(@root@("ssn",fields("ssn"),0)) set utsuccess=0
"RTN","SAMIUT7",75,0)
 if '$order(@root@("icn",fields("icn"),0)) set utsuccess=0
"RTN","SAMIUT7",76,0)
 if '$order(@root@("last5",fields("last5"),0)) set utsuccess=0
"RTN","SAMIUT7",77,0)
 if '$order(@root@("saminame",fields("saminame"),0)) set utsuccess=0
"RTN","SAMIUT7",78,0)
 ;if utsuccess write !,"UPDATE:C patient-lookup graph- ok"
"RTN","SAMIUT7",79,0)
 do CHKEQ^%ut(utsuccess,1,"UPDATE:C patient-lookup graph failed!")
"RTN","SAMIUT7",80,0)
 ;
"RTN","SAMIUT7",81,0)
 ; Now change some fields and update again
"RTN","SAMIUT7",82,0)
 set fields("saminame")="Noname,HaveI"
"RTN","SAMIUT7",83,0)
 set fields("last5")="H0000"
"RTN","SAMIUT7",84,0)
 ;
"RTN","SAMIUT7",85,0)
 D UPDTPTL^SAMIHL7(.fields)
"RTN","SAMIUT7",86,0)
 set utsuccess=1
"RTN","SAMIUT7",87,0)
 if '(@root@(ptien,"saminame")=fields("saminame")) set utsuccess=0
"RTN","SAMIUT7",88,0)
 if '($order(@root@("last5","H0000",0))=ptien) set utsuccess=0
"RTN","SAMIUT7",89,0)
 do CHKEQ^%ut(utsuccess,1,"UPDATE:D patient-lookup graph failed!")
"RTN","SAMIUT7",90,0)
 ;
"RTN","SAMIUT7",91,0)
 ; Now delete entry in patient-lookup graph
"RTN","SAMIUT7",92,0)
 ;
"RTN","SAMIUT7",93,0)
 kill @root@(ptien)
"RTN","SAMIUT7",94,0)
 kill @root@("dfn",fields("dfn"),ptien)
"RTN","SAMIUT7",95,0)
 kill @root@("ssn",fields("ssn"),ptien)
"RTN","SAMIUT7",96,0)
 kill @root@("icn",fields("icn"),ptien)
"RTN","SAMIUT7",97,0)
 kill @root@("last5",fields("last5"),ptien)
"RTN","SAMIUT7",98,0)
 kill @root@("name",fields("saminame"),ptien)
"RTN","SAMIUT7",99,0)
 kill @root@("name",$$UP^XLFSTR(fields("saminame")),ptien)
"RTN","SAMIUT7",100,0)
 kill @root@("sinamel",fields("sinamel"),ptien)
"RTN","SAMIUT7",101,0)
 kill @root@("sinamef",fields("sinamef"),ptien)
"RTN","SAMIUT7",102,0)
 quit
"RTN","SAMIUT7",103,0)
 ;
"RTN","SAMIUT7",104,0)
 ;
"RTN","SAMIUT7",105,0)
FIELDS ;;
"RTN","SAMIUT7",106,0)
 ;;active duty=N
"RTN","SAMIUT7",107,0)
 ;;address1^1234 LOOPdLOOP DRIVE
"RTN","SAMIUT7",108,0)
 ;;address2^second house
"RTN","SAMIUT7",109,0)
 ;;address3^on the LEFT
"RTN","SAMIUT7",110,0)
 ;;age^99
"RTN","SAMIUT7",111,0)
 ;;city^Looptown
"RTN","SAMIUT7",112,0)
 ;;county^CIRCLE
"RTN","SAMIUT7",113,0)
 ;;dfn^987654321
"RTN","SAMIUT7",114,0)
 ;;gender^M
"RTN","SAMIUT7",115,0)
 ;;icn^87654321
"RTN","SAMIUT7",116,0)
 ;;last5^N0000
"RTN","SAMIUT7",117,0)
 ;;marital status^not
"RTN","SAMIUT7",118,0)
 ;;phon^555-555-5555
"RTN","SAMIUT7",119,0)
 ;;saminame^Noname,Ihave
"RTN","SAMIUT7",120,0)
 ;;sbdob^2018-10-03
"RTN","SAMIUT7",121,0)
 ;;sensitive patient^0
"RTN","SAMIUT7",122,0)
 ;;sex^M
"RTN","SAMIUT7",123,0)
 ;;sinamef^Ihave
"RTN","SAMIUT7",124,0)
 ;;sinamel^Noname
"RTN","SAMIUT7",125,0)
 ;;ssn^999990000
"RTN","SAMIUT7",126,0)
 ;;state^WA
"RTN","SAMIUT7",127,0)
 ;;zip^00000
"RTN","SAMIUT7",128,0)
 ;;***END***
"RTN","SAMIUT7",129,0)
 ;
"RTN","SAMIUT7",130,0)
EOR ;End of routine SAMIUT7
"RTN","SAMIUT7A")
0^5^B4445311
"RTN","SAMIUT7A",1,0)
SAMIUT7A ;ven/lgc - UNIT TEST for SAMIADT ;Nov 25, 2019@17:59
"RTN","SAMIUT7A",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUT7A",3,0)
 ;
"RTN","SAMIUT7A",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUT7A",5,0)
 ;
"RTN","SAMIUT7A",6,0)
 ; @section 0 primary development
"RTN","SAMIUT7A",7,0)
 ;
"RTN","SAMIUT7A",8,0)
 ; @routine-credits
"RTN","SAMIUT7A",9,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUT7A",10,0)
 ;  larry@fiscientific.com
"RTN","SAMIUT7A",11,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUT7A",12,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUT7A",13,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUT7A",14,0)
 ; @license: Apache 2.0
"RTN","SAMIUT7A",15,0)
 ;  https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIUT7A",16,0)
 ;
"RTN","SAMIUT7A",17,0)
 ; @application: SAMI
"RTN","SAMIUT7A",18,0)
 ; @version: 18.0
"RTN","SAMIUT7A",19,0)
 ; @patch-list: none yet
"RTN","SAMIUT7A",20,0)
 ;
"RTN","SAMIUT7A",21,0)
 ; @to-do
"RTN","SAMIUT7A",22,0)
 ;
"RTN","SAMIUT7A",23,0)
 ; @section 1 code
"RTN","SAMIUT7A",24,0)
 ;
"RTN","SAMIUT7A",25,0)
START i $t(^%ut)="" w !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","SAMIUT7A",26,0)
 d EN^%ut($T(+0),2)
"RTN","SAMIUT7A",27,0)
 q
"RTN","SAMIUT7A",28,0)
 ;
"RTN","SAMIUT7A",29,0)
STARTUP n utsuccess
"RTN","SAMIUT7A",30,0)
 q
"RTN","SAMIUT7A",31,0)
 ;
"RTN","SAMIUT7A",32,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUT7A",33,0)
 k utsuccess
"RTN","SAMIUT7A",34,0)
 q
"RTN","SAMIUT7A",35,0)
 ;
"RTN","SAMIUT7A",36,0)
 ;
"RTN","SAMIUT7A",37,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUT7A",38,0)
 D ^SAMIADT
"RTN","SAMIUT7A",39,0)
 d SUCCEED^%ut
"RTN","SAMIUT7A",40,0)
 q
"RTN","SAMIUT7A",41,0)
 ;
"RTN","SAMIUT7A",42,0)
UTEN ; @TEST - Saving and parsing an ADT HL7 message
"RTN","SAMIUT7A",43,0)
 ;EN^SAMIADT
"RTN","SAMIUT7A",44,0)
 ;
"RTN","SAMIUT7A",45,0)
 ;Find a message in 772 and 773 and build variables expected
"RTN","SAMIUT7A",46,0)
 ;  when trapping an incoming message
"RTN","SAMIUT7A",47,0)
 ;
"RTN","SAMIUT7A",48,0)
 new ok,HLMTIENS,HLMTIEN,HLNEXT,HLNODE,HLQUIT,HL
"RTN","SAMIUT7A",49,0)
 set HLMTIENS="A",ok=0,HLNODE="",HLQUIT="",HL("MTP")=1
"RTN","SAMIUT7A",50,0)
 for  set HLMTIENS=$order(^HLMA(HLMTIENS),-1) do  quit:ok
"RTN","SAMIUT7A",51,0)
 . set HL("FS")=$E(^HLMA(HLMTIENS,"MSH",1,0),4,4)
"RTN","SAMIUT7A",52,0)
 . set:'($piece(^HLMA(HLMTIENS,"MSH",1,0),HL("FS"),9)["ADT") ok=1
"RTN","SAMIUT7A",53,0)
 ;
"RTN","SAMIUT7A",54,0)
 set HLMTIEN=+^HLMA(HLMTIENS,0)
"RTN","SAMIUT7A",55,0)
 set HL("ECH")=$piece(^HLMA(HLMTIENS,"MSH",1,0),HL("FS"),2)
"RTN","SAMIUT7A",56,0)
 set HLNEXT="D HLNEXT^HLCSUTL"
"RTN","SAMIUT7A",57,0)
 ;
"RTN","SAMIUT7A",58,0)
 ; NOTE: existence of %ut during unit testing prevents
"RTN","SAMIUT7A",59,0)
 ;   the patient-lookup graph actually being updated in SAMIHL7
"RTN","SAMIUT7A",60,0)
 D EN^SAMIADT
"RTN","SAMIUT7A",61,0)
 ;
"RTN","SAMIUT7A",62,0)
 ; Now check ^KBAP("SAMIADT" global for message contents
"RTN","SAMIUT7A",63,0)
 new node s node=$na(^KBAP("SAMITIU",0)),utsuccess=1
"RTN","SAMIUT7A",64,0)
 for  X HLNEXT Q:HLQUIT'>0  do  quit:HLNODE=""  quit:'utsuccess
"RTN","SAMIUT7A",65,0)
 . set node=$Q(@node)
"RTN","SAMIUT7A",66,0)
 . set utsuccess=(@node=HLNODE)
"RTN","SAMIUT7A",67,0)
 do CHKEQ^%ut(utsuccess,1,"Move HL7 message to ^KBAP global failed")
"RTN","SAMIUT7A",68,0)
 quit
"RTN","SAMIUT7A",69,0)
 ;
"RTN","SAMIUT7A",70,0)
 ;
"RTN","SAMIUT7A",71,0)
EOR ;End of routine SAMIUT7A
"RTN","SAMIUT7T")
0^6^B4447347
"RTN","SAMIUT7T",1,0)
SAMIUT7T ;ven/lgc - UNIT TEST for SAMITIU ;Nov 25, 2019@18:00
"RTN","SAMIUT7T",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUT7T",3,0)
 ;
"RTN","SAMIUT7T",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUT7T",5,0)
 ;
"RTN","SAMIUT7T",6,0)
 ; @section 0 primary development
"RTN","SAMIUT7T",7,0)
 ;
"RTN","SAMIUT7T",8,0)
 ; @routine-credits
"RTN","SAMIUT7T",9,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUT7T",10,0)
 ;  larry@fiscientific.com
"RTN","SAMIUT7T",11,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUT7T",12,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUT7T",13,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUT7T",14,0)
 ; @license: Apache 2.0
"RTN","SAMIUT7T",15,0)
 ;  https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIUT7T",16,0)
 ;
"RTN","SAMIUT7T",17,0)
 ; @application: SAMI
"RTN","SAMIUT7T",18,0)
 ; @version: 18.0
"RTN","SAMIUT7T",19,0)
 ; @patch-list: none yet
"RTN","SAMIUT7T",20,0)
 ;
"RTN","SAMIUT7T",21,0)
 ; @to-do
"RTN","SAMIUT7T",22,0)
 ;
"RTN","SAMIUT7T",23,0)
 ; @section 1 code
"RTN","SAMIUT7T",24,0)
 ;
"RTN","SAMIUT7T",25,0)
START i $t(^%ut)="" w !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","SAMIUT7T",26,0)
 d EN^%ut($T(+0),2)
"RTN","SAMIUT7T",27,0)
 q
"RTN","SAMIUT7T",28,0)
 ;
"RTN","SAMIUT7T",29,0)
STARTUP n utsuccess
"RTN","SAMIUT7T",30,0)
 q
"RTN","SAMIUT7T",31,0)
 ;
"RTN","SAMIUT7T",32,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUT7T",33,0)
 k utsuccess
"RTN","SAMIUT7T",34,0)
 q
"RTN","SAMIUT7T",35,0)
 ;
"RTN","SAMIUT7T",36,0)
 ;
"RTN","SAMIUT7T",37,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUT7T",38,0)
 D ^SAMITIU
"RTN","SAMIUT7T",39,0)
 d SUCCEED^%ut
"RTN","SAMIUT7T",40,0)
 q
"RTN","SAMIUT7T",41,0)
 ;
"RTN","SAMIUT7T",42,0)
UTEN ; @TEST - Saving and parsing an HL7 message
"RTN","SAMIUT7T",43,0)
 ;EN^SAMITIU
"RTN","SAMIUT7T",44,0)
 ;
"RTN","SAMIUT7T",45,0)
 ;Find a message in 772 and 773 and build variables expected
"RTN","SAMIUT7T",46,0)
 ;  when trapping an incoming message
"RTN","SAMIUT7T",47,0)
 ;
"RTN","SAMIUT7T",48,0)
 new ok,HLMTIENS,HLMTIEN,HLNEXT,HLNODE,HLQUIT,HL
"RTN","SAMIUT7T",49,0)
 set HLMTIENS="A",ok=0,HLNODE="",HLQUIT="",HL("MTP")=1
"RTN","SAMIUT7T",50,0)
 for  set HLMTIENS=$order(^HLMA(HLMTIENS),-1) do  quit:ok
"RTN","SAMIUT7T",51,0)
 . set HL("FS")=$E(^HLMA(HLMTIENS,"MSH",1,0),4,4)
"RTN","SAMIUT7T",52,0)
 . set:'($piece(^HLMA(HLMTIENS,"MSH",1,0),HL("FS"),9)["ACK") ok=1
"RTN","SAMIUT7T",53,0)
 ;
"RTN","SAMIUT7T",54,0)
 set HLMTIEN=+^HLMA(HLMTIENS,0)
"RTN","SAMIUT7T",55,0)
 set HL("ECH")=$piece(^HLMA(HLMTIENS,"MSH",1,0),HL("FS"),2)
"RTN","SAMIUT7T",56,0)
 set HLNEXT="D HLNEXT^HLCSUTL"
"RTN","SAMIUT7T",57,0)
 ;
"RTN","SAMIUT7T",58,0)
 ; NOTE: existence of %ut during unit testing prevents
"RTN","SAMIUT7T",59,0)
 ;   the patient-lookup graph actually being updated in SAMIHL7
"RTN","SAMIUT7T",60,0)
 D EN^SAMITIU
"RTN","SAMIUT7T",61,0)
 ;
"RTN","SAMIUT7T",62,0)
 ; Now check ^KBAP("SAMITIU" global for message contents
"RTN","SAMIUT7T",63,0)
 new node s node=$na(^KBAP("SAMITIU",0)),utsuccess=1
"RTN","SAMIUT7T",64,0)
 for  X HLNEXT Q:HLQUIT'>0  do  quit:HLNODE=""  quit:'utsuccess
"RTN","SAMIUT7T",65,0)
 . set node=$Q(@node)
"RTN","SAMIUT7T",66,0)
 . set utsuccess=(@node=HLNODE)
"RTN","SAMIUT7T",67,0)
 do CHKEQ^%ut(utsuccess,1,"Move HL7 message to ^KBAP global failed")
"RTN","SAMIUT7T",68,0)
 quit
"RTN","SAMIUT7T",69,0)
 ;
"RTN","SAMIUT7T",70,0)
 ;
"RTN","SAMIUT7T",71,0)
EOR ;End of routine SAMIUT7T
"VER")
8.0^22.2
**END**
**END**
