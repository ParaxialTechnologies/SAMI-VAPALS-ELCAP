KIDS Distribution saved on Apr 16, 2021@12:49:20
cteval form prefill prior scans field correction
**KIDS**:SAMI*18.0*11^

**INSTALL NAME**
SAMI*18.0*11
"BLD",11508,0)
SAMI*18.0*11^SAMI^0^3210416^n
"BLD",11508,1,0)
^^1^1^3210329^
"BLD",11508,1,1,0)
Critical bugs fixed in Intake, CT eval, and reports
"BLD",11508,4,0)
^9.64PA^^
"BLD",11508,6)
^11
"BLD",11508,6.3)
11
"BLD",11508,"KRN",0)
^9.67PA^1.5^25
"BLD",11508,"KRN",.4,0)
.4
"BLD",11508,"KRN",.401,0)
.401
"BLD",11508,"KRN",.402,0)
.402
"BLD",11508,"KRN",.403,0)
.403
"BLD",11508,"KRN",.5,0)
.5
"BLD",11508,"KRN",.84,0)
.84
"BLD",11508,"KRN",1.5,0)
1.5
"BLD",11508,"KRN",1.6,0)
1.6
"BLD",11508,"KRN",1.61,0)
1.61
"BLD",11508,"KRN",1.62,0)
1.62
"BLD",11508,"KRN",3.6,0)
3.6
"BLD",11508,"KRN",3.8,0)
3.8
"BLD",11508,"KRN",9.2,0)
9.2
"BLD",11508,"KRN",9.8,0)
9.8
"BLD",11508,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",11508,"KRN",9.8,"NM",1,0)
SAMINOT1^^0^B443163534
"BLD",11508,"KRN",9.8,"NM",2,0)
SAMIUR^^0^B315699954
"BLD",11508,"KRN",9.8,"NM",3,0)
SAMINUL^^0^B101598
"BLD",11508,"KRN",9.8,"NM",4,0)
SAMICSV^^0^B57080938
"BLD",11508,"KRN",9.8,"NM",5,0)
SAMIUR2^^0^B406603480
"BLD",11508,"KRN",9.8,"NM",6,0)
SAMIHL7^^0^B89755453
"BLD",11508,"KRN",9.8,"NM",7,0)
SAMICAS3^^0^B268053249
"BLD",11508,"KRN",9.8,"NM","B","SAMICAS3",7)

"BLD",11508,"KRN",9.8,"NM","B","SAMICSV",4)

"BLD",11508,"KRN",9.8,"NM","B","SAMIHL7",6)

"BLD",11508,"KRN",9.8,"NM","B","SAMINOT1",1)

"BLD",11508,"KRN",9.8,"NM","B","SAMINUL",3)

"BLD",11508,"KRN",9.8,"NM","B","SAMIUR",2)

"BLD",11508,"KRN",9.8,"NM","B","SAMIUR2",5)

"BLD",11508,"KRN",19,0)
19
"BLD",11508,"KRN",19.1,0)
19.1
"BLD",11508,"KRN",101,0)
101
"BLD",11508,"KRN",409.61,0)
409.61
"BLD",11508,"KRN",771,0)
771
"BLD",11508,"KRN",779.2,0)
779.2
"BLD",11508,"KRN",870,0)
870
"BLD",11508,"KRN",8989.51,0)
8989.51
"BLD",11508,"KRN",8989.52,0)
8989.52
"BLD",11508,"KRN",8993,0)
8993
"BLD",11508,"KRN",8994,0)
8994
"BLD",11508,"KRN","B",.4,.4)

"BLD",11508,"KRN","B",.401,.401)

"BLD",11508,"KRN","B",.402,.402)

"BLD",11508,"KRN","B",.403,.403)

"BLD",11508,"KRN","B",.5,.5)

"BLD",11508,"KRN","B",.84,.84)

"BLD",11508,"KRN","B",1.5,1.5)

"BLD",11508,"KRN","B",1.6,1.6)

"BLD",11508,"KRN","B",1.61,1.61)

"BLD",11508,"KRN","B",1.62,1.62)

"BLD",11508,"KRN","B",3.6,3.6)

"BLD",11508,"KRN","B",3.8,3.8)

"BLD",11508,"KRN","B",9.2,9.2)

"BLD",11508,"KRN","B",9.8,9.8)

"BLD",11508,"KRN","B",19,19)

"BLD",11508,"KRN","B",19.1,19.1)

"BLD",11508,"KRN","B",101,101)

"BLD",11508,"KRN","B",409.61,409.61)

"BLD",11508,"KRN","B",771,771)

"BLD",11508,"KRN","B",779.2,779.2)

"BLD",11508,"KRN","B",870,870)

"BLD",11508,"KRN","B",8989.51,8989.51)

"BLD",11508,"KRN","B",8989.52,8989.52)

"BLD",11508,"KRN","B",8993,8993)

"BLD",11508,"KRN","B",8994,8994)

"BLD",11508,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",11508,"QUES",0)
^9.62^^
"BLD",11508,"REQB",0)
^9.611^7^6
"BLD",11508,"REQB",1,0)
SAMI*18.0*2^1
"BLD",11508,"REQB",2,0)
SAMI 18.0T05^1
"BLD",11508,"REQB",3,0)
SAMI*18.0*6^1
"BLD",11508,"REQB",5,0)
SAMI*18.0*8^1
"BLD",11508,"REQB",6,0)
SAMI*18.0*9^1
"BLD",11508,"REQB",7,0)
SAMI*18.0*10^1
"BLD",11508,"REQB","B","SAMI 18.0T05",2)

"BLD",11508,"REQB","B","SAMI*18.0*10",7)

"BLD",11508,"REQB","B","SAMI*18.0*2",1)

"BLD",11508,"REQB","B","SAMI*18.0*6",3)

"BLD",11508,"REQB","B","SAMI*18.0*8",5)

"BLD",11508,"REQB","B","SAMI*18.0*9",6)

"MBREQ")
0
"PKG",230,-1)
1^1
"PKG",230,0)
SAMI^SAMI^SCREENING APPLICATIONS MANAGEMENT - IELCAP
"PKG",230,22,0)
^9.49I^1^1
"PKG",230,22,1,0)
18.0^3191203
"PKG",230,22,1,"PAH",1,0)
11^3210416^1
"PKG",230,22,1,"PAH",1,1,0)
^^1^1^3210416
"PKG",230,22,1,"PAH",1,1,1,0)
Critical bugs fixed in Intake, CT eval, and reports
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","SAMICAS3")
0^7^B268053249
"RTN","SAMICAS3",1,0)
SAMICAS3 ;ven/gpl - ielcap: case review page (cont) ;2021-03-17T18:31Z
"RTN","SAMICAS3",2,0)
 ;;18.0;SAMI;**3,9**;;Build 11
"RTN","SAMICAS3",3,0)
 ;;1.18.0.9-i9
"RTN","SAMICAS3",4,0)
 ;
"RTN","SAMICAS3",5,0)
 ; SAMICAS3 contains ppis and other subroutines to support processing
"RTN","SAMICAS3",6,0)
 ; of the VAPALS case review page.
"RTN","SAMICAS3",7,0)
 ;
"RTN","SAMICAS3",8,0)
 quit  ; no entry from top
"RTN","SAMICAS3",9,0)
 ;
"RTN","SAMICAS3",10,0)
 ;
"RTN","SAMICAS3",11,0)
 ;
"RTN","SAMICAS3",12,0)
 ;@section 0 primary development: see routine %wful
"RTN","SAMICAS3",13,0)
 ;
"RTN","SAMICAS3",14,0)
 ;
"RTN","SAMICAS3",15,0)
 ;
"RTN","SAMICAS3",16,0)
 ;@license: see routine SAMIUL
"RTN","SAMICAS3",17,0)
 ;@documentation : see SAMICUL
"RTN","SAMICAS3",18,0)
 ;@contents
"RTN","SAMICAS3",19,0)
 ; WSNFPOST: post new form selection (post service)
"RTN","SAMICAS3",20,0)
 ; MKSBFORM: create background form
"RTN","SAMICAS3",21,0)
 ; $$PREVNOD = key of latest form including nodule grid
"RTN","SAMICAS3",22,0)
 ; $$LASTCMP = date & key of last comparison scan
"RTN","SAMICAS3",23,0)
 ; $$PRIORCMP = dates of all scans before last comparison scan
"RTN","SAMICAS3",24,0)
 ; SORTFRMS: sorts all forms for patient sid by date
"RTN","SAMICAS3",25,0)
 ; MKCEFORM: create ct evaluation form
"RTN","SAMICAS3",26,0)
 ; MKFUFORM: create follow-up form
"RTN","SAMICAS3",27,0)
 ; $$BASELNDT = last previous baseline ct date
"RTN","SAMICAS3",28,0)
 ; MKPTFORM: create pet evaluation form
"RTN","SAMICAS3",29,0)
 ; MKITFORM: create intervention form
"RTN","SAMICAS3",30,0)
 ; MKBXFORM: create biopsy form
"RTN","SAMICAS3",31,0)
 ; CASETBL: generates case review table
"RTN","SAMICAS3",32,0)
 ;
"RTN","SAMICAS3",33,0)
 ;
"RTN","SAMICAS3",34,0)
 ;
"RTN","SAMICAS3",35,0)
 ;@section 1 WSNFPOST & related subroutines
"RTN","SAMICAS3",36,0)
 ;
"RTN","SAMICAS3",37,0)
 ;
"RTN","SAMICAS3",38,0)
 ;
"RTN","SAMICAS3",39,0)
 ;;@ppi WSNFPOST^SAMICAS3, post new form selection (post service)
"RTN","SAMICAS3",40,0)
WSNFPOST ; post new form selection (post service)
"RTN","SAMICAS3",41,0)
 ;
"RTN","SAMICAS3",42,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",43,0)
 ;
"RTN","SAMICAS3",44,0)
 ;ven/gpl;web service;procedure;
"RTN","SAMICAS3",45,0)
 ;@web service
"RTN","SAMICAS3",46,0)
 ; web service SAMICASE-wsNuFormPost
"RTN","SAMICAS3",47,0)
 ;@called by
"RTN","SAMICAS3",48,0)
 ; WSNFPOST^SAMICASE
"RTN","SAMICAS3",49,0)
 ;@calls
"RTN","SAMICAS3",50,0)
 ; parseBody^%wf
"RTN","SAMICAS3",51,0)
 ; GETHOME^SAMIHOM3
"RTN","SAMICAS3",52,0)
 ; $$KEYDATE^SAMIHOM3
"RTN","SAMICAS3",53,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",54,0)
 ; $$KEY2FM^SAMICAS2
"RTN","SAMICAS3",55,0)
 ; MKSBFORM^SAMICAS3
"RTN","SAMICAS3",56,0)
 ; MKCEFORM^SAMICAS3
"RTN","SAMICAS3",57,0)
 ; MKFUFORM^SAMICAS3
"RTN","SAMICAS3",58,0)
 ; MKBXFORM^SAMICAS3
"RTN","SAMICAS3",59,0)
 ; MKPTFORM^SAMICAS3
"RTN","SAMICAS3",60,0)
 ; MKITFORM^SAMICAS3
"RTN","SAMICAS3",61,0)
 ;@input
"RTN","SAMICAS3",62,0)
 ; .ARGS
"RTN","SAMICAS3",63,0)
 ; .ARGS("form")
"RTN","SAMICAS3",64,0)
 ; .ARGS("studyid")
"RTN","SAMICAS3",65,0)
 ; .ARGS("sid")
"RTN","SAMICAS3",66,0)
 ; .BODY
"RTN","SAMICAS3",67,0)
 ; .BODY(1) (e.g. "samiroute=casereview&dfn="_dfn_"&studyid="_studyid)
"RTN","SAMICAS3",68,0)
 ;@output
"RTN","SAMICAS3",69,0)
 ; @RESULT
"RTN","SAMICAS3",70,0)
 ;@tests
"RTN","SAMICAS3",71,0)
 ; SAMIUTS2
"RTN","SAMICAS3",72,0)
 ;
"RTN","SAMICAS3",73,0)
 ;@stanza 2 get new form
"RTN","SAMICAS3",74,0)
 ;
"RTN","SAMICAS3",75,0)
 new vars,bdy
"RTN","SAMICAS3",76,0)
 set bdy=$get(BODY(1))
"RTN","SAMICAS3",77,0)
 do parseBody^%wf("vars",.bdy)
"RTN","SAMICAS3",78,0)
 merge vars=ARGS
"RTN","SAMICAS3",79,0)
 merge ^SAMIUL("nuform","vars")=vars
"RTN","SAMICAS3",80,0)
 ;
"RTN","SAMICAS3",81,0)
 new sid set sid=$get(vars("studyid"))
"RTN","SAMICAS3",82,0)
 if sid="" set sid=$get(ARGS("sid"))
"RTN","SAMICAS3",83,0)
 if sid="" do  quit  ;
"RTN","SAMICAS3",84,0)
 . do GETHOME^SAMIHOM3(.RESULT,.ARGS) ; on error return to home page
"RTN","SAMICAS3",85,0)
 . quit
"RTN","SAMICAS3",86,0)
 ;
"RTN","SAMICAS3",87,0)
 set nuform=$get(vars("form"))
"RTN","SAMICAS3",88,0)
 if nuform="" set nuform="ceform"
"RTN","SAMICAS3",89,0)
 ;
"RTN","SAMICAS3",90,0)
 new datekey set datekey=$$KEYDATE^SAMIHOM3($$NOW^XLFDT)
"RTN","SAMICAS3",91,0)
 ;
"RTN","SAMICAS3",92,0)
 ; check to see if form already exists
"RTN","SAMICAS3",93,0)
 ;
"RTN","SAMICAS3",94,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",95,0)
 n collide s collide=0 ; duplicate form for today - backdate forms scenario
"RTN","SAMICAS3",96,0)
 if $data(@root@("graph",sid,nuform_"-"_datekey)) do  ; already exists
"RTN","SAMICAS3",97,0)
 . s collide=1
"RTN","SAMICAS3",98,0)
 . if nuform="siform" quit
"RTN","SAMICAS3",99,0)
 . if nuform="sbform" quit  ; do not create multiple background forms
"RTN","SAMICAS3",100,0)
 . new lastone
"RTN","SAMICAS3",101,0)
 . set lastone=$order(@root@("graph",sid,nuform_"-a  "),-1)
"RTN","SAMICAS3",102,0)
 . quit:lastone=""
"RTN","SAMICAS3",103,0)
 . set newfm=$$KEY2FM^SAMICASE(lastone)
"RTN","SAMICAS3",104,0)
 . set datekey=$$KEYDATE^SAMIHOM3($$FMADD^XLFDT(newfm,1)) ; add one day to the last form
"RTN","SAMICAS3",105,0)
 ;
"RTN","SAMICAS3",106,0)
 ; code to not allow two same forms for a patient a day
"RTN","SAMICAS3",107,0)
 ;
"RTN","SAMICAS3",108,0)
 i collide=1 d  q  ;
"RTN","SAMICAS3",109,0)
 . s ARGS("errorMessage")="Form already exists for today"
"RTN","SAMICAS3",110,0)
 . s ARGS("studyid")=sid
"RTN","SAMICAS3",111,0)
 . d WSCASE^SAMICASE(.RESULT,.ARGS)
"RTN","SAMICAS3",112,0)
 ;
"RTN","SAMICAS3",113,0)
 if nuform="sbform" do  ;
"RTN","SAMICAS3",114,0)
 . new oldkey s oldkey=$o(@root@("graph",sid,"sbform"))
"RTN","SAMICAS3",115,0)
 . i $e(oldkey,1,6)="sbform" d  q  ;
"RTN","SAMICAS3",116,0)
 . . set ARGS("key")=oldkey
"RTN","SAMICAS3",117,0)
 . . set ARGS("studyid")=sid
"RTN","SAMICAS3",118,0)
 . . set ARGS("form")="vapals:sbform"
"RTN","SAMICAS3",119,0)
 . new key set key="sbform-"_datekey
"RTN","SAMICAS3",120,0)
 . set ARGS("key")=key
"RTN","SAMICAS3",121,0)
 . set ARGS("studyid")=sid
"RTN","SAMICAS3",122,0)
 . set ARGS("form")="vapals:sbform"
"RTN","SAMICAS3",123,0)
 . do MKSBFORM(sid,key)
"RTN","SAMICAS3",124,0)
 . quit
"RTN","SAMICAS3",125,0)
 ;
"RTN","SAMICAS3",126,0)
 if nuform="ceform" do  ;
"RTN","SAMICAS3",127,0)
 . new key set key="ceform-"_datekey
"RTN","SAMICAS3",128,0)
 . set ARGS("key")=key
"RTN","SAMICAS3",129,0)
 . set ARGS("studyid")=sid
"RTN","SAMICAS3",130,0)
 . set ARGS("form")="vapals:ceform"
"RTN","SAMICAS3",131,0)
 . do MKCEFORM(sid,key)
"RTN","SAMICAS3",132,0)
 . quit
"RTN","SAMICAS3",133,0)
 ;
"RTN","SAMICAS3",134,0)
 if nuform="fuform" do  ;
"RTN","SAMICAS3",135,0)
 . new key set key="fuform-"_datekey
"RTN","SAMICAS3",136,0)
 . set ARGS("key")=key
"RTN","SAMICAS3",137,0)
 . set ARGS("studyid")=sid
"RTN","SAMICAS3",138,0)
 . set ARGS("form")="vapals:fuform"
"RTN","SAMICAS3",139,0)
 . do MKFUFORM(sid,key)
"RTN","SAMICAS3",140,0)
 . quit
"RTN","SAMICAS3",141,0)
 ;
"RTN","SAMICAS3",142,0)
 if nuform="bxform" do  ;
"RTN","SAMICAS3",143,0)
 . new key set key="bxform-"_datekey
"RTN","SAMICAS3",144,0)
 . set ARGS("key")=key
"RTN","SAMICAS3",145,0)
 . set ARGS("studyid")=sid
"RTN","SAMICAS3",146,0)
 . set ARGS("form")="vapals:bxform"
"RTN","SAMICAS3",147,0)
 . do MKBXFORM(sid,key)
"RTN","SAMICAS3",148,0)
 . quit
"RTN","SAMICAS3",149,0)
 ;
"RTN","SAMICAS3",150,0)
 if nuform="ptform" do  ;
"RTN","SAMICAS3",151,0)
 . new key set key="ptform-"_datekey
"RTN","SAMICAS3",152,0)
 . set ARGS("key")=key
"RTN","SAMICAS3",153,0)
 . set ARGS("studyid")=sid
"RTN","SAMICAS3",154,0)
 . set ARGS("form")="vapals:ptform"
"RTN","SAMICAS3",155,0)
 . do MKPTFORM(sid,key)
"RTN","SAMICAS3",156,0)
 . quit
"RTN","SAMICAS3",157,0)
 ;
"RTN","SAMICAS3",158,0)
 if nuform="itform" do  ;
"RTN","SAMICAS3",159,0)
 . new key set key="itform-"_datekey
"RTN","SAMICAS3",160,0)
 . set ARGS("key")=key
"RTN","SAMICAS3",161,0)
 . set ARGS("studyid")=sid
"RTN","SAMICAS3",162,0)
 . set ARGS("form")="vapals:itform"
"RTN","SAMICAS3",163,0)
 . do MKITFORM(sid,key)
"RTN","SAMICAS3",164,0)
 . quit
"RTN","SAMICAS3",165,0)
 ;
"RTN","SAMICAS3",166,0)
 do wsGetForm^%wf(.RESULT,.ARGS)
"RTN","SAMICAS3",167,0)
 ;
"RTN","SAMICAS3",168,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",169,0)
 ;
"RTN","SAMICAS3",170,0)
 quit  ; end of ppi WSNFPOST^SAMICAS3
"RTN","SAMICAS3",171,0)
 ;
"RTN","SAMICAS3",172,0)
 ;
"RTN","SAMICAS3",173,0)
 ;
"RTN","SAMICAS3",174,0)
MKSBFORM(sid,key) ; create background form
"RTN","SAMICAS3",175,0)
 ;
"RTN","SAMICAS3",176,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",177,0)
 ;
"RTN","SAMICAS3",178,0)
 ;ven/gpl;private;procedure;
"RTN","SAMICAS3",179,0)
 ;@called-by
"RTN","SAMICAS3",180,0)
 ; WSNFPOST^SAMICAS3
"RTN","SAMICAS3",181,0)
 ;@calls
"RTN","SAMICAS3",182,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",183,0)
 ; $$SID2NUM^SAMIHOM3
"RTN","SAMICAS3",184,0)
 ;@input
"RTN","SAMICAS3",185,0)
 ; sid = study id
"RTN","SAMICAS3",186,0)
 ; key =
"RTN","SAMICAS3",187,0)
 ;@output
"RTN","SAMICAS3",188,0)
 ; @root@("graph",sid,key)
"RTN","SAMICAS3",189,0)
 ;@examples [tbd]
"RTN","SAMICAS3",190,0)
 ;@tests [tbd]
"RTN","SAMICAS3",191,0)
 ;
"RTN","SAMICAS3",192,0)
 ;@stanza 2 create background form
"RTN","SAMICAS3",193,0)
 ;
"RTN","SAMICAS3",194,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",195,0)
 new sien set sien=$$SID2NUM^SAMIHOM3(sid)
"RTN","SAMICAS3",196,0)
 quit:+sien=0
"RTN","SAMICAS3",197,0)
 new cdate set cdate=$piece(key,"sbform-",2)
"RTN","SAMICAS3",198,0)
 merge @root@("graph",sid,key)=@root@(sien)
"RTN","SAMICAS3",199,0)
 set @root@("graph",sid,key,"samicreatedate")=cdate
"RTN","SAMICAS3",200,0)
 do SSAMISTA^SAMICASE(sid,key,"incomplete")
"RTN","SAMICAS3",201,0)
 ;
"RTN","SAMICAS3",202,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",203,0)
 ;
"RTN","SAMICAS3",204,0)
 quit  ; end of MKSBFORM
"RTN","SAMICAS3",205,0)
 ;
"RTN","SAMICAS3",206,0)
 ;
"RTN","SAMICAS3",207,0)
 ;
"RTN","SAMICAS3",208,0)
PREVNOD(sid) ; key of latest form including nodule grid
"RTN","SAMICAS3",209,0)
 ;
"RTN","SAMICAS3",210,0)
 ; used for nodule copy
"RTN","SAMICAS3",211,0)
 ;
"RTN","SAMICAS3",212,0)
 n retkey s retkey=""
"RTN","SAMICAS3",213,0)
 n fary
"RTN","SAMICAS3",214,0)
 d SORTFRMS(.fary,sid)
"RTN","SAMICAS3",215,0)
 n tdt s tdt=""
"RTN","SAMICAS3",216,0)
 f  s tdt=$o(fary(tdt),-1) q:tdt=""  q:retkey'=""  d  ; 
"RTN","SAMICAS3",217,0)
 . n tmpkey s tmpkey=""
"RTN","SAMICAS3",218,0)
 . f  s tmpkey=$o(fary(tdt,tmpkey)) q:tmpkey=""  q:retkey'=""  d  ; 
"RTN","SAMICAS3",219,0)
 . . i tmpkey["ceform" s retkey=tmpkey
"RTN","SAMICAS3",220,0)
 . . i tmpkey["ptform" s retkey=tmpkey
"RTN","SAMICAS3",221,0)
 . . i tmpkey["bxform" s retkey=tmpkey
"RTN","SAMICAS3",222,0)
 ;
"RTN","SAMICAS3",223,0)
 q retkey ; end of $$PREVNOD
"RTN","SAMICAS3",224,0)
 ;
"RTN","SAMICAS3",225,0)
 ;
"RTN","SAMICAS3",226,0)
 ;
"RTN","SAMICAS3",227,0)
LASTCMP(sid,retkey) ; date & key of last comparison scan
"RTN","SAMICAS3",228,0)
 ;
"RTN","SAMICAS3",229,0)
 ; passed by reference
"RTN","SAMICAS3",230,0)
 ;
"RTN","SAMICAS3",231,0)
 s retkey=""
"RTN","SAMICAS3",232,0)
 n fary
"RTN","SAMICAS3",233,0)
 d SORTFRMS(.fary,sid)
"RTN","SAMICAS3",234,0)
 n tdt s tdt=$P($$NOW^XLFDT,".",1) ; start with before today
"RTN","SAMICAS3",235,0)
 f  s tdt=$o(fary(tdt),-1) q:tdt=""  q:retkey'=""  d  ; 
"RTN","SAMICAS3",236,0)
 . n tmpkey s tmpkey=""
"RTN","SAMICAS3",237,0)
 . f  s tmpkey=$o(fary(tdt,tmpkey)) q:tmpkey=""  q:retkey'=""  d  ; 
"RTN","SAMICAS3",238,0)
 . . i tmpkey["ceform" s retkey=tmpkey
"RTN","SAMICAS3",239,0)
 ;
"RTN","SAMICAS3",240,0)
 n retdt s retdt=-1
"RTN","SAMICAS3",241,0)
 i retkey'="" d  ;
"RTN","SAMICAS3",242,0)
 . n fmdt
"RTN","SAMICAS3",243,0)
 . s fmdt=$$KEY2FM^SAMICASE(retkey)
"RTN","SAMICAS3",244,0)
 . s retdt=$$VAPALSDT^SAMICASE(fmdt)
"RTN","SAMICAS3",245,0)
 ;
"RTN","SAMICAS3",246,0)
 q retdt ; end of $$LASTCMP
"RTN","SAMICAS3",247,0)
 ;
"RTN","SAMICAS3",248,0)
 ;
"RTN","SAMICAS3",249,0)
 ;
"RTN","SAMICAS3",250,0)
PRIORCMP(sid) ; dates of all scans before last comparison scan
"RTN","SAMICAS3",251,0)
 ;
"RTN","SAMICAS3",252,0)
 n retstr s retstr=""
"RTN","SAMICAS3",253,0)
 n lastcmp s lastcmp=""
"RTN","SAMICAS3",254,0)
 n fary
"RTN","SAMICAS3",255,0)
 d SORTFRMS(.fary,sid)
"RTN","SAMICAS3",256,0)
 n tdt s tdt=$P($$NOW^XLFDT,".",1) ; start with before today
"RTN","SAMICAS3",257,0)
 f  s tdt=$o(fary(tdt),-1) q:tdt=""  d  ; 
"RTN","SAMICAS3",258,0)
 . i lastcmp="" d  ; first find the last comparison scan
"RTN","SAMICAS3",259,0)
 . . n tmpkey s tmpkey=""
"RTN","SAMICAS3",260,0)
 . . f  s tmpkey=$o(fary(tdt,tmpkey)) q:tmpkey=""  q:lastcmp'=""  d  ; 
"RTN","SAMICAS3",261,0)
 . . . i tmpkey["ceform" s lastcmp=tmpkey
"RTN","SAMICAS3",262,0)
 . d  ;
"RTN","SAMICAS3",263,0)
 . . ; next add all previous scans to retstr
"RTN","SAMICAS3",264,0)
 . . n tmpkey2 s tmpkey2=""
"RTN","SAMICAS3",265,0)
 . . f  s tmpkey2=$o(fary(tdt,tmpkey2)) q:tmpkey2=""  d  ; 
"RTN","SAMICAS3",266,0)
 . . . i tmpkey2["ceform" d  ; convert to external date
"RTN","SAMICAS3",267,0)
 . . . . s retstr=$$KEY2DT(tmpkey2)_retstr
"RTN","SAMICAS3",268,0)
 i $e(retstr,$l(retstr))="," s retstr=$e(retstr,1,$l(retstr)-1)
"RTN","SAMICAS3",269,0)
 ;
"RTN","SAMICAS3",270,0)
 q retstr ; end of $$PRIORCMP
"RTN","SAMICAS3",271,0)
 ;
"RTN","SAMICAS3",272,0)
KEY2DT(key) ; extrinsic returns a date to put in the prior scans field
"RTN","SAMICAS3",273,0)
 n retstr2 s retstr2=""
"RTN","SAMICAS3",274,0)
 n fmdt
"RTN","SAMICAS3",275,0)
 s fmdt=$$KEY2FM^SAMICASE(tmpkey2)
"RTN","SAMICAS3",276,0)
 s retstr2=$$VAPALSDT^SAMICASE(fmdt)_","_retstr2
"RTN","SAMICAS3",277,0)
 q retstr2
"RTN","SAMICAS3",278,0)
 ;
"RTN","SAMICAS3",279,0)
 ;
"RTN","SAMICAS3",280,0)
SORTFRMS(ARY,sid) ; sorts all forms for patient sid by date
"RTN","SAMICAS3",281,0)
 ;
"RTN","SAMICAS3",282,0)
 ; and returns in ARY, passed by reference
"RTN","SAMICAS3",283,0)
 ; format of return is ARY(fmdate,key)=""
"RTN","SAMICAS3",284,0)
 ;
"RTN","SAMICAS3",285,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",286,0)
 q:'$d(@root@("graph",sid))
"RTN","SAMICAS3",287,0)
 n froot s froot=$na(@root@("graph",sid))
"RTN","SAMICAS3",288,0)
 n zi s zi=""
"RTN","SAMICAS3",289,0)
 f  s zi=$o(@froot@(zi)) q:zi=""  d  ;
"RTN","SAMICAS3",290,0)
 . n ftype s ftype=$p(zi,"-",1)
"RTN","SAMICAS3",291,0)
 . n fdate s fdate=$p(zi,ftype_"-",2)
"RTN","SAMICAS3",292,0)
 . n X,Y
"RTN","SAMICAS3",293,0)
 . s X=fdate
"RTN","SAMICAS3",294,0)
 . D ^%DT
"RTN","SAMICAS3",295,0)
 . i Y=-1 d ^ZTER Q  ;
"RTN","SAMICAS3",296,0)
 . S ARY(Y,zi)=""
"RTN","SAMICAS3",297,0)
 ;
"RTN","SAMICAS3",298,0)
 q  ; end of SORTFRMS
"RTN","SAMICAS3",299,0)
 ;
"RTN","SAMICAS3",300,0)
 ;
"RTN","SAMICAS3",301,0)
 ;
"RTN","SAMICAS3",302,0)
MKCEFORM(sid,key) ; create ct evaluation form
"RTN","SAMICAS3",303,0)
 ;
"RTN","SAMICAS3",304,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",305,0)
 ;
"RTN","SAMICAS3",306,0)
 ;ven/gpl;private;procedure;
"RTN","SAMICAS3",307,0)
 ;@called-by
"RTN","SAMICAS3",308,0)
 ; WSNFPOST^SAMICAS3
"RTN","SAMICAS3",309,0)
 ;@calls
"RTN","SAMICAS3",310,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",311,0)
 ; $$SID2NUM^SAMIHOM3
"RTN","SAMICAS3",312,0)
 ;@input
"RTN","SAMICAS3",313,0)
 ; sid = study id
"RTN","SAMICAS3",314,0)
 ; key =
"RTN","SAMICAS3",315,0)
 ;@output
"RTN","SAMICAS3",316,0)
 ; @root@("graph",sid,key)
"RTN","SAMICAS3",317,0)
 ;@examples [tbd]
"RTN","SAMICAS3",318,0)
 ;@tests [tbd]
"RTN","SAMICAS3",319,0)
 ;
"RTN","SAMICAS3",320,0)
 ;@stanza 2 create ct eval form
"RTN","SAMICAS3",321,0)
 ;
"RTN","SAMICAS3",322,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",323,0)
 new sien set sien=$$SID2NUM^SAMIHOM3(sid)
"RTN","SAMICAS3",324,0)
 quit:+sien=0
"RTN","SAMICAS3",325,0)
 new cdate set cdate=$piece(key,"ceform-",2)
"RTN","SAMICAS3",326,0)
 ; nodule copy
"RTN","SAMICAS3",327,0)
 ;n srckey s srckey=$$PREVNOD(sid)
"RTN","SAMICAS3",328,0)
 n srckey,srcdate s srcdate=$$LASTCMP(sid,.srckey)
"RTN","SAMICAS3",329,0)
 i srckey'="" d  ;
"RTN","SAMICAS3",330,0)
 . new target,source
"RTN","SAMICAS3",331,0)
 . set source=$name(@root@("graph",sid,srckey))
"RTN","SAMICAS3",332,0)
 . set target=$name(@root@("graph",sid,key))
"RTN","SAMICAS3",333,0)
 . d CTCOPY^SAMICTC1(source,target)
"RTN","SAMICAS3",334,0)
 ; end nodule copy
"RTN","SAMICAS3",335,0)
 ;new items,prevct
"RTN","SAMICAS3",336,0)
 ;do GETITEMS^SAMICASE("items",sid)
"RTN","SAMICAS3",337,0)
 ;set prevct=""
"RTN","SAMICAS3",338,0)
 ;if $data(items("type","vapals:ceform")) do  ;previous cteval exists
"RTN","SAMICAS3",339,0)
 ;. set prevct=$order(items("type","vapals:ceform",""),-1) ; latest ceform
"RTN","SAMICAS3",340,0)
 ;if prevct'="" do  ;
"RTN","SAMICAS3",341,0)
 ;. new target,source
"RTN","SAMICAS3",342,0)
 ;. set source=$name(@root@("graph",sid,prevct))
"RTN","SAMICAS3",343,0)
 ;. set target=$name(@root@("graph",sid,key))
"RTN","SAMICAS3",344,0)
 ;. do CTCOPY^SAMICTC1(source,target)
"RTN","SAMICAS3",345,0)
 merge @root@("graph",sid,key)=@root@(sien)
"RTN","SAMICAS3",346,0)
 set @root@("graph",sid,key,"samicreatedate")=cdate
"RTN","SAMICAS3",347,0)
 do SSAMISTA^SAMICASE(sid,key,"incomplete")
"RTN","SAMICAS3",348,0)
 ; set baseline CT date and last comparison scan date
"RTN","SAMICAS3",349,0)
 do  ;
"RTN","SAMICAS3",350,0)
 . n tmpdt
"RTN","SAMICAS3",351,0)
 . s tmpdt=$$BASELNDT^SAMICAS3(sid)
"RTN","SAMICAS3",352,0)
 . q:tmpdt=-1
"RTN","SAMICAS3",353,0)
 . s @root@("graph",sid,key,"sidoe")=tmpdt
"RTN","SAMICAS3",354,0)
 . s @root@("graph",sid,key,"cedcs")=$$LASTCMP^SAMICAS3(sid)
"RTN","SAMICAS3",355,0)
 . s @root@("graph",sid,key,"cedps")=$$PRIORCMP^SAMICAS3(sid)
"RTN","SAMICAS3",356,0)
 ;
"RTN","SAMICAS3",357,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",358,0)
 ;
"RTN","SAMICAS3",359,0)
 quit  ; end of MKCEFORM
"RTN","SAMICAS3",360,0)
 ;
"RTN","SAMICAS3",361,0)
 ;
"RTN","SAMICAS3",362,0)
 ;
"RTN","SAMICAS3",363,0)
MKFUFORM(sid,key) ; create Follow-up form
"RTN","SAMICAS3",364,0)
 ;
"RTN","SAMICAS3",365,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",366,0)
 ;
"RTN","SAMICAS3",367,0)
 ;ven/gpl;private;procedure;
"RTN","SAMICAS3",368,0)
 ;@called-by
"RTN","SAMICAS3",369,0)
 ; WSNFPOST^SAMICAS3
"RTN","SAMICAS3",370,0)
 ;@calls
"RTN","SAMICAS3",371,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",372,0)
 ; $$SID2NUM^SAMIHOM3
"RTN","SAMICAS3",373,0)
 ;@input
"RTN","SAMICAS3",374,0)
 ; sid = study id
"RTN","SAMICAS3",375,0)
 ; key =
"RTN","SAMICAS3",376,0)
 ;@output
"RTN","SAMICAS3",377,0)
 ; @root@("graph",sid,key)
"RTN","SAMICAS3",378,0)
 ;@examples [tbd]
"RTN","SAMICAS3",379,0)
 ;@tests [tbd]
"RTN","SAMICAS3",380,0)
 ;
"RTN","SAMICAS3",381,0)
 ;@stanza 2 create Follow-up form
"RTN","SAMICAS3",382,0)
 ;
"RTN","SAMICAS3",383,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",384,0)
 new sien set sien=$$SID2NUM^SAMIHOM3(sid)
"RTN","SAMICAS3",385,0)
 quit:+sien=0
"RTN","SAMICAS3",386,0)
 new cdate set cdate=$piece(key,"fuform-",2)
"RTN","SAMICAS3",387,0)
 merge @root@("graph",sid,key)=@root@(sien)
"RTN","SAMICAS3",388,0)
 set @root@("graph",sid,key,"samicreatedate")=cdate
"RTN","SAMICAS3",389,0)
 set @root@("graph",sid,key,"sidof")=$$KEY2DSPD^SAMICAS2(cdate)
"RTN","SAMICAS3",390,0)
 set @root@("graph",sid,key,"sidoe")=$$BASELNDT(sid)
"RTN","SAMICAS3",391,0)
 do SSAMISTA^SAMICASE(sid,key,"incomplete")
"RTN","SAMICAS3",392,0)
 ;
"RTN","SAMICAS3",393,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",394,0)
 ;
"RTN","SAMICAS3",395,0)
 quit  ; end of MKFUFORM
"RTN","SAMICAS3",396,0)
 ;
"RTN","SAMICAS3",397,0)
 ;
"RTN","SAMICAS3",398,0)
 ;
"RTN","SAMICAS3",399,0)
BASELNDT(sid) ; last previous baseline ct date
"RTN","SAMICAS3",400,0)
 ;
"RTN","SAMICAS3",401,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",402,0)
 n groot s groot=$na(@root@("graph",sid))
"RTN","SAMICAS3",403,0)
 n items s items=""
"RTN","SAMICAS3",404,0)
 d GETITEMS^SAMICASE("items",sid)
"RTN","SAMICAS3",405,0)
 q:'$d(items) ""
"RTN","SAMICAS3",406,0)
 n bdate s bdate=""
"RTN","SAMICAS3",407,0)
 n bkey s bkey=""
"RTN","SAMICAS3",408,0)
 n done s done=0
"RTN","SAMICAS3",409,0)
 f  s bkey=$o(items("type","vapals:ceform",bkey)) q:bkey=""  d  ;
"RTN","SAMICAS3",410,0)
 . ;w !,bkey," ",$g(@groot@(bkey,"cetex"))
"RTN","SAMICAS3",411,0)
 . if $g(@groot@(bkey,"cetex"))="b" d  ;
"RTN","SAMICAS3",412,0)
 . . s done=1
"RTN","SAMICAS3",413,0)
 . . s bdate=$p(bkey,"ceform-",2)
"RTN","SAMICAS3",414,0)
 s bdate=$$KEY2DSPD^SAMICAS2(bdate)
"RTN","SAMICAS3",415,0)
 ;
"RTN","SAMICAS3",416,0)
 q bdate ; end of $$BASELNDT
"RTN","SAMICAS3",417,0)
 ;
"RTN","SAMICAS3",418,0)
 ;
"RTN","SAMICAS3",419,0)
 ;
"RTN","SAMICAS3",420,0)
MKPTFORM(sid,key) ; create pet evaluation form
"RTN","SAMICAS3",421,0)
 ;
"RTN","SAMICAS3",422,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",423,0)
 ;
"RTN","SAMICAS3",424,0)
 ;ven/gpl;private;procedure;
"RTN","SAMICAS3",425,0)
 ;@called-by
"RTN","SAMICAS3",426,0)
 ; WSNFPOST^SAMICAS3
"RTN","SAMICAS3",427,0)
 ;@calls
"RTN","SAMICAS3",428,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",429,0)
 ; $$SID2NUM^SAMIHOM3
"RTN","SAMICAS3",430,0)
 ;@input
"RTN","SAMICAS3",431,0)
 ; sid = study id
"RTN","SAMICAS3",432,0)
 ; key =
"RTN","SAMICAS3",433,0)
 ;@output
"RTN","SAMICAS3",434,0)
 ; @root@("graph",sid,key)
"RTN","SAMICAS3",435,0)
 ;@examples [tbd]
"RTN","SAMICAS3",436,0)
 ;@tests [tbd]
"RTN","SAMICAS3",437,0)
 ;
"RTN","SAMICAS3",438,0)
 ;@stanza 2 create pet eval form
"RTN","SAMICAS3",439,0)
 ;
"RTN","SAMICAS3",440,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",441,0)
 new sien set sien=$$SID2NUM^SAMIHOM3(sid)
"RTN","SAMICAS3",442,0)
 quit:+sien=0
"RTN","SAMICAS3",443,0)
 ; nodule copy
"RTN","SAMICAS3",444,0)
 ;n srckey s srckey=$$PREVNOD(sid)
"RTN","SAMICAS3",445,0)
 n srckey,srcdate s srcdate=$$LASTCMP(sid,.srckey)
"RTN","SAMICAS3",446,0)
 i srckey'="" d  ;
"RTN","SAMICAS3",447,0)
 . new target,source
"RTN","SAMICAS3",448,0)
 . set source=$name(@root@("graph",sid,srckey))
"RTN","SAMICAS3",449,0)
 . set target=$name(@root@("graph",sid,key))
"RTN","SAMICAS3",450,0)
 . d CTCOPY^SAMICTC1(source,target)
"RTN","SAMICAS3",451,0)
 ; end nodule copy
"RTN","SAMICAS3",452,0)
 new cdate set cdate=$piece(key,"ptform-",2)
"RTN","SAMICAS3",453,0)
 merge @root@("graph",sid,key)=@root@(sien)
"RTN","SAMICAS3",454,0)
 set @root@("graph",sid,key,"samicreatedate")=cdate
"RTN","SAMICAS3",455,0)
 do SSAMISTA^SAMICASE(sid,key,"incomplete")
"RTN","SAMICAS3",456,0)
 ;
"RTN","SAMICAS3",457,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",458,0)
 ;
"RTN","SAMICAS3",459,0)
 quit  ; end of MKPTFORM
"RTN","SAMICAS3",460,0)
 ;
"RTN","SAMICAS3",461,0)
 ;
"RTN","SAMICAS3",462,0)
 ;
"RTN","SAMICAS3",463,0)
MKITFORM(sid,key) ; create intervention form
"RTN","SAMICAS3",464,0)
 ;
"RTN","SAMICAS3",465,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",466,0)
 ;
"RTN","SAMICAS3",467,0)
 ;ven/gpl;private;procedure;
"RTN","SAMICAS3",468,0)
 ;@called-by
"RTN","SAMICAS3",469,0)
 ; WSNFPOST^SAMICAS3
"RTN","SAMICAS3",470,0)
 ;@calls
"RTN","SAMICAS3",471,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",472,0)
 ; $$SID2NUM^SAMIHOM3
"RTN","SAMICAS3",473,0)
 ;@input
"RTN","SAMICAS3",474,0)
 ; sid = study id
"RTN","SAMICAS3",475,0)
 ; key =
"RTN","SAMICAS3",476,0)
 ;@output
"RTN","SAMICAS3",477,0)
 ; @root@("graph",sid,key)
"RTN","SAMICAS3",478,0)
 ;@examples [tbd]
"RTN","SAMICAS3",479,0)
 ;@tests [tbd]
"RTN","SAMICAS3",480,0)
 ;
"RTN","SAMICAS3",481,0)
 ;@stanza 2 create intervention form
"RTN","SAMICAS3",482,0)
 ;
"RTN","SAMICAS3",483,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",484,0)
 new sien set sien=$$SID2NUM^SAMIHOM3(sid)
"RTN","SAMICAS3",485,0)
 quit:+sien=0
"RTN","SAMICAS3",486,0)
 new cdate set cdate=$piece(key,"itform-",2)
"RTN","SAMICAS3",487,0)
 merge @root@("graph",sid,key)=@root@(sien)
"RTN","SAMICAS3",488,0)
 set @root@("graph",sid,key,"samicreatedate")=cdate
"RTN","SAMICAS3",489,0)
 do SSAMISTA^SAMICASE(sid,key,"incomplete")
"RTN","SAMICAS3",490,0)
 ;
"RTN","SAMICAS3",491,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",492,0)
 ;
"RTN","SAMICAS3",493,0)
 quit  ; end of MKITFORM
"RTN","SAMICAS3",494,0)
 ;
"RTN","SAMICAS3",495,0)
 ;
"RTN","SAMICAS3",496,0)
 ;
"RTN","SAMICAS3",497,0)
MKBXFORM(sid,key) ; create biopsy form
"RTN","SAMICAS3",498,0)
 ;
"RTN","SAMICAS3",499,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",500,0)
 ;
"RTN","SAMICAS3",501,0)
 ;ven/gpl;private;procedure;
"RTN","SAMICAS3",502,0)
 ;@called-by
"RTN","SAMICAS3",503,0)
 ; WSNFPOST^SAMICAS3
"RTN","SAMICAS3",504,0)
 ;@calls
"RTN","SAMICAS3",505,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",506,0)
 ; $$SID2NUM^SAMIHOM3
"RTN","SAMICAS3",507,0)
 ;@input
"RTN","SAMICAS3",508,0)
 ; sid = study id
"RTN","SAMICAS3",509,0)
 ; key =
"RTN","SAMICAS3",510,0)
 ;@output
"RTN","SAMICAS3",511,0)
 ; @root@("graph",sid,key)
"RTN","SAMICAS3",512,0)
 ;@examples [tbd]
"RTN","SAMICAS3",513,0)
 ;@tests [tbd]
"RTN","SAMICAS3",514,0)
 ;
"RTN","SAMICAS3",515,0)
 ;@stanza 2 create background form
"RTN","SAMICAS3",516,0)
 ;
"RTN","SAMICAS3",517,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",518,0)
 new sien set sien=$$SID2NUM^SAMIHOM3(sid)
"RTN","SAMICAS3",519,0)
 quit:+sien=0
"RTN","SAMICAS3",520,0)
 new cdate set cdate=$piece(key,"bxform-",2)
"RTN","SAMICAS3",521,0)
 ; nodule copy
"RTN","SAMICAS3",522,0)
 ;n srckey s srckey=$$PREVNOD(sid)
"RTN","SAMICAS3",523,0)
 n srckey,srcdate s srcdate=$$LASTCMP(sid,.srckey)
"RTN","SAMICAS3",524,0)
 i srckey'="" d  ;
"RTN","SAMICAS3",525,0)
 . new target,source
"RTN","SAMICAS3",526,0)
 . set source=$name(@root@("graph",sid,srckey))
"RTN","SAMICAS3",527,0)
 . set target=$name(@root@("graph",sid,key))
"RTN","SAMICAS3",528,0)
 . d CTCOPY^SAMICTC1(source,target)
"RTN","SAMICAS3",529,0)
 ; end nodule copy
"RTN","SAMICAS3",530,0)
 merge @root@("graph",sid,key)=@root@(sien)
"RTN","SAMICAS3",531,0)
 set @root@("graph",sid,key,"samicreatedate")=cdate
"RTN","SAMICAS3",532,0)
 do SSAMISTA^SAMICASE(sid,key,"incomplete")
"RTN","SAMICAS3",533,0)
 ;
"RTN","SAMICAS3",534,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",535,0)
 ;
"RTN","SAMICAS3",536,0)
 quit  ; end of MKBXFORM
"RTN","SAMICAS3",537,0)
 ;
"RTN","SAMICAS3",538,0)
 ;
"RTN","SAMICAS3",539,0)
 ;
"RTN","SAMICAS3",540,0)
CASETBL(ary) ; generates case review table
"RTN","SAMICAS3",541,0)
 ;
"RTN","SAMICAS3",542,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",543,0)
 ;
"RTN","SAMICAS3",544,0)
 ;ven/gpl;private;procedure;
"RTN","SAMICAS3",545,0)
 ;@called by : none
"RTN","SAMICAS3",546,0)
 ;@calls
"RTN","SAMICAS3",547,0)
 ;@input
"RTN","SAMICAS3",548,0)
 ; ary = name of array (passed by name, will be cleared)
"RTN","SAMICAS3",549,0)
 ;@output
"RTN","SAMICAS3",550,0)
 ; @ary
"RTN","SAMICAS3",551,0)
 ;@tests
"RTN","SAMICAS3",552,0)
 ; SAMIUTS2
"RTN","SAMICAS3",553,0)
 ;
"RTN","SAMICAS3",554,0)
 ;@stanza 2 build table
"RTN","SAMICAS3",555,0)
 ;
"RTN","SAMICAS3",556,0)
 kill @ary
"RTN","SAMICAS3",557,0)
 ;
"RTN","SAMICAS3",558,0)
 set @ary@("siform","form")="siform"
"RTN","SAMICAS3",559,0)
 set @ary@("siform","js")="subPr"
"RTN","SAMICAS3",560,0)
 set @ary@("siform","name")="Intake"
"RTN","SAMICAS3",561,0)
 set @ary@("siform","image")="preview.gif"
"RTN","SAMICAS3",562,0)
 ;
"RTN","SAMICAS3",563,0)
 set @ary@("nuform","form")="nuform"
"RTN","SAMICAS3",564,0)
 set @ary@("nuform","js")="subFr"
"RTN","SAMICAS3",565,0)
 set @ary@("nuform","name")="New Form"
"RTN","SAMICAS3",566,0)
 set @ary@("nuform","image")="nform.gif"
"RTN","SAMICAS3",567,0)
 ;
"RTN","SAMICAS3",568,0)
 set @ary@("sched","form")="sched"
"RTN","SAMICAS3",569,0)
 set @ary@("sched","js")="subSc"
"RTN","SAMICAS3",570,0)
 set @ary@("sched","name")="Schedule"
"RTN","SAMICAS3",571,0)
 set @ary@("sched","image")="schedule.gif"
"RTN","SAMICAS3",572,0)
 ;
"RTN","SAMICAS3",573,0)
 set @ary@("sbform","form")="sbform"
"RTN","SAMICAS3",574,0)
 set @ary@("sbform","js")="subPr"
"RTN","SAMICAS3",575,0)
 set @ary@("sbform","name")="Background"
"RTN","SAMICAS3",576,0)
 set @ary@("sbform","image")="preview.gif"
"RTN","SAMICAS3",577,0)
 ;
"RTN","SAMICAS3",578,0)
 set @ary@("ceform","form")="ceform"
"RTN","SAMICAS3",579,0)
 set @ary@("ceform","js")="subPr"
"RTN","SAMICAS3",580,0)
 set @ary@("ceform","name")="CT Evaluation"
"RTN","SAMICAS3",581,0)
 set @ary@("ceform","image")="preview.gif"
"RTN","SAMICAS3",582,0)
 ;
"RTN","SAMICAS3",583,0)
 set @ary@("report","form")="report"
"RTN","SAMICAS3",584,0)
 set @ary@("report","js")="subRp"
"RTN","SAMICAS3",585,0)
 set @ary@("report","name")="Report"
"RTN","SAMICAS3",586,0)
 set @ary@("report","image")="report.gif"
"RTN","SAMICAS3",587,0)
 ;
"RTN","SAMICAS3",588,0)
 set @ary@("ptform","form")="ptform"
"RTN","SAMICAS3",589,0)
 set @ary@("ptform","js")="subPr"
"RTN","SAMICAS3",590,0)
 set @ary@("ptform","name")="PET Evaluation"
"RTN","SAMICAS3",591,0)
 set @ary@("ptform","image")="preview.gif"
"RTN","SAMICAS3",592,0)
 ;
"RTN","SAMICAS3",593,0)
 set @ary@("bxform","form")="bxform"
"RTN","SAMICAS3",594,0)
 set @ary@("bxform","js")="subPr"
"RTN","SAMICAS3",595,0)
 set @ary@("bxform","name")="Biopsy"
"RTN","SAMICAS3",596,0)
 set @ary@("bxform","image")="preview.gif"
"RTN","SAMICAS3",597,0)
 ;
"RTN","SAMICAS3",598,0)
 set @ary@("rbform","form")="rbform"
"RTN","SAMICAS3",599,0)
 set @ary@("rbform","js")="subPr"
"RTN","SAMICAS3",600,0)
 set @ary@("rbform","name")="Intervention"
"RTN","SAMICAS3",601,0)
 set @ary@("rbform","image")="preview.gif"
"RTN","SAMICAS3",602,0)
 ;
"RTN","SAMICAS3",603,0)
 set @ary@("ceform","form")="ceform"
"RTN","SAMICAS3",604,0)
 set @ary@("ceform","js")="subPr"
"RTN","SAMICAS3",605,0)
 set @ary@("ceform","name")="CT Evaluation"
"RTN","SAMICAS3",606,0)
 set @ary@("ceform","image")="preview.gif"
"RTN","SAMICAS3",607,0)
 ;
"RTN","SAMICAS3",608,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",609,0)
 ;
"RTN","SAMICAS3",610,0)
 quit  ; end of CASETBL
"RTN","SAMICAS3",611,0)
 ;
"RTN","SAMICAS3",612,0)
 ;
"RTN","SAMICAS3",613,0)
 ;
"RTN","SAMICAS3",614,0)
EOR ; end of routine SAMICAS3
"RTN","SAMICSV")
0^4^B57080938
"RTN","SAMICSV",1,0)
SAMICSV ;ven/gpl - csv export ;2021-03-30T17:18Z
"RTN","SAMICSV",2,0)
 ;;18.0;SAMI;**7,11**;2020-01;Build 11
"RTN","SAMICSV",3,0)
 ;;1.18.0.11-i11
"RTN","SAMICSV",4,0)
 ;
"RTN","SAMICSV",5,0)
 ; SAMICSV contains a direct-mode interface to produce the VAPALS-
"RTN","SAMICSV",6,0)
 ; ELCAP CSV export.
"RTN","SAMICSV",7,0)
 ;
"RTN","SAMICSV",8,0)
 ; allow entry from top, fallthrough to EN
"RTN","SAMICSV",9,0)
 ;
"RTN","SAMICSV",10,0)
 ;
"RTN","SAMICSV",11,0)
 ;
"RTN","SAMICSV",12,0)
 ;@section 0 primary development
"RTN","SAMICSV",13,0)
 ;
"RTN","SAMICSV",14,0)
 ;
"RTN","SAMICSV",15,0)
 ;
"RTN","SAMICSV",16,0)
 ;@routine-credits
"RTN","SAMICSV",17,0)
 ;@primary-dev George P. Lilly (gpl)
"RTN","SAMICSV",18,0)
 ; gpl@vistaexpertise.net
"RTN","SAMICSV",19,0)
 ;@primary-dev-org Vista Expertise Network (ven)
"RTN","SAMICSV",20,0)
 ; http://vistaexpertise.net
"RTN","SAMICSV",21,0)
 ;@copyright 2017/2021, gpl, all rights reserved
"RTN","SAMICSV",22,0)
 ;@license see routine SAMIUL
"RTN","SAMICSV",23,0)
 ;
"RTN","SAMICSV",24,0)
 ;@last-updated 2021-03-30T17:18Z
"RTN","SAMICSV",25,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMICSV",26,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMICSV",27,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMICSV",28,0)
 ;@version 1.18.0.11-i11
"RTN","SAMICSV",29,0)
 ;@release-date 2020-01
"RTN","SAMICSV",30,0)
 ;@patch-list **7,11**
"RTN","SAMICSV",31,0)
 ;
"RTN","SAMICSV",32,0)
 ;@additional-dev Frederick D. S. Marshall (toad)
"RTN","SAMICSV",33,0)
 ; toad@vistaexpertise.net
"RTN","SAMICSV",34,0)
 ;
"RTN","SAMICSV",35,0)
 ;@module-credits
"RTN","SAMICSV",36,0)
 ;@project VA Partnership to Increase Access to Lung Screening
"RTN","SAMICSV",37,0)
 ; (VA-PALS)
"RTN","SAMICSV",38,0)
 ; http://va-pals.org/
"RTN","SAMICSV",39,0)
 ;@funding 2017/2021, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMICSV",40,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMICSV",41,0)
 ;@partner-org Veterans Affairs Office of Rural health
"RTN","SAMICSV",42,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMICSV",43,0)
 ;@partner-org International Early Lung Cancer Action Program (I-ELCAP)
"RTN","SAMICSV",44,0)
 ; http://ielcap.com/
"RTN","SAMICSV",45,0)
 ;@partner-org Paraxial Technologies (par)
"RTN","SAMICSV",46,0)
 ; http://paraxialtech.com/
"RTN","SAMICSV",47,0)
 ;@partner-org Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMICSV",48,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMICSV",49,0)
 ;
"RTN","SAMICSV",50,0)
 ;@module-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMICSV",51,0)
 ;
"RTN","SAMICSV",52,0)
 ; 2020-08-20/09-24 ven/gpl 1.18.0.7-i7 9486abb2,5ae08772,ba0bcb82,
"RTN","SAMICSV",53,0)
 ; 1a2a1bf6,16511893
"RTN","SAMICSV",54,0)
 ;  SAMICSV: new routine, test build for extracting form data to csv
"RTN","SAMICSV",55,0)
 ; files, upgrade change site to handle patients without forms, audit
"RTN","SAMICSV",56,0)
 ; report, select from 7 forms for extract, fix dictionary spelling
"RTN","SAMICSV",57,0)
 ; for followup form, fix bug of line feeds in csv output interrupting
"RTN","SAMICSV",58,0)
 ; excel load.
"RTN","SAMICSV",59,0)
 ;
"RTN","SAMICSV",60,0)
 ; 2021-03-25 ven/gpl 1.18.0.11 e28a34d3
"RTN","SAMICSV",61,0)
 ;  SAMICSV: remove line feeds from variables.
"RTN","SAMICSV",62,0)
 ;
"RTN","SAMICSV",63,0)
 ; 2021-03-30 ven/toad 1.18.0.11-i11
"RTN","SAMICSV",64,0)
 ; SAMICSV: bump version, date, patch list, create hdr comments, lt
"RTN","SAMICSV",65,0)
 ; refactor.
"RTN","SAMICSV",66,0)
 ;
"RTN","SAMICSV",67,0)
 ;@contents
"RTN","SAMICSV",68,0)
 ; EN: entry point to generate csv files from forms for a site
"RTN","SAMICSV",69,0)
 ; ONEFORM: process one form for a site
"RTN","SAMICSV",70,0)
 ; $$FNAME = filename for site/form
"RTN","SAMICSV",71,0)
 ; DDICT: data dictionary for form
"RTN","SAMICSV",72,0)
 ; $$SAYFORM: prompts for form
"RTN","SAMICSV",73,0)
 ;
"RTN","SAMICSV",74,0)
 ;
"RTN","SAMICSV",75,0)
 ;
"RTN","SAMICSV",76,0)
EN ; entry point to generate csv files from forms for a site
"RTN","SAMICSV",77,0)
 ;
"RTN","SAMICSV",78,0)
 ; first pick a site
"RTN","SAMICSV",79,0)
 N X,Y,DIC,SITEIEN,SITEID
"RTN","SAMICSV",80,0)
 S DIC=311.12
"RTN","SAMICSV",81,0)
 S DIC(0)="AEMQ"
"RTN","SAMICSV",82,0)
 D ^DIC
"RTN","SAMICSV",83,0)
 I Y<1 Q  ; EXIT
"RTN","SAMICSV",84,0)
 S SITENUM=$P(Y,"^",2)
"RTN","SAMICSV",85,0)
 S SITEID=$$SITEID^SAMISITE(SITENUM)
"RTN","SAMICSV",86,0)
 Q:SITEID=""
"RTN","SAMICSV",87,0)
 ;
"RTN","SAMICSV",88,0)
 N SAMIFORM S SAMIFORM=$$SAYFORM()
"RTN","SAMICSV",89,0)
 Q:SAMIFORM=-1
"RTN","SAMICSV",90,0)
 ;
"RTN","SAMICSV",91,0)
 ; prompt for the directory
"RTN","SAMICSV",92,0)
 N SAMIDIR
"RTN","SAMICSV",93,0)
 D GETDIR^SAMIFDM(.SAMIDIR)
"RTN","SAMICSV",94,0)
 Q:SAMIDIR=""
"RTN","SAMICSV",95,0)
 ;
"RTN","SAMICSV",96,0)
 d ONEFORM(SITEID,SAMIFORM,SAMIDIR) ; process one form for a site
"RTN","SAMICSV",97,0)
 ;
"RTN","SAMICSV",98,0)
 quit  ; end of EN
"RTN","SAMICSV",99,0)
 ;
"RTN","SAMICSV",100,0)
 ;
"RTN","SAMICSV",101,0)
 ;
"RTN","SAMICSV",102,0)
ONEFORM(SITEID,SAMIFORM,SAMIDIR) ; process one form for a site
"RTN","SAMICSV",103,0)
 ;
"RTN","SAMICSV",104,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMICSV",105,0)
 n groot s groot=$na(@root@("graph"))
"RTN","SAMICSV",106,0)
 n SAMII S SAMII=SITEID
"RTN","SAMICSV",107,0)
 n cnt s cnt=0
"RTN","SAMICSV",108,0)
 n forms s forms=0
"RTN","SAMICSV",109,0)
 ;
"RTN","SAMICSV",110,0)
 n SAMIOUT S SAMIOUT=$NA(^TMP("SAMICSV",$J))
"RTN","SAMICSV",111,0)
 k @SAMIOUT
"RTN","SAMICSV",112,0)
 ;
"RTN","SAMICSV",113,0)
 n DICT
"RTN","SAMICSV",114,0)
 d DDICT("DICT",SAMIFORM) ; get the data dictionary for this form
"RTN","SAMICSV",115,0)
 q:'$d(DICT)
"RTN","SAMICSV",116,0)
 ;
"RTN","SAMICSV",117,0)
 N SAMIN S SAMIN=1
"RTN","SAMICSV",118,0)
 N SAMIJJ s SAMIJJ=0
"RTN","SAMICSV",119,0)
 N OFFSET S OFFSET=0
"RTN","SAMICSV",120,0)
 I SAMIFORM="siform" d  ;
"RTN","SAMICSV",121,0)
 . S OFFSET=OFFSET+1
"RTN","SAMICSV",122,0)
 . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)="saminame"
"RTN","SAMICSV",123,0)
 . S OFFSET=OFFSET+1
"RTN","SAMICSV",124,0)
 . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)="ssn"
"RTN","SAMICSV",125,0)
 . S OFFSET=OFFSET+1
"RTN","SAMICSV",126,0)
 . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)="last5"
"RTN","SAMICSV",127,0)
 . S OFFSET=OFFSET+1
"RTN","SAMICSV",128,0)
 . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)="sex"
"RTN","SAMICSV",129,0)
 . S OFFSET=OFFSET+1
"RTN","SAMICSV",130,0)
 . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)="sbdob"
"RTN","SAMICSV",131,0)
 . S OFFSET=OFFSET+1
"RTN","SAMICSV",132,0)
 . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)="samiru"
"RTN","SAMICSV",133,0)
 f  s SAMIJJ=$o(DICT(SAMIJJ)) q:+SAMIJJ=0  d  ;
"RTN","SAMICSV",134,0)
 . s $p(@SAMIOUT@(SAMIN),"|",SAMIJJ+OFFSET)=DICT(SAMIJJ) ; csv header
"RTN","SAMICSV",135,0)
 s @SAMIOUT@(SAMIN)="siteid|samistudyid|form|"_@SAMIOUT@(SAMIN)
"RTN","SAMICSV",136,0)
 ;S @SAMIOUT@(SAMIN)=@SAMIOUT@(SAMIN)_$C(13,10) ; carriage return line feed
"RTN","SAMICSV",137,0)
 ; 
"RTN","SAMICSV",138,0)
 f  s SAMII=$o(@groot@(SAMII)) q:SAMII=""  q:$e(SAMII,1,3)'[SITEID  d  ;
"RTN","SAMICSV",139,0)
 . s cnt=cnt+1
"RTN","SAMICSV",140,0)
 . w !,SAMII
"RTN","SAMICSV",141,0)
 . N SAMIJ S SAMIJ=SAMIFORM
"RTN","SAMICSV",142,0)
 . n done s done=0
"RTN","SAMICSV",143,0)
 . f  s SAMIJ=$O(@groot@(SAMII,SAMIJ)) q:SAMIJ=""  q:done  d  ;
"RTN","SAMICSV",144,0)
 . . i $e(SAMIJ,1,$l(SAMIFORM))'=SAMIFORM s done=1 q  ;
"RTN","SAMICSV",145,0)
 . . s forms=forms+1
"RTN","SAMICSV",146,0)
 . . n jj s jj=0
"RTN","SAMICSV",147,0)
 . . s SAMIN=SAMIN+1
"RTN","SAMICSV",148,0)
 . . S OFFSET=0
"RTN","SAMICSV",149,0)
 . . I SAMIFORM="siform" d  ;
"RTN","SAMICSV",150,0)
 . . . n kk s kk=$o(@root@("sid",SAMII,""))
"RTN","SAMICSV",151,0)
 . . . q:kk=""
"RTN","SAMICSV",152,0)
 . . . S OFFSET=OFFSET+1
"RTN","SAMICSV",153,0)
 . . . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)=$g(@root@(kk,"saminame"))
"RTN","SAMICSV",154,0)
 . . . S OFFSET=OFFSET+1
"RTN","SAMICSV",155,0)
 . . . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)=$g(@root@(kk,"ssn"))
"RTN","SAMICSV",156,0)
 . . . S OFFSET=OFFSET+1
"RTN","SAMICSV",157,0)
 . . . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)=$g(@root@(kk,"last5"))
"RTN","SAMICSV",158,0)
 . . . S OFFSET=OFFSET+1
"RTN","SAMICSV",159,0)
 . . . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)=$g(@root@(kk,"sex"))
"RTN","SAMICSV",160,0)
 . . . S OFFSET=OFFSET+1
"RTN","SAMICSV",161,0)
 . . . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)=$g(@root@(kk,"sbdob"))
"RTN","SAMICSV",162,0)
 . . . S OFFSET=OFFSET+1
"RTN","SAMICSV",163,0)
 . . . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)=$g(@root@(kk,"samiru"))
"RTN","SAMICSV",164,0)
 . . f  s jj=$o(DICT(jj)) q:+jj=0  d  ;
"RTN","SAMICSV",165,0)
 . . . ;s $P(@SAMIOUT@(SAMIN),"|",OFFSET+jj)=""""_$g(@groot@(SAMII,SAMIJ,DICT(jj)))_""""
"RTN","SAMICSV",166,0)
 . . . n val
"RTN","SAMICSV",167,0)
 . . . ;s val=$g(@groot@(SAMII,SAMIJ,DICT(jj)))_""""
"RTN","SAMICSV",168,0)
 . . . s val=$g(@groot@(SAMII,SAMIJ,DICT(jj)))
"RTN","SAMICSV",169,0)
 . . . i val'="" d  ;
"RTN","SAMICSV",170,0)
 . . . . s val=$tr(val,$char(11))
"RTN","SAMICSV",171,0)
 . . . . s val=$tr(val,$char(13))
"RTN","SAMICSV",172,0)
 . . . . d findReplaceAll^%ts(.val,"""","""""")
"RTN","SAMICSV",173,0)
 . . . . s val=""""_val_""""
"RTN","SAMICSV",174,0)
 . . . s $P(@SAMIOUT@(SAMIN),"|",OFFSET+jj)=val
"RTN","SAMICSV",175,0)
 . . S @SAMIOUT@(SAMIN)=SITEID_"|"_SAMII_"|"_SAMIJ_"|"_@SAMIOUT@(SAMIN)
"RTN","SAMICSV",176,0)
 . . ;s @SAMIOUT@(SAMIN)=@SAMIOUT@(SAMIN)_$C(13,10)
"RTN","SAMICSV",177,0)
 . ;b
"RTN","SAMICSV",178,0)
 ;ZWR @SAMIOUT@(*)
"RTN","SAMICSV",179,0)
 w !,cnt_" patients, "_forms_" forms"
"RTN","SAMICSV",180,0)
 n filename s filename=$$FNAME(SITEID,SAMIFORM)
"RTN","SAMICSV",181,0)
 d GTF^%ZISH($na(@SAMIOUT@(1)),3,SAMIDIR,filename)
"RTN","SAMICSV",182,0)
 w !,"file "_filename_" written to directory "_SAMIDIR
"RTN","SAMICSV",183,0)
 ;
"RTN","SAMICSV",184,0)
 quit  ; end of ONEFORM
"RTN","SAMICSV",185,0)
 ;
"RTN","SAMICSV",186,0)
 ;
"RTN","SAMICSV",187,0)
 ;
"RTN","SAMICSV",188,0)
FNAME(SITE,FORM) ; extrinsic returns the filename for the site/form
"RTN","SAMICSV",189,0)
 ;
"RTN","SAMICSV",190,0)
 quit SITE_"-"_FORM_"-"_$$FMTHL7^XLFDT($$HTFM^XLFDT($H))_".csv" ; end of $$FNAME
"RTN","SAMICSV",191,0)
 ;
"RTN","SAMICSV",192,0)
 ;
"RTN","SAMICSV",193,0)
 ;
"RTN","SAMICSV",194,0)
DDICT(RTN,FORM) ; data dictionary for FORM, returned in RTN, passed by
"RTN","SAMICSV",195,0)
 ; name
"RTN","SAMICSV",196,0)
 ;
"RTN","SAMICSV",197,0)
 K @RTN
"RTN","SAMICSV",198,0)
 ;
"RTN","SAMICSV",199,0)
 N USEGR S USEGR=""
"RTN","SAMICSV",200,0)
 I FORM="siform" S USEGR="form fields - intake"
"RTN","SAMICSV",201,0)
 I FORM="sbform" S USEGR="form fields - background"
"RTN","SAMICSV",202,0)
 I FORM="ceform" S USEGR="form fields - ct evaluation"
"RTN","SAMICSV",203,0)
 I FORM="fuform" S USEGR="form fields - follow up"
"RTN","SAMICSV",204,0)
 I FORM="bxform" S USEGR="form fields - biopsy"
"RTN","SAMICSV",205,0)
 I FORM="itform" S USEGR="form fields - intervention"
"RTN","SAMICSV",206,0)
 I FORM="ptform" S USEGR="form fields - pet evaluation"
"RTN","SAMICSV",207,0)
 ;
"RTN","SAMICSV",208,0)
 Q:USEGR=""
"RTN","SAMICSV",209,0)
 N root s root=$$setroot^%wd(USEGR)
"RTN","SAMICSV",210,0)
 Q:$g(root)=""
"RTN","SAMICSV",211,0)
 N II S II=0
"RTN","SAMICSV",212,0)
 f  s II=$o(@root@("field",II)) q:+II=0  d  ;
"RTN","SAMICSV",213,0)
 . s @RTN@(II)=$g(@root@("field",II,"input",1,"name"))
"RTN","SAMICSV",214,0)
 ;
"RTN","SAMICSV",215,0)
 quit  ; end of DDICT
"RTN","SAMICSV",216,0)
 ;
"RTN","SAMICSV",217,0)
 ;
"RTN","SAMICSV",218,0)
 ;
"RTN","SAMICSV",219,0)
 ;^%wd(17.040801,"B","form fields - background",437)=""
"RTN","SAMICSV",220,0)
 ;^%wd(17.040801,"B","form fields - biopsy",438)=""
"RTN","SAMICSV",221,0)
 ;^%wd(17.040801,"B","form fields - ct evaluation",439)=""
"RTN","SAMICSV",222,0)
 ;^%wd(17.040801,"B","form fields - follow up",440)=""
"RTN","SAMICSV",223,0)
 ;^%wd(17.040801,"B","form fields - follow-up",359)=""
"RTN","SAMICSV",224,0)
 ;^%wd(17.040801,"B","form fields - intake",491)=""
"RTN","SAMICSV",225,0)
 ;^%wd(17.040801,"B","form fields - intervention",442)=""
"RTN","SAMICSV",226,0)
 ;^%wd(17.040801,"B","form fields - pet evaluation",443)=""
"RTN","SAMICSV",227,0)
 ;
"RTN","SAMICSV",228,0)
 ;
"RTN","SAMICSV",229,0)
 ;
"RTN","SAMICSV",230,0)
SAYFORM() ; prompts for the form
"RTN","SAMICSV",231,0)
 ;
"RTN","SAMICSV",232,0)
 N ZI,ZF,DIR
"RTN","SAMICSV",233,0)
 S ZF(1)="siform"
"RTN","SAMICSV",234,0)
 S ZF(2)="sbform"
"RTN","SAMICSV",235,0)
 S ZF(3)="ceform"
"RTN","SAMICSV",236,0)
 S ZF(4)="fuform"
"RTN","SAMICSV",237,0)
 S ZF(5)="bxform"
"RTN","SAMICSV",238,0)
 S ZF(6)="itform"
"RTN","SAMICSV",239,0)
 S ZF(7)="ptform"
"RTN","SAMICSV",240,0)
 K DIR
"RTN","SAMICSV",241,0)
 S DIR(0)="SO^"
"RTN","SAMICSV",242,0)
 F ZI=1:1:7 S DIR(0)=DIR(0)_ZI_":"_ZF(ZI)_";"
"RTN","SAMICSV",243,0)
 S DIR("L")="Select form to extract:"
"RTN","SAMICSV",244,0)
 S DIR("L",1)="1 Intake form (siform)"
"RTN","SAMICSV",245,0)
 S DIR("L",2)="2 Background form (sbform)"
"RTN","SAMICSV",246,0)
 S DIR("L",3)="3 CT Evaluation form (ceform)"
"RTN","SAMICSV",247,0)
 S DIR("L",4)="4 Followup form (fuform)"
"RTN","SAMICSV",248,0)
 S DIR("L",5)="5 Biopsy form (bxform)"
"RTN","SAMICSV",249,0)
 S DIR("L",6)="6 Intervention form (itform)"
"RTN","SAMICSV",250,0)
 S DIR("L",7)="7 Pet Evaluation form (ptform)"
"RTN","SAMICSV",251,0)
 D ^DIR
"RTN","SAMICSV",252,0)
 ;
"RTN","SAMICSV",253,0)
 Q:X="" -1
"RTN","SAMICSV",254,0)
 quit ZF(X) ; end of $$SAYFORM
"RTN","SAMICSV",255,0)
 ;
"RTN","SAMICSV",256,0)
 ;
"RTN","SAMICSV",257,0)
 ;
"RTN","SAMICSV",258,0)
EOR ; end of routine SAMICSV
"RTN","SAMIHL7")
0^6^B89755453
"RTN","SAMIHL7",1,0)
SAMIHL7 ;SAMI/lgc/arc - HL7 UTILITIES ;Apr 14, 2021@15:59
"RTN","SAMIHL7",2,0)
 ;;18.0;SAMI;;;Build 11
"RTN","SAMIHL7",3,0)
 ;
"RTN","SAMIHL7",4,0)
 quit  ; not from top
"RTN","SAMIHL7",5,0)
 ;
"RTN","SAMIHL7",6,0)
 ; example incoming fields array
"RTN","SAMIHL7",7,0)
 ;
"RTN","SAMIHL7",8,0)
 ;fields("PID","segment")="PID|1||000002341||ZZTEST^MACHO^^^^^L||19271106000000|M|||7726 W ORCHID ST^^PHOENIX^AZ^85017||||||||000002341|"
"RTN","SAMIHL7",9,0)
 ;fields("PIV","segment")="PV1||O|PHX-PULM RN LSS PHONE|||||244088^GARCIA^DANIEL^P"
"RTN","SAMIHL7",10,0)
 ;fields("OBR","segment")="OBR||||PHO_LUNG^LUNG|"
"RTN","SAMIHL7",11,0)
 ;fields("ORC","segment")="ORC|NW|3200616135751|||NW||||20200616135751||||||20200616135751"
"RTN","SAMIHL7",12,0)
 ;
"RTN","SAMIHL7",13,0)
 ;fields("ORM",6799278.886493,"assignedlocation")="PHX-PULM RN LSS PHONE"
"RTN","SAMIHL7",14,0)
 ;fields("ORM",6799278.886493,"fulladdress")="7726 W ORCHID ST^^PHOENIX^AZ^85017"
"RTN","SAMIHL7",15,0)
 ;fields("ORM",6799278.886493,"msgid")="99000023ORM"
"RTN","SAMIHL7",16,0)
 ;fields("ORM",6799278.886493,"order")="PHO_LUNG"
"RTN","SAMIHL7",17,0)
 ;fields("ORM",6799278.886493,"order2")="LUNG"
"RTN","SAMIHL7",18,0)
 ;fields("ORM",6799278.886493,"ordercontrol")="NW"
"RTN","SAMIHL7",19,0)
 ;fields("ORM",6799278.886493,"ordereffectivedt")=20200616135751
"RTN","SAMIHL7",20,0)
 ;fields("ORM",6799278.886493,"ordernumber")=3200616135751
"RTN","SAMIHL7",21,0)
 ;fields("ORM",6799278.886493,"orderstatus")="NW"
"RTN","SAMIHL7",22,0)
 ;fields("ORM",6799278.886493,"patientclass")="O"
"RTN","SAMIHL7",23,0)
 ;fields("ORM",6799278.886493,"providerien")=244088
"RTN","SAMIHL7",24,0)
 ;fields("ORM",6799278.886493,"providernm")="GARCIA,DANIEL,P"
"RTN","SAMIHL7",25,0)
 ;fields("ORM",6799278.886493,"siteid")="PHO"
"RTN","SAMIHL7",26,0)
 ;fields("ORM",6799278.886493,"transactiondt")=20200616135751
"RTN","SAMIHL7",27,0)
 ;
"RTN","SAMIHL7",28,0)
 ; fields("address1")="7726 W ORCHID ST"
"RTN","SAMIHL7",29,0)
 ; fields("city")="PHOENIX"
"RTN","SAMIHL7",30,0)
 ; fields("icn")=""
"RTN","SAMIHL7",31,0)
 ; fields("last5")="Z2341"
"RTN","SAMIHL7",32,0)
 ; fields("phone")=""
"RTN","SAMIHL7",33,0)
 ; fields("saminame")="Zztest,Macho"
"RTN","SAMIHL7",34,0)
 ; fields("sbdob")=19271106000000
"RTN","SAMIHL7",35,0)
 ; fields("sex")="M"
"RTN","SAMIHL7",36,0)
 ; fields("sinamef")="Macho"
"RTN","SAMIHL7",37,0)
 ; fields("sinamel")="Zztest"
"RTN","SAMIHL7",38,0)
 ; fields("siteid")="PHO"
"RTN","SAMIHL7",39,0)
 ; fields("ssn")="000002341"
"RTN","SAMIHL7",40,0)
 ; fields("state")="AZ"
"RTN","SAMIHL7",41,0)
 ; fields("zip")=85017
"RTN","SAMIHL7",42,0)
 ;
"RTN","SAMIHL7",43,0)
 ;
"RTN","SAMIHL7",44,0)
 ;@ppi
"RTN","SAMIHL7",45,0)
UPDTPTL(fields) ;
"RTN","SAMIHL7",46,0)
 ; Update patient-lookup with a patient fields array
"RTN","SAMIHL7",47,0)
 ;@input
"RTN","SAMIHL7",48,0)
 ;   fields  = array of patient data
"RTN","SAMIHL7",49,0)
 ;@output
"RTN","SAMIHL7",50,0)
 ;   existing entry in patient-lookup graph updated
"RTN","SAMIHL7",51,0)
 ;     or new patient entered
"RTN","SAMIHL7",52,0)
 ;
"RTN","SAMIHL7",53,0)
 kill ^KBAP("SAMIHL7")
"RTN","SAMIHL7",54,0)
 set ^KBAP("SAMIHL7","UPDTPTL")=""
"RTN","SAMIHL7",55,0)
 ;
"RTN","SAMIHL7",56,0)
 ; bail if we didn't get a fields array
"RTN","SAMIHL7",57,0)
 quit:'$data(fields)
"RTN","SAMIHL7",58,0)
 ;
"RTN","SAMIHL7",59,0)
UPDTPTL1 ;
"RTN","SAMIHL7",60,0)
 ;
"RTN","SAMIHL7",61,0)
 set ^KBAP("SAMIHL7","UPDTPTL1")=""
"RTN","SAMIHL7",62,0)
 ;
"RTN","SAMIHL7",63,0)
 new rootpl s rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIHL7",64,0)
 new ptienssn,ptiennm,ptiendob,ptienssntmp
"RTN","SAMIHL7",65,0)
 set (ptienssn,ptiennm,ptiendob,ptienssntmp)=0
"RTN","SAMIHL7",66,0)
 new ptien,newpat set ptien=0,newpat=1
"RTN","SAMIHL7",67,0)
 ;
"RTN","SAMIHL7",68,0)
 ; Look for the existing patients with matching ssn.
"RTN","SAMIHL7",69,0)
 ;  if one has a matching name we don't make a new patient
"RTN","SAMIHL7",70,0)
 ;  but rather update the existing with changelog
"RTN","SAMIHL7",71,0)
 ;
"RTN","SAMIHL7",72,0)
 if $length($get(fields("ssn"))),$data(@rootpl@("ssn",$get(fields("ssn")))) do
"RTN","SAMIHL7",73,0)
 . set ptienssntmp=$order(@rootpl@("ssn",$get(fields("ssn")),0))
"RTN","SAMIHL7",74,0)
 . for  set ptienssn=$order(@rootpl@("ssn",$get(fields("ssn")),ptienssn)) quit:'ptienssn  do  quit:ptiennm
"RTN","SAMIHL7",75,0)
 .. if $length($get(fields("saminame"))),($$UP^XLFSTR(@rootpl@(ptienssn,"saminame"))=$$UP^XLFSTR(fields("saminame"))) do
"RTN","SAMIHL7",76,0)
 ... set ptiennm=ptienssn
"RTN","SAMIHL7",77,0)
 ;
"RTN","SAMIHL7",78,0)
 set ^KBAP("SAMIHL7","UPDTPTL1","A")=""
"RTN","SAMIHL7",79,0)
 ;
"RTN","SAMIHL7",80,0)
 if ptienssn,ptiennm do
"RTN","SAMIHL7",81,0)
 . new fixdob s fixdob=@rootpl@(ptienssn,"sbdob")
"RTN","SAMIHL7",82,0)
 . set fixdob=$piece(fixdob,"-")_"-"_$tr($j($piece(fixdob,"-",2),2)," ","0")_"-"_$tr($j($piece(fixdob,"-",3),2)," ","0")
"RTN","SAMIHL7",83,0)
 . if $length($get(fields("sbdob"))),(fixdob=fields("sbdob")) set ptiendob=ptienssn
"RTN","SAMIHL7",84,0)
 . s newpat=0,ptien=ptienssn
"RTN","SAMIHL7",85,0)
 ;
"RTN","SAMIHL7",86,0)
 ;
"RTN","SAMIHL7",87,0)
 set ^KBAP("SAMIHL7","UPDTPTL1","B")=""
"RTN","SAMIHL7",88,0)
 ;
"RTN","SAMIHL7",89,0)
 ; if there was no name match, restore ptienssn to the first ssn cross ref match
"RTN","SAMIHL7",90,0)
 set:'ptienssn ptienssn=ptienssntmp
"RTN","SAMIHL7",91,0)
 ;
"RTN","SAMIHL7",92,0)
 ;  if existing patient save existing data
"RTN","SAMIHL7",93,0)
 new oldarr
"RTN","SAMIHL7",94,0)
 if ptien merge oldarr=@rootpl@(ptien)
"RTN","SAMIHL7",95,0)
 ;
"RTN","SAMIHL7",96,0)
 ;
"RTN","SAMIHL7",97,0)
 set ^KBAP("SAMIHL7","UPDTPTL1","C")=""
"RTN","SAMIHL7",98,0)
 ;
"RTN","SAMIHL7",99,0)
 ; If a new patient get the next ptien to use and set dfn
"RTN","SAMIHL7",100,0)
 if '$get(ptien) do
"RTN","SAMIHL7",101,0)
 . set ptien=$order(@rootpl@(999999999),-1)+1
"RTN","SAMIHL7",102,0)
 . set fields("dfn")=ptien
"RTN","SAMIHL7",103,0)
 . set newpat=1
"RTN","SAMIHL7",104,0)
 ;
"RTN","SAMIHL7",105,0)
 ;
"RTN","SAMIHL7",106,0)
 set ^KBAP("SAMIHL7","UPDTPTL1","D")=""
"RTN","SAMIHL7",107,0)
 ;
"RTN","SAMIHL7",108,0)
 set ^KBAP("SAMIHL7","ptien","newpat")=$get(ptien)_"^"_$get(newpat)
"RTN","SAMIHL7",109,0)
 set ^KBAP("SAMIHL7","fields(dfn)")=$get(fields("dfn"))
"RTN","SAMIHL7",110,0)
 ;
"RTN","SAMIHL7",111,0)
 ; bail if for some reason we didn't get a next patient ien
"RTN","SAMIHL7",112,0)
 quit:'ptien
"RTN","SAMIHL7",113,0)
 ;
"RTN","SAMIHL7",114,0)
 merge ^KBAP("SAMIHL7","fields")=fields
"RTN","SAMIHL7",115,0)
 set ^KBAP("SAMIHL7","ptien")=$get(ptien)
"RTN","SAMIHL7",116,0)
 ;
"RTN","SAMIHL7",117,0)
 ;
"RTN","SAMIHL7",118,0)
 ; Build MATCHLOG
"RTN","SAMIHL7",119,0)
 ;  If we are adding a new patient check whether we had a
"RTN","SAMIHL7",120,0)
 ;   match for ssn or name on an existing patient (with
"RTN","SAMIHL7",121,0)
 ;   precedence to the ssn).  If so set MATCHLOG equal
"RTN","SAMIHL7",122,0)
 ;   to the new patient ien and add the index to the
"RTN","SAMIHL7",123,0)
 ;   previously existing patient.
"RTN","SAMIHL7",124,0)
MATCHLOG ;
"RTN","SAMIHL7",125,0)
 new newptien,var set newptien=""
"RTN","SAMIHL7",126,0)
 if newpat do
"RTN","SAMIHL7",127,0)
 . set newptien=ptien ; ien of the new patient being added
"RTN","SAMIHL7",128,0)
 .;
"RTN","SAMIHL7",129,0)
 .; if there were 1 or more existing entries with this ssn, set MATCHLOG
"RTN","SAMIHL7",130,0)
 .;
"RTN","SAMIHL7",131,0)
 . if ptienssn do  quit
"RTN","SAMIHL7",132,0)
 .. new ssnien s ssnien=0
"RTN","SAMIHL7",133,0)
 .. for  s ssnien=$order(@rootpl@("ssn",$get(fields("ssn")),ssnien)) q:'ssnien  d
"RTN","SAMIHL7",134,0)
 ... set @rootpl@(ssnien,"HL7MATCHLOG")=newptien
"RTN","SAMIHL7",135,0)
 ... set @rootpl@("HL7MATCHLOG",ssnien,newptien)=""
"RTN","SAMIHL7",136,0)
 ... U $P write !,"HL7MATCHLOG ssn","--- ssnien=",ssnien,"--- newptien=",newptien
"RTN","SAMIHL7",137,0)
 .;
"RTN","SAMIHL7",138,0)
 .; if there were 1 or more existing entries with this patient name, set MATCHLOG
"RTN","SAMIHL7",139,0)
 .;
"RTN","SAMIHL7",140,0)
 . if ptiennm do
"RTN","SAMIHL7",141,0)
 .. new pnien s pnien=0
"RTN","SAMIHL7",142,0)
 .. for  s pnien=$order(@rootpl@("name",$get(fields("saminame")),pnien)) q:'pnien  d
"RTN","SAMIHL7",143,0)
 ... set @rootpl@(pnien,"HL7MATCHLOG")=newptien
"RTN","SAMIHL7",144,0)
 ... set @rootpl@("HL7MATCHLOG",pnien,newptien)=""
"RTN","SAMIHL7",145,0)
 ... U $P write !,"HL7MATCHLOG name","---",pnien
"RTN","SAMIHL7",146,0)
 ;
"RTN","SAMIHL7",147,0)
 ;
"RTN","SAMIHL7",148,0)
 new field s field=""
"RTN","SAMIHL7",149,0)
 ; run through every fields subscript and set the
"RTN","SAMIHL7",150,0)
 ;   appropriate subscript patient entry in patient-lookup
"RTN","SAMIHL7",151,0)
 for  set field=$order(fields(field)) q:field=""  do
"RTN","SAMIHL7",152,0)
 .;
"RTN","SAMIHL7",153,0)
 .;new patient ====================================
"RTN","SAMIHL7",154,0)
 .; if new patient just set all patient-lookup field with
"RTN","SAMIHL7",155,0)
 .; the data in field array
"RTN","SAMIHL7",156,0)
 .; Load ORM message data later
"RTN","SAMIHL7",157,0)
 .;
"RTN","SAMIHL7",158,0)
 . if newpat do
"RTN","SAMIHL7",159,0)
 .. if field="ORM" quit
"RTN","SAMIHL7",160,0)
 .. set @rootpl@(ptien,field)=fields(field)
"RTN","SAMIHL7",161,0)
 .;
"RTN","SAMIHL7",162,0)
 .;old patient ====================================
"RTN","SAMIHL7",163,0)
  .; if not a new patient only store field results that are NOT null.
"RTN","SAMIHL7",164,0)
 .;   Never overwrite an existing patient's "dfn", rather store
"RTN","SAMIHL7",165,0)
 .;     the dfn just received in the remotedfn field
"RTN","SAMIHL7",166,0)
 .;
"RTN","SAMIHL7",167,0)
 .;   With existing patients if the new data for a field doesn't match
"RTN","SAMIHL7",168,0)
 .;     the pre-existing, save the pre-existing data in a changelog entry
"RTN","SAMIHL7",169,0)
 .;
"RTN","SAMIHL7",170,0)
 . if '$get(newpat),'(fields(field)="") do
"RTN","SAMIHL7",171,0)
 .. if field="ORM" quit
"RTN","SAMIHL7",172,0)
 .. if field="dfn" quit
"RTN","SAMIHL7",173,0)
 ..;
"RTN","SAMIHL7",174,0)
 .. if '($get(@rootpl@(ptien,field))=fields(field)) do
"RTN","SAMIHL7",175,0)
 ... set @rootpl@(ptien,"hl7changelog",$$FMTE^XLFDT($$NOW^XLFDT,5),field)=fields(field)
"RTN","SAMIHL7",176,0)
 .. set @rootpl@(ptien,field)=fields(field)
"RTN","SAMIHL7",177,0)
 .;
"RTN","SAMIHL7",178,0)
 .;indicies =========================================
"RTN","SAMIHL7",179,0)
 .;set all indicies for old and new patients for this field
"RTN","SAMIHL7",180,0)
 .; NOTE: we must kill any existing earlier idicies on previously
"RTN","SAMIHL7",181,0)
 .;existing patients to prevent duplicate pointers
"RTN","SAMIHL7",182,0)
 .;
"RTN","SAMIHL7",183,0)
 . if $get(fields(field))="" quit
"RTN","SAMIHL7",184,0)
 .;
"RTN","SAMIHL7",185,0)
 .; field=dfn =====================================
"RTN","SAMIHL7",186,0)
 . if field="dfn" do
"RTN","SAMIHL7",187,0)
 .. if newpat do
"RTN","SAMIHL7",188,0)
 ... set @rootpl@("dfn",fields(field),ptien)=""
"RTN","SAMIHL7",189,0)
 ..;
"RTN","SAMIHL7",190,0)
 .; As DID NOT get DFN from the VA server (only ssn)
"RTN","SAMIHL7",191,0)
 .;  we cannot set the "remotedfn" field
"RTN","SAMIHL7",192,0)
 . set @rootpl@(ptien,"remotedfn")=""
"RTN","SAMIHL7",193,0)
 .;
"RTN","SAMIHL7",194,0)
 .; field=icn =====================================
"RTN","SAMIHL7",195,0)
 . if field="icn" do
"RTN","SAMIHL7",196,0)
 .. set @rootpl@("icn",fields(field),ptien)=""
"RTN","SAMIHL7",197,0)
 .;
"RTN","SAMIHL7",198,0)
 .; field=last5 ===================================
"RTN","SAMIHL7",199,0)
 . if field="last5" do
"RTN","SAMIHL7",200,0)
 .. if '$get(newpat) do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",201,0)
 .. set @rootpl@("last5",fields(field),ptien)="" quit
"RTN","SAMIHL7",202,0)
 .;
"RTN","SAMIHL7",203,0)
 .; field=saminame ================================
"RTN","SAMIHL7",204,0)
 . if field="saminame" do
"RTN","SAMIHL7",205,0)
 .. if '$get(newpat) do
"RTN","SAMIHL7",206,0)
 ... do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",207,0)
 ... do KILLREF("name",$get(oldarr("name")),ptien)
"RTN","SAMIHL7",208,0)
 ... do KILLREF("name",$$UP^XLFSTR($get(oldarr("name"))),ptien)
"RTN","SAMIHL7",209,0)
 .. set @rootpl@("name",fields(field),ptien)=""
"RTN","SAMIHL7",210,0)
 .. set @rootpl@("saminame",fields(field),ptien)=""
"RTN","SAMIHL7",211,0)
 .. set @rootpl@("name",$$UP^XLFSTR(fields(field)),ptien)=""
"RTN","SAMIHL7",212,0)
 .;
"RTN","SAMIHL7",213,0)
 .; field=sinamef ==================================
"RTN","SAMIHL7",214,0)
 . if field="sinamef" do
"RTN","SAMIHL7",215,0)
 .. i '$get(newpat) do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",216,0)
 .. set @rootpl@(field,fields(field),ptien)=""
"RTN","SAMIHL7",217,0)
 .;
"RTN","SAMIHL7",218,0)
 .; field=sinamel ==================================
"RTN","SAMIHL7",219,0)
 . if field="sinamel" do
"RTN","SAMIHL7",220,0)
 .. if '$get(newpat) do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",221,0)
 .. set @rootpl@(field,fields(field),ptien)=""
"RTN","SAMIHL7",222,0)
 .;
"RTN","SAMIHL7",223,0)
 .; field=ssn ======================================
"RTN","SAMIHL7",224,0)
 . if field="ssn" do
"RTN","SAMIHL7",225,0)
 .. if '$get(newpat) do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",226,0)
 .. set @rootpl@(field,fields(field),ptien)=""
"RTN","SAMIHL7",227,0)
 ;
"RTN","SAMIHL7",228,0)
 ;
"RTN","SAMIHL7",229,0)
 set @rootpl@("Date Last Updated")=$$HTE^XLFDT($horolog)
"RTN","SAMIHL7",230,0)
 ;
"RTN","SAMIHL7",231,0)
 ; set so SAMIORM can use ptien to file HL7 messages
"RTN","SAMIHL7",232,0)
 set fields("ptien")=$get(ptien)
"RTN","SAMIHL7",233,0)
 ;
"RTN","SAMIHL7",234,0)
 ; now capture most recent ORM message
"RTN","SAMIHL7",235,0)
 do CAPTORM(.fields,rootpl,ptien)
"RTN","SAMIHL7",236,0)
 ;
"RTN","SAMIHL7",237,0)
 merge ^KBAP("SAMIHL7","fields")=fields
"RTN","SAMIHL7",238,0)
 ;
"RTN","SAMIHL7",239,0)
 quit
"RTN","SAMIHL7",240,0)
 ;
"RTN","SAMIHL7",241,0)
 ;
"RTN","SAMIHL7",242,0)
CAPTORM(fields,rootpl,ptien) ; Save all ORM fields in patient-lookup
"RTN","SAMIHL7",243,0)
 new node,snode,invdt
"RTN","SAMIHL7",244,0)
 set node=$na(fields("ORM")),snode=$p(node,")")
"RTN","SAMIHL7",245,0)
 for  set node=$Q(@node) q:node'[snode  do
"RTN","SAMIHL7",246,0)
 . set invdt=$QS(node,2)
"RTN","SAMIHL7",247,0)
 . set @rootpl@(ptien,"ORM",invdt,$QS(node,3))=@node
"RTN","SAMIHL7",248,0)
 quit
"RTN","SAMIHL7",249,0)
 ;
"RTN","SAMIHL7",250,0)
KILLREF(field,oldrslt,ptien) ;
"RTN","SAMIHL7",251,0)
 ;
"RTN","SAMIHL7",252,0)
 quit:($get(oldrslt)="")
"RTN","SAMIHL7",253,0)
 kill @rootpl@(field,oldrslt,ptien)
"RTN","SAMIHL7",254,0)
 quit
"RTN","SAMIHL7",255,0)
 ;
"RTN","SAMIHL7",256,0)
 ;
"RTN","SAMIHL7",257,0)
 ;
"RTN","SAMIHL7",258,0)
 ;@ppi
"RTN","SAMIHL7",259,0)
 ;@input
"RTN","SAMIHL7",260,0)
 ;  Expects all HL7 variables captured on message reception to
"RTN","SAMIHL7",261,0)
 ;   be in environment
"RTN","SAMIHL7",262,0)
 ;@output
"RTN","SAMIHL7",263,0)
 ;  Sends com ACK through appropriate link
"RTN","SAMIHL7",264,0)
ACK ;Force a com ACK
"RTN","SAMIHL7",265,0)
 ;
"RTN","SAMIHL7",266,0)
 kill HLA("HLA")
"RTN","SAMIHL7",267,0)
 set HLA("HLA",1)="MSA"_HLREC("FS")_"CA"_HLREC("FS")_HLREC("MID")
"RTN","SAMIHL7",268,0)
 ;
"RTN","SAMIHL7",269,0)
 I $D(HLA("HLA")) S HLP("NAMESPACE")="HL" D  quit
"RTN","SAMIHL7",270,0)
 . merge ^KBAP("SAMIHL7","HLA")=HLA
"RTN","SAMIHL7",271,0)
 . D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.HLMTIENA,"",.HLP)
"RTN","SAMIHL7",272,0)
 ;
"RTN","SAMIHL7",273,0)
 ;
"RTN","SAMIHL7",274,0)
EOR ;End of routine SAMIHL7
"RTN","SAMINOT1")
0^1^B443163534
"RTN","SAMINOT1",1,0)
SAMINOT1 ;ven/gpl - text notes ;2021-03-30T17:02Z
"RTN","SAMINOT1",2,0)
 ;;18.0;SAMI;**2,6,8,10,11**;2020-01;Build 11
"RTN","SAMINOT1",3,0)
 ;;1.18.0.11-i11
"RTN","SAMINOT1",4,0)
 ;
"RTN","SAMINOT1",5,0)
 ; SAMINOT1 contains a web service & associated subroutines to produce
"RTN","SAMINOT1",6,0)
 ; VAPALS-ELCAP text notes.
"RTN","SAMINOT1",7,0)
 ;
"RTN","SAMINOT1",8,0)
 quit  ; no entry from top
"RTN","SAMINOT1",9,0)
 ;
"RTN","SAMINOT1",10,0)
 ;
"RTN","SAMINOT1",11,0)
 ;
"RTN","SAMINOT1",12,0)
 ;@section 0 primary development
"RTN","SAMINOT1",13,0)
 ;
"RTN","SAMINOT1",14,0)
 ;
"RTN","SAMINOT1",15,0)
 ;
"RTN","SAMINOT1",16,0)
 ;@routine-credits
"RTN","SAMINOT1",17,0)
 ;@primary-dev George P. Lilly (gpl)
"RTN","SAMINOT1",18,0)
 ; gpl@vistaexpertise.net
"RTN","SAMINOT1",19,0)
 ;@primary-dev-org Vista Expertise Network (ven)
"RTN","SAMINOT1",20,0)
 ; http://vistaexpertise.net
"RTN","SAMINOT1",21,0)
 ;@copyright 2017/2021, gpl, all rights reserved
"RTN","SAMINOT1",22,0)
 ;@license see routine SAMIUL
"RTN","SAMINOT1",23,0)
 ;
"RTN","SAMINOT1",24,0)
 ;@last-updated 2021-03-30T17:02Z
"RTN","SAMINOT1",25,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMINOT1",26,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMINOT1",27,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMINOT1",28,0)
 ;@version 1.18.0.10-i11
"RTN","SAMINOT1",29,0)
 ;@release-date 2020-01
"RTN","SAMINOT1",30,0)
 ;@patch-list **2,6,8,10,11**
"RTN","SAMINOT1",31,0)
 ;
"RTN","SAMINOT1",32,0)
 ;@additional-dev Frederick D. S. Marshall (toad)
"RTN","SAMINOT1",33,0)
 ; toad@vistaexpertise.net
"RTN","SAMINOT1",34,0)
 ;@additional-dev Larry G. Carlson (lgc)
"RTN","SAMINOT1",35,0)
 ; larry.g.carlson@gmail.com
"RTN","SAMINOT1",36,0)
 ;@additional-dev Linda M. R. Yaw (lmry)
"RTN","SAMINOT1",37,0)
 ; linda.yaw@vistaexpertise.net
"RTN","SAMINOT1",38,0)
 ;@additional-dev Alexis R. Carlson (arc)
"RTN","SAMINOT1",39,0)
 ; whatisthehumanspirit@gmail.com
"RTN","SAMINOT1",40,0)
 ;@additional-dev Domenic DiNatale (dom)
"RTN","SAMINOT1",41,0)
 ; domenic.dinatale@paraxialtech.com
"RTN","SAMINOT1",42,0)
 ;
"RTN","SAMINOT1",43,0)
 ;@module-credits
"RTN","SAMINOT1",44,0)
 ;@project VA Partnership to Increase Access to Lung Screening
"RTN","SAMINOT1",45,0)
 ; (VA-PALS)
"RTN","SAMINOT1",46,0)
 ; http://va-pals.org/
"RTN","SAMINOT1",47,0)
 ;@funding 2017/2021, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMINOT1",48,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMINOT1",49,0)
 ;@partner-org Veterans Affairs Office of Rural health
"RTN","SAMINOT1",50,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMINOT1",51,0)
 ;@partner-org International Early Lung Cancer Action Program (I-ELCAP)
"RTN","SAMINOT1",52,0)
 ; http://ielcap.com/
"RTN","SAMINOT1",53,0)
 ;@partner-org Paraxial Technologies (par)
"RTN","SAMINOT1",54,0)
 ; http://paraxialtech.com/
"RTN","SAMINOT1",55,0)
 ;@partner-org Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMINOT1",56,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMINOT1",57,0)
 ;
"RTN","SAMINOT1",58,0)
 ;@module-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMINOT1",59,0)
 ; see routine SAMINUL
"RTN","SAMINOT1",60,0)
 ;
"RTN","SAMINOT1",61,0)
 ;
"RTN","SAMINOT1",62,0)
 ;
"RTN","SAMINOT1",63,0)
 ;@section 1 wsi WSNOTE^SAMINOT1 & related subroutines
"RTN","SAMINOT1",64,0)
 ;
"RTN","SAMINOT1",65,0)
 ;
"RTN","SAMINOT1",66,0)
 ;
"RTN","SAMINOT1",67,0)
EXISTCE(SID,FORM) ; extrinsic returns "true" or "false"
"RTN","SAMINOT1",68,0)
 ;
"RTN","SAMINOT1",69,0)
 ; if a Chart Eligibility Note exists
"RTN","SAMINOT1",70,0)
 ;
"RTN","SAMINOT1",71,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT1",72,0)
 n gvals s gvals=$na(@root@("graph",SID,FORM))
"RTN","SAMINOT1",73,0)
 ;i $g(@root@("graph",SID,FORM,"sicechrt"))="y" q "true"
"RTN","SAMINOT1",74,0)
 i $g(@gvals@("chart-eligibility-complete"))="true" q "true"
"RTN","SAMINOT1",75,0)
 ;
"RTN","SAMINOT1",76,0)
 quit "false" ; end of $$EXISTCE
"RTN","SAMINOT1",77,0)
 ;
"RTN","SAMINOT1",78,0)
 ;
"RTN","SAMINOT1",79,0)
 ;
"RTN","SAMINOT1",80,0)
EXISTPRE(SID,FORM) ; extrinsic returns "true" or "false"
"RTN","SAMINOT1",81,0)
 ;
"RTN","SAMINOT1",82,0)
 ; if a Pre-enrollment Note exists
"RTN","SAMINOT1",83,0)
 ;
"RTN","SAMINOT1",84,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT1",85,0)
 n gvals s gvals=$na(@root@("graph",SID,FORM))
"RTN","SAMINOT1",86,0)
 ;i $g(@root@("graph",SID,FORM,"sipedisc"))="y" q "true"
"RTN","SAMINOT1",87,0)
 ;i $g(@gvals@("pre-note-complete"))="true" i $g(@gvals@("siperslt"))="y" q "true"
"RTN","SAMINOT1",88,0)
 i $g(@gvals@("pre-note-complete"))="true" q "true"
"RTN","SAMINOT1",89,0)
 ;
"RTN","SAMINOT1",90,0)
 quit "false" ; end of $$EXISTPRE
"RTN","SAMINOT1",91,0)
 ;
"RTN","SAMINOT1",92,0)
 ;
"RTN","SAMINOT1",93,0)
 ;
"RTN","SAMINOT1",94,0)
EXISTINT(SID,FORM) ; extrinsic returns "true" or "false"
"RTN","SAMINOT1",95,0)
 ;
"RTN","SAMINOT1",96,0)
 ; if an Intake Note exists
"RTN","SAMINOT1",97,0)
 ;
"RTN","SAMINOT1",98,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT1",99,0)
 i $g(@root@("graph",SID,FORM,"sistatus"))="y" q "true"
"RTN","SAMINOT1",100,0)
 ;
"RTN","SAMINOT1",101,0)
 quit "false" ; end of $$EXISTINT
"RTN","SAMINOT1",102,0)
 ;
"RTN","SAMINOT1",103,0)
 ;
"RTN","SAMINOT1",104,0)
 ;
"RTN","SAMINOT1",105,0)
WSNOTE(return,filter) ; web service which returns a text note
"RTN","SAMINOT1",106,0)
 ;
"RTN","SAMINOT1",107,0)
 n debug s debug=0
"RTN","SAMINOT1",108,0)
 i $g(filter("debug"))=1 s debug=1
"RTN","SAMINOT1",109,0)
 ;
"RTN","SAMINOT1",110,0)
 k return
"RTN","SAMINOT1",111,0)
 s HTTPRSP("mime")="text/html"
"RTN","SAMINOT1",112,0)
 ;
"RTN","SAMINOT1",113,0)
 n si
"RTN","SAMINOT1",114,0)
 s si=$g(filter("studyid"))
"RTN","SAMINOT1",115,0)
 i si="" d  ;
"RTN","SAMINOT1",116,0)
 . s si="XXX00333"
"RTN","SAMINOT1",117,0)
 q:si=""
"RTN","SAMINOT1",118,0)
 ;
"RTN","SAMINOT1",119,0)
 n samikey
"RTN","SAMINOT1",120,0)
 s samikey=$g(filter("form"))
"RTN","SAMINOT1",121,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT1",122,0)
 i samikey="" d  ;
"RTN","SAMINOT1",123,0)
 . s samikey=$o(@root@("graph",si,"siform"))
"RTN","SAMINOT1",124,0)
 . ;w !,samikey
"RTN","SAMINOT1",125,0)
 . ;b
"RTN","SAMINOT1",126,0)
 ;
"RTN","SAMINOT1",127,0)
 n vals
"RTN","SAMINOT1",128,0)
 m vals=@root@("graph",si,samikey)
"RTN","SAMINOT1",129,0)
 ;
"RTN","SAMINOT1",130,0)
 n note,nien,ntype
"RTN","SAMINOT1",131,0)
 s ntype=""
"RTN","SAMINOT1",132,0)
 s note=""
"RTN","SAMINOT1",133,0)
 s nien=$g(filter("nien"))
"RTN","SAMINOT1",134,0)
 i nien="" d
"RTN","SAMINOT1",135,0)
 . s:$g(vals("samistatus"))="complete" ntype="intake"
"RTN","SAMINOT1",136,0)
 . s:$g(vals("samistatus"))="chart-eligibility" ntype="eligibility"
"RTN","SAMINOT1",137,0)
 . s:$g(vals("samistatus"))="pre-enrollment-discussion" ntype="pre-note"
"RTN","SAMINOT1",138,0)
 . q:ntype=""
"RTN","SAMINOT1",139,0)
 . ;d nien=$$NTTYPE add code to pull the latest note by type
"RTN","SAMINOT1",140,0)
 q:nien=""
"RTN","SAMINOT1",141,0)
 n notebase
"RTN","SAMINOT1",142,0)
 s notebase=$$NTLOCN(si,samikey,nien) ; global location for the note
"RTN","SAMINOT1",143,0)
 s note=$na(@notebase@("text"))
"RTN","SAMINOT1",144,0)
 i '$d(@note) q
"RTN","SAMINOT1",145,0)
 ;
"RTN","SAMINOT1",146,0)
 new temp,tout
"RTN","SAMINOT1",147,0)
 do GETTMPL^SAMICASE("temp","vapals:note")
"RTN","SAMINOT1",148,0)
 quit:'$data(temp)
"RTN","SAMINOT1",149,0)
 ;
"RTN","SAMINOT1",150,0)
 n cnt s cnt=0
"RTN","SAMINOT1",151,0)
 n zi s zi=""
"RTN","SAMINOT1",152,0)
 ;
"RTN","SAMINOT1",153,0)
 f  s zi=$o(temp(zi)) q:zi=""  d  ;
"RTN","SAMINOT1",154,0)
 . ;
"RTN","SAMINOT1",155,0)
 . n line s line=temp(zi)
"RTN","SAMINOT1",156,0)
 . D LOAD^SAMIFORM(.line,samikey,si,.filter,.vals)
"RTN","SAMINOT1",157,0)
 . s temp(zi)=line
"RTN","SAMINOT1",158,0)
 . ;
"RTN","SAMINOT1",159,0)
 . s cnt=cnt+1
"RTN","SAMINOT1",160,0)
 . s tout(cnt)=temp(zi)
"RTN","SAMINOT1",161,0)
 . ;
"RTN","SAMINOT1",162,0)
 . i temp(zi)["report-text" d  ;
"RTN","SAMINOT1",163,0)
 . . i temp(zi)["#" q  ;
"RTN","SAMINOT1",164,0)
 . . n zj s zj=""
"RTN","SAMINOT1",165,0)
 . . f  s zj=$o(@note@(zj)) q:zj=""  d  ;
"RTN","SAMINOT1",166,0)
 . . . s cnt=cnt+1
"RTN","SAMINOT1",167,0)
 . . . ;s tout(cnt)=@note@(zj)_"<br>"
"RTN","SAMINOT1",168,0)
 . . . s tout(cnt)=@note@(zj)_$char(13,10)
"RTN","SAMINOT1",169,0)
 m return=tout
"RTN","SAMINOT1",170,0)
 ;
"RTN","SAMINOT1",171,0)
 quit  ; end of WSNOTE
"RTN","SAMINOT1",172,0)
 ;
"RTN","SAMINOT1",173,0)
 ;
"RTN","SAMINOT1",174,0)
 ;
"RTN","SAMINOT1",175,0)
NOTE(filter) ; extrnisic which creates a note
"RTN","SAMINOT1",176,0)
 ;
"RTN","SAMINOT1",177,0)
 ; returns 1 if successful, 0 if not
"RTN","SAMINOT1",178,0)
 ;
"RTN","SAMINOT1",179,0)
 ; set up patient values
"RTN","SAMINOT1",180,0)
 ;
"RTN","SAMINOT1",181,0)
 n vals
"RTN","SAMINOT1",182,0)
 ;
"RTN","SAMINOT1",183,0)
 n si
"RTN","SAMINOT1",184,0)
 s si=$g(filter("studyid"))
"RTN","SAMINOT1",185,0)
 i si="" d  ;
"RTN","SAMINOT1",186,0)
 . s si="XXX00333"
"RTN","SAMINOT1",187,0)
 q:si=""
"RTN","SAMINOT1",188,0)
 ;
"RTN","SAMINOT1",189,0)
 n samikey
"RTN","SAMINOT1",190,0)
 s samikey=$g(filter("form"))
"RTN","SAMINOT1",191,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT1",192,0)
 i samikey="" d  ;
"RTN","SAMINOT1",193,0)
 . s samikey=$o(@root@("graph",si,"siform"))
"RTN","SAMINOT1",194,0)
 . ;w !,samikey
"RTN","SAMINOT1",195,0)
 . ;b
"RTN","SAMINOT1",196,0)
 ;
"RTN","SAMINOT1",197,0)
 s vals=$na(@root@("graph",si,samikey))
"RTN","SAMINOT1",198,0)
 ;
"RTN","SAMINOT1",199,0)
 i '$d(@vals) d  q 0 ;
"RTN","SAMINOT1",200,0)
 . ;w !,"error, patient values not found"
"RTN","SAMINOT1",201,0)
 ;zwr @vals@(*)
"RTN","SAMINOT1",202,0)
 ;
"RTN","SAMINOT1",203,0)
 k ^SAMIUL("NOTE")
"RTN","SAMINOT1",204,0)
 m ^SAMIUL("NOTE","vals")=@vals
"RTN","SAMINOT1",205,0)
 m ^SAMIUL("NOTE","filter")=filter
"RTN","SAMINOT1",206,0)
 ;
"RTN","SAMINOT1",207,0)
 n didnote s didnote=0
"RTN","SAMINOT1",208,0)
 ;
"RTN","SAMINOT1",209,0)
 i $g(@vals@("samistatus"))="chart-eligibility" d  ;
"RTN","SAMINOT1",210,0)
 . q:$g(@vals@("chart-eligibility-complete"))="true"
"RTN","SAMINOT1",211,0)
 . d MKEL(si,samikey,vals,.filter) ;
"RTN","SAMINOT1",212,0)
 . s didnote=1
"RTN","SAMINOT1",213,0)
 ;
"RTN","SAMINOT1",214,0)
 i $g(@vals@("samistatus"))="pre-enrollment-discussion" d  ;
"RTN","SAMINOT1",215,0)
 . q:$g(@vals@("pre-note-complete"))="true"
"RTN","SAMINOT1",216,0)
 . d MKPRE(si,samikey,vals,.filter) ;
"RTN","SAMINOT1",217,0)
 . s didnote=1
"RTN","SAMINOT1",218,0)
 ;
"RTN","SAMINOT1",219,0)
 i $g(@vals@("samistatus"))="complete" d  ;
"RTN","SAMINOT1",220,0)
 . q:$$HASINNT(vals)
"RTN","SAMINOT1",221,0)
 . d MKIN(si,samikey,vals,.filter) ;
"RTN","SAMINOT1",222,0)
 . s didnote=1
"RTN","SAMINOT1",223,0)
 ;
"RTN","SAMINOT1",224,0)
 n nien s nien=0
"RTN","SAMINOT1",225,0)
 i didnote=1 s nien=$$NTIEN(si,samikey)
"RTN","SAMINOT1",226,0)
 ;
"RTN","SAMINOT1",227,0)
 quit nien ; end of $$NOTE
"RTN","SAMINOT1",228,0)
 ;
"RTN","SAMINOT1",229,0)
 ;
"RTN","SAMINOT1",230,0)
 ;
"RTN","SAMINOT1",231,0)
HASINNT(vals) ; extrinsic returns 1 if intake note is present
"RTN","SAMINOT1",232,0)
 ;
"RTN","SAMINOT1",233,0)
 ; else returns 0
"RTN","SAMINOT1",234,0)
 ;
"RTN","SAMINOT1",235,0)
 n zzi,zzrtn s (zzi,zzrtn)=0
"RTN","SAMINOT1",236,0)
 q:'$d(@vals)
"RTN","SAMINOT1",237,0)
 f  s zzi=$o(@vals@("notes",zzi)) q:+zzi=0  d  ;
"RTN","SAMINOT1",238,0)
 . i $g(@vals@("notes",zzi,"name"))["Intake" s zzrtn=1
"RTN","SAMINOT1",239,0)
 ;
"RTN","SAMINOT1",240,0)
 quit zzrtn ; end of $$HASINNT
"RTN","SAMINOT1",241,0)
 ;
"RTN","SAMINOT1",242,0)
 ;
"RTN","SAMINOT1",243,0)
 ;
"RTN","SAMINOT1",244,0)
MKEL(sid,form,vals,filter) ;
"RTN","SAMINOT1",245,0)
 ;
"RTN","SAMINOT1",246,0)
 n cnt s cnt=0
"RTN","SAMINOT1",247,0)
 ;n dest s dest=$na(@vals@("eligibility-note"))
"RTN","SAMINOT1",248,0)
 n dest s dest=$$MKNT(vals,"Eligibility Note","eligibility",.filter)
"RTN","SAMINOT1",249,0)
 k @dest
"RTN","SAMINOT1",250,0)
 d OUT("Lung Screening Program Chart Eligibility Note")
"RTN","SAMINOT1",251,0)
 d OUT("")
"RTN","SAMINOT1",252,0)
 d ELNOTE(vals,dest,cnt)
"RTN","SAMINOT1",253,0)
 ;
"RTN","SAMINOT1",254,0)
 quit  ; end of MKEL
"RTN","SAMINOT1",255,0)
 ;
"RTN","SAMINOT1",256,0)
 ;
"RTN","SAMINOT1",257,0)
 ;
"RTN","SAMINOT1",258,0)
MKPRE(sid,form,vals,filter) ;
"RTN","SAMINOT1",259,0)
 ;
"RTN","SAMINOT1",260,0)
 n cnt s cnt=0
"RTN","SAMINOT1",261,0)
 ;n dest s dest=$na(@vals@("pre-note"))
"RTN","SAMINOT1",262,0)
 n dest s dest=$$MKNT(vals,"Pre-enrollment Discussion Note","prenote",.filter)
"RTN","SAMINOT1",263,0)
 k @dest
"RTN","SAMINOT1",264,0)
 i $g(@vals@("chart-eligibility-complete"))'="true" d  ;
"RTN","SAMINOT1",265,0)
 . d OUT("Lung Screening Program Chart Eligibility and Pre-enrollment Discussion Note")
"RTN","SAMINOT1",266,0)
 . d OUT("")
"RTN","SAMINOT1",267,0)
 . d ELNOTE(vals,dest,cnt)
"RTN","SAMINOT1",268,0)
 i $g(@vals@("chart-eligibility-complete"))="true" d  ;
"RTN","SAMINOT1",269,0)
 . d OUT("Lung Screening Program Pre-enrollment Discussion Note")
"RTN","SAMINOT1",270,0)
 . d OUT("")
"RTN","SAMINOT1",271,0)
 d PRENOTE(vals,dest,cnt)
"RTN","SAMINOT1",272,0)
 ;
"RTN","SAMINOT1",273,0)
 quit  ; end of MKPRE
"RTN","SAMINOT1",274,0)
 ;
"RTN","SAMINOT1",275,0)
 ;
"RTN","SAMINOT1",276,0)
 ;
"RTN","SAMINOT1",277,0)
MKIN(sid,form,vals,filter) ;
"RTN","SAMINOT1",278,0)
 ;
"RTN","SAMINOT1",279,0)
 n cnt s cnt=0
"RTN","SAMINOT1",280,0)
 ;n dest s dest=$na(@vals@("intake-note"))
"RTN","SAMINOT1",281,0)
 n dest s dest=$$MKNT(vals,"Intake Note","intake",.filter)
"RTN","SAMINOT1",282,0)
 k @dest
"RTN","SAMINOT1",283,0)
 d OUT("Lung Screening Program Intake Note")
"RTN","SAMINOT1",284,0)
 d OUT("")
"RTN","SAMINOT1",285,0)
 i $g(@vals@("chart-eligibility-complete"))'="true" d  ;
"RTN","SAMINOT1",286,0)
 . d ELNOTE(vals,dest,cnt)
"RTN","SAMINOT1",287,0)
 i $g(@vals@("pre-note-complete"))'="true" d  ;
"RTN","SAMINOT1",288,0)
 . d PRENOTE(vals,dest,cnt)
"RTN","SAMINOT1",289,0)
 d INNOTE(vals,dest,cnt)
"RTN","SAMINOT1",290,0)
 ;
"RTN","SAMINOT1",291,0)
 quit  ; end of MKIN
"RTN","SAMINOT1",292,0)
 ;
"RTN","SAMINOT1",293,0)
 ;
"RTN","SAMINOT1",294,0)
 ;
"RTN","SAMINOT1",295,0)
MKNT(vals,title,ntype,filter) ; extrinsic makes a note date=now returns 
"RTN","SAMINOT1",296,0)
 ;
"RTN","SAMINOT1",297,0)
 ; global addr. filter must be passed by reference
"RTN","SAMINOT1",298,0)
 ;
"RTN","SAMINOT1",299,0)
 n ntdt s ntdt=$$NTDTTM($$NOW^XLFDT)
"RTN","SAMINOT1",300,0)
 n ntptr
"RTN","SAMINOT1",301,0)
 s ntptr=$$MKNTLOC(vals,title,ntdt,$g(ntype),.filter)
"RTN","SAMINOT1",302,0)
 ;
"RTN","SAMINOT1",303,0)
 quit ntptr ; end of $$MKNT
"RTN","SAMINOT1",304,0)
 ;
"RTN","SAMINOT1",305,0)
 ;
"RTN","SAMINOT1",306,0)
 ;
"RTN","SAMINOT1",307,0)
MKNTLOC(vals,title,ndate,ntype,filter) ; extrinsic returns the 
"RTN","SAMINOT1",308,0)
 ;
"RTN","SAMINOT1",309,0)
 ;location for the note
"RTN","SAMINOT1",310,0)
 ;
"RTN","SAMINOT1",311,0)
 n nien
"RTN","SAMINOT1",312,0)
 s nien=$o(@vals@("notes",""),-1)+1
"RTN","SAMINOT1",313,0)
 s filter("nien")=nien
"RTN","SAMINOT1",314,0)
 n nloc s nloc=$na(@vals@("notes",nien))
"RTN","SAMINOT1",315,0)
 s @nloc@("name")=title_" "_$g(ndate)
"RTN","SAMINOT1",316,0)
 s @nloc@("date")=$g(ndate)
"RTN","SAMINOT1",317,0)
 s @nloc@("type")=$g(ntype)
"RTN","SAMINOT1",318,0)
 ;
"RTN","SAMINOT1",319,0)
 quit $name(@nloc@("text")) ; end of $$MKNTLOC
"RTN","SAMINOT1",320,0)
 ;
"RTN","SAMINOT1",321,0)
 ;
"RTN","SAMINOT1",322,0)
 ;
"RTN","SAMINOT1",323,0)
NTDTTM(ZFMDT) ; extrinsic returns the date and time in Note format
"RTN","SAMINOT1",324,0)
 ;
"RTN","SAMINOT1",325,0)
 ; ZFMDT is the fileman date/time to translate
"RTN","SAMINOT1",326,0)
 ;
"RTN","SAMINOT1",327,0)
 quit $$FMTE^XLFDT(ZFMDT,"5") ; end of $$NTDTTM
"RTN","SAMINOT1",328,0)
 ;
"RTN","SAMINOT1",329,0)
 ;
"RTN","SAMINOT1",330,0)
 ;
"RTN","SAMINOT1",331,0)
NTLOCN(sid,form,nien) ; extrinsic returns the location of the Nth note
"RTN","SAMINOT1",332,0)
 ;
"RTN","SAMINOT1",333,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT1",334,0)
 ;
"RTN","SAMINOT1",335,0)
 quit $name(@root@("graph",sid,form,"notes",nien)) ; end of $$NTLOCN
"RTN","SAMINOT1",336,0)
 ;
"RTN","SAMINOT1",337,0)
 ;
"RTN","SAMINOT1",338,0)
 ;
"RTN","SAMINOT1",339,0)
NTLAST(sid,form,ntype) ; extrinsic returns the location of the latest note
"RTN","SAMINOT1",340,0)
 ;
"RTN","SAMINOT1",341,0)
 ; of the type ntype
"RTN","SAMINOT1",342,0)
 ;
"RTN","SAMINOT1",343,0)
 quit  ; end of NTLAST
"RTN","SAMINOT1",344,0)
 ;
"RTN","SAMINOT1",345,0)
 ;
"RTN","SAMINOT1",346,0)
 ;
"RTN","SAMINOT1",347,0)
NTIEN(sid,form) ; extrinsic which returns the latest note for this form
"RTN","SAMINOT1",348,0)
 ;
"RTN","SAMINOT1",349,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT1",350,0)
 n rtn s rtn=$o(@root@("graph",sid,form,"notes"," "),-1)
"RTN","SAMINOT1",351,0)
 ;
"RTN","SAMINOT1",352,0)
 quit rtn ; end of $$NTIEN
"RTN","SAMINOT1",353,0)
 ;
"RTN","SAMINOT1",354,0)
 ;
"RTN","SAMINOT1",355,0)
 ;
"RTN","SAMINOT1",356,0)
NTLIST(nlist,sid,form) ; returns the note list in nlist, passed by ref
"RTN","SAMINOT1",357,0)
 ;
"RTN","SAMINOT1",358,0)
 n zn,root,gn
"RTN","SAMINOT1",359,0)
 s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT1",360,0)
 s zn=0
"RTN","SAMINOT1",361,0)
 s gn=$na(@root@("graph",sid,form,"notes"))
"RTN","SAMINOT1",362,0)
 q:'$d(@gn)
"RTN","SAMINOT1",363,0)
 f  s zn=$o(@gn@(zn)) q:+zn=0  d  ;
"RTN","SAMINOT1",364,0)
 . s @nlist@(zn,"name")=@gn@(zn,"name")
"RTN","SAMINOT1",365,0)
 . s @nlist@(zn,"nien")=zn
"RTN","SAMINOT1",366,0)
 ;
"RTN","SAMINOT1",367,0)
 quit  ; end of NTLIST
"RTN","SAMINOT1",368,0)
 ;
"RTN","SAMINOT1",369,0)
 ;
"RTN","SAMINOT1",370,0)
 ;
"RTN","SAMINOT1",371,0)
TLST ;
"RTN","SAMINOT1",372,0)
 ;
"RTN","SAMINOT1",373,0)
 set SID="XXX00677"
"RTN","SAMINOT1",374,0)
 set FORM="siform-2019-04-23"
"RTN","SAMINOT1",375,0)
 do NTLIST("G",SID,FORM)
"RTN","SAMINOT1",376,0)
 ;ZWR G
"RTN","SAMINOT1",377,0)
 ;
"RTN","SAMINOT1",378,0)
 quit  ; end of TLST
"RTN","SAMINOT1",379,0)
 ;
"RTN","SAMINOT1",380,0)
 ;
"RTN","SAMINOT1",381,0)
 ;
"RTN","SAMINOT1",382,0)
ELNOTE(vals,dest,cnt) ; eligibility NOTE TEXT
"RTN","SAMINOT1",383,0)
 ;
"RTN","SAMINOT1",384,0)
 D OUT("")
"RTN","SAMINOT1",385,0)
 D OUT("Date of chart review: "_$$XVAL("sidc",vals))
"RTN","SAMINOT1",386,0)
 D GLOUT("The participant was identified as a potential lung screening candidate by: ")
"RTN","SAMINOT1",387,0)
 D GLOUT($$XVAL("siceiden",vals),4)
"RTN","SAMINOT1",388,0)
 if $$XVAL("siceiden",vals)="referral" d  ;
"RTN","SAMINOT1",389,0)
 . D OUT("Date of Referral: "_$$XVAL("sicerfdt",vals))
"RTN","SAMINOT1",390,0)
 . n spec s spec=""
"RTN","SAMINOT1",391,0)
 . s:$$XVAL("sicerfpc",vals)="y" spec=spec_" Primary Care"
"RTN","SAMINOT1",392,0)
 . s:$$XVAL("sicerfwh",vals)="y" spec=spec_" Women's Health"
"RTN","SAMINOT1",393,0)
 . s:$$XVAL("sicerfge",vals)="y" spec=spec_" Geriatrics"
"RTN","SAMINOT1",394,0)
 . s:$$XVAL("sicerfpu",vals)="y" spec=spec_" Pulmonology"
"RTN","SAMINOT1",395,0)
 . s:$$XVAL("sicerfon",vals)="y" spec=spec_" Oncology"
"RTN","SAMINOT1",396,0)
 . s:$$XVAL("sicerfsc",vals)="y" spec=spec_" Smoking Cessation"
"RTN","SAMINOT1",397,0)
 . s:$$XVAL("sicerfot",vals)="y" spec=spec_" "_$$XVAL("sicerfoo",vals)
"RTN","SAMINOT1",398,0)
 . D GLOUT("Specialty of referring provider: ")
"RTN","SAMINOT1",399,0)
 . D GLOUT(spec,4)
"RTN","SAMINOT1",400,0)
 n elig
"RTN","SAMINOT1",401,0)
 s elig=$$XVAL("sicechrt",vals)
"RTN","SAMINOT1",402,0)
 D OUT("The participant is eligible based on chart review: "_$s(elig="y":"Yes",1:"no"))
"RTN","SAMINOT1",403,0)
 D OUT("")
"RTN","SAMINOT1",404,0)
 s @vals@("chart-eligibility-complete")="true"
"RTN","SAMINOT1",405,0)
 ;
"RTN","SAMINOT1",406,0)
 quit  ; end of ELNOTE
"RTN","SAMINOT1",407,0)
 ;
"RTN","SAMINOT1",408,0)
 ;
"RTN","SAMINOT1",409,0)
 ;
"RTN","SAMINOT1",410,0)
PRENOTE(vals,dest,cnt) ;
"RTN","SAMINOT1",411,0)
 ;
"RTN","SAMINOT1",412,0)
 i $g(@vals@("sipedisc"))'="y" q  ; no prelim discussion
"RTN","SAMINOT1",413,0)
 D OUT("")
"RTN","SAMINOT1",414,0)
 ;d OUT("A pre-enrollment discussion was held.")
"RTN","SAMINOT1",415,0)
 ;[If Yes is selected then add the following 5 lines]
"RTN","SAMINOT1",416,0)
 D OUT("The program attempted to reach the Veteran to discuss lung screening.")
"RTN","SAMINOT1",417,0)
 D OUT("Date of pre-enrollment discussion: "_$$XVAL("sipedc",vals))
"RTN","SAMINOT1",418,0)
 n via s via=""
"RTN","SAMINOT1",419,0)
 s:$$XVAL("sipecnip",vals)="1" via=via_" In person"
"RTN","SAMINOT1",420,0)
 s:$$XVAL("sipecnte",vals)="1" via=via_" Telephone"
"RTN","SAMINOT1",421,0)
 s:$$XVAL("sipecnth",vals)="1" via=via_" TeleHealth"
"RTN","SAMINOT1",422,0)
 s:$$XVAL("sipecnml",vals)="1" via=via_" Mailed Letter"
"RTN","SAMINOT1",423,0)
 s:$$XVAL("sipecnpp",vals)="1" via=via_" Message in patient portal"
"RTN","SAMINOT1",424,0)
 s:$$XVAL("sipecnvd",vals)="1" via=via_" Video-on-Demand (VOD)"
"RTN","SAMINOT1",425,0)
 s:$$XVAL("sipecnot",vals)="1" via=via_" "_$$XVAL("sipecnoo",vals)
"RTN","SAMINOT1",426,0)
 ;D OUT("The lung screening program reached the potential candidate or was contacted via:"_via)
"RTN","SAMINOT1",427,0)
 D GLOUT("The lung screening program reached the potential candidate or was contacted via:")
"RTN","SAMINOT1",428,0)
 D GLOUT(via,4)
"RTN","SAMINOT1",429,0)
 ;D OUT("The pre-enrollment discussion with the participant resulted in: "_$$SUBRSLT($$XVAL("siperslt",vals)))
"RTN","SAMINOT1",430,0)
 D OUT("The pre-enrollment discussion with the participant resulted in: ")
"RTN","SAMINOT1",431,0)
 D GLOUT($$SUBRSLT($$XVAL("siperslt",vals)),4)
"RTN","SAMINOT1",432,0)
 D OUT("Comments: ")
"RTN","SAMINOT1",433,0)
 D GLOUT($$XVAL("sipecmnt",vals),4)
"RTN","SAMINOT1",434,0)
 ;
"RTN","SAMINOT1",435,0)
 s @vals@("pre-note-complete")="true"
"RTN","SAMINOT1",436,0)
 ;
"RTN","SAMINOT1",437,0)
 quit  ; end of PRENOTE
"RTN","SAMINOT1",438,0)
 ;
"RTN","SAMINOT1",439,0)
 ;
"RTN","SAMINOT1",440,0)
 ;
"RTN","SAMINOT1",441,0)
SUBRSLT(XVAL) ; translation of discussion result
"RTN","SAMINOT1",442,0)
 ;
"RTN","SAMINOT1",443,0)
 q:XVAL="y" "Participant is interested in discussing lung screening. The program will proceed with enrollment process."
"RTN","SAMINOT1",444,0)
 q:XVAL="u" "Participant is unsure of lung screening. Ok to contact in the future."
"RTN","SAMINOT1",445,0)
 q:XVAL="nn" "Participant is not interested in discussing lung screening at this time. Ok to contact in the future."
"RTN","SAMINOT1",446,0)
 q:XVAL="nf" "Participant is not interested in discussing lung screening in the future."
"RTN","SAMINOT1",447,0)
 q:XVAL="na" "Unable to reach participant at this time"
"RTN","SAMINOT1",448,0)
 ;
"RTN","SAMINOT1",449,0)
 quit "" ; end of $$SUBRSLT
"RTN","SAMINOT1",450,0)
 ;
"RTN","SAMINOT1",451,0)
 ;
"RTN","SAMINOT1",452,0)
 ;
"RTN","SAMINOT1",453,0)
INNOTE(vals,dest,cnt) ;
"RTN","SAMINOT1",454,0)
 ;
"RTN","SAMINOT1",455,0)
 ;Lung Screening Program Intake Note
"RTN","SAMINOT1",456,0)
 ;
"RTN","SAMINOT1",457,0)
 ;Date of intake discussion contact:       [Date]
"RTN","SAMINOT1",458,0)
 ;How did you learn about the Lung Screening Program?:  [Selection]
"RTN","SAMINOT1",459,0)
 ;Primary address verified:                 [Yes/No]
"RTN","SAMINOT1",460,0)
 ;Rural status:                                        [Urban/Rural/Unknown]
"RTN","SAMINOT1",461,0)
 ;Preferred address and contact number:
"RTN","SAMINOT1",462,0)
 ;     [Address 1]
"RTN","SAMINOT1",463,0)
 ;           [Address 2]
"RTN","SAMINOT1",464,0)
 ;              [Address]
"RTN","SAMINOT1",465,0)
 ;
"RTN","SAMINOT1",466,0)
 ;Ever smoked?:            [Ever Smoked Text]
"RTN","SAMINOT1",467,0)
 ;Smoking Status:          [Never Smoked/Past/Current/Willing to Quit]
"RTN","SAMINOT1",468,0)
 ;CIGs per day:               [Input Number]
"RTN","SAMINOT1",469,0)
 ;PPD:                              [Computed Number]
"RTN","SAMINOT1",470,0)
 ;# of years:                    [Input Number]
"RTN","SAMINOT1",471,0)
 ;Pack Years:                   [Computed Number]
"RTN","SAMINOT1",472,0)
 ;
"RTN","SAMINOT1",473,0)
 ;[If a Quit Date is entered add the following line]
"RTN","SAMINOT1",474,0)
 ;Quit smoking on:         [Date]
"RTN","SAMINOT1",475,0)
 ;
"RTN","SAMINOT1",476,0)
 ;[If Smoking Cessation education text is entered add the following line]
"RTN","SAMINOT1",477,0)
 ;Smoking cessation education provided: [Show Input Text]
"RTN","SAMINOT1",478,0)
 ;
"RTN","SAMINOT1",479,0)
 ;[If a Lung Cancer Dx date is entered show the following 1 to 2 lines]
"RTN","SAMINOT1",480,0)
 ;Prior lung cancer diagnosis date: [Date]
"RTN","SAMINOT1",481,0)
 ;[If a location not in the VA is specified show the next line]
"RTN","SAMINOT1",482,0)
 ;Location where prior lung cancer diagnosis was made: [Location Text]
"RTN","SAMINOT1",483,0)
 ;
"RTN","SAMINOT1",484,0)
 ;[If Any Prior CT Date is entered show the following 1 to 2 lines]
"RTN","SAMINOT1",485,0)
 ;Prior CT:                   [Date]
"RTN","SAMINOT1",486,0)
 ;[If a location not in the VA is specified show the next line]
"RTN","SAMINOT1",487,0)
 ;Location where prior lung cancer diagnosis was made: [Location Text]
"RTN","SAMINOT1",488,0)
 ;
"RTN","SAMINOT1",489,0)
 ;Shared Decision Making:
"RTN","SAMINOT1",490,0)
 ;
"RTN","SAMINOT1",491,0)
 d OUT(" ")
"RTN","SAMINOT1",492,0)
 d OUT("   "_"Date of intake discussion contact: "_$$XVAL("sidc",vals))
"RTN","SAMINOT1",493,0)
 n learn s learn=""
"RTN","SAMINOT1",494,0)
 s:$$XVAL("silnip",vals) learn=learn_" In person"
"RTN","SAMINOT1",495,0)
 s:$$XVAL("silnph",vals) learn=learn_" Telephone"
"RTN","SAMINOT1",496,0)
 s:$$XVAL("silnth",vals) learn=learn_" TeleHealth"
"RTN","SAMINOT1",497,0)
 s:$$XVAL("silnml",vals) learn=learn_" Mailed letter"
"RTN","SAMINOT1",498,0)
 s:$$XVAL("silnpp",vals) learn=learn_" Message in patient portal"
"RTN","SAMINOT1",499,0)
 s:$$XVAL("silnvd",vals) learn=learn_" Video-on-Demand (VOD)"
"RTN","SAMINOT1",500,0)
 s:$$XVAL("silnot",vals) learn=learn_" "_$$XVAL("silnoo",vals)
"RTN","SAMINOT1",501,0)
 ;d GLOUT("   "_"How did you learn about the Lung Screening Program?: "_learn,4)
"RTN","SAMINOT1",502,0)
 d GLOUT("How did you learn about the Lung Screening Program?: ",4)
"RTN","SAMINOT1",503,0)
 d GLOUT(learn,6)
"RTN","SAMINOT1",504,0)
 n verified s verified=""
"RTN","SAMINOT1",505,0)
 s:$$XVAL("sipav",vals)="y" verified="Yes"
"RTN","SAMINOT1",506,0)
 s:$$XVAL("sipav",vals)="n" verified="No"
"RTN","SAMINOT1",507,0)
 d OUT("   "_"Primary address verified: "_verified)
"RTN","SAMINOT1",508,0)
 n rural s rural=""
"RTN","SAMINOT1",509,0)
 s:$$XVAL("sirs",vals)="r" rural="rural"
"RTN","SAMINOT1",510,0)
 s:$$XVAL("sirs",vals)="u" rural="urban"
"RTN","SAMINOT1",511,0)
 d OUT("   "_""_"Rural status: "_rural)
"RTN","SAMINOT1",512,0)
 d OUT("   "_"Preferred address and contact number: ")
"RTN","SAMINOT1",513,0)
 n pa s pa=""
"RTN","SAMINOT1",514,0)
 i $$XVAL("sipsa",vals)'="" d  ;
"RTN","SAMINOT1",515,0)
 . d OUT("      "_$$XVAL("sipsa",vals))
"RTN","SAMINOT1",516,0)
 . n csz s csz=""
"RTN","SAMINOT1",517,0)
 . s:$$XVAL("sipc",vals)'="" csz=$$XVAL("sipc",vals)
"RTN","SAMINOT1",518,0)
 . s:$$XVAL("sips",vals)'="" csz=csz_", "_$$XVAL("sips",vals)
"RTN","SAMINOT1",519,0)
 . s:$$XVAL("sipz",vals)'="" csz=csz_" "_$$XVAL("sipz",vals)
"RTN","SAMINOT1",520,0)
 . d OUT("      "_csz)
"RTN","SAMINOT1",521,0)
 d:$$XVAL("sippn",vals)'="" OUT("      "_$$XVAL("sippn",vals))
"RTN","SAMINOT1",522,0)
 d OUT("   "_"Ever smoked?: ")
"RTN","SAMINOT1",523,0)
 d GLOUT($$XVAL("sies",vals),6)
"RTN","SAMINOT1",524,0)
 n sstatus s sstatus=""
"RTN","SAMINOT1",525,0)
 s:$$XVAL("siesm",vals)="n" sstatus=sstatus_" Never smoked"
"RTN","SAMINOT1",526,0)
 s:$$XVAL("siesm",vals)="p" sstatus=sstatus_" Past"
"RTN","SAMINOT1",527,0)
 s:$$XVAL("siesm",vals)="c" sstatus=sstatus_" Current"
"RTN","SAMINOT1",528,0)
 s:$$XVAL("siesq",vals)=1 sstatus=sstatus_" Willing to quit"
"RTN","SAMINOT1",529,0)
 d OUT("   Smoking Status: "_sstatus)
"RTN","SAMINOT1",530,0)
 d OUT("   "_"CIGs per day: ")
"RTN","SAMINOT1",531,0)
 d OUT("      "_$$XVAL("sicpd",vals))
"RTN","SAMINOT1",532,0)
 d OUT("   "_"PPD: ")
"RTN","SAMINOT1",533,0)
 d OUT("      "_$$XVAL("sippd",vals))
"RTN","SAMINOT1",534,0)
 d OUT("   "_"# of years: ")
"RTN","SAMINOT1",535,0)
 d OUT("      "_$$XVAL("sisny",vals))
"RTN","SAMINOT1",536,0)
 d OUT("   "_"PPY: ")
"RTN","SAMINOT1",537,0)
 d OUT("      "_$$XVAL("sippy",vals))
"RTN","SAMINOT1",538,0)
 d OUT("")
"RTN","SAMINOT1",539,0)
 i $$XVAL("siq",vals)'="" d  ;
"RTN","SAMINOT1",540,0)
 . d OUT("Quit smoking on: "_$$XVAL("siq",vals))
"RTN","SAMINOT1",541,0)
 . d OUT("")
"RTN","SAMINOT1",542,0)
 i $$XVAL("sicep",vals)'="" d  ;
"RTN","SAMINOT1",543,0)
 . d OUT("Smoking cessation education provided:")
"RTN","SAMINOT1",544,0)
 . d GLOUT("    "_$$XVAL("sicep",vals),4)
"RTN","SAMINOT1",545,0)
 i $$XVAL("sicadx",vals)'="" d
"RTN","SAMINOT1",546,0)
 . d OUT("Prior lung cancer diagnosis date: "_$$XVAL("sicadx",vals))
"RTN","SAMINOT1",547,0)
 . i $$XVAL("sicadxl",vals)'="" d  ;
"RTN","SAMINOT1",548,0)
 . . d OUT("Location where prior lung cancer diagnosis was made:")
"RTN","SAMINOT1",549,0)
 . . d GLOUT("    "_$$XVAL("sicadxl",vals),4)
"RTN","SAMINOT1",550,0)
 i $$XVAL("siptct",vals)'="" d
"RTN","SAMINOT1",551,0)
 . d OUT("Prior CT: "_$$XVAL("siptct",vals))
"RTN","SAMINOT1",552,0)
 . i $$XVAL("siptctl",vals)'="" d  ;
"RTN","SAMINOT1",553,0)
 . . d OUT("Location where prior CT was made:")
"RTN","SAMINOT1",554,0)
 . . d GLOUT("    "_$$XVAL("siptctl",vals),4)
"RTN","SAMINOT1",555,0)
 d OUT(" ")
"RTN","SAMINOT1",556,0)
 d OUT("Shared Decision Making: ")
"RTN","SAMINOT1",557,0)
 d OUT(" ")
"RTN","SAMINOT1",558,0)
 n shareddm
"RTN","SAMINOT1",559,0)
 s shareddm=+$$XVAL("siidmdc",vals)
"RTN","SAMINOT1",560,0)
 i shareddm=1 d SDM(dest)
"RTN","SAMINOT1",561,0)
 e  d OUT("Shared decision making was not applicable")
"RTN","SAMINOT1",562,0)
 d OUT(" ")
"RTN","SAMINOT1",563,0)
 n ldct s ldct=""
"RTN","SAMINOT1",564,0)
 s:$$XVAL("sildct",vals)="n" ldct="No"
"RTN","SAMINOT1",565,0)
 s:$$XVAL("sildct",vals)="l" ldct="No"
"RTN","SAMINOT1",566,0)
 s:$$XVAL("sildct",vals)="y" ldct="Yes"
"RTN","SAMINOT1",567,0)
 d GLOUT("The veteran has decided to enroll in the Lung Screening Program: "_ldct)
"RTN","SAMINOT1",568,0)
 i $$XVAL("sildct",vals)="l" d  ;
"RTN","SAMINOT1",569,0)
 . d GLOUT("The veteran has indicated it is okay to contact in the future to discuss enrolling in the Lung Screening Program.",4)
"RTN","SAMINOT1",570,0)
 i ldct="Yes" d  ;
"RTN","SAMINOT1",571,0)
 . d OUT("LDCT ordered: "_ldct)
"RTN","SAMINOT1",572,0)
 . d OUT("    "_"Veteran enrolled in the LSS program. Results and coordination of care ")
"RTN","SAMINOT1",573,0)
 . d OUT("    "_"will be made by the LSS team.  ")
"RTN","SAMINOT1",574,0)
 . i $$XVAL("siclin",vals)'="" d  ;
"RTN","SAMINOT1",575,0)
 n tmpclin s tmpclin=$$XVAL("siclin",vals)
"RTN","SAMINOT1",576,0)
 i tmpclin'="" d  ;
"RTN","SAMINOT1",577,0)
 . d OUT("Clinical Indications for Initial Screening CT:")
"RTN","SAMINOT1",578,0)
 . d GLOUT("    "_tmpclin,4)
"RTN","SAMINOT1",579,0)
 ;
"RTN","SAMINOT1",580,0)
 ;The veteran has decided to enroll in the Lung Screening Program: [Yes/No]
"RTN","SAMINOT1",581,0)
 ;
"RTN","SAMINOT1",582,0)
 ;[If Not enroll at this time but okay to contact in the future, add the following line]
"RTN","SAMINOT1",583,0)
 ;The veteran has indicated it is okay to contact in the future to discuss enrolling in the Lung Screening Program.
"RTN","SAMINOT1",584,0)
 ;
"RTN","SAMINOT1",585,0)
 ;[If Yes is answered for enrollment add the following two lines]
"RTN","SAMINOT1",586,0)
 ;LDCT ordered:                Yes
"RTN","SAMINOT1",587,0)
 ;Veteran enrolled in the Lung Screening Program. Results and coordination of care will be made by the Lung Screening Program team.
"RTN","SAMINOT1",588,0)
 ;
"RTN","SAMINOT1",589,0)
 ;[If Clinical Indication text is provided add them to the note]
"RTN","SAMINOT1",590,0)
 ;Clinical Indications:          [Show Input Text]
"RTN","SAMINOT1",591,0)
 ;
"RTN","SAMINOT1",592,0)
 ;
"RTN","SAMINOT1",593,0)
 quit  ; end of INNOTE
"RTN","SAMINOT1",594,0)
 ;
"RTN","SAMINOT1",595,0)
 ;
"RTN","SAMINOT1",596,0)
 ;
"RTN","SAMINOT1",597,0)
SDM(ary) ; adds Shared Decision Making text to array ary, passed by name
"RTN","SAMINOT1",598,0)
 ;
"RTN","SAMINOT1",599,0)
 n ii s ii=$o(@ary@(" "),-1)
"RTN","SAMINOT1",600,0)
 s ii=ii+1
"RTN","SAMINOT1",601,0)
 s @ary@(ii)="Veteran of age and exposure to cigarette smoke as described above, and "
"RTN","SAMINOT1",602,0)
 s ii=ii+1
"RTN","SAMINOT1",603,0)
 s @ary@(ii)="without a current diagnosis or obvious symptoms suggestive of lung cancer, "
"RTN","SAMINOT1",604,0)
 s ii=ii+1
"RTN","SAMINOT1",605,0)
 s @ary@(ii)="has been educated today about the estimated risk for lung cancer, the "
"RTN","SAMINOT1",606,0)
 s ii=ii+1
"RTN","SAMINOT1",607,0)
 s @ary@(ii)="possibility of cure or life prolonging if an early lung cancer were to be "
"RTN","SAMINOT1",608,0)
 s ii=ii+1
"RTN","SAMINOT1",609,0)
 s @ary@(ii)="found during screening, the possibility of imaging abnormalities not being "
"RTN","SAMINOT1",610,0)
 s ii=ii+1
"RTN","SAMINOT1",611,0)
 s @ary@(ii)="lung cancer, the possibility of complications from additional diagnostic "
"RTN","SAMINOT1",612,0)
 s ii=ii+1
"RTN","SAMINOT1",613,0)
 s @ary@(ii)="procedures, and the approximate amount of radiation exposure associated "
"RTN","SAMINOT1",614,0)
 s ii=ii+1
"RTN","SAMINOT1",615,0)
 s @ary@(ii)="with each screening procedure. In addition, the Veteran has been educated "
"RTN","SAMINOT1",616,0)
 s ii=ii+1
"RTN","SAMINOT1",617,0)
 s @ary@(ii)="today about the importance of adhering to annual lung screening, the "
"RTN","SAMINOT1",618,0)
 s ii=ii+1
"RTN","SAMINOT1",619,0)
 s @ary@(ii)="possible impact of other medical conditions on the overall health status, "
"RTN","SAMINOT1",620,0)
 s ii=ii+1
"RTN","SAMINOT1",621,0)
 s @ary@(ii)="the importance of avoiding exposure to cigarette smoke, available tobacco "
"RTN","SAMINOT1",622,0)
 s ii=ii+1
"RTN","SAMINOT1",623,0)
 s @ary@(ii)="cessation programs and available lung screening services at this site. "
"RTN","SAMINOT1",624,0)
 s ii=ii+1
"RTN","SAMINOT1",625,0)
 s @ary@(ii)="Education material was provided to the veteran. "
"RTN","SAMINOT1",626,0)
 s ii=ii+1
"RTN","SAMINOT1",627,0)
 ;s @ary@(ii)="Based on this information, the Veteran has opted for "
"RTN","SAMINOT1",628,0)
 ;
"RTN","SAMINOT1",629,0)
 quit  ; end of SDM
"RTN","SAMINOT1",630,0)
 ;
"RTN","SAMINOT1",631,0)
 ;
"RTN","SAMINOT1",632,0)
 ;
"RTN","SAMINOT1",633,0)
GLOUT(ln,indent) ; glob out first wrap ln then put it in dest
"RTN","SAMINOT1",634,0)
 ;
"RTN","SAMINOT1",635,0)
 n arytmp
"RTN","SAMINOT1",636,0)
 s arytmp(1)=ln
"RTN","SAMINOT1",637,0)
 i $g(indent)="" s indent=1
"RTN","SAMINOT1",638,0)
 d wrap^%tt("arytmp",indent_":80")
"RTN","SAMINOT1",639,0)
 n ii s ii=""
"RTN","SAMINOT1",640,0)
 f  s ii=$o(arytmp(ii)) q:ii=""  d  ;
"RTN","SAMINOT1",641,0)
 . d OUT(arytmp(ii))
"RTN","SAMINOT1",642,0)
 ;
"RTN","SAMINOT1",643,0)
 quit  ; end of GLOUT
"RTN","SAMINOT1",644,0)
 ;
"RTN","SAMINOT1",645,0)
 ;
"RTN","SAMINOT1",646,0)
 ;
"RTN","SAMINOT1",647,0)
OUT(ln) ;
"RTN","SAMINOT1",648,0)
 ;
"RTN","SAMINOT1",649,0)
 s cnt=cnt+1
"RTN","SAMINOT1",650,0)
 n lnn
"RTN","SAMINOT1",651,0)
 ;s debug=1
"RTN","SAMINOT1",652,0)
 s lnn=$o(@dest@(" "),-1)+1
"RTN","SAMINOT1",653,0)
 s @dest@(lnn)=ln
"RTN","SAMINOT1",654,0)
 ;
"RTN","SAMINOT1",655,0)
 ;i $g(debug)=1 d  ;
"RTN","SAMINOT1",656,0)
 ;. i ln["<" q  ; no markup
"RTN","SAMINOT1",657,0)
 ;. n zs s zs=$STACK
"RTN","SAMINOT1",658,0)
 ;. n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMINOT1",659,0)
 ;. s @dest@(lnn)=zp_":"_ln
"RTN","SAMINOT1",660,0)
 ;
"RTN","SAMINOT1",661,0)
 quit  ; end of OUT
"RTN","SAMINOT1",662,0)
 ;
"RTN","SAMINOT1",663,0)
 ;
"RTN","SAMINOT1",664,0)
 ;
"RTN","SAMINOT1",665,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMINOT1",666,0)
 ;
"RTN","SAMINOT1",667,0)
 ; vals is passed by name
"RTN","SAMINOT1",668,0)
 ;
"RTN","SAMINOT1",669,0)
 n zr
"RTN","SAMINOT1",670,0)
 s zr=$g(@vals@(var))
"RTN","SAMINOT1",671,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMINOT1",672,0)
 ;
"RTN","SAMINOT1",673,0)
 quit zr ; end of $$XVAL
"RTN","SAMINOT1",674,0)
 ;
"RTN","SAMINOT1",675,0)
 ;
"RTN","SAMINOT1",676,0)
 ;
"RTN","SAMINOT1",677,0)
EOR ; end of routine SAMINOT1
"RTN","SAMINUL")
0^3^B101598
"RTN","SAMINUL",1,0)
SAMINUL ;ven/gpl - ielcap: note log ;2021-03-30T17:02Z
"RTN","SAMINUL",2,0)
 ;;18.0;SAMI;**9,10,11**;2020-01;Build 11
"RTN","SAMINUL",3,0)
 ;;1.18.0.11-i11
"RTN","SAMINUL",4,0)
 ;
"RTN","SAMINUL",5,0)
 ; SAMINOTE contains subroutines for producing the ELCAP Note Pages.
"RTN","SAMINUL",6,0)
 ; SAMINUL contains the development log for the SAMINOT* routines.
"RTN","SAMINUL",7,0)
 ; It contains no executable code.
"RTN","SAMINUL",8,0)
 ;
"RTN","SAMINUL",9,0)
 quit  ; no entry from top
"RTN","SAMINUL",10,0)
 ;
"RTN","SAMINUL",11,0)
 ;
"RTN","SAMINUL",12,0)
 ;
"RTN","SAMINUL",13,0)
 ;@section 0 primary development
"RTN","SAMINUL",14,0)
 ;
"RTN","SAMINUL",15,0)
 ;
"RTN","SAMINUL",16,0)
 ;
"RTN","SAMINUL",17,0)
 ;@routine-credits
"RTN","SAMINUL",18,0)
 ;@primary-dev George P. Lilly (gpl)
"RTN","SAMINUL",19,0)
 ; gpl@vistaexpertise.net
"RTN","SAMINUL",20,0)
 ;@primary-dev-org Vista Expertise Network (ven)
"RTN","SAMINUL",21,0)
 ; http://vistaexpertise.net
"RTN","SAMINUL",22,0)
 ;@copyright 2017/2021, gpl, all rights reserved
"RTN","SAMINUL",23,0)
 ;@license see routine SAMIUL
"RTN","SAMINUL",24,0)
 ;
"RTN","SAMINUL",25,0)
 ;@last-updated 2021-03-30T17:02Z
"RTN","SAMINUL",26,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMINUL",27,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMINUL",28,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMINUL",29,0)
 ;@version 1.18.0.10-i11
"RTN","SAMINUL",30,0)
 ;@release-date 2020-01
"RTN","SAMINUL",31,0)
 ;@patch-list **9,10,11**
"RTN","SAMINUL",32,0)
 ;
"RTN","SAMINUL",33,0)
 ;@additional-dev Frederick D. S. Marshall (toad)
"RTN","SAMINUL",34,0)
 ; toad@vistaexpertise.net
"RTN","SAMINUL",35,0)
 ;@additional-dev Larry G. Carlson (lgc)
"RTN","SAMINUL",36,0)
 ; larry.g.carlson@gmail.com
"RTN","SAMINUL",37,0)
 ;@additional-dev Linda M. R. Yaw (lmry)
"RTN","SAMINUL",38,0)
 ; linda.yaw@vistaexpertise.net
"RTN","SAMINUL",39,0)
 ;@additional-dev Alexis R. Carlson (arc)
"RTN","SAMINUL",40,0)
 ; whatisthehumanspirit@gmail.com
"RTN","SAMINUL",41,0)
 ;@additional-dev Domenic DiNatale (dom)
"RTN","SAMINUL",42,0)
 ; domenic.dinatale@paraxialtech.com
"RTN","SAMINUL",43,0)
 ;
"RTN","SAMINUL",44,0)
 ;@module-credits
"RTN","SAMINUL",45,0)
 ;@project VA Partnership to Increase Access to Lung Screening
"RTN","SAMINUL",46,0)
 ; (VA-PALS)
"RTN","SAMINUL",47,0)
 ; http://va-pals.org/
"RTN","SAMINUL",48,0)
 ;@funding 2017/2021, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMINUL",49,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMINUL",50,0)
 ;@partner-org Veterans Affairs Office of Rural health
"RTN","SAMINUL",51,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMINUL",52,0)
 ;@partner-org International Early Lung Cancer Action Program (I-ELCAP)
"RTN","SAMINUL",53,0)
 ; http://ielcap.com/
"RTN","SAMINUL",54,0)
 ;@partner-org Paraxial Technologies (par)
"RTN","SAMINUL",55,0)
 ; http://paraxialtech.com/
"RTN","SAMINUL",56,0)
 ;@partner-org Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMINUL",57,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMINUL",58,0)
 ;
"RTN","SAMINUL",59,0)
 ;@module-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMINUL",60,0)
 ;
"RTN","SAMINUL",61,0)
 ; 2019-04-04/18 ven/gpl 1.18.0-t04 c0bb7dbf,f7b48936,9d1f2cdc,
"RTN","SAMINUL",62,0)
 ;  ba5f366d,5b2e32dc,ce322911
"RTN","SAMINUL",63,0)
 ;  SAMINOT1: flags for intake form, fix crash on intake form, initial
"RTN","SAMINUL",64,0)
 ; version of new intake notes, revise text for pre-enrollment
"RTN","SAMINUL",65,0)
 ; discusstion note, complete new intake notes, add intake notes to
"RTN","SAMINUL",66,0)
 ; case review page.
"RTN","SAMINUL",67,0)
 ;
"RTN","SAMINUL",68,0)
 ; 2019-04-16/23 ven/lgc 1.18.0-t04 e54b76d1,21388d8a,f0505e51,
"RTN","SAMINUL",69,0)
 ;  89bffd3b
"RTN","SAMINUL",70,0)
 ;  SAMINOT1: SAMIFRM2 > SAMIFORM, remove spaces at end of lines,
"RTN","SAMINUL",71,0)
 ; control characters, SAMISUB2 > LOAD.
"RTN","SAMINUL",72,0)
 ;
"RTN","SAMINUL",73,0)
 ; 2019-04-23 ven/toad 1.18.0-t04 423a3946
"RTN","SAMINUL",74,0)
 ;  SAMINOT1: resolve gpl/lgc collision, restore SAMISUB2 > LOAD.
"RTN","SAMINUL",75,0)
 ;
"RTN","SAMINUL",76,0)
 ; 2019-04-30 ven/gpl 1.18.0-t04 cf73510c
"RTN","SAMINUL",77,0)
 ;  SAMINOT1: additions to intake note for prior scans & format.
"RTN","SAMINUL",78,0)
 ;
"RTN","SAMINUL",79,0)
 ; 2019-05-07 ven/lmry 1.18.0-t04 4a8ead45
"RTN","SAMINUL",80,0)
 ;  SAMINOT1: edit SAMINOT1 for XINDEX.
"RTN","SAMINUL",81,0)
 ;
"RTN","SAMINUL",82,0)
 ; 2019-05-07 ven/lgc 1.18.0-t04 f63ef57c
"RTN","SAMINUL",83,0)
 ;  SAMINOT1: cleanup for XINDEX.
"RTN","SAMINUL",84,0)
 ;
"RTN","SAMINUL",85,0)
 ; 2019-06-18 ven/arc 1.18.0-t04 91022482
"RTN","SAMINUL",86,0)
 ;  SAMINOT1: ^SAMIGPL > ^SAMIUL.
"RTN","SAMINUL",87,0)
 ;
"RTN","SAMINUL",88,0)
 ; 2019-07-01 ven/gpl 1.18.0-t04 72868e60
"RTN","SAMINUL",89,0)
 ;  SAMINOT1: update shared decision making text in intake note.
"RTN","SAMINUL",90,0)
 ;
"RTN","SAMINUL",91,0)
 ; 2019-08-03/14 ven/gpl 1.18.0-t04 bea65f7b,578f61d4
"RTN","SAMINUL",92,0)
 ;  SAMINOT1: fix bugs in Have you ever smoked processing in changelog
"RTN","SAMINUL",93,0)
 ; & intake note, restored ever smoked comment field to intake note.
"RTN","SAMINUL",94,0)
 ;
"RTN","SAMINUL",95,0)
 ; 2019-09-06 par/dom 1.18.0-t04 2ff47189 VAP-452
"RTN","SAMINUL",96,0)
 ;  SAMINOT1: patient > participant.
"RTN","SAMINUL",97,0)
 ;
"RTN","SAMINUL",98,0)
 ; 2019-09-26 ven/gpl 1.18.0-t04 92b12324 VAP-420
"RTN","SAMINUL",99,0)
 ;  SAMINOT1: smoking history.
"RTN","SAMINUL",100,0)
 ;
"RTN","SAMINUL",101,0)
 ; 2019-10-01 par/dom 1.18.0-t04 37c418a1,4caf1a98 VAP-457,344
"RTN","SAMINUL",102,0)
 ;  SAMINOT1: remove thorax, capitalization consistency.
"RTN","SAMINUL",103,0)
 ;
"RTN","SAMINUL",104,0)
 ; 2020-01-17/20 ven/lgc 1.18.0.1-i1 8557207f,d7d24834,0301ad95.
"RTN","SAMINUL",105,0)
 ;  659f2526,0ff2b83f,49615242,5bf7c398,dc5f618c
"RTN","SAMINUL",106,0)
 ;  SAMINOT2: followup note, fixed typos in VC note, followup LCS note
"RTN","SAMINUL",107,0)
 ; minus CT Eval pulls, LCS note with CT Eval extracts, fixed bug in
"RTN","SAMINUL",108,0)
 ; LSC CT eval extract, include entire impression section of CT Eval
"RTN","SAMINUL",109,0)
 ; report in LCS Note, improved import of impressions, limit to one
"RTN","SAMINUL",110,0)
 ; note per followup form.
"RTN","SAMINUL",111,0)
 ;
"RTN","SAMINUL",112,0)
 ; 2020-01-23 ven/arc 1.18.0.2-i2 9a24242a
"RTN","SAMINUL",113,0)
 ;  SAMINOT1: fix word wrap on intake note & typos in ct
"RTN","SAMINUL",114,0)
 ; eval report.
"RTN","SAMINUL",115,0)
 ;
"RTN","SAMINUL",116,0)
 ; 2020-08-12 ven/gpl 1.18.0.6-i6 781744c3
"RTN","SAMINUL",117,0)
 ;  SAMINOT1: chg to support hl7 transmission of notes.
"RTN","SAMINUL",118,0)
 ;
"RTN","SAMINUL",119,0)
 ; 2020-09-22 ven/gpl 1.18.0.6-i6 06459eda
"RTN","SAMINUL",120,0)
 ;  SAMINOT1: fix to match kids file.
"RTN","SAMINUL",121,0)
 ;
"RTN","SAMINUL",122,0)
 ; 2021-02-01/24 ven/gpl 1.18.0.8-i8 8e4ec441,cde71a55
"RTN","SAMINUL",123,0)
 ;  SAMINOT1: fix intake note format, fix error that sent note twice
"RTN","SAMINUL",124,0)
 ; to VistA.
"RTN","SAMINUL",125,0)
 ;
"RTN","SAMINUL",126,0)
 ; 2021-03-02 ven/gpl 1.18.0.9-i9 479dc041
"RTN","SAMINUL",127,0)
 ;  SAMINOT2: return error message if no ct eval form exists when
"RTN","SAMINUL",128,0)
 ; generating a fu note.
"RTN","SAMINUL",129,0)
 ;
"RTN","SAMINUL",130,0)
 ; 2021-03-15/16 ven/toad 1.18.0.9-i9 a46a2cc1
"RTN","SAMINUL",131,0)
 ;  SAMINUL: create routine.
"RTN","SAMINUL",132,0)
 ;  SAMINOT2: bump date & patch list, add contents, lt refactor.
"RTN","SAMINUL",133,0)
 ;
"RTN","SAMINUL",134,0)
 ; 2021-03-17 ven/toad 1.18.0.9-i9 62da30b4
"RTN","SAMINUL",135,0)
 ; SAMINOT2: remove blank from end of 1 line.
"RTN","SAMINUL",136,0)
 ;
"RTN","SAMINUL",137,0)
 ; 2021-03-22 ven/gpl 1.18.0.10-i10 6319a1eb
"RTN","SAMINUL",138,0)
 ;  SAMINOT1: fix logic bug in detecting pre-enrollment existing.
"RTN","SAMINUL",139,0)
 ;
"RTN","SAMINUL",140,0)
 ; 2021-03-23 ven/toad 1.18.0.10-i10 96f461d0
"RTN","SAMINUL",141,0)
 ;  SAMINOT1: bump date & patch list, lt refactor.
"RTN","SAMINUL",142,0)
 ;
"RTN","SAMINUL",143,0)
 ; 2021-03-29 ven/gpl 1.18.0.11-i11 6cd83445 VAP-483
"RTN","SAMINUL",144,0)
 ;  SAMINOT1: allow N/A for shared decision making on intake form:
"RTN","SAMINUL",145,0)
 ; in INNOTE new & set shareddm & use to call SDM or report n/a, based
"RTN","SAMINUL",146,0)
 ; on siidmdc.
"RTN","SAMINUL",147,0)
 ;
"RTN","SAMINUL",148,0)
 ; 2021-03-30 ven/toad 1.18.0.11-i11
"RTN","SAMINUL",149,0)
 ; SAMINOT1: bump version, date, log.
"RTN","SAMINUL",150,0)
 ;
"RTN","SAMINUL",151,0)
 ;
"RTN","SAMINUL",152,0)
 ;
"RTN","SAMINUL",153,0)
EOR ; end of routine SAMINUL
"RTN","SAMIUR")
0^2^B315699954
"RTN","SAMIUR",1,0)
SAMIUR ;ven/gpl - user reports ;2021-03-30T15:50Z
"RTN","SAMIUR",2,0)
 ;;18.0;SAMI;**5,10,11**;2020-01;Build 11
"RTN","SAMIUR",3,0)
 ;;1.18.0.11-i11
"RTN","SAMIUR",4,0)
 ;
"RTN","SAMIUR",5,0)
 ; SAMIUR contains a web service & associated subroutines to produce
"RTN","SAMIUR",6,0)
 ; the VAPALS-ELCAP user reports.
"RTN","SAMIUR",7,0)
 ;
"RTN","SAMIUR",8,0)
 quit  ; no entry from top
"RTN","SAMIUR",9,0)
 ;
"RTN","SAMIUR",10,0)
 ;
"RTN","SAMIUR",11,0)
 ;
"RTN","SAMIUR",12,0)
 ;@section 0 primary development
"RTN","SAMIUR",13,0)
 ;
"RTN","SAMIUR",14,0)
 ;
"RTN","SAMIUR",15,0)
 ;
"RTN","SAMIUR",16,0)
 ;@routine-credits
"RTN","SAMIUR",17,0)
 ;@primary-dev George P. Lilly (gpl)
"RTN","SAMIUR",18,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIUR",19,0)
 ;@primary-dev-org Vista Expertise Network (ven)
"RTN","SAMIUR",20,0)
 ; http://vistaexpertise.net
"RTN","SAMIUR",21,0)
 ;@copyright 2017/2021, gpl, all rights reserved
"RTN","SAMIUR",22,0)
 ;@license see routine SAMIUL
"RTN","SAMIUR",23,0)
 ;
"RTN","SAMIUR",24,0)
 ;@last-updated 2021-03-30T15:50Z
"RTN","SAMIUR",25,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMIUR",26,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMIUR",27,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMIUR",28,0)
 ;@version 1.18.0.11-i11
"RTN","SAMIUR",29,0)
 ;@release-date 2020-01
"RTN","SAMIUR",30,0)
 ;@patch-list **5,10,11**
"RTN","SAMIUR",31,0)
 ;
"RTN","SAMIUR",32,0)
 ;@additional-dev Frederick D. S. Marshall (toad)
"RTN","SAMIUR",33,0)
 ; toad@vistaexpertise.net
"RTN","SAMIUR",34,0)
 ;@additional-dev Larry G. Carlson (lgc)
"RTN","SAMIUR",35,0)
 ; larry.g.carlson@gmail.com
"RTN","SAMIUR",36,0)
 ;@additional-dev Alexis R. Carlson (arc)
"RTN","SAMIUR",37,0)
 ; whatisthehumanspirit@gmail.com
"RTN","SAMIUR",38,0)
 ;
"RTN","SAMIUR",39,0)
 ;@module-credits
"RTN","SAMIUR",40,0)
 ;@project VA Partnership to Increase Access to Lung Screening
"RTN","SAMIUR",41,0)
 ; (VA-PALS)
"RTN","SAMIUR",42,0)
 ; http://va-pals.org/
"RTN","SAMIUR",43,0)
 ;@funding 2017/2021, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMIUR",44,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMIUR",45,0)
 ;@partner-org Veterans Affairs Office of Rural health
"RTN","SAMIUR",46,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMIUR",47,0)
 ;@partner-org International Early Lung Cancer Action Program (I-ELCAP)
"RTN","SAMIUR",48,0)
 ; http://ielcap.com/
"RTN","SAMIUR",49,0)
 ;@partner-org Paraxial Technologies (par)
"RTN","SAMIUR",50,0)
 ; http://paraxialtech.com/
"RTN","SAMIUR",51,0)
 ;@partner-org Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMIUR",52,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMIUR",53,0)
 ;
"RTN","SAMIUR",54,0)
 ;@module-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMIUR",55,0)
 ;
"RTN","SAMIUR",56,0)
 ; 2020-02-10/12 ven/gpl 1.18.0-t04 d543f7bb,f9869dfb,0e4d8b9a
"RTN","SAMIUR",57,0)
 ;  SAMIUR: 1st version of revised user reports, progress on user
"RTN","SAMIUR",58,0)
 ; reports, fixed a bug in enrollment report.
"RTN","SAMIUR",59,0)
 ;
"RTN","SAMIUR",60,0)
 ; 2020-02-18 ven/lgc 1.18.0-t04 76874314
"RTN","SAMIUR",61,0)
 ;  SAMIUR: update recently edited routines.
"RTN","SAMIUR",62,0)
 ;
"RTN","SAMIUR",63,0)
 ; 2020-03-10/12 ven/gpl 1.18.0-t04 8de06b06,4ad52d64
"RTN","SAMIUR",64,0)
 ;  SAMIUR: user report date filtering, fix end date logic in UR.
"RTN","SAMIUR",65,0)
 ;
"RTN","SAMIUR",66,0)
 ; 2020-04-16/23 ven/lgc 1.18.0-t04 e54b76d1b,89bffd3b
"RTN","SAMIUR",67,0)
 ;  SAMIUR: SAMIFRM2 > SAMIFORM, SAMISUB2 > LOAD.
"RTN","SAMIUR",68,0)
 ;
"RTN","SAMIUR",69,0)
 ; 2020-08-04 ven/gpl 1.18.0-t04 cd865e2b VPA-438
"RTN","SAMIUR",70,0)
 ;  SAMIUR: requested changes to followup report.
"RTN","SAMIUR",71,0)
 ;
"RTN","SAMIUR",72,0)
 ; 2020-09-26 ven/gpl 1.18.0-t04 92b12324 VAP-420
"RTN","SAMIUR",73,0)
 ;  SAMIUR: add smoking history.
"RTN","SAMIUR",74,0)
 ;
"RTN","SAMIUR",75,0)
 ; 2020-01-01/05 ven/arc 1.18.0 399f8547,62e3200f
"RTN","SAMIUR",76,0)
 ;  SAMIUR: unmatched participant processing.
"RTN","SAMIUR",77,0)
 ;
"RTN","SAMIUR",78,0)
 ; 2020-04-29/05-13 ven/gpl 1.18.0.5-i5 e8b8ea2d,61c7d208
"RTN","SAMIUR",79,0)
 ;  SAMIUR: fixes for reports, worklist functionality.
"RTN","SAMIUR",80,0)
 ;
"RTN","SAMIUR",81,0)
 ; 2021-03-22/23 ven/gpl 1.18.0.10-i10 256efe63,ba81b86a2
"RTN","SAMIUR",82,0)
 ;  SAMIUR: sort all reports by name, added row totals to reports.
"RTN","SAMIUR",83,0)
 ;
"RTN","SAMIUR",84,0)
 ; 2021-03-23 ven/toad 1.18.0.10-i10 96f461d0,af86e0eb
"RTN","SAMIUR",85,0)
 ; SAMIUR: add version info & dev log, lt refactor, fix XINDEX errors.
"RTN","SAMIUR",86,0)
 ;
"RTN","SAMIUR",87,0)
 ; 2021-03-29 ven/gpl 1.18.0.11-i11 e809f2a2
"RTN","SAMIUR",88,0)
 ;  SAMIUR: prevent crash when reports have no matches: in WSREPORT
"RTN","SAMIUR",89,0)
 ; set SRT="" and uncomment zwrite SRT; in WKLIST add 2 commented-out
"RTN","SAMIUR",90,0)
 ; debugging lines.
"RTN","SAMIUR",91,0)
 ;
"RTN","SAMIUR",92,0)
 ; 2021-03-30 ven/toad 1.18.0.11-i11
"RTN","SAMIUR",93,0)
 ; SAMIUR: bump version, date, log; in WSREPORT comment zwrite SRT.
"RTN","SAMIUR",94,0)
 ;
"RTN","SAMIUR",95,0)
 ;
"RTN","SAMIUR",96,0)
 ;
"RTN","SAMIUR",97,0)
WSREPORT(SAMIRTN,filter) ; generate a report based on parameters in the filter
"RTN","SAMIUR",98,0)
 ;
"RTN","SAMIUR",99,0)
 ; here are the user reports that are defined:
"RTN","SAMIUR",100,0)
 ;  1. followup
"RTN","SAMIUR",101,0)
 ;  2. activity
"RTN","SAMIUR",102,0)
 ;  3. missingct
"RTN","SAMIUR",103,0)
 ;  4. incomplete
"RTN","SAMIUR",104,0)
 ;  5. outreach
"RTN","SAMIUR",105,0)
 ;  6. enrollment
"RTN","SAMIUR",106,0)
 ;  7. worklist
"RTN","SAMIUR",107,0)
 ; the report to generate is passed in parameter samireporttype
"RTN","SAMIUR",108,0)
 ;
"RTN","SAMIUR",109,0)
 n debug s debug=0
"RTN","SAMIUR",110,0)
 i $g(filter("debug"))=1 s debug=1
"RTN","SAMIUR",111,0)
 i $g(filter("debug"))=1 s debug=1
"RTN","SAMIUR",112,0)
 k SAMIRTN
"RTN","SAMIUR",113,0)
 s HTTPRSP("mime")="text/html"
"RTN","SAMIUR",114,0)
 ;
"RTN","SAMIUR",115,0)
 n type,temp
"RTN","SAMIUR",116,0)
 s type=$g(filter("samireporttype"))
"RTN","SAMIUR",117,0)
 i type="" d  q  ; report type missing
"RTN","SAMIUR",118,0)
 . d GETHOME^SAMIHOM3(.SAMIRTN,.filter) ; send them to home
"RTN","SAMIUR",119,0)
 ;
"RTN","SAMIUR",120,0)
 d getThis^%wd("temp","table.html") ; page template
"RTN","SAMIUR",121,0)
 q:'$d(temp)
"RTN","SAMIUR",122,0)
 ;
"RTN","SAMIUR",123,0)
 n SAMIPATS
"RTN","SAMIUR",124,0)
 ;s pats=""
"RTN","SAMIUR",125,0)
 n datephrase
"RTN","SAMIUR",126,0)
 d SELECT(.SAMIPATS,type,.datephrase,.filter) ; select patients for the report
"RTN","SAMIUR",127,0)
 ;q:'$d(SAMIPATS)
"RTN","SAMIUR",128,0)
 ;
"RTN","SAMIUR",129,0)
 n ln,cnt,ii
"RTN","SAMIUR",130,0)
 s (ii,ln,cnt)=0
"RTN","SAMIUR",131,0)
 f  s ii=$o(temp(ii)) q:+ii=0  q:$g(temp(ii))["<thead"  d  ;
"RTN","SAMIUR",132,0)
 . s cnt=cnt+1
"RTN","SAMIUR",133,0)
 . s ln=$g(temp(ii))
"RTN","SAMIUR",134,0)
 . n samikey,si
"RTN","SAMIUR",135,0)
 . s (samikey,si)=""
"RTN","SAMIUR",136,0)
 . d LOAD^SAMIFORM(.ln,samikey,si,.filter)
"RTN","SAMIUR",137,0)
 . ;i ln["PAGE NAME" d findReplace^%ts(.ln,"PAGE NAME",$$PNAME(type,datephrase))
"RTN","SAMIUR",138,0)
 . i ln["PAGE NAME" d findReplace^%ts(.ln,"PAGE NAME",$$PNAME(type,""))
"RTN","SAMIUR",139,0)
 . i ln["CRITERIA" d findReplace^%ts(.ln,"CRITERIA",datephrase)
"RTN","SAMIUR",140,0)
 . i ln["@@REPORTTYPE@@" d findReplace^%ts(.ln,"@@REPORTTYPE@@",type)
"RTN","SAMIUR",141,0)
 . ;
"RTN","SAMIUR",142,0)
 . i ln["name=""start-date""" d findReplace^%ts(.ln,"start-date""","start-date"" value="""_$g(filter("start-date"))_"""")
"RTN","SAMIUR",143,0)
 . i ln["name=""end-date""" d findReplace^%ts(.ln,"end-date""","end-date"" value="""_$g(filter("end-date"))_"""")
"RTN","SAMIUR",144,0)
 . s SAMIRTN(cnt)=ln
"RTN","SAMIUR",145,0)
 . ;
"RTN","SAMIUR",146,0)
 n RPT,ik
"RTN","SAMIUR",147,0)
 d RPTTBL^SAMIUR2(.RPT,type) ; get the report specs
"RTN","SAMIUR",148,0)
 i '$d(RPT) d  q  ; don't know about this report
"RTN","SAMIUR",149,0)
 . d GETHOME^SAMIHOM3(.SAMIRTN,.filter) ; send them to home
"RTN","SAMIUR",150,0)
 ;
"RTN","SAMIUR",151,0)
 ; output the header
"RTN","SAMIUR",152,0)
 ;
"RTN","SAMIUR",153,0)
 s cnt=cnt+1 s SAMIRTN(cnt)="<thead><tr>"
"RTN","SAMIUR",154,0)
 s cnt=cnt+1
"RTN","SAMIUR",155,0)
 n totcnt s totcnt=cnt
"RTN","SAMIUR",156,0)
 s ir=""
"RTN","SAMIUR",157,0)
 f  s ir=$o(RPT(ir)) q:ir=""  d  ;
"RTN","SAMIUR",158,0)
 . s cnt=cnt+1
"RTN","SAMIUR",159,0)
 . s SAMIRTN(cnt)="<th>"_$g(RPT(ir,"header"))_"</th>"
"RTN","SAMIUR",160,0)
 s cnt=cnt+1 s SAMIRTN(cnt)="</tr></thead>"
"RTN","SAMIUR",161,0)
 ;
"RTN","SAMIUR",162,0)
 s cnt=cnt+1 s SAMIRTN(cnt)="<tbody>"
"RTN","SAMIUR",163,0)
 ;
"RTN","SAMIUR",164,0)
 i type'="worklist" d  ; 
"RTN","SAMIUR",165,0)
 . d NUHREF(.SAMIPATS) ; create the nuhref link for all patients
"RTN","SAMIUR",166,0)
 ;
"RTN","SAMIUR",167,0)
 n SRT s SRT=""
"RTN","SAMIUR",168,0)
 i $g(filter("sort"))="" s filter("sort")="name"
"RTN","SAMIUR",169,0)
 d SORT(.SRT,.SAMIPATS,.filter)
"RTN","SAMIUR",170,0)
 ;zwr SRT
"RTN","SAMIUR",171,0)
 ;
"RTN","SAMIUR",172,0)
 ;s ij=0
"RTN","SAMIUR",173,0)
 ;f  s ij=$o(SAMIPATS(ij)) q:+ij=0  d  ;
"RTN","SAMIUR",174,0)
 ;. n ij2 s ij2=0
"RTN","SAMIUR",175,0)
 ;. f  s ij2=$o(SAMIPATS(ij,ij2)) q:+ij2=0  d  ;
"RTN","SAMIUR",176,0)
 ;. . n dfn s dfn=ij2
"RTN","SAMIUR",177,0)
 n iz,ij,ij2,dfn,rows
"RTN","SAMIUR",178,0)
 s rows=0
"RTN","SAMIUR",179,0)
 s (iz,ij,ij2,dfn)=""
"RTN","SAMIUR",180,0)
 f  s iz=$o(SRT(iz)) q:iz=""  d  ;
"RTN","SAMIUR",181,0)
 . s ij=$o(SRT(iz,""))
"RTN","SAMIUR",182,0)
 . s dfn=$o(SRT(iz,ij,""))
"RTN","SAMIUR",183,0)
 . d  ;
"RTN","SAMIUR",184,0)
 . . s cnt=cnt+1 s SAMIRTN(cnt)="<tr>"
"RTN","SAMIUR",185,0)
 . . s ir=""
"RTN","SAMIUR",186,0)
 . . f  s ir=$o(RPT(ir)) q:ir=""  d  ;
"RTN","SAMIUR",187,0)
 . . . s cnt=cnt+1
"RTN","SAMIUR",188,0)
 . . . n XR,XRV
"RTN","SAMIUR",189,0)
 . . . ;s XR=$g(RPT(ir,"routine"))_"("_ij_",.SAMIPATS)"
"RTN","SAMIUR",190,0)
 . . . s XR="S XRV="_$g(RPT(ir,"routine"))_"("_ij_","_dfn_",.SAMIPATS)"
"RTN","SAMIUR",191,0)
 . . . ;s XRV=@XR
"RTN","SAMIUR",192,0)
 . . . X XR
"RTN","SAMIUR",193,0)
 . . . s SAMIRTN(cnt)="<td>"_$g(XRV)_"</td>"
"RTN","SAMIUR",194,0)
 . . ;
"RTN","SAMIUR",195,0)
 . . s cnt=cnt+1
"RTN","SAMIUR",196,0)
 . . s SAMIRTN(cnt)="</tr>"
"RTN","SAMIUR",197,0)
 . . s rows=rows+1
"RTN","SAMIUR",198,0)
 s cnt=cnt+1
"RTN","SAMIUR",199,0)
 s SAMIRTN(cnt)="<tr><td>Total: "_rows_"</td></tr>"
"RTN","SAMIUR",200,0)
 s SAMIRTN(totcnt)="<td>Total: "_rows_"</td></tr><tr>"
"RTN","SAMIUR",201,0)
 ;
"RTN","SAMIUR",202,0)
 s cnt=cnt+1 s SAMIRTN(cnt)="</tbody>"
"RTN","SAMIUR",203,0)
 f  s ii=$o(temp(ii)) q:temp(ii)["</tbody>"  d  ;
"RTN","SAMIUR",204,0)
 . ; skip past template headers and blank body
"RTN","SAMIUR",205,0)
 f  s ii=$o(temp(ii)) q:+ii=0  d  ;
"RTN","SAMIUR",206,0)
 . s cnt=cnt+1
"RTN","SAMIUR",207,0)
 . s ln=$g(temp(ii))
"RTN","SAMIUR",208,0)
 . n samikey,si
"RTN","SAMIUR",209,0)
 . s (samikey,si)=""
"RTN","SAMIUR",210,0)
 . d LOAD^SAMIFORM(.ln,samikey,si,.filter)
"RTN","SAMIUR",211,0)
 . s SAMIRTN(cnt)=ln
"RTN","SAMIUR",212,0)
 ;
"RTN","SAMIUR",213,0)
 quit  ; end of WSREPORT
"RTN","SAMIUR",214,0)
 ;
"RTN","SAMIUR",215,0)
 ;
"RTN","SAMIUR",216,0)
 ;
"RTN","SAMIUR",217,0)
SORT(SRTN,SAMIPATS,FILTER) ;
"RTN","SAMIUR",218,0)
 n typ s typ=$g(FILTER("sort"))
"RTN","SAMIUR",219,0)
 i typ="" s typ="name"
"RTN","SAMIUR",220,0)
 n iz,dt,dfn,nm
"RTN","SAMIUR",221,0)
 s (dt,dfn,nm)=""
"RTN","SAMIUR",222,0)
 s iz=0
"RTN","SAMIUR",223,0)
 n indx
"RTN","SAMIUR",224,0)
 f  s dt=$o(SAMIPATS(dt)) q:+dt=0  d  ;
"RTN","SAMIUR",225,0)
 . f  s dfn=$o(SAMIPATS(dt,dfn)) q:+dfn=0  d  ;
"RTN","SAMIUR",226,0)
 . . i typ="name" d  ;
"RTN","SAMIUR",227,0)
 . . . s nm=$g(SAMIPATS(dt,dfn,"name"))
"RTN","SAMIUR",228,0)
 . . . s nm=$$UPCASE^XLFMSMT(nm)
"RTN","SAMIUR",229,0)
 . . . i nm="" s nm=" "
"RTN","SAMIUR",230,0)
 . . . s indx(nm,dt,dfn)=""
"RTN","SAMIUR",231,0)
 n iiz s iiz=""
"RTN","SAMIUR",232,0)
 s (dt,dfn)=""
"RTN","SAMIUR",233,0)
 f  s iiz=$o(indx(iiz)) q:iiz=""  d  ;
"RTN","SAMIUR",234,0)
 . f  s dt=$o(indx(iiz,dt)) q:dt=""  d  ;
"RTN","SAMIUR",235,0)
 . . f  s dfn=$o(indx(iiz,dt,dfn)) q:dfn=""  d  ;
"RTN","SAMIUR",236,0)
 . . . s iz=iz+1
"RTN","SAMIUR",237,0)
 . . . s SRTN(iz,dt,dfn)=iiz
"RTN","SAMIUR",238,0)
 ;
"RTN","SAMIUR",239,0)
 quit  ; end of SORT
"RTN","SAMIUR",240,0)
 ;
"RTN","SAMIUR",241,0)
 ;
"RTN","SAMIUR",242,0)
 ;
"RTN","SAMIUR",243,0)
NUHREF(SAMIPATS) ; create the nuhref link to casereview for all patients
"RTN","SAMIUR",244,0)
 n ij
"RTN","SAMIUR",245,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR",246,0)
 s ij=0
"RTN","SAMIUR",247,0)
 f  s ij=$o(SAMIPATS(ij)) q:+ij=0  d  ;
"RTN","SAMIUR",248,0)
 . n ij2 s ij2=0
"RTN","SAMIUR",249,0)
 . f  s ij2=$o(SAMIPATS(ij,ij2)) q:+ij2=0  d  ;
"RTN","SAMIUR",250,0)
 . . n dfn s dfn=ij2
"RTN","SAMIUR",251,0)
 . . s SAMIPATS(ij,dfn,"sid")=$g(@root@(dfn,"samistudyid"))
"RTN","SAMIUR",252,0)
 . . n sid s sid=SAMIPATS(ij,dfn,"sid")
"RTN","SAMIUR",253,0)
 . . s SAMIPATS(ij,dfn,"name")=$g(@root@(dfn,"saminame"))
"RTN","SAMIUR",254,0)
 . . n name s name=SAMIPATS(ij,dfn,"name")
"RTN","SAMIUR",255,0)
 . . s SAMIPATS(ij,dfn,"ssn")=$$GETSSN^SAMIFORM(sid)
"RTN","SAMIUR",256,0)
 . . new nuhref set nuhref="<form method=POST action=""/vapals"">"
"RTN","SAMIUR",257,0)
 . . set nuhref=nuhref_"<input type=hidden name=""samiroute"" value=""casereview"">"
"RTN","SAMIUR",258,0)
 . . set nuhref=nuhref_"<input type=hidden name=""studyid"" value="_sid_">"
"RTN","SAMIUR",259,0)
 . . set nuhref=nuhref_"<input value="""_name_""" class=""btn btn-link"" role=""link"" type=""submit""></form>"
"RTN","SAMIUR",260,0)
 . . s SAMIPATS(ij,dfn,"nuhref")=nuhref
"RTN","SAMIUR",261,0)
 ;
"RTN","SAMIUR",262,0)
 quit  ; end of NUHREF
"RTN","SAMIUR",263,0)
 ;
"RTN","SAMIUR",264,0)
 ;
"RTN","SAMIUR",265,0)
 ;
"RTN","SAMIUR",266,0)
SELECT(SAMIPATS,ztype,datephrase,filter) ;selects patients for report
"RTN","SAMIUR",267,0)
 ;
"RTN","SAMIUR",268,0)
 ;m ^gpl("select")=filter
"RTN","SAMIUR",269,0)
 n type s type=ztype
"RTN","SAMIUR",270,0)
 i type="unmatched" d  q  ;
"RTN","SAMIUR",271,0)
 . d UNMAT(.SAMIPATS,ztype,.datephrase,.filter)
"RTN","SAMIUR",272,0)
 i type="worklist" d  q  ;
"RTN","SAMIUR",273,0)
 . d WKLIST(.SAMIPATS,ztype,.datephrase,.filter)
"RTN","SAMIUR",274,0)
 i $g(type)="" s type="enrollment"
"RTN","SAMIUR",275,0)
 i type="cumpy" s type="enrollment"
"RTN","SAMIUR",276,0)
 n site s site=$g(filter("siteid"))
"RTN","SAMIUR",277,0)
 n strdt,enddt,fmstrdt,fmenddt
"RTN","SAMIUR",278,0)
 s strdt=$g(filter("start-date"))
"RTN","SAMIUR",279,0)
 s fmstrdt=$$KEY2FM^SAMICASE(strdt)
"RTN","SAMIUR",280,0)
 i fmstrdt=-1 d  ;
"RTN","SAMIUR",281,0)
 . s fmstrdt=2000101
"RTN","SAMIUR",282,0)
 . i type="followup" s fmstrdt=$$NOW^XLFDT
"RTN","SAMIUR",283,0)
 . i type="activity" s fmstrdt=$$FMADD^XLFDT($$NOW^XLFDT,-31)
"RTN","SAMIUR",284,0)
 i strdt="" s filter("start-date")=$$VAPALSDT^SAMICASE(fmstrdt)
"RTN","SAMIUR",285,0)
 s enddt=$g(filter("end-date"))
"RTN","SAMIUR",286,0)
 s fmenddt=$$KEY2FM^SAMICASE(enddt)
"RTN","SAMIUR",287,0)
 i fmenddt=-1 d  ;
"RTN","SAMIUR",288,0)
 . s fmenddt=$$NOW^XLFDT
"RTN","SAMIUR",289,0)
 . i type="followup" s fmenddt=$$FMADD^XLFDT($$NOW^XLFDT,31)
"RTN","SAMIUR",290,0)
 i enddt="" s filter("end-date")=$$VAPALSDT^SAMICASE(fmenddt)
"RTN","SAMIUR",291,0)
 s datephrase=""
"RTN","SAMIUR",292,0)
 n zi s zi=0
"RTN","SAMIUR",293,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR",294,0)
 ;
"RTN","SAMIUR",295,0)
 f  s zi=$o(@root@(zi)) q:+zi=0  d  ;
"RTN","SAMIUR",296,0)
 . n sid s sid=$g(@root@(zi,"samistudyid"))
"RTN","SAMIUR",297,0)
 . q:sid=""
"RTN","SAMIUR",298,0)
 . q:$e(sid,1,3)'=site
"RTN","SAMIUR",299,0)
 . n items s items=""
"RTN","SAMIUR",300,0)
 . d GETITEMS^SAMICASE("items",sid)
"RTN","SAMIUR",301,0)
 . q:'$d(items)
"RTN","SAMIUR",302,0)
 . n efmdate,edate,siform,ceform,cefud,fmcefud,cedos,fmcedos
"RTN","SAMIUR",303,0)
 . s siform=$o(items("siform-"))
"RTN","SAMIUR",304,0)
 . n inactive s inactive=$g(@root@("graph",sid,siform,"sistatus"))
"RTN","SAMIUR",305,0)
 . i type="inactive" i inactive'="inactive" q  ; for inactive report
"RTN","SAMIUR",306,0)
 . i type'="inactive" i inactive="inactive" q  ; for other reports
"RTN","SAMIUR",307,0)
 . s ceform=$o(items("ceform-a"),-1)
"RTN","SAMIUR",308,0)
 . s (cefud,fmcefud,cedos,fmcedos)=""
"RTN","SAMIUR",309,0)
 . i ceform'="" d  ;
"RTN","SAMIUR",310,0)
 . . s cefud=$g(@root@("graph",sid,ceform,"cefud"))
"RTN","SAMIUR",311,0)
 . . i cefud'="" s fmcefud=$$KEY2FM^SAMICASE(cefud)
"RTN","SAMIUR",312,0)
 . . s cedos=$g(@root@("graph",sid,ceform,"cedos"))
"RTN","SAMIUR",313,0)
 . . i cedos'="" s fmcedos=$$KEY2FM^SAMICASE(cedos)
"RTN","SAMIUR",314,0)
 . s edate=$g(@root@("graph",sid,siform,"sidc"))
"RTN","SAMIUR",315,0)
 . i edate="" s edate=$g(@root@("graph",sid,siform,"samicreatedate"))
"RTN","SAMIUR",316,0)
 . s efmdate=$$KEY2FM^SAMICASE(edate)
"RTN","SAMIUR",317,0)
 . s edate=$$VAPALSDT^SAMICASE(efmdate)
"RTN","SAMIUR",318,0)
 . ;
"RTN","SAMIUR",319,0)
 . i type="followup" d  ;
"RTN","SAMIUR",320,0)
 . . ;n nplus30 s nplus30=$$FMADD^XLFDT($$NOW^XLFDT,31)
"RTN","SAMIUR",321,0)
 . . i +fmcefud<fmstrdt q  ; before start date
"RTN","SAMIUR",322,0)
 . . i (+fmcefud<(fmenddt+1)) d  ; before end date
"RTN","SAMIUR",323,0)
 . . . i ceform="" q  ; no ct eval so no followup date
"RTN","SAMIUR",324,0)
 . . . s SAMIPATS(fmcefud,zi,"edate")=edate
"RTN","SAMIUR",325,0)
 . . . s SAMIPATS(fmcefud,zi)=""
"RTN","SAMIUR",326,0)
 . . . i ceform="" s cefud="baseline"
"RTN","SAMIUR",327,0)
 . . . s SAMIPATS(fmcefud,zi,"cefud")=cefud
"RTN","SAMIUR",328,0)
 . . . s SAMIPATS(fmcefud,zi,"cedos")=cedos
"RTN","SAMIUR",329,0)
 . . . s SAMIPATS(fmcefud,zi,"ceform")=ceform
"RTN","SAMIUR",330,0)
 . . . s SAMIPATS(fmcefud,zi,"ceform-vals")=$na(@root@("graph",sid,ceform))
"RTN","SAMIUR",331,0)
 . . . s SAMIPATS(fmcefud,zi,"siform")=siform
"RTN","SAMIUR",332,0)
 . . . s SAMIPATS(fmcefud,zi,"siform-vals")=$na(@root@("graph",sid,siform))
"RTN","SAMIUR",333,0)
 . . . m SAMIPATS(fmcefud,zi,"items")=items
"RTN","SAMIUR",334,0)
 . . s datephrase=" before "_$$VAPALSDT^SAMICASE(fmenddt)
"RTN","SAMIUR",335,0)
 . . q
"RTN","SAMIUR",336,0)
 . i type="activity" d  ;
"RTN","SAMIUR",337,0)
 . . ;n nminus30 s nminus30=$$FMADD^XLFDT($$NOW^XLFDT,-31)
"RTN","SAMIUR",338,0)
 . . n anyform s anyform=$o(items("sort",""),-1)
"RTN","SAMIUR",339,0)
 . . n fmanyform s fmanyform=$$KEY2FM^SAMICASE(anyform)
"RTN","SAMIUR",340,0)
 . . i +fmanyform<fmstrdt q  ; before the start date
"RTN","SAMIUR",341,0)
 . . ;i (+fmanyform<(fmenddt+1))!(+efmdate>fmenddt) d  ; need any new form
"RTN","SAMIUR",342,0)
 . . i (+fmanyform<(fmenddt+1))  d  ;
"RTN","SAMIUR",343,0)
 . . . s SAMIPATS(efmdate,zi,"edate")=edate
"RTN","SAMIUR",344,0)
 . . . s SAMIPATS(efmdate,zi)=""
"RTN","SAMIUR",345,0)
 . . . i ceform="" s cefud="baseline"
"RTN","SAMIUR",346,0)
 . . . s SAMIPATS(efmdate,zi,"cefud")=cefud
"RTN","SAMIUR",347,0)
 . . . s SAMIPATS(efmdate,zi,"cedos")=cedos
"RTN","SAMIUR",348,0)
 . . . s SAMIPATS(efmdate,zi,"ceform")=ceform
"RTN","SAMIUR",349,0)
 . . . s SAMIPATS(efmdate,zi,"siform")=siform
"RTN","SAMIUR",350,0)
 . . . m SAMIPATS(efmdate,zi,"items")=items
"RTN","SAMIUR",351,0)
 . . s datephrase=" after "_$$VAPALSDT^SAMICASE(fmstrdt)
"RTN","SAMIUR",352,0)
 . ;
"RTN","SAMIUR",353,0)
 . ; date filter for all the rest of the reports
"RTN","SAMIUR",354,0)
 . ;
"RTN","SAMIUR",355,0)
 . i efmdate<fmstrdt q  ; before the start date
"RTN","SAMIUR",356,0)
 . i efmdate>(fmenddt+1) q  ; after the end date
"RTN","SAMIUR",357,0)
 . ;
"RTN","SAMIUR",358,0)
 . i type="incomplete" d  ;
"RTN","SAMIUR",359,0)
 . . n complete s complete=1
"RTN","SAMIUR",360,0)
 . . n zj s zj=""
"RTN","SAMIUR",361,0)
 . . n gr s gr=$na(@root@("graph",sid))
"RTN","SAMIUR",362,0)
 . . f  s zj=$o(@gr@(zj)) q:zj=""  d  ;
"RTN","SAMIUR",363,0)
 . . . i $g(@gr@(zj,"samistatus"))="incomplete" d  ;
"RTN","SAMIUR",364,0)
 . . . . s complete=0
"RTN","SAMIUR",365,0)
 . . . . s SAMIPATS(efmdate,zi,"iform")=$g(SAMIPATS(efmdate,zi,"iform"))_" "_zj
"RTN","SAMIUR",366,0)
 . . i complete=0 d  ; has incomplete form(s) 
"RTN","SAMIUR",367,0)
 . . . s SAMIPATS(efmdate,zi,"edate")=edate
"RTN","SAMIUR",368,0)
 . . . s SAMIPATS(efmdate,zi)=""
"RTN","SAMIUR",369,0)
 . . . i ceform="" s cefud="baseline"
"RTN","SAMIUR",370,0)
 . . . s SAMIPATS(efmdate,zi,"cefud")=cefud
"RTN","SAMIUR",371,0)
 . . . s SAMIPATS(efmdate,zi,"ceform")=ceform
"RTN","SAMIUR",372,0)
 . . . s SAMIPATS(efmdate,zi,"siform")=siform
"RTN","SAMIUR",373,0)
 . . . m SAMIPATS(efmdate,zi,"items")=items
"RTN","SAMIUR",374,0)
 . . s datephrase=""
"RTN","SAMIUR",375,0)
 . . q
"RTN","SAMIUR",376,0)
 . i type="missingct" d  ;
"RTN","SAMIUR",377,0)
 . . i ceform="" d  ; has incomplete form(s) 
"RTN","SAMIUR",378,0)
 . . . s SAMIPATS(efmdate,zi,"edate")=edate
"RTN","SAMIUR",379,0)
 . . . s SAMIPATS(efmdate,zi)=""
"RTN","SAMIUR",380,0)
 . . . i ceform="" s cefud="baseline"
"RTN","SAMIUR",381,0)
 . . . s SAMIPATS(efmdate,zi,"cefud")=cefud
"RTN","SAMIUR",382,0)
 . . . s SAMIPATS(efmdate,zi,"ceform")=ceform
"RTN","SAMIUR",383,0)
 . . . s SAMIPATS(efmdate,zi,"siform")=siform
"RTN","SAMIUR",384,0)
 . . . m SAMIPATS(efmdate,zi,"items")=items
"RTN","SAMIUR",385,0)
 . . s datephrase=""
"RTN","SAMIUR",386,0)
 . . q
"RTN","SAMIUR",387,0)
 . i type="outreach" d  ;
"RTN","SAMIUR",388,0)
 . . q
"RTN","SAMIUR",389,0)
 . i type="enrollment" d  ;
"RTN","SAMIUR",390,0)
 . . s SAMIPATS(efmdate,zi,"edate")=edate
"RTN","SAMIUR",391,0)
 . . s SAMIPATS(efmdate,zi)=""
"RTN","SAMIUR",392,0)
 . . s SAMIPATS(efmdate,zi,"cefud")=cefud
"RTN","SAMIUR",393,0)
 . . s SAMIPATS(efmdate,zi,"ceform")=ceform
"RTN","SAMIUR",394,0)
 . . s SAMIPATS(efmdate,zi,"cedos")=cedos
"RTN","SAMIUR",395,0)
 . . s SAMIPATS(efmdate,zi,"siform")=siform
"RTN","SAMIUR",396,0)
 . . m SAMIPATS(efmdate,zi,"items")=items
"RTN","SAMIUR",397,0)
 . i type="inactive" d  ;
"RTN","SAMIUR",398,0)
 . . s SAMIPATS(efmdate,zi,"edate")=edate
"RTN","SAMIUR",399,0)
 . . s SAMIPATS(efmdate,zi)=""
"RTN","SAMIUR",400,0)
 . . s SAMIPATS(efmdate,zi,"cefud")=cefud
"RTN","SAMIUR",401,0)
 . . s SAMIPATS(efmdate,zi,"ceform")=ceform
"RTN","SAMIUR",402,0)
 . . s SAMIPATS(efmdate,zi,"cedos")=cedos
"RTN","SAMIUR",403,0)
 . . s SAMIPATS(efmdate,zi,"siform")=siform
"RTN","SAMIUR",404,0)
 . . m SAMIPATS(efmdate,zi,"items")=items
"RTN","SAMIUR",405,0)
 . s datephrase=" as of "_$$VAPALSDT^SAMICASE($$NOW^XLFDT)
"RTN","SAMIUR",406,0)
 ;
"RTN","SAMIUR",407,0)
 quit  ; end of SELECT
"RTN","SAMIUR",408,0)
 ;
"RTN","SAMIUR",409,0)
 ;
"RTN","SAMIUR",410,0)
 ;
"RTN","SAMIUR",411,0)
UNMAT(SAMIPATS,ztype,datephrase,filter) ;
"RTN","SAMIUR",412,0)
 ;
"RTN","SAMIUR",413,0)
 s datephrase="Unmatched Persons"
"RTN","SAMIUR",414,0)
 n lroot s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIUR",415,0)
 n dfn s dfn=9000000
"RTN","SAMIUR",416,0)
 f  s dfn=$o(@lroot@("dfn",dfn)) q:+dfn=0  d  ;
"RTN","SAMIUR",417,0)
 . n ien s ien=$o(@lroot@("dfn",dfn,""))
"RTN","SAMIUR",418,0)
 . q:ien=""
"RTN","SAMIUR",419,0)
 . i $g(@lroot@(ien,"remotedfn"))'="" q  ;
"RTN","SAMIUR",420,0)
 . m SAMIPATS(ien,dfn)=@lroot@(ien)
"RTN","SAMIUR",421,0)
 . ;new name set name=$g(SAMIPATS(ien,dfn,"saminame"))
"RTN","SAMIUR",422,0)
 . new name set name=$g(SAMIPATS(ien,dfn,"sinamef"))
"RTN","SAMIUR",423,0)
 . set name=name_","_SAMIPATS(ien,dfn,"sinamel")
"RTN","SAMIUR",424,0)
 . new nuhref set nuhref="<form method=POST action=""/vapals"">"
"RTN","SAMIUR",425,0)
 . set nuhref=nuhref_"<input type=hidden name=""samiroute"" value=""editperson"">"
"RTN","SAMIUR",426,0)
 . set nuhref=nuhref_"<input type=hidden name=""dfn"" value="_dfn_">"
"RTN","SAMIUR",427,0)
 . set nuhref=nuhref_"<input value="""_name_""" class=""btn btn-link"" role=""link"" type=""submit""></form>"
"RTN","SAMIUR",428,0)
 . s SAMIPATS(ien,dfn,"editref")=nuhref
"RTN","SAMIUR",429,0)
 ;
"RTN","SAMIUR",430,0)
 quit  ; end of UNMAT
"RTN","SAMIUR",431,0)
 ;
"RTN","SAMIUR",432,0)
 ;
"RTN","SAMIUR",433,0)
 ;
"RTN","SAMIUR",434,0)
WKLIST(SAMIPATS,ztype,datephrase,filter) ;
"RTN","SAMIUR",435,0)
 ;
"RTN","SAMIUR",436,0)
 ; add site
"RTN","SAMIUR",437,0)
 ; add compare to vapals-patients
"RTN","SAMIUR",438,0)
 ; add navigation to enrollment
"RTN","SAMIUR",439,0)
 ;
"RTN","SAMIUR",440,0)
 k ^gpl("worklist")
"RTN","SAMIUR",441,0)
 m ^gpl("worklist")=filter
"RTN","SAMIUR",442,0)
 n site
"RTN","SAMIUR",443,0)
 s site=$g(filter("siteid"))
"RTN","SAMIUR",444,0)
 q:site=""
"RTN","SAMIUR",445,0)
 s datephrase="Work List"
"RTN","SAMIUR",446,0)
 n lroot s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIUR",447,0)
 n proot s proot=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR",448,0)
 n dfn s dfn=0
"RTN","SAMIUR",449,0)
 f  s dfn=$o(@lroot@("dfn",dfn)) q:+dfn=0  d  ;
"RTN","SAMIUR",450,0)
 . q:$o(@proot@("dfn",dfn,""))'=""
"RTN","SAMIUR",451,0)
 . n ien s ien=$o(@lroot@("dfn",dfn,""))
"RTN","SAMIUR",452,0)
 . q:ien=""
"RTN","SAMIUR",453,0)
 . ;w !,"dfn= ",dfn
"RTN","SAMIUR",454,0)
 . ;zwr @lroot@(ien,*)
"RTN","SAMIUR",455,0)
 . q:$g(@lroot@(ien,"siteid"))'=site
"RTN","SAMIUR",456,0)
 . m ^gpl("worklist","lroot",ien)=@lroot@(ien)
"RTN","SAMIUR",457,0)
 . m SAMIPATS(ien,dfn)=@lroot@(ien)
"RTN","SAMIUR",458,0)
 . new name set name=$g(SAMIPATS(ien,dfn,"saminame"))
"RTN","SAMIUR",459,0)
 . ;new name set name=$g(SAMIPATS(ien,dfn,"sinamef"))
"RTN","SAMIUR",460,0)
 . ;set name=name_","_SAMIPATS(ien,dfn,"sinamel")
"RTN","SAMIUR",461,0)
 . new nuhref set nuhref="<form method=POST action=""/vapals"">"
"RTN","SAMIUR",462,0)
 . set nuhref=nuhref_"<input type=hidden name=""samiroute"" value=""newcase"">"
"RTN","SAMIUR",463,0)
 . set nuhref=nuhref_"<input type=hidden name=""dfn"" value="_dfn_">"
"RTN","SAMIUR",464,0)
 . set nuhref=nuhref_"<input type=hidden name=""siteid"" value="_site_">"
"RTN","SAMIUR",465,0)
 . set nuhref=nuhref_"<input value="""_name_""" class=""btn btn-link"" role=""link"" type=""submit""></form>"
"RTN","SAMIUR",466,0)
 . s SAMIPATS(ien,dfn,"workref")=nuhref
"RTN","SAMIUR",467,0)
 m ^gpl("worklist","pats")=SAMIPATS
"RTN","SAMIUR",468,0)
 ;
"RTN","SAMIUR",469,0)
 quit  ; end of WKLIST
"RTN","SAMIUR",470,0)
 ;
"RTN","SAMIUR",471,0)
 ;
"RTN","SAMIUR",472,0)
 ;
"RTN","SAMIUR",473,0)
PNAME(type,phrase) ; extrinsic returns the PAGE NAME for the report
"RTN","SAMIUR",474,0)
 ;
"RTN","SAMIUR",475,0)
 ;i type="followup" q "Followup next 30 days -"_$g(phrase)
"RTN","SAMIUR",476,0)
 i type="followup" q "Followup "_$g(phrase)
"RTN","SAMIUR",477,0)
 ;i type="activity" q "Activity last 30 days -"_$g(phrase)
"RTN","SAMIUR",478,0)
 i type="activity" q "Activity "_$g(phrase)
"RTN","SAMIUR",479,0)
 i type="missingct" q "Intake but no CT Evaluation"_$g(phrase)
"RTN","SAMIUR",480,0)
 i type="incomplete" q "Incomplete Forms"_$g(phrase)
"RTN","SAMIUR",481,0)
 i type="outreach" q "Outreach"_$g(phrase)
"RTN","SAMIUR",482,0)
 i type="enrollment" q "Enrollment"_$g(phrase)
"RTN","SAMIUR",483,0)
 i type="inactive" q "Inactive"_$g(phrase)
"RTN","SAMIUR",484,0)
 ;
"RTN","SAMIUR",485,0)
 quit "" ; end of $$PNAME
"RTN","SAMIUR",486,0)
 ;
"RTN","SAMIUR",487,0)
 ;
"RTN","SAMIUR",488,0)
 ;
"RTN","SAMIUR",489,0)
EOR ; end of SAMIUR
"RTN","SAMIUR2")
0^5^B406603480
"RTN","SAMIUR2",1,0)
SAMIUR2 ;ven/gpl - sami user reports ; 5/8/19 10:57am
"RTN","SAMIUR2",2,0)
 ;;18.0;SAM;;;Build 11
"RTN","SAMIUR2",3,0)
 ;
"RTN","SAMIUR2",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUR2",5,0)
 ;
"RTN","SAMIUR2",6,0)
 ; SAMIUR contains the routines to generate user reports
"RTN","SAMIUR2",7,0)
 ; It is currently untested & in progress.
"RTN","SAMIUR2",8,0)
 ;
"RTN","SAMIUR2",9,0)
 quit  ; no entry from top
"RTN","SAMIUR2",10,0)
 ;
"RTN","SAMIUR2",11,0)
RPTTBL(RPT,TYPE) ; RPT is passed by reference and returns the 
"RTN","SAMIUR2",12,0)
 ; report definition table. TYPE is the report type to be returned
"RTN","SAMIUR2",13,0)
 ; This routine could use a file or a graph in the next version
"RTN","SAMIUR2",14,0)
 ;
"RTN","SAMIUR2",15,0)
 if TYPE="followup" d  q  ;
"RTN","SAMIUR2",16,0)
 . S RPT(1,"header")="F/U Date"
"RTN","SAMIUR2",17,0)
 . S RPT(1,"routine")="$$FUDATE^SAMIUR2"
"RTN","SAMIUR2",18,0)
 . S RPT(2,"header")="Name"
"RTN","SAMIUR2",19,0)
 . S RPT(2,"routine")="$$NAME^SAMIUR2"
"RTN","SAMIUR2",20,0)
 . S RPT(3,"header")="SSN"
"RTN","SAMIUR2",21,0)
 . S RPT(3,"routine")="$$SSN^SAMIUR2"
"RTN","SAMIUR2",22,0)
 . S RPT(4,"header")="Baseline Date"
"RTN","SAMIUR2",23,0)
 . S RPT(4,"routine")="$$BLINEDT^SAMIUR2"
"RTN","SAMIUR2",24,0)
 . S RPT(6,"header")="Recommend"
"RTN","SAMIUR2",25,0)
 . S RPT(6,"routine")="$$RECOM^SAMIUR2"
"RTN","SAMIUR2",26,0)
 . S RPT(7,"header")="When"
"RTN","SAMIUR2",27,0)
 . S RPT(7,"routine")="$$WHEN^SAMIUR2"
"RTN","SAMIUR2",28,0)
 . S RPT(5,"header")="Last Exam"
"RTN","SAMIUR2",29,0)
 . S RPT(5,"routine")="$$LASTEXM^SAMIUR2"
"RTN","SAMIUR2",30,0)
 . S RPT(8,"header")="Contact Information"
"RTN","SAMIUR2",31,0)
 . S RPT(8,"routine")="$$CONTACT^SAMIUR2"
"RTN","SAMIUR2",32,0)
 if TYPE="activity" d  q  ;
"RTN","SAMIUR2",33,0)
 . S RPT(1,"header")="Name"
"RTN","SAMIUR2",34,0)
 . S RPT(1,"routine")="$$NAME^SAMIUR2"
"RTN","SAMIUR2",35,0)
 . S RPT(2,"header")="SSN"
"RTN","SAMIUR2",36,0)
 . S RPT(2,"routine")="$$SSN^SAMIUR2"
"RTN","SAMIUR2",37,0)
 . S RPT(3,"header")="CT Date"
"RTN","SAMIUR2",38,0)
 . S RPT(3,"routine")="$$STUDYDT^SAMIUR2"
"RTN","SAMIUR2",39,0)
 . S RPT(4,"header")="Type"
"RTN","SAMIUR2",40,0)
 . S RPT(4,"routine")="$$STUDYTYP^SAMIUR2"
"RTN","SAMIUR2",41,0)
 . S RPT(5,"header")="CT Protocol"
"RTN","SAMIUR2",42,0)
 . S RPT(5,"routine")="$$CTPROT^SAMIUR2"
"RTN","SAMIUR2",43,0)
 . S RPT(6,"header")="Follow-up"
"RTN","SAMIUR2",44,0)
 . S RPT(6,"routine")="$$RECOM^SAMIUR2"
"RTN","SAMIUR2",45,0)
 . S RPT(7,"header")="When"
"RTN","SAMIUR2",46,0)
 . S RPT(7,"routine")="$$WHEN^SAMIUR2"
"RTN","SAMIUR2",47,0)
 . S RPT(8,"header")="on Date"
"RTN","SAMIUR2",48,0)
 . S RPT(8,"routine")="$$FUDATE^SAMIUR2"
"RTN","SAMIUR2",49,0)
 if TYPE="enrollment" d  q  ;
"RTN","SAMIUR2",50,0)
 . S RPT(1,"header")="Name"
"RTN","SAMIUR2",51,0)
 . S RPT(1,"routine")="$$NAME^SAMIUR2"
"RTN","SAMIUR2",52,0)
 . S RPT(2,"header")="SSN"
"RTN","SAMIUR2",53,0)
 . S RPT(2,"routine")="$$SSN^SAMIUR2"
"RTN","SAMIUR2",54,0)
 . S RPT(3,"header")="CT Date"
"RTN","SAMIUR2",55,0)
 . S RPT(3,"routine")="$$STUDYDT^SAMIUR2"
"RTN","SAMIUR2",56,0)
 . S RPT(4,"header")="Gender"
"RTN","SAMIUR2",57,0)
 . S RPT(4,"routine")="$$GENDER^SAMIUR2"
"RTN","SAMIUR2",58,0)
 . ;S RPT(5,"header")="Race"
"RTN","SAMIUR2",59,0)
 . ;S RPT(5,"routine")="$$RACE^SAMIUR2"
"RTN","SAMIUR2",60,0)
 . S RPT(6,"header")="Age"
"RTN","SAMIUR2",61,0)
 . S RPT(6,"routine")="$$AGE^SAMIUR2"
"RTN","SAMIUR2",62,0)
 . S RPT(7,"header")="Urban/Rural"
"RTN","SAMIUR2",63,0)
 . S RPT(7,"routine")="$$RURAL^SAMIUR2"
"RTN","SAMIUR2",64,0)
 . S RPT(8,"header")="Smoking Status"
"RTN","SAMIUR2",65,0)
 . S RPT(8,"routine")="$$SMKSTAT^SAMIUR2"
"RTN","SAMIUR2",66,0)
 . S RPT(9,"header")="Pack Years at Intake"
"RTN","SAMIUR2",67,0)
 . S RPT(9,"routine")="$$PACKYRS^SAMIUR2"
"RTN","SAMIUR2",68,0)
 if TYPE="inactive" d  q  ;
"RTN","SAMIUR2",69,0)
 . S RPT(1,"header")="Name"
"RTN","SAMIUR2",70,0)
 . S RPT(1,"routine")="$$NAME^SAMIUR2"
"RTN","SAMIUR2",71,0)
 . S RPT(2,"header")="SSN"
"RTN","SAMIUR2",72,0)
 . S RPT(2,"routine")="$$SSN^SAMIUR2"
"RTN","SAMIUR2",73,0)
 . S RPT(3,"header")="CT Date"
"RTN","SAMIUR2",74,0)
 . S RPT(3,"routine")="$$STUDYDT^SAMIUR2"
"RTN","SAMIUR2",75,0)
 . S RPT(4,"header")="Gender"
"RTN","SAMIUR2",76,0)
 . S RPT(4,"routine")="$$GENDER^SAMIUR2"
"RTN","SAMIUR2",77,0)
 . ;S RPT(5,"header")="Race"
"RTN","SAMIUR2",78,0)
 . ;S RPT(5,"routine")="$$RACE^SAMIUR2"
"RTN","SAMIUR2",79,0)
 . S RPT(6,"header")="Age"
"RTN","SAMIUR2",80,0)
 . S RPT(6,"routine")="$$AGE^SAMIUR2"
"RTN","SAMIUR2",81,0)
 . S RPT(7,"header")="Urban/Rural"
"RTN","SAMIUR2",82,0)
 . S RPT(7,"routine")="$$RURAL^SAMIUR2"
"RTN","SAMIUR2",83,0)
 . S RPT(8,"header")="Smoking Status"
"RTN","SAMIUR2",84,0)
 . S RPT(8,"routine")="$$SMKSTAT^SAMIUR2"
"RTN","SAMIUR2",85,0)
 . S RPT(9,"header")="Pack Years at Intake"
"RTN","SAMIUR2",86,0)
 . S RPT(9,"routine")="$$PACKYRS^SAMIUR2"
"RTN","SAMIUR2",87,0)
 if TYPE="incomplete" d  q  ;
"RTN","SAMIUR2",88,0)
 . S RPT(1,"header")="Enrollment date"
"RTN","SAMIUR2",89,0)
 . S RPT(1,"routine")="$$BLINEDT^SAMIUR2"
"RTN","SAMIUR2",90,0)
 . S RPT(2,"header")="Name"
"RTN","SAMIUR2",91,0)
 . S RPT(2,"routine")="$$NAME^SAMIUR2"
"RTN","SAMIUR2",92,0)
 . S RPT(3,"header")="SSN"
"RTN","SAMIUR2",93,0)
 . S RPT(3,"routine")="$$SSN^SAMIUR2"
"RTN","SAMIUR2",94,0)
 . S RPT(4,"header")="Incomplete form"
"RTN","SAMIUR2",95,0)
 . S RPT(4,"routine")="$$IFORM^SAMIUR2"
"RTN","SAMIUR2",96,0)
 if TYPE="missingct" d  q  ;
"RTN","SAMIUR2",97,0)
 . S RPT(1,"header")="Enrollment date"
"RTN","SAMIUR2",98,0)
 . S RPT(1,"routine")="$$BLINEDT^SAMIUR2"
"RTN","SAMIUR2",99,0)
 . S RPT(2,"header")="Name"
"RTN","SAMIUR2",100,0)
 . S RPT(2,"routine")="$$NAME^SAMIUR2"
"RTN","SAMIUR2",101,0)
 . S RPT(3,"header")="SSN"
"RTN","SAMIUR2",102,0)
 . S RPT(3,"routine")="$$SSN^SAMIUR2"
"RTN","SAMIUR2",103,0)
 if TYPE="cumpy" d  q  ;
"RTN","SAMIUR2",104,0)
 . S RPT(1,"header")="Name"
"RTN","SAMIUR2",105,0)
 . S RPT(1,"routine")="$$NAME^SAMIUR2"
"RTN","SAMIUR2",106,0)
 . S RPT(2,"header")="Study ID"
"RTN","SAMIUR2",107,0)
 . S RPT(2,"routine")="$$SID^SAMIUR2"
"RTN","SAMIUR2",108,0)
 . S RPT(3,"header")="Form Values"
"RTN","SAMIUR2",109,0)
 . S RPT(3,"routine")="$$VALS^SAMIUR2"
"RTN","SAMIUR2",110,0)
 . S RPT(4,"header")="Smoking History"
"RTN","SAMIUR2",111,0)
 . S RPT(4,"routine")="$$SMHIS^SAMIUR2"
"RTN","SAMIUR2",112,0)
 if TYPE="unmatched" d  ;
"RTN","SAMIUR2",113,0)
 . S RPT(1,"header")="Unmatched Entry"
"RTN","SAMIUR2",114,0)
 . S RPT(1,"routine")="$$MANPAT^SAMIUR2"
"RTN","SAMIUR2",115,0)
 . S RPT(2,"header")="Possible Match"
"RTN","SAMIUR2",116,0)
 . S RPT(2,"routine")="$$POSSIBLE^SAMIUR2"
"RTN","SAMIUR2",117,0)
 . S RPT(3,"header")="Match Control"
"RTN","SAMIUR2",118,0)
 . S RPT(3,"routine")="$$MATCH^SAMIUR2"
"RTN","SAMIUR2",119,0)
 if TYPE="worklist" d  q  ;
"RTN","SAMIUR2",120,0)
 . S RPT(1,"header")="Name"
"RTN","SAMIUR2",121,0)
 . S RPT(1,"routine")="$$WORKPAT^SAMIUR2"
"RTN","SAMIUR2",122,0)
 . S RPT(2,"header")="SSN"
"RTN","SAMIUR2",123,0)
 . S RPT(2,"routine")="$$SSN^SAMIUR2"
"RTN","SAMIUR2",124,0)
 . S RPT(3,"header")="Date of birth"
"RTN","SAMIUR2",125,0)
 . S RPT(3,"routine")="$$DOB^SAMIUR2"
"RTN","SAMIUR2",126,0)
 . S RPT(4,"header")="Gender"
"RTN","SAMIUR2",127,0)
 . S RPT(4,"routine")="$$GENDER^SAMIUR2"
"RTN","SAMIUR2",128,0)
 ;
"RTN","SAMIUR2",129,0)
 q
"RTN","SAMIUR2",130,0)
 ;
"RTN","SAMIUR2",131,0)
SID(zdt,dfn,SAMIPATS) ; extrinsic returns SID
"RTN","SAMIUR2",132,0)
 q $$DFN2SID(dfn)
"RTN","SAMIUR2",133,0)
 ;
"RTN","SAMIUR2",134,0)
DFN2SID(DFN) ;extrinsic returns the studyid for patient DFN
"RTN","SAMIUR2",135,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",136,0)
 q $g(@root@(DFN,"sisid"))
"RTN","SAMIUR2",137,0)
 ;
"RTN","SAMIUR2",138,0)
FUDATE(zdt,dfn,SAMIPATS) ; extrinsic returns followup date
"RTN","SAMIUR2",139,0)
 n fud
"RTN","SAMIUR2",140,0)
 s fud="fudate"
"RTN","SAMIUR2",141,0)
 q $g(SAMIPATS(zdt,dfn,"cefud"))
"RTN","SAMIUR2",142,0)
 ;
"RTN","SAMIUR2",143,0)
NAME(zdt,dfn,SAMIPATS) ; extrinsic returns the name including a hyperlink
"RTN","SAMIUR2",144,0)
 n nam
"RTN","SAMIUR2",145,0)
 s nam="Name"
"RTN","SAMIUR2",146,0)
 q $g(SAMIPATS(zdt,dfn,"nuhref"))
"RTN","SAMIUR2",147,0)
 ;
"RTN","SAMIUR2",148,0)
SSN(zdt,dfn,SAMIPATS) ; extrinsic returns SSN
"RTN","SAMIUR2",149,0)
 n ssn,tssn
"RTN","SAMIUR2",150,0)
 s tssn=$g(SAMIPATS(zdt,dfn,"ssn"))
"RTN","SAMIUR2",151,0)
 s ssn=tssn
"RTN","SAMIUR2",152,0)
 i ssn'["-" s ssn=$e(tssn,1,3)_"-"_$e(tssn,4,5)_"-"_$e(tssn,6,9)
"RTN","SAMIUR2",153,0)
 q ssn
"RTN","SAMIUR2",154,0)
 ;
"RTN","SAMIUR2",155,0)
BLINEDT(zdt,dfn,SAMIPATS) ; extrinsic returns Baseline Date
"RTN","SAMIUR2",156,0)
 n bldt
"RTN","SAMIUR2",157,0)
 s bldt=$g(SAMIPATS(zdt,dfn,"edate"))
"RTN","SAMIUR2",158,0)
 q bldt
"RTN","SAMIUR2",159,0)
 ;
"RTN","SAMIUR2",160,0)
WHEN(zdt,dfn,SAMIPATS) ; extrinsic returns followup text ie. "in one year"
"RTN","SAMIUR2",161,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",162,0)
 n ceform s ceform=$g(SAMIPATS(zdt,dfn,"ceform"))
"RTN","SAMIUR2",163,0)
 n sid s sid=$g(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",164,0)
 q:ceform="" ""
"RTN","SAMIUR2",165,0)
 n vals s vals=$na(@root@("graph",sid,ceform))
"RTN","SAMIUR2",166,0)
 n DICT
"RTN","SAMIUR2",167,0)
 s DICT("cefuw","1m")="in one month"
"RTN","SAMIUR2",168,0)
 s DICT("cefuw","1y")="in one year"
"RTN","SAMIUR2",169,0)
 s DICT("cefuw","3m")="in three months"
"RTN","SAMIUR2",170,0)
 s DICT("cefuw","6m")="in six months"
"RTN","SAMIUR2",171,0)
 s DICT("cefuw","os")="other as specified"
"RTN","SAMIUR2",172,0)
 n whnx s whnx=$g(@vals@("cefuw"))
"RTN","SAMIUR2",173,0)
 q:whnx="" ""
"RTN","SAMIUR2",174,0)
 s whn=$g(DICT("cefuw",whnx))
"RTN","SAMIUR2",175,0)
 q whn
"RTN","SAMIUR2",176,0)
 ;
"RTN","SAMIUR2",177,0)
LASTEXM(zdt,dfn,SAMIPATS) ; extrinsic returns patient last exam
"RTN","SAMIUR2",178,0)
 n lexm
"RTN","SAMIUR2",179,0)
 s lexm=$g(SAMIPATS(zdt,dfn,"cedos"))
"RTN","SAMIUR2",180,0)
 q lexm
"RTN","SAMIUR2",181,0)
 ;
"RTN","SAMIUR2",182,0)
STATUS(zdt,dfn,SAMIPATS) ; extrinsic returns patient status
"RTN","SAMIUR2",183,0)
 n stat
"RTN","SAMIUR2",184,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",185,0)
 n sid s sid=$g(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",186,0)
 n siform s siform=$g(SAMIPATS(zdt,dfn,"siform"))
"RTN","SAMIUR2",187,0)
 n vals s vals=$na(@root@("graph",sid,siform))
"RTN","SAMIUR2",188,0)
 s stat=$g(@vals@("sistatus"))
"RTN","SAMIUR2",189,0)
 q stat
"RTN","SAMIUR2",190,0)
 ;
"RTN","SAMIUR2",191,0)
CONTACT(zdt,dfn,SAMIPATS) ; extrinsic returns patient street address
"RTN","SAMIUR2",192,0)
 n contact s contact=""
"RTN","SAMIUR2",193,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",194,0)
 n sid s sid=$g(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",195,0)
 n siform s siform=$g(SAMIPATS(zdt,dfn,"siform"))
"RTN","SAMIUR2",196,0)
 n vals s vals=$na(@root@("graph",sid,siform))
"RTN","SAMIUR2",197,0)
 s contact=$g(@vals@("sinamef"))_" "_$g(@vals@("sinamel"))
"RTN","SAMIUR2",198,0)
 s contact=contact_"<br>"_$g(@vals@("sipsa"))
"RTN","SAMIUR2",199,0)
 i $g(@vals@("sipan"))'="" s contact=contact_" Apt "_$g(@vals@("sipan"))
"RTN","SAMIUR2",200,0)
 i $g(@vals@("sipcn"))'="" s contact=contact_"<br>County "_@vals@("sipcn")
"RTN","SAMIUR2",201,0)
 i $g(@vals@("sipc"))'="" s contact=contact_" <br>"_@vals@("sipc")_", "
"RTN","SAMIUR2",202,0)
 s contact=contact_" "_$g(@vals@("sips"))_" "_$g(@vals@("sipz"))_"     "
"RTN","SAMIUR2",203,0)
 q contact
"RTN","SAMIUR2",204,0)
 ;
"RTN","SAMIUR2",205,0)
STUDYDT(zdt,dfn,SAMIPATS) ; extrinsic returns the lastest Study Date
"RTN","SAMIUR2",206,0)
 n stdt
"RTN","SAMIUR2",207,0)
 s stdt=$g(SAMIPATS(zdt,dfn,"cedos"))
"RTN","SAMIUR2",208,0)
 q stdt
"RTN","SAMIUR2",209,0)
 ;
"RTN","SAMIUR2",210,0)
STUDYTYP(zdt,dfn,SAMIPATS) ; extrinsic returns the latest Study Type
"RTN","SAMIUR2",211,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",212,0)
 n ceform s ceform=$g(SAMIPATS(zdt,dfn,"ceform"))
"RTN","SAMIUR2",213,0)
 n sid s sid=$g(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",214,0)
 q:ceform="" ""
"RTN","SAMIUR2",215,0)
 n vals s vals=$na(@root@("graph",sid,ceform))
"RTN","SAMIUR2",216,0)
 n stypx,styp
"RTN","SAMIUR2",217,0)
 s stypx=$g(@vals@("cetex"))
"RTN","SAMIUR2",218,0)
 s styp=$s(stypx="a":"Annual",stypx="b":"Baseline",stypx="d":"Followup",1:"")
"RTN","SAMIUR2",219,0)
 q styp
"RTN","SAMIUR2",220,0)
 ;
"RTN","SAMIUR2",221,0)
CTPROT(zdt,dfn,SAMIPATS) ; extrinsic returns the CT Protocol
"RTN","SAMIUR2",222,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",223,0)
 n ceform s ceform=$g(SAMIPATS(zdt,dfn,"ceform"))
"RTN","SAMIUR2",224,0)
 n sid s sid=$g(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",225,0)
 q:ceform="" ""
"RTN","SAMIUR2",226,0)
 n vals s vals=$na(@root@("graph",sid,ceform))
"RTN","SAMIUR2",227,0)
 n cectp s cectp=$g(@vals@("cectp"))
"RTN","SAMIUR2",228,0)
 n ctyp
"RTN","SAMIUR2",229,0)
 s ctyp=$s(cectp="l":"Low-Dose CT",cectp="d":"Standard CT",cectp="i":"Limited",1:"")
"RTN","SAMIUR2",230,0)
 q ctyp
"RTN","SAMIUR2",231,0)
 ;
"RTN","SAMIUR2",232,0)
RECOM(zdt,dfn,SAMIPATS) ; extrinsic returns Recommendation
"RTN","SAMIUR2",233,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",234,0)
 n ceform s ceform=$g(SAMIPATS(zdt,dfn,"ceform"))
"RTN","SAMIUR2",235,0)
 n sid s sid=$g(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",236,0)
 q:ceform="" ""
"RTN","SAMIUR2",237,0)
 n vals s vals=$na(@root@("graph",sid,ceform))
"RTN","SAMIUR2",238,0)
 n cefuw s cefuw=$g(@vals@("cefuw"))
"RTN","SAMIUR2",239,0)
 n recom s recom=""
"RTN","SAMIUR2",240,0)
 s recom=$s(cefuw="1y":"Annual Repeat",cefuw="nw":"Now",cefuw="1m":"1 month",cefuw="3m":"3 months",cefuw="6m":"6 months",cefuw="os":"Other",1:"")
"RTN","SAMIUR2",241,0)
 i $g(@vals@("cefuaf"))="y" s recom=recom_", Antibiotics"
"RTN","SAMIUR2",242,0)
 i $g(@vals@("cefucc"))="y" s recom=recom_", Contrast CT"
"RTN","SAMIUR2",243,0)
 i $g(@vals@("cefupe"))="y" s recom=recom_", PET"
"RTN","SAMIUR2",244,0)
 i $g(@vals@("cefufn"))="y" s recom=recom_", Percutaneous biopsy"
"RTN","SAMIUR2",245,0)
 i $g(@vals@("cefubr"))="y" s recom=recom_", Bronchoscopy"
"RTN","SAMIUR2",246,0)
 i $g(@vals@("cefupc"))="y" s recom=recom_", Pulmonary consultation"
"RTN","SAMIUR2",247,0)
 i $g(@vals@("cefutb"))="y" s recom=recom_", Refer to tumor board"
"RTN","SAMIUR2",248,0)
 i $g(@vals@("cefunf"))="y" s recom=recom_", No other further follow-up"
"RTN","SAMIUR2",249,0)
 i $e(recom,1,2)=", " s recom=$e(recom,3,$l(recom))
"RTN","SAMIUR2",250,0)
 q recom
"RTN","SAMIUR2",251,0)
 ;
"RTN","SAMIUR2",252,0)
GENDER(zdt,dfn,SAMIPATS) ; extrinsic returns gender
"RTN","SAMIUR2",253,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",254,0)
 n lroot s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIUR2",255,0)
 n gend
"RTN","SAMIUR2",256,0)
 s gend=$g(SAMIPATS(zdt,dfn,"gender"))
"RTN","SAMIUR2",257,0)
 i gend="" d
"RTN","SAMIUR2",258,0)
 . n pien s pien=$o(@root@("dfn",dfn,""))
"RTN","SAMIUR2",259,0)
 . i pien'="" d  ;
"RTN","SAMIUR2",260,0)
 . . s gend=$g(@root@(pien,"sex"))
"RTN","SAMIUR2",261,0)
 . . i gend="" s gend=$g(@root@(pien,"gender"))
"RTN","SAMIUR2",262,0)
 . i gend="" d  ;
"RTN","SAMIUR2",263,0)
 . . n lien s lien=$o(@lroot@("dfn",dfn,""))
"RTN","SAMIUR2",264,0)
 . . s gend=$g(@lroot@(lien,"gender"))
"RTN","SAMIUR2",265,0)
 i gend["^" s gend=$p(gend,"^",1)
"RTN","SAMIUR2",266,0)
 q:gend="" ""
"RTN","SAMIUR2",267,0)
 q gend
"RTN","SAMIUR2",268,0)
 ;
"RTN","SAMIUR2",269,0)
RACE(zdt,dfn,SAMIPATS) ; extrinsic returns race
"RTN","SAMIUR2",270,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",271,0)
 n race s race=$g(@root@(dfn,"race"))
"RTN","SAMIUR2",272,0)
 q:race="" ""
"RTN","SAMIUR2",273,0)
 q race
"RTN","SAMIUR2",274,0)
 ;
"RTN","SAMIUR2",275,0)
ETHNCTY(zdt,dfn,SAMIPATS) ; extrinsic returns ethnicity
"RTN","SAMIUR2",276,0)
 q "ethnicity"
"RTN","SAMIUR2",277,0)
 ;
"RTN","SAMIUR2",278,0)
AGE(zdt,dfn,SAMIPATS) ; extrinsic returns age
"RTN","SAMIUR2",279,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",280,0)
 n dob,age
"RTN","SAMIUR2",281,0)
 set dob=$get(@root@(dfn,"sbdob")) ; dob in VAPALS format
"RTN","SAMIUR2",282,0)
 ;
"RTN","SAMIUR2",283,0)
 new X,Y
"RTN","SAMIUR2",284,0)
 set X=dob
"RTN","SAMIUR2",285,0)
 do ^%DT
"RTN","SAMIUR2",286,0)
 set age=$piece($$FMDIFF^XLFDT($$NOW^XLFDT,Y)/365,".")
"RTN","SAMIUR2",287,0)
 q age
"RTN","SAMIUR2",288,0)
 ;
"RTN","SAMIUR2",289,0)
SMKSTAT(zdt,dfn,SAMIPATS) ; extrinsic returns smoking status
"RTN","SAMIUR2",290,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",291,0)
 n sid s sid=$g(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",292,0)
 n siform s siform=$g(SAMIPATS(zdt,dfn,"siform"))
"RTN","SAMIUR2",293,0)
 n vals s vals=$na(@root@("graph",sid,siform))
"RTN","SAMIUR2",294,0)
 n smk
"RTN","SAMIUR2",295,0)
 s smk="unknown"
"RTN","SAMIUR2",296,0)
 if $g(@vals@("siesm"))="n" s smk="Never smoked"
"RTN","SAMIUR2",297,0)
 if $g(@vals@("siesm"))="p" s smk="Past smoker"
"RTN","SAMIUR2",298,0)
 if $g(@vals@("siesm"))="c" s smk="Current smoker"
"RTN","SAMIUR2",299,0)
 ;if $g(@vals@("siesq"))=1 s smk="Cu"
"RTN","SAMIUR2",300,0)
 q smk
"RTN","SAMIUR2",301,0)
 ;
"RTN","SAMIUR2",302,0)
PACKYRS(zdt,dfn,SAMIPATS) ; extrinsic returns smoking status
"RTN","SAMIUR2",303,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",304,0)
 n sid s sid=$g(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",305,0)
 n siform s siform=$g(SAMIPATS(zdt,dfn,"siform"))
"RTN","SAMIUR2",306,0)
 n vals s vals=$na(@root@("graph",sid,siform))
"RTN","SAMIUR2",307,0)
 n pkyrs
"RTN","SAMIUR2",308,0)
 s pkyrs=$g(@vals@("sippy"))
"RTN","SAMIUR2",309,0)
 q pkyrs
"RTN","SAMIUR2",310,0)
 ;
"RTN","SAMIUR2",311,0)
IFORM(zdt,dfn,SAMIPATS) ; extrinsic returns the name(s) of the incomplete forms
"RTN","SAMIUR2",312,0)
 n iform s iform=$g(SAMIPATS(zdt,dfn,"iform"))
"RTN","SAMIUR2",313,0)
 q:iform="" ""  ;
"RTN","SAMIUR2",314,0)
 n return,zkey1,zn,typ
"RTN","SAMIUR2",315,0)
 s return="<table>"
"RTN","SAMIUR2",316,0)
 f zn=2:1  q:$p(iform," ",zn)=""  d  ;
"RTN","SAMIUR2",317,0)
 . s return=return_"<tr><td>"
"RTN","SAMIUR2",318,0)
 . s zkey1=$p(iform," ",zn)
"RTN","SAMIUR2",319,0)
 . n fname
"RTN","SAMIUR2",320,0)
 . if zkey1["ceform" set fname="CT Evaluation" set typ="ceform"
"RTN","SAMIUR2",321,0)
 . if zkey1["sbform" set fname="Background" set typ="sbform"
"RTN","SAMIUR2",322,0)
 . if zkey1["fuform" set fname="Follow-up" set typ="fuform"
"RTN","SAMIUR2",323,0)
 . if zkey1["bxform" set fname="Biopsy" set typ="bxform"
"RTN","SAMIUR2",324,0)
 . if zkey1["ptform" set fname="PET Evaluation" set typ="ptform"
"RTN","SAMIUR2",325,0)
 . if zkey1["itform" set fname="Intervention" set typ="itform"
"RTN","SAMIUR2",326,0)
 . if zkey1["siform" set fname="Intake Form" set typ="siform"
"RTN","SAMIUR2",327,0)
 . if $get(fname)="" set fname="unknown" set typ=""
"RTN","SAMIUR2",328,0)
 . ;
"RTN","SAMIUR2",329,0)
 . n sid s sid=$$DFN2SID^SAMIUR2(dfn)
"RTN","SAMIUR2",330,0)
 . n zdate s zdate=$$VAPALSDT^SAMICASE($$KEY2FM^SAMICASE(zkey1))
"RTN","SAMIUR2",331,0)
 . s return=return_$$MKNAV(sid,zkey1,fname_" - "_zdate,typ)
"RTN","SAMIUR2",332,0)
 . s return=return_"</td></tr>"
"RTN","SAMIUR2",333,0)
 s return=return_"</table>"
"RTN","SAMIUR2",334,0)
 q return
"RTN","SAMIUR2",335,0)
 ;
"RTN","SAMIUR2",336,0)
MKNAV(sid,zform,fname,form) ; extrinsic return html for navigation to a form
"RTN","SAMIUR2",337,0)
 ;
"RTN","SAMIUR2",338,0)
 n rtn
"RTN","SAMIUR2",339,0)
 set rtn="<form method=""post"" action=""/vapals"">"
"RTN","SAMIUR2",340,0)
 set rtn=rtn_"<input name=""samiroute"" value=""form"" type=""hidden"">"
"RTN","SAMIUR2",341,0)
 set rtn=rtn_" <input name=""studyid"" value="""_sid_""" type=""hidden"">"
"RTN","SAMIUR2",342,0)
 set rtn=rtn_" <input name=""form"" value=""vapals:"_zform_""" type=""hidden"">"
"RTN","SAMIUR2",343,0)
 set rtn=rtn_" <input value="""_fname_""" class=""btn btn-link"" role=""link"" type=""submit""></form>"_$char(13)
"RTN","SAMIUR2",344,0)
 q rtn
"RTN","SAMIUR2",345,0)
 ;
"RTN","SAMIUR2",346,0)
RURAL(zdt,dfn,SAMIPATS) ; extrinsic which returns the rural/urban status
"RTN","SAMIUR2",347,0)
 ; of the patient
"RTN","SAMIUR2",348,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",349,0)
 n sid s sid=$g(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",350,0)
 n siform s siform=$g(SAMIPATS(zdt,dfn,"siform"))
"RTN","SAMIUR2",351,0)
 n vals s vals=$na(@root@("graph",sid,siform))
"RTN","SAMIUR2",352,0)
 n sirs
"RTN","SAMIUR2",353,0)
 s sirs=$g(@vals@("sirs"))
"RTN","SAMIUR2",354,0)
 s sirs=$s(sirs="r":"rural",sirs="u":"urban",sirs="n":"unknown",1:"unknown")
"RTN","SAMIUR2",355,0)
 q sirs
"RTN","SAMIUR2",356,0)
 ;
"RTN","SAMIUR2",357,0)
VALS(zdt,dfn,SAMIPATS) ; extrinsic returns contents of form values cell
"RTN","SAMIUR2",358,0)
 n vrtn s vrtn=""
"RTN","SAMIUR2",359,0)
 n vsid s vsid=$$DFN2SID(dfn)
"RTN","SAMIUR2",360,0)
 n vgr s vgr="/vals?sid="_vsid_"&form="
"RTN","SAMIUR2",361,0)
 q:'$d(SAMIPATS)
"RTN","SAMIUR2",362,0)
 n vzi s vzi=""
"RTN","SAMIUR2",363,0)
 f  s vzi=$o(SAMIPATS(zdt,dfn,"items",vzi)) q:vzi="sort"  q:vzi=""  d  ;
"RTN","SAMIUR2",364,0)
 . s vrtn=vrtn_"<a href="""_vgr_vzi_""">"_vzi_"</a><br>"
"RTN","SAMIUR2",365,0)
 q vrtn
"RTN","SAMIUR2",366,0)
 ;
"RTN","SAMIUR2",367,0)
WSVALS(RTN,FILTER) ;web service to display form values from the graph
"RTN","SAMIUR2",368,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",369,0)
 n sid s sid=$g(FILTER("sid"))
"RTN","SAMIUR2",370,0)
 i sid="" s sid=$g(FILTER("studyid"))
"RTN","SAMIUR2",371,0)
 q:sid=""
"RTN","SAMIUR2",372,0)
 n zform s zform=$g(FILTER("form"))
"RTN","SAMIUR2",373,0)
 n groot
"RTN","SAMIUR2",374,0)
 i zform="" s groot=$na(@root@("graph",sid))
"RTN","SAMIUR2",375,0)
 e  s groot=$na(@root@("graph",sid,zform))
"RTN","SAMIUR2",376,0)
 s FILTER("root")=$e(groot,2,$l(groot))
"RTN","SAMIUR2",377,0)
 d wsGtree^SYNVPR(.RTN,.FILTER)
"RTN","SAMIUR2",378,0)
 q
"RTN","SAMIUR2",379,0)
 ;
"RTN","SAMIUR2",380,0)
PKYDT(STDT,ENDT,PKS,CIGS) ; Extrinsic returns pack-years
"RTN","SAMIUR2",381,0)
 ; if PKS is not provided, 20/CIGS will be used for packs per day
"RTN","SAMIUR2",382,0)
 n pkyr s pkyr=""
"RTN","SAMIUR2",383,0)
 i $g(PKS)="" d  ;
"RTN","SAMIUR2",384,0)
 . i $g(CIGS)="" s PKS=0 q  ;
"RTN","SAMIUR2",385,0)
 . s PKS=20/CIGS
"RTN","SAMIUR2",386,0)
 n zst,zend,zdif
"RTN","SAMIUR2",387,0)
 s zst=$$FMDT(STDT)
"RTN","SAMIUR2",388,0)
 i zst=-1 s zst=STDT
"RTN","SAMIUR2",389,0)
 s zend=$$FMDT(ENDT)
"RTN","SAMIUR2",390,0)
 i zend=-1 s zend=ENDT ; probably a fileman date already
"RTN","SAMIUR2",391,0)
 s zdif=$$FMDIFF^XLFDT(zend,zst)/365.24
"RTN","SAMIUR2",392,0)
 s pkyr=$$PKY(zdif,PKS)
"RTN","SAMIUR2",393,0)
 ;
"RTN","SAMIUR2",394,0)
 q pkyr
"RTN","SAMIUR2",395,0)
 ;
"RTN","SAMIUR2",396,0)
PKY(YRS,PKS) ; Extrinsic returns pack-years from years (YRS) and 
"RTN","SAMIUR2",397,0)
 ; packs per day (PKS)
"RTN","SAMIUR2",398,0)
 ;
"RTN","SAMIUR2",399,0)
 n rtn s rtn=""
"RTN","SAMIUR2",400,0)
 s rtn=YRS*PKS
"RTN","SAMIUR2",401,0)
 i $l($p(rtn,".",2))>2 d  ;
"RTN","SAMIUR2",402,0)
 . n zdec s zdec=$p(rtn,".",2)
"RTN","SAMIUR2",403,0)
 . s rtn=$p(rtn,".",1)_"."_$e(zdec,1,2)
"RTN","SAMIUR2",404,0)
 . i $e(zdec,3)>4 s rtn=rtn+.01
"RTN","SAMIUR2",405,0)
 i rtn'["." s rtn=rtn_".0"
"RTN","SAMIUR2",406,0)
 q rtn
"RTN","SAMIUR2",407,0)
 ;
"RTN","SAMIUR2",408,0)
FMDT(ZDT) ; Extrinsic returns the fileman date of ZDT
"RTN","SAMIUR2",409,0)
 N X,Y
"RTN","SAMIUR2",410,0)
 S X=ZDT
"RTN","SAMIUR2",411,0)
 D ^%DT
"RTN","SAMIUR2",412,0)
 Q Y
"RTN","SAMIUR2",413,0)
 ;
"RTN","SAMIUR2",414,0)
SMHIS(zdt,dfn,SAMIPATS) ; extrinsic returns contents of smoking history cell
"RTN","SAMIUR2",415,0)
 ;
"RTN","SAMIUR2",416,0)
 n zrtn s zrtn=""
"RTN","SAMIUR2",417,0)
 s zrtn=zrtn_"<div class=""row""><div class=""col-md-12""><table class=""table"" id=""pack-years-history"">"
"RTN","SAMIUR2",418,0)
 s zrtn=zrtn_"<thead><tr><th>Form </th><th> Reported Date </th>"
"RTN","SAMIUR2",419,0)
 s zrtn=zrtn_"<th>Pack Years</th><th>Cumulative</th></tr></thead><tbody>"
"RTN","SAMIUR2",420,0)
 s zrtn=zrtn_$$SHDET($$DFN2SID(dfn))
"RTN","SAMIUR2",421,0)
 s zrtn=zrtn_"</tbody></table></div></div>"
"RTN","SAMIUR2",422,0)
 q zrtn
"RTN","SAMIUR2",423,0)
 ;
"RTN","SAMIUR2",424,0)
SHDET(SID,KEY) ; Extrinsic returns table contents for smoking history
"RTN","SAMIUR2",425,0)
 ; KEY is the form key of the caller for "current" marker insertion
"RTN","SAMIUR2",426,0)
 n pyary
"RTN","SAMIUR2",427,0)
 i $g(KEY)="" s KEY=""
"RTN","SAMIUR2",428,0)
 d CUMPY("pyary",SID,KEY)
"RTN","SAMIUR2",429,0)
 n current s current=$g(pyary("current"))
"RTN","SAMIUR2",430,0)
 n rptcnt,rptmax
"RTN","SAMIUR2",431,0)
 s rptcnt=0
"RTN","SAMIUR2",432,0)
 s rptmax=$o(pyary("rpt",""),-1)
"RTN","SAMIUR2",433,0)
 q:+rptmax=0
"RTN","SAMIUR2",434,0)
 n return
"RTN","SAMIUR2",435,0)
 s return=""
"RTN","SAMIUR2",436,0)
 n zi s zi=""
"RTN","SAMIUR2",437,0)
 f zi=1:1:rptmax d  ;
"RTN","SAMIUR2",438,0)
 . s rptcnt=rptcnt+1
"RTN","SAMIUR2",439,0)
 . i rptcnt=current s return=return_"<tr data-current-form=""true"">"
"RTN","SAMIUR2",440,0)
 . e  s return=return_"<tr>"
"RTN","SAMIUR2",441,0)
 . s return=return_"<td>"_pyary("rpt",rptcnt,1)_"</td>"
"RTN","SAMIUR2",442,0)
 . s return=return_"<td class=""reported-date"">"_pyary("rpt",rptcnt,2)_"</td>"
"RTN","SAMIUR2",443,0)
 . s return=return_"<td class=""pack-years"">"_pyary("rpt",rptcnt,3)_"</td>"
"RTN","SAMIUR2",444,0)
 . s return=return_"<td class=""cumulative-pack-years"">"_pyary("rpt",rptcnt,4)_"</td>"
"RTN","SAMIUR2",445,0)
 . s return=return_"</tr>"
"RTN","SAMIUR2",446,0)
 k pyary
"RTN","SAMIUR2",447,0)
 q return
"RTN","SAMIUR2",448,0)
 ;
"RTN","SAMIUR2",449,0)
DOB(ien,dfn,SAMIPATS) ; extrinsic returns the Date of Birth
"RTN","SAMIUR2",450,0)
 n dob
"RTN","SAMIUR2",451,0)
 s dob=$g(SAMIPATS(ien,dfn,"dob"))
"RTN","SAMIUR2",452,0)
 i dob="" s dob=$g(SAMIPATS(ien,dfn,"sbdob"))
"RTN","SAMIUR2",453,0)
 q dob
"RTN","SAMIUR2",454,0)
 ;
"RTN","SAMIUR2",455,0)
WORKPAT(ien,dfn,SAMIPATS) ; extrinsic returns worklist patient name cell
"RTN","SAMIUR2",456,0)
 n zcell
"RTN","SAMIUR2",457,0)
 s zcell=""
"RTN","SAMIUR2",458,0)
 s zcell=zcell_$g(SAMIPATS(ien,dfn,"workref"))
"RTN","SAMIUR2",459,0)
 q zcell
"RTN","SAMIUR2",460,0)
 ;
"RTN","SAMIUR2",461,0)
MANPAT(ien,dfn,SAMIPATS) ; extrinsic returns the unmatched patient cell
"RTN","SAMIUR2",462,0)
 n zcell
"RTN","SAMIUR2",463,0)
 s zcell=""
"RTN","SAMIUR2",464,0)
 ;s zcell=zcell_$g(SAMIPATS(ien,dfn,"saminame"))
"RTN","SAMIUR2",465,0)
 s zcell=zcell_$g(SAMIPATS(ien,dfn,"editref"))
"RTN","SAMIUR2",466,0)
 s zcell=zcell_"<br>Date of Birth: "_$g(SAMIPATS(ien,dfn,"dob"))
"RTN","SAMIUR2",467,0)
 s zcell=zcell_" Gender: "_$g(SAMIPATS(ien,dfn,"sex"))
"RTN","SAMIUR2",468,0)
 n ssn s ssn=$g(SAMIPATS(ien,dfn,"ssn"))
"RTN","SAMIUR2",469,0)
 i ssn="" d  ;
"RTN","SAMIUR2",470,0)
 . n lroot s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIUR2",471,0)
 . n tssn s tssn=$g(@lroot@(ien,"ssn"))
"RTN","SAMIUR2",472,0)
 . s ssn=$e(tssn,1,3)_"-"_$e(tssn,4,5)_"-"_$e(tssn,6,9)
"RTN","SAMIUR2",473,0)
 s zcell=zcell_"<br>SSN: "_ssn
"RTN","SAMIUR2",474,0)
 s zcell=zcell_"<br>dfn: "_dfn
"RTN","SAMIUR2",475,0)
 q zcell
"RTN","SAMIUR2",476,0)
 ;
"RTN","SAMIUR2",477,0)
POSSIBLE(ien,dfn,SAMIPATS) ; extrinsic returns possible match cell
"RTN","SAMIUR2",478,0)
 n zcell
"RTN","SAMIUR2",479,0)
 s zcell=""
"RTN","SAMIUR2",480,0)
 n matien s matien=$g(SAMIPATS(ien,dfn,"MATCHLOG"))
"RTN","SAMIUR2",481,0)
 i matien="" q zcell
"RTN","SAMIUR2",482,0)
 n lroot s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIUR2",483,0)
 i '$d(@lroot@(matien)) q zcell
"RTN","SAMIUR2",484,0)
 s zcell=zcell_$g(@lroot@(matien,"saminame"))
"RTN","SAMIUR2",485,0)
 s zcell=zcell_"<br>Date of Birth: "_$g(@lroot@(matien,"sbdob"))
"RTN","SAMIUR2",486,0)
 s zcell=zcell_" Gender: "_$g(@lroot@(matien,"sex"))
"RTN","SAMIUR2",487,0)
 n tssn s tssn=$g(@lroot@(matien,"ssn"))
"RTN","SAMIUR2",488,0)
 n ssn s ssn=tssn
"RTN","SAMIUR2",489,0)
 i tssn'["-" s ssn=$e(tssn,1,3)_"-"_$e(tssn,4,5)_"-"_$e(tssn,6,9)
"RTN","SAMIUR2",490,0)
 s zcell=zcell_"<br>SSN: "_ssn
"RTN","SAMIUR2",491,0)
 s zcell=zcell_"<br>dfn: "_$g(@lroot@(matien,"dfn"))
"RTN","SAMIUR2",492,0)
 ;
"RTN","SAMIUR2",493,0)
 q zcell
"RTN","SAMIUR2",494,0)
 ;
"RTN","SAMIUR2",495,0)
MATCH(ien,dfn,SAMIPATS) ; extrinsic returns the match button cell
"RTN","SAMIUR2",496,0)
 ;
"RTN","SAMIUR2",497,0)
 n matien s matien=$g(SAMIPATS(ien,dfn,"MATCHLOG"))
"RTN","SAMIUR2",498,0)
 i matien="" q ""
"RTN","SAMIUR2",499,0)
 ;
"RTN","SAMIUR2",500,0)
 new nuhref set nuhref="<form method=POST action=""/vapals"">"
"RTN","SAMIUR2",501,0)
 set nuhref=nuhref_"<input type=hidden name=""samiroute"" value=""merge"">"
"RTN","SAMIUR2",502,0)
 set nuhref=nuhref_"<input type=hidden name=""toien"" value="_ien_">"
"RTN","SAMIUR2",503,0)
 set nuhref=nuhref_"<input value=""Merge"" class=""btn btn-link"" role=""link"" type=""submit""></form>"
"RTN","SAMIUR2",504,0)
 q nuhref
"RTN","SAMIUR2",505,0)
 ;
"RTN","SAMIUR2",506,0)
CUMPY(PYARY,sid,KEY) ; forms array of cummulative pack year data
"RTN","SAMIUR2",507,0)
 ; PYARY passed by name
"RTN","SAMIUR2",508,0)
 ; KEY is the current form key for matching to a row
"RTN","SAMIUR2",509,0)
 k @PYARY
"RTN","SAMIUR2",510,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",511,0)
 ;n sid s sid=$g(@root@(DFN,"samistudyid"))
"RTN","SAMIUR2",512,0)
 ;q:sid=""
"RTN","SAMIUR2",513,0)
 n items s items=""
"RTN","SAMIUR2",514,0)
 d GETITEMS^SAMICASE("items",sid)
"RTN","SAMIUR2",515,0)
 q:'$d(items)
"RTN","SAMIUR2",516,0)
 m @PYARY@("items")=items
"RTN","SAMIUR2",517,0)
 n siform
"RTN","SAMIUR2",518,0)
 s siform=$o(items("siform"))
"RTN","SAMIUR2",519,0)
 q:siform=""
"RTN","SAMIUR2",520,0)
 i siform=$g(KEY) s @PYARY@("current")=1 ;this row is the current form
"RTN","SAMIUR2",521,0)
 n vals
"RTN","SAMIUR2",522,0)
 s vals=$na(@root@("graph",sid,siform))
"RTN","SAMIUR2",523,0)
 n kdate s kdate=$$GETDTKEY^SAMICAS2(siform)
"RTN","SAMIUR2",524,0)
 n keydate s keydate=$$KEY2DSPD^SAMICAS2(kdate)
"RTN","SAMIUR2",525,0)
 s @PYARY@("rpt",1,1)="Intake" ; Form
"RTN","SAMIUR2",526,0)
 s @PYARY@("rpt",1,2)=keydate ; Reported Date
"RTN","SAMIUR2",527,0)
 n lastcum s lastcum=$g(@vals@("sippy"))
"RTN","SAMIUR2",528,0)
 s @PYARY@("rpt",1,3)=lastcum ; Pack Years
"RTN","SAMIUR2",529,0)
 s @PYARY@("rpt",1,4)=lastcum ; Cumulative
"RTN","SAMIUR2",530,0)
 n lastdt s lastdt=keydate
"RTN","SAMIUR2",531,0)
 n rptcnt s rptcnt=1
"RTN","SAMIUR2",532,0)
 n zi s zi=""
"RTN","SAMIUR2",533,0)
 f  s zi=$o(items("type","vapals:fuform",zi)) q:zi=""  d  ;
"RTN","SAMIUR2",534,0)
 . s rptcnt=rptcnt+1
"RTN","SAMIUR2",535,0)
 . s @PYARY@("rpt",rptcnt,1)="Follow-up"
"RTN","SAMIUR2",536,0)
 . n kdate s kdate=$$GETDTKEY^SAMICAS2(zi)
"RTN","SAMIUR2",537,0)
 . n keydate s keydate=$$KEY2DSPD^SAMICAS2(kdate)
"RTN","SAMIUR2",538,0)
 . s @PYARY@("rpt",rptcnt,2)=keydate ; Reported Date
"RTN","SAMIUR2",539,0)
 . s vals=$na(@root@("graph",sid,zi))
"RTN","SAMIUR2",540,0)
 . n newpd s newpd=$g(@vals@("sippd"))
"RTN","SAMIUR2",541,0)
 . n usedate,siq s usedate=keydate
"RTN","SAMIUR2",542,0)
 . s siq=$g(@vals@("siq")) ; quit date on followup form
"RTN","SAMIUR2",543,0)
 . i siq'="" d  ; quit date provided
"RTN","SAMIUR2",544,0)
 . . if $$FMDT(siq)<$$FMDT(lastdt) q  ; quit date out of range
"RTN","SAMIUR2",545,0)
 . . if $$FMDT(siq)>$$FMDT(keydate) q  ; quit date out of range
"RTN","SAMIUR2",546,0)
 . . s usedate=siq ; use the quit date as end of range
"RTN","SAMIUR2",547,0)
 . n newpy s newpy=$$PKYDT(lastdt,usedate,newpd)
"RTN","SAMIUR2",548,0)
 . s @vals@("sippy")=newpy
"RTN","SAMIUR2",549,0)
 . s ^gpl("current","KEY")=$g(KEY)
"RTN","SAMIUR2",550,0)
 . s ^gpl("current","zi")=zi
"RTN","SAMIUR2",551,0)
 . i zi=$g(KEY) s @PYARY@("current")=rptcnt ;this row is the current form
"RTN","SAMIUR2",552,0)
 . n newcum s newcum=""
"RTN","SAMIUR2",553,0)
 . i newpy'="" s newcum=lastcum+newpy
"RTN","SAMIUR2",554,0)
 . s @PYARY@("rpt",rptcnt,3)=newpy ; Pack Years
"RTN","SAMIUR2",555,0)
 . s @PYARY@("rpt",rptcnt,4)=newcum ; Cumulative
"RTN","SAMIUR2",556,0)
 . s lastdt=keydate
"RTN","SAMIUR2",557,0)
 . s lastcum=newcum
"RTN","SAMIUR2",558,0)
 q
"RTN","SAMIUR2",559,0)
 ;
"RTN","SAMIUR2",560,0)
EPAT(ien,dfn,SAMIPATS) ; extrinsic the patient name with navigation
"RTN","SAMIUR2",561,0)
 ; to enrollment
"RTN","SAMIUR2",562,0)
 q
"RTN","SAMIUR2",563,0)
 ;
"VER")
8.0^22.2
**END**
**END**
