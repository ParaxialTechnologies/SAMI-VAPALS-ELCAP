KIDS Distribution saved on Aug 18, 2021@10:35:13
Test Patch SAMI*18.0*13 SEQ #13 T1 (18.13-t1)
**KIDS**:SAMI*18.0*13^

**INSTALL NAME**
SAMI*18.0*13
"BLD",11512,0)
SAMI*18.0*13^SAMI^0^3210818^n
"BLD",11512,6.3)
1
"BLD",11512,"KRN",0)
^9.67PA^1.5^25
"BLD",11512,"KRN",.4,0)
.4
"BLD",11512,"KRN",.4,"NM",0)
^9.68A^2^2
"BLD",11512,"KRN",.4,"NM",1,0)
SAMI LIST SITES    FILE #311.12^311.12^0
"BLD",11512,"KRN",.4,"NM",2,0)
SAMI SITE USER MAP    FILE #311.12^311.12^0
"BLD",11512,"KRN",.4,"NM","B","SAMI LIST SITES    FILE #311.12",1)

"BLD",11512,"KRN",.4,"NM","B","SAMI SITE USER MAP    FILE #311.12",2)

"BLD",11512,"KRN",.401,0)
.401
"BLD",11512,"KRN",.401,"NM",0)
^9.68A^2^2
"BLD",11512,"KRN",.401,"NM",1,0)
SAMI SITE USER SORT    FILE #311.12^311.12^0
"BLD",11512,"KRN",.401,"NM",2,0)
SAMI SORT SITES    FILE #311.12^311.12^0
"BLD",11512,"KRN",.401,"NM","B","SAMI SITE USER SORT    FILE #311.12",1)

"BLD",11512,"KRN",.401,"NM","B","SAMI SORT SITES    FILE #311.12",2)

"BLD",11512,"KRN",.402,0)
.402
"BLD",11512,"KRN",.402,"NM",0)
^9.68A^3^3
"BLD",11512,"KRN",.402,"NM",1,0)
SAMI ENTER/EDIT SITE    FILE #311.12^311.12^0
"BLD",11512,"KRN",.402,"NM",2,0)
SAMI SITE ACTIVATE DEACTIVATE    FILE #311.12^311.12^0
"BLD",11512,"KRN",.402,"NM",3,0)
SAMI SUPERUSER ENTER/EDIT    FILE #311.13^311.13^0
"BLD",11512,"KRN",.402,"NM","B","SAMI ENTER/EDIT SITE    FILE #311.12",1)

"BLD",11512,"KRN",.402,"NM","B","SAMI SITE ACTIVATE DEACTIVATE    FILE #311.12",2)

"BLD",11512,"KRN",.402,"NM","B","SAMI SUPERUSER ENTER/EDIT    FILE #311.13",3)

"BLD",11512,"KRN",.403,0)
.403
"BLD",11512,"KRN",.5,0)
.5
"BLD",11512,"KRN",.84,0)
.84
"BLD",11512,"KRN",1.5,0)
1.5
"BLD",11512,"KRN",1.6,0)
1.6
"BLD",11512,"KRN",1.61,0)
1.61
"BLD",11512,"KRN",1.62,0)
1.62
"BLD",11512,"KRN",3.6,0)
3.6
"BLD",11512,"KRN",3.8,0)
3.8
"BLD",11512,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",11512,"KRN",3.8,"NM",1,0)
SAMI ORM ORR^^0
"BLD",11512,"KRN",3.8,"NM","B","SAMI ORM ORR",1)

"BLD",11512,"KRN",9.2,0)
9.2
"BLD",11512,"KRN",9.8,0)
9.8
"BLD",11512,"KRN",9.8,"NM",0)
^9.68A^101^101
"BLD",11512,"KRN",9.8,"NM",1,0)
SAMIADMN^^0^B70880775
"BLD",11512,"KRN",9.8,"NM",2,0)
SAMIADT^^0^B39705702
"BLD",11512,"KRN",9.8,"NM",3,0)
SAMICAS2^^0^B445469337
"BLD",11512,"KRN",9.8,"NM",4,0)
SAMICAS3^^0^B499773480
"BLD",11512,"KRN",9.8,"NM",5,0)
SAMICASE^^0^B2465434
"BLD",11512,"KRN",9.8,"NM",6,0)
SAMICLOG^^0^B37372659
"BLD",11512,"KRN",9.8,"NM",7,0)
SAMICSV^^0^B60401322
"BLD",11512,"KRN",9.8,"NM",8,0)
SAMICTC1^^0^B248960846
"BLD",11512,"KRN",9.8,"NM",9,0)
SAMICTD2^^0^B193976177
"BLD",11512,"KRN",9.8,"NM",10,0)
SAMICTR^^0^B175841025
"BLD",11512,"KRN",9.8,"NM",11,0)
SAMICTR0^^0^B64947891
"BLD",11512,"KRN",9.8,"NM",12,0)
SAMICTR1^^0^B79329697
"BLD",11512,"KRN",9.8,"NM",13,0)
SAMICTR3^^0^B143725495
"BLD",11512,"KRN",9.8,"NM",14,0)
SAMICTR4^^0^B29262141
"BLD",11512,"KRN",9.8,"NM",15,0)
SAMICTR9^^0^B10298413
"BLD",11512,"KRN",9.8,"NM",16,0)
SAMICTRA^^0^B23235408
"BLD",11512,"KRN",9.8,"NM",17,0)
SAMICTRT^^0^B16024017
"BLD",11512,"KRN",9.8,"NM",18,0)
SAMICTRX^^0^B1378968
"BLD",11512,"KRN",9.8,"NM",19,0)
SAMICTT0^^0^B97674764
"BLD",11512,"KRN",9.8,"NM",20,0)
SAMICTT1^^0^B122873178
"BLD",11512,"KRN",9.8,"NM",21,0)
SAMICTT2^^0^B115984956
"BLD",11512,"KRN",9.8,"NM",22,0)
SAMICTT3^^0^B222214559
"BLD",11512,"KRN",9.8,"NM",23,0)
SAMICTT4^^0^B54435090
"BLD",11512,"KRN",9.8,"NM",24,0)
SAMICTT9^^0^B17246420
"BLD",11512,"KRN",9.8,"NM",25,0)
SAMICTTA^^0^B35698365
"BLD",11512,"KRN",9.8,"NM",26,0)
SAMICTUL^^0^B101132
"BLD",11512,"KRN",9.8,"NM",27,0)
SAMICUL^^0^B134436
"BLD",11512,"KRN",9.8,"NM",28,0)
SAMIFLD^^0^B215854610
"BLD",11512,"KRN",9.8,"NM",29,0)
SAMIFORM^^0^B4892541
"BLD",11512,"KRN",9.8,"NM",30,0)
SAMIFUL^^0^B129116
"BLD",11512,"KRN",9.8,"NM",31,0)
SAMIFWS^^0^B13804779
"BLD",11512,"KRN",9.8,"NM",32,0)
SAMIHL7^^0^B234597214
"BLD",11512,"KRN",9.8,"NM",33,0)
SAMIHOM3^^0^B168340275
"BLD",11512,"KRN",9.8,"NM",34,0)
SAMIHOM4^^0^B899951012
"BLD",11512,"KRN",9.8,"NM",35,0)
SAMIHUL^^0^B111466
"BLD",11512,"KRN",9.8,"NM",36,0)
SAMIJS1^^0^B33789646
"BLD",11512,"KRN",9.8,"NM",37,0)
SAMIJS2^^0^B50752409
"BLD",11512,"KRN",9.8,"NM",38,0)
SAMIKIDP^^0^B16095269
"BLD",11512,"KRN",9.8,"NM",39,0)
SAMILOG^^0^B11755502
"BLD",11512,"KRN",9.8,"NM",40,0)
SAMIM2M^^0^B13645650
"BLD",11512,"KRN",9.8,"NM",41,0)
SAMIMOV^^0^B15330427
"BLD",11512,"KRN",9.8,"NM",42,0)
SAMINOT1^^0^B476861921
"BLD",11512,"KRN",9.8,"NM",43,0)
SAMINOT2^^0^B473975400
"BLD",11512,"KRN",9.8,"NM",44,0)
SAMINOT3^^0^B48541042
"BLD",11512,"KRN",9.8,"NM",45,0)
SAMINOTI^^0^B58865926
"BLD",11512,"KRN",9.8,"NM",46,0)
SAMINUL^^0^B97012
"BLD",11512,"KRN",9.8,"NM",47,0)
SAMIORM^^0^B175893845
"BLD",11512,"KRN",9.8,"NM",48,0)
SAMIORR^^0^B365219423
"BLD",11512,"KRN",9.8,"NM",49,0)
SAMIORU^^0^B377186470
"BLD",11512,"KRN",9.8,"NM",50,0)
SAMIOUL^^0^B92656
"BLD",11512,"KRN",9.8,"NM",51,0)
SAMIPARM^^0^B7340153
"BLD",11512,"KRN",9.8,"NM",52,0)
SAMIPAT^^0^B761477
"BLD",11512,"KRN",9.8,"NM",53,0)
SAMIPTLK^^0^B11168340
"BLD",11512,"KRN",9.8,"NM",54,0)
SAMIRU^^0^B5105701
"BLD",11512,"KRN",9.8,"NM",55,0)
SAMISAV^^0^B121113964
"BLD",11512,"KRN",9.8,"NM",56,0)
SAMISITE^^0^B91053774
"BLD",11512,"KRN",9.8,"NM",57,0)
SAMISRC2^^0^B10574823
"BLD",11512,"KRN",9.8,"NM",58,0)
SAMITIU^^0^B7627820
"BLD",11512,"KRN",9.8,"NM",59,0)
SAMITTW^^0^B5449588
"BLD",11512,"KRN",9.8,"NM",60,0)
SAMIUL^^0^B17740
"BLD",11512,"KRN",9.8,"NM",61,0)
SAMIUR^^0^B520612339
"BLD",11512,"KRN",9.8,"NM",62,0)
SAMIUR1^^0^B58855507
"BLD",11512,"KRN",9.8,"NM",63,0)
SAMIUR2^^0^B1265246653
"BLD",11512,"KRN",9.8,"NM",64,0)
SAMIURUL^^0^B98717
"BLD",11512,"KRN",9.8,"NM",65,0)
SAMIUT7^^0^B20430771
"BLD",11512,"KRN",9.8,"NM",66,0)
SAMIUT7A^^0^B4445311
"BLD",11512,"KRN",9.8,"NM",67,0)
SAMIUT7T^^0^B4447347
"BLD",11512,"KRN",9.8,"NM",68,0)
SAMIUTAD^^0^B53452969
"BLD",11512,"KRN",9.8,"NM",69,0)
SAMIUTC1^^0^B4068318
"BLD",11512,"KRN",9.8,"NM",70,0)
SAMIUTC2^^0^B17246826
"BLD",11512,"KRN",9.8,"NM",71,0)
SAMIUTCR^^0^B49296419
"BLD",11512,"KRN",9.8,"NM",72,0)
SAMIUTD2^^0^B4729581
"BLD",11512,"KRN",9.8,"NM",73,0)
SAMIUTH3^^0^B177762532
"BLD",11512,"KRN",9.8,"NM",74,0)
SAMIUTLG^^0^B14293112
"BLD",11512,"KRN",9.8,"NM",75,0)
SAMIUTM2^^0^B4287447
"BLD",11512,"KRN",9.8,"NM",76,0)
SAMIUTNI^^0^B16587563
"BLD",11512,"KRN",9.8,"NM",77,0)
SAMIUTPT^^0^B11823199
"BLD",11512,"KRN",9.8,"NM",78,0)
SAMIUTR0^^0^B19276692
"BLD",11512,"KRN",9.8,"NM",79,0)
SAMIUTR1^^0^B46275642
"BLD",11512,"KRN",9.8,"NM",80,0)
SAMIUTR9^^0^B16912786
"BLD",11512,"KRN",9.8,"NM",81,0)
SAMIUTRA^^0^B16612038
"BLD",11512,"KRN",9.8,"NM",82,0)
SAMIUTRU^^0^B14559578
"BLD",11512,"KRN",9.8,"NM",83,0)
SAMIUTRX^^0^B10458542
"BLD",11512,"KRN",9.8,"NM",84,0)
SAMIUTS2^^0^B163797059
"BLD",11512,"KRN",9.8,"NM",85,0)
SAMIUTST^^0^B194231547
"BLD",11512,"KRN",9.8,"NM",86,0)
SAMIUTSV^^0^B11203197
"BLD",11512,"KRN",9.8,"NM",87,0)
SAMIUTUR^^0^B94545590
"BLD",11512,"KRN",9.8,"NM",88,0)
SAMIUTVA^^0^B147079360
"BLD",11512,"KRN",9.8,"NM",89,0)
SAMIUTVR^^0^B90920433
"BLD",11512,"KRN",9.8,"NM",90,0)
SAMIUTVS^^0^B102014850
"BLD",11512,"KRN",9.8,"NM",91,0)
SAMIVSTA^^0^B6942135
"BLD",11512,"KRN",9.8,"NM",92,0)
SAMIZ0^^0^B8266489
"BLD",11512,"KRN",9.8,"NM",93,0)
SAMIZ1^^0^B18756072
"BLD",11512,"KRN",9.8,"NM",94,0)
SAMIZ2^^0^B913574471
"BLD",11512,"KRN",9.8,"NM",95,0)
SAMIZ3^^0^B73028800
"BLD",11512,"KRN",9.8,"NM",96,0)
SAMIZ4^^0^B331590902
"BLD",11512,"KRN",9.8,"NM",97,0)
SAMIZ5^^0^B169621353
"BLD",11512,"KRN",9.8,"NM",98,0)
SAMIZ6^^0^B300891487
"BLD",11512,"KRN",9.8,"NM",99,0)
SAMIZ7^^0^B7868524
"BLD",11512,"KRN",9.8,"NM",100,0)
SAMIZ8^^0^B250219
"BLD",11512,"KRN",9.8,"NM",101,0)
SAMIZ9^^0^B25699566
"BLD",11512,"KRN",9.8,"NM","B","SAMIADMN",1)

"BLD",11512,"KRN",9.8,"NM","B","SAMIADT",2)

"BLD",11512,"KRN",9.8,"NM","B","SAMICAS2",3)

"BLD",11512,"KRN",9.8,"NM","B","SAMICAS3",4)

"BLD",11512,"KRN",9.8,"NM","B","SAMICASE",5)

"BLD",11512,"KRN",9.8,"NM","B","SAMICLOG",6)

"BLD",11512,"KRN",9.8,"NM","B","SAMICSV",7)

"BLD",11512,"KRN",9.8,"NM","B","SAMICTC1",8)

"BLD",11512,"KRN",9.8,"NM","B","SAMICTD2",9)

"BLD",11512,"KRN",9.8,"NM","B","SAMICTR",10)

"BLD",11512,"KRN",9.8,"NM","B","SAMICTR0",11)

"BLD",11512,"KRN",9.8,"NM","B","SAMICTR1",12)

"BLD",11512,"KRN",9.8,"NM","B","SAMICTR3",13)

"BLD",11512,"KRN",9.8,"NM","B","SAMICTR4",14)

"BLD",11512,"KRN",9.8,"NM","B","SAMICTR9",15)

"BLD",11512,"KRN",9.8,"NM","B","SAMICTRA",16)

"BLD",11512,"KRN",9.8,"NM","B","SAMICTRT",17)

"BLD",11512,"KRN",9.8,"NM","B","SAMICTRX",18)

"BLD",11512,"KRN",9.8,"NM","B","SAMICTT0",19)

"BLD",11512,"KRN",9.8,"NM","B","SAMICTT1",20)

"BLD",11512,"KRN",9.8,"NM","B","SAMICTT2",21)

"BLD",11512,"KRN",9.8,"NM","B","SAMICTT3",22)

"BLD",11512,"KRN",9.8,"NM","B","SAMICTT4",23)

"BLD",11512,"KRN",9.8,"NM","B","SAMICTT9",24)

"BLD",11512,"KRN",9.8,"NM","B","SAMICTTA",25)

"BLD",11512,"KRN",9.8,"NM","B","SAMICTUL",26)

"BLD",11512,"KRN",9.8,"NM","B","SAMICUL",27)

"BLD",11512,"KRN",9.8,"NM","B","SAMIFLD",28)

"BLD",11512,"KRN",9.8,"NM","B","SAMIFORM",29)

"BLD",11512,"KRN",9.8,"NM","B","SAMIFUL",30)

"BLD",11512,"KRN",9.8,"NM","B","SAMIFWS",31)

"BLD",11512,"KRN",9.8,"NM","B","SAMIHL7",32)

"BLD",11512,"KRN",9.8,"NM","B","SAMIHOM3",33)

"BLD",11512,"KRN",9.8,"NM","B","SAMIHOM4",34)

"BLD",11512,"KRN",9.8,"NM","B","SAMIHUL",35)

"BLD",11512,"KRN",9.8,"NM","B","SAMIJS1",36)

"BLD",11512,"KRN",9.8,"NM","B","SAMIJS2",37)

"BLD",11512,"KRN",9.8,"NM","B","SAMIKIDP",38)

"BLD",11512,"KRN",9.8,"NM","B","SAMILOG",39)

"BLD",11512,"KRN",9.8,"NM","B","SAMIM2M",40)

"BLD",11512,"KRN",9.8,"NM","B","SAMIMOV",41)

"BLD",11512,"KRN",9.8,"NM","B","SAMINOT1",42)

"BLD",11512,"KRN",9.8,"NM","B","SAMINOT2",43)

"BLD",11512,"KRN",9.8,"NM","B","SAMINOT3",44)

"BLD",11512,"KRN",9.8,"NM","B","SAMINOTI",45)

"BLD",11512,"KRN",9.8,"NM","B","SAMINUL",46)

"BLD",11512,"KRN",9.8,"NM","B","SAMIORM",47)

"BLD",11512,"KRN",9.8,"NM","B","SAMIORR",48)

"BLD",11512,"KRN",9.8,"NM","B","SAMIORU",49)

"BLD",11512,"KRN",9.8,"NM","B","SAMIOUL",50)

"BLD",11512,"KRN",9.8,"NM","B","SAMIPARM",51)

"BLD",11512,"KRN",9.8,"NM","B","SAMIPAT",52)

"BLD",11512,"KRN",9.8,"NM","B","SAMIPTLK",53)

"BLD",11512,"KRN",9.8,"NM","B","SAMIRU",54)

"BLD",11512,"KRN",9.8,"NM","B","SAMISAV",55)

"BLD",11512,"KRN",9.8,"NM","B","SAMISITE",56)

"BLD",11512,"KRN",9.8,"NM","B","SAMISRC2",57)

"BLD",11512,"KRN",9.8,"NM","B","SAMITIU",58)

"BLD",11512,"KRN",9.8,"NM","B","SAMITTW",59)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUL",60)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUR",61)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUR1",62)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUR2",63)

"BLD",11512,"KRN",9.8,"NM","B","SAMIURUL",64)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUT7",65)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUT7A",66)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUT7T",67)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTAD",68)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTC1",69)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTC2",70)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTCR",71)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTD2",72)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTH3",73)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTLG",74)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTM2",75)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTNI",76)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTPT",77)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTR0",78)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTR1",79)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTR9",80)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTRA",81)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTRU",82)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTRX",83)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTS2",84)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTST",85)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTSV",86)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTUR",87)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTVA",88)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTVR",89)

"BLD",11512,"KRN",9.8,"NM","B","SAMIUTVS",90)

"BLD",11512,"KRN",9.8,"NM","B","SAMIVSTA",91)

"BLD",11512,"KRN",9.8,"NM","B","SAMIZ0",92)

"BLD",11512,"KRN",9.8,"NM","B","SAMIZ1",93)

"BLD",11512,"KRN",9.8,"NM","B","SAMIZ2",94)

"BLD",11512,"KRN",9.8,"NM","B","SAMIZ3",95)

"BLD",11512,"KRN",9.8,"NM","B","SAMIZ4",96)

"BLD",11512,"KRN",9.8,"NM","B","SAMIZ5",97)

"BLD",11512,"KRN",9.8,"NM","B","SAMIZ6",98)

"BLD",11512,"KRN",9.8,"NM","B","SAMIZ7",99)

"BLD",11512,"KRN",9.8,"NM","B","SAMIZ8",100)

"BLD",11512,"KRN",9.8,"NM","B","SAMIZ9",101)

"BLD",11512,"KRN",19,0)
19
"BLD",11512,"KRN",19,"NM",0)
^9.68A^24^24
"BLD",11512,"KRN",19,"NM",1,0)
SAMI ACTIVATE DEACTIVATE SITE^^0
"BLD",11512,"KRN",19,"NM",2,0)
SAMI CHANGE PATIENT SITE^^0
"BLD",11512,"KRN",19,"NM",3,0)
SAMI ENTER EDIT SITE^^0
"BLD",11512,"KRN",19,"NM",4,0)
SAMI EXTRACT CSV DATA^^0
"BLD",11512,"KRN",19,"NM",5,0)
SAMI LIST SITES^^0
"BLD",11512,"KRN",19,"NM",6,0)
SAMI MAIN MENU^^0
"BLD",11512,"KRN",19,"NM",7,0)
SAMI PULL CLINICS^^0
"BLD",11512,"KRN",19,"NM",8,0)
SAMI PULL HEALTH FACTORS^^0
"BLD",11512,"KRN",19,"NM",9,0)
SAMI PULL PROVIDERS^^0
"BLD",11512,"KRN",19,"NM",10,0)
SAMI PULL RADIOLOGY DX CODES^^0
"BLD",11512,"KRN",19,"NM",11,0)
SAMI PULL RADIOLOGY MODIFIERS^^0
"BLD",11512,"KRN",19,"NM",12,0)
SAMI PULL RADIOLOGY PROCEDURES^^0
"BLD",11512,"KRN",19,"NM",13,0)
SAMI PULL RADIOLOGY RESIDENTS^^0
"BLD",11512,"KRN",19,"NM",14,0)
SAMI PULL RADIOLOGY STAFF^^0
"BLD",11512,"KRN",19,"NM",15,0)
SAMI PULL RADIOLOGY TECHS^^0
"BLD",11512,"KRN",19,"NM",16,0)
SAMI PULL REMINDERS^^0
"BLD",11512,"KRN",19,"NM",17,0)
SAMI PULL VA-PALS PATIENTS^^0
"BLD",11512,"KRN",19,"NM",18,0)
SAMI SITE AND USER MENU^^0
"BLD",11512,"KRN",19,"NM",19,0)
SAMI SITE USER MAP^^0
"BLD",11512,"KRN",19,"NM",20,0)
SAMI SUPERUSER ENTER/EDIT^^0
"BLD",11512,"KRN",19,"NM",21,0)
SAMI TOGGLE VAPALS PASSWORD ID^^0
"BLD",11512,"KRN",19,"NM",22,0)
SAMI TURN OFF MAN REG^^0
"BLD",11512,"KRN",19,"NM",23,0)
SAMI TURN ON MAN REG^^0
"BLD",11512,"KRN",19,"NM",24,0)
SAMI USER^^0
"BLD",11512,"KRN",19,"NM","B","SAMI ACTIVATE DEACTIVATE SITE",1)

"BLD",11512,"KRN",19,"NM","B","SAMI CHANGE PATIENT SITE",2)

"BLD",11512,"KRN",19,"NM","B","SAMI ENTER EDIT SITE",3)

"BLD",11512,"KRN",19,"NM","B","SAMI EXTRACT CSV DATA",4)

"BLD",11512,"KRN",19,"NM","B","SAMI LIST SITES",5)

"BLD",11512,"KRN",19,"NM","B","SAMI MAIN MENU",6)

"BLD",11512,"KRN",19,"NM","B","SAMI PULL CLINICS",7)

"BLD",11512,"KRN",19,"NM","B","SAMI PULL HEALTH FACTORS",8)

"BLD",11512,"KRN",19,"NM","B","SAMI PULL PROVIDERS",9)

"BLD",11512,"KRN",19,"NM","B","SAMI PULL RADIOLOGY DX CODES",10)

"BLD",11512,"KRN",19,"NM","B","SAMI PULL RADIOLOGY MODIFIERS",11)

"BLD",11512,"KRN",19,"NM","B","SAMI PULL RADIOLOGY PROCEDURES",12)

"BLD",11512,"KRN",19,"NM","B","SAMI PULL RADIOLOGY RESIDENTS",13)

"BLD",11512,"KRN",19,"NM","B","SAMI PULL RADIOLOGY STAFF",14)

"BLD",11512,"KRN",19,"NM","B","SAMI PULL RADIOLOGY TECHS",15)

"BLD",11512,"KRN",19,"NM","B","SAMI PULL REMINDERS",16)

"BLD",11512,"KRN",19,"NM","B","SAMI PULL VA-PALS PATIENTS",17)

"BLD",11512,"KRN",19,"NM","B","SAMI SITE AND USER MENU",18)

"BLD",11512,"KRN",19,"NM","B","SAMI SITE USER MAP",19)

"BLD",11512,"KRN",19,"NM","B","SAMI SUPERUSER ENTER/EDIT",20)

"BLD",11512,"KRN",19,"NM","B","SAMI TOGGLE VAPALS PASSWORD ID",21)

"BLD",11512,"KRN",19,"NM","B","SAMI TURN OFF MAN REG",22)

"BLD",11512,"KRN",19,"NM","B","SAMI TURN ON MAN REG",23)

"BLD",11512,"KRN",19,"NM","B","SAMI USER",24)

"BLD",11512,"KRN",19.1,0)
19.1
"BLD",11512,"KRN",101,0)
101
"BLD",11512,"KRN",101,"NM",0)
^9.68A^4^4
"BLD",11512,"KRN",101,"NM",1,0)
SAMI RECV ADT EVENT^^0
"BLD",11512,"KRN",101,"NM",2,0)
SAMI RECV ADT SUBS^^0
"BLD",11512,"KRN",101,"NM",3,0)
SAMI RECV TIU EVENT^^0
"BLD",11512,"KRN",101,"NM",4,0)
SAMI RECV TIU SUBSC^^0
"BLD",11512,"KRN",101,"NM","B","SAMI RECV ADT EVENT",1)

"BLD",11512,"KRN",101,"NM","B","SAMI RECV ADT SUBS",2)

"BLD",11512,"KRN",101,"NM","B","SAMI RECV TIU EVENT",3)

"BLD",11512,"KRN",101,"NM","B","SAMI RECV TIU SUBSC",4)

"BLD",11512,"KRN",409.61,0)
409.61
"BLD",11512,"KRN",771,0)
771
"BLD",11512,"KRN",771,"NM",0)
^9.68A^4^4
"BLD",11512,"KRN",771,"NM",1,0)
SAMI RECV ADT EVNT^^0
"BLD",11512,"KRN",771,"NM",2,0)
SAMI RECV ADT SUBS^^0
"BLD",11512,"KRN",771,"NM",3,0)
SAMI RECV TIU EVNT^^0
"BLD",11512,"KRN",771,"NM",4,0)
SAMI RECV TIU SUBS^^0
"BLD",11512,"KRN",771,"NM","B","SAMI RECV ADT EVNT",1)

"BLD",11512,"KRN",771,"NM","B","SAMI RECV ADT SUBS",2)

"BLD",11512,"KRN",771,"NM","B","SAMI RECV TIU EVNT",3)

"BLD",11512,"KRN",771,"NM","B","SAMI RECV TIU SUBS",4)

"BLD",11512,"KRN",779.2,0)
779.2
"BLD",11512,"KRN",870,0)
870
"BLD",11512,"KRN",870,"NM",0)
^9.68A^4^4
"BLD",11512,"KRN",870,"NM",1,0)
SAMI-ORR^^0
"BLD",11512,"KRN",870,"NM",2,0)
SAMIADTR^^0
"BLD",11512,"KRN",870,"NM",3,0)
SAMITIUR^^0
"BLD",11512,"KRN",870,"NM",4,0)
SAMITIUS^^0
"BLD",11512,"KRN",870,"NM","B","SAMI-ORR",1)

"BLD",11512,"KRN",870,"NM","B","SAMIADTR",2)

"BLD",11512,"KRN",870,"NM","B","SAMITIUR",3)

"BLD",11512,"KRN",870,"NM","B","SAMITIUS",4)

"BLD",11512,"KRN",8989.51,0)
8989.51
"BLD",11512,"KRN",8989.51,"NM",0)
^9.68A^14^14
"BLD",11512,"KRN",8989.51,"NM",1,0)
SAMI ACCVER^^0
"BLD",11512,"KRN",8989.51,"NM",2,0)
SAMI ALLOW MANUAL ENTRY^^0
"BLD",11512,"KRN",8989.51,"NM",3,0)
SAMI DEFAULT CLINIC IEN^^0
"BLD",11512,"KRN",8989.51,"NM",4,0)
SAMI DEFAULT PROVIDER DUZ^^0
"BLD",11512,"KRN",8989.51,"NM",5,0)
SAMI DEFAULT STATION NUMBER^^0
"BLD",11512,"KRN",8989.51,"NM",6,0)
SAMI FORM FIELDS DEF PATH^^0
"BLD",11512,"KRN",8989.51,"NM",7,0)
SAMI IGNORE PATIENT FILE^^0
"BLD",11512,"KRN",8989.51,"NM",8,0)
SAMI IP ADDRESS^^0
"BLD",11512,"KRN",8989.51,"NM",9,0)
SAMI NOTE TITLE PRINT NAME^^0
"BLD",11512,"KRN",8989.51,"NM",10,0)
SAMI PORT^^0
"BLD",11512,"KRN",8989.51,"NM",11,0)
SAMI PT IMPORT PATH^^0
"BLD",11512,"KRN",8989.51,"NM",12,0)
SAMI SID PREFIX^^0
"BLD",11512,"KRN",8989.51,"NM",13,0)
SAMI SYSTEM TEST PATIENT DFN^^0
"BLD",11512,"KRN",8989.51,"NM",14,0)
SAMI URBAN/RURAL INDEX VALUE^^0
"BLD",11512,"KRN",8989.51,"NM","B","SAMI ACCVER",1)

"BLD",11512,"KRN",8989.51,"NM","B","SAMI ALLOW MANUAL ENTRY",2)

"BLD",11512,"KRN",8989.51,"NM","B","SAMI DEFAULT CLINIC IEN",3)

"BLD",11512,"KRN",8989.51,"NM","B","SAMI DEFAULT PROVIDER DUZ",4)

"BLD",11512,"KRN",8989.51,"NM","B","SAMI DEFAULT STATION NUMBER",5)

"BLD",11512,"KRN",8989.51,"NM","B","SAMI FORM FIELDS DEF PATH",6)

"BLD",11512,"KRN",8989.51,"NM","B","SAMI IGNORE PATIENT FILE",7)

"BLD",11512,"KRN",8989.51,"NM","B","SAMI IP ADDRESS",8)

"BLD",11512,"KRN",8989.51,"NM","B","SAMI NOTE TITLE PRINT NAME",9)

"BLD",11512,"KRN",8989.51,"NM","B","SAMI PORT",10)

"BLD",11512,"KRN",8989.51,"NM","B","SAMI PT IMPORT PATH",11)

"BLD",11512,"KRN",8989.51,"NM","B","SAMI SID PREFIX",12)

"BLD",11512,"KRN",8989.51,"NM","B","SAMI SYSTEM TEST PATIENT DFN",13)

"BLD",11512,"KRN",8989.51,"NM","B","SAMI URBAN/RURAL INDEX VALUE",14)

"BLD",11512,"KRN",8989.52,0)
8989.52
"BLD",11512,"KRN",8993,0)
8993
"BLD",11512,"KRN",8994,0)
8994
"BLD",11512,"KRN","B",.4,.4)

"BLD",11512,"KRN","B",.401,.401)

"BLD",11512,"KRN","B",.402,.402)

"BLD",11512,"KRN","B",.403,.403)

"BLD",11512,"KRN","B",.5,.5)

"BLD",11512,"KRN","B",.84,.84)

"BLD",11512,"KRN","B",1.5,1.5)

"BLD",11512,"KRN","B",1.6,1.6)

"BLD",11512,"KRN","B",1.61,1.61)

"BLD",11512,"KRN","B",1.62,1.62)

"BLD",11512,"KRN","B",3.6,3.6)

"BLD",11512,"KRN","B",3.8,3.8)

"BLD",11512,"KRN","B",9.2,9.2)

"BLD",11512,"KRN","B",9.8,9.8)

"BLD",11512,"KRN","B",19,19)

"BLD",11512,"KRN","B",19.1,19.1)

"BLD",11512,"KRN","B",101,101)

"BLD",11512,"KRN","B",409.61,409.61)

"BLD",11512,"KRN","B",771,771)

"BLD",11512,"KRN","B",779.2,779.2)

"BLD",11512,"KRN","B",870,870)

"BLD",11512,"KRN","B",8989.51,8989.51)

"BLD",11512,"KRN","B",8989.52,8989.52)

"BLD",11512,"KRN","B",8993,8993)

"BLD",11512,"KRN","B",8994,8994)

"KRN",.4,1575,-1)
0^2
"KRN",.4,1575,0)
SAMI SITE USER MAP^3200325.2047^@^311.12^^@^3200516
"KRN",.4,1575,"DXS",1,9)
S I(0,0)=$G(D0),DIP(1)=$S($D(^SAMI(311.12,D0,0)):^(0),1:""),D0=$P(DIP(1),U,1) S:'D0!'$D(^DIC(4,+D0,0)) D0=-1 S D0=D0 S I(100,0)=$G(D0) X DXS(1,9.4) S X="" S D0=I(0,0)
"KRN",.4,1575,"DXS",1,9.2)
S Y(9.1,201)=$S($D(^VA(200,D0,0)):^(0),1:"") S X=$P(Y(9.1,201),U,1)
"KRN",.4,1575,"DXS",1,9.3)
S (D,D0)=$QS(DIMQ,$QL(DIMQ)-1) I D,$D(^VA(200,D,0)) S X=$P(^(0),U)  X DXS(1,9.2) X DICMX
"KRN",.4,1575,"DXS",1,9.4)
N DIMQ,DIMSTRT,DIMSCNT S (DIMQ,DIMSTRT)=$NA(^VA(200,"AH",I(100,0))),DIMSCNT=$QL(DIMQ) F  S DIMQ=$Q(@DIMQ) Q:DIMQ=""  Q:$NA(@DIMQ,DIMSCNT)'=DIMSTRT   X DXS(1,9.3) Q:'$D(D)  S D=D0
"KRN",.4,1575,"F",2)
X DXS(1,9) W X K DIP;m;Z;".01:NEW PERSON:NAME"~
"KRN",.4,1575,"H")
SAMI SITE List
"KRN",.4,1576,-1)
0^1
"KRN",.4,1576,0)
SAMI LIST SITES^3200420.1429^@^311.12^^@^3200516
"KRN",.4,1576,"F",2)
.01;J1L40~.02;J42L4~.03;J48L5~
"KRN",.4,1576,"H")
SAMI SITE List
"KRN",.401,941,-1)
0^1
"KRN",.401,941,0)
SAMI SITE USER SORT^3200325.205^@^311.12^^@^3200516
"KRN",.401,941,2,0)
^.4014^1^1
"KRN",.401,941,2,1,0)
311.12^^SITE^".01^^^^^^4
"KRN",.401,941,2,1,"CM")
S Y(1)=$S($D(^SAMI(311.12,D0,0)):^(0),1:"") S X=$P($G(^DIC(4,+$P(Y(1),U,1),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,941,2,1,"GET")
S Y(1)=$S($D(^SAMI(311.12,D0,0)):^(0),1:"") S X=$P($G(^DIC(4,+$P(Y(1),U,1),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,941,2,1,"IX")
^SAMI(311.12,"B",^SAMI(311.12,^2
"KRN",.401,941,2,1,"PTRIX")
^DIC(4,"B",
"KRN",.401,941,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,941,2,1,"SER")
0.0000^0.0000
"KRN",.401,941,2,1,"TXT")
 SITE not null
"KRN",.401,941,2,"B",311.12,1)

"KRN",.401,942,-1)
0^2
"KRN",.401,942,0)
SAMI SORT SITES^3200420.1428^@^311.12^^@^3200516
"KRN",.401,942,2,0)
^.4014^1^1
"KRN",.401,942,2,1,0)
311.12^^SITE^".01^^^^^^4
"KRN",.401,942,2,1,"CM")
S Y(1)=$S($D(^SAMI(311.12,D0,0)):^(0),1:"") S X=$P($G(^DIC(4,+$P(Y(1),U,1),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,942,2,1,"GET")
S Y(1)=$S($D(^SAMI(311.12,D0,0)):^(0),1:"") S X=$P($G(^DIC(4,+$P(Y(1),U,1),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,942,2,1,"IX")
^SAMI(311.12,"B",^SAMI(311.12,^2
"KRN",.401,942,2,1,"PTRIX")
^DIC(4,"B",
"KRN",.401,942,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,942,2,1,"SER")
0.0000^0.0000
"KRN",.401,942,2,1,"TXT")
 SITE not null
"KRN",.401,942,2,"B",311.12,1)

"KRN",.402,1802,-1)
0^1
"KRN",.402,1802,0)
SAMI ENTER/EDIT SITE^3200410.1752^@^311.12^^@^3200730
"KRN",.402,1802,"DIAB",1,0,311.12,0)
ALL
"KRN",.402,1802,"DR",1,311.12)
.01:.03
"KRN",.402,1803,-1)
0^3
"KRN",.402,1803,0)
SAMI SUPERUSER ENTER/EDIT^3200516.0815^@^311.13^^@^3200516
"KRN",.402,1803,"DR",1,311.13)
.01;.02;
"KRN",.402,1804,-1)
0^2
"KRN",.402,1804,0)
SAMI SITE ACTIVATE DEACTIVATE^3200420.15^@^311.12^^@^3200420
"KRN",.402,1804,"DR",1,311.12)
.03;
"KRN",3.8,341,-1)
0^1
"KRN",3.8,341,0)
SAMI ORM ORR^PU^y^^^^
"KRN",3.8,341,2,0)
^^2^2^3200203^
"KRN",3.8,341,2,1,0)
Mail group to receive information regarding the Veteran eligibility LSS 
"KRN",3.8,341,2,2,0)
program with Phoenix
"KRN",3.8,341,3)

"KRN",19,11791,-1)
0^17
"KRN",19,11791,0)
SAMI PULL VA-PALS PATIENTS^Pull patients from other site^DO NOT USE^R^^^^^^^^
"KRN",19,11791,1,0)
^19.06^3^3^3180906^^^^
"KRN",19,11791,1,1,0)
Gather basic demographic information on all patients from target site and 
"KRN",19,11791,1,2,0)
build the patient-lookup graph store global on the client system.  This 
"KRN",19,11791,1,3,0)
option pulls the target IP and port from system parameters on the client.
"KRN",19,11791,25)
ALLPTS^SAMIVSTA
"KRN",19,11791,200.9)
y
"KRN",19,11791,"U")
PULL PATIENTS FROM OTHER SITE
"KRN",19,11793,-1)
0^16
"KRN",19,11793,0)
SAMI PULL REMINDERS^Pull all active Reminders from another site^^R^^^^^^^^
"KRN",19,11793,1,0)
^19.06^4^4^3180704^^
"KRN",19,11793,1,1,0)
Pulls all active reminders from the site registered in the SAMI 
"KRN",19,11793,1,2,0)
parameters, or, if SAMI IP ADDRESS parameter is empty, from the client.
"KRN",19,11793,1,3,0)
Having retrieved the remiders the 'reminders' graph store is built on the 
"KRN",19,11793,1,4,0)
client side.
"KRN",19,11793,25)
RMDRS^SAMIVSTA
"KRN",19,11793,200.9)
y
"KRN",19,11793,"U")
PULL ALL ACTIVE REMINDERS FROM
"KRN",19,11794,-1)
0^9
"KRN",19,11794,0)
SAMI PULL PROVIDERS^Pull all active providers from another site^^R^^^^^^^^
"KRN",19,11794,1,0)
^19.06^4^4^3181207^^
"KRN",19,11794,1,1,0)
Pulls all active providers from the site registered in the SAMI 
"KRN",19,11794,1,2,0)
parameters, or, if SAMI IP ADDRESS parameter is empty, from the client.
"KRN",19,11794,1,3,0)
Having retrieved the providers the 'providers' graph store is built on 
"KRN",19,11794,1,4,0)
the client side.
"KRN",19,11794,25)
PRVDRS^SAMIVSTA
"KRN",19,11794,200.9)
y
"KRN",19,11794,"U")
PULL ALL ACTIVE PROVIDERS FROM
"KRN",19,11795,-1)
0^8
"KRN",19,11795,0)
SAMI PULL HEALTH FACTORS^Pull all active health factors from another site^^R^^^^^^^^
"KRN",19,11795,1,0)
^19.06^4^4^3181207^^
"KRN",19,11795,1,1,0)
Pulls all active health factors from the site registered in the SAMI 
"KRN",19,11795,1,2,0)
parameters, or, if SAMI IP ADDRESS parameter is empty, from the client.
"KRN",19,11795,1,3,0)
Having retrieved the health factors the 'health factors' graph store is 
"KRN",19,11795,1,4,0)
built on the client side.
"KRN",19,11795,25)
HLTHFCT^SAMIVSTA
"KRN",19,11795,200.9)
y
"KRN",19,11795,"U")
PULL ALL ACTIVE HEALTH FACTORS
"KRN",19,11796,-1)
0^7
"KRN",19,11796,0)
SAMI PULL CLINICS^Pull all active clinics from another site^^R^^^^^^^^
"KRN",19,11796,1,0)
^19.06^4^4^3190307^^^
"KRN",19,11796,1,1,0)
Pulls all active clinics from the site registered in the SAMI 
"KRN",19,11796,1,2,0)
parameters, or, if SAMI IP ADDRESS parameter is empty, from the client.
"KRN",19,11796,1,3,0)
Having retrieved the clinics the 'clinics' graph store is built on 
"KRN",19,11796,1,4,0)
the client side.
"KRN",19,11796,25)
CLINICS^SAMIVSTA
"KRN",19,11796,200.9)
y
"KRN",19,11796,"U")
PULL ALL ACTIVE CLINICS FROM A
"KRN",19,11797,-1)
0^12
"KRN",19,11797,0)
SAMI PULL RADIOLOGY PROCEDURES^Pull all radiology procedures^^R^^^^^^^^
"KRN",19,11797,1,0)
^^5^5^3181001^
"KRN",19,11797,1,1,0)
Pull all active radiology procedures and store in the 'radiology 
"KRN",19,11797,1,2,0)
procedures' Graphstore
"KRN",19,11797,1,3,0)
NOTE: When called from this option the station number to use for the 
"KRN",19,11797,1,4,0)
active radiology procedures will be pulled from the parameter
"KRN",19,11797,1,5,0)
SAMI DEFAULT STATION NUMBER
"KRN",19,11797,25)
RADPROCD^SAMIVSTA(6100)
"KRN",19,11797,200.9)
y
"KRN",19,11797,"U")
PULL ALL RADIOLOGY PROCEDURES
"KRN",19,11798,-1)
0^14
"KRN",19,11798,0)
SAMI PULL RADIOLOGY STAFF^Pull radiology staff personnel^^R^^^^^^^^
"KRN",19,11798,1,0)
^^1^1^3181001^
"KRN",19,11798,1,1,0)
Pull all active radiology staff personnel.
"KRN",19,11798,25)
RADSTAFF^SAMIVSTA
"KRN",19,11798,200.9)
y
"KRN",19,11798,"U")
PULL RADIOLOGY STAFF PERSONNEL
"KRN",19,11799,-1)
0^13
"KRN",19,11799,0)
SAMI PULL RADIOLOGY RESIDENTS^Pull radiology resident personnel^^R^^^^^^^^
"KRN",19,11799,1,0)
^^1^1^3181001^
"KRN",19,11799,1,1,0)
Pull all active radiology residents.
"KRN",19,11799,25)
RADRESDT^SAMIVSTA
"KRN",19,11799,200.9)
y
"KRN",19,11799,"U")
PULL RADIOLOGY RESIDENT PERSON
"KRN",19,11800,-1)
0^15
"KRN",19,11800,0)
SAMI PULL RADIOLOGY TECHS^Pull all radiology technologists^^R^^^^^^^^
"KRN",19,11800,1,0)
^^1^1^3181001^
"KRN",19,11800,1,1,0)
Pull all active radiology technologists
"KRN",19,11800,25)
RADTECHS^SAMIVSTA
"KRN",19,11800,200.9)
y
"KRN",19,11800,"U")
PULL ALL RADIOLOGY TECHNOLOGIS
"KRN",19,11801,-1)
0^11
"KRN",19,11801,0)
SAMI PULL RADIOLOGY MODIFIERS^Pull all radiology modifiers^^R^^^^^^^^
"KRN",19,11801,1,0)
^^1^1^3181001^
"KRN",19,11801,1,1,0)
Pull all active radiology modifiers
"KRN",19,11801,25)
RADMODS^SAMIVSTA
"KRN",19,11801,200.9)
y
"KRN",19,11801,"U")
PULL ALL RADIOLOGY MODIFIERS
"KRN",19,11802,-1)
0^10
"KRN",19,11802,0)
SAMI PULL RADIOLOGY DX CODES^Pull all radiology diagnostic codes^^R^^^^^^^^
"KRN",19,11802,1,0)
^^1^1^3181001^
"KRN",19,11802,1,1,0)
Pull all active radiology diagnostic codes
"KRN",19,11802,25)
RADDXCDS^SAMIVSTA
"KRN",19,11802,200.9)
y
"KRN",19,11802,"U")
PULL ALL RADIOLOGY DIAGNOSTIC 
"KRN",19,11803,-1)
0^21
"KRN",19,11803,0)
SAMI TOGGLE VAPALS PASSWORD ID^Turn VAPALS password ID On or Off^^R^^^^^^^^
"KRN",19,11803,1,0)
^19.06^2^2^3181207^^^
"KRN",19,11803,1,1,0)
Option allows user to turn on or off the requirement that a user sign 
"KRN",19,11803,1,2,0)
into VAPALS with their VistA access and verity codes.
"KRN",19,11803,25)
STONOFF^SAMILOG
"KRN",19,11803,"U")
TURN VAPALS PASSWORD ID ON OR 
"KRN",19,11999,-1)
0^22
"KRN",19,11999,0)
SAMI TURN OFF MAN REG^SAMI TURN OFF MANUAL REGISTRATION^^R^^^^^^^^
"KRN",19,11999,1,0)
^^1^1^3200110^
"KRN",19,11999,1,1,0)
Turns off manual registration in VAPALS
"KRN",19,11999,25)
MEOFF^SAMILOG
"KRN",19,11999,"U")
SAMI TURN OFF MANUAL REGISTRAT
"KRN",19,12000,-1)
0^23
"KRN",19,12000,0)
SAMI TURN ON MAN REG^SAMI TURN ON MANUAL REGISTRATION^^R^^^^^^^^
"KRN",19,12000,1,0)
^^1^1^3200110^
"KRN",19,12000,1,1,0)
Turns on manual registration in VAPALS
"KRN",19,12000,25)
MEON^SAMILOG
"KRN",19,12000,"U")
SAMI TURN ON MANUAL REGISTRATI
"KRN",19,12030,-1)
0^19
"KRN",19,12030,0)
SAMI SITE USER MAP^SITE USER MAP^^P^^^^^^^^SAMI
"KRN",19,12030,1,0)
^19.06^1^1^3200325^^
"KRN",19,12030,1,1,0)
PRINTS THE MAP OF SITES AND USERS ASSIGNED TO EACH SITE
"KRN",19,12030,60)
SAMI(311.12,
"KRN",19,12030,62)
0
"KRN",19,12030,63)
[SAMI SITE USER MAP]
"KRN",19,12030,64)
[SAMI SITE USER SORT]
"KRN",19,12030,65)

"KRN",19,12030,66)

"KRN",19,12030,"U")
SITE USER MAP
"KRN",19,12031,-1)
0^24
"KRN",19,12031,0)
SAMI USER^SAMI USER CONTEXT^^B^^^^^^^^SAMI
"KRN",19,12031,1,0)
^^1^1^3200325^
"KRN",19,12031,1,1,0)
USER CONTEXT FOR SAMI VAPALS-ELCAP APPLICATIONS
"KRN",19,12031,99.1)
65515,29292
"KRN",19,12031,"U")
SAMI USER CONTEXT
"KRN",19,12032,-1)
0^3
"KRN",19,12032,0)
SAMI ENTER EDIT SITE^ENTER EDIT SITE^^E^^^^^^^^SAMI
"KRN",19,12032,1,0)
^19.06^1^1^3200419^^^
"KRN",19,12032,1,1,0)
CREATE OR EDIT VAPALS SITE
"KRN",19,12032,30)
SAMI(311.12,
"KRN",19,12032,31)
AEMQL
"KRN",19,12032,50)
SAMI(311.12,
"KRN",19,12032,51)
[SAMI ENTER/EDIT SITE]
"KRN",19,12032,"U")
ENTER EDIT SITE
"KRN",19,12033,-1)
0^18
"KRN",19,12033,0)
SAMI SITE AND USER MENU^SITE AND USER MENU^^M^^^^^^^^SAMI
"KRN",19,12033,1,0)
^19.06^1^1^3200516^^^^
"KRN",19,12033,1,1,0)
MENU OF SITE AND USER MANAGEMENT OPTIONS
"KRN",19,12033,10,0)
^19.01IP^10^10
"KRN",19,12033,10,2,0)
12030^SI
"KRN",19,12033,10,2,"^")
SAMI SITE USER MAP
"KRN",19,12033,10,5,0)
12032^SE
"KRN",19,12033,10,5,"^")
SAMI ENTER EDIT SITE
"KRN",19,12033,10,6,0)
12036^LI
"KRN",19,12033,10,6,"^")
SAMI LIST SITES
"KRN",19,12033,10,7,0)
12037^AC
"KRN",19,12033,10,7,"^")
SAMI ACTIVATE DEACTIVATE SITE
"KRN",19,12033,10,10,0)
12035^SU
"KRN",19,12033,10,10,"^")
SAMI SUPERUSER ENTER/EDIT
"KRN",19,12033,99)
65515,28015
"KRN",19,12033,"U")
SITE AND USER MENU
"KRN",19,12034,-1)
0^6
"KRN",19,12034,0)
SAMI MAIN MENU^SAMI MAIN MENU^^M^^^^^^^^SAMI
"KRN",19,12034,1,0)
^^1^1^3200410^
"KRN",19,12034,1,1,0)
MAIN MENU OF ADMIN OPTIONS FOR VAPALS
"KRN",19,12034,10,0)
^19.01IP^1^1
"KRN",19,12034,10,1,0)
12033^SI
"KRN",19,12034,10,1,"^")
SAMI SITE AND USER MENU
"KRN",19,12034,99)
65515,27727
"KRN",19,12034,"U")
SAMI MAIN MENU
"KRN",19,12035,-1)
0^20
"KRN",19,12035,0)
SAMI SUPERUSER ENTER/EDIT^SUPERUSER ENTER/EDIT^^E^^^^^^^^SAMI
"KRN",19,12035,1,0)
^^2^2^3200410^
"KRN",19,12035,1,1,0)
ENTER/EDIT
"KRN",19,12035,1,2,0)
SUPERUSER FILE
"KRN",19,12035,30)
SAMI(311.13,
"KRN",19,12035,31)
AEMQL
"KRN",19,12035,50)
SAMI(311.13,
"KRN",19,12035,51)
[SAMI SUPERUSER ENTER/EDIT]
"KRN",19,12035,"U")
SUPERUSER ENTER/EDIT
"KRN",19,12036,-1)
0^5
"KRN",19,12036,0)
SAMI LIST SITES^LIST SITES^^P^^^^^^^^SAMI
"KRN",19,12036,60)
SAMI(311.12,
"KRN",19,12036,62)
0
"KRN",19,12036,63)
[SAMI LIST SITES]
"KRN",19,12036,64)
[SAMI SORT SITES]
"KRN",19,12036,65)

"KRN",19,12036,66)

"KRN",19,12036,"U")
LIST SITES
"KRN",19,12037,-1)
0^1
"KRN",19,12037,0)
SAMI ACTIVATE DEACTIVATE SITE^ACTIVATE DEACTIVATE SITE^^E^^^^^^^^SAMI
"KRN",19,12037,1,0)
^^1^1^3200420^
"KRN",19,12037,1,1,0)
OPTION TO MARK A SITE ACTIVE OR INACTIVE
"KRN",19,12037,30)
SAMI(311.12,
"KRN",19,12037,31)
AEMQ
"KRN",19,12037,50)
SAMI(311.12,
"KRN",19,12037,51)
[SAMI SITE ACTIVATE DEACTIVATE]
"KRN",19,12037,"U")
ACTIVATE DEACTIVATE SITE
"KRN",19,12038,-1)
0^4
"KRN",19,12038,0)
SAMI EXTRACT CSV DATA^EXTRACT CSV DATA^^R^^^^^^^^SAMI^^
"KRN",19,12038,1,0)
^^1^1^3200820^
"KRN",19,12038,1,1,0)
EXTRACT FORM DATA IN CSV FILES
"KRN",19,12038,20)

"KRN",19,12038,25)
EN^SAMICSV
"KRN",19,12038,"U")
EXTRACT CSV DATA
"KRN",19,12039,-1)
0^2
"KRN",19,12039,0)
SAMI CHANGE PATIENT SITE^Change patient site^^R^^^^^^^^SAMI
"KRN",19,12039,1,0)
^^1^1^3200824^
"KRN",19,12039,1,1,0)
Option to move a patient from one site to another
"KRN",19,12039,25)
EN^SAMIMOV
"KRN",19,12039,"U")
CHANGE PATIENT SITE
"KRN",101,5271,-1)
0^3
"KRN",101,5271,0)
SAMI RECV TIU EVENT^SAMI RECV TIU EVENT^^E^^^^^^^^
"KRN",101,5271,1,0)
^^1^1^3190927^^
"KRN",101,5271,1,1,0)
Receive TIU with patient data from VA server
"KRN",101,5271,99)
65343,55051
"KRN",101,5271,770)
SAMI RECV TIU EVNT^^MDM^T02^^^^AL^NE^2.4^
"KRN",101,5271,775,0)
^101.0775PA^1^1
"KRN",101,5271,775,1,0)
5272
"KRN",101,5271,775,1,"^")
SAMI RECV TIU SUBSC
"KRN",101,5272,-1)
0^4
"KRN",101,5272,0)
SAMI RECV TIU SUBSC^SAMI RECV TIU SUBSC^^S^^^^^^^^
"KRN",101,5272,1,0)
^^1^1^3190927^
"KRN",101,5272,1,1,0)
Subscriber for receiving TIU patient lists from VA
"KRN",101,5272,99)
65343,55051
"KRN",101,5272,770)
^SAMI RECV TIU SUBS^^T02^^^SAMITIUR^^^^ACK
"KRN",101,5272,771)
D EN^SAMITIU
"KRN",101,5272,773)
1^1
"KRN",101,5273,-1)
0^2
"KRN",101,5273,0)
SAMI RECV ADT SUBS^SAMI RECV ADT SUBS^^S^^^^^^^^
"KRN",101,5273,1,0)
^^3^3^3190930^^
"KRN",101,5273,1,1,0)

"KRN",101,5273,1,2,0)
Subscriber for receiving ADT messages from VA with updates for VAPALS
"KRN",101,5273,1,3,0)
patient-lookup graph
"KRN",101,5273,99)
65343,55051
"KRN",101,5273,770)
^SAMI RECV ADT SUBS^^A08^^^SAMIADTR^^^^ACK
"KRN",101,5273,771)
D TESTERR^SAMIADT
"KRN",101,5273,773)
1^1
"KRN",101,5274,-1)
0^1
"KRN",101,5274,0)
SAMI RECV ADT EVENT^SAMI RECV ADT EVENT^^E^^^^^^^^
"KRN",101,5274,1,0)
^^1^1^3190927^
"KRN",101,5274,1,1,0)
Event listener for ADT messages to update VAPALS patient-lookup graph
"KRN",101,5274,99)
65343,55051
"KRN",101,5274,770)
SAMI RECV ADT EVNT^^ADT^A08^^^^AL^NE^2.4^
"KRN",101,5274,775,0)
^101.0775PA^1^1
"KRN",101,5274,775,1,0)
5273
"KRN",101,5274,775,1,"^")
SAMI RECV ADT SUBS
"KRN",771,266,-1)
0^3
"KRN",771,266,0)
SAMI RECV TIU EVNT^i^PHOENIX^^^^USA
"KRN",771,266,"EC")
~|\&
"KRN",771,266,"FS")
^
"KRN",771,267,-1)
0^4
"KRN",771,267,0)
SAMI RECV TIU SUBS^i^VAPALS^^^^USA
"KRN",771,267,"EC")
~|\&
"KRN",771,267,"FS")
^
"KRN",771,268,-1)
0^1
"KRN",771,268,0)
SAMI RECV ADT EVNT^a^PHOENIX^^^^USA
"KRN",771,268,"EC")
~|\&
"KRN",771,268,"FS")
^
"KRN",771,269,-1)
0^2
"KRN",771,269,0)
SAMI RECV ADT SUBS^a^VISTA HEALTH CARE^^^^USA
"KRN",771,269,"EC")
~|\&
"KRN",771,269,"FS")
^
"KRN",870,83,-1)
0^3
"KRN",870,83,0)
SAMITIUR^^TCP^^^^^^^^^^^^^^^^^^10
"KRN",870,83,100)

"KRN",870,83,400)
^^S^N^^^^^
"KRN",870,84,-1)
0^4
"KRN",870,84,0)
SAMITIUS^^TCP^^^^^^^^^^^^^^^^^^10
"KRN",870,84,3,0)
^^1^1^3190917^
"KRN",870,84,3,1,0)
Link sending TIU documents to VA Server
"KRN",870,84,200)
^5
"KRN",870,84,400)
^^C^N^^^^^
"KRN",870,85,-1)
0^2
"KRN",870,85,0)
SAMIADTR^^TCP^^^^^^^^^^^^^^^^^^10
"KRN",870,85,3,0)
^^3^3^3200203^^
"KRN",870,85,3,1,0)

"KRN",870,85,3,2,0)
HL7 link for incoming ADT messages to update the VAPALS patient-lookup
"KRN",870,85,3,3,0)
graph
"KRN",870,85,400)
^5900^S^^^^^^
"KRN",870,88,-1)
0^1
"KRN",870,88,0)
SAMI-ORR^^TCP^^^^^^^^^^^^^^^^^^10
"KRN",870,88,3,0)
^^1^1^3200203^
"KRN",870,88,3,1,0)
LIND to send Veteran eligibility for LSS program ORR
"KRN",870,88,200)
^3^^120^120^^^^^I
"KRN",870,88,400)
10.148.214.132^5500^C^N^^^^^
"KRN",8989.51,839,-1)
0^8
"KRN",8989.51,839,0)
SAMI IP ADDRESS^SAMI IP ADDRESS^0
"KRN",8989.51,839,1)
F^^Enter the IP address of VA-PALS server
"KRN",8989.51,839,3)
I Y?1.3N1"."1.3N1"."1.3N1"."1.3N
"KRN",8989.51,839,8)

"KRN",8989.51,839,20,0)
^^1^1^3180716^
"KRN",8989.51,839,20,1,0)
The IP address of VA-PALS server
"KRN",8989.51,839,30,0)
^8989.513I^1^1
"KRN",8989.51,839,30,1,0)
1^4.2
"KRN",8989.51,840,-1)
0^10
"KRN",8989.51,840,0)
SAMI PORT^SAMI PORT^0
"KRN",8989.51,840,1)
F^^Enter the PORT of the VA-PALS server
"KRN",8989.51,840,20,0)
^^1^1^3180716^
"KRN",8989.51,840,20,1,0)
The PORT of the VA-PALS server
"KRN",8989.51,840,30,0)
^8989.513I^1^1
"KRN",8989.51,840,30,1,0)
1^4.2
"KRN",8989.51,841,-1)
0^1
"KRN",8989.51,841,0)
SAMI ACCVER^SAMI ACCVER^0
"KRN",8989.51,841,1)
F
"KRN",8989.51,841,20,0)
^8989.512^3^3^3191207^^^^
"KRN",8989.51,841,20,1,0)
The Access and Verify of the USER who has the necessary privileges and 
"KRN",8989.51,841,20,2,0)
context menus to build a TIU note.
"KRN",8989.51,841,20,3,0)
e.g. ACCESSCODE;VERIFYCODE
"KRN",8989.51,841,30,0)
^8989.513I^1^1
"KRN",8989.51,841,30,1,0)
1^4.2
"KRN",8989.51,842,-1)
0^9
"KRN",8989.51,842,0)
SAMI NOTE TITLE PRINT NAME^SAMI NOTE TITLE PRINT NAME^0
"KRN",8989.51,842,1)
F^^Enter the note title PRINT NAME
"KRN",8989.51,842,20,0)
^^4^4^3180716^
"KRN",8989.51,842,20,1,0)
Enter the PRINT NAME of the note title to use for TIU notes generated 
"KRN",8989.51,842,20,2,0)
through VA-PALS.  The PRINT NAME is more helpful than the NAME as there 
"KRN",8989.51,842,20,3,0)
may be duplicates using just the name (e.g. "LUNG CANCER SCREENING", and 
"KRN",8989.51,842,20,4,0)
"LUNG CANCER SCREENING PROGRAM" )
"KRN",8989.51,842,30,0)
^8989.513I^1^1
"KRN",8989.51,842,30,1,0)
1^4.2
"KRN",8989.51,843,-1)
0^4
"KRN",8989.51,843,0)
SAMI DEFAULT PROVIDER DUZ^SAMI DEFAULT PROVIDER DUZ^0
"KRN",8989.51,843,1)
F^^Enter the DUZ of a default provider writing tiu notes
"KRN",8989.51,843,20,0)
^^1^1^3180716^
"KRN",8989.51,843,20,1,0)
The DUZ of the default provider to file a tiu note
"KRN",8989.51,843,30,0)
^8989.513I^1^1
"KRN",8989.51,843,30,1,0)
1^4.2
"KRN",8989.51,844,-1)
0^3
"KRN",8989.51,844,0)
SAMI DEFAULT CLINIC IEN^SAMI DEFAULT CLINIC IEN^0^^
"KRN",8989.51,844,1)
F^^Enter the IEN into file 44 of the default clinic
"KRN",8989.51,844,20,0)
^^2^2^3180717^
"KRN",8989.51,844,20,1,0)
The IEN into file #44 of the default clinic to use when VA-PALS is 
"KRN",8989.51,844,20,2,0)
building a tiu note.
"KRN",8989.51,844,30,0)
^8989.513I^1^1
"KRN",8989.51,844,30,1,0)
1^4.2
"KRN",8989.51,845,-1)
0^13
"KRN",8989.51,845,0)
SAMI SYSTEM TEST PATIENT DFN^SAMI SYSTEM TEST PATIENT DFN^0
"KRN",8989.51,845,1)
F
"KRN",8989.51,845,20,0)
^^4^4^3180913^
"KRN",8989.51,845,20,1,0)
Enter the DFN of a patient that may be used for UNIT TESTING and other 
"KRN",8989.51,845,20,2,0)
processes where we need a safe test patient on the VA server.  If SAMI IP 
"KRN",8989.51,845,20,3,0)
ADDRESS parameter is empty this DFN will be used for testing on the 
"KRN",8989.51,845,20,4,0)
Client.
"KRN",8989.51,845,30,0)
^8989.513I^1^1
"KRN",8989.51,845,30,1,0)
1^4.2
"KRN",8989.51,846,-1)
0^5
"KRN",8989.51,846,0)
SAMI DEFAULT STATION NUMBER^SAMI DEFAULT STATION NUMBER^0^^
"KRN",8989.51,846,1)
F
"KRN",8989.51,846,6)

"KRN",8989.51,846,20,0)
^^2^2^3181001^
"KRN",8989.51,846,20,1,0)
This is the default station number for the server's institution.  This is 
"KRN",8989.51,846,20,2,0)
needed to be able to pull up active radiology procedures
"KRN",8989.51,846,30,0)
^8989.513I^1^1
"KRN",8989.51,846,30,1,0)
1^4.2
"KRN",8989.51,847,-1)
0^14
"KRN",8989.51,847,0)
SAMI URBAN/RURAL INDEX VALUE^SAMI URBAN/RURAL INDEX VALUE^0
"KRN",8989.51,847,1)
F
"KRN",8989.51,847,20,0)
^^1^1^3181101^
"KRN",8989.51,847,20,1,0)
The ruca30 value above whch represents a rural location
"KRN",8989.51,847,30,0)
^8989.513I^1^1
"KRN",8989.51,847,30,1,0)
1^4.2
"KRN",8989.51,848,-1)
0^12
"KRN",8989.51,848,0)
SAMI SID PREFIX^SAMI SID PREFIX^0
"KRN",8989.51,848,1)
F
"KRN",8989.51,848,20,0)
^^1^1^3181105^
"KRN",8989.51,848,20,1,0)
The 3-character prefix to use when building a new sid
"KRN",8989.51,848,30,0)
^8989.513I^1^1
"KRN",8989.51,848,30,1,0)
1^4.2
"KRN",8989.51,849,-1)
0^7
"KRN",8989.51,849,0)
SAMI IGNORE PATIENT FILE^SAMI IGNORE PATIENT FILE^0
"KRN",8989.51,849,1)
F
"KRN",8989.51,849,20,0)
^^4^4^3190723^
"KRN",8989.51,849,20,1,0)
If this parameter is set to 1 (yes), then patient information is 
"KRN",8989.51,849,20,2,0)
notpulled from the patient (file #2) file, but directly from 
"KRN",8989.51,849,20,3,0)
the"patient-lookup" graph.  This parameter effects the functioning of 
"KRN",8989.51,849,20,4,0)
thePTINFO^SAMIVSTA call.
"KRN",8989.51,849,30,0)
^8989.513I^1^1
"KRN",8989.51,849,30,1,0)
1^4.2
"KRN",8989.51,879,-1)
0^2
"KRN",8989.51,879,0)
SAMI ALLOW MANUAL ENTRY^SAMI ALLOW MANUAL ENTRY^0
"KRN",8989.51,879,1)
F
"KRN",8989.51,879,20,0)
^^2^2^3200110^
"KRN",8989.51,879,20,1,0)
Parameter to determin whether manual registration will be allowed.
"KRN",8989.51,879,20,2,0)
0 = no, 1 = yes
"KRN",8989.51,879,30,0)
^8989.513I^1^1
"KRN",8989.51,879,30,1,0)
1^4.2
"KRN",8989.51,880,-1)
0^6
"KRN",8989.51,880,0)
SAMI FORM FIELDS DEF PATH^SAMI FORM FIELDS DEFINITION TSV PATH^0
"KRN",8989.51,880,1)
F
"KRN",8989.51,880,20,0)
^^1^1^3200117^
"KRN",8989.51,880,20,1,0)
The path to a a TSV file that defines the fields for a single web form
"KRN",8989.51,880,30,0)
^8989.513I^1^1
"KRN",8989.51,880,30,1,0)
1^4.2
"KRN",8989.51,881,-1)
0^11
"KRN",8989.51,881,0)
SAMI PT IMPORT PATH^SAMI PATIENT IMPORT TSV PATH^0
"KRN",8989.51,881,1)
F
"KRN",8989.51,881,20,0)
^8989.512^2^2^3200117^^
"KRN",8989.51,881,20,1,0)
The path to a TSV file containing data with which to populate the 
"KRN",8989.51,881,20,2,0)
patient-lookup graph.
"KRN",8989.51,881,30,0)
^8989.513I^1^1
"KRN",8989.51,881,30,1,0)
1^4.2
"MBREQ")
0
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",13,870)
870;13;1;;HLLL^XPDTA1;;HLLLE^XPDIA1;;;HLLLDEL^XPDIA1(%)
"ORD",13,870,0)
HL LOGICAL LINK
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",230,-1)
1^1
"PKG",230,0)
SAMI^SAMI^SCREENING APPLICATIONS MANAGEMENT - IELCAP
"PKG",230,22,0)
^9.49I^1^1
"PKG",230,22,1,0)
18.0^3191203
"PKG",230,22,1,"PAH",1,0)
13^3210818
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
101
"RTN","SAMIADMN")
0^1^B70880775
"RTN","SAMIADMN",1,0)
SAMIADMN ; ven/arc - IELCAP: Admin tools ;Jan 17, 2020@13:46
"RTN","SAMIADMN",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIADMN",3,0)
 ;
"RTN","SAMIADMN",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIADMN",5,0)
 ;
"RTN","SAMIADMN",6,0)
 ; Primary development:
"RTN","SAMIADMN",7,0)
 ;
"RTN","SAMIADMN",8,0)
 ; @primary-dev: Alexis Carlson (arc)
"RTN","SAMIADMN",9,0)
 ; @additional-dev: Larry Carlson (lgc)
"RTN","SAMIADMN",10,0)
 ; @additional-dev: George Lilly (gpl)
"RTN","SAMIADMN",11,0)
 ; @additional-dev: Linda M. R. Yaw (lmry)
"RTN","SAMIADMN",12,0)
 ; Primary development organization: Vista Expertise Network (VEN)
"RTN","SAMIADMN",13,0)
 ;
"RTN","SAMIADMN",14,0)
 ; @change-log
"RTN","SAMIADMN",15,0)
 ;   2018-05-03 ven/arc: Create entry point to clear M Web Server files cache
"RTN","SAMIADMN",16,0)
 ;   2018-07-01 ven/arc: added SETELCAP and SETLUNGRADS to switch between Ct Evaluation
"RTN","SAMIADMN",17,0)
 ;     forms
"RTN","SAMIADMN",18,0)
 ;   2018-08-14 ven/arc: web services for setlrads and setelcap, fix to setelcap and 
"RTN","SAMIADMN",19,0)
 ;     setlungrads web services
"RTN","SAMIADMN",20,0)
 ;   2018-08-16 ven/arc: adding quotes to json, return valid json and added /ctversion
"RTN","SAMIADMN",21,0)
 ;   2018-08-20 ven/gpl: fixed but in /ctversion
"RTN","SAMIADMN",22,0)
 ;   2018-12-06 ven/lmry: minor edits for SAC compliance
"RTN","SAMIADMN",23,0)
 ;   2018-12-11 ven/lgc: update routines for SAC compliance
"RTN","SAMIADMN",24,0)
 ;   2018-12-27 ven/lgc: update routines for SAC compliance
"RTN","SAMIADMN",25,0)
 ;   2019-01-22 ven/lgc: add license info and edit for lower case initials
"RTN","SAMIADMN",26,0)
 ;   2019-03-12 ven/lmry: Spell out commands, add table of contents, few format changes, 
"RTN","SAMIADMN",27,0)
 ;     also noted routines used for debugging, added history, added gpl, lgc, me to devs
"RTN","SAMIADMN",28,0)
 ;   2019-10-11 ven/arc : Add entry point DODD
"RTN","SAMIADMN",29,0)
 ;
"RTN","SAMIADMN",30,0)
 quit  ; No entry from top
"RTN","SAMIADMN",31,0)
 ;
"RTN","SAMIADMN",32,0)
 ;@contents
"RTN","SAMIADMN",33,0)
 ; CLRWEB ; Clear the M Web Server files cache
"RTN","SAMIADMN",34,0)
 ; SETELCAP() ; set VA-PALS to use the ELCAP version of the Ct Evaluation form--for 
"RTN","SAMIADMN",35,0)
 ;   debugging
"RTN","SAMIADMN",36,0)
 ; SETLGRDS() ; set VA-PALS to use the LungRads version of the Ct Evaluation form--
"RTN","SAMIADMN",37,0)
 ;   for debugging
"RTN","SAMIADMN",38,0)
 ; WSSTELCP(rtn,filter) ; set VA-PALS to use the ELCAP version of the Ct Evaluation form
"RTN","SAMIADMN",39,0)
 ; WSSTLRAD(rtn,filter) ; set VA-PALS to use the LungRads version of the Ct Evaluation form
"RTN","SAMIADMN",40,0)
 ; WSCTVERS(rtn,filter) ; web service to return the current ctform version
"RTN","SAMIADMN",41,0)
 ; DODD ; Import TSV files to build form field DDs
"RTN","SAMIADMN",42,0)
 ;
"RTN","SAMIADMN",43,0)
CLRWEB ; Clear the M Web Server files cache
"RTN","SAMIADMN",44,0)
 ;ven/arc;test;procedure;dirty;silent;non-sac
"RTN","SAMIADMN",45,0)
 ;
"RTN","SAMIADMN",46,0)
 do purgegraph^%wd("html-cache")
"RTN","SAMIADMN",47,0)
 do purgegraph^%wd("seeGraph")
"RTN","SAMIADMN",48,0)
 do build^%yottagr
"RTN","SAMIADMN",49,0)
 ;
"RTN","SAMIADMN",50,0)
 quit  ; end of CLRWEB
"RTN","SAMIADMN",51,0)
 ;
"RTN","SAMIADMN",52,0)
 ;
"RTN","SAMIADMN",53,0)
SETELCAP() ; set VA-PALS to use the ELCAP version of the Ct Evaluation form--debugging
"RTN","SAMIADMN",54,0)
 new GLB,FN,IEN
"RTN","SAMIADMN",55,0)
 set FN=311.11
"RTN","SAMIADMN",56,0)
 set GLB=$name(^SAMI(311.11))
"RTN","SAMIADMN",57,0)
 set IEN=$order(@GLB@("B","vapals:ceform",""))
"RTN","SAMIADMN",58,0)
 if IEN="" do  quit  ;
"RTN","SAMIADMN",59,0)
 . write !,"Error, record vapals:ceform is not found in SAMI FORM MAPPING file!"
"RTN","SAMIADMN",60,0)
 new FDA
"RTN","SAMIADMN",61,0)
 set FDA(FN,IEN_",",2)="ctevaluation-elcap.html"
"RTN","SAMIADMN",62,0)
 new ZERR
"RTN","SAMIADMN",63,0)
 do UPDATE^DIE("","FDA","","ZERR")
"RTN","SAMIADMN",64,0)
 if $data(ZERR) do  quit  ;
"RTN","SAMIADMN",65,0)
 .; ZWR ZERR
"RTN","SAMIADMN",66,0)
 .; do ^ZTER
"RTN","SAMIADMN",67,0)
 quit
"RTN","SAMIADMN",68,0)
 ;
"RTN","SAMIADMN",69,0)
SETLGRDS() ; set VA-PALS to use the LungRads version of the Ct Evaluation form--debugging
"RTN","SAMIADMN",70,0)
 new GLB,FN,IEN
"RTN","SAMIADMN",71,0)
 set FN=311.11
"RTN","SAMIADMN",72,0)
 set GLB=$name(^SAMI(311.11))
"RTN","SAMIADMN",73,0)
 set IEN=$order(@GLB@("B","vapals:ceform",""))
"RTN","SAMIADMN",74,0)
 if IEN="" do  quit  ;
"RTN","SAMIADMN",75,0)
 . write !,"Error, record vapals:ceform is not found in SAMI FORM MAPPING file!"
"RTN","SAMIADMN",76,0)
 new FDA
"RTN","SAMIADMN",77,0)
 set FDA(FN,IEN_",",2)="ctevaluation.html"
"RTN","SAMIADMN",78,0)
 new ZERR
"RTN","SAMIADMN",79,0)
 do UPDATE^DIE("","FDA","","ZERR")
"RTN","SAMIADMN",80,0)
 if $data(ZERR) do  quit  ;
"RTN","SAMIADMN",81,0)
 .; ZWR ZERR
"RTN","SAMIADMN",82,0)
 .; do ^ZTER
"RTN","SAMIADMN",83,0)
 quit
"RTN","SAMIADMN",84,0)
 ;
"RTN","SAMIADMN",85,0)
WSSTELCP(rtn,filter) ; set VA-PALS to use the ELCAP version of the Ct Evaluation form
"RTN","SAMIADMN",86,0)
 new GLB,FN,IEN
"RTN","SAMIADMN",87,0)
 set FN=311.11
"RTN","SAMIADMN",88,0)
 set GLB=$name(^SAMI(311.11))
"RTN","SAMIADMN",89,0)
 set IEN=$order(@GLB@("B","vapals:ceform",""))
"RTN","SAMIADMN",90,0)
 if IEN="" do  quit  ;
"RTN","SAMIADMN",91,0)
 . ;write !,"Error, record vapals:ceform is not found in SAMI FORM MAPPING file!"
"RTN","SAMIADMN",92,0)
 . ;do ^ZTER
"RTN","SAMIADMN",93,0)
 new FDA
"RTN","SAMIADMN",94,0)
 set FDA(FN,IEN_",",2)="ctevaluation-elcap.html"
"RTN","SAMIADMN",95,0)
 new ZERR
"RTN","SAMIADMN",96,0)
 do UPDATE^DIE("","FDA","","ZERR")
"RTN","SAMIADMN",97,0)
 if $data(ZERR) do  quit  ;
"RTN","SAMIADMN",98,0)
 . ;ZWR ZERR
"RTN","SAMIADMN",99,0)
 . ;do ^ZTER
"RTN","SAMIADMN",100,0)
 set rtn="{""status"": ""ok""}"
"RTN","SAMIADMN",101,0)
 quit
"RTN","SAMIADMN",102,0)
 ;
"RTN","SAMIADMN",103,0)
WSSTLRAD(rtn,filter) ; set VA-PALS to use the LungRads version of the Ct Evaluation form
"RTN","SAMIADMN",104,0)
 new GLB,FN,IEN
"RTN","SAMIADMN",105,0)
 set FN=311.11
"RTN","SAMIADMN",106,0)
 set GLB=$name(^SAMI(311.11))
"RTN","SAMIADMN",107,0)
 set IEN=$order(@GLB@("B","vapals:ceform",""))
"RTN","SAMIADMN",108,0)
 if IEN="" do  quit  ;
"RTN","SAMIADMN",109,0)
 . ;write !,"Error, record vapals:ceform is not found in SAMI FORM MAPPING file!"
"RTN","SAMIADMN",110,0)
 . ;do ^ZTER
"RTN","SAMIADMN",111,0)
 new FDA
"RTN","SAMIADMN",112,0)
 set FDA(FN,IEN_",",2)="ctevaluation.html"
"RTN","SAMIADMN",113,0)
 new ZERR
"RTN","SAMIADMN",114,0)
 do UPDATE^DIE("","FDA","","ZERR")
"RTN","SAMIADMN",115,0)
 if $data(ZERR) do  quit  ;
"RTN","SAMIADMN",116,0)
 . ;ZWR ZERR
"RTN","SAMIADMN",117,0)
 . ;do ^ZTER
"RTN","SAMIADMN",118,0)
 set rtn="{""status"": ""ok""}"
"RTN","SAMIADMN",119,0)
 quit
"RTN","SAMIADMN",120,0)
 ;
"RTN","SAMIADMN",121,0)
WSCTVERS(rtn,filter) ; web service to return the current ctform version
"RTN","SAMIADMN",122,0)
 ;
"RTN","SAMIADMN",123,0)
 new fn,ver,ien
"RTN","SAMIADMN",124,0)
 set ien=$order(^SAMI(311.11,"B","vapals:ceform",""))
"RTN","SAMIADMN",125,0)
 quit:ien=""
"RTN","SAMIADMN",126,0)
 set fn=$$GET1^DIQ(311.11,ien_",",2)
"RTN","SAMIADMN",127,0)
 if fn["elcap" set ver="elcap"
"RTN","SAMIADMN",128,0)
 else  set ver="lungrads"
"RTN","SAMIADMN",129,0)
 set rtn="{""ctversion"": """_ver_"""}"
"RTN","SAMIADMN",130,0)
 quit
"RTN","SAMIADMN",131,0)
 ;
"RTN","SAMIADMN",132,0)
WINIT(method,urlpattern,routine) ; Add Web service
"RTN","SAMIADMN",133,0)
 ;Input
"RTN","SAMIADMN",134,0)
 ;  method        = HTTP VERB
"RTN","SAMIADMN",135,0)
 ;  urlpattern    = URI
"RTN","SAMIADMN",136,0)
 ;  routine       = EXECUTION ENDPOINT
"RTN","SAMIADMN",137,0)
 ;Exit
"RTN","SAMIADMN",138,0)
 ;  ien of new service in 17.6001
"RTN","SAMIADMN",139,0)
 quit:($get(method)="") 0
"RTN","SAMIADMN",140,0)
 quit:($get(urlpattern)="") 0
"RTN","SAMIADMN",141,0)
 quit:($get(routine)="") 0
"RTN","SAMIADMN",142,0)
 quit $$addService^%webutils(method,urlpattern,routine)
"RTN","SAMIADMN",143,0)
 ;
"RTN","SAMIADMN",144,0)
WDEL(method,urlpattern) ; Delete a Web service
"RTN","SAMIADMN",145,0)
 ;Input
"RTN","SAMIADMN",146,0)
 ;  method        = HTTP VERB
"RTN","SAMIADMN",147,0)
 ;  urlpattern    = URI
"RTN","SAMIADMN",148,0)
 ;Exit
"RTN","SAMIADMN",149,0)
 ;  none
"RTN","SAMIADMN",150,0)
 quit:($get(method)="")
"RTN","SAMIADMN",151,0)
 quit:($get(urlpattern)="")
"RTN","SAMIADMN",152,0)
 do deleteService^%webutils(method,urlpattern)
"RTN","SAMIADMN",153,0)
 quit
"RTN","SAMIADMN",154,0)
 ;
"RTN","SAMIADMN",155,0)
WINITA ; Build all production web services
"RTN","SAMIADMN",156,0)
 new method,urlpattern,routine,xstr,xcnt,xrslt
"RTN","SAMIADMN",157,0)
 if $data(%ut) set ^TMP("SAMIADMN","WINITA")=0
"RTN","SAMIADMN",158,0)
 f  s xcnt=$g(xcnt)+1,xstr=$text(PRODSERV+xcnt) q:(xstr["***END***")  do
"RTN","SAMIADMN",159,0)
 . set method=$p($piece(xstr,";;",2),",")
"RTN","SAMIADMN",160,0)
 . set urlpattern=$p($piece(xstr,";;",2),",",2)
"RTN","SAMIADMN",161,0)
 . set routine=$p($piece(xstr,";;",2),",",3)
"RTN","SAMIADMN",162,0)
 . set xrslt=$$WINIT^SAMIADMN(method,urlpattern,routine)
"RTN","SAMIADMN",163,0)
 . if '($get(xrslt)) do
"RTN","SAMIADMN",164,0)
 .. set ^TMP("SAMIADMN","WINITA")=1
"RTN","SAMIADMN",165,0)
 .. write !,!,xcnt," ",method," ",urlpattern," ",routine," FAILED",!
"RTN","SAMIADMN",166,0)
 quit
"RTN","SAMIADMN",167,0)
 ;
"RTN","SAMIADMN",168,0)
PRODSERV ;;
"RTN","SAMIADMN",169,0)
 ;;GET,ctversion,WSCTVERS^SAMIADMN,
"RTN","SAMIADMN",170,0)
 ;;GET,ptlookup/{search},WSPTLKUP^SAMIPTLK,
"RTN","SAMIADMN",171,0)
 ;;GET,ruralurbancount,WSGETRU^SAMIRU,
"RTN","SAMIADMN",172,0)
 ;;GET,setelcap,WSSTELCP^SAMIADMN,
"RTN","SAMIADMN",173,0)
 ;;GET,setlungrads,WSSTLRAD^SAMIADMN,
"RTN","SAMIADMN",174,0)
 ;;GET,vapals,WSHOME^SAMIHOM3,
"RTN","SAMIADMN",175,0)
 ;;GET,zipru/{zip},WSZIPRU^SAMIRU,
"RTN","SAMIADMN",176,0)
 ;;POST,vapals,WSVAPALS^SAMIHOM3,
"RTN","SAMIADMN",177,0)
 ;;GET,filesystem/*,FILESYS^%webapi,
"RTN","SAMIADMN",178,0)
 ;;GET,form/*,wsGetForm^%wf,
"RTN","SAMIADMN",179,0)
 ;;GET,global/{root},wsGLOBAL^KBAIVPR,
"RTN","SAMIADMN",180,0)
 ;;GET,graph/{graph},wsGetGraph^%wdgraph,
"RTN","SAMIADMN",181,0)
 ;;GET,gtree/{root},wsGtree^SYNVPR,
"RTN","SAMIADMN",182,0)
 ;;GET,r/{routine?.1"%25".32AN},R^%webapi,
"RTN","SAMIADMN",183,0)
 ;;GET,resources/*,FILESYS^%webapi,
"RTN","SAMIADMN",184,0)
 ;;GET,see/*,wssee^%yottagr,
"RTN","SAMIADMN",185,0)
 ;;GET,testptinfo,wsPTNFO^KBAIPTIN,
"RTN","SAMIADMN",186,0)
 ;;GET,vpr/{dfn},wsVPR^KBAIVPR,
"RTN","SAMIADMN",187,0)
 ;;GET,xml,XML^VPRJRSP,
"RTN","SAMIADMN",188,0)
 ;;POST,form/*,wsPostForm^%wf,
"RTN","SAMIADMN",189,0)
 ;;POST,postform/*,wsPostForm^%wf,
"RTN","SAMIADMN",190,0)
 ;;POST,sami/intake,wsPostForm^%yottaq,
"RTN","SAMIADMN",191,0)
 ;;GET,background,WSSBFORM^SAMIFORM,
"RTN","SAMIADMN",192,0)
 ;;GET,intake,WSSIFORM^SAMIFORM,
"RTN","SAMIADMN",193,0)
 ;;GET,ctevaluation,WSCEFORM^SAMIFORM,
"RTN","SAMIADMN",194,0)
 ;;***END***
"RTN","SAMIADMN",195,0)
 ;
"RTN","SAMIADMN",196,0)
 ;
"RTN","SAMIADMN",197,0)
DODD ; Import TSV files to build form field DDs
"RTN","SAMIADMN",198,0)
 new path set path=$$GET^XPAR("SYS","SAMI FORM FIELDS DEF PATH",,"Q")
"RTN","SAMIADMN",199,0)
 quit:path=""
"RTN","SAMIADMN",200,0)
 ;
"RTN","SAMIADMN",201,0)
 do PRSTSV^SAMIFF(path,"background.tsv","form fields - background")
"RTN","SAMIADMN",202,0)
 do PRSTSV^SAMIFF(path,"biopsy.tsv","form fields - biopsy")
"RTN","SAMIADMN",203,0)
 do PRSTSV^SAMIFF(path,"ct-evaluation.tsv","form fields - ct evaluation")
"RTN","SAMIADMN",204,0)
 do PRSTSV^SAMIFF(path,"follow-up.tsv","form fields - follow up")
"RTN","SAMIADMN",205,0)
 do PRSTSV^SAMIFF(path,"intake.tsv","form fields - intake")
"RTN","SAMIADMN",206,0)
 do PRSTSV^SAMIFF(path,"intervention.tsv","form fields - intervention")
"RTN","SAMIADMN",207,0)
 do PRSTSV^SAMIFF(path,"pet-evaluation.tsv","form fields - pet evaluation")
"RTN","SAMIADMN",208,0)
 do PRSTSV^SAMIFF(path,"register.tsv","form fields - register")
"RTN","SAMIADMN",209,0)
 ;
"RTN","SAMIADMN",210,0)
 quit  ; End of entry point DODD
"RTN","SAMIADMN",211,0)
 ;
"RTN","SAMIADMN",212,0)
 ;
"RTN","SAMIADMN",213,0)
DEVMSG(routine,type,message) ; Create a dev/test message in ^TMP
"RTN","SAMIADMN",214,0)
 ; @input
"RTN","SAMIADMN",215,0)
 ;   routine = routine, with or without entry point (optional)
"RTN","SAMIADMN",216,0)
 ;   type = type of message (optional)
"RTN","SAMIADMN",217,0)
 ;   message
"RTN","SAMIADMN",218,0)
 ;
"RTN","SAMIADMN",219,0)
 quit:$get(message)=""
"RTN","SAMIADMN",220,0)
 set routine=$get(routine)
"RTN","SAMIADMN",221,0)
 set type=$get(type)
"RTN","SAMIADMN",222,0)
 ;
"RTN","SAMIADMN",223,0)
 set msgSubscript="Dev Message"
"RTN","SAMIADMN",224,0)
 new timestamp set timestamp=$horolog
"RTN","SAMIADMN",225,0)
 new timeSubscript set timeSubscript=$piece(timestamp,",",2)
"RTN","SAMIADMN",226,0)
 ;
"RTN","SAMIADMN",227,0)
 set ^TMP(msgSubscript,$job,0,"TIME")=$piece($$HTE^XLFDT(timestamp,7),"@",2)
"RTN","SAMIADMN",228,0)
 set ^TMP(msgSubscript,$job,0,"ROUTINE")=routine
"RTN","SAMIADMN",229,0)
 set ^TMP(msgSubscript,$job,0,"TYPE")=type
"RTN","SAMIADMN",230,0)
 set ^TMP(msgSubscript,$job,0,"MESSAGE")=message
"RTN","SAMIADMN",231,0)
 ;
"RTN","SAMIADMN",232,0)
 set ^TMP(msgSubscript,$job,timeSubscript,"TIME")=$piece($$HTE^XLFDT(timestamp,7),"@",2)
"RTN","SAMIADMN",233,0)
 set ^TMP(msgSubscript,$job,timeSubscript,"ROUTINE")=routine
"RTN","SAMIADMN",234,0)
 set ^TMP(msgSubscript,$job,timeSubscript,"TYPE")=type
"RTN","SAMIADMN",235,0)
 set ^TMP(msgSubscript,$job,timeSubscript,"MESSAGE")=message
"RTN","SAMIADMN",236,0)
 ;
"RTN","SAMIADMN",237,0)
 quit  ; End of entry point DEVMSG
"RTN","SAMIADMN",238,0)
 ;
"RTN","SAMIADMN",239,0)
 ;
"RTN","SAMIADMN",240,0)
EOR ; End of routine SAMIADMN
"RTN","SAMIADMN",241,0)
 
"RTN","SAMIADT")
0^2^B39705702
"RTN","SAMIADT",1,0)
SAMIADT ;ven/arc/lgc - Handler for HL7 ADTs ;Jan 16, 2020@08:45
"RTN","SAMIADT",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIADT",3,0)
 ;
"RTN","SAMIADT",4,0)
 quit  ; No entry from top
"RTN","SAMIADT",5,0)
 ;
"RTN","SAMIADT",6,0)
 ;@license: see routine SAMIUL
"RTN","SAMIADT",7,0)
 ;
"RTN","SAMIADT",8,0)
 ; @section 0 primary development
"RTN","SAMIADT",9,0)
 ;
"RTN","SAMIADT",10,0)
 ; @routine-credits
"RTN","SAMIADT",11,0)
 ; @primary-dev:
"RTN","SAMIADT",12,0)
 ;   Alexis Carlson (arc)
"RTN","SAMIADT",13,0)
 ;     alexis.carlson@vistaexpertise.net
"RTN","SAMIADT",14,0)
 ;   Larry "poo" Carlson (lgc)
"RTN","SAMIADT",15,0)
 ;     larry@fiscientific.com
"RTN","SAMIADT",16,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIADT",17,0)
 ;   http://vistaexpertise.net
"RTN","SAMIADT",18,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIADT",19,0)
 ; @license: Apache 2.0
"RTN","SAMIADT",20,0)
 ;   https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIADT",21,0)
 ;
"RTN","SAMIADT",22,0)
 ; @last-updated: 2019-07-31T16:56Z
"RTN","SAMIADT",23,0)
 ; @application: SAMI
"RTN","SAMIADT",24,0)
 ; @version: 18.0
"RTN","SAMIADT",25,0)
 ; @patch-list: none yet
"RTN","SAMIADT",26,0)
 ;
"RTN","SAMIADT",27,0)
 ; @to-do
"RTN","SAMIADT",28,0)
 ;   Add label comments
"RTN","SAMIADT",29,0)
 ;
"RTN","SAMIADT",30,0)
 ; @change-log
"RTN","SAMIADT",31,0)
 ;   2019-03-22 ven/arc : Have PRSTSV report fields for which the number of
"RTN","SAMIADT",32,0)
 ;     values does not match the number of labels
"RTN","SAMIADT",33,0)
 ;   2019-07-31 arc/ven : Add entry points to expand and update what's in the
"RTN","SAMIADT",34,0)
 ;     patient-lookup graph, export the patient-lookup graph for Phoenix, and
"RTN","SAMIADT",35,0)
 ;     import a TSV to pre-populate the patient-lookup graph
"RTN","SAMIADT",36,0)
 ;
"RTN","SAMIADT",37,0)
 ; @section 1 code
"RTN","SAMIADT",38,0)
 ;
"RTN","SAMIADT",39,0)
 ;
"RTN","SAMIADT",40,0)
 quit  ; No entry from top
"RTN","SAMIADT",41,0)
 ;
"RTN","SAMIADT",42,0)
 ;
"RTN","SAMIADT",43,0)
TESTERR ; Test entry point
"RTN","SAMIADT",44,0)
 do ^ZTER
"RTN","SAMIADT",45,0)
 ;
"RTN","SAMIADT",46,0)
 quit  ; End of entry point TESTERR
"RTN","SAMIADT",47,0)
 ;
"RTN","SAMIADT",48,0)
 ;
"RTN","SAMIADT",49,0)
EN ; Primary entry point
"RTN","SAMIADT",50,0)
 ;
"RTN","SAMIADT",51,0)
 kill ^TMP("SAMI","ADT")
"RTN","SAMIADT",52,0)
 ;
"RTN","SAMIADT",53,0)
 new segtype set segtype=""
"RTN","SAMIADT",54,0)
 new segment set segment=""
"RTN","SAMIADT",55,0)
 ;
"RTN","SAMIADT",56,0)
 for  xecute HLNEXT quit:$get(HLNODE)=""  do
"RTN","SAMIADT",57,0)
 . set segtype=$extract(HLNODE,1,3)
"RTN","SAMIADT",58,0)
 . set segment=$extract(HLNODE,5,$length(HLNODE))
"RTN","SAMIADT",59,0)
 . if (segtype="MSH")!(segtype="PID") do @segtype@(segment)
"RTN","SAMIADT",60,0)
 ;
"RTN","SAMIADT",61,0)
 quit  ; End entry point EN
"RTN","SAMIADT",62,0)
 ;
"RTN","SAMIADT",63,0)
 ;
"RTN","SAMIADT",64,0)
PARSESEG(segment,segmentfields,graphfields) ;
"RTN","SAMIADT",65,0)
 ;
"RTN","SAMIADT",66,0)
 new separators
"RTN","SAMIADT",67,0)
 set separators("field")="^"
"RTN","SAMIADT",68,0)
 set separators("component")="~"
"RTN","SAMIADT",69,0)
 set separators("field repetition")="|"
"RTN","SAMIADT",70,0)
 set separators("sub-component")="&"
"RTN","SAMIADT",71,0)
 set separators("escape")="\"
"RTN","SAMIADT",72,0)
 ;
"RTN","SAMIADT",73,0)
 set graphfields("active duty")=""
"RTN","SAMIADT",74,0)
 set graphfields("address1")=""
"RTN","SAMIADT",75,0)
 set graphfields("address2")=""
"RTN","SAMIADT",76,0)
 set graphfields("address3")=""
"RTN","SAMIADT",77,0)
 set graphfields("age")="" ; We get DOB
"RTN","SAMIADT",78,0)
 set graphfields("city")=""
"RTN","SAMIADT",79,0)
 set graphfields("county")=""
"RTN","SAMIADT",80,0)
 set graphfields("dfn")=""
"RTN","SAMIADT",81,0)
 set graphfields("gender")="" ; M^MALE - we only get M (in sex)
"RTN","SAMIADT",82,0)
 set graphfields("icn")=""
"RTN","SAMIADT",83,0)
 set graphfields("last5")="" ; We get name and SSN
"RTN","SAMIADT",84,0)
 set graphfields("marital status")=""
"RTN","SAMIADT",85,0)
 set graphfields("phone")=""
"RTN","SAMIADT",86,0)
 set graphfields("saminame")=""
"RTN","SAMIADT",87,0)
 set graphfields("sbdob")=""
"RTN","SAMIADT",88,0)
 set graphfields("sensitive patient")=""
"RTN","SAMIADT",89,0)
 set graphfields("sex")="" ; M
"RTN","SAMIADT",90,0)
 set graphfields("sinamef")=""
"RTN","SAMIADT",91,0)
 set graphfields("sinamel")=""
"RTN","SAMIADT",92,0)
 set graphfields("ssn")=""
"RTN","SAMIADT",93,0)
 set graphfields("state")=""
"RTN","SAMIADT",94,0)
 set graphfields("zip")=""
"RTN","SAMIADT",95,0)
 ;
"RTN","SAMIADT",96,0)
 new node,subnode,field,component
"RTN","SAMIADT",97,0)
 set node=0
"RTN","SAMIADT",98,0)
 set field="",component=""
"RTN","SAMIADT",99,0)
 for  set node=$order(segmentfields(node)) quit:'node  do
"RTN","SAMIADT",100,0)
 . if $data(segmentfields(node))=11 do
"RTN","SAMIADT",101,0)
 . . set subnode=0
"RTN","SAMIADT",102,0)
 . . for  set subnode=$order(segmentfields(node,subnode)) quit:'subnode  do
"RTN","SAMIADT",103,0)
 . . . if $get(segmentfields(node,subnode))'="" do
"RTN","SAMIADT",104,0)
 . . . . set graphfields(segmentfields(node,subnode))=$piece($piece(segment,separators("field"),node),separators("component"),subnode)
"RTN","SAMIADT",105,0)
 . . . . if graphfields(segmentfields(node,subnode))="""""""""" set graphfields(segmentfields(node,subnode))=""
"RTN","SAMIADT",106,0)
 . else  do
"RTN","SAMIADT",107,0)
 . . if $get(segmentfields(node))'="" do
"RTN","SAMIADT",108,0)
 . . . set graphfields(segmentfields(node))=$piece(segment,separators("field"),node)
"RTN","SAMIADT",109,0)
 . . . if graphfields(segmentfields(node))="""""""""" set graphfields(segmentfields(node))=""
"RTN","SAMIADT",110,0)
 ;
"RTN","SAMIADT",111,0)
 ; Handle special cases
"RTN","SAMIADT",112,0)
 new countyien,county,ERR
"RTN","SAMIADT",113,0)
 if graphfields("sbdob")'="" set graphfields("age")=$$age^%th($$HL7TFM^XLFDT(graphfields("sbdob")))
"RTN","SAMIADT",114,0)
 if graphfields("county")'="" do
"RTN","SAMIADT",115,0)
 . set countyien=$$FIND1^DIC(5.13,,"B",graphfields("county"),,,"ERR")
"RTN","SAMIADT",116,0)
 . if '$data(ERR)&(countyien'=0) set county=$$GET1^DIQ(5.13,countyien,1,,,"ERR")
"RTN","SAMIADT",117,0)
 . if '$data(ERR)&(county'="") set graphfields("county")=county
"RTN","SAMIADT",118,0)
 set graphfields("dfn")=+graphfields("dfn")
"RTN","SAMIADT",119,0)
 set graphfields("last5")=$extract(graphfields("sinamel"),1)_$extract(graphfields("ssn"),6,9)
"RTN","SAMIADT",120,0)
 set graphfields("saminame")=graphfields("sinamel")_","_graphfields("sinamef")
"RTN","SAMIADT",121,0)
 if graphfields("sex")="F" set graphfields("gender")="F^FEMALE"
"RTN","SAMIADT",122,0)
 if graphfields("sex")="M" set graphfields("gender")="M^MALE"
"RTN","SAMIADT",123,0)
 ;
"RTN","SAMIADT",124,0)
 quit  ; End entry point PARSESEG
"RTN","SAMIADT",125,0)
 ;
"RTN","SAMIADT",126,0)
 ;
"RTN","SAMIADT",127,0)
MSH(segment) ;
"RTN","SAMIADT",128,0)
 ;
"RTN","SAMIADT",129,0)
 ; set ^TMP("SAMI","ADT","MSH")=segment
"RTN","SAMIADT",130,0)
 do:'($get(%ut)) ACK^SAMIHL7
"RTN","SAMIADT",131,0)
 ;
"RTN","SAMIADT",132,0)
 quit  ; End entry point MSH
"RTN","SAMIADT",133,0)
 ;
"RTN","SAMIADT",134,0)
 ;
"RTN","SAMIADT",135,0)
PID(segment) ;
"RTN","SAMIADT",136,0)
 ;
"RTN","SAMIADT",137,0)
 new segmentfields
"RTN","SAMIADT",138,0)
 set segmentfields(1)="address1"
"RTN","SAMIADT",139,0)
 set segmentfields(2)="icn"
"RTN","SAMIADT",140,0)
 set segmentfields(3)="dfn"
"RTN","SAMIADT",141,0)
 set segmentfields(5)=""
"RTN","SAMIADT",142,0)
 set segmentfields(5,1)="sinamel"
"RTN","SAMIADT",143,0)
 set segmentfields(5,2)="sinamef"
"RTN","SAMIADT",144,0)
 set segmentfields(7)="sbdob"
"RTN","SAMIADT",145,0)
 set segmentfields(8)="sex" ; Use this for sex and expand for gender
"RTN","SAMIADT",146,0)
 set segmentfields(11)=""
"RTN","SAMIADT",147,0)
 set segmentfields(11,1)="address1"
"RTN","SAMIADT",148,0)
 set segmentfields(11,3)="city"
"RTN","SAMIADT",149,0)
 set segmentfields(11,4)="state"
"RTN","SAMIADT",150,0)
 set segmentfields(11,5)="zip"
"RTN","SAMIADT",151,0)
 set segmentfields(12)="county"
"RTN","SAMIADT",152,0)
 set segmentfields(13)="phone"
"RTN","SAMIADT",153,0)
 set segmentfields(19)="ssn"
"RTN","SAMIADT",154,0)
 ;
"RTN","SAMIADT",155,0)
 new graphfields
"RTN","SAMIADT",156,0)
 do PARSESEG(segment,.segmentfields,.graphfields)
"RTN","SAMIADT",157,0)
 ;
"RTN","SAMIADT",158,0)
 ; merge ^TMP("SAMI","ADT","PID")=graphfields
"RTN","SAMIADT",159,0)
 do UPDTPTL^SAMIHL7(.graphfields)
"RTN","SAMIADT",160,0)
 ;
"RTN","SAMIADT",161,0)
 quit  ; End of entry point PID
"RTN","SAMIADT",162,0)
 ;
"RTN","SAMIADT",163,0)
 ;
"RTN","SAMIADT",164,0)
EOR ; End of routine SAMIADT
"RTN","SAMIADT",165,0)
 
"RTN","SAMICAS2")
0^3^B445469337
"RTN","SAMICAS2",1,0)
SAMICAS2 ;ven/gpl - case review cont ;2021-08-09t17:03z
"RTN","SAMICAS2",2,0)
 ;;18.0;SAMI;**1,5,9,12**;2020-01;Build 1
"RTN","SAMICAS2",3,0)
 ;;18.12
"RTN","SAMICAS2",4,0)
 ;
"RTN","SAMICAS2",5,0)
 ; SAMICAS2 contains ppis and other subroutines to support processing
"RTN","SAMICAS2",6,0)
 ; of the VAPALS case review page.
"RTN","SAMICAS2",7,0)
 ;
"RTN","SAMICAS2",8,0)
 quit  ; no entry from top
"RTN","SAMICAS2",9,0)
 ;
"RTN","SAMICAS2",10,0)
 ;
"RTN","SAMICAS2",11,0)
 ;
"RTN","SAMICAS2",12,0)
 ;@section 0 primary development
"RTN","SAMICAS2",13,0)
 ;
"RTN","SAMICAS2",14,0)
 ;
"RTN","SAMICAS2",15,0)
 ;
"RTN","SAMICAS2",16,0)
 ;@routine-credits
"RTN","SAMICAS2",17,0)
 ;@license see routine SAMIUL
"RTN","SAMICAS2",18,0)
 ;@documentation see SAMICUL
"RTN","SAMICAS2",19,0)
 ;@contents
"RTN","SAMICAS2",20,0)
 ; WSCASE wri-code WSCASE^SAMICASE, post vapals casereview:
"RTN","SAMICAS2",21,0)
 ;  generate case review page
"RTN","SAMICAS2",22,0)
 ; $$NOTEHREF ppi-code $$NOTEHREF^SAMICASE, 
"RTN","SAMICAS2",23,0)
 ;  html list of notes for form
"RTN","SAMICAS2",24,0)
 ; GETTMPL ppi-code GETTMPL^SAMICASE, get html template
"RTN","SAMICAS2",25,0)
 ; $$CNTITEMS = # forms patient has used before deleting patient
"RTN","SAMICAS2",26,0)
 ; GETITEMS ppi-code GETITEMS^SAMICASE
"RTN","SAMICAS2",27,0)
 ;  get items available for studyid
"RTN","SAMICAS2",28,0)
 ; $$GETDTKEY date part of form key
"RTN","SAMICAS2",29,0)
 ; $$KEY2DSPD date in elcap format from key date
"RTN","SAMICAS2",30,0)
 ; $$VAPALSDT ppi-code $$VAPALSDT^SAMICASE, vapals format for dates
"RTN","SAMICAS2",31,0)
 ;
"RTN","SAMICAS2",32,0)
 ; WSNUFORM wri-code WSNUFORM^SAMICASE, post vapals nuform:
"RTN","SAMICAS2",33,0)
 ;  new form for patient
"RTN","SAMICAS2",34,0)
 ; $$KEY2FM ppi-code $$KEY2FM^SAMICASE, convert key to fileman date
"RTN","SAMICAS2",35,0)
 ;
"RTN","SAMICAS2",36,0)
 ; $$GSAMISTA value of 'samistatus' from form
"RTN","SAMICAS2",37,0)
 ; SSAMISTA ppi-code SSAMISTA^SAMICASE, set samistatus to val in form
"RTN","SAMICAS2",38,0)
 ; DELFORM wri-code DELFORM^SAMICASE, post vapals deleteform:
"RTN","SAMICAS2",39,0)
 ;  delete incomplete form
"RTN","SAMICAS2",40,0)
 ; INITSTAT set all forms to 'incomplete'
"RTN","SAMICAS2",41,0)
 ;
"RTN","SAMICAS2",42,0)
 ;
"RTN","SAMICAS2",43,0)
 ;
"RTN","SAMICAS2",44,0)
 ;@section 1 wsCASE & related ppis
"RTN","SAMICAS2",45,0)
 ;
"RTN","SAMICAS2",46,0)
 ;
"RTN","SAMICAS2",47,0)
 ;
"RTN","SAMICAS2",48,0)
 ;@wri-code WSCASE^SAMICASE
"RTN","SAMICAS2",49,0)
WSCASE ; post vapals casereview: generate case review page
"RTN","SAMICAS2",50,0)
 ;
"RTN","SAMICAS2",51,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS2",52,0)
 ;
"RTN","SAMICAS2",53,0)
 ;ven/gpl;wri;procedure;silent;clean;sac;??% tests
"RTN","SAMICAS2",54,0)
 ;@signature
"RTN","SAMICAS2",55,0)
 ; do WSCASE^SAMICASE(rtn,filter)
"RTN","SAMICAS2",56,0)
 ;@branches-from
"RTN","SAMICAS2",57,0)
 ; WSCASE^SAMICASE
"RTN","SAMICAS2",58,0)
 ;@wri-called-by
"RTN","SAMICAS2",59,0)
 ; wsPostForm^%wfhform
"RTN","SAMICAS2",60,0)
 ; DELFORM^SAMICASE
"RTN","SAMICAS2",61,0)
 ; WSNFPOST^SAMICASE
"RTN","SAMICAS2",62,0)
 ; WSVAPALS^SAMIHOM3 [wsi for ws post vapals]
"RTN","SAMICAS2",63,0)
 ; WSLOOKUP^SAMISRC2
"RTN","SAMICAS2",64,0)
 ; wsPostForm^SAMIZ2
"RTN","SAMICAS2",65,0)
 ;@called-by none
"RTN","SAMICAS2",66,0)
 ;@calls
"RTN","SAMICAS2",67,0)
 ; $$setroot^%wd
"RTN","SAMICAS2",68,0)
 ; GETTMPL^SAMICASE
"RTN","SAMICAS2",69,0)
 ; GETITEMS^SAMICASE
"RTN","SAMICAS2",70,0)
 ; $$SID2NUM^SAMIHOM3
"RTN","SAMICAS2",71,0)
 ; findReplace^%ts
"RTN","SAMICAS2",72,0)
 ; FIXHREF^SAMIFORM
"RTN","SAMICAS2",73,0)
 ; FIXSRC^SAMIFORM
"RTN","SAMICAS2",74,0)
 ; $$GETDTKEY
"RTN","SAMICAS2",75,0)
 ; $$KEY2DSPD
"RTN","SAMICAS2",76,0)
 ; $$GETLAST5^SAMIFORM
"RTN","SAMICAS2",77,0)
 ; $$GETSSN^SAMIFORM
"RTN","SAMICAS2",78,0)
 ; $$GETNAME^SAMIFORM
"RTN","SAMICAS2",79,0)
 ; $$GSAMISTA
"RTN","SAMICAS2",80,0)
 ; D ADDCRLF^VPRJRUT
"RTN","SAMICAS2",81,0)
 ;@input
"RTN","SAMICAS2",82,0)
 ; .filter =
"RTN","SAMICAS2",83,0)
 ; .filter("studyid")=studyid of the patient
"RTN","SAMICAS2",84,0)
 ;@output
"RTN","SAMICAS2",85,0)
 ; .rtn
"RTN","SAMICAS2",86,0)
 ;@tests
"RTN","SAMICAS2",87,0)
 ; UTWSCAS^SAMIUTS2
"RTN","SAMICAS2",88,0)
 ;
"RTN","SAMICAS2",89,0)
 ;
"RTN","SAMICAS2",90,0)
 ;@stanza 2 initialize
"RTN","SAMICAS2",91,0)
 ;
"RTN","SAMICAS2",92,0)
 kill rtn
"RTN","SAMICAS2",93,0)
 ;
"RTN","SAMICAS2",94,0)
 new groot set groot=$$setroot^%wd("vapals-patients") ; root of patient graphs
"RTN","SAMICAS2",95,0)
 ;
"RTN","SAMICAS2",96,0)
 new temp ; html template
"RTN","SAMICAS2",97,0)
 do GETTMPL^SAMICASE("temp","vapals:casereview")
"RTN","SAMICAS2",98,0)
 quit:'$data(temp)
"RTN","SAMICAS2",99,0)
 ;
"RTN","SAMICAS2",100,0)
 new sid set sid=$get(filter("studyid"))
"RTN","SAMICAS2",101,0)
 if sid="" set sid=$get(filter("studyId"))
"RTN","SAMICAS2",102,0)
 if sid="" set sid=$get(filter("fvalue"))
"RTN","SAMICAS2",103,0)
 quit:sid=""
"RTN","SAMICAS2",104,0)
 ;
"RTN","SAMICAS2",105,0)
 new items
"RTN","SAMICAS2",106,0)
 do GETITEMS^SAMICASE("items",sid)
"RTN","SAMICAS2",107,0)
 quit:'$data(items)
"RTN","SAMICAS2",108,0)
 ;
"RTN","SAMICAS2",109,0)
 new gien set gien=$$SID2NUM^SAMIHOM3(sid) ; graph ien
"RTN","SAMICAS2",110,0)
 new name set name=$get(@groot@(gien,"saminame"))
"RTN","SAMICAS2",111,0)
 quit:name=""
"RTN","SAMICAS2",112,0)
 new fname set fname=$piece(name,",",2)
"RTN","SAMICAS2",113,0)
 new lname set lname=$piece(name,",")
"RTN","SAMICAS2",114,0)
 ;
"RTN","SAMICAS2",115,0)
 ;
"RTN","SAMICAS2",116,0)
 ;@stanza 3 change resource paths to /see/
"RTN","SAMICAS2",117,0)
 ;
"RTN","SAMICAS2",118,0)
 new cnt set cnt=0
"RTN","SAMICAS2",119,0)
 new zi set zi=0
"RTN","SAMICAS2",120,0)
 ;for  set zi=$order(temp(zi)) quit:+zi=0  quit:temp(zi)["VEP0001"  do  ;
"RTN","SAMICAS2",121,0)
 for  set zi=$order(temp(zi)) quit:+zi=0  quit:temp(zi)["tbody"  do  ;
"RTN","SAMICAS2",122,0)
 . new ln set ln=temp(zi)
"RTN","SAMICAS2",123,0)
 . new touched set touched=0
"RTN","SAMICAS2",124,0)
 . ;
"RTN","SAMICAS2",125,0)
 . if ln["@@SITE@@" do  ; insert site id
"RTN","SAMICAS2",126,0)
 . . n siteid s siteid=$g(filter("siteid"))
"RTN","SAMICAS2",127,0)
 . . i siteid="" s siteid=$g(filter("site"))
"RTN","SAMICAS2",128,0)
 . . q:siteid=""
"RTN","SAMICAS2",129,0)
 . . do findReplace^%ts(.ln,"@@SITE@@",siteid)
"RTN","SAMICAS2",130,0)
 . . s temp(zi)=ln
"RTN","SAMICAS2",131,0)
 . ;
"RTN","SAMICAS2",132,0)
 . if ln["@@SITETITLE@@" do  ; insert site title
"RTN","SAMICAS2",133,0)
 . . n sitetit s sitetit=$g(filter("sitetitle"))
"RTN","SAMICAS2",134,0)
 . . if sitetit="" d  ;
"RTN","SAMICAS2",135,0)
 . . . n tsite s tsite=$g(filter("site"))
"RTN","SAMICAS2",136,0)
 . . . q:tsite=""
"RTN","SAMICAS2",137,0)
 . . . s sitetit=$$SITENM2^SAMISITE(tsite)_" - "_tsite
"RTN","SAMICAS2",138,0)
 . . q:sitetit=""
"RTN","SAMICAS2",139,0)
 . . do findReplace^%ts(.ln,"@@SITETITLE@@",sitetit)
"RTN","SAMICAS2",140,0)
 . . s temp(zi)=ln
"RTN","SAMICAS2",141,0)
 . ;
"RTN","SAMICAS2",142,0)
 . if ln["id" if ln["studyIdMenu" do  ;
"RTN","SAMICAS2",143,0)
 . . set zi=zi+4
"RTN","SAMICAS2",144,0)
 . ;
"RTN","SAMICAS2",145,0)
 . if ln["home.html" do  ;
"RTN","SAMICAS2",146,0)
 . . do findReplace^%ts(.ln,"home.html","/vapals")
"RTN","SAMICAS2",147,0)
 . . set temp(zi)=ln
"RTN","SAMICAS2",148,0)
 . . set touched=1
"RTN","SAMICAS2",149,0)
 . ;
"RTN","SAMICAS2",150,0)
 . if ln["href" if 'touched do  ;
"RTN","SAMICAS2",151,0)
 . . do FIXHREF^SAMIFORM(.ln)
"RTN","SAMICAS2",152,0)
 . . set temp(zi)=ln
"RTN","SAMICAS2",153,0)
 . ;
"RTN","SAMICAS2",154,0)
 . if ln["src" do  ;
"RTN","SAMICAS2",155,0)
 . . do FIXSRC^SAMIFORM(.ln)
"RTN","SAMICAS2",156,0)
 . . set temp(zi)=ln
"RTN","SAMICAS2",157,0)
 . ;
"RTN","SAMICAS2",158,0)
 . if ln["@@ERROR_MESSAGE@@" do  ; insert error message
"RTN","SAMICAS2",159,0)
 . . n zerr s zerr=$g(filter("errorMessage"))
"RTN","SAMICAS2",160,0)
 . . i zerr="" q  ;
"RTN","SAMICAS2",161,0)
 . . do findReplace^%ts(.ln,"@@ERROR_MESSAGE@@",zerr)
"RTN","SAMICAS2",162,0)
 . . s temp(zi)=ln
"RTN","SAMICAS2",163,0)
 . ;
"RTN","SAMICAS2",164,0)
 . set cnt=cnt+1
"RTN","SAMICAS2",165,0)
 . set rtn(cnt)=temp(zi)
"RTN","SAMICAS2",166,0)
 . quit
"RTN","SAMICAS2",167,0)
 ;
"RTN","SAMICAS2",168,0)
 ; ready to insert rows for selection
"RTN","SAMICAS2",169,0)
 ;
"RTN","SAMICAS2",170,0)
 ;
"RTN","SAMICAS2",171,0)
 ;@stanza 4 intake form
"RTN","SAMICAS2",172,0)
 ;
"RTN","SAMICAS2",173,0)
 new sikey set sikey=$order(items("sifor"))
"RTN","SAMICAS2",174,0)
 if sikey="" set sikey="siform-2017-12-10"
"RTN","SAMICAS2",175,0)
 new sidate set sidate=$$GETDTKEY(sikey)
"RTN","SAMICAS2",176,0)
 set sikey="vapals:"_sikey
"RTN","SAMICAS2",177,0)
 new sidispdate set sidispdate=$$KEY2DSPD(sidate)
"RTN","SAMICAS2",178,0)
 ;new geturl set geturl="/form?form=vapals:siform&studyid="_sid_"&key="_sikey
"RTN","SAMICAS2",179,0)
 new nuhref set nuhref="<form method=POST action=""/vapals"">"
"RTN","SAMICAS2",180,0)
 set nuhref=nuhref_"<td><input type=hidden name=""samiroute"" value=""nuform"">"
"RTN","SAMICAS2",181,0)
 set nuhref=nuhref_"<input type=hidden name=""studyid"" value="_sid_">"
"RTN","SAMICAS2",182,0)
 set nuhref=nuhref_"<input value=""New Form"" class=""btn label label-warning"" role=""link"" type=""submit""></form></td>"
"RTN","SAMICAS2",183,0)
 ; new intake notes table
"RTN","SAMICAS2",184,0)
 n notehref,form
"RTN","SAMICAS2",185,0)
 set form=$p(sikey,":",2)
"RTN","SAMICAS2",186,0)
 set notehref=$$NOTEHREF^SAMICASE(sid,form) ; table of notes
"RTN","SAMICAS2",187,0)
 set cnt=cnt+1
"RTN","SAMICAS2",188,0)
 ;new facilitycode set facilitycode=$$GETPRFX^SAMIFORM()
"RTN","SAMICAS2",189,0)
 n siteid s siteid=$g(filter("siteid"))
"RTN","SAMICAS2",190,0)
 i siteid="" s siteid=$g(filter("site"))
"RTN","SAMICAS2",191,0)
 new facilitycode set facilitycode=siteid
"RTN","SAMICAS2",192,0)
 new last5 set last5=$$GETLAST5^SAMIFORM(sid)
"RTN","SAMICAS2",193,0)
 new pssn set pssn=$$GETSSN^SAMIFORM(sid)
"RTN","SAMICAS2",194,0)
 new pname set pname=$$GETNAME^SAMIFORM(sid)
"RTN","SAMICAS2",195,0)
 new useid set useid=pssn
"RTN","SAMICAS2",196,0)
 if useid="" set useid=last5
"RTN","SAMICAS2",197,0)
 set rtn(cnt)="<tr><td> "_useid_" </td><td> "_pname_" </td><td> "_facilitycode_" </td><td>"_sidispdate_"</td><td>"_$char(13)
"RTN","SAMICAS2",198,0)
 set cnt=cnt+1
"RTN","SAMICAS2",199,0)
 set rtn(cnt)="<form method=""post"" action=""/vapals"">"
"RTN","SAMICAS2",200,0)
 set cnt=cnt+1
"RTN","SAMICAS2",201,0)
 set rtn(cnt)="<input name=""samiroute"" value=""form"" type=""hidden"">"
"RTN","SAMICAS2",202,0)
 set rtn(cnt)=rtn(cnt)_" <input name=""studyid"" value="""_sid_""" type=""hidden"">"
"RTN","SAMICAS2",203,0)
 set rtn(cnt)=rtn(cnt)_" <input name=""form"" value="""_sikey_""" type=""hidden"">"
"RTN","SAMICAS2",204,0)
 set rtn(cnt)=rtn(cnt)_" <input value=""Intake"" class=""btn btn-link"" role=""link"" type=""submit"">"
"RTN","SAMICAS2",205,0)
 ;
"RTN","SAMICAS2",206,0)
 new samistatus set samistatus=""
"RTN","SAMICAS2",207,0)
 if $$GSAMISTA(sid,sikey)="incomplete" set samistatus="(incomplete)"
"RTN","SAMICAS2",208,0)
 set cnt=cnt+1
"RTN","SAMICAS2",209,0)
 set rtn(cnt)="</form>"_samistatus_notehref_"</td>"_$char(13)
"RTN","SAMICAS2",210,0)
 set cnt=cnt+1
"RTN","SAMICAS2",211,0)
 set rtn(cnt)=nuhref_"</tr>"
"RTN","SAMICAS2",212,0)
 ;
"RTN","SAMICAS2",213,0)
 ;
"RTN","SAMICAS2",214,0)
 ;@stanza 6 rest of the forms
"RTN","SAMICAS2",215,0)
 ;
"RTN","SAMICAS2",216,0)
 new zj set zj="" ; each of the rest of the forms
"RTN","SAMICAS2",217,0)
 if $data(items("sort")) do  ; we have more forms
"RTN","SAMICAS2",218,0)
 . for  set zj=$order(items("sort",zj)) quit:zj=""  do  ;
"RTN","SAMICAS2",219,0)
 . . new cdate set cdate=zj
"RTN","SAMICAS2",220,0)
 . . new zk set zk=""
"RTN","SAMICAS2",221,0)
 . . for  set zk=$order(items("sort",cdate,zk)) q:zk=""  do  ;
"RTN","SAMICAS2",222,0)
 . . . new zform set zform=zk
"RTN","SAMICAS2",223,0)
 . . . new zkey set zkey=$order(items("sort",cdate,zform,""))
"RTN","SAMICAS2",224,0)
 . . . new zname set zname=$order(items("sort",cdate,zform,zkey,""))
"RTN","SAMICAS2",225,0)
 . . . new dispdate set dispdate=$$KEY2DSPD(cdate)
"RTN","SAMICAS2",226,0)
 . . . set zform="vapals:"_zkey ; all the new forms are vapals:key
"RTN","SAMICAS2",227,0)
 . . . ;new geturl set geturl="/form?form="_zform_"&studyid="_sid_"&key="_zkey
"RTN","SAMICAS2",228,0)
 . . . set cnt=cnt+1
"RTN","SAMICAS2",229,0)
 . . . ;set rtn(cnt)="<tr><td> "_sid_" </td><td> - </td><td> - </td><td> - </td><td>"_dispdate_"</td><td>"
"RTN","SAMICAS2",230,0)
 . . . set rtn(cnt)="<tr><td> "_useid_" </td><td> - </td><td> - </td><td>"_dispdate_"</td><td>"
"RTN","SAMICAS2",231,0)
 . . . set cnt=cnt+1
"RTN","SAMICAS2",232,0)
 . . . set rtn(cnt)="<form method=""post"" action=""/vapals"">"_$char(13)
"RTN","SAMICAS2",233,0)
 . . . set cnt=cnt+1
"RTN","SAMICAS2",234,0)
 . . . set rtn(cnt)="<input name=""samiroute"" value=""form"" type=""hidden"">"_$char(13)
"RTN","SAMICAS2",235,0)
 . . . set cnt=cnt+1
"RTN","SAMICAS2",236,0)
 . . . set rtn(cnt)=" <input name=""studyid"" value="""_sid_""" type=""hidden"">"_$char(13)
"RTN","SAMICAS2",237,0)
 . . . set cnt=cnt+1
"RTN","SAMICAS2",238,0)
 . . . set rtn(cnt)=" <input name=""form"" value="""_zform_""" type=""hidden"">"_$char(13)
"RTN","SAMICAS2",239,0)
 . . . set cnt=cnt+1
"RTN","SAMICAS2",240,0)
 . . . set rtn(cnt)=" <input value="""_zname_""" class=""btn btn-link"" role=""link"" type=""submit"">"_$char(13)
"RTN","SAMICAS2",241,0)
 . . . ;
"RTN","SAMICAS2",242,0)
 . . . new samistatus set samistatus=""
"RTN","SAMICAS2",243,0)
 . . . if $$GSAMISTA(sid,zform)="incomplete" set samistatus="(incomplete)"
"RTN","SAMICAS2",244,0)
 . . . set cnt=cnt+1
"RTN","SAMICAS2",245,0)
 . . . set rtn(cnt)="</form>"_samistatus_$$NOTEHREF^SAMICASE(sid,zkey)_"</td>"
"RTN","SAMICAS2",246,0)
 . . . set cnt=cnt+1
"RTN","SAMICAS2",247,0)
 . . . if zform["ceform" do  ;
"RTN","SAMICAS2",248,0)
 . . . . new rpthref set rpthref="<form method=POST action=""/vapals"">"
"RTN","SAMICAS2",249,0)
 . . . . set rpthref=rpthref_"<td><input type=hidden name=""samiroute"" value=""ctreport"">"
"RTN","SAMICAS2",250,0)
 . . . . set rpthref=rpthref_"<input type=hidden name=""form"" value="_$p(zform,":",2)_">"
"RTN","SAMICAS2",251,0)
 . . . . set rpthref=rpthref_"<input type=hidden name=""studyid"" value="_sid_">"
"RTN","SAMICAS2",252,0)
 . . . . set rpthref=rpthref_"<input value=""Report"" class=""btn label label-warning"" role=""link"" type=""submit""></form></td>"
"RTN","SAMICAS2",253,0)
 . . . . set rtn(cnt)=rpthref_"</tr>"
"RTN","SAMICAS2",254,0)
 . . . . ;set rtn(cnt)="</tr>" ; turn off report
"RTN","SAMICAS2",255,0)
 . . . else  set rtn(cnt)="<td></td></tr>"
"RTN","SAMICAS2",256,0)
 . . . quit
"RTN","SAMICAS2",257,0)
 . . quit
"RTN","SAMICAS2",258,0)
 . quit
"RTN","SAMICAS2",259,0)
 ;
"RTN","SAMICAS2",260,0)
 ;
"RTN","SAMICAS2",261,0)
 ;@stanza 7 skip ahead in template to tbody
"RTN","SAMICAS2",262,0)
 ;
"RTN","SAMICAS2",263,0)
 new loc set loc=zi+1
"RTN","SAMICAS2",264,0)
 for  set zi=$order(temp(zi)) quit:+zi=0  quit:temp(zi)["/tbody"  do  ;
"RTN","SAMICAS2",265,0)
 . set x=$get(x)
"RTN","SAMICAS2",266,0)
 . quit
"RTN","SAMICAS2",267,0)
 set zi=zi-1
"RTN","SAMICAS2",268,0)
 ;
"RTN","SAMICAS2",269,0)
 ;
"RTN","SAMICAS2",270,0)
 ;@stanza 8 rest of lines
"RTN","SAMICAS2",271,0)
 ;
"RTN","SAMICAS2",272,0)
 for  set zi=$order(temp(zi)) quit:+zi=0  do  ;
"RTN","SAMICAS2",273,0)
 . new line
"RTN","SAMICAS2",274,0)
 . set line=temp(zi)
"RTN","SAMICAS2",275,0)
 . ;
"RTN","SAMICAS2",276,0)
 . if line["@@SITE@@" do  ; insert site id
"RTN","SAMICAS2",277,0)
 . . n siteid s siteid=$g(filter("siteid"))
"RTN","SAMICAS2",278,0)
 . . i siteid="" s siteid=$g(filter("site"))
"RTN","SAMICAS2",279,0)
 . . q:siteid=""
"RTN","SAMICAS2",280,0)
 . . do findReplace^%ts(.line,"@@SITE@@",siteid)
"RTN","SAMICAS2",281,0)
 . ;
"RTN","SAMICAS2",282,0)
 . if line["@@SITETITLE@@" do  ; insert site title
"RTN","SAMICAS2",283,0)
 . . n sitetit s sitetit=$g(filter("sitetitle"))
"RTN","SAMICAS2",284,0)
 . . if sitetit="" d  ;
"RTN","SAMICAS2",285,0)
 . . . n tsite s tsite=$g(filter("site"))
"RTN","SAMICAS2",286,0)
 . . . q:tsite=""
"RTN","SAMICAS2",287,0)
 . . . s sitetit=$$SITENM2^SAMISITE(tsite)_" - "_tsite
"RTN","SAMICAS2",288,0)
 . . q:sitetit=""
"RTN","SAMICAS2",289,0)
 . . do findReplace^%ts(.line,"@@SITETITLE@@",sitetit)
"RTN","SAMICAS2",290,0)
 . ;
"RTN","SAMICAS2",291,0)
 . if line["XX0002" do  ;
"RTN","SAMICAS2",292,0)
 . . do findReplace^%ts(.line,"XX0002",sid)
"RTN","SAMICAS2",293,0)
 . ;
"RTN","SAMICAS2",294,0)
 . if line["@@ERROR_MESSAGE@@" do  ;
"RTN","SAMICAS2",295,0)
 . . n zerr
"RTN","SAMICAS2",296,0)
 . . k ^gpl("error")
"RTN","SAMICAS2",297,0)
 . . m ^gpl("error")=filter
"RTN","SAMICAS2",298,0)
 . . s zerr=$g(filter("errorMessage"))
"RTN","SAMICAS2",299,0)
 . . ;i err="" q  ;
"RTN","SAMICAS2",300,0)
 . . s ^gpl("error","zerr")=zerr
"RTN","SAMICAS2",301,0)
 . . do findReplace^%ts(.line,"@@ERROR_MESSAGE@@",zerr)
"RTN","SAMICAS2",302,0)
 . . s ^gpl("error","newline")=line
"RTN","SAMICAS2",303,0)
 . set cnt=cnt+1
"RTN","SAMICAS2",304,0)
 . set rtn(cnt)=line
"RTN","SAMICAS2",305,0)
 . quit
"RTN","SAMICAS2",306,0)
 ;
"RTN","SAMICAS2",307,0)
 do ADDCRLF^VPRJRUT(.rtn)
"RTN","SAMICAS2",308,0)
 set HTTPRSP("mime")="text/html" ; set mime type
"RTN","SAMICAS2",309,0)
 ;
"RTN","SAMICAS2",310,0)
 ;
"RTN","SAMICAS2",311,0)
 ;@stanza 9 termination
"RTN","SAMICAS2",312,0)
 ;
"RTN","SAMICAS2",313,0)
 quit  ; end of ppi WSCASE^SAMICAS2
"RTN","SAMICAS2",314,0)
 ;
"RTN","SAMICAS2",315,0)
 ;
"RTN","SAMICAS2",316,0)
 ;
"RTN","SAMICAS2",317,0)
 ;@ppi-code $$NOTEHREF^SAMICASE
"RTN","SAMICAS2",318,0)
NOTEHREF ; html list of notes for form
"RTN","SAMICAS2",319,0)
 ;
"RTN","SAMICAS2",320,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS2",321,0)
 ;
"RTN","SAMICAS2",322,0)
 ;ven/gpl;ppi;function;clean;silent;sac;??? tests
"RTN","SAMICAS2",323,0)
 ;@signature
"RTN","SAMICAS2",324,0)
 ; $$NOTEHREF^SAMICASE(sid,form)
"RTN","SAMICAS2",325,0)
 ;@branches-from
"RTN","SAMICAS2",326,0)
 ; NOTEHREF^SAMICASE
"RTN","SAMICAS2",327,0)
 ;@ppi-called-by
"RTN","SAMICAS2",328,0)
 ; WSNFPOST^SAMICAS3
"RTN","SAMICAS2",329,0)
 ;@called-by none
"RTN","SAMICAS2",330,0)
 ;@calls
"RTN","SAMICAS2",331,0)
 ; NTLIST^SAMINOT1
"RTN","SAMICAS2",332,0)
 ;@input
"RTN","SAMICAS2",333,0)
 ; sid = study id
"RTN","SAMICAS2",334,0)
 ; form
"RTN","SAMICAS2",335,0)
 ;@output = html list of notes
"RTN","SAMICAS2",336,0)
 ;@examples [tbd]
"RTN","SAMICAS2",337,0)
 ;@tests [tbd]
"RTN","SAMICAS2",338,0)
 ;
"RTN","SAMICAS2",339,0)
 ;
"RTN","SAMICAS2",340,0)
 ;@stanza 2 get list of notes
"RTN","SAMICAS2",341,0)
 ;
"RTN","SAMICAS2",342,0)
 new notehref set notehref=""
"RTN","SAMICAS2",343,0)
 new ntlist
"RTN","SAMICAS2",344,0)
 if form["sifor" do NTLIST^SAMINOT1("ntlist",sid,form)
"RTN","SAMICAS2",345,0)
 if form["fufor" do NTLIST^SAMINOT2("ntlist",sid,form)
"RTN","SAMICAS2",346,0)
 if $order(ntlist(""))="" quit notehref
"RTN","SAMICAS2",347,0)
 ;
"RTN","SAMICAS2",348,0)
 set notehref="<table>"
"RTN","SAMICAS2",349,0)
 new zi set zi=0
"RTN","SAMICAS2",350,0)
 for  do  quit:'zi
"RTN","SAMICAS2",351,0)
 . set zi=$order(ntlist(zi))
"RTN","SAMICAS2",352,0)
 . quit:'zi
"RTN","SAMICAS2",353,0)
 . ;
"RTN","SAMICAS2",354,0)
 . set notehref=notehref_"<td><form method=POST action=""/vapals"">"
"RTN","SAMICAS2",355,0)
 . set notehref=notehref_"<input type=hidden name=""nien"" value="""_$get(ntlist(zi,"nien"))_""">"
"RTN","SAMICAS2",356,0)
 . set notehref=notehref_"<input type=hidden name=""samiroute"" value=""note"">"
"RTN","SAMICAS2",357,0)
 . set notehref=notehref_"<input type=hidden name=""studyid"" value="_sid_">"
"RTN","SAMICAS2",358,0)
 . set notehref=notehref_"<input type=hidden name=""form"" value="_form_">"
"RTN","SAMICAS2",359,0)
 . set notehref=notehref_"<input value="""_$get(ntlist(zi,"name"))_""" class=""btn btn-link"" role=""link"" type=""submit""></form></td></tr>"
"RTN","SAMICAS2",360,0)
 . quit
"RTN","SAMICAS2",361,0)
 set notehref=notehref_"</table>"
"RTN","SAMICAS2",362,0)
 ;
"RTN","SAMICAS2",363,0)
 ;
"RTN","SAMICAS2",364,0)
 ;@stanza 3 termination
"RTN","SAMICAS2",365,0)
 ;
"RTN","SAMICAS2",366,0)
 quit notehref ; end of ppi $$NOTEHREF^SAMICASE
"RTN","SAMICAS2",367,0)
 ;
"RTN","SAMICAS2",368,0)
 ;
"RTN","SAMICAS2",369,0)
 ;
"RTN","SAMICAS2",370,0)
 ;@ppi-code GETTMPL^SAMICASE
"RTN","SAMICAS2",371,0)
GETTMPL ; get html template
"RTN","SAMICAS2",372,0)
 ;
"RTN","SAMICAS2",373,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS2",374,0)
 ;
"RTN","SAMICAS2",375,0)
 ;ven/gpl;ppi;procedure;clean;silent;sac;??% tests
"RTN","SAMICAS2",376,0)
 ;@signature
"RTN","SAMICAS2",377,0)
 ; do GETTMPL^SAMICASE(return,form)
"RTN","SAMICAS2",378,0)
 ;@branches-from
"RTN","SAMICAS2",379,0)
 ; GETTMPL^SAMICASE
"RTN","SAMICAS2",380,0)
 ;@ppi-called-by
"RTN","SAMICAS2",381,0)
 ; WSCASE^SAMICAS2
"RTN","SAMICAS2",382,0)
 ; GETHOME^SAMIHOM4
"RTN","SAMICAS2",383,0)
 ; WSNOTE^SAMINOT1
"RTN","SAMICAS2",384,0)
 ; WSNOTE^SAMINOT2
"RTN","SAMICAS2",385,0)
 ; WSNOTE^SAMINOT3
"RTN","SAMICAS2",386,0)
 ; WSNOTE^SAMINOTI
"RTN","SAMICAS2",387,0)
 ;@called-by none
"RTN","SAMICAS2",388,0)
 ;@calls
"RTN","SAMICAS2",389,0)
 ; $$getTemplate^%wf
"RTN","SAMICAS2",390,0)
 ; getThis^%wd
"RTN","SAMICAS2",391,0)
 ;@input
"RTN","SAMICAS2",392,0)
 ; return = name of array to return template
"RTN","SAMICAS2",393,0)
 ; form = name of form
"RTN","SAMICAS2",394,0)
 ;@output
"RTN","SAMICAS2",395,0)
 ; @return = template
"RTN","SAMICAS2",396,0)
 ;@examples [tbd]
"RTN","SAMICAS2",397,0)
 ;@tests
"RTN","SAMICAS2",398,0)
 ; UTGTMPL^SAMIUTS2
"RTN","SAMICAS2",399,0)
 ;
"RTN","SAMICAS2",400,0)
 ;
"RTN","SAMICAS2",401,0)
 ;@stanza 2 get html template
"RTN","SAMICAS2",402,0)
 ;
"RTN","SAMICAS2",403,0)
 quit:$get(form)=""
"RTN","SAMICAS2",404,0)
 ;
"RTN","SAMICAS2",405,0)
 new fn set fn=$$getTemplate^%wf(form)
"RTN","SAMICAS2",406,0)
 do getThis^%wd(return,fn)
"RTN","SAMICAS2",407,0)
 ;
"RTN","SAMICAS2",408,0)
 set HTTPRSP("mime")="text/html"
"RTN","SAMICAS2",409,0)
 ;
"RTN","SAMICAS2",410,0)
 ;
"RTN","SAMICAS2",411,0)
 ;@stanza 3 termination
"RTN","SAMICAS2",412,0)
 ;
"RTN","SAMICAS2",413,0)
 quit  ; end of ppi GETTMPL^SAMICASE
"RTN","SAMICAS2",414,0)
 ;
"RTN","SAMICAS2",415,0)
 ;
"RTN","SAMICAS2",416,0)
 ;
"RTN","SAMICAS2",417,0)
CNTITEMS(sid) ; extrinsic returns how many forms the patient has
"RTN","SAMICAS2",418,0)
 ; used before deleting a patient
"RTN","SAMICAS2",419,0)
 ;
"RTN","SAMICAS2",420,0)
 ;@called by : none
"RTN","SAMICAS2",421,0)
 ;@calls :
"RTN","SAMICAS2",422,0)
 ; $$setroot^%wd
"RTN","SAMICAS2",423,0)
 ;@input ;
"RTN","SAMICAS2",424,0)
 ; sid = patient's study ID (e.g. "XXX00001")
"RTN","SAMICAS2",425,0)
 ;@output ;
"RTN","SAMICAS2",426,0)
 ;@tests :
"RTN","SAMICAS2",427,0)
 ; SAMIUTS2
"RTN","SAMICAS2",428,0)
 new groot set groot=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS2",429,0)
 quit:'$data(@groot@("graph",sid)) 0  ; nothing there
"RTN","SAMICAS2",430,0)
 new cnt,zi
"RTN","SAMICAS2",431,0)
 set zi=""
"RTN","SAMICAS2",432,0)
 set cnt=0
"RTN","SAMICAS2",433,0)
 for  set zi=$o(@groot@("graph",sid,zi)) quit:zi=""  do  ;
"RTN","SAMICAS2",434,0)
 . set cnt=cnt+1
"RTN","SAMICAS2",435,0)
 ;
"RTN","SAMICAS2",436,0)
 quit cnt  ; end of CNTITEMS
"RTN","SAMICAS2",437,0)
 ;
"RTN","SAMICAS2",438,0)
 ;
"RTN","SAMICAS2",439,0)
 ;
"RTN","SAMICAS2",440,0)
 ;@ppi-code GETITEMS^SAMICASE
"RTN","SAMICAS2",441,0)
GETITEMS ; get items available for studyid
"RTN","SAMICAS2",442,0)
 ;
"RTN","SAMICAS2",443,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS2",444,0)
 ;
"RTN","SAMICAS2",445,0)
 ;ven/gpl;ppi;procedure;clean;silent;sac;??% tests
"RTN","SAMICAS2",446,0)
 ;@signature
"RTN","SAMICAS2",447,0)
 ; do GETITEMS^SAMICASE(ary,sid)
"RTN","SAMICAS2",448,0)
 ;@branches-from
"RTN","SAMICAS2",449,0)
 ; GETITEMS^SAMICASE
"RTN","SAMICAS2",450,0)
 ;@ppi-called-by
"RTN","SAMICAS2",451,0)
 ; WSCASE^SAMICAS2
"RTN","SAMICAS2",452,0)
 ; $$BASELNDT^SAMICAS3
"RTN","SAMICAS2",453,0)
 ; MKCEFORM^SAMICAS3
"RTN","SAMICAS2",454,0)
 ; GETFILTR^SAMICTR0
"RTN","SAMICAS2",455,0)
 ; GETFILTR^SAMICTT0
"RTN","SAMICAS2",456,0)
 ; SELECT^SAMIUR
"RTN","SAMICAS2",457,0)
 ; SELECT^SAMIUR1
"RTN","SAMICAS2",458,0)
 ; CUMPY^SAMIUR2
"RTN","SAMICAS2",459,0)
 ;@called-by none
"RTN","SAMICAS2",460,0)
 ;@calls
"RTN","SAMICAS2",461,0)
 ; $$setroot^%wd
"RTN","SAMICAS2",462,0)
 ;@input
"RTN","SAMICAS2",463,0)
 ; ary = name of return array
"RTN","SAMICAS2",464,0)
 ; sid = patient's study ID (e.g. "XXX00001")
"RTN","SAMICAS2",465,0)
 ;@output
"RTN","SAMICAS2",466,0)
 ; @ary = returned items available
"RTN","SAMICAS2",467,0)
 ;@examples [tbd]
"RTN","SAMICAS2",468,0)
 ;@tests
"RTN","SAMICAS2",469,0)
 ; UTCNTITM^SAMIUTS2
"RTN","SAMICAS2",470,0)
 ;
"RTN","SAMICAS2",471,0)
 ;
"RTN","SAMICAS2",472,0)
 ;@stanza 2 get items
"RTN","SAMICAS2",473,0)
 ;
"RTN","SAMICAS2",474,0)
 new groot set groot=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS2",475,0)
 quit:'$data(@groot@("graph",sid))  ; nothing there
"RTN","SAMICAS2",476,0)
 ;
"RTN","SAMICAS2",477,0)
 kill @ary
"RTN","SAMICAS2",478,0)
 new zi set zi=""
"RTN","SAMICAS2",479,0)
 for  set zi=$order(@groot@("graph",sid,zi)) quit:zi=""  do  ;
"RTN","SAMICAS2",480,0)
 . set @ary@(zi)=""
"RTN","SAMICAS2",481,0)
 . quit
"RTN","SAMICAS2",482,0)
 ;
"RTN","SAMICAS2",483,0)
 ;
"RTN","SAMICAS2",484,0)
 ;@stanza 3 get rest of forms (many-to-one, get dates)
"RTN","SAMICAS2",485,0)
 ;
"RTN","SAMICAS2",486,0)
 new tary
"RTN","SAMICAS2",487,0)
 for  set zi=$order(@ary@(zi)) quit:zi=""  do  ;
"RTN","SAMICAS2",488,0)
 . new zkey1,zform set zkey1=$piece(zi,"-",1)
"RTN","SAMICAS2",489,0)
 . ; if zkey1="sbform" quit  ;
"RTN","SAMICAS2",490,0)
 . if zkey1="siform" quit  ;
"RTN","SAMICAS2",491,0)
 . new fname
"RTN","SAMICAS2",492,0)
 . if zkey1="ceform" set fname="CT Evaluation"
"RTN","SAMICAS2",493,0)
 . set zform=zkey1
"RTN","SAMICAS2",494,0)
 . if zkey1="sbform" set zform="vapals:sbform"
"RTN","SAMICAS2",495,0)
 . if zkey1="sbform" set fname="Background"
"RTN","SAMICAS2",496,0)
 . if zkey1="ceform" set zform="vapals:ceform"
"RTN","SAMICAS2",497,0)
 . if zkey1="fuform" set zform="vapals:fuform"
"RTN","SAMICAS2",498,0)
 . if zkey1="fuform" set fname="Follow-up"
"RTN","SAMICAS2",499,0)
 . if zkey1="bxform" set fname="Biopsy"
"RTN","SAMICAS2",500,0)
 . if zkey1="bxform" set zform="vapals:bxform"
"RTN","SAMICAS2",501,0)
 . if zkey1="ptform" set zform="vapals:ptform"
"RTN","SAMICAS2",502,0)
 . if zkey1="ptform" set fname="PET Evaluation"
"RTN","SAMICAS2",503,0)
 . if zkey1="itform" set zform="vapals:itform"
"RTN","SAMICAS2",504,0)
 . if zkey1="itform" set fname="Intervention"
"RTN","SAMICAS2",505,0)
 . if $get(fname)="" set fname="unknown"
"RTN","SAMICAS2",506,0)
 . ;
"RTN","SAMICAS2",507,0)
 . new zdate set zdate=$extract(zi,$length(zkey1)+2,$length(zi))
"RTN","SAMICAS2",508,0)
 . quit:$get(zdate)=""
"RTN","SAMICAS2",509,0)
 . quit:$get(zform)=""
"RTN","SAMICAS2",510,0)
 . quit:$get(zi)=""
"RTN","SAMICAS2",511,0)
 . quit:$get(fname)=""
"RTN","SAMICAS2",512,0)
 . ;
"RTN","SAMICAS2",513,0)
 . set tary("sort",zdate,zform,zi,fname)=""
"RTN","SAMICAS2",514,0)
 . set tary("type",zform,zi,fname)=""
"RTN","SAMICAS2",515,0)
 . quit
"RTN","SAMICAS2",516,0)
 merge @ary=tary
"RTN","SAMICAS2",517,0)
 ;
"RTN","SAMICAS2",518,0)
 ;
"RTN","SAMICAS2",519,0)
 ;@stanza 4 termination
"RTN","SAMICAS2",520,0)
 ;
"RTN","SAMICAS2",521,0)
 quit  ; end of ppi GETITEMS^SAMICASE
"RTN","SAMICAS2",522,0)
 ;
"RTN","SAMICAS2",523,0)
 ;
"RTN","SAMICAS2",524,0)
 ;
"RTN","SAMICAS2",525,0)
GETDTKEY(formid) ; date portion of form key
"RTN","SAMICAS2",526,0)
 ;
"RTN","SAMICAS2",527,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS2",528,0)
 ;
"RTN","SAMICAS2",529,0)
 ;ven/gpl;private;function;
"RTN","SAMICAS2",530,0)
 ;@called by
"RTN","SAMICAS2",531,0)
 ;  WSCASE^SAMICAS2
"RTN","SAMICAS2",532,0)
 ;@calls :
"RTN","SAMICAS2",533,0)
 ;@input
"RTN","SAMICAS2",534,0)
 ; formid form key
"RTN","SAMICAS2",535,0)
 ;@output
"RTN","SAMICAS2",536,0)
 ; date from form key
"RTN","SAMICAS2",537,0)
 ;@examples
"RTN","SAMICAS2",538,0)
 ; $$GETDTKEY("sbform-2018-02-26") = "2018-02-26"
"RTN","SAMICAS2",539,0)
 ;@tests :
"RTN","SAMICAS2",540,0)
 ; SAMIUTS2
"RTN","SAMICAS2",541,0)
 ;
"RTN","SAMICAS2",542,0)
 ;@stanza 2 calculate date from key
"RTN","SAMICAS2",543,0)
 ;
"RTN","SAMICAS2",544,0)
 new frm set frm=$piece(formid,"-")
"RTN","SAMICAS2",545,0)
 new date set date=$piece(formid,frm_"-",2)
"RTN","SAMICAS2",546,0)
 ;
"RTN","SAMICAS2",547,0)
 ;@stanza 3 return & termination
"RTN","SAMICAS2",548,0)
 ;
"RTN","SAMICAS2",549,0)
 quit date ; return date; end of $$GETDTKEY
"RTN","SAMICAS2",550,0)
 ;
"RTN","SAMICAS2",551,0)
 ;
"RTN","SAMICAS2",552,0)
 ;
"RTN","SAMICAS2",553,0)
KEY2DSPD(zkey) ; date in elcap format from key date
"RTN","SAMICAS2",554,0)
 ;
"RTN","SAMICAS2",555,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS2",556,0)
 ;
"RTN","SAMICAS2",557,0)
 ;ven/gpl;private;function;
"RTN","SAMICAS2",558,0)
 ;@called by
"RTN","SAMICAS2",559,0)
 ;  WSCASE^SAMICAS2
"RTN","SAMICAS2",560,0)
 ;@calls
"RTN","SAMICAS2",561,0)
 ; ^%DT
"RTN","SAMICAS2",562,0)
 ; $$FMTE^XLFDT
"RTN","SAMICAS2",563,0)
 ; $$VAPALSDT^SAMICAS2
"RTN","SAMICAS2",564,0)
 ;@input
"RTN","SAMICAS2",565,0)
 ; zkey = date in any format %DT can process
"RTN","SAMICAS2",566,0)
 ;@output
"RTN","SAMICAS2",567,0)
 ; date in elcap format
"RTN","SAMICAS2",568,0)
 ;@examples
"RTN","SAMICAS2",569,0)
 ; date 2018-02-26 => 26/Feb/2018
"RTN","SAMICAS2",570,0)
 ;@tests
"RTN","SAMICAS2",571,0)
 ; SAMIUTS2
"RTN","SAMICAS2",572,0)
 ;
"RTN","SAMICAS2",573,0)
 ;@stanza 2 convert date to elcap display format
"RTN","SAMICAS2",574,0)
 ;
"RTN","SAMICAS2",575,0)
 new X set X=zkey
"RTN","SAMICAS2",576,0)
 new Y
"RTN","SAMICAS2",577,0)
 do ^%DT
"RTN","SAMICAS2",578,0)
 ;new Z set Z=$$FMTE^XLFDT(Y,"9D")
"RTN","SAMICAS2",579,0)
 ;set Z=$translate(Z," ","/")
"RTN","SAMICAS2",580,0)
 new zdate
"RTN","SAMICAS2",581,0)
 set zdate=$$VAPALSDT^SAMICASE(Y)
"RTN","SAMICAS2",582,0)
 ;
"RTN","SAMICAS2",583,0)
 ;@stanza 3 return & termination
"RTN","SAMICAS2",584,0)
 ;
"RTN","SAMICAS2",585,0)
 quit zdate  ; return date; end of $$KEY2DSPD
"RTN","SAMICAS2",586,0)
 ;
"RTN","SAMICAS2",587,0)
 ;
"RTN","SAMICAS2",588,0)
 ;
"RTN","SAMICAS2",589,0)
 ;@ppi-code $$VAPALSDT^SAMICASE
"RTN","SAMICAS2",590,0)
VAPALSDT ; vapals format for dates
"RTN","SAMICAS2",591,0)
 ;
"RTN","SAMICAS2",592,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS2",593,0)
 ;
"RTN","SAMICAS2",594,0)
 ;ven/gpl;ppi;function;clean;silent;sac;100% tests
"RTN","SAMICAS2",595,0)
 ;@signature
"RTN","SAMICAS2",596,0)
 ; $$VAPALSDT^SAMICASE(fmdate)
"RTN","SAMICAS2",597,0)
 ;@branches-from
"RTN","SAMICAS2",598,0)
 ; VAPALSDT^SAMICASE
"RTN","SAMICAS2",599,0)
 ;@ppi-called-by
"RTN","SAMICAS2",600,0)
 ; KEY2DSPD^SAMICAS2
"RTN","SAMICAS2",601,0)
 ; LASTCMP^SAMICAS3
"RTN","SAMICAS2",602,0)
 ; KEY2DT^SAMICAS3
"RTN","SAMICAS2",603,0)
 ; MKCEFORM^SAMICAS3
"RTN","SAMICAS2",604,0)
 ; MKFUFORM^SAMICAS3
"RTN","SAMICAS2",605,0)
 ; MKITFORM^SAMICAS3
"RTN","SAMICAS2",606,0)
 ; MKPTFORM^SAMICAS3
"RTN","SAMICAS2",607,0)
 ; LOGIT^SAMICLOG
"RTN","SAMICAS2",608,0)
 ; MKSIFORM^SAMIHOM3
"RTN","SAMICAS2",609,0)
 ; PREFILL^SAMIHOM3
"RTN","SAMICAS2",610,0)
 ; SELECT^SAMIUR
"RTN","SAMICAS2",611,0)
 ; SELECT^SAMIUR1
"RTN","SAMICAS2",612,0)
 ; IFORM^SAMIUR2
"RTN","SAMICAS2",613,0)
 ;@called-by none
"RTN","SAMICAS2",614,0)
 ;@calls
"RTN","SAMICAS2",615,0)
 ; $$FMTE^XLFDT
"RTN","SAMICAS2",616,0)
 ;@input
"RTN","SAMICAS2",617,0)
 ; fmdate = date in fileman format
"RTN","SAMICAS2",618,0)
 ;@output = vapals date format
"RTN","SAMICAS2",619,0)
 ;@tests
"RTN","SAMICAS2",620,0)
 ; UTVPLSD^SAMIUTS2
"RTN","SAMICAS2",621,0)
 ;
"RTN","SAMICAS2",622,0)
 ;
"RTN","SAMICAS2",623,0)
 ;@stanza 2 convert date
"RTN","SAMICAS2",624,0)
 ;
"RTN","SAMICAS2",625,0)
 ; new vdate set vdate=$$FMTE^XLFDT(fmdate,"9D")
"RTN","SAMICAS2",626,0)
 ; set vdate=$translate(vdate," ","/")
"RTN","SAMICAS2",627,0)
 ;
"RTN","SAMICAS2",628,0)
 new vdate set vdate=$$FMTE^XLFDT(fmdate,"5D")
"RTN","SAMICAS2",629,0)
 ;
"RTN","SAMICAS2",630,0)
 ;
"RTN","SAMICAS2",631,0)
 ;@stanza 3 termination
"RTN","SAMICAS2",632,0)
 ;
"RTN","SAMICAS2",633,0)
 quit vdate ; end of ppi $$VAPALSDT^SAMICASE
"RTN","SAMICAS2",634,0)
 ;
"RTN","SAMICAS2",635,0)
 ;
"RTN","SAMICAS2",636,0)
 ;
"RTN","SAMICAS2",637,0)
 ;@section 2 WSNUFORM & related ppis
"RTN","SAMICAS2",638,0)
 ;
"RTN","SAMICAS2",639,0)
 ;
"RTN","SAMICAS2",640,0)
 ;
"RTN","SAMICAS2",641,0)
 ;@wri-code WSNUFORM^SAMICASE
"RTN","SAMICAS2",642,0)
WSNUFORM ; post vapals nuform: new form for patient
"RTN","SAMICAS2",643,0)
 ;
"RTN","SAMICAS2",644,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS2",645,0)
 ;
"RTN","SAMICAS2",646,0)
 ;ven/gpl;wri;procedure;clean;silent;sac;?? tests
"RTN","SAMICAS2",647,0)
 ;@signature
"RTN","SAMICAS2",648,0)
 ; do WSNUFORM^SAMICASE(rtn,filter)
"RTN","SAMICAS2",649,0)
 ;@branches-from
"RTN","SAMICAS2",650,0)
 ; WSNUFORM^SAMICASE
"RTN","SAMICAS2",651,0)
 ;@wri-called-by
"RTN","SAMICAS2",652,0)
 ; WSVAPALS^SAMIHOM3 [wr nuform of ws post vapals]
"RTN","SAMICAS2",653,0)
 ;@called-by none
"RTN","SAMICAS2",654,0)
 ;@calls
"RTN","SAMICAS2",655,0)
 ; $$SID2NUM^SAMIHOM3
"RTN","SAMICAS2",656,0)
 ; $$setroot^%wd
"RTN","SAMICAS2",657,0)
 ; GETTMPL^SAMICAS2
"RTN","SAMICAS2",658,0)
 ; findReplace^%ts
"RTN","SAMICAS2",659,0)
 ; FIXHREF^SAMIFORM
"RTN","SAMICAS2",660,0)
 ; FIXSRC^SAMIFORM
"RTN","SAMICAS2",661,0)
 ; findReplace^%ts
"RTN","SAMICAS2",662,0)
 ;@input
"RTN","SAMICAS2",663,0)
 ; .filter =
"RTN","SAMICAS2",664,0)
 ; .filter("studyid")=studyid of the patient
"RTN","SAMICAS2",665,0)
 ;@output
"RTN","SAMICAS2",666,0)
 ; @rtn
"RTN","SAMICAS2",667,0)
 ;@tests
"RTN","SAMICAS2",668,0)
 ; UTWSNF^SAMIUTS2
"RTN","SAMICAS2",669,0)
 ;
"RTN","SAMICAS2",670,0)
 ;
"RTN","SAMICAS2",671,0)
 ;@stanza 2 get select-new-form form
"RTN","SAMICAS2",672,0)
 ;
"RTN","SAMICAS2",673,0)
 new sid set sid=$get(filter("studyid"))
"RTN","SAMICAS2",674,0)
 quit:sid=""
"RTN","SAMICAS2",675,0)
 new sien set sien=$$SID2NUM^SAMIHOM3(sid)
"RTN","SAMICAS2",676,0)
 quit:+sien=0
"RTN","SAMICAS2",677,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS2",678,0)
 new groot set groot=$name(@root@(sien))
"RTN","SAMICAS2",679,0)
 ;
"RTN","SAMICAS2",680,0)
 new saminame set saminame=$get(@groot@("saminame"))
"RTN","SAMICAS2",681,0)
 quit:saminame=""
"RTN","SAMICAS2",682,0)
 ;
"RTN","SAMICAS2",683,0)
 new temp,tout,form
"RTN","SAMICAS2",684,0)
 set return="temp",form="vapals:nuform"
"RTN","SAMICAS2",685,0)
 do GETTMPL
"RTN","SAMICAS2",686,0)
 quit:'$data(temp)
"RTN","SAMICAS2",687,0)
 ;
"RTN","SAMICAS2",688,0)
 new cnt set cnt=0
"RTN","SAMICAS2",689,0)
 new zi set zi=0
"RTN","SAMICAS2",690,0)
 for  set zi=$order(temp(zi)) quit:+zi=0  do  ;
"RTN","SAMICAS2",691,0)
 . new ln set ln=temp(zi)
"RTN","SAMICAS2",692,0)
 . new touched set touched=0
"RTN","SAMICAS2",693,0)
 . ;
"RTN","SAMICAS2",694,0)
 . if ln["href" if 'touched do  ;
"RTN","SAMICAS2",695,0)
 . . do FIXHREF^SAMIFORM(.ln)
"RTN","SAMICAS2",696,0)
 . . set temp(zi)=ln
"RTN","SAMICAS2",697,0)
 . ;
"RTN","SAMICAS2",698,0)
 . if ln["src" d  ;
"RTN","SAMICAS2",699,0)
 . . do FIXSRC^SAMIFORM(.ln)
"RTN","SAMICAS2",700,0)
 . . set temp(zi)=ln
"RTN","SAMICAS2",701,0)
 . ;
"RTN","SAMICAS2",702,0)
 . if ln["@@SID@@" do  ;
"RTN","SAMICAS2",703,0)
 . . do findReplace^%ts(.ln,"@@SID@@",sid)
"RTN","SAMICAS2",704,0)
 . . set temp(zi)=ln
"RTN","SAMICAS2",705,0)
 . . quit
"RTN","SAMICAS2",706,0)
 . ;
"RTN","SAMICAS2",707,0)
 . if ln["@@SITE@@" do  ; insert site id
"RTN","SAMICAS2",708,0)
 . . n siteid s siteid=$g(filter("siteid"))
"RTN","SAMICAS2",709,0)
 . . i siteid="" s siteid=$g(filter("site"))
"RTN","SAMICAS2",710,0)
 . . q:siteid=""
"RTN","SAMICAS2",711,0)
 . . do findReplace^%ts(.ln,"@@SITE@@",siteid)
"RTN","SAMICAS2",712,0)
 . . s temp(zi)=ln
"RTN","SAMICAS2",713,0)
 . ;
"RTN","SAMICAS2",714,0)
 . if ln["@@SITETITLE@@" do  ; insert site title
"RTN","SAMICAS2",715,0)
 . . n sitetit s sitetit=$g(filter("sitetitle"))
"RTN","SAMICAS2",716,0)
 . . if sitetit="" d  ;
"RTN","SAMICAS2",717,0)
 . . . n tsite s tsite=$g(filter("site"))
"RTN","SAMICAS2",718,0)
 . . . q:tsite=""
"RTN","SAMICAS2",719,0)
 . . . s sitetit=$$SITENM2^SAMISITE(tsite)_" - "_tsite
"RTN","SAMICAS2",720,0)
 . . q:sitetit=""
"RTN","SAMICAS2",721,0)
 . . do findReplace^%ts(.ln,"@@SITETITLE@@",sitetit)
"RTN","SAMICAS2",722,0)
 . . s temp(zi)=ln
"RTN","SAMICAS2",723,0)
 . ;
"RTN","SAMICAS2",724,0)
 . set cnt=cnt+1
"RTN","SAMICAS2",725,0)
 . set rtn(cnt)=temp(zi)
"RTN","SAMICAS2",726,0)
 ;
"RTN","SAMICAS2",727,0)
 ;
"RTN","SAMICAS2",728,0)
 ;@stanza 3 termination
"RTN","SAMICAS2",729,0)
 ;
"RTN","SAMICAS2",730,0)
 quit  ; end of wri WSNUFORM^SAMICASE
"RTN","SAMICAS2",731,0)
 ;
"RTN","SAMICAS2",732,0)
 ;
"RTN","SAMICAS2",733,0)
 ;
"RTN","SAMICAS2",734,0)
 ;@ppi-code $$KEY2FM^SAMICASE
"RTN","SAMICAS2",735,0)
KEY2FM ; convert key to fileman date
"RTN","SAMICAS2",736,0)
 ;
"RTN","SAMICAS2",737,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS2",738,0)
 ;
"RTN","SAMICAS2",739,0)
 ;ven/gpl;wri;procedure;silent;clean;sac;??% tests
"RTN","SAMICAS2",740,0)
 ;@signature
"RTN","SAMICAS2",741,0)
 ; $$KEY2FM^SAMICASE(key)
"RTN","SAMICAS2",742,0)
 ;@branches-from
"RTN","SAMICAS2",743,0)
 ; KEY2FM^SAMICASE
"RTN","SAMICAS2",744,0)
 ;@ppi-called-by
"RTN","SAMICAS2",745,0)
 ; WSNFPOST^SAMICAS3
"RTN","SAMICAS2",746,0)
 ; $$LASTCMP^SAMICAS3
"RTN","SAMICAS2",747,0)
 ; $$KEY2DT^SAMICAS3
"RTN","SAMICAS2",748,0)
 ; SAVFILTR^SAMISAV
"RTN","SAMICAS2",749,0)
 ; SELECT^SAMIUR
"RTN","SAMICAS2",750,0)
 ; SELECT^SAMIUR1
"RTN","SAMICAS2",751,0)
 ; IFORM^SAMIUM2
"RTN","SAMICAS2",752,0)
 ;@called-by none
"RTN","SAMICAS2",753,0)
 ;@calls
"RTN","SAMICAS2",754,0)
 ; ^%DT
"RTN","SAMICAS2",755,0)
 ;@input
"RTN","SAMICAS2",756,0)
 ; key = vapals key (e.g.
"RTN","SAMICAS2",757,0)
 ;@output
"RTN","SAMICAS2",758,0)
 ;@examples
"RTN","SAMICAS2",759,0)
 ;  $$KEY2FM("sbform-2018-02-26") = 3180226
"RTN","SAMICAS2",760,0)
 ;@tests
"RTN","SAMICAS2",761,0)
 ; UTK2FM^SAMIUTS2
"RTN","SAMICAS2",762,0)
 ;
"RTN","SAMICAS2",763,0)
 ;
"RTN","SAMICAS2",764,0)
 ;@stanza 2 convert key to fm date
"RTN","SAMICAS2",765,0)
 ;
"RTN","SAMICAS2",766,0)
 new datepart set datepart=key
"RTN","SAMICAS2",767,0)
 ; allow key to be the whole key ie ceform-2018-10-3
"RTN","SAMICAS2",768,0)
 if $length(key,"-")=4 do
"RTN","SAMICAS2",769,0)
 . new frm set frm=$piece(key,"-")
"RTN","SAMICAS2",770,0)
 . set datepart=$piece(key,frm_"-",2)
"RTN","SAMICAS2",771,0)
 . quit
"RTN","SAMICAS2",772,0)
 new X set X=datepart
"RTN","SAMICAS2",773,0)
 new Y
"RTN","SAMICAS2",774,0)
 do ^%DT ; call fileman to convert date
"RTN","SAMICAS2",775,0)
 ;
"RTN","SAMICAS2",776,0)
 ;
"RTN","SAMICAS2",777,0)
 ;@stanza 3 termination
"RTN","SAMICAS2",778,0)
 ;
"RTN","SAMICAS2",779,0)
 quit Y ; end of ppi $$KEY2FM^SAMICASE
"RTN","SAMICAS2",780,0)
 ;
"RTN","SAMICAS2",781,0)
 ;
"RTN","SAMICAS2",782,0)
 ;
"RTN","SAMICAS2",783,0)
 ;@section 3 casetbl
"RTN","SAMICAS2",784,0)
 ;
"RTN","SAMICAS2",785,0)
 ;
"RTN","SAMICAS2",786,0)
 ;
"RTN","SAMICAS2",787,0)
 ;@ppi $$GSAMISTA^SAMICAS2 = value of 'samistatus' from form
"RTN","SAMICAS2",788,0)
GSAMISTA(sid,form) ; extrinsic returns value of 'samistatus' from form
"RTN","SAMICAS2",789,0)
 ;
"RTN","SAMICAS2",790,0)
 ;@called by
"RTN","SAMICAS2",791,0)
 ; WSCASE^SAMICAS2
"RTN","SAMICAS2",792,0)
 ;@calls
"RTN","SAMICAS2",793,0)
 ; $$setroot^%wd
"RTN","SAMICAS2",794,0)
 ;@input
"RTN","SAMICAS2",795,0)
 ; sid  = patient's studyid
"RTN","SAMICAS2",796,0)
 ; form = specific study form (e.g. "sbform-2018-02-26")
"RTN","SAMICAS2",797,0)
 ;@output
"RTN","SAMICAS2",798,0)
 ; status of the form
"RTN","SAMICAS2",799,0)
 ;@tests
"RTN","SAMICAS2",800,0)
 ; SAMIUTS2
"RTN","SAMICAS2",801,0)
 ;
"RTN","SAMICAS2",802,0)
 new stat,root,useform
"RTN","SAMICAS2",803,0)
 set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS2",804,0)
 set useform=form
"RTN","SAMICAS2",805,0)
 if form["vapals:" set useform=$p(form,"vapals:",2)
"RTN","SAMICAS2",806,0)
 set stat=$get(@root@("graph",sid,useform,"samistatus"))
"RTN","SAMICAS2",807,0)
 if stat="" set stat="incomplete"
"RTN","SAMICAS2",808,0)
 ;
"RTN","SAMICAS2",809,0)
 quit stat ; end of ppi $$GSAMISTA^SAMICAS2
"RTN","SAMICAS2",810,0)
 ;
"RTN","SAMICAS2",811,0)
 ;
"RTN","SAMICAS2",812,0)
 ;
"RTN","SAMICAS2",813,0)
 ;@ppi-code SSAMISTA^SAMICASE
"RTN","SAMICAS2",814,0)
SSAMISTA ; set samistatus to val in form
"RTN","SAMICAS2",815,0)
 ;
"RTN","SAMICAS2",816,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS2",817,0)
 ;
"RTN","SAMICAS2",818,0)
 ;ven/gpl;ppi;procedure;silent;clean;sac;??% tests
"RTN","SAMICAS2",819,0)
 ;@signature
"RTN","SAMICAS2",820,0)
 ; do SSAMISTA^SAMICASE(sid,form,val)
"RTN","SAMICAS2",821,0)
 ;@branches-from
"RTN","SAMICAS2",822,0)
 ; SSAMISTA^SAMICASE
"RTN","SAMICAS2",823,0)
 ;@ppi-called-by
"RTN","SAMICAS2",824,0)
 ; INITSTAT^SAMICAS2
"RTN","SAMICAS2",825,0)
 ; MKSBFORM^SAMICAS3
"RTN","SAMICAS2",826,0)
 ; MKCEFORM^SAMICAS3
"RTN","SAMICAS2",827,0)
 ; MKFUFORM^SAMICAS3
"RTN","SAMICAS2",828,0)
 ; MKPTFORM^SAMICAS3
"RTN","SAMICAS2",829,0)
 ; MKITFORM^SAMICAS3
"RTN","SAMICAS2",830,0)
 ; MKBXFORM^SAMICAS3
"RTN","SAMICAS2",831,0)
 ; MKSBFORM^SAMIHOM3
"RTN","SAMICAS2",832,0)
 ; MKSIFORM^SAMIHOM3
"RTN","SAMICAS2",833,0)
 ;@called-by none
"RTN","SAMICAS2",834,0)
 ;@calls
"RTN","SAMICAS2",835,0)
 ; $$setroot^%wd
"RTN","SAMICAS2",836,0)
 ;@input
"RTN","SAMICAS2",837,0)
 ; sid   = patient's studyid
"RTN","SAMICAS2",838,0)
 ; form  = specific study form (e.g. "sbform-2018-02-26")
"RTN","SAMICAS2",839,0)
 ; value = status (complete, incomplete)
"RTN","SAMICAS2",840,0)
 ;@output
"RTN","SAMICAS2",841,0)
 ; sets 'samistatus' to val in form
"RTN","SAMICAS2",842,0)
 ;@examples [tbd]
"RTN","SAMICAS2",843,0)
 ;@tests
"RTN","SAMICAS2",844,0)
 ; UTSSAMIS^SAMIUTS2
"RTN","SAMICAS2",845,0)
 ;
"RTN","SAMICAS2",846,0)
 ;
"RTN","SAMICAS2",847,0)
 ;@stanza 2 set status
"RTN","SAMICAS2",848,0)
 ;
"RTN","SAMICAS2",849,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS2",850,0)
 new useform set useform=form
"RTN","SAMICAS2",851,0)
 if form["vapals:" set useform=$piece(form,"vapals:",2)
"RTN","SAMICAS2",852,0)
 if '$data(@root@("graph",sid,useform)) quit  ; no form
"RTN","SAMICAS2",853,0)
 set @root@("graph",sid,useform,"samistatus")=val
"RTN","SAMICAS2",854,0)
 ;
"RTN","SAMICAS2",855,0)
 ;
"RTN","SAMICAS2",856,0)
 ;@stanza 3 termination
"RTN","SAMICAS2",857,0)
 ;
"RTN","SAMICAS2",858,0)
 quit  ; end of ppi SSAMISTA^SAMICASE
"RTN","SAMICAS2",859,0)
 ;
"RTN","SAMICAS2",860,0)
 ;
"RTN","SAMICAS2",861,0)
 ;
"RTN","SAMICAS2",862,0)
 ;@wri-code DELFORM^SAMICASE
"RTN","SAMICAS2",863,0)
DELFORM ; post vapals deleteform: delete incomplete form
"RTN","SAMICAS2",864,0)
 ;
"RTN","SAMICAS2",865,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS2",866,0)
 ;
"RTN","SAMICAS2",867,0)
 ;ven/gpl;wri;procedure;silent;clean;sac;??% tests
"RTN","SAMICAS2",868,0)
 ;@signature
"RTN","SAMICAS2",869,0)
 ; do DELFORM^SAMICASE(RESULT,ARGS)
"RTN","SAMICAS2",870,0)
 ;@branches-from
"RTN","SAMICAS2",871,0)
 ; DELFORM^SAMICASE
"RTN","SAMICAS2",872,0)
 ;@wri-called-by
"RTN","SAMICAS2",873,0)
 ; WSVAPALS^SAMIHOM3 [wr deleteform of ws post vapals]
"RTN","SAMICAS2",874,0)
 ;@called-by none
"RTN","SAMICAS2",875,0)
 ;@calls
"RTN","SAMICAS2",876,0)
 ; $$setroot^%wd
"RTN","SAMICAS2",877,0)
 ; $$GSAMISTA
"RTN","SAMICAS2",878,0)
 ; WSCASE^SAMICASE
"RTN","SAMICAS2",879,0)
 ;@input
"RTN","SAMICAS2",880,0)
 ; .ARGS=
"RTN","SAMICAS2",881,0)
 ; .ARGS("studyid")
"RTN","SAMICAS2",882,0)
 ; .ARGS("form")
"RTN","SAMICAS2",883,0)
 ;@output
"RTN","SAMICAS2",884,0)
 ; @RESULT
"RTN","SAMICAS2",885,0)
 ;@tests
"RTN","SAMICAS2",886,0)
 ; UTDELFM^SAMIUTS2
"RTN","SAMICAS2",887,0)
 ;
"RTN","SAMICAS2",888,0)
 ; will not delete intake or background form
"RTN","SAMICAS2",889,0)
 ;
"RTN","SAMICAS2",890,0)
 ;
"RTN","SAMICAS2",891,0)
 ;@stanza 2 delete form
"RTN","SAMICAS2",892,0)
 ;
"RTN","SAMICAS2",893,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS2",894,0)
 new sid set sid=$get(ARGS("studyid"))
"RTN","SAMICAS2",895,0)
 quit:sid=""
"RTN","SAMICAS2",896,0)
 ;
"RTN","SAMICAS2",897,0)
 new form set form=$get(ARGS("form"))
"RTN","SAMICAS2",898,0)
 quit:form=""
"RTN","SAMICAS2",899,0)
 ;
"RTN","SAMICAS2",900,0)
 quit:form["siform"
"RTN","SAMICAS2",901,0)
 ;
"RTN","SAMICAS2",902,0)
 ; quit:'$data(@root@("graph",sid,form))  ; form does not exist
"RTN","SAMICAS2",903,0)
 if $$GSAMISTA(sid,form)="incomplete" do
"RTN","SAMICAS2",904,0)
 . kill @root@("graph",sid,form)
"RTN","SAMICAS2",905,0)
 . quit
"RTN","SAMICAS2",906,0)
 ;
"RTN","SAMICAS2",907,0)
 kill ARGS("samiroute")
"RTN","SAMICAS2",908,0)
 do WSCASE^SAMICASE(.RESULT,.ARGS) ; post vapals casereview:
"RTN","SAMICAS2",909,0)
 ; generate case review page
"RTN","SAMICAS2",910,0)
 ;
"RTN","SAMICAS2",911,0)
 ;
"RTN","SAMICAS2",912,0)
 ;@stanza 3 termination
"RTN","SAMICAS2",913,0)
 ;
"RTN","SAMICAS2",914,0)
 quit  ; end of wri DELFORM^SAMICASE
"RTN","SAMICAS2",915,0)
 ;
"RTN","SAMICAS2",916,0)
 ;
"RTN","SAMICAS2",917,0)
 ;
"RTN","SAMICAS2",918,0)
INITSTAT ; set all forms to 'incomplete'
"RTN","SAMICAS2",919,0)
 ;
"RTN","SAMICAS2",920,0)
 ;@called by : none
"RTN","SAMICAS2",921,0)
 ;@calls
"RTN","SAMICAS2",922,0)
 ; SSAMISTA^SAMICASE
"RTN","SAMICAS2",923,0)
 ;@input : none
"RTN","SAMICAS2",924,0)
 ;@output
"RTN","SAMICAS2",925,0)
 ; set all forms to 'incomplete'
"RTN","SAMICAS2",926,0)
 ;@tests
"RTN","SAMICAS2",927,0)
 ;
"RTN","SAMICAS2",928,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS2",929,0)
 new zi,zj set (zi,zj)=""
"RTN","SAMICAS2",930,0)
 for  set zi=$order(@root@("graph",zi)) quit:zi=""  do  ;
"RTN","SAMICAS2",931,0)
 . for  set zj=$order(@root@("graph",zi,zj)) quit:zj=""  do  ;
"RTN","SAMICAS2",932,0)
 . . if zj["siform" do SSAMISTA^SAMICASE(zi,zj,"complete") quit  ;
"RTN","SAMICAS2",933,0)
 . . do SSAMISTA^SAMICASE(zi,zj,"incomplete")
"RTN","SAMICAS2",934,0)
 ;
"RTN","SAMICAS2",935,0)
 quit  ; end of INITSTAT
"RTN","SAMICAS2",936,0)
 ;
"RTN","SAMICAS2",937,0)
 ;
"RTN","SAMICAS2",938,0)
 ;
"RTN","SAMICAS2",939,0)
EOR ; end of routine SAMICAS2
"RTN","SAMICAS3")
0^4^B499773480
"RTN","SAMICAS3",1,0)
SAMICAS3 ;ven/gpl - case review cont ;2021-08-10t18:39z
"RTN","SAMICAS3",2,0)
 ;;18.0;SAMI;**3,9,11,12**;2020-01;Build 1
"RTN","SAMICAS3",3,0)
 ;;18.12
"RTN","SAMICAS3",4,0)
 ;
"RTN","SAMICAS3",5,0)
 ; SAMICAS3 contains ppis and other subroutines to support processing
"RTN","SAMICAS3",6,0)
 ; of the VAPALS-IELCAP case review page.
"RTN","SAMICAS3",7,0)
 ;
"RTN","SAMICAS3",8,0)
 quit  ; no entry from top
"RTN","SAMICAS3",9,0)
 ;
"RTN","SAMICAS3",10,0)
 ;
"RTN","SAMICAS3",11,0)
 ;
"RTN","SAMICAS3",12,0)
 ;@section 0 primary development: see routine %wful
"RTN","SAMICAS3",13,0)
 ;
"RTN","SAMICAS3",14,0)
 ;
"RTN","SAMICAS3",15,0)
 ;
"RTN","SAMICAS3",16,0)
 ;@license see routine SAMIUL
"RTN","SAMICAS3",17,0)
 ;@documentation see SAMICUL
"RTN","SAMICAS3",18,0)
 ;@contents
"RTN","SAMICAS3",19,0)
 ; WSNFPOST wri-code WSNFPOST^SAMICAS3, post vapals addform: new form
"RTN","SAMICAS3",20,0)
 ; MKSBFORM create background form
"RTN","SAMICAS3",21,0)
 ;
"RTN","SAMICAS3",22,0)
 ; $$PREVNOD key of latest form including nodule grid
"RTN","SAMICAS3",23,0)
 ; $$LASTCMP date & key of last comparison scan
"RTN","SAMICAS3",24,0)
 ; $$PRIORCMP dates of all scans before last comparison scan
"RTN","SAMICAS3",25,0)
 ; $$KEY2DT date to put in prior scans field
"RTN","SAMICAS3",26,0)
 ; SORTFRMS sorts all forms for patient sid by date
"RTN","SAMICAS3",27,0)
 ;
"RTN","SAMICAS3",28,0)
 ; MKCEFORM create ct evaluation form
"RTN","SAMICAS3",29,0)
 ; MKFUFORM create follow-up form
"RTN","SAMICAS3",30,0)
 ; $$BASELNDT last previous baseline ct date
"RTN","SAMICAS3",31,0)
 ; MKPTFORM create pet evaluation form
"RTN","SAMICAS3",32,0)
 ; MKITFORM create intervention form
"RTN","SAMICAS3",33,0)
 ; MKBXFORM create biopsy form
"RTN","SAMICAS3",34,0)
 ; CASETBL generates case review table
"RTN","SAMICAS3",35,0)
 ;
"RTN","SAMICAS3",36,0)
 ;
"RTN","SAMICAS3",37,0)
 ;
"RTN","SAMICAS3",38,0)
 ;@section 1 WSNFPOST & related subroutines
"RTN","SAMICAS3",39,0)
 ;
"RTN","SAMICAS3",40,0)
 ;
"RTN","SAMICAS3",41,0)
 ;
"RTN","SAMICAS3",42,0)
 ;@wri-code WSNFPOST^SAMICAS3
"RTN","SAMICAS3",43,0)
WSNFPOST ; post vapals addform: new form
"RTN","SAMICAS3",44,0)
 ;
"RTN","SAMICAS3",45,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",46,0)
 ;
"RTN","SAMICAS3",47,0)
 ;ven/gpl;wri;procedure;clean;silent;sac;??% tests
"RTN","SAMICAS3",48,0)
 ;@signature
"RTN","SAMICAS3",49,0)
 ; do WSNFPOST^SAMICASE(ARGS,BODY,RESULT)
"RTN","SAMICAS3",50,0)
 ;@branches-from
"RTN","SAMICAS3",51,0)
 ; WSNFPOST^SAMICASE
"RTN","SAMICAS3",52,0)
 ;@ppi-called-by
"RTN","SAMICAS3",53,0)
 ; WSVAPALS^SAMIHOME [wr addform of ws post vapals]
"RTN","SAMICAS3",54,0)
 ;@called-by none
"RTN","SAMICAS3",55,0)
 ;@calls
"RTN","SAMICAS3",56,0)
 ; parseBody^%wf
"RTN","SAMICAS3",57,0)
 ; GETHOME^SAMIHOM3
"RTN","SAMICAS3",58,0)
 ; $$KEYDATE^SAMIHOM3
"RTN","SAMICAS3",59,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",60,0)
 ; $$KEY2FM^SAMICAS2
"RTN","SAMICAS3",61,0)
 ; $$FMADD^XLFDT
"RTN","SAMICAS3",62,0)
 ; WSCASE^SAMICASE
"RTN","SAMICAS3",63,0)
 ; MKSBFORM^SAMICAS3
"RTN","SAMICAS3",64,0)
 ; MKCEFORM^SAMICAS3
"RTN","SAMICAS3",65,0)
 ; MKFUFORM^SAMICAS3
"RTN","SAMICAS3",66,0)
 ; MKBXFORM^SAMICAS3
"RTN","SAMICAS3",67,0)
 ; MKPTFORM^SAMICAS3
"RTN","SAMICAS3",68,0)
 ; MKITFORM^SAMICAS3
"RTN","SAMICAS3",69,0)
 ; wsGetForm^%wf
"RTN","SAMICAS3",70,0)
 ;@input
"RTN","SAMICAS3",71,0)
 ; .ARGS
"RTN","SAMICAS3",72,0)
 ; .ARGS("form")
"RTN","SAMICAS3",73,0)
 ; .ARGS("studyid")
"RTN","SAMICAS3",74,0)
 ; .ARGS("sid")
"RTN","SAMICAS3",75,0)
 ; .BODY
"RTN","SAMICAS3",76,0)
 ; .BODY(1) (e.g. "samiroute=casereview&dfn="_dfn_"&studyid="_studyid)
"RTN","SAMICAS3",77,0)
 ;@output
"RTN","SAMICAS3",78,0)
 ; @RESULT
"RTN","SAMICAS3",79,0)
 ;@tests
"RTN","SAMICAS3",80,0)
 ; UTNFPST^SAMIUTS2
"RTN","SAMICAS3",81,0)
 ;
"RTN","SAMICAS3",82,0)
 ;
"RTN","SAMICAS3",83,0)
 ;@stanza 2 get new form
"RTN","SAMICAS3",84,0)
 ;
"RTN","SAMICAS3",85,0)
 new vars,bdy
"RTN","SAMICAS3",86,0)
 set bdy=$get(BODY(1))
"RTN","SAMICAS3",87,0)
 do parseBody^%wf("vars",.bdy)
"RTN","SAMICAS3",88,0)
 merge vars=ARGS
"RTN","SAMICAS3",89,0)
 merge ^SAMIUL("nuform","vars")=vars
"RTN","SAMICAS3",90,0)
 ;
"RTN","SAMICAS3",91,0)
 new sid set sid=$get(vars("studyid"))
"RTN","SAMICAS3",92,0)
 if sid="" set sid=$get(ARGS("sid"))
"RTN","SAMICAS3",93,0)
 if sid="" do  quit  ;
"RTN","SAMICAS3",94,0)
 . do GETHOME^SAMIHOM3(.RESULT,.ARGS) ; on error return to home page
"RTN","SAMICAS3",95,0)
 . quit
"RTN","SAMICAS3",96,0)
 ;
"RTN","SAMICAS3",97,0)
 set nuform=$get(vars("form"))
"RTN","SAMICAS3",98,0)
 if nuform="" set nuform="ceform"
"RTN","SAMICAS3",99,0)
 ;
"RTN","SAMICAS3",100,0)
 new datekey set datekey=$$KEYDATE^SAMIHOM3($$NOW^XLFDT)
"RTN","SAMICAS3",101,0)
 ;
"RTN","SAMICAS3",102,0)
 ; check to see if form already exists
"RTN","SAMICAS3",103,0)
 ;
"RTN","SAMICAS3",104,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",105,0)
 new collide set collide=0 ; duplicate form for today - backdate forms scenario
"RTN","SAMICAS3",106,0)
 if $data(@root@("graph",sid,nuform_"-"_datekey)) do  ; already exists
"RTN","SAMICAS3",107,0)
 . set collide=1
"RTN","SAMICAS3",108,0)
 . if nuform="siform" quit
"RTN","SAMICAS3",109,0)
 . if nuform="sbform" quit  ; do not create multiple background forms
"RTN","SAMICAS3",110,0)
 . new lastone
"RTN","SAMICAS3",111,0)
 . set lastone=$order(@root@("graph",sid,nuform_"-a  "),-1)
"RTN","SAMICAS3",112,0)
 . quit:lastone=""
"RTN","SAMICAS3",113,0)
 . set newfm=$$KEY2FM^SAMICASE(lastone)
"RTN","SAMICAS3",114,0)
 . set datekey=$$KEYDATE^SAMIHOM3($$FMADD^XLFDT(newfm,1)) ; add one day to the last form
"RTN","SAMICAS3",115,0)
 . quit
"RTN","SAMICAS3",116,0)
 ;
"RTN","SAMICAS3",117,0)
 ; code to not allow two same forms for a patient a day
"RTN","SAMICAS3",118,0)
 ;
"RTN","SAMICAS3",119,0)
 if collide=1 do  quit  ;
"RTN","SAMICAS3",120,0)
 . set ARGS("errorMessage")="Form already exists for today"
"RTN","SAMICAS3",121,0)
 . set ARGS("studyid")=sid
"RTN","SAMICAS3",122,0)
 . do WSCASE^SAMICASE(.RESULT,.ARGS)
"RTN","SAMICAS3",123,0)
 . quit
"RTN","SAMICAS3",124,0)
 ;
"RTN","SAMICAS3",125,0)
 if nuform="sbform" do  ;
"RTN","SAMICAS3",126,0)
 . new oldkey set oldkey=$order(@root@("graph",sid,"sbform"))
"RTN","SAMICAS3",127,0)
 . if $extract(oldkey,1,6)="sbform" do  quit  ;
"RTN","SAMICAS3",128,0)
 . . set ARGS("key")=oldkey
"RTN","SAMICAS3",129,0)
 . . set ARGS("studyid")=sid
"RTN","SAMICAS3",130,0)
 . . set ARGS("form")="vapals:sbform"
"RTN","SAMICAS3",131,0)
 . . quit
"RTN","SAMICAS3",132,0)
 . new key set key="sbform-"_datekey
"RTN","SAMICAS3",133,0)
 . set ARGS("key")=key
"RTN","SAMICAS3",134,0)
 . set ARGS("studyid")=sid
"RTN","SAMICAS3",135,0)
 . set ARGS("form")="vapals:sbform"
"RTN","SAMICAS3",136,0)
 . do MKSBFORM(sid,key)
"RTN","SAMICAS3",137,0)
 . quit
"RTN","SAMICAS3",138,0)
 ;
"RTN","SAMICAS3",139,0)
 if nuform="ceform" do  ;
"RTN","SAMICAS3",140,0)
 . new key set key="ceform-"_datekey
"RTN","SAMICAS3",141,0)
 . set ARGS("key")=key
"RTN","SAMICAS3",142,0)
 . set ARGS("studyid")=sid
"RTN","SAMICAS3",143,0)
 . set ARGS("form")="vapals:ceform"
"RTN","SAMICAS3",144,0)
 . do MKCEFORM(sid,key)
"RTN","SAMICAS3",145,0)
 . quit
"RTN","SAMICAS3",146,0)
 ;
"RTN","SAMICAS3",147,0)
 if nuform="fuform" do  ;
"RTN","SAMICAS3",148,0)
 . new key set key="fuform-"_datekey
"RTN","SAMICAS3",149,0)
 . set ARGS("key")=key
"RTN","SAMICAS3",150,0)
 . set ARGS("studyid")=sid
"RTN","SAMICAS3",151,0)
 . set ARGS("form")="vapals:fuform"
"RTN","SAMICAS3",152,0)
 . do MKFUFORM(sid,key)
"RTN","SAMICAS3",153,0)
 . quit
"RTN","SAMICAS3",154,0)
 ;
"RTN","SAMICAS3",155,0)
 if nuform="bxform" do  ;
"RTN","SAMICAS3",156,0)
 . new key set key="bxform-"_datekey
"RTN","SAMICAS3",157,0)
 . set ARGS("key")=key
"RTN","SAMICAS3",158,0)
 . set ARGS("studyid")=sid
"RTN","SAMICAS3",159,0)
 . set ARGS("form")="vapals:bxform"
"RTN","SAMICAS3",160,0)
 . do MKBXFORM(sid,key)
"RTN","SAMICAS3",161,0)
 . quit
"RTN","SAMICAS3",162,0)
 ;
"RTN","SAMICAS3",163,0)
 if nuform="ptform" do  ;
"RTN","SAMICAS3",164,0)
 . new key set key="ptform-"_datekey
"RTN","SAMICAS3",165,0)
 . set ARGS("key")=key
"RTN","SAMICAS3",166,0)
 . set ARGS("studyid")=sid
"RTN","SAMICAS3",167,0)
 . set ARGS("form")="vapals:ptform"
"RTN","SAMICAS3",168,0)
 . do MKPTFORM(sid,key)
"RTN","SAMICAS3",169,0)
 . quit
"RTN","SAMICAS3",170,0)
 ;
"RTN","SAMICAS3",171,0)
 if nuform="itform" do  ;
"RTN","SAMICAS3",172,0)
 . new key set key="itform-"_datekey
"RTN","SAMICAS3",173,0)
 . set ARGS("key")=key
"RTN","SAMICAS3",174,0)
 . set ARGS("studyid")=sid
"RTN","SAMICAS3",175,0)
 . set ARGS("form")="vapals:itform"
"RTN","SAMICAS3",176,0)
 . do MKITFORM(sid,key)
"RTN","SAMICAS3",177,0)
 . quit
"RTN","SAMICAS3",178,0)
 ;
"RTN","SAMICAS3",179,0)
 do wsGetForm^%wf(.RESULT,.ARGS)
"RTN","SAMICAS3",180,0)
 ;
"RTN","SAMICAS3",181,0)
 ;
"RTN","SAMICAS3",182,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",183,0)
 ;
"RTN","SAMICAS3",184,0)
 quit  ; end of wri WSNFPOST^SAMICASE
"RTN","SAMICAS3",185,0)
 ;
"RTN","SAMICAS3",186,0)
 ;
"RTN","SAMICAS3",187,0)
 ;
"RTN","SAMICAS3",188,0)
MKSBFORM(sid,key) ; create background form
"RTN","SAMICAS3",189,0)
 ;
"RTN","SAMICAS3",190,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",191,0)
 ;
"RTN","SAMICAS3",192,0)
 ;ven/gpl;private;procedure;
"RTN","SAMICAS3",193,0)
 ;@called-by
"RTN","SAMICAS3",194,0)
 ; WSNFPOST^SAMICAS3
"RTN","SAMICAS3",195,0)
 ;@calls
"RTN","SAMICAS3",196,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",197,0)
 ; $$SID2NUM^SAMIHOM3
"RTN","SAMICAS3",198,0)
 ; SSAMISTA^SAMICASE
"RTN","SAMICAS3",199,0)
 ;@input
"RTN","SAMICAS3",200,0)
 ; sid = study id
"RTN","SAMICAS3",201,0)
 ; key = form key, e.g. sbform-2021-05-25
"RTN","SAMICAS3",202,0)
 ;@output
"RTN","SAMICAS3",203,0)
 ; @root@("graph",sid,key)
"RTN","SAMICAS3",204,0)
 ;@examples [tbd]
"RTN","SAMICAS3",205,0)
 ;@tests [tbd]
"RTN","SAMICAS3",206,0)
 ;
"RTN","SAMICAS3",207,0)
 ;@stanza 2 create background form
"RTN","SAMICAS3",208,0)
 ;
"RTN","SAMICAS3",209,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",210,0)
 new sien set sien=$$SID2NUM^SAMIHOM3(sid)
"RTN","SAMICAS3",211,0)
 quit:+sien=0
"RTN","SAMICAS3",212,0)
 ;
"RTN","SAMICAS3",213,0)
 new cdate set cdate=$piece(key,"sbform-",2)
"RTN","SAMICAS3",214,0)
 merge @root@("graph",sid,key)=@root@(sien)
"RTN","SAMICAS3",215,0)
 set @root@("graph",sid,key,"samicreatedate")=cdate
"RTN","SAMICAS3",216,0)
 do SSAMISTA^SAMICASE(sid,key,"incomplete")
"RTN","SAMICAS3",217,0)
 ;
"RTN","SAMICAS3",218,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",219,0)
 ;
"RTN","SAMICAS3",220,0)
 quit  ; end of MKSBFORM
"RTN","SAMICAS3",221,0)
 ;
"RTN","SAMICAS3",222,0)
 ;
"RTN","SAMICAS3",223,0)
 ;
"RTN","SAMICAS3",224,0)
PREVNOD(sid) ; key of latest form including nodule grid
"RTN","SAMICAS3",225,0)
 ;
"RTN","SAMICAS3",226,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",227,0)
 ;
"RTN","SAMICAS3",228,0)
 ;ven/gpl;private;function;clean;silent;sac;
"RTN","SAMICAS3",229,0)
 ;@called-by none [commented out in MKCEFORM,MKPTFORM,MKBXFORM]
"RTN","SAMICAS3",230,0)
 ;@calls
"RTN","SAMICAS3",231,0)
 ; SORTFRMS
"RTN","SAMICAS3",232,0)
 ;@input
"RTN","SAMICAS3",233,0)
 ; sid = study id
"RTN","SAMICAS3",234,0)
 ;@output = key of latest form incl nodule grid
"RTN","SAMICAS3",235,0)
 ;@examples [tbd]
"RTN","SAMICAS3",236,0)
 ;@tests [tbd]
"RTN","SAMICAS3",237,0)
 ;
"RTN","SAMICAS3",238,0)
 ; used for nodule copy
"RTN","SAMICAS3",239,0)
 ;
"RTN","SAMICAS3",240,0)
 ;
"RTN","SAMICAS3",241,0)
 ;@stanza 2 calculate key of latest form incl nodule grid
"RTN","SAMICAS3",242,0)
 ;
"RTN","SAMICAS3",243,0)
 new retkey set retkey=""
"RTN","SAMICAS3",244,0)
 new fary
"RTN","SAMICAS3",245,0)
 do SORTFRMS(.fary,sid)
"RTN","SAMICAS3",246,0)
 ;
"RTN","SAMICAS3",247,0)
 new tdt set tdt=""
"RTN","SAMICAS3",248,0)
 for  set tdt=$order(fary(tdt),-1) quit:tdt=""  quit:retkey'=""  do  ; 
"RTN","SAMICAS3",249,0)
 . new tmpkey set tmpkey=""
"RTN","SAMICAS3",250,0)
 . for  set tmpkey=$order(fary(tdt,tmpkey)) quit:tmpkey=""  quit:retkey'=""  do  ; 
"RTN","SAMICAS3",251,0)
 . . if tmpkey["ceform" set retkey=tmpkey
"RTN","SAMICAS3",252,0)
 . . if tmpkey["ptform" set retkey=tmpkey
"RTN","SAMICAS3",253,0)
 . . if tmpkey["bxform" set retkey=tmpkey
"RTN","SAMICAS3",254,0)
 . . quit
"RTN","SAMICAS3",255,0)
 . quit
"RTN","SAMICAS3",256,0)
 ;
"RTN","SAMICAS3",257,0)
 ;
"RTN","SAMICAS3",258,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",259,0)
 ;
"RTN","SAMICAS3",260,0)
 quit retkey ; end of $$PREVNOD
"RTN","SAMICAS3",261,0)
 ;
"RTN","SAMICAS3",262,0)
 ;
"RTN","SAMICAS3",263,0)
 ;
"RTN","SAMICAS3",264,0)
LASTCMP(sid,retkey) ; date & key of last comparison scan
"RTN","SAMICAS3",265,0)
 ;
"RTN","SAMICAS3",266,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",267,0)
 ;
"RTN","SAMICAS3",268,0)
 ;ven/gpl;private;function;clean;silent;sac;
"RTN","SAMICAS3",269,0)
 ;@called-by
"RTN","SAMICAS3",270,0)
 ; MKBXFORM
"RTN","SAMICAS3",271,0)
 ; MKCEFORM
"RTN","SAMICAS3",272,0)
 ; MKFUFORM
"RTN","SAMICAS3",273,0)
 ; MKITFORM
"RTN","SAMICAS3",274,0)
 ; MKPTFORM
"RTN","SAMICAS3",275,0)
 ;@calls
"RTN","SAMICAS3",276,0)
 ; SORTFRMS
"RTN","SAMICAS3",277,0)
 ; $$NOW^XLFDT
"RTN","SAMICAS3",278,0)
 ; $$KEY2FM^SAMICASE
"RTN","SAMICAS3",279,0)
 ; $$VAPALSDT^SAMICASE
"RTN","SAMICAS3",280,0)
 ;@input
"RTN","SAMICAS3",281,0)
 ; sid = study id
"RTN","SAMICAS3",282,0)
 ;@output = date of last comparison scan
"RTN","SAMICAS3",283,0)
 ; .retkey = key of last comparison scan
"RTN","SAMICAS3",284,0)
 ;@examples [tbd]
"RTN","SAMICAS3",285,0)
 ;@tests [tbd]
"RTN","SAMICAS3",286,0)
 ;
"RTN","SAMICAS3",287,0)
 ;
"RTN","SAMICAS3",288,0)
 ;@stanza 2 calculate date & key of last comparison scan
"RTN","SAMICAS3",289,0)
 ;
"RTN","SAMICAS3",290,0)
 set retkey=""
"RTN","SAMICAS3",291,0)
 new fary
"RTN","SAMICAS3",292,0)
 do SORTFRMS(.fary,sid)
"RTN","SAMICAS3",293,0)
 ;
"RTN","SAMICAS3",294,0)
 ;new tdt set tdt=$piece($$NOW^XLFDT,".",1)+1 ; start with today
"RTN","SAMICAS3",295,0)
 new tdt set tdt=$piece($$NOW^XLFDT,".",1) ; start with before today
"RTN","SAMICAS3",296,0)
 for  set tdt=$order(fary(tdt),-1) quit:tdt=""  quit:retkey'=""  do  ; 
"RTN","SAMICAS3",297,0)
 . new tmpkey set tmpkey=""
"RTN","SAMICAS3",298,0)
 . for  set tmpkey=$order(fary(tdt,tmpkey)) quit:tmpkey=""  quit:retkey'=""  do  ; 
"RTN","SAMICAS3",299,0)
 . . if tmpkey["ceform" set retkey=tmpkey
"RTN","SAMICAS3",300,0)
 . . quit
"RTN","SAMICAS3",301,0)
 . quit
"RTN","SAMICAS3",302,0)
 ;
"RTN","SAMICAS3",303,0)
 new retdt set retdt=-1
"RTN","SAMICAS3",304,0)
 if retkey'="" do  ;
"RTN","SAMICAS3",305,0)
 . new fmdt set fmdt=$$KEY2FM^SAMICASE(retkey)
"RTN","SAMICAS3",306,0)
 . set retdt=$$VAPALSDT^SAMICASE(fmdt)
"RTN","SAMICAS3",307,0)
 . quit
"RTN","SAMICAS3",308,0)
 ;
"RTN","SAMICAS3",309,0)
 ;
"RTN","SAMICAS3",310,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",311,0)
 ;
"RTN","SAMICAS3",312,0)
 quit retdt ; end of $$LASTCMP
"RTN","SAMICAS3",313,0)
 ;
"RTN","SAMICAS3",314,0)
 ;
"RTN","SAMICAS3",315,0)
 ;
"RTN","SAMICAS3",316,0)
PRIORCMP(sid) ; dates of all scans before last comparison scan
"RTN","SAMICAS3",317,0)
 ;
"RTN","SAMICAS3",318,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",319,0)
 ;
"RTN","SAMICAS3",320,0)
 ;ven/gpl;private;function;clean;silent;sac;
"RTN","SAMICAS3",321,0)
 ;@called-by
"RTN","SAMICAS3",322,0)
 ; MKCEFORM
"RTN","SAMICAS3",323,0)
 ; MKPTFORM
"RTN","SAMICAS3",324,0)
 ; MKITFORM
"RTN","SAMICAS3",325,0)
 ;@calls
"RTN","SAMICAS3",326,0)
 ; SORTFRMS
"RTN","SAMICAS3",327,0)
 ; $$NOW^XLFDT
"RTN","SAMICAS3",328,0)
 ; $$KEY2DT
"RTN","SAMICAS3",329,0)
 ; $$VAPALSDT^SAMICASE
"RTN","SAMICAS3",330,0)
 ;@input
"RTN","SAMICAS3",331,0)
 ; sid = study id
"RTN","SAMICAS3",332,0)
 ;@output = dates of all scans before last comparison scan
"RTN","SAMICAS3",333,0)
 ;@examples [tbd]
"RTN","SAMICAS3",334,0)
 ;@tests [tbd]
"RTN","SAMICAS3",335,0)
 ;
"RTN","SAMICAS3",336,0)
 ;
"RTN","SAMICAS3",337,0)
 ;@stanza 2 calculate dates of all scans before last comparison scan
"RTN","SAMICAS3",338,0)
 ;
"RTN","SAMICAS3",339,0)
 new retstr set retstr=""
"RTN","SAMICAS3",340,0)
 new lastcmp set lastcmp=""
"RTN","SAMICAS3",341,0)
 new fary
"RTN","SAMICAS3",342,0)
 do SORTFRMS(.fary,sid)
"RTN","SAMICAS3",343,0)
 ;
"RTN","SAMICAS3",344,0)
 ;new tdt set tdt=$piece($$NOW^XLFDT,".",1)+1 ; start with today
"RTN","SAMICAS3",345,0)
 new tdt set tdt=$piece($$NOW^XLFDT,".",1) ; start with before today
"RTN","SAMICAS3",346,0)
 for  set tdt=$order(fary(tdt),-1) quit:tdt=""  do  ; 
"RTN","SAMICAS3",347,0)
 . ;
"RTN","SAMICAS3",348,0)
 . if lastcmp="" do  ; first find the last comparison scan
"RTN","SAMICAS3",349,0)
 . . new tmpkey set tmpkey=""
"RTN","SAMICAS3",350,0)
 . . for  set tmpkey=$order(fary(tdt,tmpkey)) quit:tmpkey=""  quit:lastcmp'=""  do  ; 
"RTN","SAMICAS3",351,0)
 . . . if tmpkey["ceform" set lastcmp=tmpkey
"RTN","SAMICAS3",352,0)
 . . . quit
"RTN","SAMICAS3",353,0)
 . . quit
"RTN","SAMICAS3",354,0)
 . ;
"RTN","SAMICAS3",355,0)
 . do  ;
"RTN","SAMICAS3",356,0)
 . . ; next add all previous scans to retstr
"RTN","SAMICAS3",357,0)
 . . new tmpkey2 set tmpkey2=""
"RTN","SAMICAS3",358,0)
 . . for  set tmpkey2=$order(fary(tdt,tmpkey2)) quit:tmpkey2=""  do  ; 
"RTN","SAMICAS3",359,0)
 . . . if tmpkey2["ceform" do  ; convert to external date
"RTN","SAMICAS3",360,0)
 . . . . set retstr=$$KEY2DT(tmpkey2)_retstr
"RTN","SAMICAS3",361,0)
 . . . . quit
"RTN","SAMICAS3",362,0)
 . . . quit
"RTN","SAMICAS3",363,0)
 . . quit
"RTN","SAMICAS3",364,0)
 . quit
"RTN","SAMICAS3",365,0)
 ;
"RTN","SAMICAS3",366,0)
 if $extract(retstr,$length(retstr))="," do
"RTN","SAMICAS3",367,0)
 . set retstr=$extract(retstr,1,$length(retstr)-1)
"RTN","SAMICAS3",368,0)
 . quit
"RTN","SAMICAS3",369,0)
 ;
"RTN","SAMICAS3",370,0)
 if retstr="" set retstr=$$VAPALSDT^SAMICASE($$NOW^XLFDT)
"RTN","SAMICAS3",371,0)
 ;
"RTN","SAMICAS3",372,0)
 ;
"RTN","SAMICAS3",373,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",374,0)
 ;
"RTN","SAMICAS3",375,0)
 quit retstr ; end of $$PRIORCMP
"RTN","SAMICAS3",376,0)
 ;
"RTN","SAMICAS3",377,0)
 ;
"RTN","SAMICAS3",378,0)
 ;
"RTN","SAMICAS3",379,0)
KEY2DT(key) ; date to put in prior scans field
"RTN","SAMICAS3",380,0)
 ;
"RTN","SAMICAS3",381,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",382,0)
 ;
"RTN","SAMICAS3",383,0)
 ;ven/gpl;private;function;clean;silent;sac;
"RTN","SAMICAS3",384,0)
 ;@called-by
"RTN","SAMICAS3",385,0)
 ; $$PRIORCMP
"RTN","SAMICAS3",386,0)
 ;@calls
"RTN","SAMICAS3",387,0)
 ; $$KEY2FM^SAMICASE
"RTN","SAMICAS3",388,0)
 ; $$VAPALSDT^SAMICASE
"RTN","SAMICAS3",389,0)
 ;@input
"RTN","SAMICAS3",390,0)
 ; key = form key, e.g. ctform-2021-05-25
"RTN","SAMICAS3",391,0)
 ;@output = date to put in prior scans field
"RTN","SAMICAS3",392,0)
 ;@examples [tbd]
"RTN","SAMICAS3",393,0)
 ;@tests [tbd]
"RTN","SAMICAS3",394,0)
 ;
"RTN","SAMICAS3",395,0)
 ;
"RTN","SAMICAS3",396,0)
 ;@stanza 2 calculate prior scans date
"RTN","SAMICAS3",397,0)
 ;
"RTN","SAMICAS3",398,0)
 new retstr2 set retstr2=""
"RTN","SAMICAS3",399,0)
 new fmdt set fmdt=$$KEY2FM^SAMICASE(tmpkey2)
"RTN","SAMICAS3",400,0)
 set retstr2=$$VAPALSDT^SAMICASE(fmdt)_","_retstr2
"RTN","SAMICAS3",401,0)
 ;
"RTN","SAMICAS3",402,0)
 ;
"RTN","SAMICAS3",403,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",404,0)
 ;
"RTN","SAMICAS3",405,0)
 quit retstr2 ; end of $$KEY2DT
"RTN","SAMICAS3",406,0)
 ;
"RTN","SAMICAS3",407,0)
 ;
"RTN","SAMICAS3",408,0)
 ;
"RTN","SAMICAS3",409,0)
SORTFRMS(ARY,sid) ; sorts all forms for patient sid by date
"RTN","SAMICAS3",410,0)
 ;
"RTN","SAMICAS3",411,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",412,0)
 ;
"RTN","SAMICAS3",413,0)
 ;ven/gpl;private;procedure;clean;silent;sac;
"RTN","SAMICAS3",414,0)
 ;@called-by
"RTN","SAMICAS3",415,0)
 ; $$PREVNOD
"RTN","SAMICAS3",416,0)
 ; $$LASTCMP
"RTN","SAMICAS3",417,0)
 ; $$PRIORCMP
"RTN","SAMICAS3",418,0)
 ;@calls
"RTN","SAMICAS3",419,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",420,0)
 ; ^%DT
"RTN","SAMICAS3",421,0)
 ; ^%ZTER
"RTN","SAMICAS3",422,0)
 ;@input
"RTN","SAMICAS3",423,0)
 ; sid = study id
"RTN","SAMICAS3",424,0)
 ;@output
"RTN","SAMICAS3",425,0)
 ; .ARY: sorted array of all forms for patient by date
"RTN","SAMICAS3",426,0)
 ;  ARY(fmdate,key)=""
"RTN","SAMICAS3",427,0)
 ;@examples [tbd]
"RTN","SAMICAS3",428,0)
 ;@tests [tbd]
"RTN","SAMICAS3",429,0)
 ;
"RTN","SAMICAS3",430,0)
 ;
"RTN","SAMICAS3",431,0)
 ;@stanza 2 sort patient's forms by date
"RTN","SAMICAS3",432,0)
 ;
"RTN","SAMICAS3",433,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",434,0)
 quit:'$data(@root@("graph",sid))
"RTN","SAMICAS3",435,0)
 new froot set froot=$name(@root@("graph",sid))
"RTN","SAMICAS3",436,0)
 ;
"RTN","SAMICAS3",437,0)
 new zi set zi=""
"RTN","SAMICAS3",438,0)
 for  set zi=$order(@froot@(zi)) quit:zi=""  do  ;
"RTN","SAMICAS3",439,0)
 . new ftype set ftype=$piece(zi,"-",1)
"RTN","SAMICAS3",440,0)
 . new fdate set fdate=$piece(zi,ftype_"-",2)
"RTN","SAMICAS3",441,0)
 . new X,Y
"RTN","SAMICAS3",442,0)
 . set X=fdate
"RTN","SAMICAS3",443,0)
 . do ^%DT
"RTN","SAMICAS3",444,0)
 . if Y=-1 do ^%ZTER quit  ;
"RTN","SAMICAS3",445,0)
 . set ARY(Y,zi)=""
"RTN","SAMICAS3",446,0)
 . quit
"RTN","SAMICAS3",447,0)
 ;
"RTN","SAMICAS3",448,0)
 ;
"RTN","SAMICAS3",449,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",450,0)
 ;
"RTN","SAMICAS3",451,0)
 quit  ; end of SORTFRMS
"RTN","SAMICAS3",452,0)
 ;
"RTN","SAMICAS3",453,0)
 ;
"RTN","SAMICAS3",454,0)
 ;
"RTN","SAMICAS3",455,0)
MKCEFORM(sid,key) ; create ct evaluation form
"RTN","SAMICAS3",456,0)
 ;
"RTN","SAMICAS3",457,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",458,0)
 ;
"RTN","SAMICAS3",459,0)
 ;ven/gpl;private;procedure;clean;silent;sac;
"RTN","SAMICAS3",460,0)
 ;@called-by
"RTN","SAMICAS3",461,0)
 ; WSNFPOST^SAMICAS3
"RTN","SAMICAS3",462,0)
 ;@calls
"RTN","SAMICAS3",463,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",464,0)
 ; $$SID2NUM^SAMIHOM3
"RTN","SAMICAS3",465,0)
 ; $$LASTCMP
"RTN","SAMICAS3",466,0)
 ; CTCOPY^SAMICTC1
"RTN","SAMICAS3",467,0)
 ; SSAMISTA^SAMICASE
"RTN","SAMICAS3",468,0)
 ; $$BASELNDT^SAMICAS3
"RTN","SAMICAS3",469,0)
 ; $$VAPALSDT^SAMICASE
"RTN","SAMICAS3",470,0)
 ; $$LASTCMP^SAMICAS3
"RTN","SAMICAS3",471,0)
 ; $$PRIORCMP^SAMICAS3
"RTN","SAMICAS3",472,0)
 ;@input
"RTN","SAMICAS3",473,0)
 ; sid = study id
"RTN","SAMICAS3",474,0)
 ; key = form key, e.g. ceform-2021-05-25
"RTN","SAMICAS3",475,0)
 ;@output
"RTN","SAMICAS3",476,0)
 ; @root@("graph",sid,key)
"RTN","SAMICAS3",477,0)
 ;@examples [tbd]
"RTN","SAMICAS3",478,0)
 ;@tests [tbd]
"RTN","SAMICAS3",479,0)
 ;
"RTN","SAMICAS3",480,0)
 ;
"RTN","SAMICAS3",481,0)
 ;@stanza 2 create ct eval form
"RTN","SAMICAS3",482,0)
 ;
"RTN","SAMICAS3",483,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",484,0)
 new sien set sien=$$SID2NUM^SAMIHOM3(sid)
"RTN","SAMICAS3",485,0)
 quit:+sien=0
"RTN","SAMICAS3",486,0)
 new cdate set cdate=$piece(key,"ceform-",2)
"RTN","SAMICAS3",487,0)
 ;
"RTN","SAMICAS3",488,0)
 ; nodule copy
"RTN","SAMICAS3",489,0)
 ; new srckey set srckey=$$PREVNOD(sid)
"RTN","SAMICAS3",490,0)
 new srckey,srcdate set srcdate=$$LASTCMP(sid,.srckey)
"RTN","SAMICAS3",491,0)
 if srckey'="" do  ;
"RTN","SAMICAS3",492,0)
 . new source set source=$name(@root@("graph",sid,srckey))
"RTN","SAMICAS3",493,0)
 . new target set target=$name(@root@("graph",sid,key))
"RTN","SAMICAS3",494,0)
 . do CTCOPY^SAMICTC1(source,target,key)
"RTN","SAMICAS3",495,0)
 . quit
"RTN","SAMICAS3",496,0)
 ; end nodule copy
"RTN","SAMICAS3",497,0)
 ;
"RTN","SAMICAS3",498,0)
 ; new items,prevct
"RTN","SAMICAS3",499,0)
 ; do GETITEMS^SAMICASE("items",sid)
"RTN","SAMICAS3",500,0)
 ; set prevct=""
"RTN","SAMICAS3",501,0)
 ; if $data(items("type","vapals:ceform")) do  ; previous cteval exists
"RTN","SAMICAS3",502,0)
 ; . set prevct=$order(items("type","vapals:ceform",""),-1) ; latest ceform
"RTN","SAMICAS3",503,0)
 ; . quit
"RTN","SAMICAS3",504,0)
 ; if prevct'="" do  ;
"RTN","SAMICAS3",505,0)
 ; . new target,source
"RTN","SAMICAS3",506,0)
 ; . set source=$name(@root@("graph",sid,prevct))
"RTN","SAMICAS3",507,0)
 ; . set target=$name(@root@("graph",sid,key))
"RTN","SAMICAS3",508,0)
 ; . do CTCOPY^SAMICTC1(source,target,key)
"RTN","SAMICAS3",509,0)
 ; . quit
"RTN","SAMICAS3",510,0)
 ;
"RTN","SAMICAS3",511,0)
 merge @root@("graph",sid,key)=@root@(sien)
"RTN","SAMICAS3",512,0)
 set @root@("graph",sid,key,"samicreatedate")=cdate
"RTN","SAMICAS3",513,0)
 do SSAMISTA^SAMICASE(sid,key,"incomplete")
"RTN","SAMICAS3",514,0)
 ;
"RTN","SAMICAS3",515,0)
 ; set baseline CT date and last comparison scan date
"RTN","SAMICAS3",516,0)
 do  ;
"RTN","SAMICAS3",517,0)
 . new basedt
"RTN","SAMICAS3",518,0)
 . set basedt=$$BASELNDT^SAMICAS3(sid)
"RTN","SAMICAS3",519,0)
 . if basedt=-1 set basedt=$$VAPALSDT^SAMICASE($$NOW^XLFDT)
"RTN","SAMICAS3",520,0)
 . new lastdt set lastdt=$$LASTCMP^SAMICAS3(sid)
"RTN","SAMICAS3",521,0)
 . if lastdt=-1 set lastdt=basedt
"RTN","SAMICAS3",522,0)
 . new priordt set priordt=$$PRIORCMP^SAMICAS3(sid)
"RTN","SAMICAS3",523,0)
 . if priordt=-1 set priordt=lastdt
"RTN","SAMICAS3",524,0)
 . if priordt="" set priordt=lastdt
"RTN","SAMICAS3",525,0)
 . set @root@("graph",sid,key,"sidoe")=basedt
"RTN","SAMICAS3",526,0)
 . set @root@("graph",sid,key,"cedcs")=lastdt
"RTN","SAMICAS3",527,0)
 . set @root@("graph",sid,key,"cedps")=priordt
"RTN","SAMICAS3",528,0)
 . quit
"RTN","SAMICAS3",529,0)
 ;
"RTN","SAMICAS3",530,0)
 ;
"RTN","SAMICAS3",531,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",532,0)
 ;
"RTN","SAMICAS3",533,0)
 quit  ; end of MKCEFORM
"RTN","SAMICAS3",534,0)
 ;
"RTN","SAMICAS3",535,0)
 ;
"RTN","SAMICAS3",536,0)
 ;
"RTN","SAMICAS3",537,0)
MKFUFORM(sid,key) ; create Follow-up form
"RTN","SAMICAS3",538,0)
 ;
"RTN","SAMICAS3",539,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",540,0)
 ;
"RTN","SAMICAS3",541,0)
 ;ven/gpl;private;procedure;clean;silent;sac;
"RTN","SAMICAS3",542,0)
 ;@called-by
"RTN","SAMICAS3",543,0)
 ; WSNFPOST^SAMICAS3
"RTN","SAMICAS3",544,0)
 ;@calls
"RTN","SAMICAS3",545,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",546,0)
 ; $$SID2NUM^SAMIHOM3
"RTN","SAMICAS3",547,0)
 ; $$KEY2DSPD^SAMICAS2
"RTN","SAMICAS3",548,0)
 ; $$BASELNDT
"RTN","SAMICAS3",549,0)
 ; $$LASTCMP
"RTN","SAMICAS3",550,0)
 ; $$NOW^XLFDT
"RTN","SAMICAS3",551,0)
 ; $$VAPALSDT^SAMICASE
"RTN","SAMICAS3",552,0)
 ; SSAMISTA^SAMICASE
"RTN","SAMICAS3",553,0)
 ;@input
"RTN","SAMICAS3",554,0)
 ; sid = study id
"RTN","SAMICAS3",555,0)
 ; key = form key, e.g. fuform-2021-05-25
"RTN","SAMICAS3",556,0)
 ;@output
"RTN","SAMICAS3",557,0)
 ; @root@("graph",sid,key)
"RTN","SAMICAS3",558,0)
 ;@examples [tbd]
"RTN","SAMICAS3",559,0)
 ;@tests [tbd]
"RTN","SAMICAS3",560,0)
 ;
"RTN","SAMICAS3",561,0)
 ;
"RTN","SAMICAS3",562,0)
 ;@stanza 2 create Follow-up form
"RTN","SAMICAS3",563,0)
 ;
"RTN","SAMICAS3",564,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",565,0)
 new sien set sien=$$SID2NUM^SAMIHOM3(sid)
"RTN","SAMICAS3",566,0)
 quit:+sien=0
"RTN","SAMICAS3",567,0)
 ;
"RTN","SAMICAS3",568,0)
 new cdate set cdate=$piece(key,"fuform-",2)
"RTN","SAMICAS3",569,0)
 merge @root@("graph",sid,key)=@root@(sien)
"RTN","SAMICAS3",570,0)
 ;
"RTN","SAMICAS3",571,0)
 set @root@("graph",sid,key,"samicreatedate")=cdate
"RTN","SAMICAS3",572,0)
 set @root@("graph",sid,key,"sidof")=$$KEY2DSPD^SAMICAS2(cdate)
"RTN","SAMICAS3",573,0)
 new basedt
"RTN","SAMICAS3",574,0)
 set basedt=$$BASELNDT^SAMICAS3(sid)
"RTN","SAMICAS3",575,0)
 if basedt=-1 set basedt=$$LASTCMP^SAMICAS3(sid)
"RTN","SAMICAS3",576,0)
 if basedt=-1 set basedt=$$VAPALSDT^SAMICASE($$NOW^XLFDT)
"RTN","SAMICAS3",577,0)
 set @root@("graph",sid,key,"sidoe")=basedt
"RTN","SAMICAS3",578,0)
 do SSAMISTA^SAMICASE(sid,key,"incomplete")
"RTN","SAMICAS3",579,0)
 ;
"RTN","SAMICAS3",580,0)
 ;
"RTN","SAMICAS3",581,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",582,0)
 ;
"RTN","SAMICAS3",583,0)
 quit  ; end of MKFUFORM
"RTN","SAMICAS3",584,0)
 ;
"RTN","SAMICAS3",585,0)
 ;
"RTN","SAMICAS3",586,0)
 ;
"RTN","SAMICAS3",587,0)
BASELNDT(sid) ; last previous baseline ct date
"RTN","SAMICAS3",588,0)
 ;
"RTN","SAMICAS3",589,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",590,0)
 ;
"RTN","SAMICAS3",591,0)
 ;ven/gpl;private;function;clean;silent;sac
"RTN","SAMICAS3",592,0)
 ;@called-by
"RTN","SAMICAS3",593,0)
 ; MKCEFORM
"RTN","SAMICAS3",594,0)
 ; MKFUFORM
"RTN","SAMICAS3",595,0)
 ; MKPTFORM
"RTN","SAMICAS3",596,0)
 ; MKITFORM
"RTN","SAMICAS3",597,0)
 ;@calls
"RTN","SAMICAS3",598,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",599,0)
 ; GETITEMS^SAMICASE
"RTN","SAMICAS3",600,0)
 ; $$KEY2DSPD^SAMICAS2
"RTN","SAMICAS3",601,0)
 ;@input
"RTN","SAMICAS3",602,0)
 ; sid = study id
"RTN","SAMICAS3",603,0)
 ;@output = last previous baseline ct date
"RTN","SAMICAS3",604,0)
 ;@examples [tbd]
"RTN","SAMICAS3",605,0)
 ;@tests [tbd]
"RTN","SAMICAS3",606,0)
 ;
"RTN","SAMICAS3",607,0)
 ;
"RTN","SAMICAS3",608,0)
 ;@stanza 2 calculate last previous baseline ct date
"RTN","SAMICAS3",609,0)
 ;
"RTN","SAMICAS3",610,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",611,0)
 new groot set groot=$name(@root@("graph",sid))
"RTN","SAMICAS3",612,0)
 new items set items=""
"RTN","SAMICAS3",613,0)
 do GETITEMS^SAMICASE("items",sid)
"RTN","SAMICAS3",614,0)
 quit:'$data(items) ""
"RTN","SAMICAS3",615,0)
 ;
"RTN","SAMICAS3",616,0)
 new bdate set bdate=""
"RTN","SAMICAS3",617,0)
 new bkey set bkey=""
"RTN","SAMICAS3",618,0)
 new done set done=0
"RTN","SAMICAS3",619,0)
 for  set bkey=$order(items("type","vapals:ceform",bkey)) quit:bkey=""  do  ;
"RTN","SAMICAS3",620,0)
 . ; write !,bkey," ",$get(@groot@(bkey,"cetex"))
"RTN","SAMICAS3",621,0)
 . if $get(@groot@(bkey,"cetex"))="b" do  ;
"RTN","SAMICAS3",622,0)
 . . set done=1
"RTN","SAMICAS3",623,0)
 . . set bdate=$piece(bkey,"ceform-",2)
"RTN","SAMICAS3",624,0)
 . . quit
"RTN","SAMICAS3",625,0)
 . quit
"RTN","SAMICAS3",626,0)
 set bdate=$$KEY2DSPD^SAMICAS2(bdate)
"RTN","SAMICAS3",627,0)
 ;
"RTN","SAMICAS3",628,0)
 ;
"RTN","SAMICAS3",629,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",630,0)
 ;
"RTN","SAMICAS3",631,0)
 quit bdate ; end of $$BASELNDT
"RTN","SAMICAS3",632,0)
 ;
"RTN","SAMICAS3",633,0)
 ;
"RTN","SAMICAS3",634,0)
 ;
"RTN","SAMICAS3",635,0)
MKPTFORM(sid,key) ; create pet evaluation form
"RTN","SAMICAS3",636,0)
 ;
"RTN","SAMICAS3",637,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",638,0)
 ;
"RTN","SAMICAS3",639,0)
 ;ven/gpl;private;procedure;clean;silent;sac
"RTN","SAMICAS3",640,0)
 ;@called-by
"RTN","SAMICAS3",641,0)
 ; WSNFPOST^SAMICAS3
"RTN","SAMICAS3",642,0)
 ;@calls
"RTN","SAMICAS3",643,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",644,0)
 ; $$SID2NUM^SAMIHOM3
"RTN","SAMICAS3",645,0)
 ; $$LASTCMP
"RTN","SAMICAS3",646,0)
 ; CTCOPY^SAMICTC1
"RTN","SAMICAS3",647,0)
 ; SSAMISTA^SAMICASE
"RTN","SAMICAS3",648,0)
 ; $$BASELNDT^SAMICAS3
"RTN","SAMICAS3",649,0)
 ; $$VAPALSDT^SAMICASE
"RTN","SAMICAS3",650,0)
 ; $$LASTCMP^SAMICAS3
"RTN","SAMICAS3",651,0)
 ; $$PRIORCMP^SAMICAS3
"RTN","SAMICAS3",652,0)
 ;@input
"RTN","SAMICAS3",653,0)
 ; sid = study id
"RTN","SAMICAS3",654,0)
 ; key = form key, e.g. ptform-2021-05-25
"RTN","SAMICAS3",655,0)
 ;@output
"RTN","SAMICAS3",656,0)
 ; @root@("graph",sid,key)
"RTN","SAMICAS3",657,0)
 ;@examples [tbd]
"RTN","SAMICAS3",658,0)
 ;@tests [tbd]
"RTN","SAMICAS3",659,0)
 ;
"RTN","SAMICAS3",660,0)
 ;
"RTN","SAMICAS3",661,0)
 ;@stanza 2 create pet eval form
"RTN","SAMICAS3",662,0)
 ;
"RTN","SAMICAS3",663,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",664,0)
 new sien set sien=$$SID2NUM^SAMIHOM3(sid)
"RTN","SAMICAS3",665,0)
 quit:+sien=0
"RTN","SAMICAS3",666,0)
 ;
"RTN","SAMICAS3",667,0)
 ; nodule copy
"RTN","SAMICAS3",668,0)
 ; new srckey set srckey=$$PREVNOD(sid)
"RTN","SAMICAS3",669,0)
 new srckey,srcdate set srcdate=$$LASTCMP(sid,.srckey)
"RTN","SAMICAS3",670,0)
 if srckey'="" do  ;
"RTN","SAMICAS3",671,0)
 . new source set source=$name(@root@("graph",sid,srckey))
"RTN","SAMICAS3",672,0)
 . new target set target=$name(@root@("graph",sid,key))
"RTN","SAMICAS3",673,0)
 . do CTCOPY^SAMICTC1(source,target,key)
"RTN","SAMICAS3",674,0)
 . quit
"RTN","SAMICAS3",675,0)
 ; end nodule copy
"RTN","SAMICAS3",676,0)
 ;
"RTN","SAMICAS3",677,0)
 new cdate set cdate=$piece(key,"ptform-",2)
"RTN","SAMICAS3",678,0)
 merge @root@("graph",sid,key)=@root@(sien)
"RTN","SAMICAS3",679,0)
 set @root@("graph",sid,key,"samicreatedate")=cdate
"RTN","SAMICAS3",680,0)
 do SSAMISTA^SAMICASE(sid,key,"incomplete")
"RTN","SAMICAS3",681,0)
 ;
"RTN","SAMICAS3",682,0)
 do  ;
"RTN","SAMICAS3",683,0)
 . new basedt
"RTN","SAMICAS3",684,0)
 . set basedt=$$BASELNDT^SAMICAS3(sid)
"RTN","SAMICAS3",685,0)
 . if basedt=-1 set basedt=$$VAPALSDT^SAMICASE($$NOW^XLFDT)
"RTN","SAMICAS3",686,0)
 . new lastdt set lastdt=$$LASTCMP^SAMICAS3(sid)
"RTN","SAMICAS3",687,0)
 . if lastdt=-1 set lastdt=basedt
"RTN","SAMICAS3",688,0)
 . new priordt set priordt=$$PRIORCMP^SAMICAS3(sid)
"RTN","SAMICAS3",689,0)
 . if priordt=-1 set priordt=lastdt
"RTN","SAMICAS3",690,0)
 . set @root@("graph",sid,key,"sidoe")=basedt
"RTN","SAMICAS3",691,0)
 . ; set @root@("graph",sid,key,"cedcs")=lastdt
"RTN","SAMICAS3",692,0)
 . set @root@("graph",sid,key,"cedos")=lastdt ; it's different than on the ce
"RTN","SAMICAS3",693,0)
 . ; set @root@("graph",sid,key,"cedps")=priordt
"RTN","SAMICAS3",694,0)
 . quit
"RTN","SAMICAS3",695,0)
 ;
"RTN","SAMICAS3",696,0)
 ;
"RTN","SAMICAS3",697,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",698,0)
 ;
"RTN","SAMICAS3",699,0)
 quit  ; end of MKPTFORM
"RTN","SAMICAS3",700,0)
 ;
"RTN","SAMICAS3",701,0)
 ;
"RTN","SAMICAS3",702,0)
 ;
"RTN","SAMICAS3",703,0)
MKITFORM(sid,key) ; create intervention form
"RTN","SAMICAS3",704,0)
 ;
"RTN","SAMICAS3",705,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",706,0)
 ;
"RTN","SAMICAS3",707,0)
 ;ven/gpl;private;procedure;clean;silent;sac
"RTN","SAMICAS3",708,0)
 ;@called-by
"RTN","SAMICAS3",709,0)
 ; WSNFPOST^SAMICAS3
"RTN","SAMICAS3",710,0)
 ;@calls
"RTN","SAMICAS3",711,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",712,0)
 ; $$SID2NUM^SAMIHOM3
"RTN","SAMICAS3",713,0)
 ; $$PREVNODE [commented out]
"RTN","SAMICAS3",714,0)
 ; $$LASTCMP
"RTN","SAMICAS3",715,0)
 ; CTCOPY^SAMICTC1
"RTN","SAMICAS3",716,0)
 ; SSAMISTA^SAMICASE
"RTN","SAMICAS3",717,0)
 ; $$BASELNDT^SAMICAS3
"RTN","SAMICAS3",718,0)
 ; $$VAPALSDT^SAMICASE
"RTN","SAMICAS3",719,0)
 ; $$LASTCMP^SAMICAS3
"RTN","SAMICAS3",720,0)
 ; $$PRIORCMP^SAMICAS3
"RTN","SAMICAS3",721,0)
 ;@input
"RTN","SAMICAS3",722,0)
 ; sid = study id
"RTN","SAMICAS3",723,0)
 ; key = form key, e.g. itform-2021-05-25
"RTN","SAMICAS3",724,0)
 ;@output
"RTN","SAMICAS3",725,0)
 ; @root@("graph",sid,key)
"RTN","SAMICAS3",726,0)
 ;@examples [tbd]
"RTN","SAMICAS3",727,0)
 ;@tests [tbd]
"RTN","SAMICAS3",728,0)
 ;
"RTN","SAMICAS3",729,0)
 ;
"RTN","SAMICAS3",730,0)
 ;@stanza 2 create intervention form
"RTN","SAMICAS3",731,0)
 ;
"RTN","SAMICAS3",732,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",733,0)
 new sien set sien=$$SID2NUM^SAMIHOM3(sid)
"RTN","SAMICAS3",734,0)
 quit:+sien=0
"RTN","SAMICAS3",735,0)
 ;
"RTN","SAMICAS3",736,0)
 new cdate set cdate=$piece(key,"itform-",2)
"RTN","SAMICAS3",737,0)
 ;
"RTN","SAMICAS3",738,0)
 ; nodule copy
"RTN","SAMICAS3",739,0)
 ; new srckey set srckey=$$PREVNOD(sid)
"RTN","SAMICAS3",740,0)
 new srckey,srcdate set srcdate=$$LASTCMP(sid,.srckey)
"RTN","SAMICAS3",741,0)
 if srckey'="" do  ;
"RTN","SAMICAS3",742,0)
 . new source set source=$name(@root@("graph",sid,srckey))
"RTN","SAMICAS3",743,0)
 . new target set target=$name(@root@("graph",sid,key))
"RTN","SAMICAS3",744,0)
 . do CTCOPY^SAMICTC1(source,target,key)
"RTN","SAMICAS3",745,0)
 . quit
"RTN","SAMICAS3",746,0)
 ; end nodule copy
"RTN","SAMICAS3",747,0)
 ;
"RTN","SAMICAS3",748,0)
 merge @root@("graph",sid,key)=@root@(sien)
"RTN","SAMICAS3",749,0)
 set @root@("graph",sid,key,"samicreatedate")=cdate
"RTN","SAMICAS3",750,0)
 do SSAMISTA^SAMICASE(sid,key,"incomplete")
"RTN","SAMICAS3",751,0)
 ;
"RTN","SAMICAS3",752,0)
 do  ;
"RTN","SAMICAS3",753,0)
 . new basedt
"RTN","SAMICAS3",754,0)
 . set basedt=$$BASELNDT^SAMICAS3(sid)
"RTN","SAMICAS3",755,0)
 . if basedt=-1 set basedt=$$VAPALSDT^SAMICASE($$NOW^XLFDT)
"RTN","SAMICAS3",756,0)
 . new lastdt set lastdt=$$LASTCMP^SAMICAS3(sid)
"RTN","SAMICAS3",757,0)
 . if lastdt=-1 set lastdt=basedt
"RTN","SAMICAS3",758,0)
 . new priordt set priordt=$$PRIORCMP^SAMICAS3(sid)
"RTN","SAMICAS3",759,0)
 . if priordt=-1 set priordt=lastdt
"RTN","SAMICAS3",760,0)
 . set @root@("graph",sid,key,"sidoe")=basedt
"RTN","SAMICAS3",761,0)
 . ; set @root@("graph",sid,key,"cedcs")=lastdt
"RTN","SAMICAS3",762,0)
 . set @root@("graph",sid,key,"cedos")=lastdt ; it's different than on the ce
"RTN","SAMICAS3",763,0)
 . ; set @root@("graph",sid,key,"cedps")=priordt
"RTN","SAMICAS3",764,0)
 . quit
"RTN","SAMICAS3",765,0)
 ;
"RTN","SAMICAS3",766,0)
 ;
"RTN","SAMICAS3",767,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",768,0)
 ;
"RTN","SAMICAS3",769,0)
 quit  ; end of MKITFORM
"RTN","SAMICAS3",770,0)
 ;
"RTN","SAMICAS3",771,0)
 ;
"RTN","SAMICAS3",772,0)
 ;
"RTN","SAMICAS3",773,0)
MKBXFORM(sid,key) ; create biopsy form
"RTN","SAMICAS3",774,0)
 ;
"RTN","SAMICAS3",775,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",776,0)
 ;
"RTN","SAMICAS3",777,0)
 ;ven/gpl;private;procedure;clean;silent;sac
"RTN","SAMICAS3",778,0)
 ;@called-by
"RTN","SAMICAS3",779,0)
 ; WSNFPOST^SAMICAS3
"RTN","SAMICAS3",780,0)
 ;@calls
"RTN","SAMICAS3",781,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",782,0)
 ; $$SID2NUM^SAMIHOM3
"RTN","SAMICAS3",783,0)
 ; $$LASTCMP
"RTN","SAMICAS3",784,0)
 ; CTCOPY^SAMICTC1
"RTN","SAMICAS3",785,0)
 ; SSAMISTA^SAMICASE
"RTN","SAMICAS3",786,0)
 ;@input
"RTN","SAMICAS3",787,0)
 ; sid = study id
"RTN","SAMICAS3",788,0)
 ; key = form key, e.g. bxform-2021-05-25
"RTN","SAMICAS3",789,0)
 ;@output
"RTN","SAMICAS3",790,0)
 ; @root@("graph",sid,key)
"RTN","SAMICAS3",791,0)
 ;@examples [tbd]
"RTN","SAMICAS3",792,0)
 ;@tests [tbd]
"RTN","SAMICAS3",793,0)
 ;
"RTN","SAMICAS3",794,0)
 ;
"RTN","SAMICAS3",795,0)
 ;@stanza 2 create background form
"RTN","SAMICAS3",796,0)
 ;
"RTN","SAMICAS3",797,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",798,0)
 new sien set sien=$$SID2NUM^SAMIHOM3(sid)
"RTN","SAMICAS3",799,0)
 quit:+sien=0
"RTN","SAMICAS3",800,0)
 new cdate set cdate=$piece(key,"bxform-",2)
"RTN","SAMICAS3",801,0)
 ;
"RTN","SAMICAS3",802,0)
 ; nodule copy
"RTN","SAMICAS3",803,0)
 ; new srckey set srckey=$$PREVNOD(sid)
"RTN","SAMICAS3",804,0)
 new srckey,srcdate set srcdate=$$LASTCMP(sid,.srckey)
"RTN","SAMICAS3",805,0)
 if srckey'="" do  ;
"RTN","SAMICAS3",806,0)
 . new source set source=$name(@root@("graph",sid,srckey))
"RTN","SAMICAS3",807,0)
 . new target set target=$name(@root@("graph",sid,key))
"RTN","SAMICAS3",808,0)
 . do CTCOPY^SAMICTC1(source,target,key)
"RTN","SAMICAS3",809,0)
 . quit
"RTN","SAMICAS3",810,0)
 ; end nodule copy
"RTN","SAMICAS3",811,0)
 ;
"RTN","SAMICAS3",812,0)
 merge @root@("graph",sid,key)=@root@(sien)
"RTN","SAMICAS3",813,0)
 set @root@("graph",sid,key,"samicreatedate")=cdate
"RTN","SAMICAS3",814,0)
 do SSAMISTA^SAMICASE(sid,key,"incomplete")
"RTN","SAMICAS3",815,0)
 ;
"RTN","SAMICAS3",816,0)
 ;
"RTN","SAMICAS3",817,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",818,0)
 ;
"RTN","SAMICAS3",819,0)
 quit  ; end of MKBXFORM
"RTN","SAMICAS3",820,0)
 ;
"RTN","SAMICAS3",821,0)
 ;
"RTN","SAMICAS3",822,0)
 ;
"RTN","SAMICAS3",823,0)
CASETBL(ary) ; generates case review table
"RTN","SAMICAS3",824,0)
 ;
"RTN","SAMICAS3",825,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",826,0)
 ;
"RTN","SAMICAS3",827,0)
 ;ven/gpl;private;procedure;clean;silent;sac
"RTN","SAMICAS3",828,0)
 ;@called by none
"RTN","SAMICAS3",829,0)
 ;@calls
"RTN","SAMICAS3",830,0)
 ;@input
"RTN","SAMICAS3",831,0)
 ; ary = name of array (passed by name, will be cleared)
"RTN","SAMICAS3",832,0)
 ;@output
"RTN","SAMICAS3",833,0)
 ; @ary
"RTN","SAMICAS3",834,0)
 ;@tests
"RTN","SAMICAS3",835,0)
 ; SAMIUTS2
"RTN","SAMICAS3",836,0)
 ;
"RTN","SAMICAS3",837,0)
 ;
"RTN","SAMICAS3",838,0)
 ;@stanza 2 build table
"RTN","SAMICAS3",839,0)
 ;
"RTN","SAMICAS3",840,0)
 kill @ary
"RTN","SAMICAS3",841,0)
 ;
"RTN","SAMICAS3",842,0)
 set @ary@("siform","form")="siform"
"RTN","SAMICAS3",843,0)
 set @ary@("siform","js")="subPr"
"RTN","SAMICAS3",844,0)
 set @ary@("siform","name")="Intake"
"RTN","SAMICAS3",845,0)
 set @ary@("siform","image")="preview.gif"
"RTN","SAMICAS3",846,0)
 ;
"RTN","SAMICAS3",847,0)
 set @ary@("nuform","form")="nuform"
"RTN","SAMICAS3",848,0)
 set @ary@("nuform","js")="subFr"
"RTN","SAMICAS3",849,0)
 set @ary@("nuform","name")="New Form"
"RTN","SAMICAS3",850,0)
 set @ary@("nuform","image")="nform.gif"
"RTN","SAMICAS3",851,0)
 ;
"RTN","SAMICAS3",852,0)
 set @ary@("sched","form")="sched"
"RTN","SAMICAS3",853,0)
 set @ary@("sched","js")="subSc"
"RTN","SAMICAS3",854,0)
 set @ary@("sched","name")="Schedule"
"RTN","SAMICAS3",855,0)
 set @ary@("sched","image")="schedule.gif"
"RTN","SAMICAS3",856,0)
 ;
"RTN","SAMICAS3",857,0)
 set @ary@("sbform","form")="sbform"
"RTN","SAMICAS3",858,0)
 set @ary@("sbform","js")="subPr"
"RTN","SAMICAS3",859,0)
 set @ary@("sbform","name")="Background"
"RTN","SAMICAS3",860,0)
 set @ary@("sbform","image")="preview.gif"
"RTN","SAMICAS3",861,0)
 ;
"RTN","SAMICAS3",862,0)
 set @ary@("ceform","form")="ceform"
"RTN","SAMICAS3",863,0)
 set @ary@("ceform","js")="subPr"
"RTN","SAMICAS3",864,0)
 set @ary@("ceform","name")="CT Evaluation"
"RTN","SAMICAS3",865,0)
 set @ary@("ceform","image")="preview.gif"
"RTN","SAMICAS3",866,0)
 ;
"RTN","SAMICAS3",867,0)
 set @ary@("report","form")="report"
"RTN","SAMICAS3",868,0)
 set @ary@("report","js")="subRp"
"RTN","SAMICAS3",869,0)
 set @ary@("report","name")="Report"
"RTN","SAMICAS3",870,0)
 set @ary@("report","image")="report.gif"
"RTN","SAMICAS3",871,0)
 ;
"RTN","SAMICAS3",872,0)
 set @ary@("ptform","form")="ptform"
"RTN","SAMICAS3",873,0)
 set @ary@("ptform","js")="subPr"
"RTN","SAMICAS3",874,0)
 set @ary@("ptform","name")="PET Evaluation"
"RTN","SAMICAS3",875,0)
 set @ary@("ptform","image")="preview.gif"
"RTN","SAMICAS3",876,0)
 ;
"RTN","SAMICAS3",877,0)
 set @ary@("bxform","form")="bxform"
"RTN","SAMICAS3",878,0)
 set @ary@("bxform","js")="subPr"
"RTN","SAMICAS3",879,0)
 set @ary@("bxform","name")="Biopsy"
"RTN","SAMICAS3",880,0)
 set @ary@("bxform","image")="preview.gif"
"RTN","SAMICAS3",881,0)
 ;
"RTN","SAMICAS3",882,0)
 set @ary@("rbform","form")="rbform"
"RTN","SAMICAS3",883,0)
 set @ary@("rbform","js")="subPr"
"RTN","SAMICAS3",884,0)
 set @ary@("rbform","name")="Intervention"
"RTN","SAMICAS3",885,0)
 set @ary@("rbform","image")="preview.gif"
"RTN","SAMICAS3",886,0)
 ;
"RTN","SAMICAS3",887,0)
 set @ary@("ceform","form")="ceform"
"RTN","SAMICAS3",888,0)
 set @ary@("ceform","js")="subPr"
"RTN","SAMICAS3",889,0)
 set @ary@("ceform","name")="CT Evaluation"
"RTN","SAMICAS3",890,0)
 set @ary@("ceform","image")="preview.gif"
"RTN","SAMICAS3",891,0)
 ;
"RTN","SAMICAS3",892,0)
 ;
"RTN","SAMICAS3",893,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",894,0)
 ;
"RTN","SAMICAS3",895,0)
 quit  ; end of CASETBL
"RTN","SAMICAS3",896,0)
 ;
"RTN","SAMICAS3",897,0)
 ;
"RTN","SAMICAS3",898,0)
 ;
"RTN","SAMICAS3",899,0)
EOR ; end of routine SAMICAS3
"RTN","SAMICASE")
0^5^B2465434
"RTN","SAMICASE",1,0)
SAMICASE ;ven/gpl - case review library ;2021-07-06T15:44Z
"RTN","SAMICASE",2,0)
 ;;18.0;SAMI;**1,12**;2020-01;Build 1
"RTN","SAMICASE",3,0)
 ;;18.12
"RTN","SAMICASE",4,0)
 ;
"RTN","SAMICASE",5,0)
 ; SAMICASE contains ppis and other services to support processing
"RTN","SAMICASE",6,0)
 ; of the VAPALS-IELCAP case review page.
"RTN","SAMICASE",7,0)
 ;
"RTN","SAMICASE",8,0)
 quit  ; no entry from top
"RTN","SAMICASE",9,0)
 ;
"RTN","SAMICASE",10,0)
 ;
"RTN","SAMICASE",11,0)
 ;
"RTN","SAMICASE",12,0)
 ;@section 0 primary development
"RTN","SAMICASE",13,0)
 ;
"RTN","SAMICASE",14,0)
 ;
"RTN","SAMICASE",15,0)
 ;
"RTN","SAMICASE",16,0)
 ;@license see routine SAMIUL
"RTN","SAMICASE",17,0)
 ;@documentation see SAMICUL
"RTN","SAMICASE",18,0)
 ;@contents
"RTN","SAMICASE",19,0)
 ; (all public interfaces)
"RTN","SAMICASE",20,0)
 ; 
"RTN","SAMICASE",21,0)
 ;
"RTN","SAMICASE",22,0)
 ;
"RTN","SAMICASE",23,0)
 ;@section 1 web-route interfaces
"RTN","SAMICASE",24,0)
 ;
"RTN","SAMICASE",25,0)
 ;
"RTN","SAMICASE",26,0)
 ;
"RTN","SAMICASE",27,0)
 ;@wri WSCASE^SAMICASE, post vapals casereview: generate case review page
"RTN","SAMICASE",28,0)
WSCASE(rtn,filter) goto WSCASE^SAMICAS2
"RTN","SAMICASE",29,0)
 ;
"RTN","SAMICASE",30,0)
 ;
"RTN","SAMICASE",31,0)
 ;
"RTN","SAMICASE",32,0)
 ;@wri WSNUFORM^SAMICASE, post vapals nuform: new form for patient
"RTN","SAMICASE",33,0)
WSNUFORM(rtn,filter) goto WSNUFORM^SAMICAS2
"RTN","SAMICASE",34,0)
 ;
"RTN","SAMICASE",35,0)
 ;
"RTN","SAMICASE",36,0)
 ;
"RTN","SAMICASE",37,0)
 ;@wri DELFORM^SAMICASE, post vapals deleteform: delete incomplete form
"RTN","SAMICASE",38,0)
DELFORM(RESULT,ARGS) goto DELFORM^SAMICAS2
"RTN","SAMICASE",39,0)
 ;
"RTN","SAMICASE",40,0)
 ;
"RTN","SAMICASE",41,0)
 ;
"RTN","SAMICASE",42,0)
 ;@wri WSNFPOST^SAMICASE, post vapals addform: new form
"RTN","SAMICASE",43,0)
WSNFPOST(ARGS,BODY,RESULT) goto WSNFPOST^SAMICAS3
"RTN","SAMICASE",44,0)
 ;
"RTN","SAMICASE",45,0)
 ;
"RTN","SAMICASE",46,0)
 ;
"RTN","SAMICASE",47,0)
 ;@section 2 private program interfaces
"RTN","SAMICASE",48,0)
 ;
"RTN","SAMICASE",49,0)
 ;
"RTN","SAMICASE",50,0)
 ;
"RTN","SAMICASE",51,0)
 ;@ppi GETTMPL^SAMICASE, get html template
"RTN","SAMICASE",52,0)
GETTMPL(return,form) goto GETTMPL^SAMICAS2
"RTN","SAMICASE",53,0)
 ;
"RTN","SAMICASE",54,0)
 ;
"RTN","SAMICASE",55,0)
 ;
"RTN","SAMICASE",56,0)
 ;@ppi GETITEMS^SAMICASE, get items available for studyid
"RTN","SAMICASE",57,0)
GETITEMS(ary,sid) goto GETITEMS^SAMICAS2
"RTN","SAMICASE",58,0)
 ;
"RTN","SAMICASE",59,0)
 ;
"RTN","SAMICASE",60,0)
 ;
"RTN","SAMICASE",61,0)
 ;@ppi $$NOTEHREF^SAMICASE, html list of notes for form
"RTN","SAMICASE",62,0)
NOTEHREF(sid,form) goto NOTEHREF^SAMICAS2
"RTN","SAMICASE",63,0)
 ;
"RTN","SAMICASE",64,0)
 ;
"RTN","SAMICASE",65,0)
 ;
"RTN","SAMICASE",66,0)
 ;@ppi $$VAPALSDT^SAMICASE, date in vapals format
"RTN","SAMICASE",67,0)
VAPALSDT(fmdate) goto VAPALSDT^SAMICAS2
"RTN","SAMICASE",68,0)
 ;
"RTN","SAMICASE",69,0)
 ;
"RTN","SAMICASE",70,0)
 ;
"RTN","SAMICASE",71,0)
 ;@ppi $$KEY2FM^SAMICASE, convert key to fileman date
"RTN","SAMICASE",72,0)
KEY2FM(key) goto KEY2FM^SAMICAS2
"RTN","SAMICASE",73,0)
 ;
"RTN","SAMICASE",74,0)
 ;
"RTN","SAMICASE",75,0)
 ;
"RTN","SAMICASE",76,0)
 ;@ppi SSAMISTA^SAMICASE, set samistatus to val in form
"RTN","SAMICASE",77,0)
SSAMISTA(sid,form,val) goto SSAMISTA^SAMICAS2
"RTN","SAMICASE",78,0)
 ;
"RTN","SAMICASE",79,0)
 ;
"RTN","SAMICASE",80,0)
 ;
"RTN","SAMICASE",81,0)
EOR ; end of routine SAMICASE
"RTN","SAMICLOG")
0^6^B37372659
"RTN","SAMICLOG",1,0)
SAMICLOG ;ven/gpl - intake form change log ;2021-07-01t16:28z
"RTN","SAMICLOG",2,0)
 ;;18.0;SAMI;**12**;2020-01;Build 1
"RTN","SAMICLOG",3,0)
 ;;18.12
"RTN","SAMICLOG",4,0)
 ;
"RTN","SAMICLOG",5,0)
 ; Routine SAMICLOG contains subroutines for implementing the VAPALS-
"RTN","SAMICLOG",6,0)
 ; ELCAP Intake Form's Change Log field.
"RTN","SAMICLOG",7,0)
 ;
"RTN","SAMICLOG",8,0)
 quit  ; no entry from top
"RTN","SAMICLOG",9,0)
 ;
"RTN","SAMICLOG",10,0)
 ;
"RTN","SAMICLOG",11,0)
 ;
"RTN","SAMICLOG",12,0)
 ;@section 0 primary development
"RTN","SAMICLOG",13,0)
 ;
"RTN","SAMICLOG",14,0)
 ;
"RTN","SAMICLOG",15,0)
 ;
"RTN","SAMICLOG",16,0)
 ;@routine-credits
"RTN","SAMICLOG",17,0)
 ;@dev-main George P. Lilly (gpl)
"RTN","SAMICLOG",18,0)
 ; gpl@vistaexpertise.net
"RTN","SAMICLOG",19,0)
 ;@dev-org-main Vista Expertise Network (ven)
"RTN","SAMICLOG",20,0)
 ; http://vistaexpertise.net
"RTN","SAMICLOG",21,0)
 ;@copyright 2017/2021, gpl, all rights reserved
"RTN","SAMICLOG",22,0)
 ;@license see routine SAMIUL
"RTN","SAMICLOG",23,0)
 ;
"RTN","SAMICLOG",24,0)
 ;@last-update 2021-07-01t16:28z
"RTN","SAMICLOG",25,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMICLOG",26,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMICLOG",27,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMICLOG",28,0)
 ;@version 18.12
"RTN","SAMICLOG",29,0)
 ;@release-date 2020-01
"RTN","SAMICLOG",30,0)
 ;@patch-list **12**
"RTN","SAMICLOG",31,0)
 ;
"RTN","SAMICLOG",32,0)
 ;@dev-add Larry G. Carlson (lgc)
"RTN","SAMICLOG",33,0)
 ; lgc@vistaexpertise.net
"RTN","SAMICLOG",34,0)
 ;@dev-add Frederick D. S. Marshall (toad)
"RTN","SAMICLOG",35,0)
 ; toad@vistaexpertise.net
"RTN","SAMICLOG",36,0)
 ;@dev-add Kenneth W. McGlothlen (mcglk)
"RTN","SAMICLOG",37,0)
 ; mcglk@vistaexpertise.net
"RTN","SAMICLOG",38,0)
 ;
"RTN","SAMICLOG",39,0)
 ;@routine-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMICLOG",40,0)
 ; 2019-03-20 ven/gpl 18-t4 e1e7c136
"RTN","SAMICLOG",41,0)
 ;  SAMICLOG progress on intake form change log.
"RTN","SAMICLOG",42,0)
 ;
"RTN","SAMICLOG",43,0)
 ; 2019-03-25/26 ven/lgc 18-t4 12ab8234,b9a71a56,e0106403,fb73dfe5
"RTN","SAMICLOG",44,0)
 ;  SAMICLOG update change log & tests, repair var name, inhibit
"RTN","SAMICLOG",45,0)
 ; change log during 1st entry.
"RTN","SAMICLOG",46,0)
 ;
"RTN","SAMICLOG",47,0)
 ; 2019-08-03 ven/gpl 18-t4 bea65f7b
"RTN","SAMICLOG",48,0)
 ;  SAMICLOG fix bugs in Have you ever smoked processing in change log
"RTN","SAMICLOG",49,0)
 ; & intake note.
"RTN","SAMICLOG",50,0)
 ;
"RTN","SAMICLOG",51,0)
 ; 2021-06-18 ven/gpl 18.12-t2 68ebd6fa
"RTN","SAMICLOG",52,0)
 ;  SAMICLOG fix crash in processing text field for change log: in
"RTN","SAMICLOG",53,0)
 ; DOLOGIT add screens if "field","C",var node undefined.
"RTN","SAMICLOG",54,0)
 ;
"RTN","SAMICLOG",55,0)
 ; 2021-07-01 ven/mcglk&toad 18.12-t2 cbf7e46b
"RTN","SAMICLOG",56,0)
 ;  SAMICLOG bump version & dates, add hdr comments & dev log.
"RTN","SAMICLOG",57,0)
 ;
"RTN","SAMICLOG",58,0)
 ;@contents
"RTN","SAMICLOG",59,0)
 ; CLOG adds to the intake form change log
"RTN","SAMICLOG",60,0)
 ; RUNVARS ???
"RTN","SAMICLOG",61,0)
 ; DOLOGIT ???
"RTN","SAMICLOG",62,0)
 ; LOGIT add an entry to the log
"RTN","SAMICLOG",63,0)
 ; INTKVARS variables on intake form
"RTN","SAMICLOG",64,0)
 ;
"RTN","SAMICLOG",65,0)
 ;
"RTN","SAMICLOG",66,0)
 ;
"RTN","SAMICLOG",67,0)
 ;@section 1 subroutines
"RTN","SAMICLOG",68,0)
 ;
"RTN","SAMICLOG",69,0)
 ;
"RTN","SAMICLOG",70,0)
 ;
"RTN","SAMICLOG",71,0)
CLOG(sid,form,vars) ; adds to the intake form change log 
"RTN","SAMICLOG",72,0)
 ; if changes have been made
"RTN","SAMICLOG",73,0)
 ;
"RTN","SAMICLOG",74,0)
 n root,CLOGROOT,var
"RTN","SAMICLOG",75,0)
 s root=$$setroot^%wd("vapals-patients")
"RTN","SAMICLOG",76,0)
 ;
"RTN","SAMICLOG",77,0)
 ;If samifirsttime is true, then this is the first submission
"RTN","SAMICLOG",78,0)
 ;  for the intake form and we will not need to check
"RTN","SAMICLOG",79,0)
 ;  for changes
"RTN","SAMICLOG",80,0)
 q:($g(@root@("graph",sid,form,"samifirsttime"))="true")
"RTN","SAMICLOG",81,0)
 ;
"RTN","SAMICLOG",82,0)
 s CLOGROOT=$na(@root@("graph",sid,form,"changelog"))
"RTN","SAMICLOG",83,0)
 ;
"RTN","SAMICLOG",84,0)
 n old
"RTN","SAMICLOG",85,0)
 s old=$na(@root@("graph",sid,form)) ; location of saved old variables
"RTN","SAMICLOG",86,0)
 ;
"RTN","SAMICLOG",87,0)
 ; date of contact
"RTN","SAMICLOG",88,0)
 ;
"RTN","SAMICLOG",89,0)
 n ndoc,odoc
"RTN","SAMICLOG",90,0)
 s ndoc=$g(@vars@("sidc"))
"RTN","SAMICLOG",91,0)
 s odoc=$g(@old@("sidc"))
"RTN","SAMICLOG",92,0)
 if ndoc'=odoc d  ;
"RTN","SAMICLOG",93,0)
 . n entry s entry="Date of contact changed from "_odoc_" to "_ndoc
"RTN","SAMICLOG",94,0)
 . d LOGIT(CLOGROOT,entry)
"RTN","SAMICLOG",95,0)
 ;
"RTN","SAMICLOG",96,0)
 ; contacted via
"RTN","SAMICLOG",97,0)
 ;
"RTN","SAMICLOG",98,0)
 n ovia,nvia,zg
"RTN","SAMICLOG",99,0)
 s (ovia,nvia)=""
"RTN","SAMICLOG",100,0)
 f zg="ovia","nvia" d  ;
"RTN","SAMICLOG",101,0)
 . n zn
"RTN","SAMICLOG",102,0)
 . if zg="ovia" s zn=old
"RTN","SAMICLOG",103,0)
 . if zg="nvia" s zn=vars
"RTN","SAMICLOG",104,0)
 . i $g(@zn@("silnip"))=1 d  ;
"RTN","SAMICLOG",105,0)
 . . s @zg="in person"
"RTN","SAMICLOG",106,0)
 . i $g(@zn@("silnph"))=1 d  ;
"RTN","SAMICLOG",107,0)
 . . s @zg=$s(@zg'="":@zg_",",1:@zg)_" telephone"
"RTN","SAMICLOG",108,0)
 . i $g(@zn@("silnth"))=1 d  ;
"RTN","SAMICLOG",109,0)
 . . s @zg=$s(@zg'="":@zg_",",1:@zg)_" telehealth"
"RTN","SAMICLOG",110,0)
 . i $g(@zn@("silnml"))=1 d  ;
"RTN","SAMICLOG",111,0)
 . . s @zg=$s(@zg'="":@zg_",",1:@zg)_" mailed letter"
"RTN","SAMICLOG",112,0)
 . i $g(@zn@("silnpp"))=1 d  ;
"RTN","SAMICLOG",113,0)
 . . s @zg=$s(@zg'="":@zg_",",1:@zg)_" patient portal"
"RTN","SAMICLOG",114,0)
 . i $g(@zn@("silnvd"))=1 d  ;
"RTN","SAMICLOG",115,0)
 . . s @zg=$s(@zg'="":@zg_",",1:@zg)_" VOD"
"RTN","SAMICLOG",116,0)
 . i $g(@zn@("silnot"))=1 d  ;
"RTN","SAMICLOG",117,0)
 . . s @zg=$s(@zg'="":@zg_",",1:@zg)_" Other contact method YN"
"RTN","SAMICLOG",118,0)
 s ovia=$s(ovia="":"null",1:ovia)
"RTN","SAMICLOG",119,0)
 s nvia=$s(nvia="":"null",1:nvia)
"RTN","SAMICLOG",120,0)
 i ovia'=nvia d  ;
"RTN","SAMICLOG",121,0)
 . d LOGIT(CLOGROOT,"Contacted via changed from "_ovia_" to "_nvia)
"RTN","SAMICLOG",122,0)
 ;
"RTN","SAMICLOG",123,0)
 ;
"RTN","SAMICLOG",124,0)
 ;
"RTN","SAMICLOG",125,0)
RUNVARS n cnt s cnt=0
"RTN","SAMICLOG",126,0)
 f  s cnt=cnt+1 s var=$p($t(INTKVARS+cnt),";;",2) q:(var="")  d
"RTN","SAMICLOG",127,0)
 . s var=$p($p($t(INTKVARS+cnt),";;",2),"^")
"RTN","SAMICLOG",128,0)
 . s entry=$p($p($t(INTKVARS+cnt),";;",2),"^",2)_" changed from "
"RTN","SAMICLOG",129,0)
 . d DOLOGIT(.vars,.old,var,entry)
"RTN","SAMICLOG",130,0)
 q
"RTN","SAMICLOG",131,0)
 ;
"RTN","SAMICLOG",132,0)
 ;
"RTN","SAMICLOG",133,0)
 ;
"RTN","SAMICLOG",134,0)
DOLOGIT(vars,old,var,entry) ;
"RTN","SAMICLOG",135,0)
 ;Input
"RTN","SAMICLOG",136,0)
 ;   vars   = name of array with new results (e.g. poo("sildct")=1)
"RTN","SAMICLOG",137,0)
 ;   old    = $na(@root@("graph",sid,form)) ; location of saved old variables
"RTN","SAMICLOG",138,0)
 ;   var    = name of VAPALS variable whose value changed (e.g. sildct)
"RTN","SAMICLOG",139,0)
 ;   entry  = prompt for entering value (e.g. Patient opted to)
"RTN","SAMICLOG",140,0)
 ;Exit
"RTN","SAMICLOG",141,0)
 ;   sets new "changelog" node in vapals-patients graphstore documenting
"RTN","SAMICLOG",142,0)
 ;
"RTN","SAMICLOG",143,0)
 n rootdd s rootdd=$$setroot^%wd("form fields - intake")
"RTN","SAMICLOG",144,0)
 n newval,oldval,nvtrans,ovtrans
"RTN","SAMICLOG",145,0)
 s newval=$g(@vars@(var)) i '(newval="") d
"RTN","SAMICLOG",146,0)
 . q:'$d(@rootdd@("field","C",var))
"RTN","SAMICLOG",147,0)
 . s nvtrans=$o(@rootdd@("field","C",var,newval,""))
"RTN","SAMICLOG",148,0)
 . s:'(nvtrans="") newval=nvtrans
"RTN","SAMICLOG",149,0)
 s:(newval="") newval="null"
"RTN","SAMICLOG",150,0)
 s oldval=$g(@old@(var)) i '(oldval="") d
"RTN","SAMICLOG",151,0)
 . q:'$d(@rootdd@("field","C",var))
"RTN","SAMICLOG",152,0)
 . s ovtrans=$o(@rootdd@("field","C",var,oldval,""))
"RTN","SAMICLOG",153,0)
 . s:'(ovtrans="") oldval=ovtrans
"RTN","SAMICLOG",154,0)
 s:(oldval="") oldval="null"
"RTN","SAMICLOG",155,0)
 q:(newval=oldval)
"RTN","SAMICLOG",156,0)
 s entry=entry_oldval_" to: "_newval
"RTN","SAMICLOG",157,0)
 d LOGIT(CLOGROOT,entry)
"RTN","SAMICLOG",158,0)
 q
"RTN","SAMICLOG",159,0)
 ;
"RTN","SAMICLOG",160,0)
 ;
"RTN","SAMICLOG",161,0)
 ;
"RTN","SAMICLOG",162,0)
LOGIT(CLOGROOT,ENTRY) ; add an entry to the log
"RTN","SAMICLOG",163,0)
 ; CLOGROOT points to the log
"RTN","SAMICLOG",164,0)
 ;
"RTN","SAMICLOG",165,0)
 n logdt
"RTN","SAMICLOG",166,0)
 ;s logdt=$$VAPALSDT^SAMICASE($$NOW^XLFDT)
"RTN","SAMICLOG",167,0)
 s logdt=$$FMTE^XLFDT($$NOW^XLFDT,5)
"RTN","SAMICLOG",168,0)
 n lien
"RTN","SAMICLOG",169,0)
 s lien=$o(@CLOGROOT@(""),-1)+1
"RTN","SAMICLOG",170,0)
 s @CLOGROOT@(lien)="["_logdt_"] "_$g(ENTRY)
"RTN","SAMICLOG",171,0)
 q
"RTN","SAMICLOG",172,0)
 ;
"RTN","SAMICLOG",173,0)
 ;
"RTN","SAMICLOG",174,0)
 ;
"RTN","SAMICLOG",175,0)
INTKVARS ; Varibles on intake form
"RTN","SAMICLOG",176,0)
 ;;silnoo^Other contact method
"RTN","SAMICLOG",177,0)
 ;;sipav^Primary address verified
"RTN","SAMICLOG",178,0)
 ;;sipsa^Preferred address
"RTN","SAMICLOG",179,0)
 ;;sipan^Apt#
"RTN","SAMICLOG",180,0)
 ;;spicn^County
"RTN","SAMICLOG",181,0)
 ;;sipc^City
"RTN","SAMICLOG",182,0)
 ;;sips^State
"RTN","SAMICLOG",183,0)
 ;;sipz^Zip
"RTN","SAMICLOG",184,0)
 ;;sipcr^Country
"RTN","SAMICLOG",185,0)
 ;;sippn^Phone number
"RTN","SAMICLOG",186,0)
 ;;sirs^Rural status
"RTN","SAMICLOG",187,0)
 ;;siesm^Have you ever smoked
"RTN","SAMICLOG",188,0)
 ;;siesq^Willing to quit smoking
"RTN","SAMICLOG",189,0)
 ;;sicpd^Cigarettes per day
"RTN","SAMICLOG",190,0)
 ;;sisny^Number of years a smoker
"RTN","SAMICLOG",191,0)
 ;;siq^Date quit smoking
"RTN","SAMICLOG",192,0)
 ;;sicep^Smoking cessation education provided
"RTN","SAMICLOG",193,0)
 ;;siadx^Lung CA Dx date
"RTN","SAMICLOG",194,0)
 ;;siadxl^Lung CA Dx location not VA
"RTN","SAMICLOG",195,0)
 ;;siptct^CT date
"RTN","SAMICLOG",196,0)
 ;;siptctl^CT location not VA
"RTN","SAMICLOG",197,0)
 ;;siidmdc^Informed decision making discussion complete
"RTN","SAMICLOG",198,0)
 ;;sildct^Patient opted to
"RTN","SAMICLOG",199,0)
 ;;siclin^Clinical idications for screening
"RTN","SAMICLOG",200,0)
 ;;sistatus^Enrollment status
"RTN","SAMICLOG",201,0)
 ;;
"RTN","SAMICLOG",202,0)
 ;
"RTN","SAMICLOG",203,0)
 ;
"RTN","SAMICLOG",204,0)
 ;
"RTN","SAMICLOG",205,0)
EOR ; end of routine SAMICLOG
"RTN","SAMICSV")
0^7^B60401322
"RTN","SAMICSV",1,0)
SAMICSV ;ven/gpl - csv export ;2021-05-21T20:47Z
"RTN","SAMICSV",2,0)
 ;;18.0;SAMI;**7,11**;2020-01;Build 1
"RTN","SAMICSV",3,0)
 ;;1.18.0.11+i11
"RTN","SAMICSV",4,0)
 ;
"RTN","SAMICSV",5,0)
 ; SAMICSV contains a direct-mode interface to produce the VAPALS-
"RTN","SAMICSV",6,0)
 ; ELCAP CSV export.
"RTN","SAMICSV",7,0)
 ;
"RTN","SAMICSV",8,0)
 ; allow entry from top, fallthrough to EN
"RTN","SAMICSV",9,0)
 ;
"RTN","SAMICSV",10,0)
 ;
"RTN","SAMICSV",11,0)
 ;
"RTN","SAMICSV",12,0)
 ;@section 0 primary development
"RTN","SAMICSV",13,0)
 ;
"RTN","SAMICSV",14,0)
 ;
"RTN","SAMICSV",15,0)
 ;
"RTN","SAMICSV",16,0)
 ;@routine-credits
"RTN","SAMICSV",17,0)
 ;@primary-dev George P. Lilly (gpl)
"RTN","SAMICSV",18,0)
 ; gpl@vistaexpertise.net
"RTN","SAMICSV",19,0)
 ;@primary-dev-org Vista Expertise Network (ven)
"RTN","SAMICSV",20,0)
 ; http://vistaexpertise.net
"RTN","SAMICSV",21,0)
 ;@copyright 2017/2021, gpl, all rights reserved
"RTN","SAMICSV",22,0)
 ;@license see routine SAMIUL
"RTN","SAMICSV",23,0)
 ;
"RTN","SAMICSV",24,0)
 ;@last-updated 2021-05-21T20:47Z
"RTN","SAMICSV",25,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMICSV",26,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMICSV",27,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMICSV",28,0)
 ;@version 1.18.0.11+i11
"RTN","SAMICSV",29,0)
 ;@release-date 2020-01
"RTN","SAMICSV",30,0)
 ;@patch-list **7,11**
"RTN","SAMICSV",31,0)
 ;
"RTN","SAMICSV",32,0)
 ;@additional-dev Frederick D. S. Marshall (toad)
"RTN","SAMICSV",33,0)
 ; toad@vistaexpertise.net
"RTN","SAMICSV",34,0)
 ;@additional-dev Kenneth McGlothlen (mcglk)
"RTN","SAMICSV",35,0)
 ; mcglk@vistaexpertise.net
"RTN","SAMICSV",36,0)
 ;
"RTN","SAMICSV",37,0)
 ;@module-credits
"RTN","SAMICSV",38,0)
 ;@project VA Partnership to Increase Access to Lung Screening
"RTN","SAMICSV",39,0)
 ; (VA-PALS)
"RTN","SAMICSV",40,0)
 ; http://va-pals.org/
"RTN","SAMICSV",41,0)
 ;@funding 2017/2021, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMICSV",42,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMICSV",43,0)
 ;@partner-org Veterans Affairs Office of Rural health
"RTN","SAMICSV",44,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMICSV",45,0)
 ;@partner-org International Early Lung Cancer Action Program (I-ELCAP)
"RTN","SAMICSV",46,0)
 ; http://ielcap.com/
"RTN","SAMICSV",47,0)
 ;@partner-org Paraxial Technologies (par)
"RTN","SAMICSV",48,0)
 ; http://paraxialtech.com/
"RTN","SAMICSV",49,0)
 ;@partner-org Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMICSV",50,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMICSV",51,0)
 ;
"RTN","SAMICSV",52,0)
 ;@module-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMICSV",53,0)
 ;
"RTN","SAMICSV",54,0)
 ; 2020-08-20/09-24 ven/gpl 1.18.0.7+i7 9486abb2,5ae08772,ba0bcb82,
"RTN","SAMICSV",55,0)
 ; 1a2a1bf6,16511893
"RTN","SAMICSV",56,0)
 ;  SAMICSV: new routine, test build for extracting form data to csv
"RTN","SAMICSV",57,0)
 ; files, upgrade change site to handle patients without forms, audit
"RTN","SAMICSV",58,0)
 ; report, select from 7 forms for extract, fix dictionary spelling
"RTN","SAMICSV",59,0)
 ; for followup form, fix bug of line feeds in csv output interrupting
"RTN","SAMICSV",60,0)
 ; excel load.
"RTN","SAMICSV",61,0)
 ;
"RTN","SAMICSV",62,0)
 ; 2021-03-25 ven/gpl 1.18.0.11+i11 e28a34d3
"RTN","SAMICSV",63,0)
 ;  SAMICSV: remove line feeds from variables.
"RTN","SAMICSV",64,0)
 ;
"RTN","SAMICSV",65,0)
 ; 2021-03-30 ven/toad 1.18.0.11+i11 7b14bb2
"RTN","SAMICSV",66,0)
 ;  SAMICSV: bump version, date, patch list, create hdr comments, lt
"RTN","SAMICSV",67,0)
 ; refactor.
"RTN","SAMICSV",68,0)
 ;
"RTN","SAMICSV",69,0)
 ; 2021-04-15 ven/gpl 1.18.0.11+i11 f9795a5,5aa13f1
"RTN","SAMICSV",70,0)
 ;  SAMICSV: fix double quotes in csv output, correct csv format no
"RTN","SAMICSV",71,0)
 ; quotes for null cells.
"RTN","SAMICSV",72,0)
 ;
"RTN","SAMICSV",73,0)
 ; 2021-05-21 ven/mcglk&toad 1.18.0.11+i11
"RTN","SAMICSV",74,0)
 ;  SAMICSV: bump version, date.
"RTN","SAMICSV",75,0)
 ;
"RTN","SAMICSV",76,0)
 ;
"RTN","SAMICSV",77,0)
 ;
"RTN","SAMICSV",78,0)
 ;@contents
"RTN","SAMICSV",79,0)
 ; EN entry point to generate csv files from forms for a site
"RTN","SAMICSV",80,0)
 ; ONEFORM process one form for a site
"RTN","SAMICSV",81,0)
 ; $$FNAME filename for site/form
"RTN","SAMICSV",82,0)
 ; DDICT data dictionary for form
"RTN","SAMICSV",83,0)
 ; $$SAYFORM prompts for form
"RTN","SAMICSV",84,0)
 ;
"RTN","SAMICSV",85,0)
 ;
"RTN","SAMICSV",86,0)
 ;
"RTN","SAMICSV",87,0)
EN ; entry point to generate csv files from forms for a site
"RTN","SAMICSV",88,0)
 ;
"RTN","SAMICSV",89,0)
 ; first pick a site
"RTN","SAMICSV",90,0)
 N X,Y,DIC,SITEIEN,SITEID
"RTN","SAMICSV",91,0)
 S DIC=311.12
"RTN","SAMICSV",92,0)
 S DIC(0)="AEMQ"
"RTN","SAMICSV",93,0)
 D ^DIC
"RTN","SAMICSV",94,0)
 I Y<1 Q  ; EXIT
"RTN","SAMICSV",95,0)
 S SITENUM=$P(Y,"^",2)
"RTN","SAMICSV",96,0)
 S SITEID=$$SITEID^SAMISITE(SITENUM)
"RTN","SAMICSV",97,0)
 Q:SITEID=""
"RTN","SAMICSV",98,0)
 ;
"RTN","SAMICSV",99,0)
 N SAMIFORM S SAMIFORM=$$SAYFORM()
"RTN","SAMICSV",100,0)
 Q:SAMIFORM=-1
"RTN","SAMICSV",101,0)
 ;
"RTN","SAMICSV",102,0)
 ; prompt for the directory
"RTN","SAMICSV",103,0)
 N SAMIDIR
"RTN","SAMICSV",104,0)
 D GETDIR^SAMIFDM(.SAMIDIR)
"RTN","SAMICSV",105,0)
 Q:SAMIDIR=""
"RTN","SAMICSV",106,0)
 ;
"RTN","SAMICSV",107,0)
 d ONEFORM(SITEID,SAMIFORM,SAMIDIR) ; process one form for a site
"RTN","SAMICSV",108,0)
 ;
"RTN","SAMICSV",109,0)
 quit  ; end of EN
"RTN","SAMICSV",110,0)
 ;
"RTN","SAMICSV",111,0)
 ;
"RTN","SAMICSV",112,0)
 ;
"RTN","SAMICSV",113,0)
ONEFORM(SITEID,SAMIFORM,SAMIDIR) ; process one form for a site
"RTN","SAMICSV",114,0)
 ;
"RTN","SAMICSV",115,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMICSV",116,0)
 n groot s groot=$na(@root@("graph"))
"RTN","SAMICSV",117,0)
 n SAMII S SAMII=SITEID
"RTN","SAMICSV",118,0)
 n cnt s cnt=0
"RTN","SAMICSV",119,0)
 n forms s forms=0
"RTN","SAMICSV",120,0)
 ;
"RTN","SAMICSV",121,0)
 n SAMIOUT S SAMIOUT=$NA(^TMP("SAMICSV",$J))
"RTN","SAMICSV",122,0)
 k @SAMIOUT
"RTN","SAMICSV",123,0)
 ;
"RTN","SAMICSV",124,0)
 n DICT
"RTN","SAMICSV",125,0)
 d DDICT("DICT",SAMIFORM) ; get the data dictionary for this form
"RTN","SAMICSV",126,0)
 q:'$d(DICT)
"RTN","SAMICSV",127,0)
 ;
"RTN","SAMICSV",128,0)
 N SAMIN S SAMIN=1
"RTN","SAMICSV",129,0)
 N SAMIJJ s SAMIJJ=0
"RTN","SAMICSV",130,0)
 N OFFSET S OFFSET=0
"RTN","SAMICSV",131,0)
 I SAMIFORM="siform" d  ;
"RTN","SAMICSV",132,0)
 . S OFFSET=OFFSET+1
"RTN","SAMICSV",133,0)
 . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)="saminame"
"RTN","SAMICSV",134,0)
 . S OFFSET=OFFSET+1
"RTN","SAMICSV",135,0)
 . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)="ssn"
"RTN","SAMICSV",136,0)
 . S OFFSET=OFFSET+1
"RTN","SAMICSV",137,0)
 . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)="last5"
"RTN","SAMICSV",138,0)
 . S OFFSET=OFFSET+1
"RTN","SAMICSV",139,0)
 . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)="sex"
"RTN","SAMICSV",140,0)
 . S OFFSET=OFFSET+1
"RTN","SAMICSV",141,0)
 . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)="sbdob"
"RTN","SAMICSV",142,0)
 . S OFFSET=OFFSET+1
"RTN","SAMICSV",143,0)
 . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)="samiru"
"RTN","SAMICSV",144,0)
 f  s SAMIJJ=$o(DICT(SAMIJJ)) q:+SAMIJJ=0  d  ;
"RTN","SAMICSV",145,0)
 . s $p(@SAMIOUT@(SAMIN),"|",SAMIJJ+OFFSET)=DICT(SAMIJJ) ; csv header
"RTN","SAMICSV",146,0)
 s @SAMIOUT@(SAMIN)="siteid|samistudyid|form|"_@SAMIOUT@(SAMIN)
"RTN","SAMICSV",147,0)
 ;S @SAMIOUT@(SAMIN)=@SAMIOUT@(SAMIN)_$C(13,10) ; carriage return line feed
"RTN","SAMICSV",148,0)
 ; 
"RTN","SAMICSV",149,0)
 f  s SAMII=$o(@groot@(SAMII)) q:SAMII=""  q:$e(SAMII,1,3)'[SITEID  d  ;
"RTN","SAMICSV",150,0)
 . s cnt=cnt+1
"RTN","SAMICSV",151,0)
 . w !,SAMII
"RTN","SAMICSV",152,0)
 . N SAMIJ S SAMIJ=SAMIFORM
"RTN","SAMICSV",153,0)
 . n done s done=0
"RTN","SAMICSV",154,0)
 . f  s SAMIJ=$O(@groot@(SAMII,SAMIJ)) q:SAMIJ=""  q:done  d  ;
"RTN","SAMICSV",155,0)
 . . i $e(SAMIJ,1,$l(SAMIFORM))'=SAMIFORM s done=1 q  ;
"RTN","SAMICSV",156,0)
 . . s forms=forms+1
"RTN","SAMICSV",157,0)
 . . n jj s jj=0
"RTN","SAMICSV",158,0)
 . . s SAMIN=SAMIN+1
"RTN","SAMICSV",159,0)
 . . S OFFSET=0
"RTN","SAMICSV",160,0)
 . . I SAMIFORM="siform" d  ;
"RTN","SAMICSV",161,0)
 . . . n kk s kk=$o(@root@("sid",SAMII,""))
"RTN","SAMICSV",162,0)
 . . . q:kk=""
"RTN","SAMICSV",163,0)
 . . . S OFFSET=OFFSET+1
"RTN","SAMICSV",164,0)
 . . . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)=$g(@root@(kk,"saminame"))
"RTN","SAMICSV",165,0)
 . . . S OFFSET=OFFSET+1
"RTN","SAMICSV",166,0)
 . . . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)=$g(@root@(kk,"ssn"))
"RTN","SAMICSV",167,0)
 . . . S OFFSET=OFFSET+1
"RTN","SAMICSV",168,0)
 . . . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)=$g(@root@(kk,"last5"))
"RTN","SAMICSV",169,0)
 . . . S OFFSET=OFFSET+1
"RTN","SAMICSV",170,0)
 . . . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)=$g(@root@(kk,"sex"))
"RTN","SAMICSV",171,0)
 . . . S OFFSET=OFFSET+1
"RTN","SAMICSV",172,0)
 . . . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)=$g(@root@(kk,"sbdob"))
"RTN","SAMICSV",173,0)
 . . . S OFFSET=OFFSET+1
"RTN","SAMICSV",174,0)
 . . . s $p(@SAMIOUT@(SAMIN),"|",OFFSET)=$g(@root@(kk,"samiru"))
"RTN","SAMICSV",175,0)
 . . f  s jj=$o(DICT(jj)) q:+jj=0  d  ;
"RTN","SAMICSV",176,0)
 . . . ;s $P(@SAMIOUT@(SAMIN),"|",OFFSET+jj)=""""_$g(@groot@(SAMII,SAMIJ,DICT(jj)))_""""
"RTN","SAMICSV",177,0)
 . . . n val
"RTN","SAMICSV",178,0)
 . . . ;s val=$g(@groot@(SAMII,SAMIJ,DICT(jj)))_""""
"RTN","SAMICSV",179,0)
 . . . s val=$g(@groot@(SAMII,SAMIJ,DICT(jj)))
"RTN","SAMICSV",180,0)
 . . . i val'="" d  ;
"RTN","SAMICSV",181,0)
 . . . . s val=$tr(val,$char(11))
"RTN","SAMICSV",182,0)
 . . . . s val=$tr(val,$char(13))
"RTN","SAMICSV",183,0)
 . . . . d findReplaceAll^%ts(.val,"""","""""")
"RTN","SAMICSV",184,0)
 . . . . s val=""""_val_""""
"RTN","SAMICSV",185,0)
 . . . s $P(@SAMIOUT@(SAMIN),"|",OFFSET+jj)=val
"RTN","SAMICSV",186,0)
 . . S @SAMIOUT@(SAMIN)=SITEID_"|"_SAMII_"|"_SAMIJ_"|"_@SAMIOUT@(SAMIN)
"RTN","SAMICSV",187,0)
 . . ;s @SAMIOUT@(SAMIN)=@SAMIOUT@(SAMIN)_$C(13,10)
"RTN","SAMICSV",188,0)
 . ;b
"RTN","SAMICSV",189,0)
 ;ZWR @SAMIOUT@(*)
"RTN","SAMICSV",190,0)
 w !,cnt_" patients, "_forms_" forms"
"RTN","SAMICSV",191,0)
 n filename s filename=$$FNAME(SITEID,SAMIFORM)
"RTN","SAMICSV",192,0)
 d GTF^%ZISH($na(@SAMIOUT@(1)),3,SAMIDIR,filename)
"RTN","SAMICSV",193,0)
 w !,"file "_filename_" written to directory "_SAMIDIR
"RTN","SAMICSV",194,0)
 ;
"RTN","SAMICSV",195,0)
 quit  ; end of ONEFORM
"RTN","SAMICSV",196,0)
 ;
"RTN","SAMICSV",197,0)
 ;
"RTN","SAMICSV",198,0)
 ;
"RTN","SAMICSV",199,0)
FNAME(SITE,FORM) ; extrinsic returns the filename for the site/form
"RTN","SAMICSV",200,0)
 ;
"RTN","SAMICSV",201,0)
 quit SITE_"-"_FORM_"-"_$$FMTHL7^XLFDT($$HTFM^XLFDT($H))_".csv" ; end of $$FNAME
"RTN","SAMICSV",202,0)
 ;
"RTN","SAMICSV",203,0)
 ;
"RTN","SAMICSV",204,0)
 ;
"RTN","SAMICSV",205,0)
DDICT(RTN,FORM) ; data dictionary for FORM, returned in RTN, passed by
"RTN","SAMICSV",206,0)
 ; name
"RTN","SAMICSV",207,0)
 ;
"RTN","SAMICSV",208,0)
 K @RTN
"RTN","SAMICSV",209,0)
 ;
"RTN","SAMICSV",210,0)
 N USEGR S USEGR=""
"RTN","SAMICSV",211,0)
 I FORM="siform" S USEGR="form fields - intake"
"RTN","SAMICSV",212,0)
 I FORM="sbform" S USEGR="form fields - background"
"RTN","SAMICSV",213,0)
 I FORM="ceform" S USEGR="form fields - ct evaluation"
"RTN","SAMICSV",214,0)
 I FORM="fuform" S USEGR="form fields - follow up"
"RTN","SAMICSV",215,0)
 I FORM="bxform" S USEGR="form fields - biopsy"
"RTN","SAMICSV",216,0)
 I FORM="itform" S USEGR="form fields - intervention"
"RTN","SAMICSV",217,0)
 I FORM="ptform" S USEGR="form fields - pet evaluation"
"RTN","SAMICSV",218,0)
 ;
"RTN","SAMICSV",219,0)
 Q:USEGR=""
"RTN","SAMICSV",220,0)
 N root s root=$$setroot^%wd(USEGR)
"RTN","SAMICSV",221,0)
 Q:$g(root)=""
"RTN","SAMICSV",222,0)
 N II S II=0
"RTN","SAMICSV",223,0)
 f  s II=$o(@root@("field",II)) q:+II=0  d  ;
"RTN","SAMICSV",224,0)
 . s @RTN@(II)=$g(@root@("field",II,"input",1,"name"))
"RTN","SAMICSV",225,0)
 ;
"RTN","SAMICSV",226,0)
 quit  ; end of DDICT
"RTN","SAMICSV",227,0)
 ;
"RTN","SAMICSV",228,0)
 ;
"RTN","SAMICSV",229,0)
 ;
"RTN","SAMICSV",230,0)
 ;^%wd(17.040801,"B","form fields - background",437)=""
"RTN","SAMICSV",231,0)
 ;^%wd(17.040801,"B","form fields - biopsy",438)=""
"RTN","SAMICSV",232,0)
 ;^%wd(17.040801,"B","form fields - ct evaluation",439)=""
"RTN","SAMICSV",233,0)
 ;^%wd(17.040801,"B","form fields - follow up",440)=""
"RTN","SAMICSV",234,0)
 ;^%wd(17.040801,"B","form fields - follow-up",359)=""
"RTN","SAMICSV",235,0)
 ;^%wd(17.040801,"B","form fields - intake",491)=""
"RTN","SAMICSV",236,0)
 ;^%wd(17.040801,"B","form fields - intervention",442)=""
"RTN","SAMICSV",237,0)
 ;^%wd(17.040801,"B","form fields - pet evaluation",443)=""
"RTN","SAMICSV",238,0)
 ;
"RTN","SAMICSV",239,0)
 ;
"RTN","SAMICSV",240,0)
 ;
"RTN","SAMICSV",241,0)
SAYFORM() ; prompts for the form
"RTN","SAMICSV",242,0)
 ;
"RTN","SAMICSV",243,0)
 N ZI,ZF,DIR
"RTN","SAMICSV",244,0)
 S ZF(1)="siform"
"RTN","SAMICSV",245,0)
 S ZF(2)="sbform"
"RTN","SAMICSV",246,0)
 S ZF(3)="ceform"
"RTN","SAMICSV",247,0)
 S ZF(4)="fuform"
"RTN","SAMICSV",248,0)
 S ZF(5)="bxform"
"RTN","SAMICSV",249,0)
 S ZF(6)="itform"
"RTN","SAMICSV",250,0)
 S ZF(7)="ptform"
"RTN","SAMICSV",251,0)
 K DIR
"RTN","SAMICSV",252,0)
 S DIR(0)="SO^"
"RTN","SAMICSV",253,0)
 F ZI=1:1:7 S DIR(0)=DIR(0)_ZI_":"_ZF(ZI)_";"
"RTN","SAMICSV",254,0)
 S DIR("L")="Select form to extract:"
"RTN","SAMICSV",255,0)
 S DIR("L",1)="1 Intake form (siform)"
"RTN","SAMICSV",256,0)
 S DIR("L",2)="2 Background form (sbform)"
"RTN","SAMICSV",257,0)
 S DIR("L",3)="3 CT Evaluation form (ceform)"
"RTN","SAMICSV",258,0)
 S DIR("L",4)="4 Followup form (fuform)"
"RTN","SAMICSV",259,0)
 S DIR("L",5)="5 Biopsy form (bxform)"
"RTN","SAMICSV",260,0)
 S DIR("L",6)="6 Intervention form (itform)"
"RTN","SAMICSV",261,0)
 S DIR("L",7)="7 Pet Evaluation form (ptform)"
"RTN","SAMICSV",262,0)
 D ^DIR
"RTN","SAMICSV",263,0)
 ;
"RTN","SAMICSV",264,0)
 Q:X="" -1
"RTN","SAMICSV",265,0)
 quit ZF(X) ; end of $$SAYFORM
"RTN","SAMICSV",266,0)
 ;
"RTN","SAMICSV",267,0)
 ;
"RTN","SAMICSV",268,0)
 ;
"RTN","SAMICSV",269,0)
EOR ; end of routine SAMICSV
"RTN","SAMICTC1")
0^8^B248960846
"RTN","SAMICTC1",1,0)
SAMICTC1 ;ven/gpl - ceform copy ;2021-06-04T14:28Z
"RTN","SAMICTC1",2,0)
 ;;18.0;SAMI;**11**;2020-01;Build 1
"RTN","SAMICTC1",3,0)
 ;;1.18.0.11+i11
"RTN","SAMICTC1",4,0)
 ;
"RTN","SAMICTC1",5,0)
 ; SAMICTC1 & 2 selectively copy fields from a patient's most recent
"RTN","SAMICTC1",6,0)
 ; existing CT Evaluation Form to a brand new form when it is created.
"RTN","SAMICTC1",7,0)
 ; They support the Create Form feature of the Case Review Page.
"RTN","SAMICTC1",8,0)
 ;
"RTN","SAMICTC1",9,0)
 quit  ; no entry from top
"RTN","SAMICTC1",10,0)
 ;
"RTN","SAMICTC1",11,0)
 ;
"RTN","SAMICTC1",12,0)
 ;
"RTN","SAMICTC1",13,0)
 ;@section 0 primary development
"RTN","SAMICTC1",14,0)
 ;
"RTN","SAMICTC1",15,0)
 ;
"RTN","SAMICTC1",16,0)
 ;
"RTN","SAMICTC1",17,0)
 ;@license: see routine SAMIUL
"RTN","SAMICTC1",18,0)
 ;@documentation see SAMICTUL
"RTN","SAMICTC1",19,0)
 ;@contents
"RTN","SAMICTC1",20,0)
 ; CTCOPY copy ct eval form selectively
"RTN","SAMICTC1",21,0)
 ; GENCTCPY generates copy routine from graph
"RTN","SAMICTC1",22,0)
 ;
"RTN","SAMICTC1",23,0)
 ;
"RTN","SAMICTC1",24,0)
 ;
"RTN","SAMICTC1",25,0)
 ;@section 1 wsi WSREPORT & related subroutines
"RTN","SAMICTC1",26,0)
 ;
"RTN","SAMICTC1",27,0)
 ;
"RTN","SAMICTC1",28,0)
 ;
"RTN","SAMICTC1",29,0)
 ;@ppi CTCOPY^SAMICTC1
"RTN","SAMICTC1",30,0)
CTCOPY(FROM,TO,key) ; copy ct eval form selectively
"RTN","SAMICTC1",31,0)
 ;
"RTN","SAMICTC1",32,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICTC1",33,0)
 ;
"RTN","SAMICTC1",34,0)
 ;ven/gpl;private;procedure;clean;silent;sac
"RTN","SAMICTC1",35,0)
 ;@called-by
"RTN","SAMICTC1",36,0)
 ; MKCEFORM^SAMICAS3
"RTN","SAMICTC1",37,0)
 ; MKPTFORM^SAMICAS3
"RTN","SAMICTC1",38,0)
 ; MKITFORM^SAMICAS3
"RTN","SAMICTC1",39,0)
 ; MKBXFORM^SAMICAS3
"RTN","SAMICTC1",40,0)
 ;@calls
"RTN","SAMICTC1",41,0)
 ; CTCOPY2^SAMICTC2
"RTN","SAMICTC1",42,0)
 ;@input
"RTN","SAMICTC1",43,0)
 ; FROM = existing source form array root
"RTN","SAMICTC1",44,0)
 ; TO = new target form array root
"RTN","SAMICTC1",45,0)
 ; key = form key, e.g. ceform-2021-05-25
"RTN","SAMICTC1",46,0)
 ;@output
"RTN","SAMICTC1",47,0)
 ; @TO: selected fields copied f/source form t/target form
"RTN","SAMICTC1",48,0)
 ;
"RTN","SAMICTC1",49,0)
 ;
"RTN","SAMICTC1",50,0)
 ;@stanza 2 copy is it new fields
"RTN","SAMICTC1",51,0)
 ;
"RTN","SAMICTC1",52,0)
 if $get(key)="" set key="ce"
"RTN","SAMICTC1",53,0)
 ;
"RTN","SAMICTC1",54,0)
 if key'["ce" do  ; all forms except ct eval form
"RTN","SAMICTC1",55,0)
 . set @TO@("cect1ch")=$get(@FROM@("cect1ch"))
"RTN","SAMICTC1",56,0)
 . set @TO@("cect2ch")=$get(@FROM@("cect2ch"))
"RTN","SAMICTC1",57,0)
 . set @TO@("cect3ch")=$get(@FROM@("cect3ch"))
"RTN","SAMICTC1",58,0)
 . set @TO@("cect4ch")=$get(@FROM@("cect4ch"))
"RTN","SAMICTC1",59,0)
 . set @TO@("cect5ch")=$get(@FROM@("cect5ch"))
"RTN","SAMICTC1",60,0)
 . set @TO@("cect6ch")=$get(@FROM@("cect6ch"))
"RTN","SAMICTC1",61,0)
 . set @TO@("cect7ch")=$get(@FROM@("cect7ch"))
"RTN","SAMICTC1",62,0)
 . set @TO@("cect8ch")=$get(@FROM@("cect8ch"))
"RTN","SAMICTC1",63,0)
 . set @TO@("cect9ch")=$get(@FROM@("cect9ch"))
"RTN","SAMICTC1",64,0)
 . quit
"RTN","SAMICTC1",65,0)
 ;
"RTN","SAMICTC1",66,0)
 else  do  ;
"RTN","SAMICTC1",67,0)
 . new cei,isnew,savals
"RTN","SAMICTC1",68,0)
 . set savals("pw")="" ; Prev seen, resolved
"RTN","SAMICTC1",69,0)
 . set savals("px")="" ; Prev seen, not a nodule 
"RTN","SAMICTC1",70,0)
 . set savals("pr")="" ; Prev seen, resected
"RTN","SAMICTC1",71,0)
 . set savals("pk")="" ; Not in outside report
"RTN","SAMICTC1",72,0)
 . set savals("pv")="" ; Not included in scan
"RTN","SAMICTC1",73,0)
 . for cei=1:1:9 do  ;
"RTN","SAMICTC1",74,0)
 . . set isnew=$get(@FROM@("cect"_cei_"ch"))
"RTN","SAMICTC1",75,0)
 . . quit:isnew=""
"RTN","SAMICTC1",76,0)
 . . if $data(savals(isnew)) set @TO@("cect"_cei_"ch")=isnew
"RTN","SAMICTC1",77,0)
 . . quit
"RTN","SAMICTC1",78,0)
 . quit
"RTN","SAMICTC1",79,0)
 ;
"RTN","SAMICTC1",80,0)
 ;
"RTN","SAMICTC1",81,0)
 ;@stanza 3 copy most fields
"RTN","SAMICTC1",82,0)
 ;
"RTN","SAMICTC1",83,0)
 ; the following is generated from a graph - see GENCTCOPY below
"RTN","SAMICTC1",84,0)
 set @TO@("ceanod")=$get(@FROM@("ceanod")) ; 
"RTN","SAMICTC1",85,0)
 set @TO@("cennod")=$get(@FROM@("cennod")) ; 
"RTN","SAMICTC1",86,0)
 ;
"RTN","SAMICTC1",87,0)
 set @TO@("cect1en")=$get(@FROM@("cect1en")) ; Endobronchial
"RTN","SAMICTC1",88,0)
 set @TO@("cect2en")=$get(@FROM@("cect2en")) ; Endobronchial
"RTN","SAMICTC1",89,0)
 set @TO@("cect3en")=$get(@FROM@("cect3en")) ; Endobronchial
"RTN","SAMICTC1",90,0)
 set @TO@("cect4en")=$get(@FROM@("cect4en")) ; Endobronchial
"RTN","SAMICTC1",91,0)
 set @TO@("cect5en")=$get(@FROM@("cect5en")) ; Endobronchial
"RTN","SAMICTC1",92,0)
 set @TO@("cect6en")=$get(@FROM@("cect6en")) ; Endobronchial
"RTN","SAMICTC1",93,0)
 set @TO@("cect7en")=$get(@FROM@("cect7en")) ; Endobronchial
"RTN","SAMICTC1",94,0)
 set @TO@("cect8en")=$get(@FROM@("cect8en")) ; Endobronchial
"RTN","SAMICTC1",95,0)
 set @TO@("cect9en")=$get(@FROM@("cect9en")) ; Endobronchial
"RTN","SAMICTC1",96,0)
 set @TO@("cect10en")=$get(@FROM@("cect10en")) ; Endobronchial
"RTN","SAMICTC1",97,0)
 ;
"RTN","SAMICTC1",98,0)
 set @TO@("cect1ll")=$get(@FROM@("cect1ll")) ; Most likely location
"RTN","SAMICTC1",99,0)
 set @TO@("cect2ll")=$get(@FROM@("cect2ll")) ; Most likely location
"RTN","SAMICTC1",100,0)
 set @TO@("cect3ll")=$get(@FROM@("cect3ll")) ; Most likely location
"RTN","SAMICTC1",101,0)
 set @TO@("cect4ll")=$get(@FROM@("cect4ll")) ; Most likely location
"RTN","SAMICTC1",102,0)
 set @TO@("cect5ll")=$get(@FROM@("cect5ll")) ; Most likely location
"RTN","SAMICTC1",103,0)
 set @TO@("cect6ll")=$get(@FROM@("cect6ll")) ; Most likely location
"RTN","SAMICTC1",104,0)
 set @TO@("cect7ll")=$get(@FROM@("cect7ll")) ; Most likely location
"RTN","SAMICTC1",105,0)
 set @TO@("cect8ll")=$get(@FROM@("cect8ll")) ; Most likely location
"RTN","SAMICTC1",106,0)
 set @TO@("cect9ll")=$get(@FROM@("cect9ll")) ; Most likely location
"RTN","SAMICTC1",107,0)
 set @TO@("cect10ll")=$get(@FROM@("cect10ll")) ; Most likely location
"RTN","SAMICTC1",108,0)
 ;
"RTN","SAMICTC1",109,0)
 set @TO@("cect1sn")=$get(@FROM@("cect1sn")) ; CT Series Number
"RTN","SAMICTC1",110,0)
 set @TO@("cect2sn")=$get(@FROM@("cect2sn")) ; CT Series Number
"RTN","SAMICTC1",111,0)
 set @TO@("cect3sn")=$get(@FROM@("cect3sn")) ; CT Series Number
"RTN","SAMICTC1",112,0)
 set @TO@("cect4sn")=$get(@FROM@("cect4sn")) ; CT Series Number
"RTN","SAMICTC1",113,0)
 set @TO@("cect5sn")=$get(@FROM@("cect5sn")) ; CT Series Number
"RTN","SAMICTC1",114,0)
 set @TO@("cect6sn")=$get(@FROM@("cect6sn")) ; CT Series Number
"RTN","SAMICTC1",115,0)
 set @TO@("cect7sn")=$get(@FROM@("cect7sn")) ; CT Series Number
"RTN","SAMICTC1",116,0)
 set @TO@("cect8sn")=$get(@FROM@("cect8sn")) ; CT Series Number
"RTN","SAMICTC1",117,0)
 set @TO@("cect9sn")=$get(@FROM@("cect9sn")) ; CT Series Number
"RTN","SAMICTC1",118,0)
 set @TO@("cect10sn")=$get(@FROM@("cect10sn")) ; CT Series Number
"RTN","SAMICTC1",119,0)
 ;
"RTN","SAMICTC1",120,0)
 set @TO@("cect1inl")=$get(@FROM@("cect1inl")) ; CT Image Number (Low
"RTN","SAMICTC1",121,0)
 set @TO@("cect1inh")=$get(@FROM@("cect1inh")) ; CT Image Number (Hig
"RTN","SAMICTC1",122,0)
 set @TO@("cect2inl")=$get(@FROM@("cect2inl")) ; CT Image Number (Low
"RTN","SAMICTC1",123,0)
 set @TO@("cect2inh")=$get(@FROM@("cect2inh")) ; CT Image Number (Hig
"RTN","SAMICTC1",124,0)
 set @TO@("cect3inl")=$get(@FROM@("cect3inl")) ; CT Image Number (Low
"RTN","SAMICTC1",125,0)
 set @TO@("cect3inh")=$get(@FROM@("cect3inh")) ; CT Image Number (Hig
"RTN","SAMICTC1",126,0)
 set @TO@("cect4inl")=$get(@FROM@("cect4inl")) ; CT Image Number (Low
"RTN","SAMICTC1",127,0)
 set @TO@("cect4inh")=$get(@FROM@("cect4inh")) ; CT Image Number (Hig
"RTN","SAMICTC1",128,0)
 set @TO@("cect5inl")=$get(@FROM@("cect5inl")) ; CT Image Number (Low
"RTN","SAMICTC1",129,0)
 set @TO@("cect5inh")=$get(@FROM@("cect5inh")) ; CT Image Number (Hig
"RTN","SAMICTC1",130,0)
 set @TO@("cect6inl")=$get(@FROM@("cect6inl")) ; CT Image Number (Low
"RTN","SAMICTC1",131,0)
 set @TO@("cect6inh")=$get(@FROM@("cect6inh")) ; CT Image Number (Hig
"RTN","SAMICTC1",132,0)
 set @TO@("cect7inl")=$get(@FROM@("cect7inl")) ; CT Image Number (Low
"RTN","SAMICTC1",133,0)
 set @TO@("cect7inh")=$get(@FROM@("cect7inh")) ; CT Image Number (Hig
"RTN","SAMICTC1",134,0)
 set @TO@("cect8inl")=$get(@FROM@("cect8inl")) ; CT Image Number (Low
"RTN","SAMICTC1",135,0)
 set @TO@("cect8inh")=$get(@FROM@("cect8inh")) ; CT Image Number (Hig
"RTN","SAMICTC1",136,0)
 set @TO@("cect9inl")=$get(@FROM@("cect9inl")) ; CT Image Number (Low
"RTN","SAMICTC1",137,0)
 set @TO@("cect9inh")=$get(@FROM@("cect9inh")) ; CT Image Number (Hig
"RTN","SAMICTC1",138,0)
 set @TO@("cect10inl")=$get(@FROM@("cect10inl")) ; CT Image Number (Low
"RTN","SAMICTC1",139,0)
 set @TO@("cect10inh")=$get(@FROM@("cect10inh")) ; CT Image Number (Hig
"RTN","SAMICTC1",140,0)
 ;
"RTN","SAMICTC1",141,0)
 set @TO@("cect1st")=$get(@FROM@("cect1st")) ; Nodule status
"RTN","SAMICTC1",142,0)
 set @TO@("cect2st")=$get(@FROM@("cect2st")) ; Nodule status
"RTN","SAMICTC1",143,0)
 set @TO@("cect3st")=$get(@FROM@("cect3st")) ; Nodule status
"RTN","SAMICTC1",144,0)
 set @TO@("cect4st")=$get(@FROM@("cect4st")) ; Nodule status
"RTN","SAMICTC1",145,0)
 set @TO@("cect5st")=$get(@FROM@("cect5st")) ; Nodule status
"RTN","SAMICTC1",146,0)
 set @TO@("cect6st")=$get(@FROM@("cect6st")) ; Nodule status
"RTN","SAMICTC1",147,0)
 set @TO@("cect7st")=$get(@FROM@("cect7st")) ; Nodule status
"RTN","SAMICTC1",148,0)
 set @TO@("cect8st")=$get(@FROM@("cect8st")) ; Nodule status
"RTN","SAMICTC1",149,0)
 set @TO@("cect9st")=$get(@FROM@("cect9st")) ; Nodule status
"RTN","SAMICTC1",150,0)
 set @TO@("cect10st")=$get(@FROM@("cect10st")) ; Nodule status
"RTN","SAMICTC1",151,0)
 ;
"RTN","SAMICTC1",152,0)
 set @TO@("cect1nt")=$get(@FROM@("cect1nt")) ; Nodule Consistency
"RTN","SAMICTC1",153,0)
 set @TO@("cect2nt")=$get(@FROM@("cect2nt")) ; Nodule Consistency
"RTN","SAMICTC1",154,0)
 set @TO@("cect3nt")=$get(@FROM@("cect3nt")) ; Nodule Consistency
"RTN","SAMICTC1",155,0)
 set @TO@("cect4nt")=$get(@FROM@("cect4nt")) ; Nodule Consistency
"RTN","SAMICTC1",156,0)
 set @TO@("cect5nt")=$get(@FROM@("cect5nt")) ; Nodule Consistency
"RTN","SAMICTC1",157,0)
 set @TO@("cect6nt")=$get(@FROM@("cect6nt")) ; Nodule Consistency
"RTN","SAMICTC1",158,0)
 set @TO@("cect7nt")=$get(@FROM@("cect7nt")) ; Nodule Consistency
"RTN","SAMICTC1",159,0)
 set @TO@("cect8nt")=$get(@FROM@("cect8nt")) ; Nodule Consistency
"RTN","SAMICTC1",160,0)
 set @TO@("cect9nt")=$get(@FROM@("cect9nt")) ; Nodule Consistency
"RTN","SAMICTC1",161,0)
 set @TO@("cect10nt")=$get(@FROM@("cect10nt")) ; Nodule Consistency
"RTN","SAMICTC1",162,0)
 ;
"RTN","SAMICTC1",163,0)
 set @TO@("cect1sl")=$get(@FROM@("cect1sl")) ; Length (mm)
"RTN","SAMICTC1",164,0)
 set @TO@("cect2sl")=$get(@FROM@("cect2sl")) ; Length (mm)
"RTN","SAMICTC1",165,0)
 set @TO@("cect3sl")=$get(@FROM@("cect3sl")) ; Length (mm)
"RTN","SAMICTC1",166,0)
 set @TO@("cect4sl")=$get(@FROM@("cect4sl")) ; Length (mm)
"RTN","SAMICTC1",167,0)
 set @TO@("cect5sl")=$get(@FROM@("cect5sl")) ; Length (mm)
"RTN","SAMICTC1",168,0)
 set @TO@("cect6sl")=$get(@FROM@("cect6sl")) ; Length (mm)
"RTN","SAMICTC1",169,0)
 set @TO@("cect7sl")=$get(@FROM@("cect7sl")) ; Length (mm)
"RTN","SAMICTC1",170,0)
 set @TO@("cect8sl")=$get(@FROM@("cect8sl")) ; Length (mm)
"RTN","SAMICTC1",171,0)
 set @TO@("cect9sl")=$get(@FROM@("cect9sl")) ; Length (mm)
"RTN","SAMICTC1",172,0)
 set @TO@("cect10sl")=$get(@FROM@("cect10sl")) ; Length (mm)
"RTN","SAMICTC1",173,0)
 ;
"RTN","SAMICTC1",174,0)
 set @TO@("cect1sw")=$get(@FROM@("cect1sw")) ; Maximum Width
"RTN","SAMICTC1",175,0)
 set @TO@("cect2sw")=$get(@FROM@("cect2sw")) ; Maximum Width
"RTN","SAMICTC1",176,0)
 set @TO@("cect3sw")=$get(@FROM@("cect3sw")) ; Maximum Width
"RTN","SAMICTC1",177,0)
 set @TO@("cect4sw")=$get(@FROM@("cect4sw")) ; Maximum Width
"RTN","SAMICTC1",178,0)
 set @TO@("cect5sw")=$get(@FROM@("cect5sw")) ; Maximum Width
"RTN","SAMICTC1",179,0)
 set @TO@("cect6sw")=$get(@FROM@("cect6sw")) ; Maximum Width
"RTN","SAMICTC1",180,0)
 set @TO@("cect7sw")=$get(@FROM@("cect7sw")) ; Maximum Width
"RTN","SAMICTC1",181,0)
 set @TO@("cect8sw")=$get(@FROM@("cect8sw")) ; Maximum Width
"RTN","SAMICTC1",182,0)
 set @TO@("cect9sw")=$get(@FROM@("cect9sw")) ; Maximum Width
"RTN","SAMICTC1",183,0)
 set @TO@("cect10sw")=$get(@FROM@("cect10sw")) ; Maximum Width
"RTN","SAMICTC1",184,0)
 ;
"RTN","SAMICTC1",185,0)
 set @TO@("cect1sh")=$get(@FROM@("cect1sh")) ; Height
"RTN","SAMICTC1",186,0)
 set @TO@("cect2sh")=$get(@FROM@("cect2sh")) ; Height
"RTN","SAMICTC1",187,0)
 set @TO@("cect3sh")=$get(@FROM@("cect3sh")) ; Height
"RTN","SAMICTC1",188,0)
 set @TO@("cect4sh")=$get(@FROM@("cect4sh")) ; Height
"RTN","SAMICTC1",189,0)
 set @TO@("cect5sh")=$get(@FROM@("cect5sh")) ; Height
"RTN","SAMICTC1",190,0)
 set @TO@("cect6sh")=$get(@FROM@("cect6sh")) ; Height
"RTN","SAMICTC1",191,0)
 set @TO@("cect7sh")=$get(@FROM@("cect7sh")) ; Height
"RTN","SAMICTC1",192,0)
 set @TO@("cect8sh")=$get(@FROM@("cect8sh")) ; Height
"RTN","SAMICTC1",193,0)
 set @TO@("cect9sh")=$get(@FROM@("cect9sh")) ; Height
"RTN","SAMICTC1",194,0)
 set @TO@("cect10sh")=$get(@FROM@("cect10sh")) ; Height
"RTN","SAMICTC1",195,0)
 ;
"RTN","SAMICTC1",196,0)
 set @TO@("cect1sv")=$get(@FROM@("cect1sv")) ; Volume
"RTN","SAMICTC1",197,0)
 set @TO@("cect2sv")=$get(@FROM@("cect2sv")) ; Volume
"RTN","SAMICTC1",198,0)
 set @TO@("cect3sv")=$get(@FROM@("cect3sv")) ; Volume
"RTN","SAMICTC1",199,0)
 set @TO@("cect4sv")=$get(@FROM@("cect4sv")) ; Volume
"RTN","SAMICTC1",200,0)
 set @TO@("cect5sv")=$get(@FROM@("cect5sv")) ; Volume
"RTN","SAMICTC1",201,0)
 set @TO@("cect6sv")=$get(@FROM@("cect6sv")) ; Volume
"RTN","SAMICTC1",202,0)
 set @TO@("cect7sv")=$get(@FROM@("cect7sv")) ; Volume
"RTN","SAMICTC1",203,0)
 set @TO@("cect8sv")=$get(@FROM@("cect8sv")) ; Volume
"RTN","SAMICTC1",204,0)
 set @TO@("cect9sv")=$get(@FROM@("cect9sv")) ; Volume
"RTN","SAMICTC1",205,0)
 set @TO@("cect10sv")=$get(@FROM@("cect10sv")) ; Volume
"RTN","SAMICTC1",206,0)
 ;
"RTN","SAMICTC1",207,0)
 set @TO@("cect1ssl")=$get(@FROM@("cect1ssl")) ; Solid Comp. Length
"RTN","SAMICTC1",208,0)
 set @TO@("cect1ssw")=$get(@FROM@("cect1ssw")) ; Solid Comp. Width
"RTN","SAMICTC1",209,0)
 set @TO@("cect2ssl")=$get(@FROM@("cect2ssl")) ; Solid Comp. Length
"RTN","SAMICTC1",210,0)
 set @TO@("cect2ssw")=$get(@FROM@("cect2ssw")) ; Solid Comp. Width
"RTN","SAMICTC1",211,0)
 set @TO@("cect3ssl")=$get(@FROM@("cect3ssl")) ; Solid Comp. Length
"RTN","SAMICTC1",212,0)
 set @TO@("cect3ssw")=$get(@FROM@("cect3ssw")) ; Solid Comp. Width
"RTN","SAMICTC1",213,0)
 set @TO@("cect4ssl")=$get(@FROM@("cect4ssl")) ; Solid Comp. Length
"RTN","SAMICTC1",214,0)
 set @TO@("cect4ssw")=$get(@FROM@("cect4ssw")) ; Solid Comp. Width
"RTN","SAMICTC1",215,0)
 set @TO@("cect5ssl")=$get(@FROM@("cect5ssl")) ; Solid Comp. Length
"RTN","SAMICTC1",216,0)
 set @TO@("cect5ssw")=$get(@FROM@("cect5ssw")) ; Solid Comp. Width
"RTN","SAMICTC1",217,0)
 set @TO@("cect6ssl")=$get(@FROM@("cect6ssl")) ; Solid Comp. Length
"RTN","SAMICTC1",218,0)
 set @TO@("cect6ssw")=$get(@FROM@("cect6ssw")) ; Solid Comp. Width
"RTN","SAMICTC1",219,0)
 set @TO@("cect7ssl")=$get(@FROM@("cect7ssl")) ; Solid Comp. Length
"RTN","SAMICTC1",220,0)
 set @TO@("cect7ssw")=$get(@FROM@("cect7ssw")) ; Solid Comp. Width
"RTN","SAMICTC1",221,0)
 set @TO@("cect8ssl")=$get(@FROM@("cect8ssl")) ; Solid Comp. Length
"RTN","SAMICTC1",222,0)
 set @TO@("cect8ssw")=$get(@FROM@("cect8ssw")) ; Solid Comp. Width
"RTN","SAMICTC1",223,0)
 set @TO@("cect9ssl")=$get(@FROM@("cect9ssl")) ; Solid Comp. Length
"RTN","SAMICTC1",224,0)
 set @TO@("cect9ssw")=$get(@FROM@("cect9ssw")) ; Solid Comp. Width
"RTN","SAMICTC1",225,0)
 set @TO@("cect10ssl")=$get(@FROM@("cect10ssl")) ; Solid Comp. Length
"RTN","SAMICTC1",226,0)
 set @TO@("cect10ssw")=$get(@FROM@("cect10ssw")) ; Solid Comp. Width
"RTN","SAMICTC1",227,0)
 ;
"RTN","SAMICTC1",228,0)
 set @TO@("cect1se")=$get(@FROM@("cect1se")) ; n
"RTN","SAMICTC1",229,0)
 set @TO@("cect1se")=$get(@FROM@("cect1se")) ;                 No
"RTN","SAMICTC1",230,0)
 set @TO@("cect2se")=$get(@FROM@("cect2se")) ; n
"RTN","SAMICTC1",231,0)
 set @TO@("cect2se")=$get(@FROM@("cect2se")) ;                 No
"RTN","SAMICTC1",232,0)
 set @TO@("cect3se")=$get(@FROM@("cect3se")) ; n
"RTN","SAMICTC1",233,0)
 set @TO@("cect3se")=$get(@FROM@("cect3se")) ;                 No
"RTN","SAMICTC1",234,0)
 set @TO@("cect4se")=$get(@FROM@("cect4se")) ; n
"RTN","SAMICTC1",235,0)
 set @TO@("cect4se")=$get(@FROM@("cect4se")) ;                 No
"RTN","SAMICTC1",236,0)
 set @TO@("cect5se")=$get(@FROM@("cect5se")) ; n
"RTN","SAMICTC1",237,0)
 set @TO@("cect5se")=$get(@FROM@("cect5se")) ;                 No
"RTN","SAMICTC1",238,0)
 set @TO@("cect6se")=$get(@FROM@("cect6se")) ; n
"RTN","SAMICTC1",239,0)
 set @TO@("cect6se")=$get(@FROM@("cect6se")) ;                 No
"RTN","SAMICTC1",240,0)
 set @TO@("cect7se")=$get(@FROM@("cect7se")) ; n
"RTN","SAMICTC1",241,0)
 set @TO@("cect7se")=$get(@FROM@("cect7se")) ;                 No
"RTN","SAMICTC1",242,0)
 set @TO@("cect8se")=$get(@FROM@("cect8se")) ; n
"RTN","SAMICTC1",243,0)
 set @TO@("cect8se")=$get(@FROM@("cect8se")) ;                 No
"RTN","SAMICTC1",244,0)
 set @TO@("cect9se")=$get(@FROM@("cect9se")) ; n
"RTN","SAMICTC1",245,0)
 set @TO@("cect9se")=$get(@FROM@("cect9se")) ;                 No
"RTN","SAMICTC1",246,0)
 set @TO@("cect10se")=$get(@FROM@("cect10se")) ; n
"RTN","SAMICTC1",247,0)
 set @TO@("cect10se")=$get(@FROM@("cect10se")) ;                 No
"RTN","SAMICTC1",248,0)
 ;
"RTN","SAMICTC1",249,0)
 set @TO@("cectin")=$get(@FROM@("cectin")) ; 1
"RTN","SAMICTC1",250,0)
 set @TO@("cectin")=$get(@FROM@("cectin")) ; 2
"RTN","SAMICTC1",251,0)
 ;
"RTN","SAMICTC1",252,0)
 set @TO@("cect1sp")=$get(@FROM@("cect1sp")) ; n
"RTN","SAMICTC1",253,0)
 set @TO@("cect1sp")=$get(@FROM@("cect1sp")) ;                 No
"RTN","SAMICTC1",254,0)
 set @TO@("cect2sp")=$get(@FROM@("cect2sp")) ; n
"RTN","SAMICTC1",255,0)
 set @TO@("cect2sp")=$get(@FROM@("cect2sp")) ;                 No
"RTN","SAMICTC1",256,0)
 set @TO@("cect3sp")=$get(@FROM@("cect3sp")) ; n
"RTN","SAMICTC1",257,0)
 set @TO@("cect3sp")=$get(@FROM@("cect3sp")) ;                 No
"RTN","SAMICTC1",258,0)
 set @TO@("cect4sp")=$get(@FROM@("cect4sp")) ; n
"RTN","SAMICTC1",259,0)
 set @TO@("cect4sp")=$get(@FROM@("cect4sp")) ;                 No
"RTN","SAMICTC1",260,0)
 set @TO@("cect5sp")=$get(@FROM@("cect5sp")) ; n
"RTN","SAMICTC1",261,0)
 set @TO@("cect5sp")=$get(@FROM@("cect5sp")) ;                 No
"RTN","SAMICTC1",262,0)
 set @TO@("cect6sp")=$get(@FROM@("cect6sp")) ; n
"RTN","SAMICTC1",263,0)
 set @TO@("cect6sp")=$get(@FROM@("cect6sp")) ;                 No
"RTN","SAMICTC1",264,0)
 set @TO@("cect7sp")=$get(@FROM@("cect7sp")) ; n
"RTN","SAMICTC1",265,0)
 set @TO@("cect7sp")=$get(@FROM@("cect7sp")) ;                 No
"RTN","SAMICTC1",266,0)
 set @TO@("cect8sp")=$get(@FROM@("cect8sp")) ; n
"RTN","SAMICTC1",267,0)
 set @TO@("cect8sp")=$get(@FROM@("cect8sp")) ;                 No
"RTN","SAMICTC1",268,0)
 set @TO@("cect9sp")=$get(@FROM@("cect9sp")) ; n
"RTN","SAMICTC1",269,0)
 set @TO@("cect9sp")=$get(@FROM@("cect9sp")) ;                 No
"RTN","SAMICTC1",270,0)
 set @TO@("cect10sp")=$get(@FROM@("cect10sp")) ; n
"RTN","SAMICTC1",271,0)
 set @TO@("cect10sp")=$get(@FROM@("cect10sp")) ;                 No
"RTN","SAMICTC1",272,0)
 ;
"RTN","SAMICTC1",273,0)
 set @TO@("cect1pld")=$get(@FROM@("cect1pld")) ; Distance
"RTN","SAMICTC1",274,0)
 set @TO@("cect2pld")=$get(@FROM@("cect2pld")) ; Distance
"RTN","SAMICTC1",275,0)
 set @TO@("cect3pld")=$get(@FROM@("cect3pld")) ; Distance
"RTN","SAMICTC1",276,0)
 set @TO@("cect4pld")=$get(@FROM@("cect4pld")) ; Distance
"RTN","SAMICTC1",277,0)
 set @TO@("cect5pld")=$get(@FROM@("cect5pld")) ; Distance
"RTN","SAMICTC1",278,0)
 set @TO@("cect6pld")=$get(@FROM@("cect6pld")) ; Distance
"RTN","SAMICTC1",279,0)
 set @TO@("cect7pld")=$get(@FROM@("cect7pld")) ; Distance
"RTN","SAMICTC1",280,0)
 set @TO@("cect8pld")=$get(@FROM@("cect8pld")) ; Distance
"RTN","SAMICTC1",281,0)
 set @TO@("cect9pld")=$get(@FROM@("cect9pld")) ; Distance
"RTN","SAMICTC1",282,0)
 set @TO@("cect10pld")=$get(@FROM@("cect10pld")) ; Distance
"RTN","SAMICTC1",283,0)
 ;
"RTN","SAMICTC1",284,0)
 set @TO@("cect1co")=$get(@FROM@("cect1co")) ; Comment
"RTN","SAMICTC1",285,0)
 set @TO@("cect2co")=$get(@FROM@("cect2co")) ; Comment
"RTN","SAMICTC1",286,0)
 set @TO@("cect3co")=$get(@FROM@("cect3co")) ; Comment
"RTN","SAMICTC1",287,0)
 set @TO@("cect4co")=$get(@FROM@("cect4co")) ; Comment
"RTN","SAMICTC1",288,0)
 set @TO@("cect5co")=$get(@FROM@("cect5co")) ; Comment
"RTN","SAMICTC1",289,0)
 set @TO@("cect6co")=$get(@FROM@("cect6co")) ; Comment
"RTN","SAMICTC1",290,0)
 set @TO@("cect7co")=$get(@FROM@("cect7co")) ; Comment
"RTN","SAMICTC1",291,0)
 set @TO@("cect8co")=$get(@FROM@("cect8co")) ; Comment
"RTN","SAMICTC1",292,0)
 set @TO@("cect9co")=$get(@FROM@("cect9co")) ; Comment
"RTN","SAMICTC1",293,0)
 set @TO@("cect10co")=$get(@FROM@("cect10co")) ; Comment
"RTN","SAMICTC1",294,0)
 ;
"RTN","SAMICTC1",295,0)
 set @TO@("cect1pd")=$get(@FROM@("cect1pd")) ; Pathologic diagnosis
"RTN","SAMICTC1",296,0)
 set @TO@("cect2pd")=$get(@FROM@("cect2pd")) ; Pathologic diagnosis
"RTN","SAMICTC1",297,0)
 set @TO@("cect3pd")=$get(@FROM@("cect3pd")) ; Pathologic diagnosis
"RTN","SAMICTC1",298,0)
 set @TO@("cect4pd")=$get(@FROM@("cect4pd")) ; Pathologic diagnosis
"RTN","SAMICTC1",299,0)
 set @TO@("cect5pd")=$get(@FROM@("cect5pd")) ; Pathologic diagnosis
"RTN","SAMICTC1",300,0)
 set @TO@("cect6pd")=$get(@FROM@("cect6pd")) ; Pathologic diagnosis
"RTN","SAMICTC1",301,0)
 set @TO@("cect7pd")=$get(@FROM@("cect7pd")) ; Pathologic diagnosis
"RTN","SAMICTC1",302,0)
 set @TO@("cect8pd")=$get(@FROM@("cect8pd")) ; Pathologic diagnosis
"RTN","SAMICTC1",303,0)
 set @TO@("cect9pd")=$get(@FROM@("cect9pd")) ; Pathologic diagnosis
"RTN","SAMICTC1",304,0)
 set @TO@("cect10pd")=$get(@FROM@("cect10pd")) ; Pathologic diagnosis
"RTN","SAMICTC1",305,0)
 ;
"RTN","SAMICTC1",306,0)
 set @TO@("cectancn")=$get(@FROM@("cectancn")) ; 1
"RTN","SAMICTC1",307,0)
 set @TO@("cectacn")=$get(@FROM@("cectacn")) ; 1
"RTN","SAMICTC1",308,0)
 ;
"RTN","SAMICTC1",309,0)
 set @TO@("ceem")=$get(@FROM@("ceem")) ; nv
"RTN","SAMICTC1",310,0)
 set @TO@("ceem")=$get(@FROM@("ceem")) ; no
"RTN","SAMICTC1",311,0)
 ;
"RTN","SAMICTC1",312,0)
 set @TO@("ceoca")=$get(@FROM@("ceoca")) ; n
"RTN","SAMICTC1",313,0)
 set @TO@("ceoca")=$get(@FROM@("ceoca")) ; y
"RTN","SAMICTC1",314,0)
 ;
"RTN","SAMICTC1",315,0)
 set @TO@("ceccv")=$get(@FROM@("ceccv")) ; e
"RTN","SAMICTC1",316,0)
 set @TO@("cecclm")=$get(@FROM@("cecclm")) ;               Left m
"RTN","SAMICTC1",317,0)
 set @TO@("ceccld")=$get(@FROM@("ceccld")) ;               LAD
"RTN","SAMICTC1",318,0)
 set @TO@("cecccf")=$get(@FROM@("cecccf")) ;               Circum
"RTN","SAMICTC1",319,0)
 set @TO@("ceccrc")=$get(@FROM@("ceccrc")) ;               RCA
"RTN","SAMICTC1",320,0)
 ;
"RTN","SAMICTC1",321,0)
 set @TO@("pa")=$get(@FROM@("pa")) ; n
"RTN","SAMICTC1",322,0)
 set @TO@("pa")=$get(@FROM@("pa")) ;            No
"RTN","SAMICTC1",323,0)
 ;
"RTN","SAMICTC1",324,0)
 ;
"RTN","SAMICTC1",325,0)
 ;@stanza 4 continue copy in 2nd routine
"RTN","SAMICTC1",326,0)
 ;
"RTN","SAMICTC1",327,0)
 do CTCOPY2^SAMICTC2(FROM,TO)
"RTN","SAMICTC1",328,0)
 ;
"RTN","SAMICTC1",329,0)
 ;
"RTN","SAMICTC1",330,0)
 ;@stanza 5 termination
"RTN","SAMICTC1",331,0)
 ;
"RTN","SAMICTC1",332,0)
 quit  ; end of ppi CTCOPY^SAMICTC1
"RTN","SAMICTC1",333,0)
 ;
"RTN","SAMICTC1",334,0)
 ;
"RTN","SAMICTC1",335,0)
 ;
"RTN","SAMICTC1",336,0)
 ;@dmi GENCTCOPY^SAMICTC1
"RTN","SAMICTC1",337,0)
GENCTCPY ; generate copy routine from graph
"RTN","SAMICTC1",338,0)
 ;
"RTN","SAMICTC1",339,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICTC1",340,0)
 ;
"RTN","SAMICTC1",341,0)
 ;ven/gpl;private;procedure;clean;silent;sac
"RTN","SAMICTC1",342,0)
 ;@called-by SAMI developer from direct mode
"RTN","SAMICTC1",343,0)
 ;@calls
"RTN","SAMICTC1",344,0)
 ; $$setroot^%wd
"RTN","SAMICTC1",345,0)
 ;@input
"RTN","SAMICTC1",346,0)
 ; ceform-fields graph
"RTN","SAMICTC1",347,0)
 ;@output
"RTN","SAMICTC1",348,0)
 ; writes compiled code to current device
"RTN","SAMICTC1",349,0)
 ;
"RTN","SAMICTC1",350,0)
 ;
"RTN","SAMICTC1",351,0)
 ;@stanza 2 compile code to copy most fields
"RTN","SAMICTC1",352,0)
 ;
"RTN","SAMICTC1",353,0)
 new root set root=$$setroot^%wd("ceform-fields")
"RTN","SAMICTC1",354,0)
 new fldf set fldf=$name(@root@("field"))
"RTN","SAMICTC1",355,0)
 ;
"RTN","SAMICTC1",356,0)
 write !,"generating copy from ",fldf
"RTN","SAMICTC1",357,0)
 ;
"RTN","SAMICTC1",358,0)
 new zi set zi=0
"RTN","SAMICTC1",359,0)
 for  do  quit:'zi
"RTN","SAMICTC1",360,0)
 . set zi=$order(@fldf@(zi))
"RTN","SAMICTC1",361,0)
 . quit:'zi
"RTN","SAMICTC1",362,0)
 . ;
"RTN","SAMICTC1",363,0)
 . quit:$get(@fldf@(zi,"copy"))'=1  ; only want copy fields
"RTN","SAMICTC1",364,0)
 . ;
"RTN","SAMICTC1",365,0)
 . new name,label
"RTN","SAMICTC1",366,0)
 . set name=$get(@fldf@(zi,"name"))
"RTN","SAMICTC1",367,0)
 . set label=$get(@fldf@(zi,"label"))
"RTN","SAMICTC1",368,0)
 . set label=$extract(label,1,20)
"RTN","SAMICTC1",369,0)
 . quit:name=""
"RTN","SAMICTC1",370,0)
 . ;
"RTN","SAMICTC1",371,0)
 . write !," set @TO@("""_name_""")=$get(@FROM@("""_name_""")) ; "_label
"RTN","SAMICTC1",372,0)
 . quit
"RTN","SAMICTC1",373,0)
 ;
"RTN","SAMICTC1",374,0)
 ;
"RTN","SAMICTC1",375,0)
 ;@stanza 3 termination
"RTN","SAMICTC1",376,0)
 ;
"RTN","SAMICTC1",377,0)
 quit  ; end of dmi GENCTCOPY^SAMICTC1
"RTN","SAMICTC1",378,0)
 ;
"RTN","SAMICTC1",379,0)
 ;
"RTN","SAMICTC1",380,0)
 ;
"RTN","SAMICTC1",381,0)
EOR ; end of routine SAMICTC1
"RTN","SAMICTD2")
0^9^B193976177
"RTN","SAMICTD2",1,0)
SAMICTD2 ;ven/gpl - cteval-dict init ;2021-07-21t20:12z
"RTN","SAMICTD2",2,0)
 ;;18.0;SAMI;**12**;2020-01;Build 1
"RTN","SAMICTD2",3,0)
 ;;18.12
"RTN","SAMICTD2",4,0)
 ;
"RTN","SAMICTD2",5,0)
 ; SAMICTD2 contains a pps to initialize the cteval-dict graphstore.
"RTN","SAMICTD2",6,0)
 ;
"RTN","SAMICTD2",7,0)
 quit  ; no entry from top
"RTN","SAMICTD2",8,0)
 ;
"RTN","SAMICTD2",9,0)
 ;
"RTN","SAMICTD2",10,0)
 ;
"RTN","SAMICTD2",11,0)
 ;@section 0 primary development
"RTN","SAMICTD2",12,0)
 ;
"RTN","SAMICTD2",13,0)
 ;
"RTN","SAMICTD2",14,0)
 ;
"RTN","SAMICTD2",15,0)
 ;@routine-credits
"RTN","SAMICTD2",16,0)
 ;@license see routine SAMIUL
"RTN","SAMICTD2",17,0)
 ;@documentation see SAMICTUL
"RTN","SAMICTD2",18,0)
 ;
"RTN","SAMICTD2",19,0)
 ;@dev-main George P. Lilly (gpl)
"RTN","SAMICTD2",20,0)
 ; gpl@vistaexpertise.net
"RTN","SAMICTD2",21,0)
 ;@dev-org-main Vista Expertise Network (ven)
"RTN","SAMICTD2",22,0)
 ; http://vistaexpertise.net
"RTN","SAMICTD2",23,0)
 ;@copyright 2017/2021, gpl, all rights reserved
"RTN","SAMICTD2",24,0)
 ;@license Apache 2.0
"RTN","SAMICTD2",25,0)
 ; https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMICTD2",26,0)
 ;
"RTN","SAMICTD2",27,0)
 ;@last-update 2021-07-21t20:12z
"RTN","SAMICTD2",28,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMICTD2",29,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMICTD2",30,0)
 ;@version 18.12
"RTN","SAMICTD2",31,0)
 ;@release-date 2020-01
"RTN","SAMICTD2",32,0)
 ;@patch-list **12**
"RTN","SAMICTD2",33,0)
 ;
"RTN","SAMICTD2",34,0)
 ;@dev-add Frederick D. S. Marshall (toad)
"RTN","SAMICTD2",35,0)
 ; toad@vistaexpertise.net
"RTN","SAMICTD2",36,0)
 ;
"RTN","SAMICTD2",37,0)
 ;@routine-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMICTD2",38,0)
 ; see routine SAMICTUL
"RTN","SAMICTD2",39,0)
 ;
"RTN","SAMICTD2",40,0)
 ;@contents
"RTN","SAMICTD2",41,0)
 ; INIT2GPH pps INIT2GPH^SAMICTD2,
"RTN","SAMICTD2",42,0)
 ;  initialize CTEVAL dictionary into graph cteval-dict
"RTN","SAMICTD2",43,0)
 ; INIT initialize cteval-dict graph
"RTN","SAMICTD2",44,0)
 ;
"RTN","SAMICTD2",45,0)
 ;
"RTN","SAMICTD2",46,0)
 ;
"RTN","SAMICTD2",47,0)
 ;@section 1 INIT2GPH^SAMICTD2 pps & subroutine
"RTN","SAMICTD2",48,0)
 ;
"RTN","SAMICTD2",49,0)
 ;
"RTN","SAMICTD2",50,0)
 ;
"RTN","SAMICTD2",51,0)
 ;@pps INIT2GPH^SAMICTD2
"RTN","SAMICTD2",52,0)
INIT2GPH() ; initialize CTEVAL dictionary into graph cteval-dict
"RTN","SAMICTD2",53,0)
 ;
"RTN","SAMICTD2",54,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICTD2",55,0)
 ;
"RTN","SAMICTD2",56,0)
 ;ven/gpl;pps;procedure;silent;clean;sac;??% tests
"RTN","SAMICTD2",57,0)
 ;@called-by
"RTN","SAMICTD2",58,0)
 ; WSREPORT^SAMICTR
"RTN","SAMICTD2",59,0)
 ; WSREPORT^SAMICTR0
"RTN","SAMICTD2",60,0)
 ; WSREPORT^SAMICTT0
"RTN","SAMICTD2",61,0)
 ;@calls
"RTN","SAMICTD2",62,0)
 ; $$setroot^%wd
"RTN","SAMICTD2",63,0)
 ; INIT
"RTN","SAMICTD2",64,0)
 ;@input none
"RTN","SAMICTD2",65,0)
 ;@output
"RTN","SAMICTD2",66,0)
 ; cteval-dict graph is initialized
"RTN","SAMICTD2",67,0)
 ;@tests
"RTN","SAMICTD2",68,0)
 ; UTIN2G^SAMIUTD2
"RTN","SAMICTD2",69,0)
 ;
"RTN","SAMICTD2",70,0)
 ;
"RTN","SAMICTD2",71,0)
 ;@stanza 2 init cteval-dict graph
"RTN","SAMICTD2",72,0)
 ;
"RTN","SAMICTD2",73,0)
 new root set root=$$setroot^%wd("cteval-dict")
"RTN","SAMICTD2",74,0)
 kill @root ; clear contents of cteval-dict graph
"RTN","SAMICTD2",75,0)
 ;
"RTN","SAMICTD2",76,0)
 new g set g=$name(@root@("cteval-dict"))
"RTN","SAMICTD2",77,0)
 do INIT(g) ; initialize graph
"RTN","SAMICTD2",78,0)
 ;
"RTN","SAMICTD2",79,0)
 ;
"RTN","SAMICTD2",80,0)
 ;@stanza 3 termination
"RTN","SAMICTD2",81,0)
 ;
"RTN","SAMICTD2",82,0)
 quit  ; end of INIT2GPH
"RTN","SAMICTD2",83,0)
 ;
"RTN","SAMICTD2",84,0)
 ;
"RTN","SAMICTD2",85,0)
 ;
"RTN","SAMICTD2",86,0)
INIT(g) ; initialize cteval-dict graph
"RTN","SAMICTD2",87,0)
 ;
"RTN","SAMICTD2",88,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICTD2",89,0)
 ;
"RTN","SAMICTD2",90,0)
 ;ven/gpl;private;procedure;silent;clean;sac;??% tests
"RTN","SAMICTD2",91,0)
 ;@called-by
"RTN","SAMICTD2",92,0)
 ; INIT2GPH
"RTN","SAMICTD2",93,0)
 ;@calls none
"RTN","SAMICTD2",94,0)
 ;@input
"RTN","SAMICTD2",95,0)
 ; g = root of cteval-dict graph
"RTN","SAMICTD2",96,0)
 ;@output
"RTN","SAMICTD2",97,0)
 ; @g = initialized cteval-dict graph
"RTN","SAMICTD2",98,0)
 ;@tests
"RTN","SAMICTD2",99,0)
 ; UTIN2G^SAMIUTD2
"RTN","SAMICTD2",100,0)
 ;
"RTN","SAMICTD2",101,0)
 ;
"RTN","SAMICTD2",102,0)
 ;@stanza 2 init cteval-dict graph
"RTN","SAMICTD2",103,0)
 ;
"RTN","SAMICTD2",104,0)
 ;# English Translation Dictionary for CT report generation
"RTN","SAMICTD2",105,0)
 ;# Last Updated: December 14, 2016
"RTN","SAMICTD2",106,0)
 ;#
"RTN","SAMICTD2",107,0)
 ;# - Phrasing shortened for updated CT Report used at Mount Sinai
"RTN","SAMICTD2",108,0)
 ;# - Breast Density Added
"RTN","SAMICTD2",109,0)
 ;# - Correction of nonsolid and noncalcified
"RTN","SAMICTD2",110,0)
 ;
"RTN","SAMICTD2",111,0)
 ;# Recommendations
"RTN","SAMICTD2",112,0)
 set @g@("repeatscreen")="Repeat screening"
"RTN","SAMICTD2",113,0)
 set @g@("annual")="Annual repeat CT"
"RTN","SAMICTD2",114,0)
 set @g@("followup")="Follow-up CT"
"RTN","SAMICTD2",115,0)
 set @g@("followupcontrast")="Follow-up CT with contrast"
"RTN","SAMICTD2",116,0)
 set @g@("bronchoscopy")="Bronchoscopy"
"RTN","SAMICTD2",117,0)
 set @g@("resection")="Resection"
"RTN","SAMICTD2",118,0)
 set @g@("biopsy")="CT-guided biopsy"
"RTN","SAMICTD2",119,0)
 set @g@("pet")="PET"
"RTN","SAMICTD2",120,0)
 set @g@("vat")="VAT"
"RTN","SAMICTD2",121,0)
 set @g@("ctfull")="Full diagnostic CT"
"RTN","SAMICTD2",122,0)
 set @g@("ctlimited")="Limited diagnostic CT"
"RTN","SAMICTD2",123,0)
 set @g@("ctbiopsy")="Full diagnostic CT and biopsy"
"RTN","SAMICTD2",124,0)
 set @g@("antibiotic")="Antibiotic treatment with a follow-up CT"
"RTN","SAMICTD2",125,0)
 set @g@("annualrepeat")="Annual repeat Diagnostic CT"
"RTN","SAMICTD2",126,0)
 ;
"RTN","SAMICTD2",127,0)
 ;# CT Type of Exam (cetex)
"RTN","SAMICTD2",128,0)
 set @g@("cetex","b")="Baseline"
"RTN","SAMICTD2",129,0)
 set @g@("cetex","a")="Annual repeat"
"RTN","SAMICTD2",130,0)
 set @g@("cetex","d")="Follow-up"
"RTN","SAMICTD2",131,0)
 ;
"RTN","SAMICTD2",132,0)
 ;# CT Protocol (cectp)
"RTN","SAMICTD2",133,0)
 set @g@("cectp","l")="low-dose CT"
"RTN","SAMICTD2",134,0)
 set @g@("cectp","m")="low-dose Dx CT / HRCT"
"RTN","SAMICTD2",135,0)
 set @g@("cectp","d")="standard Dx CT / HRCT"
"RTN","SAMICTD2",136,0)
 set @g@("cectp","i")="limited Dx CT / HRCT"
"RTN","SAMICTD2",137,0)
 ;
"RTN","SAMICTD2",138,0)
 ;# Is It New (Nodule x)? (cect[x]ch, x=1..10)
"RTN","SAMICTD2",139,0)
 set @g@("cectch","n")="is newly seen"
"RTN","SAMICTD2",140,0)
 set @g@("cectch","pn")="unchanged"
"RTN","SAMICTD2",141,0)
 set @g@("cectch","pd")="shows slight decrease"
"RTN","SAMICTD2",142,0)
 set @g@("cectch","pe")="shows marked decrease"
"RTN","SAMICTD2",143,0)
 set @g@("cectch","pi")="shows slight increase"
"RTN","SAMICTD2",144,0)
 set @g@("cectch","pj")="shows marked increase"
"RTN","SAMICTD2",145,0)
 set @g@("cectch","pw")="has resolved"
"RTN","SAMICTD2",146,0)
 set @g@("cectch","px")="is not a nodule"
"RTN","SAMICTD2",147,0)
 set @g@("cectch","pr")="has been resected"
"RTN","SAMICTD2",148,0)
 set @g@("cectch","pk")="previously seen but is not mentioned in outside report"
"RTN","SAMICTD2",149,0)
 set @g@("cectch","rn")="seen in retrospect with no change"
"RTN","SAMICTD2",150,0)
 set @g@("cectch","pv")="was not included in this scan"
"RTN","SAMICTD2",151,0)
 set @g@("cectch","po")="is obscured"
"RTN","SAMICTD2",152,0)
 set @g@("cectch","rd")="seen in retrospect with decrease"
"RTN","SAMICTD2",153,0)
 set @g@("cectch","ri")="seen in retrospect with slight increase"
"RTN","SAMICTD2",154,0)
 set @g@("cectch","rj")="seen in retrospect with marked increase"
"RTN","SAMICTD2",155,0)
 ;
"RTN","SAMICTD2",156,0)
 ;# Endoibronchial
"RTN","SAMICTD2",157,0)
 set @g@("cecten","tr")="trachea"
"RTN","SAMICTD2",158,0)
 set @g@("cecten","rm")="right main bronchus"
"RTN","SAMICTD2",159,0)
 set @g@("cecten","lm")="left main bronchus"
"RTN","SAMICTD2",160,0)
 set @g@("cecten","bi")="bronchus intermedius"
"RTN","SAMICTD2",161,0)
 set @g@("cecten","lul")="left upper lobe"
"RTN","SAMICTD2",162,0)
 set @g@("cecten","lll")="left lower lobe"
"RTN","SAMICTD2",163,0)
 set @g@("cecten","rul")="right upper lobe"
"RTN","SAMICTD2",164,0)
 set @g@("cecten","rml")="right middle lobe"
"RTN","SAMICTD2",165,0)
 set @g@("cecten","rll")="right lower lobe"
"RTN","SAMICTD2",166,0)
 ;
"RTN","SAMICTD2",167,0)
 ;# Likely Location (Nodule x) (cect[x]ll, x=1..10)
"RTN","SAMICTD2",168,0)
 set @g@("cectll","lul")="left upper lobe"
"RTN","SAMICTD2",169,0)
 set @g@("cectll","lll")="left lower lobe"
"RTN","SAMICTD2",170,0)
 set @g@("cectll","rul")="right upper lobe"
"RTN","SAMICTD2",171,0)
 set @g@("cectll","rml")="right middle lobe"
"RTN","SAMICTD2",172,0)
 set @g@("cectll","rll")="right lower lobe"
"RTN","SAMICTD2",173,0)
 ;
"RTN","SAMICTD2",174,0)
 ;# Nodule Texture (Nodule x) (cect[x]nt, x=1..10)
"RTN","SAMICTD2",175,0)
 set @g@("cectnt","s")="solid"
"RTN","SAMICTD2",176,0)
 set @g@("cectnt","m")="part-solid"
"RTN","SAMICTD2",177,0)
 set @g@("cectnt","g")="nonsolid"
"RTN","SAMICTD2",178,0)
 set @g@("cectnt","o")="unusual"
"RTN","SAMICTD2",179,0)
 ;
"RTN","SAMICTD2",180,0)
 ;# Smooth Edges (Nodule x) (cect[x]nt, x=1..10)
"RTN","SAMICTD2",181,0)
 set @g@("cectse","y")="smooth"
"RTN","SAMICTD2",182,0)
 set @g@("cectse","n")="irregularly marginated"
"RTN","SAMICTD2",183,0)
 set @g@("cectse","q")="ill-defined"
"RTN","SAMICTD2",184,0)
 ;
"RTN","SAMICTD2",185,0)
 ;# Calcifications (Nodule x) (cect[x]ca, x=1..10)
"RTN","SAMICTD2",186,0)
 set @g@("cectca","y")="calcified"
"RTN","SAMICTD2",187,0)
 set @g@("cectca","n")="noncalcified"
"RTN","SAMICTD2",188,0)
 set @g@("cectca","q")="possibly calcified"
"RTN","SAMICTD2",189,0)
 ;
"RTN","SAMICTD2",190,0)
 ;# Spiculations/Pleural Tags (Nodule x) (cect[x]sp, x=1..10)
"RTN","SAMICTD2",191,0)
 set @g@("cectsp","y")="spiculations / pleural tags are seen"
"RTN","SAMICTD2",192,0)
 set @g@("cectsp","n")="no spiculations or pleural tags are seen"
"RTN","SAMICTD2",193,0)
 ;
"RTN","SAMICTD2",194,0)
 ;# Pathologic Diagnosis (Nodule x) (cect[x]pd, x=1..10)
"RTN","SAMICTD2",195,0)
 set @g@("cectpd","aa")="AAH"
"RTN","SAMICTD2",196,0)
 set @g@("cectpd","ba")="BAC"
"RTN","SAMICTD2",197,0)
 set @g@("cectpd","ad")="Adenocarcinoma"
"RTN","SAMICTD2",198,0)
 set @g@("cectpd","as")="Adenosquamous"
"RTN","SAMICTD2",199,0)
 set @g@("cectpd","la")="Large cell"
"RTN","SAMICTD2",200,0)
 set @g@("cectpd","sq")="Squamous cell"
"RTN","SAMICTD2",201,0)
 set @g@("cectpd","sm")="Small cell"
"RTN","SAMICTD2",202,0)
 set @g@("cectpd","ct")="Carcinoid(typical)"
"RTN","SAMICTD2",203,0)
 set @g@("cectpd","ca")="Carcinoid(atypical)"
"RTN","SAMICTD2",204,0)
 set @g@("cectpd","be")="Benign"
"RTN","SAMICTD2",205,0)
 set @g@("cectpd","bs")="Benign specific"
"RTN","SAMICTD2",206,0)
 ;
"RTN","SAMICTD2",207,0)
 set @g@("cectac","f")="Follow-up CT"
"RTN","SAMICTD2",208,0)
 set @g@("cectac","a")="Antibiotic treatment with a follow-up CT"
"RTN","SAMICTD2",209,0)
 set @g@("cectac","e")="PET"
"RTN","SAMICTD2",210,0)
 set @g@("cectac","c")="Follow-up CT with contrast"
"RTN","SAMICTD2",211,0)
 set @g@("cectac","b")="CT-guided biopsy"
"RTN","SAMICTD2",212,0)
 set @g@("cectac","p")="Bronchoscopy"
"RTN","SAMICTD2",213,0)
 set @g@("cectac","v")="VAT"
"RTN","SAMICTD2",214,0)
 set @g@("cectac","r")="Resection"
"RTN","SAMICTD2",215,0)
 ;
"RTN","SAMICTD2",216,0)
 ;# The following is deprecated, but available for old forms
"RTN","SAMICTD2",217,0)
 set @g@("cectac","s")="repeat SCT"
"RTN","SAMICTD2",218,0)
 ;
"RTN","SAMICTD2",219,0)
 ;# Emphysema (ceem)
"RTN","SAMICTD2",220,0)
 set @g@("ceem","no")="None"
"RTN","SAMICTD2",221,0)
 ;set @g@("ceem","mi")="Minimal"
"RTN","SAMICTD2",222,0)
 set @g@("ceem","mi")="Mild"
"RTN","SAMICTD2",223,0)
 set @g@("ceem","mo")="Moderate"
"RTN","SAMICTD2",224,0)
 set @g@("ceem","se")="Severe"
"RTN","SAMICTD2",225,0)
 ;
"RTN","SAMICTD2",226,0)
 ;# Bronchiectasis/Small Airway Disease (cebrs) [***IGNORE cebrs(n)]
"RTN","SAMICTD2",227,0)
 set @g@("cebrs","y")="Bronchiectasis/small airways disease"
"RTN","SAMICTD2",228,0)
 set @g@("cebrs","n")="No bronchiectasis or small airways disease"
"RTN","SAMICTD2",229,0)
 ;
"RTN","SAMICTD2",230,0)
 ;# Coronary Calcifications (cecclm, ceccld, cecccf, cdccrc)
"RTN","SAMICTD2",231,0)
 set @g@("cecc","no")="none"
"RTN","SAMICTD2",232,0)
 set @g@("cecc","mi")="minimal"
"RTN","SAMICTD2",233,0)
 set @g@("cecc","mo")="moderate"
"RTN","SAMICTD2",234,0)
 set @g@("cecc","ex")="extensive"
"RTN","SAMICTD2",235,0)
 ;
"RTN","SAMICTD2",236,0)
 set @g@("cebat","y")="Non-obstructive atelectasis seen in the"
"RTN","SAMICTD2",237,0)
 ;
"RTN","SAMICTD2",238,0)
 ;# Lymph Nodes (cemln, cemlnca)
"RTN","SAMICTD2",239,0)
 set @g@("cemln","y")="Lymph nodes are seen"
"RTN","SAMICTD2",240,0)
 set @g@("cemln","n")="No abnormal lymph nodes are seen"
"RTN","SAMICTD2",241,0)
 set @g@("cemlnca","c")="Lymph nodes are calcified."
"RTN","SAMICTD2",242,0)
 set @g@("cemlnca","n")="Lymph nodes are non-calcified."
"RTN","SAMICTD2",243,0)
 set @g@("cemlnca","b")="Lymph nodes are both calcified and non-calcified."
"RTN","SAMICTD2",244,0)
 ;
"RTN","SAMICTD2",245,0)
 ;# Hilar Abnormalities (ceha) [***IGNORE ceha(n)]
"RTN","SAMICTD2",246,0)
 set @g@("ceha","y")="Hilar Abnormalities:"
"RTN","SAMICTD2",247,0)
 set @g@("ceha","n")="No hilar abnormalities are seen"
"RTN","SAMICTD2",248,0)
 ;
"RTN","SAMICTD2",249,0)
 ;# Hilar Abnormalities - what(cehaw)
"RTN","SAMICTD2",250,0)
 set @g@("cehaw","hm")="hilar mass"
"RTN","SAMICTD2",251,0)
 ;
"RTN","SAMICTD2",252,0)
 ;# Hilar Abnormalities action (cehaa)
"RTN","SAMICTD2",253,0)
 set @g@("cehaa","f")=@g@("followup")
"RTN","SAMICTD2",254,0)
 set @g@("cehaa","c")=@g@("followupcontrast")
"RTN","SAMICTD2",255,0)
 set @g@("cehaa","b")=@g@("biopsy")
"RTN","SAMICTD2",256,0)
 set @g@("cehaa","p")=@g@("bronchoscopy")
"RTN","SAMICTD2",257,0)
 ;
"RTN","SAMICTD2",258,0)
 ;# Mediastinal Abnormalities (ceoma) [***IGNORE ceoma(n)]
"RTN","SAMICTD2",259,0)
 set @g@("ceoma","y")="Mediastinal Abnormalities:"
"RTN","SAMICTD2",260,0)
 set @g@("ceoma","n")="no mediastinal abnormalities are seen"
"RTN","SAMICTD2",261,0)
 ;
"RTN","SAMICTD2",262,0)
 ;# Mediastinal Abnormalities Action (ceomaa)[*** for ceomaa(o) use ceomas]
"RTN","SAMICTD2",263,0)
 set @g@("ceomaa","f")=@g@("followup")
"RTN","SAMICTD2",264,0)
 set @g@("ceomaa","c")=@g@("followupcontrast")
"RTN","SAMICTD2",265,0)
 set @g@("ceomaa","b")=@g@("biopsy")
"RTN","SAMICTD2",266,0)
 set @g@("ceomaa","p")=@g@("bronchoscopy")
"RTN","SAMICTD2",267,0)
 set @g@("ceomaa","e")=@g@("pet")
"RTN","SAMICTD2",268,0)
 set @g@("ceomaa","r")=@g@("resection")
"RTN","SAMICTD2",269,0)
 set @g@("ceomaa","v")=@g@("vat")
"RTN","SAMICTD2",270,0)
 set @g@("ceomaa","s")=@g@("repeatscreen")
"RTN","SAMICTD2",271,0)
 ;
"RTN","SAMICTD2",272,0)
 ;# Endobronchial Abnormalities (ceeba) [***IGNORE ceeba(n)]
"RTN","SAMICTD2",273,0)
 set @g@("ceeba","y")="Endobronchial Abnormalities: "
"RTN","SAMICTD2",274,0)
 set @g@("ceeba","n")="no endobroncial abnormalities are seen"
"RTN","SAMICTD2",275,0)
 ;
"RTN","SAMICTD2",276,0)
 ;# Endobronchial Abnormalities Action (ceebaa)
"RTN","SAMICTD2",277,0)
 set @g@("ceebaa","f")=@g@("followup")
"RTN","SAMICTD2",278,0)
 set @g@("ceebaa","p")=@g@("bronchoscopy")
"RTN","SAMICTD2",279,0)
 set @g@("ceebaa","b")=@g@("biopsy")
"RTN","SAMICTD2",280,0)
 set @g@("ceebaa","s")=@g@("repeatscreen")
"RTN","SAMICTD2",281,0)
 ;
"RTN","SAMICTD2",282,0)
 ;# Other clincially significant abnormalities location (ceafl)
"RTN","SAMICTD2",283,0)
 set @g@("ceafl","b")="breast"
"RTN","SAMICTD2",284,0)
 set @g@("ceafl","a")="abdomen"
"RTN","SAMICTD2",285,0)
 set @g@("ceafl","h")="head"
"RTN","SAMICTD2",286,0)
 set @g@("ceafl","n")="neck"
"RTN","SAMICTD2",287,0)
 ;
"RTN","SAMICTD2",288,0)
 ;# Consolidation (cefcp) [***IGNORE cefcp(n)]
"RTN","SAMICTD2",289,0)
 set @g@("cefcp","y")="consolidation is noted"
"RTN","SAMICTD2",290,0)
 set @g@("cefcp","n")="no consolidation is noted"
"RTN","SAMICTD2",291,0)
 ;
"RTN","SAMICTD2",292,0)
 ;# Consolidation What (cefcpw) [*** for cefcpw(os) use cefcps]
"RTN","SAMICTD2",293,0)
 set @g@("cefcpw","f")="Focal"
"RTN","SAMICTD2",294,0)
 set @g@("cefcpw","p")="Patchy"
"RTN","SAMICTD2",295,0)
 set @g@("cefcpw","d")="Diffuse"
"RTN","SAMICTD2",296,0)
 ;
"RTN","SAMICTD2",297,0)
 ;# Recommended Consolidation Action (cefcpa)[*** for cefcpa(o) use cefcpas]
"RTN","SAMICTD2",298,0)
 set @g@("cefcpa","s")=@g@("repeatscreen")
"RTN","SAMICTD2",299,0)
 set @g@("cefcpa","a")=@g@("antibiotic")
"RTN","SAMICTD2",300,0)
 set @g@("cefcpa","f")=@g@("followup")
"RTN","SAMICTD2",301,0)
 set @g@("cefcpa","b")=@g@("biopsy")
"RTN","SAMICTD2",302,0)
 set @g@("cefcpa","p")=@g@("bronchoscopy")
"RTN","SAMICTD2",303,0)
 ;
"RTN","SAMICTD2",304,0)
 ;# Pleural Effusion (cepel, ceper) [***IGNORE if both are no]
"RTN","SAMICTD2",305,0)
 set @g@("cepe","no")="no"
"RTN","SAMICTD2",306,0)
 set @g@("cepe","sm")="small"
"RTN","SAMICTD2",307,0)
 set @g@("cepe","mo")="moderate"
"RTN","SAMICTD2",308,0)
 set @g@("cepe","lg")="large"
"RTN","SAMICTD2",309,0)
 ;
"RTN","SAMICTD2",310,0)
 ;# Pericardial Effusion
"RTN","SAMICTD2",311,0)
 set @g@("ceprevm","mi")="minimal"
"RTN","SAMICTD2",312,0)
 set @g@("ceprevm","mo")="moderate"
"RTN","SAMICTD2",313,0)
 set @g@("ceprevm","ex")="marked"
"RTN","SAMICTD2",314,0)
 ;
"RTN","SAMICTD2",315,0)
 ;# Recommended Followup (cefu)
"RTN","SAMICTD2",316,0)
 set @g@("cefu","rs")=@g@("annual")
"RTN","SAMICTD2",317,0)
 set @g@("cefu","dx")=@g@("followup")
"RTN","SAMICTD2",318,0)
 set @g@("cefu","dl")=@g@("ctlimited")
"RTN","SAMICTD2",319,0)
 set @g@("cefu","af")=@g@("antibiotic")
"RTN","SAMICTD2",320,0)
 set @g@("cefu","fn")=@g@("biopsy")
"RTN","SAMICTD2",321,0)
 set @g@("cefu","cb")=@g@("ctbiopsy")
"RTN","SAMICTD2",322,0)
 set @g@("cefu","cc")=@g@("followupcontrast")
"RTN","SAMICTD2",323,0)
 set @g@("cefu","pe")=@g@("pet")
"RTN","SAMICTD2",324,0)
 set @g@("cefu","br")=@g@("bronchoscopy")
"RTN","SAMICTD2",325,0)
 set @g@("cefu","va")=@g@("vat")
"RTN","SAMICTD2",326,0)
 set @g@("cefu","su")=@g@("resection")
"RTN","SAMICTD2",327,0)
 set @g@("cefu","ad")=@g@("annualrepeat")
"RTN","SAMICTD2",328,0)
 ;
"RTN","SAMICTD2",329,0)
 ;# Recommended Follow-up (When) (cefuw)
"RTN","SAMICTD2",330,0)
 set @g@("cefuw","nw")="at this time"
"RTN","SAMICTD2",331,0)
 set @g@("cefuw","1m")="in one month"
"RTN","SAMICTD2",332,0)
 set @g@("cefuw","3m")="in three months"
"RTN","SAMICTD2",333,0)
 set @g@("cefuw","6m")="in six months"
"RTN","SAMICTD2",334,0)
 set @g@("cefuw","1y")="in one year"
"RTN","SAMICTD2",335,0)
 ;
"RTN","SAMICTD2",336,0)
 ;# Impression (Nodules) (ceimn)
"RTN","SAMICTD2",337,0)
 set @g@("ceimn","rs")="No evidence of nodules"
"RTN","SAMICTD2",338,0)
 set @g@("ceimn","ro")="Nodule(s) as described above. Consistent with old granulomatous disease"
"RTN","SAMICTD2",339,0)
 set @g@("ceimn","ru")="Nodule(s) unchanged, as described above"
"RTN","SAMICTD2",340,0)
 set @g@("ceimn","nf")="Nodule(s) as described above"
"RTN","SAMICTD2",341,0)
 ;
"RTN","SAMICTD2",342,0)
 ;# Impression (Other Findings) (ceimo)
"RTN","SAMICTD2",343,0)
 set @g@("ceimo","no")="No other abnormalities"
"RTN","SAMICTD2",344,0)
 set @g@("ceimo","oa")="Other abnormalities as described above"
"RTN","SAMICTD2",345,0)
 set @g@("ceimo","da")="Diffuse abnormalities"
"RTN","SAMICTD2",346,0)
 ;
"RTN","SAMICTD2",347,0)
 ;# Breast Density
"RTN","SAMICTD2",348,0)
 set @g@("ceobad","1")="almost entirely fatty"
"RTN","SAMICTD2",349,0)
 set @g@("ceobad","2")="scattered areas of fibroglandular density"
"RTN","SAMICTD2",350,0)
 set @g@("ceobad","3")="heterogeneously dense"
"RTN","SAMICTD2",351,0)
 set @g@("ceobad","4")="extremely dense"
"RTN","SAMICTD2",352,0)
 ;
"RTN","SAMICTD2",353,0)
 ;# LungRADS
"RTN","SAMICTD2",354,0)
 set @g@("celrad","0")="incomplete"
"RTN","SAMICTD2",355,0)
 set @g@("celrad","1")="negative"
"RTN","SAMICTD2",356,0)
 set @g@("celrad","2")="benign appearance or behavior"
"RTN","SAMICTD2",357,0)
 set @g@("celrad","3")="probably benign"
"RTN","SAMICTD2",358,0)
 set @g@("celrad","4A")="suspicious"
"RTN","SAMICTD2",359,0)
 set @g@("celrad","4B")="suspicious"
"RTN","SAMICTD2",360,0)
 set @g@("celrad","4X")="suspicious"
"RTN","SAMICTD2",361,0)
 ;
"RTN","SAMICTD2",362,0)
 ;# LungRADS also
"RTN","SAMICTD2",363,0)
 set @g@("celrc","0")="incomplete"
"RTN","SAMICTD2",364,0)
 set @g@("celrc","1")="negative"
"RTN","SAMICTD2",365,0)
 set @g@("celrc","2")="benign appearance or behavior"
"RTN","SAMICTD2",366,0)
 set @g@("celrc","3")="probably benign"
"RTN","SAMICTD2",367,0)
 set @g@("celrc","4A")="suspicious"
"RTN","SAMICTD2",368,0)
 set @g@("celrc","4B")="suspicious"
"RTN","SAMICTD2",369,0)
 set @g@("celrc","4X")="suspicious"
"RTN","SAMICTD2",370,0)
 ;
"RTN","SAMICTD2",371,0)
 ;# Impression Note:
"RTN","SAMICTD2",372,0)
 set @g@("note_imp")="Note: If LIMITED diagnostic scans are done to follow nodules, each one-year diagnostic scan which serves as the annual screening test MUST BE A FULL DIAGNOSTIC SCAN."
"RTN","SAMICTD2",373,0)
 ;
"RTN","SAMICTD2",374,0)
 ;# Study Complete Notice
"RTN","SAMICTD2",375,0)
 set @g@("study_complete")="You have completed the free screening provided by the New York Early Lung Cancer Action Program.  "
"RTN","SAMICTD2",376,0)
 set @g@("study_complete")=@g@("study_complete")_"Further screening outside of this project is at the discretion of you and your physician.  Please call if you have any questions or concerns."
"RTN","SAMICTD2",377,0)
 ;
"RTN","SAMICTD2",378,0)
 ;#set CAC_recommendation "Since your Visual Coronary Artery Calcium Score (CAC), which is calculated by The Coordinating Site at Weill Medical College of Cornell University, is above 3, "
"RTN","SAMICTD2",379,0)
 ;we recommend that you consult with a cardiologist, as you may be at risk for coronary artery disease."
"RTN","SAMICTD2",380,0)
 ;
"RTN","SAMICTD2",381,0)
 ;#set CAC_recommendation "Clinical interpretation of the Visual Coronary Artery Calcium Score (CAC) is provided in the attached writeup."
"RTN","SAMICTD2",382,0)
 ;
"RTN","SAMICTD2",383,0)
 ;#set CAC_recommendation "Since your Visual Coronary Artery Calcium Score (CAC) is above 3, we recommend that you consult with your physician for a clinical interpretation of this score, as you may be at risk for coronary artery disease."
"RTN","SAMICTD2",384,0)
 ;
"RTN","SAMICTD2",385,0)
 set @g@("CAC_recommendation")="Since your Visual CAC Score is above 3, we recommend that you consult with your physician for a clinical interpretation, as you may be at risk for coronary artery disease."
"RTN","SAMICTD2",386,0)
 ;
"RTN","SAMICTD2",387,0)
 ;
"RTN","SAMICTD2",388,0)
 ;@stanza 3 termination
"RTN","SAMICTD2",389,0)
 ;
"RTN","SAMICTD2",390,0)
 quit  ; end of INIT
"RTN","SAMICTD2",391,0)
 ;
"RTN","SAMICTD2",392,0)
 ;
"RTN","SAMICTD2",393,0)
 ;
"RTN","SAMICTD2",394,0)
EOR ; end of routine SAMICTD2
"RTN","SAMICTR")
0^10^B175841025
"RTN","SAMICTR",1,0)
SAMICTR ;ven/gpl - ielcap: forms ; 12/28/18 11:37am
"RTN","SAMICTR",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMICTR",3,0)
 ;
"RTN","SAMICTR",4,0)
 ;
"RTN","SAMICTR",5,0)
 quit  ; no entry from top
"RTN","SAMICTR",6,0)
 ;
"RTN","SAMICTR",7,0)
WSREPORT(return,filter) ; web service which returns an html cteval report
"RTN","SAMICTR",8,0)
 ;
"RTN","SAMICTR",9,0)
 n debug s debug=0
"RTN","SAMICTR",10,0)
 i $g(filter("debug"))=1 s debug=1
"RTN","SAMICTR",11,0)
 ;
"RTN","SAMICTR",12,0)
 ;s rtn=$na(^TMP("SAMICTR",$J))
"RTN","SAMICTR",13,0)
 n rtn s rtn="return"
"RTN","SAMICTR",14,0)
 k @rtn
"RTN","SAMICTR",15,0)
 s HTTPRSP("mime")="text/html"
"RTN","SAMICTR",16,0)
 ;
"RTN","SAMICTR",17,0)
 n cnt s cnt=0 ; line number
"RTN","SAMICTR",18,0)
 ;
"RTN","SAMICTR",19,0)
 ; set up dictionary and patient values
"RTN","SAMICTR",20,0)
 ;
"RTN","SAMICTR",21,0)
 n dict,vals
"RTN","SAMICTR",22,0)
 ;d INIT^SAMICTD2("dict")
"RTN","SAMICTR",23,0)
 s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTR",24,0)
 s dict=$na(@dict@("cteval-dict"))
"RTN","SAMICTR",25,0)
 i $g(@dict@("pet"))="" d INIT2GPH^SAMICTD2 ; initialize the dictionary first time
"RTN","SAMICTR",26,0)
 n si
"RTN","SAMICTR",27,0)
 s si=$g(filter("studyid"))
"RTN","SAMICTR",28,0)
 i si="" d  ;
"RTN","SAMICTR",29,0)
 . s si="XXX0004"
"RTN","SAMICTR",30,0)
 q:si=""
"RTN","SAMICTR",31,0)
 n samikey
"RTN","SAMICTR",32,0)
 s samikey=$g(filter("form"))
"RTN","SAMICTR",33,0)
 i samikey="" d  ;
"RTN","SAMICTR",34,0)
 . s samikey="ceform-2018-03-12"
"RTN","SAMICTR",35,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMICTR",36,0)
 i $g(filter("studyid"))="" s root=$$setroot^%wd("elcap-patients")
"RTN","SAMICTR",37,0)
 s vals=$na(@root@("graph",si,samikey))
"RTN","SAMICTR",38,0)
 ;W !,vals
"RTN","SAMICTR",39,0)
 ;zwr @vals@(*)
"RTN","SAMICTR",40,0)
 i '$d(@vals) d  q  ;
"RTN","SAMICTR",41,0)
 . w !,"error, patient values not found"
"RTN","SAMICTR",42,0)
 ;
"RTN","SAMICTR",43,0)
 ; report parameters
"RTN","SAMICTR",44,0)
 ;
"RTN","SAMICTR",45,0)
 n nt,sectionheader,dummy,cac,tex,para,legout,lang,langread
"RTN","SAMICTR",46,0)
 ;
"RTN","SAMICTR",47,0)
 s nt=1
"RTN","SAMICTR",48,0)
 s sectionheader=1
"RTN","SAMICTR",49,0)
 s dummy="******"
"RTN","SAMICTR",50,0)
 s cac=""
"RTN","SAMICTR",51,0)
 s tex=0
"RTN","SAMICTR",52,0)
 s para="<p>"
"RTN","SAMICTR",53,0)
 s legout=0
"RTN","SAMICTR",54,0)
 n qheader s qheader=1
"RTN","SAMICTR",55,0)
 ;
"RTN","SAMICTR",56,0)
 s lang=""
"RTN","SAMICTR",57,0)
 s langread=0
"RTN","SAMICTR",58,0)
 ;
"RTN","SAMICTR",59,0)
 n auth
"RTN","SAMICTR",60,0)
 s auth("perm")="a"
"RTN","SAMICTR",61,0)
 s auth("inst")=$g(filter("auth"))
"RTN","SAMICTR",62,0)
 ;
"RTN","SAMICTR",63,0)
 n newct s newct=0
"RTN","SAMICTR",64,0)
 i $$XVAL("ceoppa",vals)'="" s newct=1
"RTN","SAMICTR",65,0)
 ;
"RTN","SAMICTR",66,0)
 n registryForm s registryForm=0
"RTN","SAMICTR",67,0)
 i $$XVAL("ceaf",vals)'="" s registryForm=1
"RTN","SAMICTR",68,0)
 ;
"RTN","SAMICTR",69,0)
 d OUT("<HTML><HEAD>")
"RTN","SAMICTR",70,0)
 d OUT("<TITLE>CT Evaluation Report</TITLE>")
"RTN","SAMICTR",71,0)
 d OUT("<link rel='stylesheet' href='/css/report.css'>")
"RTN","SAMICTR",72,0)
 d OUT("</HEAD>")
"RTN","SAMICTR",73,0)
 d OUT("<BODY BGCOLOR=""#ffffff"" TEXT=""#000000"">")
"RTN","SAMICTR",74,0)
 d OUT("<TABLE border=""0"" cellspacing=""0"" cellpadding=""3"" WIDTH=""640""><TR><TD>")
"RTN","SAMICTR",75,0)
 d OUT("<FONT SIZE=""+2""><CENTER>")
"RTN","SAMICTR",76,0)
 d OUT("<B>CT Evaluation Report</B>")
"RTN","SAMICTR",77,0)
 d OUT("</CENTER></FONT>")
"RTN","SAMICTR",78,0)
 d OUT("</TD></TR><TR><TD>")
"RTN","SAMICTR",79,0)
 d OUT("<HR SIZE=""2"" WIDTH=""100%"" ALIGN=""center"" NOSHADE>")
"RTN","SAMICTR",80,0)
 d OUT("</TD></TR>")
"RTN","SAMICTR",81,0)
 ;
"RTN","SAMICTR",82,0)
 d OUT("<!-- patient information -->")
"RTN","SAMICTR",83,0)
 d OUT("<TR><TD><TABLE border=""0"" cellspacing=""0"" cellpadding=""3"" WIDTH=""640"">")
"RTN","SAMICTR",84,0)
 ;
"RTN","SAMICTR",85,0)
 ;# Queens specific header
"RTN","SAMICTR",86,0)
 if qheader d  ;
"RTN","SAMICTR",87,0)
 . d OUT("<TR><TD WIDTH=""85""><B>Exam Date: </B></TD><TD>")
"RTN","SAMICTR",88,0)
 . d OUT($$XVAL("cedos",vals))
"RTN","SAMICTR",89,0)
 . d OUT("</TD></TR>")
"RTN","SAMICTR",90,0)
 . ;
"RTN","SAMICTR",91,0)
 . d OUT("<TR><TD><B>Type:</B></TD><TD>")
"RTN","SAMICTR",92,0)
 . d OUT($$XSUB("cetex",vals,dict)_" "_$$XSUB("cectp",vals,dict))
"RTN","SAMICTR",93,0)
 . d OUT("</TD></TR>")
"RTN","SAMICTR",94,0)
 . ;
"RTN","SAMICTR",95,0)
 . d OUT("<TR><TD><B>Study ID:</B></TD><TD>")
"RTN","SAMICTR",96,0)
 . d OUT(si)
"RTN","SAMICTR",97,0)
 . d OUT("</TD></TR>")
"RTN","SAMICTR",98,0)
 . ;
"RTN","SAMICTR",99,0)
 . ;   set svc [exec vcrc -c12 -n $si]
"RTN","SAMICTR",100,0)
 . d OUT("<TR><TD><B>SVC:</B></TD><TD>")
"RTN","SAMICTR",101,0)
 . ;d OUT(svc)
"RTN","SAMICTR",102,0)
 . d OUT("</TD></TR>")
"RTN","SAMICTR",103,0)
 ;
"RTN","SAMICTR",104,0)
 i $$XVAL("sidob",vals)>0 d  ;
"RTN","SAMICTR",105,0)
 . d OUT("<TD><B>Date of Birth:</B></TD><TD>")
"RTN","SAMICTR",106,0)
 . d OUT($$XVAL("sidob",vals))
"RTN","SAMICTR",107,0)
 . d OUT("</TD></TR>")
"RTN","SAMICTR",108,0)
 e  d  ;
"RTN","SAMICTR",109,0)
 . d OUT("<TD> &nbsp; </TD><TD> &nbsp; </TD></TR>")
"RTN","SAMICTR",110,0)
 ;
"RTN","SAMICTR",111,0)
 d OUT("</TABLE>")
"RTN","SAMICTR",112,0)
 d OUT("</TD></TR><TR><TD>")
"RTN","SAMICTR",113,0)
 d OUT("<HR SIZE=""2"" WIDTH=""100%"" ALIGN=""center"" NOSHADE>")
"RTN","SAMICTR",114,0)
 d OUT("</TD></TR>")
"RTN","SAMICTR",115,0)
 d OUT("<!-- report -->")
"RTN","SAMICTR",116,0)
 d OUT("<TR><TD>")
"RTN","SAMICTR",117,0)
 d OUT("<FONT SIZE=""+2""><B>")
"RTN","SAMICTR",118,0)
 d OUT("Report:")
"RTN","SAMICTR",119,0)
 d OUT("</B></FONT>")
"RTN","SAMICTR",120,0)
 d OUT("</TD></TR><TR><TD><TABLE><TR><TD WIDTH=20></TD><TD>")
"RTN","SAMICTR",121,0)
 ;
"RTN","SAMICTR",122,0)
 i $$XVAL("ceclin",vals)'="" d  ;
"RTN","SAMICTR",123,0)
 . d HOUT("Clinical Information: ")
"RTN","SAMICTR",124,0)
 . d OUT($$XVAL("ceclin",vals))
"RTN","SAMICTR",125,0)
 ;
"RTN","SAMICTR",126,0)
 n nopri s nopri=1
"RTN","SAMICTR",127,0)
 d HOUT("Comparison CT Scans: ")
"RTN","SAMICTR",128,0)
 if $$XVAL("cedcs",vals)'="" d  ;
"RTN","SAMICTR",129,0)
 . d OUT($$XSUB("cetex",vals,dict)_". ")
"RTN","SAMICTR",130,0)
 . d OUT("Comparisons: "_$$XVAL("cedcs",vals))
"RTN","SAMICTR",131,0)
 . s nopri=0
"RTN","SAMICTR",132,0)
 if $$XVAL("cedps",vals)'="" d  ;
"RTN","SAMICTR",133,0)
 . d OUT($$XVAL("cedps",vals))
"RTN","SAMICTR",134,0)
 . s nopri=0
"RTN","SAMICTR",135,0)
 d:nopri OUT("None")
"RTN","SAMICTR",136,0)
 ;
"RTN","SAMICTR",137,0)
 d HOUT(" Description: ")
"RTN","SAMICTR",138,0)
 i $$XVAL("cectp",vals)'="" d  ;
"RTN","SAMICTR",139,0)
 . d OUT("Limited Diagnostic CT examination was performed.")
"RTN","SAMICTR",140,0)
 e  d  ;
"RTN","SAMICTR",141,0)
 . d OUT("CT examination of the entire thorax was performed at "_$$XSUB("cectp",vals,dict)_" settings.")
"RTN","SAMICTR",142,0)
 ;
"RTN","SAMICTR",143,0)
 i $$XVAL("cectrst",vals)'="" d  ;
"RTN","SAMICTR",144,0)
 . d OUT(" Images were obtained at "_$$XVAL("cectrst",vals)_" mm slice thickness.")
"RTN","SAMICTR",145,0)
 . d OUT(" Multiplanar reconstructions were performed.")
"RTN","SAMICTR",146,0)
 ;
"RTN","SAMICTR",147,0)
 i newct d  ;
"RTN","SAMICTR",148,0)
 . n nvadbo s nvadbo=1
"RTN","SAMICTR",149,0)
 . n ii
"RTN","SAMICTR",150,0)
 . f ii="ceoaa","ceaga","ceasa","ceala","ceapa","ceaaa","ceaka" d  ;
"RTN","SAMICTR",151,0)
 . . i $$XVAL(ii,vals)="y" set nvadbo=0
"RTN","SAMICTR",152,0)
 . ;
"RTN","SAMICTR",153,0)
 . i nvadbo=1 d  ;
"RTN","SAMICTR",154,0)
 . . d OUT("Upper abdominal images were not acquired on the current scan due to its limited nature.")
"RTN","SAMICTR",155,0)
 ;
"RTN","SAMICTR",156,0)
 ; lung nodules
"RTN","SAMICTR",157,0)
 ;
"RTN","SAMICTR",158,0)
 d HOUT("Lung Nodules:")
"RTN","SAMICTR",159,0)
 i $$XVAL("cennod",vals)="" d  ;
"RTN","SAMICTR",160,0)
 . d OUT(para)
"RTN","SAMICTR",161,0)
 . d OUT("No pulmonary nodules are seen."_para)
"RTN","SAMICTR",162,0)
 e  i $$XVAL("ceanod",vals)="n" d  ;
"RTN","SAMICTR",163,0)
 . d OUT(para)
"RTN","SAMICTR",164,0)
 . d OUT("No pulmonary nodules are seen."_para)
"RTN","SAMICTR",165,0)
 ;
"RTN","SAMICTR",166,0)
 ;# Report on Nodules
"RTN","SAMICTR",167,0)
 n firstitem
"RTN","SAMICTR",168,0)
 set firstitem=0
"RTN","SAMICTR",169,0)
 n ii set ii=1
"RTN","SAMICTR",170,0)
 ;# Information for each nodule
"RTN","SAMICTR",171,0)
 f ii=1:1:10 d  ;
"RTN","SAMICTR",172,0)
 . i $$XSUB("cectch",vals,dict,"cect"_ii_"ch")="px" q  ;
"RTN","SAMICTR",173,0)
 . i $$XSUB("cectch",vals,dict,"cect"_ii_"ch")="" q  ;
"RTN","SAMICTR",174,0)
 . i firstitem=0 d  ;
"RTN","SAMICTR",175,0)
 . . d OUT("<!-- begin nodule info -->")
"RTN","SAMICTR",176,0)
 . . d OUT("<UL TYPE=disc>")
"RTN","SAMICTR",177,0)
 . . set firstitem=1
"RTN","SAMICTR",178,0)
 . ;
"RTN","SAMICTR",179,0)
 . d OUT("<LI>")
"RTN","SAMICTR",180,0)
 . n specialcase s specialcase=0
"RTN","SAMICTR",181,0)
 . n ij,ik
"RTN","SAMICTR",182,0)
 . s ik=$$XVAL("cect"_ii_"ch",vals)
"RTN","SAMICTR",183,0)
 . f ij="pw","px","pr","pv" i ij=ik s specialcase=1
"RTN","SAMICTR",184,0)
 . ;
"RTN","SAMICTR",185,0)
 . ;# Example Sentence
"RTN","SAMICTR",186,0)
 . ;# LUL Nodule 1 is non-calcified, non-solid, 6 mm x 6 mm (with 3 x 3) solid component), smooth edge, previously seen and unchanged. (Series 2, Image 65)
"RTN","SAMICTR",187,0)
 . ;# [LOCATION] Nodule [N] is [CALCIFICATION], [SOLID], [L] mm x mm, [SMOOTH], [NEW].  (Series [Series], Image [ImageNum]).
"RTN","SAMICTR",188,0)
 . ;
"RTN","SAMICTR",189,0)
 . n spic s spic=""
"RTN","SAMICTR",190,0)
 . i $$XVAL("cect"_ii_"sp",vals)="y" s spic="spiculated, "
"RTN","SAMICTR",191,0)
 . ;
"RTN","SAMICTR",192,0)
 . n calcification,calcstr
"RTN","SAMICTR",193,0)
 . s calcification=$$XSUB("cecta",vals,dict,"cect"_ii_"ca")
"RTN","SAMICTR",194,0)
 . i calcification="" s calcstr="is "_spic_$$XSUB("cectnt",vals,dict,"cect"_ii_"nt")_","
"RTN","SAMICTR",195,0)
 . e  s calcstr="is "_calcification_", "_spic_$$XSUB("cectnt",vals,dict,"cect"_ii_"nt")_", "
"RTN","SAMICTR",196,0)
 . ;
"RTN","SAMICTR",197,0)
 . n scomp
"RTN","SAMICTR",198,0)
 . s scomp=""
"RTN","SAMICTR",199,0)
 . i $$XVAL("cect"_ii_"ssl",vals)'="" d  ;
"RTN","SAMICTR",200,0)
 . . s scomp=" (solid component "_$$XVAL("cect"_ii_"ssl",vals)_" mm x "_$$XVAL("cect"_ii_"ssw",vals)_" mm)"
"RTN","SAMICTR",201,0)
 . ;
"RTN","SAMICTR",202,0)
 . s calcstr=calcstr_$$XVAL("cect"_ii_"sl",vals)_" mm x "_$$XVAL("cect"_ii_"sw",vals)_" mm "_scomp_", "
"RTN","SAMICTR",203,0)
 . ;
"RTN","SAMICTR",204,0)
 . n smooth
"RTN","SAMICTR",205,0)
 . s smooth=$$XSUB("cectse",vals,dict,"cect"_ii_"se")
"RTN","SAMICTR",206,0)
 . i smooth="" s calcstr=calcstr_"smooth edges, "
"RTN","SAMICTR",207,0)
 . e  s calcstr=calcstr_smooth_" edges, "
"RTN","SAMICTR",208,0)
 . ;
"RTN","SAMICTR",209,0)
 . n skip s skip=0
"RTN","SAMICTR",210,0)
 . ;# 3 cases: parenchymal, endobronchial, and both
"RTN","SAMICTR",211,0)
 . ;
"RTN","SAMICTR",212,0)
 . n en,nloc,endo,ll,loc
"RTN","SAMICTR",213,0)
 . s en=$$XVAL("cect"_ii_"en",vals)
"RTN","SAMICTR",214,0)
 . s ll=$$XVAL("cect"_ii_"ll",vals)
"RTN","SAMICTR",215,0)
 . i ($l(en)<2)!(en="no")!(en="") d  ;
"RTN","SAMICTR",216,0)
 . . ;# 1) parenchymal only
"RTN","SAMICTR",217,0)
 . . n X,Y s X=ll
"RTN","SAMICTR",218,0)
 . . X ^%ZOSF("UPPERCASE")
"RTN","SAMICTR",219,0)
 . . s loc=Y
"RTN","SAMICTR",220,0)
 . . s nloc=Y
"RTN","SAMICTR",221,0)
 . . s endo="Nodule"
"RTN","SAMICTR",222,0)
 . e  d  ;
"RTN","SAMICTR",223,0)
 . . i ll="end" d  ;
"RTN","SAMICTR",224,0)
 . . . ;# 2) Endobronchial only
"RTN","SAMICTR",225,0)
 . . . i en="tr" d  ;
"RTN","SAMICTR",226,0)
 . . . . s endo="Endotracheal Nodule"
"RTN","SAMICTR",227,0)
 . . . . i specialcase=1 d  ;
"RTN","SAMICTR",228,0)
 . . . . . d OUT("Previously seen "_endo_" "_ii_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_".")
"RTN","SAMICTR",229,0)
 . . . . e  d  ;
"RTN","SAMICTR",230,0)
 . . . . . i ($$XVAL("cetex",vals)="b")&($$XVAL("cectch"_ii_"ch",vals)="n") d  ;
"RTN","SAMICTR",231,0)
 . . . . . . d OUT(endo_" "_ii_" "_calcstr_" is seen.")
"RTN","SAMICTR",232,0)
 . . . . . e  d OUT(endo_" "_ii_" "_calcstr_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_".")
"RTN","SAMICTR",233,0)
 . . . . s skip=1
"RTN","SAMICTR",234,0)
 . . . i en="rm" d  ;
"RTN","SAMICTR",235,0)
 . . . . s endo="Nodule"
"RTN","SAMICTR",236,0)
 . . . . s loc=$$XSUB("cecten",vals,dict,"cect"_ii_"en")
"RTN","SAMICTR",237,0)
 . . . . i specialcase=1 d  ;
"RTN","SAMICTR",238,0)
 . . . . . d OUT("Previously seen "_nloc_" "_endo_" "_ii_" ")
"RTN","SAMICTR",239,0)
 . . . . . d OUT($$XSUB("cectch",vals,dict,"cect"_ii_"ch")_".")
"RTN","SAMICTR",240,0)
 . . . . e  d  ;
"RTN","SAMICTR",241,0)
 . . . . . i ($$XVAL("cetex",vals)="b")&($$XVAL("cect"_ii_"ch",vals)="n") d  ;
"RTN","SAMICTR",242,0)
 . . . . . . d OUT(nloc_" "_endo_" "_ii_".")
"RTN","SAMICTR",243,0)
 . . . . . e  d OUT(nloc_" "_endo_" "_ii_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_".")
"RTN","SAMICTR",244,0)
 . . . . s skip=1
"RTN","SAMICTR",245,0)
 . . . i en="bi" d  ;
"RTN","SAMICTR",246,0)
 . . . . s endo="Nodule"
"RTN","SAMICTR",247,0)
 . . . . s loc=$$XSUB("cecten",vals,dict,"cect"_ii_"en")
"RTN","SAMICTR",248,0)
 . . . . i specialcase=1 d  ;
"RTN","SAMICTR",249,0)
 . . . . . d OUT("Previously seen "_endo_" "_ii_" in the "_loc)
"RTN","SAMICTR",250,0)
 . . . . . d OUT($$XSUB("cectch",vals,dict,"cect"_ii_"ch")_".")
"RTN","SAMICTR",251,0)
 . . . . e  d  ;
"RTN","SAMICTR",252,0)
 . . . . . i ($$XVAL("cetex",vals)="b")&($$XVAL("cect"_ii_"ch",vals)="n") d  ;
"RTN","SAMICTR",253,0)
 . . . . . . d OUT(endo_" "_ii_" is seen in the "_loc_".")
"RTN","SAMICTR",254,0)
 . . . . . e  d OUT(endo_" "_ii_" in the "_loc_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_".")
"RTN","SAMICTR",255,0)
 . . . . s skip=1
"RTN","SAMICTR",256,0)
 . . . i skip=0 d  ; "default"
"RTN","SAMICTR",257,0)
 . . . . s endo="Nodule"
"RTN","SAMICTR",258,0)
 . . . . n X,Y s X=$$XVAL("cect"_ii_"en",vals)
"RTN","SAMICTR",259,0)
 . . . . X ^%ZOSF("UPPERCASE")
"RTN","SAMICTR",260,0)
 . . . . s nloc=Y
"RTN","SAMICTR",261,0)
 . . . . i specialcase=1 d  ;
"RTN","SAMICTR",262,0)
 . . . . . d OUT(nloc_" "_endo_" "_ii_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_", likely endobronchial.")
"RTN","SAMICTR",263,0)
 . . . . e  d  ;
"RTN","SAMICTR",264,0)
 . . . . . i ($$XVAL("cetex",vals)="b")&($$XSUB("cectch",vals,dict,"cect"_ii_"ch")="n") d  ;
"RTN","SAMICTR",265,0)
 . . . . . . d OUT(nloc_" "_endo_" "_ii_" "_calcstr_" likely endobronchial.")
"RTN","SAMICTR",266,0)
 . . . . . e  d OUT(nloc_" "_endo_" "_ii_" "_calcstr_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_" likely endobronchial.")
"RTN","SAMICTR",267,0)
 . . . . s skip=1
"RTN","SAMICTR",268,0)
 . . e  d  ;
"RTN","SAMICTR",269,0)
 . . . s endo="Nodule"
"RTN","SAMICTR",270,0)
 . . . s loc=$$XSUB("cectll",vals,dict,"cect"_ii_"ll")
"RTN","SAMICTR",271,0)
 . . . n X,Y s X=$$XVAL("cect"_ii_"en",vals)
"RTN","SAMICTR",272,0)
 . . . X ^%ZOSF("UPPERCASE")
"RTN","SAMICTR",273,0)
 . . . s nloc=Y
"RTN","SAMICTR",274,0)
 . . . i specialcase=1 d  ;
"RTN","SAMICTR",275,0)
 . . . . d OUT(nloc_" "_endo_" "_ii_" previously seen with possible endobronchial component")
"RTN","SAMICTR",276,0)
 . . . . d OUT($$XSUB("cectch",vals,dict,"cect"_ii_"ch")_".")
"RTN","SAMICTR",277,0)
 . . . e  d  ;
"RTN","SAMICTR",278,0)
 . . . . i ($$XVAL("cetex",vals)="b")&($$XSUB("cectch",vals,dict,"cect"_ii_"ch")="n") d  ;
"RTN","SAMICTR",279,0)
 . . . . . d OUT(nloc_" "_endo_" "_ii_" "_calcstr_" with possible endobronchial component")
"RTN","SAMICTR",280,0)
 . . . . e  d OUT(nloc_" "_endo_" "_ii_" "_calcstr_" with possible endobrochial component "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_".")
"RTN","SAMICTR",281,0)
 . . . s skip=1
"RTN","SAMICTR",282,0)
 . i specialcase=1 d  ;
"RTN","SAMICTR",283,0)
 . . i skip=0 d  ;
"RTN","SAMICTR",284,0)
 . . . d OUT("Previously seen "_nloc_" "_endo_" "_ii_" ")
"RTN","SAMICTR",285,0)
 . . . d OUT($$XSUB("cectch",vals,dict,"cect"_ii_"ch")_".")
"RTN","SAMICTR",286,0)
 . e  d  ;
"RTN","SAMICTR",287,0)
 . . i skip=0 d  ;
"RTN","SAMICTR",288,0)
 . . . ;# Special Handling for "newly seen" on baseline
"RTN","SAMICTR",289,0)
 . . . i ($$XVAL("cetex",vals)="b")&($$XSUB("cectch",vals,dict,"cect"_ii_"ch")="n") d  ;
"RTN","SAMICTR",290,0)
 . . . . d OUT(nloc_" "_endo_" "_ii_" "_calcstr)
"RTN","SAMICTR",291,0)
 . . . e  d OUT(nloc_" "_endo_" "_ii_" "_calcstr_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_" ")
"RTN","SAMICTR",292,0)
 . . . ;e  d OUT(nloc_" "_endo_" "_ii_" "_calcstr_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_".")
"RTN","SAMICTR",293,0)
 . . i $$XVAL("cect"_ii_"inl",vals)=$$XVAL("cect"_ii_"inh",vals) d  ;
"RTN","SAMICTR",294,0)
 . . . d OUT("image"_$$XVAL("cect"_ii_"inh",vals)_". ")
"RTN","SAMICTR",295,0)
 . . . ;d OUT("image "_$$XVAL("cect"_ii_"inh",vals)_".")
"RTN","SAMICTR",296,0)
 . . e  d  ;
"RTN","SAMICTR",297,0)
 . . . d OUT("images "_$$XVAL("cect"_ii_"inl",vals)-$$XVAL("cect"_ii_"inh",vals)_".")
"RTN","SAMICTR",298,0)
 . . n ac
"RTN","SAMICTR",299,0)
 . . s ac=$$XVAL("cect"_ii_"ac",vals)
"RTN","SAMICTR",300,0)
 . . i ac'="" i (ac'="-") i (ac'="s") d  ;
"RTN","SAMICTR",301,0)
 . . . d OUT($$XSUB("cectac",vals,dict,"cect"_ii_"ac")_" recommended.")
"RTN","SAMICTR",302,0)
 . ;
"RTN","SAMICTR",303,0)
 . ; end of nodule processing
"RTN","SAMICTR",304,0)
 . ;
"RTN","SAMICTR",305,0)
 i firstitem'=0 d  ;
"RTN","SAMICTR",306,0)
 . d OUT("</UL>")
"RTN","SAMICTR",307,0)
 . d OUT("<!-- end nodule info -->")
"RTN","SAMICTR",308,0)
 d OUT("</p>")
"RTN","SAMICTR",309,0)
 ;
"RTN","SAMICTR",310,0)
 ;
"RTN","SAMICTR",311,0)
 ; etc etc
"RTN","SAMICTR",312,0)
 ;
"RTN","SAMICTR",313,0)
 d OUT("</TABLE>")
"RTN","SAMICTR",314,0)
 d OUT("<p><br></p><p><b>References:</b><br></p>")
"RTN","SAMICTR",315,0)
 d OUT("<p>Recommendations for nodules and other findings are detailed in the I-ELCAP Protocol.<BR>")
"RTN","SAMICTR",316,0)
 d OUT("A summary and the full I-ELCAP protocol can be viewed at: <a href=""http://ielcap.org/protocols"">http://ielcap.org/protocols</a></p>")
"RTN","SAMICTR",317,0)
 d OUT("</TD></TR></TABLE></TD></TR></TABLE>")
"RTN","SAMICTR",318,0)
 d OUT("</BODY></HTML>")
"RTN","SAMICTR",319,0)
 ;
"RTN","SAMICTR",320,0)
 q
"RTN","SAMICTR",321,0)
 ;
"RTN","SAMICTR",322,0)
OUT(ln) ;
"RTN","SAMICTR",323,0)
 s cnt=cnt+1
"RTN","SAMICTR",324,0)
 n lnn
"RTN","SAMICTR",325,0)
 ;s debug=1
"RTN","SAMICTR",326,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTR",327,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTR",328,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTR",329,0)
 . i ln["<" q  ; no markup
"RTN","SAMICTR",330,0)
 . n zs s zs=$STACK
"RTN","SAMICTR",331,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTR",332,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTR",333,0)
 q
"RTN","SAMICTR",334,0)
 ;
"RTN","SAMICTR",335,0)
HOUT(ln) ;
"RTN","SAMICTR",336,0)
 d OUT("<p><span class='sectionhead'>"_ln_"</span>")
"RTN","SAMICTR",337,0)
 q
"RTN","SAMICTR",338,0)
 ;
"RTN","SAMICTR",339,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMICTR",340,0)
 ; vals is passed by name
"RTN","SAMICTR",341,0)
 n zr
"RTN","SAMICTR",342,0)
 s zr=$g(@vals@(var))
"RTN","SAMICTR",343,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMICTR",344,0)
 q zr
"RTN","SAMICTR",345,0)
 ;
"RTN","SAMICTR",346,0)
XSUB(var,vals,dict,valdx) ; extrinsic which returns the dictionary value defined by var
"RTN","SAMICTR",347,0)
 ; vals and dict are passed by name
"RTN","SAMICTR",348,0)
 ; valdx is used for nodules ala cect2co with the nodule number included
"RTN","SAMICTR",349,0)
 ;n dict s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTR",350,0)
 n zr,zv,zdx
"RTN","SAMICTR",351,0)
 s zdx=$g(valdx)
"RTN","SAMICTR",352,0)
 i zdx="" s zdx=var
"RTN","SAMICTR",353,0)
 s zv=$g(@vals@(zdx))
"RTN","SAMICTR",354,0)
 ;i zv="" s zr="["_var_"]" q zr
"RTN","SAMICTR",355,0)
 i zv="" s zr="" q zr
"RTN","SAMICTR",356,0)
 s zr=$g(@dict@(var,zv))
"RTN","SAMICTR",357,0)
 ;i zr="" s zr="["_var_","_zv_"]"
"RTN","SAMICTR",358,0)
 q zr
"RTN","SAMICTR",359,0)
 ;
"RTN","SAMICTR0")
0^11^B64947891
"RTN","SAMICTR0",1,0)
SAMICTR0 ;ven/gpl - ielcap: forms ; 2/14/19 10:29am
"RTN","SAMICTR0",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMICTR0",3,0)
 ;
"RTN","SAMICTR0",4,0)
 ;
"RTN","SAMICTR0",5,0)
 quit  ; no entry from top
"RTN","SAMICTR0",6,0)
 ;
"RTN","SAMICTR0",7,0)
WSREPORT(return,filter) ; web service which returns an html cteval report
"RTN","SAMICTR0",8,0)
 ;
"RTN","SAMICTR0",9,0)
 s debug=0
"RTN","SAMICTR0",10,0)
 i $g(filter("debug"))=1 s debug=1
"RTN","SAMICTR0",11,0)
 ;
"RTN","SAMICTR0",12,0)
 ;s rtn=$na(^TMP("SAMICTR",$J))
"RTN","SAMICTR0",13,0)
 s rtn="return"
"RTN","SAMICTR0",14,0)
 k @rtn
"RTN","SAMICTR0",15,0)
 s HTTPRSP("mime")="text/html"
"RTN","SAMICTR0",16,0)
 ;
"RTN","SAMICTR0",17,0)
 n cnt s cnt=0 ; line number
"RTN","SAMICTR0",18,0)
 ;
"RTN","SAMICTR0",19,0)
 ; set up dictionary and patient values
"RTN","SAMICTR0",20,0)
 ;
"RTN","SAMICTR0",21,0)
 n dict,vals
"RTN","SAMICTR0",22,0)
 ;d INIT^SAMICTD2("dict")
"RTN","SAMICTR0",23,0)
 s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTR0",24,0)
 s dict=$na(@dict@("cteval-dict"))
"RTN","SAMICTR0",25,0)
 i $g(@dict@("pet"))="" d INIT2GPH^SAMICTD2 ; initialize the dictionary first time
"RTN","SAMICTR0",26,0)
 n si
"RTN","SAMICTR0",27,0)
 s si=$g(filter("studyid"))
"RTN","SAMICTR0",28,0)
 i si="" d  ;
"RTN","SAMICTR0",29,0)
 . s si="XXX00102"
"RTN","SAMICTR0",30,0)
 q:si=""
"RTN","SAMICTR0",31,0)
 n samikey
"RTN","SAMICTR0",32,0)
 s samikey=$g(filter("form"))
"RTN","SAMICTR0",33,0)
 i samikey="" d  ;
"RTN","SAMICTR0",34,0)
 . s samikey="ceform-2018-10-09"
"RTN","SAMICTR0",35,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMICTR0",36,0)
 i $g(filter("studyid"))="" s root=$$setroot^%wd("vapals-patients")
"RTN","SAMICTR0",37,0)
 s vals=$na(@root@("graph",si,samikey))
"RTN","SAMICTR0",38,0)
 ;W !,vals
"RTN","SAMICTR0",39,0)
 ;zwr @vals@(*)
"RTN","SAMICTR0",40,0)
 i '$d(@vals) d  q  ;
"RTN","SAMICTR0",41,0)
 . w !,"error, patient values not found"
"RTN","SAMICTR0",42,0)
 ;
"RTN","SAMICTR0",43,0)
 ; report parameters
"RTN","SAMICTR0",44,0)
 ;
"RTN","SAMICTR0",45,0)
 n nt,sectionheader,dummy,cac,tex,para,legout
"RTN","SAMICTR0",46,0)
 ;; n lang,lanread
"RTN","SAMICTR0",47,0)
 ;
"RTN","SAMICTR0",48,0)
 s nt=1
"RTN","SAMICTR0",49,0)
 s sectionheader=1
"RTN","SAMICTR0",50,0)
 ;;s dummy="******"
"RTN","SAMICTR0",51,0)
 s cac=""
"RTN","SAMICTR0",52,0)
 n cacrec s cacrec=""
"RTN","SAMICTR0",53,0)
 ;;s tex=0
"RTN","SAMICTR0",54,0)
 s para="<p>"
"RTN","SAMICTR0",55,0)
 ;;s legout=0
"RTN","SAMICTR0",56,0)
 n qheader s qheader=0
"RTN","SAMICTR0",57,0)
 ;
"RTN","SAMICTR0",58,0)
 n lang s lang=""
"RTN","SAMICTR0",59,0)
 n langread s langread=0
"RTN","SAMICTR0",60,0)
 ;
"RTN","SAMICTR0",61,0)
 n auth s auth("perm")="a"
"RTN","SAMICTR0",62,0)
 s auth("inst")=$g(filter("auth"))
"RTN","SAMICTR0",63,0)
 ;
"RTN","SAMICTR0",64,0)
 n newct s newct=0
"RTN","SAMICTR0",65,0)
 i $$XVAL("ceoppa",vals)'="" s newct=1
"RTN","SAMICTR0",66,0)
 ;
"RTN","SAMICTR0",67,0)
 n registryForm s registryForm=0
"RTN","SAMICTR0",68,0)
 i $$XVAL("ceaf",vals)'="" s registryForm=1
"RTN","SAMICTR0",69,0)
 ;
"RTN","SAMICTR0",70,0)
 d OUT("<HTML>")
"RTN","SAMICTR0",71,0)
 d OUT("<HEAD>")
"RTN","SAMICTR0",72,0)
 d OUT("<!-- Calling TR: CT Evaluation Report -->")
"RTN","SAMICTR0",73,0)
 d OUT("<TITLE>CT Evaluation Report</TITLE>")
"RTN","SAMICTR0",74,0)
 d OUT("<link rel='stylesheet' href='/css/report.css'>")
"RTN","SAMICTR0",75,0)
 d OUT("</HEAD>")
"RTN","SAMICTR0",76,0)
 d OUT("<BODY BGCOLOR=""#ffffff"" TEXT=""#000000"">")
"RTN","SAMICTR0",77,0)
 ;d OUT("<TABLE border=""0"" cellspacing=""0"" cellpadding=""3"" WIDTH=""640""><TR><TD>")
"RTN","SAMICTR0",78,0)
 d OUT("<FONT SIZE=""+2""><CENTER>")
"RTN","SAMICTR0",79,0)
 d OUT("<!-- Calling TR: CT Evaluation Report -->")
"RTN","SAMICTR0",80,0)
 d OUT("<B>CT Evaluation Report</B>")
"RTN","SAMICTR0",81,0)
 d OUT("</CENTER></FONT>")
"RTN","SAMICTR0",82,0)
 d OUT("</TD></TR><TR><TD>")
"RTN","SAMICTR0",83,0)
 d OUT("<HR SIZE=""2"" WIDTH=""100%"" ALIGN=""center"" NOSHADE>")
"RTN","SAMICTR0",84,0)
 d OUT("</TD></TR>")
"RTN","SAMICTR0",85,0)
 ;
"RTN","SAMICTR0",86,0)
 d OUT("<!-- patient information -->")
"RTN","SAMICTR0",87,0)
 d OUT("<TR><TD><TABLE border=""0"" cellspacing=""0"" cellpadding=""3"" WIDTH=""640"">")
"RTN","SAMICTR0",88,0)
 ;
"RTN","SAMICTR0",89,0)
 ; generate header
"RTN","SAMICTR0",90,0)
 ;
"RTN","SAMICTR0",91,0)
 d OUT("<TR><TD WIDTH=""180""><B>Participant Name:</B></TD><TD WIDTH=""365"">")
"RTN","SAMICTR0",92,0)
 d OUT($$XVAL("sinamel",vals)_", "_$$XVAL("sinamef",vals))
"RTN","SAMICTR0",93,0)
 d OUT("</TD>")
"RTN","SAMICTR0",94,0)
 ;
"RTN","SAMICTR0",95,0)
 d OUT("<TD WIDTH=""120""><B>Study ID:</B></TD><TD WIDTH=""75"">")
"RTN","SAMICTR0",96,0)
 d OUT($$XVAL("sisid",vals))
"RTN","SAMICTR0",97,0)
 d OUT("</TD>")
"RTN","SAMICTR0",98,0)
 ;
"RTN","SAMICTR0",99,0)
 d OUT("<TR><TD><B>Type of Examination:</B></TD><TD>")
"RTN","SAMICTR0",100,0)
 d OUT($$XSUB("cetex",vals,dict)_" "_$$XSUB("cectp",vals,dict))
"RTN","SAMICTR0",101,0)
 d OUT("</TD>")
"RTN","SAMICTR0",102,0)
 d OUT("<TD> &nbsp; </TD><TD> &nbsp; </TD></TR>")
"RTN","SAMICTR0",103,0)
 ;
"RTN","SAMICTR0",104,0)
 d OUT("<TR><TD><B>Examination Date:</B></TD><TD>")
"RTN","SAMICTR0",105,0)
 d OUT($$XVAL("cedos",vals))
"RTN","SAMICTR0",106,0)
 ;
"RTN","SAMICTR0",107,0)
 ;i $$XVAL("sidob",vals)'=-1 d  ;
"RTN","SAMICTR0",108,0)
 ;. d OUT("<TD><B>Date of Birth:</B></TD><TD>")
"RTN","SAMICTR0",109,0)
 ;. d OUT($$XVAL("sidob",vals))
"RTN","SAMICTR0",110,0)
 ;e  d OUT("<TD> &nbsp; </TD><TD> &nbsp; </TD></TR>")
"RTN","SAMICTR0",111,0)
 ;
"RTN","SAMICTR0",112,0)
 i $$XVAL("sidob",vals)>0 d  ;
"RTN","SAMICTR0",113,0)
 . d OUT("<TD><B>Date of Birth:</B></TD><TD>")
"RTN","SAMICTR0",114,0)
 . d OUT($$XVAL("sidob",vals))
"RTN","SAMICTR0",115,0)
 . d OUT("</TD></TR>")
"RTN","SAMICTR0",116,0)
 e  d  ;
"RTN","SAMICTR0",117,0)
 . d OUT("<TD> &nbsp; </TD><TD> &nbsp; </TD></TR>")
"RTN","SAMICTR0",118,0)
 ;
"RTN","SAMICTR0",119,0)
 ;# End of Header
"RTN","SAMICTR0",120,0)
 ;
"RTN","SAMICTR0",121,0)
 d OUT("</TABLE>")
"RTN","SAMICTR0",122,0)
 ;d OUT("</TD></TR><TR><TD>")
"RTN","SAMICTR0",123,0)
 d OUT("<HR SIZE=""2"" WIDTH=""100%"" ALIGN=""center"" NOSHADE>")
"RTN","SAMICTR0",124,0)
 d OUT("</TD></TR>")
"RTN","SAMICTR0",125,0)
 d OUT("<!-- report -->")
"RTN","SAMICTR0",126,0)
 d OUT("<TR><TD>")
"RTN","SAMICTR0",127,0)
 d OUT("<FONT SIZE=""+2""><B>")
"RTN","SAMICTR0",128,0)
 d OUT("Report:")
"RTN","SAMICTR0",129,0)
 d OUT("</B></FONT>")
"RTN","SAMICTR0",130,0)
 d OUT("</TD></TR><TR><TD><TABLE><TR><TD WIDTH=20></TD><TD>")
"RTN","SAMICTR0",131,0)
 ;
"RTN","SAMICTR0",132,0)
 i $$XVAL("ceclin",vals)'="" d  ;
"RTN","SAMICTR0",133,0)
 . d HOUT("Clinical Information: ")
"RTN","SAMICTR0",134,0)
 . d OUT($$XVAL("ceclin",vals))
"RTN","SAMICTR0",135,0)
 ;
"RTN","SAMICTR0",136,0)
 n nopri s nopri=1
"RTN","SAMICTR0",137,0)
 d HOUT("Comparison CT Scans: ")
"RTN","SAMICTR0",138,0)
 if $$XVAL("cedcs",vals)'="" d  ;
"RTN","SAMICTR0",139,0)
 . d OUT($$XSUB("cetex",vals,dict)_". ")
"RTN","SAMICTR0",140,0)
 . d OUT("Comparisons: "_$$XVAL("cedcs",vals))
"RTN","SAMICTR0",141,0)
 . s nopri=0
"RTN","SAMICTR0",142,0)
 if $$XVAL("cedps",vals)'="" d  ;
"RTN","SAMICTR0",143,0)
 . d OUT(" "_$$XVAL("cedps",vals))
"RTN","SAMICTR0",144,0)
 . s nopri=0
"RTN","SAMICTR0",145,0)
 d:nopri OUT("None")
"RTN","SAMICTR0",146,0)
 ;
"RTN","SAMICTR0",147,0)
 d HOUT(" Description: ")
"RTN","SAMICTR0",148,0)
 i $$XVAL("cectp",vals)="i" d  ;
"RTN","SAMICTR0",149,0)
 . d OUT("Limited Diagnostic CT examination was performed.")
"RTN","SAMICTR0",150,0)
 e  d  ;
"RTN","SAMICTR0",151,0)
 . d OUT("CT examination of the entire thorax was performed at "_$$XSUB("cectp",vals,dict)_" settings.")
"RTN","SAMICTR0",152,0)
 ;
"RTN","SAMICTR0",153,0)
 i $$XVAL("cectrst",vals)'="" d  ;
"RTN","SAMICTR0",154,0)
 . d OUT(" Images were obtained at "_$$XVAL("cectrst",vals)_" mm slice thickness.")
"RTN","SAMICTR0",155,0)
 . d OUT(" Multiplanar reconstructions were performed.")
"RTN","SAMICTR0",156,0)
 ;
"RTN","SAMICTR0",157,0)
 i newct d  ;
"RTN","SAMICTR0",158,0)
 . n nvadbo s nvadbo=1
"RTN","SAMICTR0",159,0)
 . n ii
"RTN","SAMICTR0",160,0)
 . f ii="ceoaa","ceaga","ceasa","ceala","ceapa","ceaaa","ceaka" d  ;
"RTN","SAMICTR0",161,0)
 . . i $$XVAL(ii,vals)="y" set nvadbo=0
"RTN","SAMICTR0",162,0)
 . ;
"RTN","SAMICTR0",163,0)
 . i nvadbo=1 d  ;
"RTN","SAMICTR0",164,0)
 . . d OUT("Upper abdominal images were not acquired on the current scan due to its limited nature.")
"RTN","SAMICTR0",165,0)
 ;
"RTN","SAMICTR0",166,0)
 ; lung nodules
"RTN","SAMICTR0",167,0)
 ;
"RTN","SAMICTR0",168,0)
 d HOUT("Lung Nodules:")
"RTN","SAMICTR0",169,0)
 ;
"RTN","SAMICTR0",170,0)
 ; see if there are any nodules using the cectXch fields
"RTN","SAMICTR0",171,0)
 ;
"RTN","SAMICTR0",172,0)
 n ij,hasnodules s hasnodules=0
"RTN","SAMICTR0",173,0)
 f ij=1:1:10 i ($$XVAL("cect"_ij_"ch",vals)'="")&($$XVAL("cect"_ij_"ch",vals)'="-") s hasnodules=1
"RTN","SAMICTR0",174,0)
 ;
"RTN","SAMICTR0",175,0)
 i hasnodules=0 d  ;
"RTN","SAMICTR0",176,0)
 . d OUT(para)
"RTN","SAMICTR0",177,0)
 . d OUT("No pulmonary nodules are seen."_para)
"RTN","SAMICTR0",178,0)
 ;
"RTN","SAMICTR0",179,0)
 ;i $$XVAL("cennod",vals)="" d  ;
"RTN","SAMICTR0",180,0)
 ;. d OUT(para)
"RTN","SAMICTR0",181,0)
 ;. d OUT("No pulmonary nodules are seen."_para)
"RTN","SAMICTR0",182,0)
 ;e  i $$XVAL("ceanod",vals)="n" d  ;
"RTN","SAMICTR0",183,0)
 ;. d OUT(para)
"RTN","SAMICTR0",184,0)
 ;. d OUT("No pulmonary nodules are seen."_para)
"RTN","SAMICTR0",185,0)
 ;
"RTN","SAMICTR0",186,0)
 d NODULES^SAMICTR1(rtn,.vals,.dict)
"RTN","SAMICTR0",187,0)
 ;
"RTN","SAMICTR0",188,0)
 d OTHRLUNG^SAMICTR2(rtn,.vals,.dict)
"RTN","SAMICTR0",189,0)
 ;
"RTN","SAMICTR0",190,0)
 d EMPHYS^SAMICTR3(rtn,.vals,.dict)
"RTN","SAMICTR0",191,0)
 ;
"RTN","SAMICTR0",192,0)
 d BREAST^SAMICTR4(rtn,.vals,.dict)
"RTN","SAMICTR0",193,0)
 ;
"RTN","SAMICTR0",194,0)
 d IMPRSN^SAMICTR9(rtn,.vals,.dict)
"RTN","SAMICTR0",195,0)
 ;
"RTN","SAMICTR0",196,0)
 d RCMND^SAMICTRA(rtn,.vals,.dict)
"RTN","SAMICTR0",197,0)
 ;
"RTN","SAMICTR0",198,0)
 ; etc etc
"RTN","SAMICTR0",199,0)
 ;
"RTN","SAMICTR0",200,0)
 d OUT("</TABLE>")
"RTN","SAMICTR0",201,0)
 d OUT("<p><br></p><p><b>References:</b><br></p>")
"RTN","SAMICTR0",202,0)
 d OUT("<p>Recommendations for nodules and other findings are detailed in the I-ELCAP Protocol.<BR>")
"RTN","SAMICTR0",203,0)
 d OUT("A summary and the full I-ELCAP protocol can be viewed at: <a href=""http://ielcap.org/protocols"">http://ielcap.org/protocols</a></p>")
"RTN","SAMICTR0",204,0)
 d OUT("</TD></TR></TABLE></TD></TR></TABLE>")
"RTN","SAMICTR0",205,0)
 ;s debug=1
"RTN","SAMICTR0",206,0)
 d:$g(debug)  ;
"RTN","SAMICTR0",207,0)
 . n zi s zi=""
"RTN","SAMICTR0",208,0)
 . f  s zi=$o(@vals@(zi)) q:zi=""  d  ;
"RTN","SAMICTR0",209,0)
 . . d OUT("<br>"_zi_" "_$g(@vals@(zi)))
"RTN","SAMICTR0",210,0)
 d OUT("</BODY></HTML>")
"RTN","SAMICTR0",211,0)
 ;
"RTN","SAMICTR0",212,0)
 q
"RTN","SAMICTR0",213,0)
 ;
"RTN","SAMICTR0",214,0)
OUT(ln) ;
"RTN","SAMICTR0",215,0)
 s cnt=cnt+1
"RTN","SAMICTR0",216,0)
 n lnn
"RTN","SAMICTR0",217,0)
 ;s debug=1
"RTN","SAMICTR0",218,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTR0",219,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTR0",220,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTR0",221,0)
 . i ln["<" q  ; no markup
"RTN","SAMICTR0",222,0)
 . n zs s zs=$STACK
"RTN","SAMICTR0",223,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTR0",224,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTR0",225,0)
 q
"RTN","SAMICTR0",226,0)
 ;
"RTN","SAMICTR0",227,0)
HOUT(ln) ;
"RTN","SAMICTR0",228,0)
 d OUT("<p><span class='sectionhead'>"_ln_"</span>")
"RTN","SAMICTR0",229,0)
 q
"RTN","SAMICTR0",230,0)
 ;
"RTN","SAMICTR0",231,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMICTR0",232,0)
 ; vals is passed by name
"RTN","SAMICTR0",233,0)
 n zr
"RTN","SAMICTR0",234,0)
 s zr=$g(@vals@(var))
"RTN","SAMICTR0",235,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMICTR0",236,0)
 q zr
"RTN","SAMICTR0",237,0)
 ;
"RTN","SAMICTR0",238,0)
XSUB(var,vals,dict,valdx) ; extrinsic which returns the dictionary value defined by var
"RTN","SAMICTR0",239,0)
 ; vals and dict are passed by name
"RTN","SAMICTR0",240,0)
 ; valdx is used for nodules ala cect2co with the nodule number included
"RTN","SAMICTR0",241,0)
 ;n dict s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTR0",242,0)
 n zr,zv,zdx
"RTN","SAMICTR0",243,0)
 s zdx=$g(valdx)
"RTN","SAMICTR0",244,0)
 i zdx="" s zdx=var
"RTN","SAMICTR0",245,0)
 s zv=$g(@vals@(zdx))
"RTN","SAMICTR0",246,0)
 ;i zv="" s zr="["_var_"]" q zr
"RTN","SAMICTR0",247,0)
 i zv="" s zr="" q zr
"RTN","SAMICTR0",248,0)
 s zr=$g(@dict@(var,zv))
"RTN","SAMICTR0",249,0)
 ;i zr="" s zr="["_var_","_zv_"]"
"RTN","SAMICTR0",250,0)
 q zr
"RTN","SAMICTR0",251,0)
 ;
"RTN","SAMICTR0",252,0)
GETFILTR(filter,sid) ; fill in the filter for Ct Eval for sid
"RTN","SAMICTR0",253,0)
 s filter("studyid")=sid
"RTN","SAMICTR0",254,0)
 n items,zform
"RTN","SAMICTR0",255,0)
 d GETITEMS^SAMICASE("items",sid)
"RTN","SAMICTR0",256,0)
 s zform=$o(items("ceform"))
"RTN","SAMICTR0",257,0)
 s filter("form")=zform
"RTN","SAMICTR0",258,0)
 ;zwr filter
"RTN","SAMICTR0",259,0)
 q
"RTN","SAMICTR0",260,0)
T1(grtn,debug) ; 
"RTN","SAMICTR0",261,0)
 n filter
"RTN","SAMICTR0",262,0)
 ;n sid s sid="XXX00333"
"RTN","SAMICTR0",263,0)
 n sid s sid="XXX00484"
"RTN","SAMICTR0",264,0)
 d GETFILTR(.filter,sid)
"RTN","SAMICTR0",265,0)
 i $g(debug)=1 s filter("debug")=1
"RTN","SAMICTR0",266,0)
 d WSREPORT^SAMICTR0(.grtn,.filter)
"RTN","SAMICTR0",267,0)
 q
"RTN","SAMICTR0",268,0)
 ;
"RTN","SAMICTR1")
0^12^B79329697
"RTN","SAMICTR1",1,0)
SAMICTR1 ;ven/gpl - ielcap: forms ; 12/28/18 10:54am
"RTN","SAMICTR1",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMICTR1",3,0)
 ;
"RTN","SAMICTR1",4,0)
 ;
"RTN","SAMICTR1",5,0)
 quit  ; no entry from top
"RTN","SAMICTR1",6,0)
 ;
"RTN","SAMICTR1",7,0)
NODULES(rtn,vals,dict) ;
"RTN","SAMICTR1",8,0)
 ;
"RTN","SAMICTR1",9,0)
 ;
"RTN","SAMICTR1",10,0)
 ;# Report on Nodules
"RTN","SAMICTR1",11,0)
 n firstitem
"RTN","SAMICTR1",12,0)
 set firstitem=0
"RTN","SAMICTR1",13,0)
 n ii set ii=1
"RTN","SAMICTR1",14,0)
 ;# Information for each nodule
"RTN","SAMICTR1",15,0)
 f ii=1:1:10 d  ;
"RTN","SAMICTR1",16,0)
 . i $$XSUB("cectch",vals,dict,"cect"_ii_"ch")="px" q  ;
"RTN","SAMICTR1",17,0)
 . i $$XSUB("cectch",vals,dict,"cect"_ii_"ch")="" q  ;
"RTN","SAMICTR1",18,0)
 . i firstitem=0 d  ;
"RTN","SAMICTR1",19,0)
 . . d OUT("<!-- begin nodule info -->")
"RTN","SAMICTR1",20,0)
 . . d OUT("<UL TYPE=disc>")
"RTN","SAMICTR1",21,0)
 . . set firstitem=1
"RTN","SAMICTR1",22,0)
 . ;
"RTN","SAMICTR1",23,0)
 . d OUT("<LI>")
"RTN","SAMICTR1",24,0)
 . n specialcase s specialcase=0
"RTN","SAMICTR1",25,0)
 . n ij,ik
"RTN","SAMICTR1",26,0)
 . s ik=$$XVAL("cect"_ii_"ch",vals)
"RTN","SAMICTR1",27,0)
 . ;f ij="pw","px","pr","pv" i ij=ik s specialcase=1
"RTN","SAMICTR1",28,0)
 . i "pwpxprpv"[ik s specialcase=1
"RTN","SAMICTR1",29,0)
 . ;
"RTN","SAMICTR1",30,0)
 . ;# Example Sentence
"RTN","SAMICTR1",31,0)
 . ;# LUL Nodule 1 is non-calcified, non-solid, 6 mm x 6 mm (with 3 x 3) solid component), smooth edge, previously seen and unchanged. (Series 2, Image 65)
"RTN","SAMICTR1",32,0)
 . ;# [LOCATION] Nodule [N] is [CALCIFICATION], [SOLID], [L] mm x mm, [SMOOTH], [NEW].  (Series [Series], Image [ImageNum]).
"RTN","SAMICTR1",33,0)
 . ;
"RTN","SAMICTR1",34,0)
 . n spic s spic=""
"RTN","SAMICTR1",35,0)
 . i $$XVAL("cect"_ii_"sp",vals)="y" s spic="spiculated, "
"RTN","SAMICTR1",36,0)
 . ;
"RTN","SAMICTR1",37,0)
 . n calcification,calcstr,status
"RTN","SAMICTR1",38,0)
 . s status=$$XVAL("cect"_ii_"st",vals)
"RTN","SAMICTR1",39,0)
 . s @vals@("cect"_ii_"ca")=$s(status="bc":"y",status="pc":"q",1:"n")
"RTN","SAMICTR1",40,0)
 . s calcification=$$XSUB("cectca",vals,dict,"cect"_ii_"ca")
"RTN","SAMICTR1",41,0)
 . i calcification="" s calcstr="is "_spic_$$XSUB("cectnt",vals,dict,"cect"_ii_"nt")_", "
"RTN","SAMICTR1",42,0)
 . e  s calcstr="is "_calcification_", "_spic_$$XSUB("cectnt",vals,dict,"cect"_ii_"nt")_", "
"RTN","SAMICTR1",43,0)
 . ;
"RTN","SAMICTR1",44,0)
 . n scomp
"RTN","SAMICTR1",45,0)
 . s scomp=""
"RTN","SAMICTR1",46,0)
 . i $$XVAL("cect"_ii_"ssl",vals)'="" d  ;
"RTN","SAMICTR1",47,0)
 . . s scomp=" (solid component "_$$XVAL("cect"_ii_"ssl",vals)_" mm x "_$$XVAL("cect"_ii_"ssw",vals)_" mm)"
"RTN","SAMICTR1",48,0)
 . ;
"RTN","SAMICTR1",49,0)
 . s calcstr=calcstr_$$XVAL("cect"_ii_"sl",vals)_" mm x "_$$XVAL("cect"_ii_"sw",vals)_" mm"_scomp_", "
"RTN","SAMICTR1",50,0)
 . ;
"RTN","SAMICTR1",51,0)
 . n smooth
"RTN","SAMICTR1",52,0)
 . ;s smooth=$$XSUB("cectse",vals,dict,"cect"_ii_"se")
"RTN","SAMICTR1",53,0)
 . s smooth=$$XVAL("cect"_ii_"se",vals)
"RTN","SAMICTR1",54,0)
 . i smooth="y" s calcstr=calcstr_"smooth edges, "
"RTN","SAMICTR1",55,0)
 . ;e  s calcstr=calcstr_smooth_" edges, " ;nothing if not smooth
"RTN","SAMICTR1",56,0)
 . ;
"RTN","SAMICTR1",57,0)
 . ; adding distance from costal pleura
"RTN","SAMICTR1",58,0)
 . n pldstr
"RTN","SAMICTR1",59,0)
 . s pldstr="within "_$$XVAL("cect"_ii_"pld",vals)_" mm of the costal pleura"
"RTN","SAMICTR1",60,0)
 . ;
"RTN","SAMICTR1",61,0)
 . n skip s skip=0
"RTN","SAMICTR1",62,0)
 . ;# 3 cases: parenchymal, endobronchial, and both
"RTN","SAMICTR1",63,0)
 . ;
"RTN","SAMICTR1",64,0)
 . n en,loc,nloc,endo,ll
"RTN","SAMICTR1",65,0)
 . s loc=""
"RTN","SAMICTR1",66,0)
 . s nloc=""
"RTN","SAMICTR1",67,0)
 . s en=$$XVAL("cect"_ii_"en",vals)
"RTN","SAMICTR1",68,0)
 . s ll=$$XVAL("cect"_ii_"ll",vals)
"RTN","SAMICTR1",69,0)
 . i ($l(en)<2)!(en="no")!(en="") d  ;
"RTN","SAMICTR1",70,0)
 . . ;# 1) parenchymal only
"RTN","SAMICTR1",71,0)
 . . n X,Y s X=ll
"RTN","SAMICTR1",72,0)
 . . X ^%ZOSF("UPPERCASE")
"RTN","SAMICTR1",73,0)
 . . s loc=Y
"RTN","SAMICTR1",74,0)
 . . s nloc=Y
"RTN","SAMICTR1",75,0)
 . . s endo="Nodule"
"RTN","SAMICTR1",76,0)
 . e  d  ;
"RTN","SAMICTR1",77,0)
 . . i ll="end" d  ;
"RTN","SAMICTR1",78,0)
 . . . ;# 2) Endobronchial only
"RTN","SAMICTR1",79,0)
 . . . i en="tr" d  ;
"RTN","SAMICTR1",80,0)
 . . . . s endo="Endotracheal Nodule"
"RTN","SAMICTR1",81,0)
 . . . . i specialcase=1 d  ;
"RTN","SAMICTR1",82,0)
 . . . . . d OUT("Previously seen "_endo_" "_ii_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_".")
"RTN","SAMICTR1",83,0)
 . . . . e  d  ;
"RTN","SAMICTR1",84,0)
 . . . . . i ($$XVAL("cetex",vals)="b")&($$XVAL("cectch"_ii_"ch",vals)="n") d  ;
"RTN","SAMICTR1",85,0)
 . . . . . . d OUT(endo_" "_ii_" "_calcstr_" is seen.")
"RTN","SAMICTR1",86,0)
 . . . . . e  d OUT(endo_" "_ii_" "_calcstr_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_".")
"RTN","SAMICTR1",87,0)
 . . . . s skip=1
"RTN","SAMICTR1",88,0)
 . . . i en="rm" d  ;
"RTN","SAMICTR1",89,0)
 . . . . s endo="Nodule"
"RTN","SAMICTR1",90,0)
 . . . . s nloc=$$XSUB("cecten",vals,dict,"cect"_ii_"en")
"RTN","SAMICTR1",91,0)
 . . . . i specialcase=1 d  ;
"RTN","SAMICTR1",92,0)
 . . . . . ;d OUT("Previously seen "_nloc_" "_endo_" "_ii_" ")
"RTN","SAMICTR1",93,0)
 . . . . . d OUT("Previously seen "_endo_" "_ii_" in the "_nloc_" "_calcstr_" ")
"RTN","SAMICTR1",94,0)
 . . . . . d OUT($$XSUB("cectch",vals,dict,"cect"_ii_"ch")_".")
"RTN","SAMICTR1",95,0)
 . . . . e  d  ;
"RTN","SAMICTR1",96,0)
 . . . . . i ($$XVAL("cetex",vals)="b")&($$XVAL("cect"_ii_"ch",vals)="n") d  ;
"RTN","SAMICTR1",97,0)
 . . . . . . ;d OUT(nloc_" "_endo_" "_ii_".")
"RTN","SAMICTR1",98,0)
 . . . . . . d OUT(endo_" "_ii_" is seen in the "_nloc_" "_calcstr_".")
"RTN","SAMICTR1",99,0)
 . . . . . ;e  d OUT(nloc_" "_endo_" "_ii_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_".")
"RTN","SAMICTR1",100,0)
 . . . . . e  d OUT(endo_" "_ii_" in the "_nloc_" "_calcstr_", "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_".")
"RTN","SAMICTR1",101,0)
 . . . . s skip=1
"RTN","SAMICTR1",102,0)
 . . . i en="bi" d  ;
"RTN","SAMICTR1",103,0)
 . . . . s endo="Nodule"
"RTN","SAMICTR1",104,0)
 . . . . s loc=$$XSUB("cecten",vals,dict,"cect"_ii_"en")
"RTN","SAMICTR1",105,0)
 . . . . i specialcase=1 d  ;
"RTN","SAMICTR1",106,0)
 . . . . . ;d OUT("Previously seen "_endo_" "_ii_" in the "_loc)
"RTN","SAMICTR1",107,0)
 . . . . . d OUT("Previously seen "_endo_" "_ii_" in the "_nloc_" "_calcstr_" ")
"RTN","SAMICTR1",108,0)
 . . . . . d OUT($$XSUB("cectch",vals,dict,"cect"_ii_"ch")_".")
"RTN","SAMICTR1",109,0)
 . . . . e  d  ;
"RTN","SAMICTR1",110,0)
 . . . . . i ($$XVAL("cetex",vals)="b")&($$XVAL("cect"_ii_"ch",vals)="n") d  ;
"RTN","SAMICTR1",111,0)
 . . . . . . ;d OUT(endo_" "_ii_" is seen in the "_loc_".")
"RTN","SAMICTR1",112,0)
 . . . . . . d OUT(endo_" "_ii_" is seen in the "_loc_" "_calcstr_".")
"RTN","SAMICTR1",113,0)
 . . . . . e  d OUT(nloc_" "_endo_" "_ii_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_".")
"RTN","SAMICTR1",114,0)
 . . . . s skip=1
"RTN","SAMICTR1",115,0)
 . . . i skip=0 d  ; "default"
"RTN","SAMICTR1",116,0)
 . . . . s endo="Nodule"
"RTN","SAMICTR1",117,0)
 . . . . n X,Y
"RTN","SAMICTR1",118,0)
 . . . . s X=$$XVAL("cect"_ii_"en",vals)
"RTN","SAMICTR1",119,0)
 . . . . X ^%ZOSF("UPPERCASE")
"RTN","SAMICTR1",120,0)
 . . . . s nloc=Y
"RTN","SAMICTR1",121,0)
 . . . . i specialcase=1 d  ;
"RTN","SAMICTR1",122,0)
 . . . . . d OUT(nloc_" "_endo_" "_ii_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_", likely endobronchial.")
"RTN","SAMICTR1",123,0)
 . . . . e  d  ;
"RTN","SAMICTR1",124,0)
 . . . . . ;i ($$XVAL("cetex",vals)="b")&($$XSUB("cectch",vals,dict,"cect"_ii_"ch")="n") d  ;
"RTN","SAMICTR1",125,0)
 . . . . . i (($$XVAL("cetex",vals)="b")&($$XVAL("cect"_ii_"ch",vals)="n")) d  ; gpl 1002
"RTN","SAMICTR1",126,0)
 . . . . . . d OUT(nloc_" "_endo_" "_ii_" "_calcstr_" likely endobronchial.")
"RTN","SAMICTR1",127,0)
 . . . . . e  d OUT(nloc_" "_endo_" "_ii_" "_calcstr_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_" likely endobronchial.")
"RTN","SAMICTR1",128,0)
 . . . . s skip=1
"RTN","SAMICTR1",129,0)
 . . e  d  ;
"RTN","SAMICTR1",130,0)
 . . . s endo="Nodule"
"RTN","SAMICTR1",131,0)
 . . . s loc=$$XSUB("cectll",vals,dict,"cect"_ii_"ll")
"RTN","SAMICTR1",132,0)
 . . . n X,Y
"RTN","SAMICTR1",133,0)
 . . . s X=$$XVAL("cect"_ii_"en",vals)
"RTN","SAMICTR1",134,0)
 . . . X ^%ZOSF("UPPERCASE")
"RTN","SAMICTR1",135,0)
 . . . s nloc=Y
"RTN","SAMICTR1",136,0)
 . . . i specialcase=1 d  ;
"RTN","SAMICTR1",137,0)
 . . . . d OUT(nloc_" "_endo_" "_ii_" previously seen with possible endobronchial component")
"RTN","SAMICTR1",138,0)
 . . . . d OUT($$XSUB("cectch",vals,dict,"cect"_ii_"ch")_".")
"RTN","SAMICTR1",139,0)
 . . . e  d  ;
"RTN","SAMICTR1",140,0)
 . . . . ;i ($$XVAL("cetex",vals)="b")&($$XSUB("cectch",vals,dict,"cect"_ii_"ch")="n") d  ;
"RTN","SAMICTR1",141,0)
 . . . . i (($$XVAL("cetex",vals)="b")&($$XVAL("cect"_ii_"ch",vals)="n")) d  ; gpl 1002
"RTN","SAMICTR1",142,0)
 . . . . . d OUT(nloc_" "_endo_" "_ii_" "_calcstr_" with possible endobronchial component")
"RTN","SAMICTR1",143,0)
 . . . . e  d OUT(nloc_" "_endo_" "_ii_" "_calcstr_" with possible endobronchial component "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_".")
"RTN","SAMICTR1",144,0)
 . . . s skip=1
"RTN","SAMICTR1",145,0)
 . i specialcase=1 d  ;
"RTN","SAMICTR1",146,0)
 . . i skip=0 d  ;
"RTN","SAMICTR1",147,0)
 . . . d OUT("Previously seen "_nloc_" "_endo_" "_ii_" ")
"RTN","SAMICTR1",148,0)
 . . . d OUT($$XSUB("cectch",vals,dict,"cect"_ii_"ch")_".")
"RTN","SAMICTR1",149,0)
 . e  d  ;
"RTN","SAMICTR1",150,0)
 . . i skip=0 d  ;
"RTN","SAMICTR1",151,0)
 . . . ;# pleural distance only goes here
"RTN","SAMICTR1",152,0)
 . . . i $$XVAL("cect"_ii_"pld",vals)'="" s calcstr=calcstr_" "_pldstr_","
"RTN","SAMICTR1",153,0)
 . . . ;# Special Handling for "newly seen" on baseline
"RTN","SAMICTR1",154,0)
 . . . ;i ($$XVAL("cetex",vals)="b")&($$XSUB("cectch",vals,dict,"cect"_ii_"ch")="n") d  ;
"RTN","SAMICTR1",155,0)
 . . . i (($$XVAL("cetex",vals)="b")&($$XVAL("cect"_ii_"ch",vals)="n")) d  ; gpl 1002
"RTN","SAMICTR1",156,0)
 . . . . d OUT(nloc_" "_endo_" "_ii_" "_calcstr)
"RTN","SAMICTR1",157,0)
 . . . e  d OUT(nloc_" "_endo_" "_ii_" "_calcstr_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_" ")
"RTN","SAMICTR1",158,0)
 . . d OUT(" (Series "_$$XVAL("cect"_ii_"sn",vals)_",") ; added from 1114 gpl1
"RTN","SAMICTR1",159,0)
 . . ;i $$XVAL("cect"_ii_"inl",vals)=$$XVAL("cect"_ii_"inh",vals) d  ;
"RTN","SAMICTR1",160,0)
 . . ;. d OUT(" image "_$$XVAL("cect"_ii_"inh",vals)_"). ")
"RTN","SAMICTR1",161,0)
 . . ;e  d  ;
"RTN","SAMICTR1",162,0)
 . . ;. d OUT(" image "_$$XVAL("cect"_ii_"inl",vals)_$$XVAL("cect"_ii_"inh",vals)_"). ")
"RTN","SAMICTR1",163,0)
 . . i $$XVAL("cect"_ii_"inh",vals)="" d  ;
"RTN","SAMICTR1",164,0)
 . . . d OUT(" image "_$$XVAL("cect"_ii_"inl",vals)_"). ")
"RTN","SAMICTR1",165,0)
 . . e  d  ;
"RTN","SAMICTR1",166,0)
 . . . d OUT(" image "_$$XVAL("cect"_ii_"inl",vals)_"-"_$$XVAL("cect"_ii_"inh",vals)_"). ")
"RTN","SAMICTR1",167,0)
 . . i $$XVAL("cect"_ii_"co",vals)'="" d OUT($$XVAL("cect"_ii_"co",vals)_". ") ;1122 gpl1
"RTN","SAMICTR1",168,0)
 . . n ac
"RTN","SAMICTR1",169,0)
 . . s ac=$$XVAL("cect"_ii_"ac",vals)
"RTN","SAMICTR1",170,0)
 . . i ac'="" i (ac'="-") i (ac'="s") d  ;
"RTN","SAMICTR1",171,0)
 . . . d OUT($$XSUB("cectac",vals,dict,"cect"_ii_"ac")_" recommended.")
"RTN","SAMICTR1",172,0)
 . ;
"RTN","SAMICTR1",173,0)
 . ; end of nodule processing
"RTN","SAMICTR1",174,0)
 . ;
"RTN","SAMICTR1",175,0)
 i firstitem'=0 d  ;
"RTN","SAMICTR1",176,0)
 . d OUT("</UL>")
"RTN","SAMICTR1",177,0)
 . d OUT("<!-- end nodule info -->")
"RTN","SAMICTR1",178,0)
 d OUT("</p>")
"RTN","SAMICTR1",179,0)
 ;
"RTN","SAMICTR1",180,0)
 q
"RTN","SAMICTR1",181,0)
 ;
"RTN","SAMICTR1",182,0)
OUT(ln) ;
"RTN","SAMICTR1",183,0)
 s cnt=cnt+1
"RTN","SAMICTR1",184,0)
 n lnn
"RTN","SAMICTR1",185,0)
 ;s debug=1
"RTN","SAMICTR1",186,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTR1",187,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTR1",188,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTR1",189,0)
 . i ln["<" q  ; no markup
"RTN","SAMICTR1",190,0)
 . n zs s zs=$STACK
"RTN","SAMICTR1",191,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTR1",192,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTR1",193,0)
 q
"RTN","SAMICTR1",194,0)
 ;
"RTN","SAMICTR1",195,0)
HOUT(ln) ;
"RTN","SAMICTR1",196,0)
 d OUT("<p><span class='sectionhead'>"_ln_"</span>")
"RTN","SAMICTR1",197,0)
 q
"RTN","SAMICTR1",198,0)
 ;
"RTN","SAMICTR1",199,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMICTR1",200,0)
 ; vals is passed by name
"RTN","SAMICTR1",201,0)
 n zr
"RTN","SAMICTR1",202,0)
 s zr=$g(@vals@(var))
"RTN","SAMICTR1",203,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMICTR1",204,0)
 q zr
"RTN","SAMICTR1",205,0)
 ;
"RTN","SAMICTR1",206,0)
XSUB(var,vals,dict,valdx) ; extrinsic which returns the dictionary value defined by var
"RTN","SAMICTR1",207,0)
 ; vals and dict are passed by name
"RTN","SAMICTR1",208,0)
 ; valdx is used for nodules ala cect2co with the nodule number included
"RTN","SAMICTR1",209,0)
 ;n dict s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTR1",210,0)
 n zr,zv,zdx
"RTN","SAMICTR1",211,0)
 s zdx=$g(valdx)
"RTN","SAMICTR1",212,0)
 i zdx="" s zdx=var
"RTN","SAMICTR1",213,0)
 s zv=$g(@vals@(zdx))
"RTN","SAMICTR1",214,0)
 ;i zv="" s zr="["_var_"]" q zr
"RTN","SAMICTR1",215,0)
 i zv="" s zr="" q zr
"RTN","SAMICTR1",216,0)
 s zr=$g(@dict@(var,zv))
"RTN","SAMICTR1",217,0)
 ;i zr="" s zr="["_var_","_zv_"]"
"RTN","SAMICTR1",218,0)
 q zr
"RTN","SAMICTR1",219,0)
 ;
"RTN","SAMICTR3")
0^13^B143725495
"RTN","SAMICTR3",1,0)
SAMICTR3 ;ven/gpl - ielcap: forms ; 1/23/19 5:14pm
"RTN","SAMICTR3",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMICTR3",3,0)
 ;
"RTN","SAMICTR3",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMICTR3",5,0)
 ;
"RTN","SAMICTR3",6,0)
 quit  ; no entry from top
"RTN","SAMICTR3",7,0)
 ;
"RTN","SAMICTR3",8,0)
EMPHYS(rtn,vals,dict) ;
"RTN","SAMICTR3",9,0)
 ; repgen4,repgen5
"RTN","SAMICTR3",10,0)
 ;  
"RTN","SAMICTR3",11,0)
 ;# Emphysema
"RTN","SAMICTR3",12,0)
 ;
"RTN","SAMICTR3",13,0)
 ;if $$XVAL("ceemv",vals)'="e" d  ;
"RTN","SAMICTR3",14,0)
 if $$XVAL("ceem",vals)'="" d  ;
"RTN","SAMICTR3",15,0)
 . if $$XVAL("ceem",vals)="nv" q  ;
"RTN","SAMICTR3",16,0)
 . if $$XVAL("ceem",vals)="no" q  ;
"RTN","SAMICTR3",17,0)
 . D HOUT("Emphysema: ")
"RTN","SAMICTR3",18,0)
 . D OUT($$XSUB("ceem",vals,dict)_para)
"RTN","SAMICTR3",19,0)
 ;
"RTN","SAMICTR3",20,0)
 D HOUT("Pleura: ")
"RTN","SAMICTR3",21,0)
 ; hputs "Pleura:"
"RTN","SAMICTR3",22,0)
 N pe s pe=0
"RTN","SAMICTR3",23,0)
 ;
"RTN","SAMICTR3",24,0)
 ; # Pleural Effusion
"RTN","SAMICTR3",25,0)
 ; 
"RTN","SAMICTR3",26,0)
 i $$XVAL("cepev",vals)="y" d  ;
"RTN","SAMICTR3",27,0)
 . if $$XVAL("ceper",vals)="-" d  ;
"RTN","SAMICTR3",28,0)
 . . if $$XVAL("cepel",vals)="-" d  ;
"RTN","SAMICTR3",29,0)
 . . . s @vals@("cepev")="e"
"RTN","SAMICTR3",30,0)
 . ;
"RTN","SAMICTR3",31,0)
 . if $$XVAL("cepev",vals)'="e" d  ;
"RTN","SAMICTR3",32,0)
 . . if $$XVAL("ceper",vals)'="-" d  ;
"RTN","SAMICTR3",33,0)
 . . . if $$XVAL("cepel",vals)'="-" d  ;
"RTN","SAMICTR3",34,0)
 . . . . if $$XVAL("cepel",vals)=$$XVAL("ceper",vals) d  ;
"RTN","SAMICTR3",35,0)
 . . . . . d OUT("Bilateral "_$$XSUB("cepe",vals,dict,"cepel")_" pleural effusions."_para)
"RTN","SAMICTR3",36,0)
 . . . . else  d  ;
"RTN","SAMICTR3",37,0)
 . . . . . d OUT("Bilateral pleural effusions ; "_$$XSUB("cepe",vals,dict,"cepel")_" on left,")
"RTN","SAMICTR3",38,0)
 . . . . . d OUT(" and "_$$XSUB("cepe",vals,dict,"ceper")_" on right."_para)
"RTN","SAMICTR3",39,0)
 . . . . . s pe=1
"RTN","SAMICTR3",40,0)
 . . . else  d  ;
"RTN","SAMICTR3",41,0)
 . . . . d OUT("On right "_$$XSUB("cepe",vals,dict,"cepr")_" pleural effusion")
"RTN","SAMICTR3",42,0)
 . . . . d OUT(" and on left "_$$XSUB("cepe",vals,dict,"cepel")_" pleural effusion."_para)
"RTN","SAMICTR3",43,0)
 . . . . s pe=1
"RTN","SAMICTR3",44,0)
 . . else  d  ;
"RTN","SAMICTR3",45,0)
 . . . d OUT("On right "_$$XSUB("cepe",vals,dict,"cepr")_" pleural effusion")
"RTN","SAMICTR3",46,0)
 . . . d OUT(" and on left "_$$XSUB("cepe",vals,dict,"cepel")_" pleural effusion."_para)
"RTN","SAMICTR3",47,0)
 . . . s pe=1
"RTN","SAMICTR3",48,0)
 . ;
"RTN","SAMICTR3",49,0)
 i $$XVAL("cepev",vals)'="y" d  ; 
"RTN","SAMICTR3",50,0)
 . d OUT("No pleural effusions."_para)
"RTN","SAMICTR3",51,0)
 ;  if { $pe == 0 } {
"RTN","SAMICTR3",52,0)
 ;    puts "[tr "No pleural effusions"].${para}"
"RTN","SAMICTR3",53,0)
 ;  }
"RTN","SAMICTR3",54,0)
 ;  
"RTN","SAMICTR3",55,0)
 n yespp s yespp=0
"RTN","SAMICTR3",56,0)
 ;
"RTN","SAMICTR3",57,0)
 if $$XVAL("cebatr",vals)="y" d  ;
"RTN","SAMICTR3",58,0)
 . d OUT("Rounded atelectasis in the ")
"RTN","SAMICTR3",59,0)
 . d OUT($$LOBESTR^SAMICTR2("cebatrl1^cebatrl2^cebatrl3^cebatrl4^cebatrl5",0)_".<br>")
"RTN","SAMICTR3",60,0)
 . s yespp=1
"RTN","SAMICTR3",61,0)
 ;
"RTN","SAMICTR3",62,0)
 if $$XVAL("cept",vals)="y" d  ;
"RTN","SAMICTR3",63,0)
 . s yespp=1
"RTN","SAMICTR3",64,0)
 . s numl=0
"RTN","SAMICTR3",65,0)
 . set str="Pleural thickening/plaques in the "
"RTN","SAMICTR3",66,0)
 . if $$XVAL("ceptrt",vals)="r" d  ;
"RTN","SAMICTR3",67,0)
 . . s str=str_"right"
"RTN","SAMICTR3",68,0)
 . . s numl=numl+1
"RTN","SAMICTR3",69,0)
 . if $$XVAL("ceptlt",vals)="l" d  ;
"RTN","SAMICTR3",70,0)
 . . i numl>0 d  ;
"RTN","SAMICTR3",71,0)
 . . . s str=str_" and"
"RTN","SAMICTR3",72,0)
 . . s str=str_" left"
"RTN","SAMICTR3",73,0)
 . . s numl=numl+1
"RTN","SAMICTR3",74,0)
 . ;if numl>1 d  ;
"RTN","SAMICTR3",75,0)
 . ;. s str=str_" lungs."
"RTN","SAMICTR3",76,0)
 . ;else  d  ;
"RTN","SAMICTR3",77,0)
 . ;. s str=str_" lung."
"RTN","SAMICTR3",78,0)
 . s str=str_"."
"RTN","SAMICTR3",79,0)
 . if numl=0 set str="Pleural thickening/plaques."
"RTN","SAMICTR3",80,0)
 . d OUT(str_"<br>")
"RTN","SAMICTR3",81,0)
 ;
"RTN","SAMICTR3",82,0)
 if $$XVAL("cepu",vals)="y" d  ;
"RTN","SAMICTR3",83,0)
 . s yespp=1
"RTN","SAMICTR3",84,0)
 . if $l($$XVAL("cepus",vals))'=0 d  ;
"RTN","SAMICTR3",85,0)
 . . d OUT("Pleural rumor: "_$$XVAL("cepus",vals))
"RTN","SAMICTR3",86,0)
 . e  d OUT("Pleural tumor.")
"RTN","SAMICTR3",87,0)
 . d OUT("<br>")
"RTN","SAMICTR3",88,0)
 ;
"RTN","SAMICTR3",89,0)
 i yespp=0 d OUT(para)
"RTN","SAMICTR3",90,0)
 ;
"RTN","SAMICTR3",91,0)
 d  ;
"RTN","SAMICTR3",92,0)
 . if $$XVAL("ceoppab",vals)'="" d OUT($$XVAL("ceoppab",vals)_"."_para)
"RTN","SAMICTR3",93,0)
 . else  d
"RTN","SAMICTR3",94,0)
 . . if yespp=1 d OUT(para)
"RTN","SAMICTR3",95,0)
 ;
"RTN","SAMICTR3",96,0)
 ;
"RTN","SAMICTR3",97,0)
 d HOUT("Coronary Artery Calcifications: ")
"RTN","SAMICTR3",98,0)
 ;# Coronary Calcification
"RTN","SAMICTR3",99,0)
 n vcac,cac,cacrec
"RTN","SAMICTR3",100,0)
 s (cac,cacrec)=""
"RTN","SAMICTR3",101,0)
 ;
"RTN","SAMICTR3",102,0)
 if $$XVAL("cecccac",vals)'="" d  ;
"RTN","SAMICTR3",103,0)
 . s @vals@("ceccv")="e"
"RTN","SAMICTR3",104,0)
 ;
"RTN","SAMICTR3",105,0)
 d  if $$XVAL("ceccv",vals)'="n" d  ;
"RTN","SAMICTR3",106,0)
 . set vcac=$$XVAL("cecccac",vals)
"RTN","SAMICTR3",107,0)
 . if vcac'="" d  ;
"RTN","SAMICTR3",108,0)
 . . s cacrec=""
"RTN","SAMICTR3",109,0)
 . . s cac="The Visual Coronary Artery Calcium (CAC) Score is "_vcac_". "
"RTN","SAMICTR3",110,0)
 . . s cacval=vcac
"RTN","SAMICTR3",111,0)
 . . i cacval>3 s cacrec=$g(@dict@("CAC_recommendation"))_para
"RTN","SAMICTR3",112,0)
 ;
"RTN","SAMICTR3",113,0)
 ;
"RTN","SAMICTR3",114,0)
 n samicac s samicac=0
"RTN","SAMICTR3",115,0)
 i $$XVAL("cecclm",vals)'="no" s samicac=1
"RTN","SAMICTR3",116,0)
 i $$XVAL("ceccld",vals)'="no" s samicac=1
"RTN","SAMICTR3",117,0)
 ;i $$XVAL("cecclf",vals)'="no" s samicac=1
"RTN","SAMICTR3",118,0)
 i $$XVAL("cecccf",vals)'="no" s samicac=1
"RTN","SAMICTR3",119,0)
 i $$XVAL("ceccrc",vals)'="no" s samicac=1
"RTN","SAMICTR3",120,0)
 ;
"RTN","SAMICTR3",121,0)
 i samicac=1 d  ;
"RTN","SAMICTR3",122,0)
 . d OUT($$XSUB("cecc",vals,dict,"cecclm")_" in left main, ")
"RTN","SAMICTR3",123,0)
 . d OUT($$XSUB("cecc",vals,dict,"ceccld")_" in left anterior descending, ")
"RTN","SAMICTR3",124,0)
 . ;d OUT($$XSUB("cecc",vals,dict,"cecclf")_" in circumflex, and ")
"RTN","SAMICTR3",125,0)
 . d OUT($$XSUB("cecc",vals,dict,"cecccf")_" in circumflex, and ")
"RTN","SAMICTR3",126,0)
 . d OUT($$XSUB("cecc",vals,dict,"ceccrc")_" in right coronary. "_cac_para)
"RTN","SAMICTR3",127,0)
 ; 
"RTN","SAMICTR3",128,0)
 if $$XVAL("cecca",vals)'="-" d  ;
"RTN","SAMICTR3",129,0)
 . d HOUT("Aortic Calcifications: ")
"RTN","SAMICTR3",130,0)
 . d OUT($$XSUB("cecc",vals,dict,"cecca"))
"RTN","SAMICTR3",131,0)
 ;
"RTN","SAMICTR3",132,0)
 d HOUT("Cardiac Findings: ")
"RTN","SAMICTR3",133,0)
 ;
"RTN","SAMICTR3",134,0)
 ;# Pericardial Effusion
"RTN","SAMICTR3",135,0)
 if $$XVAL("ceprevm",vals)'="-" d  ;
"RTN","SAMICTR3",136,0)
 . if $$XVAL("ceprevm",vals)'="no" d  ;
"RTN","SAMICTR3",137,0)
 . . if $$XVAL("ceprevm",vals)'="" d
"RTN","SAMICTR3",138,0)
 . . . d OUT("A "_$$XSUB("ceprevm",vals,dict,"ceprevm")_" pericardial effusion"_"."_para)
"RTN","SAMICTR3",139,0)
 . . . s pe=1
"RTN","SAMICTR3",140,0)
 . . else  d OUT("No pericardial effusion."_para)
"RTN","SAMICTR3",141,0)
 ;
"RTN","SAMICTR3",142,0)
 ;
"RTN","SAMICTR3",143,0)
 ;;# Pulmonary and Aortic Diameter
"RTN","SAMICTR3",144,0)
 i $$XVAL("cepaw",vals)'="" d  ;
"RTN","SAMICTR3",145,0)
 . d OUT("Widest main pulmonary artery diameter is "_$$XVAL("cepaw",vals)_" mm. ")
"RTN","SAMICTR3",146,0)
 . if $$XVAL("ceaow",vals)'="" d  ;
"RTN","SAMICTR3",147,0)
 . . d OUT("Widest ascending aortic diameter at the same level is "_$$XVAL("ceaow",vals)_" mm. ")
"RTN","SAMICTR3",148,0)
 . . if $$XVAL("cepar",vals)'="" d  ;
"RTN","SAMICTR3",149,0)
 . . . d OUT("The ratio is "_$$XVAL("cepar",vals)_".")
"RTN","SAMICTR3",150,0)
 . d OUT(para)
"RTN","SAMICTR3",151,0)
 ;
"RTN","SAMICTR3",152,0)
 ; #"Additional Comments on Cardiac Abnormalities:"
"RTN","SAMICTR3",153,0)
 if $$XVAL("cecommca",vals)'="" d  ;
"RTN","SAMICTR3",154,0)
 . d OUT($$XVAL("cecommca",vals)_"."_para)
"RTN","SAMICTR3",155,0)
 ;
"RTN","SAMICTR3",156,0)
 ;
"RTN","SAMICTR3",157,0)
 d HOUT("Mediastinum: ")
"RTN","SAMICTR3",158,0)
 n yesmm s yesmm=0
"RTN","SAMICTR3",159,0)
 n abn
"RTN","SAMICTR3",160,0)
 i ($$XVAL("ceoma",vals)="y")&($$XVAL("ceata",vals)="y") d  ;
"RTN","SAMICTR3",161,0)
 . s yeamm=1
"RTN","SAMICTR3",162,0)
 . s abn=$$CCMSTR("ceatc^ceaty^ceatm",vals)
"RTN","SAMICTR3",163,0)
 . ;d OUT("[abn="_abn_"]")
"RTN","SAMICTR3",164,0)
 . i abn="" d OUT("Noted in the thyroid.")
"RTN","SAMICTR3",165,0)
 . i abn'="" d OUT(abn_" thyroid.")
"RTN","SAMICTR3",166,0)
 . i $$XVAL("ceato",vals)="o" d OUT($$XVAL("ceatos",vals)_"<br>")
"RTN","SAMICTR3",167,0)
 i $$XVAL("ceaya",vals)="y" d  ;
"RTN","SAMICTR3",168,0)
 . s yesmm=1
"RTN","SAMICTR3",169,0)
 . s abn=$$CCMSTR("ceayc^ceayy^ceaym",vals)
"RTN","SAMICTR3",170,0)
 . i abn="" d OUT("Noted in the thymus")
"RTN","SAMICTR3",171,0)
 . i abn'="" d OUT(abn_" thymus.")
"RTN","SAMICTR3",172,0)
 . i $$XVAL("ceayo",vals)="o" d OUT($$XVAL("ceayos",vals)_"<br>")
"RTN","SAMICTR3",173,0)
 ;
"RTN","SAMICTR3",174,0)
 ;   # Non-calcified lymph nodes
"RTN","SAMICTR3",175,0)
 n lnlist,lnlistt
"RTN","SAMICTR3",176,0)
 set lnlist(1)="cemlnl1"
"RTN","SAMICTR3",177,0)
 set lnlist(2)="cemlnl2r"
"RTN","SAMICTR3",178,0)
 set lnlist(3)="cemlnl2l"
"RTN","SAMICTR3",179,0)
 set lnlist(4)="cemlnl3"
"RTN","SAMICTR3",180,0)
 set lnlist(5)="cemlnl4r"
"RTN","SAMICTR3",181,0)
 set lnlist(6)="cemlnl4l"
"RTN","SAMICTR3",182,0)
 set lnlist(7)="cemlnl5"
"RTN","SAMICTR3",183,0)
 set lnlist(8)="cemlnl6"
"RTN","SAMICTR3",184,0)
 set lnlist(9)="cemlnl7"
"RTN","SAMICTR3",185,0)
 set lnlist(10)="cemlnl8"
"RTN","SAMICTR3",186,0)
 set lnlist(11)="cemlnl9"
"RTN","SAMICTR3",187,0)
 set lnlist(12)="cemlnl10r"
"RTN","SAMICTR3",188,0)
 set lnlist(13)="cemlnl10l"
"RTN","SAMICTR3",189,0)
 ;
"RTN","SAMICTR3",190,0)
 set lnlistt(1)="high mediastinal"
"RTN","SAMICTR3",191,0)
 set lnlistt(2)="right upper paratracheal"
"RTN","SAMICTR3",192,0)
 set lnlistt(3)="left upper paratracheal"
"RTN","SAMICTR3",193,0)
 set lnlistt(4)="prevascular/retrotracheal"
"RTN","SAMICTR3",194,0)
 set lnlistt(5)="right lower paratracheal"
"RTN","SAMICTR3",195,0)
 set lnlistt(6)="left lower paratracheal"
"RTN","SAMICTR3",196,0)
 set lnlistt(7)="sub-aortic (A-P window)"
"RTN","SAMICTR3",197,0)
 set lnlistt(8)="para-aortic"
"RTN","SAMICTR3",198,0)
 set lnlistt(9)="subcarinal"
"RTN","SAMICTR3",199,0)
 set lnlistt(10)="para-esophageal"
"RTN","SAMICTR3",200,0)
 set lnlistt(11)="pulmonary ligament"
"RTN","SAMICTR3",201,0)
 set lnlistt(12)="right hilar"
"RTN","SAMICTR3",202,0)
 set lnlistt(13)="left hilar"
"RTN","SAMICTR3",203,0)
 ;
"RTN","SAMICTR3",204,0)
 ;
"RTN","SAMICTR3",205,0)
 if $$XVAL("cemln",vals)="y" d  ;
"RTN","SAMICTR3",206,0)
 . s yesmm=1
"RTN","SAMICTR3",207,0)
 . n llist,item
"RTN","SAMICTR3",208,0)
 . s (llist,item)=""
"RTN","SAMICTR3",209,0)
 . f  s item=$o(lnlist(item)) q:item=""  d  ;
"RTN","SAMICTR3",210,0)
 . . i $$XVAL(lnlist(item),vals)'="" s llist($o(llist(""),-1)+1)=lnlist(item)
"RTN","SAMICTR3",211,0)
 . n lnum,slnum
"RTN","SAMICTR3",212,0)
 . s lnum=$o(llist(""),-1)
"RTN","SAMICTR3",213,0)
 . i lnum=0 d OUT("Enlarged or growing lymph nodes are noted.")
"RTN","SAMICTR3",214,0)
 . i lnum>0 d  ;
"RTN","SAMICTR3",215,0)
 . . s slnum=lnum
"RTN","SAMICTR3",216,0)
 . . d OUT("Enlarged or growing lymph nodes in the ")
"RTN","SAMICTR3",217,0)
 . . s item=""
"RTN","SAMICTR3",218,0)
 . . f  s item=$o(llist(item)) q:item=""  d  ;
"RTN","SAMICTR3",219,0)
 . . . d OUT(lnlistt(item))
"RTN","SAMICTR3",220,0)
 . . . i lnum>2 d OUT(", ")
"RTN","SAMICTR3",221,0)
 . . . i lnum=2 d OUT(" and ")
"RTN","SAMICTR3",222,0)
 . . . s lnum=lnum-1
"RTN","SAMICTR3",223,0)
 . . i slnum>1 d OUT("locations.")
"RTN","SAMICTR3",224,0)
 . . i slnum=1 d OUT("location.")
"RTN","SAMICTR3",225,0)
 ;
"RTN","SAMICTR3",226,0)
 ;
"RTN","SAMICTR3",227,0)
 if $$XVAL("cemlncab",vals)="y" d  ;
"RTN","SAMICTR3",228,0)
 . set yesmm=1
"RTN","SAMICTR3",229,0)
 . d OUT("Calcified lymph nodes present.<br>")
"RTN","SAMICTR3",230,0)
 ;
"RTN","SAMICTR3",231,0)
 if $$XVAL("ceagaln",vals)="y" d  ;
"RTN","SAMICTR3",232,0)
 . set yesmm=1
"RTN","SAMICTR3",233,0)
 . d OUT("Enlarged or growing axillary lymph nodes without central fat are seen.")
"RTN","SAMICTR3",234,0)
 . d OUT($$XVAL("ceagalns",vals)_"<br>")
"RTN","SAMICTR3",235,0)
 ;
"RTN","SAMICTR3",236,0)
 if $$XVAL("cemva",vals)="y" d  ;
"RTN","SAMICTR3",237,0)
 . set yesmm=1
"RTN","SAMICTR3",238,0)
 . if $$XVAL("cemvaa",vals)="a" d  ;
"RTN","SAMICTR3",239,0)
 . . d OUT("Other vascular abnormalities are seen in the aorta.")
"RTN","SAMICTR3",240,0)
 . if $$XVAL("cemvaa",vals)="w" d  ;
"RTN","SAMICTR3",241,0)
 . . d OUT("Other vascular abnormalities are seen in the pulmonary series.")
"RTN","SAMICTR3",242,0)
 . d OUT($$XVAL("cemvaos",vals)_"<br>")
"RTN","SAMICTR3",243,0)
 ;
"RTN","SAMICTR3",244,0)
 ;   # Esophageal
"RTN","SAMICTR3",245,0)
 if $$XVAL("cemeln",vals)="y" d  ;
"RTN","SAMICTR3",246,0)
 . set yesmm=1
"RTN","SAMICTR3",247,0)
 . n elist s elist=""
"RTN","SAMICTR3",248,0)
 . set numl=0
"RTN","SAMICTR3",249,0)
 . if $$XVAL("cemelna",vals)="a" d  ;
"RTN","SAMICTR3",250,0)
 . . s elist($o(elist(""),-1)+1)="Air-fluid level"
"RTN","SAMICTR3",251,0)
 . . s numl=numl+1
"RTN","SAMICTR3",252,0)
 . if $$XVAL("cemelnw",vals)="w" d  ;
"RTN","SAMICTR3",253,0)
 . . s elist($o(elist(""),-1)+1)="Wall thickening"
"RTN","SAMICTR3",254,0)
 . . s numl=numl+1
"RTN","SAMICTR3",255,0)
 . if $$XVAL("cemelnm",vals)="m" d  ;
"RTN","SAMICTR3",256,0)
 . . s elist($o(elist(""),-1)+1)="A mass"
"RTN","SAMICTR3",257,0)
 . . s numl=numl+1
"RTN","SAMICTR3",258,0)
 . if numl=0 d OUT("Esophageal abnormality noted.")
"RTN","SAMICTR3",259,0)
 . e  d  ;
"RTN","SAMICTR3",260,0)
 . . d OUT($g(elist(1)))
"RTN","SAMICTR3",261,0)
 . . if numl=1 d OUT(" is ")
"RTN","SAMICTR3",262,0)
 . . e  d  ;
"RTN","SAMICTR3",263,0)
 . . . if numl=2 d  ;
"RTN","SAMICTR3",264,0)
 . . . . d OUT(" and ")
"RTN","SAMICTR3",265,0)
 . . . e  d OUT(", ")
"RTN","SAMICTR3",266,0)
 . . . d OUT($$LOWC($g(elist(2))))
"RTN","SAMICTR3",267,0)
 . . . if numl=3 d  ;
"RTN","SAMICTR3",268,0)
 . . . . d OUT(", and "_$$LOWC($g(elist(3))))
"RTN","SAMICTR3",269,0)
 . . d OUT("seen in the esophagus.")
"RTN","SAMICTR3",270,0)
 . d OUT($$XVAL("cemelnos",vals)_para)
"RTN","SAMICTR3",271,0)
 ;
"RTN","SAMICTR3",272,0)
 ;
"RTN","SAMICTR3",273,0)
 if $$XVAL("cehhn",vals)="y" d  ;
"RTN","SAMICTR3",274,0)
 . set yesmm=1
"RTN","SAMICTR3",275,0)
 . if $$XVAL("cehhnos",vals)'="" d OUT("Hiatal hernia: "_$$XVAL("cehhnos",vals))
"RTN","SAMICTR3",276,0)
 . if $$XVAL("cehhnos",vals)="" d OUT("Hiatal hernia.")
"RTN","SAMICTR3",277,0)
 . d OUT(para)
"RTN","SAMICTR3",278,0)
 ;
"RTN","SAMICTR3",279,0)
 if $$XVAL("ceomm",vals)="y" d  ;
"RTN","SAMICTR3",280,0)
 . set yesmm=1
"RTN","SAMICTR3",281,0)
 . n tval
"RTN","SAMICTR3",282,0)
 . set tval=$$XVAL("ceommos",vals)
"RTN","SAMICTR3",283,0)
 . set abn=$$CCMSTR("ceamc^ceamy^ceamm",vals)
"RTN","SAMICTR3",284,0)
 . if abn="" d OUT("Abnormality noted in the mediastinum. ")
"RTN","SAMICTR3",285,0)
 . e  d OUT(abn_" mediastinum. ")
"RTN","SAMICTR3",286,0)
 . d OUT(tval_"<br>")
"RTN","SAMICTR3",287,0)
 i yesmm=0 d OUT("No abnormalities."_para)
"RTN","SAMICTR3",288,0)
 i $$XVAL("ceotabnm",vals)'="" d  ;
"RTN","SAMICTR3",289,0)
 . d OUT($$XVAL("ceotabnm",vals)_"."_para)
"RTN","SAMICTR3",290,0)
 d OUT("<p>")
"RTN","SAMICTR3",291,0)
 ;
"RTN","SAMICTR3",292,0)
 ;
"RTN","SAMICTR3",293,0)
 q
"RTN","SAMICTR3",294,0)
 ;
"RTN","SAMICTR3",295,0)
 ;
"RTN","SAMICTR3",296,0)
CCMSTR(lst,vals) ; extrinsic that forms phrases
"RTN","SAMICTR3",297,0)
 n retstr s retstr=""
"RTN","SAMICTR3",298,0)
 n lblist s lblist=""
"RTN","SAMICTR3",299,0)
 n lb,ib s ib=""
"RTN","SAMICTR3",300,0)
 f lb=1:1:$l(lst,"^") d  ;
"RTN","SAMICTR3",301,0)
 . n lvar s lvar=$p(lst,"^",lb)
"RTN","SAMICTR3",302,0)
 . s ib=$$XVAL($p(lst,"^",lb),vals)
"RTN","SAMICTR3",303,0)
 . if ib'="" d  ;
"RTN","SAMICTR3",304,0)
 . . i ib="y" d  ; 
"RTN","SAMICTR3",305,0)
 . . . i $f("ceasc cealc ceapc ceapc ceaac ceakc",lvar)>0 s lblist($o(lblist(""),-1)+1)="Calcification"
"RTN","SAMICTR3",306,0)
 . . . ;i "ceasc cealc ceapc ceapc ceaac ceakc"[lb s lblist($o(lblist(""),-1)+1)="Calcification"
"RTN","SAMICTR3",307,0)
 . . . else  s lblist($o(lblist(""),-1)+1)="Cyst"
"RTN","SAMICTR3",308,0)
 . . i ib="c" s lblist($o(lblist(""),-1)+1)="Calcification"
"RTN","SAMICTR3",309,0)
 . . i ib="m" s lblist($o(lblist(""),-1)+1)="Mass"
"RTN","SAMICTR3",310,0)
 i $o(lblist(""),-1)=1 s retstr=retstr_lblist(1)_" is seen in the"
"RTN","SAMICTR3",311,0)
 e  i $o(lblist(""),-1)=2 s retstr=retstr_lblist(1)_" and "_$$LOWC(lblist(2))_" are seen in the"
"RTN","SAMICTR3",312,0)
 e  i $o(lblist(""),-1)=3 s retstr=retstr_"Calicification, cyst, and mass are seen in the"
"RTN","SAMICTR3",313,0)
 q retstr
"RTN","SAMICTR3",314,0)
 ;
"RTN","SAMICTR3",315,0)
LOWC(X) ;  CONVERT X TO LOWERCASE
"RTN","SAMICTR3",316,0)
 Q $TR(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","SAMICTR3",317,0)
 ;
"RTN","SAMICTR3",318,0)
OUT(ln) ;
"RTN","SAMICTR3",319,0)
 s cnt=cnt+1
"RTN","SAMICTR3",320,0)
 n lnn
"RTN","SAMICTR3",321,0)
 ;s debug=1
"RTN","SAMICTR3",322,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTR3",323,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTR3",324,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTR3",325,0)
 . i ln["<" q  ; no markup
"RTN","SAMICTR3",326,0)
 . n zs s zs=$STACK
"RTN","SAMICTR3",327,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTR3",328,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTR3",329,0)
 q
"RTN","SAMICTR3",330,0)
 ;
"RTN","SAMICTR3",331,0)
HOUT(ln) ;
"RTN","SAMICTR3",332,0)
 d OUT("<p><span class='sectionhead'>"_ln_"</span>")
"RTN","SAMICTR3",333,0)
 q
"RTN","SAMICTR3",334,0)
 ;
"RTN","SAMICTR3",335,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMICTR3",336,0)
 ; vals is passed by name
"RTN","SAMICTR3",337,0)
 n zr
"RTN","SAMICTR3",338,0)
 s zr=$g(@vals@(var))
"RTN","SAMICTR3",339,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMICTR3",340,0)
 q zr
"RTN","SAMICTR3",341,0)
 ;
"RTN","SAMICTR3",342,0)
XSUB(var,vals,dict,valdx) ; extrinsic which returns the dictionary value defined by var
"RTN","SAMICTR3",343,0)
 ; vals and dict are passed by name
"RTN","SAMICTR3",344,0)
 ; valdx is used for nodules ala cect2co with the nodule number included
"RTN","SAMICTR3",345,0)
 ;n dict s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTR3",346,0)
 n zr,zv,zdx
"RTN","SAMICTR3",347,0)
 s zdx=$g(valdx)
"RTN","SAMICTR3",348,0)
 i zdx="" s zdx=var
"RTN","SAMICTR3",349,0)
 s zv=$g(@vals@(zdx))
"RTN","SAMICTR3",350,0)
 ;i zv="" s zr="["_var_"]" q zr
"RTN","SAMICTR3",351,0)
 i zv="" s zr="" q zr
"RTN","SAMICTR3",352,0)
 s zr=$g(@dict@(var,zv))
"RTN","SAMICTR3",353,0)
 ;i zr="" s zr="["_var_","_zv_"]"
"RTN","SAMICTR3",354,0)
 q zr
"RTN","SAMICTR3",355,0)
 ;
"RTN","SAMICTR4")
0^14^B29262141
"RTN","SAMICTR4",1,0)
SAMICTR4 ;ven/gpl - ielcap: forms ; 3/19/19 1:27pm
"RTN","SAMICTR4",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMICTR4",3,0)
 ;
"RTN","SAMICTR4",4,0)
 ;
"RTN","SAMICTR4",5,0)
 quit  ; no entry from top
"RTN","SAMICTR4",6,0)
 ;
"RTN","SAMICTR4",7,0)
BREAST(rtn,vals,dict) ;
"RTN","SAMICTR4",8,0)
 ; repgen6
"RTN","SAMICTR4",9,0)
 n destr s destr="is seen"
"RTN","SAMICTR4",10,0)
 n sba set sba=0
"RTN","SAMICTR4",11,0)
 ;   # Breast Abnormalities
"RTN","SAMICTR4",12,0)
 n bd,brt,blt
"RTN","SAMICTR4",13,0)
 s (bd,brt,blt)=0
"RTN","SAMICTR4",14,0)
 if $$XVAL("ceobard",vals)'="-" s brt=$$XVAL("ceobard",vals)
"RTN","SAMICTR4",15,0)
 if $$XVAL("ceobald",vals)'="-" s brt=$$XVAL("ceobald",vals)
"RTN","SAMICTR4",16,0)
 if (blt'=0)!(brt'=0) d  ;
"RTN","SAMICTR4",17,0)
 . d OUT("Breast:")
"RTN","SAMICTR4",18,0)
 . s bd=1
"RTN","SAMICTR4",19,0)
 if $$XVAL("ceara",vals)="y" d  ; our substitute for ceoba, which is null
"RTN","SAMICTR4",20,0)
 . if bd=0 d OUT("Breast:")
"RTN","SAMICTR4",21,0)
 . if $$XVAL("ceara",vals)="y" d  ;
"RTN","SAMICTR4",22,0)
 . . set sba=1
"RTN","SAMICTR4",23,0)
 . . n br
"RTN","SAMICTR4",24,0)
 . . set br=$$CCMSTR^SAMICTR3("ceobarc^ceobary^ceobarm",vals)
"RTN","SAMICTR4",25,0)
 . . if br="" d OUT("Noted in right breast: ")
"RTN","SAMICTR4",26,0)
 . . if br'="" d OUT(br_" right breast.")
"RTN","SAMICTR4",27,0)
 . . d OUT($$XVAL("ceobaros",vals)_"<br>")
"RTN","SAMICTR4",28,0)
 if $$XVAL("ceafa",vals)="y" d  ; our substitute for ceoba, which is null
"RTN","SAMICTR4",29,0)
 . if bd=0 d OUT("Breast:")
"RTN","SAMICTR4",30,0)
 . if $$XVAL("ceafa",vals)="y" d  ;
"RTN","SAMICTR4",31,0)
 . . set sba=1
"RTN","SAMICTR4",32,0)
 . . n br
"RTN","SAMICTR4",33,0)
 . . set br=$$CCMSTR^SAMICTR3("ceobafc^ceobafy^ceobafm",vals)
"RTN","SAMICTR4",34,0)
 . . if br="" d OUT("Noted in left breast: ")
"RTN","SAMICTR4",35,0)
 . . if br'="" d OUT(br_" left breast.")
"RTN","SAMICTR4",36,0)
 . . d OUT($$XVAL("ceobafos",vals)_"<br>")
"RTN","SAMICTR4",37,0)
 if bd=1 d  ;
"RTN","SAMICTR4",38,0)
 . if blt=brt d OUT("Density: "_$$XSUB("ceobad",vals,dict,"ceobald"))
"RTN","SAMICTR4",39,0)
 . else  d OUT("Density: Left "_$$XSUB("ceobad",vals,dict,"ceobald")_", Right "_$$XSUB("ceobad",vals,dict,"ceobard")_".")
"RTN","SAMICTR4",40,0)
 if $$XVAL("ceobrc",vals)'="" d OUT($$XVAL("ceobrc",vals)_para)
"RTN","SAMICTR4",41,0)
 else  if sba=1 d OUT(para)
"RTN","SAMICTR4",42,0)
 ;
"RTN","SAMICTR4",43,0)
 ;
"RTN","SAMICTR4",44,0)
 d OUT("Abdomen: ")
"RTN","SAMICTR4",45,0)
 n yesaa s yesaa=0
"RTN","SAMICTR4",46,0)
 ;  # Special Handling for the gallbladder
"RTN","SAMICTR4",47,0)
 ;
"RTN","SAMICTR4",48,0)
 if $$XVAL("ceaga",vals)="y" d  ;
"RTN","SAMICTR4",49,0)
 . d OUT("Limited view of the upper abdomen reveals the following: <br>")
"RTN","SAMICTR4",50,0)
 . set yesaa=1
"RTN","SAMICTR4",51,0)
 . if $$XVAL("ceagh",vals)="h" d  ;
"RTN","SAMICTR4",52,0)
 . . d OUT("status post cholecystectomy. <br>")
"RTN","SAMICTR4",53,0)
 . if $$XVAL("ceags",vals)="s" d  ;
"RTN","SAMICTR4",54,0)
 . . d OUT("Gallstones are noted. <br>")
"RTN","SAMICTR4",55,0)
 . if $$XVAL("ceagl",vals)="l" d  ;
"RTN","SAMICTR4",56,0)
 . . d OUT("Sludge is seen in the gall bladder. <br>")
"RTN","SAMICTR4",57,0)
 . if $$XVAL("ceago",vals)="y" d  ;
"RTN","SAMICTR4",58,0)
 . . d OUT("An abnormality was noted in the gall bladder: <br>")
"RTN","SAMICTR4",59,0)
 if $$XVAL("ceagos",vals)'="" d  ;
"RTN","SAMICTR4",60,0)
 . d OUT($$XVAL("ceagos",vals)_"<br>")
"RTN","SAMICTR4",61,0)
 ;
"RTN","SAMICTR4",62,0)
 n aalist
"RTN","SAMICTR4",63,0)
 s aalist(1,"spleen",0)=$$XVAL("ceasa",vals)
"RTN","SAMICTR4",64,0)
 s aalist(1,"spleen",1)="ceasc^ceasy^ceasm"
"RTN","SAMICTR4",65,0)
 s aalist(1,"spleen",2)=$$XVAL("ceasos",vals)
"RTN","SAMICTR4",66,0)
 s aalist(2,"liver",0)=$$XVAL("ceala",vals)
"RTN","SAMICTR4",67,0)
 s aalist(2,"liver",1)="cealc^cealy^cealm"
"RTN","SAMICTR4",68,0)
 s aalist(2,"liver",2)=$$XVAL("cealos",vals)
"RTN","SAMICTR4",69,0)
 s aalist(3,"pancreas",0)=$$XVAL("ceapa",vals)
"RTN","SAMICTR4",70,0)
 s aalist(3,"pancreas",1)="ceapc^ceapy^ceapm"
"RTN","SAMICTR4",71,0)
 s aalist(3,"pancreas",2)=$$XVAL("ceapos",vals)
"RTN","SAMICTR4",72,0)
 s aalist(4,"adrenals",0)=$$XVAL("ceaaa",vals)
"RTN","SAMICTR4",73,0)
 s aalist(4,"adrenals",1)="ceaac^ceaay^ceaam"
"RTN","SAMICTR4",74,0)
 s aalist(4,"adrenals",2)=$$XVAL("ceaaos",vals)
"RTN","SAMICTR4",75,0)
 s aalist(5,"kidneys",0)=$$XVAL("ceaka",vals)
"RTN","SAMICTR4",76,0)
 s aalist(5,"kidneys",1)="ceakc^ceaky^ceakm"
"RTN","SAMICTR4",77,0)
 s aalist(5,"kidneys",2)=$$XVAL("ceakos",vals)
"RTN","SAMICTR4",78,0)
 ;
"RTN","SAMICTR4",79,0)
 n zan,zaa s zaa=""
"RTN","SAMICTR4",80,0)
 f zan=1:1:5  d  ;
"RTN","SAMICTR4",81,0)
 . s zaa=$o(aalist(zan,""))
"RTN","SAMICTR4",82,0)
 . if aalist(zan,zaa,0)="y" d  ;
"RTN","SAMICTR4",83,0)
 . . n zout
"RTN","SAMICTR4",84,0)
 . . s zout=$$CCMSTR^SAMICTR3(aalist(zan,zaa,1),vals)
"RTN","SAMICTR4",85,0)
 . . set yesaa=1
"RTN","SAMICTR4",86,0)
 . . if zout="" d  ;
"RTN","SAMICTR4",87,0)
 . . . ;d OUT(aalist(zan,zaa,2))
"RTN","SAMICTR4",88,0)
 . . . if aalist(zan,zaa,2)'="" d OUT(aalist(zan,zaa,2)_"<br>")
"RTN","SAMICTR4",89,0)
 . . if zout'="" d  ;
"RTN","SAMICTR4",90,0)
 . . . d OUT("A "_$$LOWC^SAMICTR3(zout)_" "_zaa_". "_aalist(zan,zaa,2)_"<br>")
"RTN","SAMICTR4",91,0)
 ;
"RTN","SAMICTR4",92,0)
 ;# Other Abdominal Abnormalities
"RTN","SAMICTR4",93,0)
 ;
"RTN","SAMICTR4",94,0)
 if $$XVAL("ceaoab",vals)'="" d  ;
"RTN","SAMICTR4",95,0)
 . d OUT($$XVAL("ceaoab",vals)_"."_para)
"RTN","SAMICTR4",96,0)
 if yesaa=0  d  ;
"RTN","SAMICTR4",97,0)
 . d OUT("Limited view of the upper abdomen reveals no abnormalities."_para)
"RTN","SAMICTR4",98,0)
 ;
"RTN","SAMICTR4",99,0)
 d OUT("</p>")
"RTN","SAMICTR4",100,0)
 ;
"RTN","SAMICTR4",101,0)
 ;# Other Chest Abnormalities
"RTN","SAMICTR4",102,0)
 ;
"RTN","SAMICTR4",103,0)
 if $$XVAL("ceotab",vals)'="" d
"RTN","SAMICTR4",104,0)
 . d OUT("Other chest abnormalities:")
"RTN","SAMICTR4",105,0)
 . d OUT($$XVAL("ceotab",vals)_"."_para)
"RTN","SAMICTR4",106,0)
 ;
"RTN","SAMICTR4",107,0)
 ;# Bone Abnormalities
"RTN","SAMICTR4",108,0)
 ;
"RTN","SAMICTR4",109,0)
 if $$XVAL("ceaoabb",vals)'="" d  ;
"RTN","SAMICTR4",110,0)
 . d OUT("Bone:")
"RTN","SAMICTR4",111,0)
 . d OUT($$XVAL("ceaoabb",vals)_para)
"RTN","SAMICTR4",112,0)
 d  ;
"RTN","SAMICTR4",113,0)
 . q  ; LungRADS moved to SAMICTRA
"RTN","SAMICTR4",114,0)
 . n lradModifiers
"RTN","SAMICTR4",115,0)
 . s lradModifiers=$$XVAL("celradc",vals)_$$XVAL("celrads",vals)
"RTN","SAMICTR4",116,0)
 . ;
"RTN","SAMICTR4",117,0)
 . i ($$XVAL("celrad",vals)'="-")&($$XVAL("celrad",vals)'="") d  ;
"RTN","SAMICTR4",118,0)
 . . d OUT("The LungRADS category for this scan is: "_$$XVAL("celrad",vals)_" "_lradModifiers)
"RTN","SAMICTR4",119,0)
 . . d OUT(para)
"RTN","SAMICTR4",120,0)
 q
"RTN","SAMICTR4",121,0)
 ;
"RTN","SAMICTR4",122,0)
 ;
"RTN","SAMICTR4",123,0)
OUT(ln) ;
"RTN","SAMICTR4",124,0)
 s cnt=cnt+1
"RTN","SAMICTR4",125,0)
 n lnn
"RTN","SAMICTR4",126,0)
 ;s debug=1
"RTN","SAMICTR4",127,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTR4",128,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTR4",129,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTR4",130,0)
 . i ln["<" q  ; no markup
"RTN","SAMICTR4",131,0)
 . n zs s zs=$STACK
"RTN","SAMICTR4",132,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTR4",133,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTR4",134,0)
 q
"RTN","SAMICTR4",135,0)
 ;
"RTN","SAMICTR4",136,0)
HOUT(ln) ;
"RTN","SAMICTR4",137,0)
 d OUT("<p><span class='sectionhead'>"_ln_"</span>")
"RTN","SAMICTR4",138,0)
 q
"RTN","SAMICTR4",139,0)
 ;
"RTN","SAMICTR4",140,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMICTR4",141,0)
 ; vals is passed by name
"RTN","SAMICTR4",142,0)
 n zr
"RTN","SAMICTR4",143,0)
 s zr=$g(@vals@(var))
"RTN","SAMICTR4",144,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMICTR4",145,0)
 q zr
"RTN","SAMICTR4",146,0)
 ;
"RTN","SAMICTR4",147,0)
XSUB(var,vals,dict,valdx) ; extrinsic which returns the dictionary value defined by var
"RTN","SAMICTR4",148,0)
 ; vals and dict are passed by name
"RTN","SAMICTR4",149,0)
 ; valdx is used for nodules ala cect2co with the nodule number included
"RTN","SAMICTR4",150,0)
 ;n dict s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTR4",151,0)
 n zr,zv,zdx
"RTN","SAMICTR4",152,0)
 s zdx=$g(valdx)
"RTN","SAMICTR4",153,0)
 i zdx="" s zdx=var
"RTN","SAMICTR4",154,0)
 s zv=$g(@vals@(zdx))
"RTN","SAMICTR4",155,0)
 ;i zv="" s zr="["_var_"]" q zr
"RTN","SAMICTR4",156,0)
 i zv="" s zr="" q zr
"RTN","SAMICTR4",157,0)
 s zr=$g(@dict@(var,zv))
"RTN","SAMICTR4",158,0)
 ;i zr="" s zr="["_var_","_zv_"]"
"RTN","SAMICTR4",159,0)
 q zr
"RTN","SAMICTR4",160,0)
 ;
"RTN","SAMICTR4",161,0)
 ;
"RTN","SAMICTR9")
0^15^B10298413
"RTN","SAMICTR9",1,0)
SAMICTR9 ;ven/gpl - ielcap: forms ; 12/28/18 10:26am
"RTN","SAMICTR9",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMICTR9",3,0)
 ;
"RTN","SAMICTR9",4,0)
 ;
"RTN","SAMICTR9",5,0)
 quit  ; no entry from top
"RTN","SAMICTR9",6,0)
 ;
"RTN","SAMICTR9",7,0)
IMPRSN(rtn,vals,dict) ;
"RTN","SAMICTR9",8,0)
 ; repgen13
"RTN","SAMICTR9",9,0)
 ;
"RTN","SAMICTR9",10,0)
 ;
"RTN","SAMICTR9",11,0)
 ; # Impression
"RTN","SAMICTR9",12,0)
 d OUT("</TD></TR></TABLE><TR><TD>")
"RTN","SAMICTR9",13,0)
 d OUT("<HR SIZE=""2"" WIDTH=""100%"" ALIGN=""center"" NOSHADE>")
"RTN","SAMICTR9",14,0)
 d OUT("</TD></TR>")
"RTN","SAMICTR9",15,0)
 d OUT("<!-- impression -->")
"RTN","SAMICTR9",16,0)
 d OUT("<TR><TD>")
"RTN","SAMICTR9",17,0)
 d OUT("<FONT SIZE=""+2"">")
"RTN","SAMICTR9",18,0)
 d OUT("<B>IMPRESSION:</B>")
"RTN","SAMICTR9",19,0)
 d OUT("</FONT>")
"RTN","SAMICTR9",20,0)
 d OUT("</TD></TR><TR><TD><TABLE>")
"RTN","SAMICTR9",21,0)
 d OUT("<TR><TD WIDTH=20></TD><TD>")
"RTN","SAMICTR9",22,0)
 ;
"RTN","SAMICTR9",23,0)
 d OUT($$XSUB("ceimn",vals,dict)_para)
"RTN","SAMICTR9",24,0)
 ;
"RTN","SAMICTR9",25,0)
 ;# Report CAC Score and Extent of Emphysema
"RTN","SAMICTR9",26,0)
 s cacval=0
"RTN","SAMICTR9",27,0)
 d  ;if $$XVAL("ceccv",vals)'="e" d  ;
"RTN","SAMICTR9",28,0)
 . set vcac=$$XVAL("cecccac",vals)
"RTN","SAMICTR9",29,0)
 . if vcac'="" d  ;
"RTN","SAMICTR9",30,0)
 . . s cacrec=""
"RTN","SAMICTR9",31,0)
 . . s cac="The Visual Coronary Artery Calcium (CAC) Score is "_vcac_". "
"RTN","SAMICTR9",32,0)
 . . s cacval=vcac
"RTN","SAMICTR9",33,0)
 . . i cacval>3 s cacrec=$g(@dict@("CAC_recommendation"))_para
"RTN","SAMICTR9",34,0)
 ;
"RTN","SAMICTR9",35,0)
 i cacval>0 d  ;
"RTN","SAMICTR9",36,0)
 . d OUT(cac_" "_cacrec_" "_para)
"RTN","SAMICTR9",37,0)
 . d  ;if $$XVAL("ceemv",vals)="e" d  ;
"RTN","SAMICTR9",38,0)
 . . if $$XVAL("ceem",vals)'="no" d  ;
"RTN","SAMICTR9",39,0)
 . . . if $$XVAL("ceem",vals)="nv" q  ;
"RTN","SAMICTR9",40,0)
 . . . d OUT("Emphysema:")
"RTN","SAMICTR9",41,0)
 . . . d OUT($$XSUB("ceem",vals,dict)_"."_para)
"RTN","SAMICTR9",42,0)
 ;
"RTN","SAMICTR9",43,0)
 i $$XVAL("ceclini",vals)="y" d  ;
"RTN","SAMICTR9",44,0)
 . d OUT($$XVAL("ceclin",vals)_"."_para)
"RTN","SAMICTR9",45,0)
 ;
"RTN","SAMICTR9",46,0)
 i $$XVAL("ceoppai",vals)="y" d  ;
"RTN","SAMICTR9",47,0)
 . d OUT($$XVAL("ceoppa",vals)_"."_para)
"RTN","SAMICTR9",48,0)
 ;
"RTN","SAMICTR9",49,0)
 i $$XVAL("ceoppabi",vals)="y" d  ;
"RTN","SAMICTR9",50,0)
 . d OUT($$XVAL("ceoppab",vals)_"."_para)
"RTN","SAMICTR9",51,0)
 ;
"RTN","SAMICTR9",52,0)
 i $$XVAL("cecommcai",vals)="y" d  ;
"RTN","SAMICTR9",53,0)
 . d OUT($$XVAL("cecommca",vals)_"."_para)
"RTN","SAMICTR9",54,0)
 ;
"RTN","SAMICTR9",55,0)
 i $$XVAL("ceotabnmi",vals)="y" d  ;
"RTN","SAMICTR9",56,0)
 . d OUT($$XVAL("ceotabnm",vals)_"."_para)
"RTN","SAMICTR9",57,0)
 ;
"RTN","SAMICTR9",58,0)
 i $$XVAL("ceobrci",vals)="y" d  ;
"RTN","SAMICTR9",59,0)
 . d OUT($$XVAL("ceobrc",vals)_"."_para)
"RTN","SAMICTR9",60,0)
 ;
"RTN","SAMICTR9",61,0)
 i $$XVAL("ceaoabbi",vals)="y" d  ;
"RTN","SAMICTR9",62,0)
 . d OUT($$XVAL("ceaoabb",vals)_"."_para)
"RTN","SAMICTR9",63,0)
 ;
"RTN","SAMICTR9",64,0)
 i $$XVAL("ceaoabi",vals)="y" d  ;
"RTN","SAMICTR9",65,0)
 . d OUT($$XVAL("ceaoab",vals)_"."_para)
"RTN","SAMICTR9",66,0)
 ;
"RTN","SAMICTR9",67,0)
 ;# Impression Remarks
"RTN","SAMICTR9",68,0)
 i $$XVAL("ceimre",vals)'="" d  ;
"RTN","SAMICTR9",69,0)
 . d OUT($$XVAL("ceimre",vals)_"."_para)
"RTN","SAMICTR9",70,0)
 q
"RTN","SAMICTR9",71,0)
 ;
"RTN","SAMICTR9",72,0)
 ;
"RTN","SAMICTR9",73,0)
OUT(ln) ;
"RTN","SAMICTR9",74,0)
 s cnt=cnt+1
"RTN","SAMICTR9",75,0)
 n lnn
"RTN","SAMICTR9",76,0)
 ;s debug=1
"RTN","SAMICTR9",77,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTR9",78,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTR9",79,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTR9",80,0)
 . i ln["<" q  ; no markup
"RTN","SAMICTR9",81,0)
 . n zs s zs=$STACK
"RTN","SAMICTR9",82,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTR9",83,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTR9",84,0)
 q
"RTN","SAMICTR9",85,0)
 ;
"RTN","SAMICTR9",86,0)
HOUT(ln) ;
"RTN","SAMICTR9",87,0)
 d OUT("<p><span class='sectionhead'>"_ln_"</span>")
"RTN","SAMICTR9",88,0)
 q
"RTN","SAMICTR9",89,0)
 ;
"RTN","SAMICTR9",90,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMICTR9",91,0)
 ; vals is passed by name
"RTN","SAMICTR9",92,0)
 n zr
"RTN","SAMICTR9",93,0)
 s zr=$g(@vals@(var))
"RTN","SAMICTR9",94,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMICTR9",95,0)
 q zr
"RTN","SAMICTR9",96,0)
 ;
"RTN","SAMICTR9",97,0)
XSUB(var,vals,dict,valdx) ; extrinsic which returns the dictionary value defined by var
"RTN","SAMICTR9",98,0)
 ; vals and dict are passed by name
"RTN","SAMICTR9",99,0)
 ; valdx is used for nodules ala cect2co with the nodule number included
"RTN","SAMICTR9",100,0)
 ;n dict s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTR9",101,0)
 n zr,zv,zdx
"RTN","SAMICTR9",102,0)
 s zdx=$g(valdx)
"RTN","SAMICTR9",103,0)
 i zdx="" s zdx=var
"RTN","SAMICTR9",104,0)
 s zv=$g(@vals@(zdx))
"RTN","SAMICTR9",105,0)
 ;i zv="" s zr="["_var_"]" q zr
"RTN","SAMICTR9",106,0)
 i zv="" s zr="" q zr
"RTN","SAMICTR9",107,0)
 s zr=$g(@dict@(var,zv))
"RTN","SAMICTR9",108,0)
 ;i zr="" s zr="["_var_","_zv_"]"
"RTN","SAMICTR9",109,0)
 q zr
"RTN","SAMICTR9",110,0)
 ;
"RTN","SAMICTRA")
0^16^B23235408
"RTN","SAMICTRA",1,0)
SAMICTRA ;ven/gpl - ielcap: forms ; 12/28/18 9:43am
"RTN","SAMICTRA",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMICTRA",3,0)
 ;
"RTN","SAMICTRA",4,0)
 ;
"RTN","SAMICTRA",5,0)
 quit  ; no entry from top
"RTN","SAMICTRA",6,0)
 ;
"RTN","SAMICTRA",7,0)
RCMND(rtn,vals,dict) ;
"RTN","SAMICTRA",8,0)
 ; repgen14
"RTN","SAMICTRA",9,0)
 ;
"RTN","SAMICTRA",10,0)
 ;
"RTN","SAMICTRA",11,0)
 ;# Recommendation
"RTN","SAMICTRA",12,0)
 d OUT("</TD></TR>")
"RTN","SAMICTRA",13,0)
 d OUT("</TABLE>")
"RTN","SAMICTRA",14,0)
 d OUT("<TR><TD></TD></TR>")
"RTN","SAMICTRA",15,0)
 d OUT("<!-- Recommendation -->")
"RTN","SAMICTRA",16,0)
 ;
"RTN","SAMICTRA",17,0)
 i $$XVAL("cefu",vals)'="nf" d  ; 2445-2450 gpl1
"RTN","SAMICTRA",18,0)
 . ;d OUT("<TR><TD><FONT SIZE=""+2""><B>")
"RTN","SAMICTRA",19,0)
 . d OUT("<FONT SIZE=""+2""><B>")
"RTN","SAMICTRA",20,0)
 . d OUT("Recommendations:")
"RTN","SAMICTRA",21,0)
 . d OUT("</B></FONT>")
"RTN","SAMICTRA",22,0)
 . ;d OUT("</TD></TR><TR><TD><TABLE><TR><TD WIDTH=20></TD><TD>")
"RTN","SAMICTRA",23,0)
 ;
"RTN","SAMICTRA",24,0)
 n fuw
"RTN","SAMICTRA",25,0)
 s fuw=$$XSUB("cefuw",vals,dict)
"RTN","SAMICTRA",26,0)
 ;d OUT("fuw= "_fuw)
"RTN","SAMICTRA",27,0)
 ;d OUT("vals= "_vals)
"RTN","SAMICTRA",28,0)
 ;d OUT(" dict= "_dict)
"RTN","SAMICTRA",29,0)
 ;d OUT($o(@vals@("cefuw","")))
"RTN","SAMICTRA",30,0)
 ;zwr @vals@(*)
"RTN","SAMICTRA",31,0)
 ;zwr @dict@(*)
"RTN","SAMICTRA",32,0)
 ;i fuw="" d  ;
"RTN","SAMICTRA",33,0)
 ;. d OUT(para_"<B>"_$$XSUB("cefu",vals,dict)_" on "_$$XVAL("cefud",vals)_".</B>"_para)
"RTN","SAMICTRA",34,0)
 ;e  d  ;
"RTN","SAMICTRA",35,0)
 ;. d OUT(para_"<B>"_$$XSUB("cefu",vals,dict)_" "_fuw_" on "_$$XVAL("cefud",vals)_".</B>"_para)
"RTN","SAMICTRA",36,0)
 i fuw="" d  ;
"RTN","SAMICTRA",37,0)
 . d OUT(para_"<B>A followup CT scan is recommended on "_$$XVAL("cefud",vals)_".</B>"_para)
"RTN","SAMICTRA",38,0)
 e  d  ;
"RTN","SAMICTRA",39,0)
 . d OUT(para_"<B>A followup CT scan is recommended "_fuw_" on "_$$XVAL("cefud",vals)_".</B>"_para)
"RTN","SAMICTRA",40,0)
 ;
"RTN","SAMICTRA",41,0)
 ; #Other followup
"RTN","SAMICTRA",42,0)
 n zfu,ofu,tofu,comma
"RTN","SAMICTRA",43,0)
 s comma=0,tofu=""
"RTN","SAMICTRA",44,0)
 s ofu=""
"RTN","SAMICTRA",45,0)
 f zfu="cefuaf","cefucc","cefupe","cefufn","cefubr","cefupc","cefutb" d  ;
"RTN","SAMICTRA",46,0)
 . i $$XVAL(zfu,vals)="y" s ofu=ofu_zfu
"RTN","SAMICTRA",47,0)
 i $$XVAL("cefuo",vals)'="" s ofu=ofu_"cefuo"
"RTN","SAMICTRA",48,0)
 i ofu'="" d  ;
"RTN","SAMICTRA",49,0)
 . s tofu="Other followup: "
"RTN","SAMICTRA",50,0)
 . i ofu["cefuaf" s tofu=tofu_"Antibiotics" s comma=1
"RTN","SAMICTRA",51,0)
 . i ofu["cefucc" s tofu=tofu_$s(comma:", ",1:"")_"Diagnostic CT" s comma=1
"RTN","SAMICTRA",52,0)
 . i ofu["cefupe" s tofu=tofu_$s(comma:", ",1:"")_"PET" s comma=1
"RTN","SAMICTRA",53,0)
 . i ofu["cefufn" s tofu=tofu_$s(comma:", ",1:"")_"Percutaneous biopsy" s comma=1
"RTN","SAMICTRA",54,0)
 . i ofu["cefubr" s tofu=tofu_$s(comma:", ",1:"")_"Bronchoscopy" s comma=1
"RTN","SAMICTRA",55,0)
 . i ofu["cefupc" s tofu=tofu_$s(comma:", ",1:"")_"Pulmonary consultation" s comma=1
"RTN","SAMICTRA",56,0)
 . i ofu["cefutb" s tofu=tofu_$s(comma:", ",1:"")_"Refer to tumor board" s comma=1
"RTN","SAMICTRA",57,0)
 . i ofu["cefuo" s tofu=tofu_$s(comma:", ",1:"")_$$XVAL("cefuo",vals) s comma=1
"RTN","SAMICTRA",58,0)
 i ofu'="" d OUT(para_tofu_para)
"RTN","SAMICTRA",59,0)
 ;d OUT("<TR><TD></TD></TR>")
"RTN","SAMICTRA",60,0)
 ; # LungRADS
"RTN","SAMICTRA",61,0)
 ;
"RTN","SAMICTRA",62,0)
 ;d OUT("<TR><TD>")
"RTN","SAMICTRA",63,0)
 ;n lrstyle
"RTN","SAMICTRA",64,0)
 ;i $$XVAL("celrc",vals)'="" s lrstyle=1 ; dom's style
"RTN","SAMICTRA",65,0)
 ;e  s lrstyle=0 ; artit's style
"RTN","SAMICTRA",66,0)
 ;s lrstyle=0
"RTN","SAMICTRA",67,0)
 ;
"RTN","SAMICTRA",68,0)
 d  ;
"RTN","SAMICTRA",69,0)
 . q  ; LUNGRADS moved to SAMICTR4
"RTN","SAMICTRA",70,0)
 . n lradModifiers
"RTN","SAMICTRA",71,0)
 . s lradModifiers=$$XVAL("celradc",vals)_$$XVAL("celrads",vals)
"RTN","SAMICTRA",72,0)
 . ;
"RTN","SAMICTRA",73,0)
 . i ($$XVAL("celrad",vals)'="-")&($$XVAL("celrad",vals)'="") d  ;
"RTN","SAMICTRA",74,0)
 . . d OUT("The LungRADS category for this scan is: "_$$XVAL("celrad",vals)_" "_lradModifiers)
"RTN","SAMICTRA",75,0)
 . . d OUT(para)
"RTN","SAMICTRA",76,0)
 ;
"RTN","SAMICTRA",77,0)
 ;d OUT("</TD></TR>")
"RTN","SAMICTRA",78,0)
 ;
"RTN","SAMICTRA",79,0)
 ;d OUT("<TR><TD><TABLE><TR><TD WIDTH=20></TD><TD>")
"RTN","SAMICTRA",80,0)
 ;
"RTN","SAMICTRA",81,0)
 ;# Check if Study is Completed
"RTN","SAMICTRA",82,0)
 ;# Find Current Study ID
"RTN","SAMICTRA",83,0)
 ;# locate most recent followup
"RTN","SAMICTRA",84,0)
 ;# get status (sies)
"RTN","SAMICTRA",85,0)
 ;# if sc=Study Complete and cefu=rs
"RTN","SAMICTRA",86,0)
 ;
"RTN","SAMICTRA",87,0)
 n patstatus
"RTN","SAMICTRA",88,0)
 s patstatus=$$XVAL("cedos",vals)
"RTN","SAMICTRA",89,0)
 i patstatus="sc" d OUT(para_$g(@dict@("study_complete")))
"RTN","SAMICTRA",90,0)
 ;
"RTN","SAMICTRA",91,0)
 ;# Radiologist
"RTN","SAMICTRA",92,0)
 i $$XVAL("cerad",vals)'="" d  ;
"RTN","SAMICTRA",93,0)
 . d OUT("Interpreted by: "_$$XVAL("cerad",vals)_para)
"RTN","SAMICTRA",94,0)
 ;
"RTN","SAMICTRA",95,0)
 d OUT("<TR><TD></TD></TR>")
"RTN","SAMICTRA",96,0)
 ; # LungRADS
"RTN","SAMICTRA",97,0)
 ;
"RTN","SAMICTRA",98,0)
 d OUT("<TR><TD>")
"RTN","SAMICTRA",99,0)
 n lrstyle
"RTN","SAMICTRA",100,0)
 i $$XVAL("celrc",vals)'="" s lrstyle=1 ; dom's style
"RTN","SAMICTRA",101,0)
 e  s lrstyle=0 ; artit's style
"RTN","SAMICTRA",102,0)
 s lrstyle=0
"RTN","SAMICTRA",103,0)
 ;
"RTN","SAMICTRA",104,0)
 d  ;
"RTN","SAMICTRA",105,0)
 . ;q  ; LUNGRADS moved to SAMICTR4
"RTN","SAMICTRA",106,0)
 . n lradModifiers
"RTN","SAMICTRA",107,0)
 . s lradModifiers=$$XVAL("celradc",vals)_$$XVAL("celrads",vals)
"RTN","SAMICTRA",108,0)
 . ;
"RTN","SAMICTRA",109,0)
 . i ($$XVAL("celrad",vals)'="-")&($$XVAL("celrad",vals)'="") d  ;
"RTN","SAMICTRA",110,0)
 . . d OUT("The LungRADS category for this scan is: "_$$XVAL("celrad",vals)_" "_lradModifiers)
"RTN","SAMICTRA",111,0)
 . . d OUT(para)
"RTN","SAMICTRA",112,0)
 ;
"RTN","SAMICTRA",113,0)
 d OUT("</TD></TR>")
"RTN","SAMICTRA",114,0)
 ;
"RTN","SAMICTRA",115,0)
 d OUT("<TR><TD><TABLE><TR><TD WIDTH=20></TD><TD>")
"RTN","SAMICTRA",116,0)
 q
"RTN","SAMICTRA",117,0)
 ;
"RTN","SAMICTRA",118,0)
 ;
"RTN","SAMICTRA",119,0)
OUT(ln) ;
"RTN","SAMICTRA",120,0)
 s cnt=cnt+1
"RTN","SAMICTRA",121,0)
 n lnn
"RTN","SAMICTRA",122,0)
 ;s debug=1
"RTN","SAMICTRA",123,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTRA",124,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTRA",125,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTRA",126,0)
 . i ln["<T" q  ; no markup
"RTN","SAMICTRA",127,0)
 . i ln["</" q  ; no markup
"RTN","SAMICTRA",128,0)
 . n zs s zs=$STACK
"RTN","SAMICTRA",129,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTRA",130,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTRA",131,0)
 q
"RTN","SAMICTRA",132,0)
 ;
"RTN","SAMICTRA",133,0)
HOUT(ln) ;
"RTN","SAMICTRA",134,0)
 d OUT("<p><span class='sectionhead'>"_ln_"</span>")
"RTN","SAMICTRA",135,0)
 q
"RTN","SAMICTRA",136,0)
 ;
"RTN","SAMICTRA",137,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMICTRA",138,0)
 ; vals is passed by name
"RTN","SAMICTRA",139,0)
 n zr
"RTN","SAMICTRA",140,0)
 s zr=$g(@vals@(var))
"RTN","SAMICTRA",141,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMICTRA",142,0)
 q zr
"RTN","SAMICTRA",143,0)
 ;
"RTN","SAMICTRA",144,0)
XSUB(var,vals,dict,valdx) ; extrinsic which returns the dictionary value defined by var
"RTN","SAMICTRA",145,0)
 ; vals and dict are passed by name
"RTN","SAMICTRA",146,0)
 ; valdx is used for nodules ala cect2co with the nodule number included
"RTN","SAMICTRA",147,0)
 ;n dict s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTRA",148,0)
 n zr,zv,zdx
"RTN","SAMICTRA",149,0)
 s zdx=$g(valdx)
"RTN","SAMICTRA",150,0)
 i zdx="" s zdx=var
"RTN","SAMICTRA",151,0)
 s zv=$g(@vals@(zdx))
"RTN","SAMICTRA",152,0)
 ;i zv="" s zr="["_var_"]" q zr
"RTN","SAMICTRA",153,0)
 i zv="" s zr="" q zr
"RTN","SAMICTRA",154,0)
 s zr=$g(@dict@(var,zv))
"RTN","SAMICTRA",155,0)
 ;i zr="" s zr="["_var_","_zv_"]"
"RTN","SAMICTRA",156,0)
 q zr
"RTN","SAMICTRA",157,0)
 ;
"RTN","SAMICTRT")
0^17^B16024017
"RTN","SAMICTRT",1,0)
SAMICTRT ;ven/gpl - CTReport Test Routine ;2018-03-07T18:48Z
"RTN","SAMICTRT",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMICTRT",3,0)
 ;
"RTN","SAMICTRT",4,0)
 ; This routine is for testing only and should not be distributed
"RTN","SAMICTRT",5,0)
 ;
"RTN","SAMICTRT",6,0)
 quit  ; no entry from top
"RTN","SAMICTRT",7,0)
 ;
"RTN","SAMICTRT",8,0)
wsReport(testout,filter) ; web service
"RTN","SAMICTRT",9,0)
 n vapals ; first do vapals report
"RTN","SAMICTRT",10,0)
 d WSREPORT^SAMICTR0(.vapals,.filter)
"RTN","SAMICTRT",11,0)
 n fglb,fglb1,fn,dir
"RTN","SAMICTRT",12,0)
 s fglb=$na(^TMP("SAMITEST",$J))
"RTN","SAMICTRT",13,0)
 k @fglb
"RTN","SAMICTRT",14,0)
 s fglb1=$na(@fglb@(1))
"RTN","SAMICTRT",15,0)
 s fn=$$filename(.filter)
"RTN","SAMICTRT",16,0)
 s dir=$$whereIs("/ctvapals")
"RTN","SAMICTRT",17,0)
 m @fglb=vapals
"RTN","SAMICTRT",18,0)
 d GTF^%ZISH(fglb1,3,dir,"vapals_"_fn_".html")
"RTN","SAMICTRT",19,0)
 ;
"RTN","SAMICTRT",20,0)
 d makeData(fn,.filter) ; data for elcap report generator
"RTN","SAMICTRT",21,0)
 l +ctreport:2 e  d  q  ; need to make go.sh
"RTN","SAMICTRT",22,0)
 d makeGo(fn,.filter)
"RTN","SAMICTRT",23,0)
 zsy "bash /home/osehra/www/ctcontrol/go.sh"
"RTN","SAMICTRT",24,0)
 l -ctreport  ; all done with go.sh
"RTN","SAMICTRT",25,0)
 ;
"RTN","SAMICTRT",26,0)
 d makeFrame(.testout,fn,.filter)
"RTN","SAMICTRT",27,0)
 q
"RTN","SAMICTRT",28,0)
 ;
"RTN","SAMICTRT",29,0)
filename(filter) ; extrinsic returns the filename for output
"RTN","SAMICTRT",30,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMICTRT",31,0)
 n sid
"RTN","SAMICTRT",32,0)
 s sid=$g(filter("studyid"))
"RTN","SAMICTRT",33,0)
 i sid="" s sid="XXX00102"
"RTN","SAMICTRT",34,0)
 n pien s pien=$$SID2NUM^SAMIHOM3(sid)
"RTN","SAMICTRT",35,0)
 n fname,lname
"RTN","SAMICTRT",36,0)
 s fname=@root@(pien,"sinamef")
"RTN","SAMICTRT",37,0)
 s lname=@root@(pien,"sinamel")
"RTN","SAMICTRT",38,0)
 q lname_"_"_fname
"RTN","SAMICTRT",39,0)
 ;
"RTN","SAMICTRT",40,0)
makeGo(fn,filter) ; creates a bash script to run the elcap report
"RTN","SAMICTRT",41,0)
 n fglb,fglb1,dir,destdir
"RTN","SAMICTRT",42,0)
 s fglb=$na(^TMP("SAMITEST",$J))
"RTN","SAMICTRT",43,0)
 k @fglb
"RTN","SAMICTRT",44,0)
 s fglb1=$na(@fglb@(1))
"RTN","SAMICTRT",45,0)
 s destdir=$$whereIs("/ctelcap")
"RTN","SAMICTRT",46,0)
 n fname,lname,sid
"RTN","SAMICTRT",47,0)
 s fname=$p(fn,"_",2)
"RTN","SAMICTRT",48,0)
 s lname=$p(fn,"_",1)
"RTN","SAMICTRT",49,0)
 s sid=$g(filter("studyid"))
"RTN","SAMICTRT",50,0)
 i sid="" s sid="XXX00102"
"RTN","SAMICTRT",51,0)
 ;script run command redacted
"RTN","SAMICTRT",52,0)
 s dir="/home/osehra/www/ctcontrol/"
"RTN","SAMICTRT",53,0)
 d GTF^%ZISH(fglb1,3,dir,"go.sh") 
"RTN","SAMICTRT",54,0)
 q
"RTN","SAMICTRT",55,0)
 ;
"RTN","SAMICTRT",56,0)
makeFrame(out,fn,filter) ; creates an html file with a frame in /ctcompare
"RTN","SAMICTRT",57,0)
 n fglb,fglb1,dir
"RTN","SAMICTRT",58,0)
 s fglb=$na(^TMP("SAMITEST",$J))
"RTN","SAMICTRT",59,0)
 k @fglb
"RTN","SAMICTRT",60,0)
 s fglb1=$na(@fglb@(1))
"RTN","SAMICTRT",61,0)
 s dir=$$whereIs("/ctcompare")
"RTN","SAMICTRT",62,0)
 s @fglb@(1)="<html><head></head>"
"RTN","SAMICTRT",63,0)
 s @fglb@(2)=" <frameset cols=""50,50"">"
"RTN","SAMICTRT",64,0)
 s @fglb@(3)="    <frame src=""/resources/ctelcap/elcap_"_fn_".html"" name=""ELCAP"">"
"RTN","SAMICTRT",65,0)
 s @fglb@(4)="   <frame src=""/resources/ctvapals/vapals_"_fn_".html"" name=""VAPALS"">"
"RTN","SAMICTRT",66,0)
 s @fglb@(5)="   </frameset></html>"
"RTN","SAMICTRT",67,0)
 d GTF^%ZISH(fglb1,3,dir,fn_".html")
"RTN","SAMICTRT",68,0)
 ;
"RTN","SAMICTRT",69,0)
 s out=fglb
"RTN","SAMICTRT",70,0)
 q
"RTN","SAMICTRT",71,0)
 ;
"RTN","SAMICTRT",72,0)
makeData(fn,filter) ; creates an elcap compatible data file
"RTN","SAMICTRT",73,0)
 n sid,form
"RTN","SAMICTRT",74,0)
 s sid=$g(filter("studyid"))
"RTN","SAMICTRT",75,0)
 q:sid=""
"RTN","SAMICTRT",76,0)
 s form=$g(filter("form"))
"RTN","SAMICTRT",77,0)
 q:form=""
"RTN","SAMICTRT",78,0)
 n fglb s fglb=$na(^TMP("SAMITEST",$J))
"RTN","SAMICTRT",79,0)
 n fglb1 s fglb1=$na(@fglb@(1))
"RTN","SAMICTRT",80,0)
 ;
"RTN","SAMICTRT",81,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMICTRT",82,0)
 q:root=""
"RTN","SAMICTRT",83,0)
 ;
"RTN","SAMICTRT",84,0)
 n cnt s cnt=0
"RTN","SAMICTRT",85,0)
 n groot s groot=$na(@root@("graph",sid,form))
"RTN","SAMICTRT",86,0)
 n zi s zi=""
"RTN","SAMICTRT",87,0)
 f  s zi=$o(@groot@(zi)) q:zi=""  d  ;
"RTN","SAMICTRT",88,0)
 . q:zi[" "
"RTN","SAMICTRT",89,0)
 . s cnt=cnt+1
"RTN","SAMICTRT",90,0)
 . n ln
"RTN","SAMICTRT",91,0)
 . s ln=zi_"="_$g(@groot@(zi))
"RTN","SAMICTRT",92,0)
 . s @fglb@(cnt)=ln
"RTN","SAMICTRT",93,0)
 n dir s dir=$$whereIs("/ctdata")
"RTN","SAMICTRT",94,0)
 d GTF^%ZISH(fglb1,3,dir,fn_".txt")
"RTN","SAMICTRT",95,0)
 k @fglb
"RTN","SAMICTRT",96,0)
 q
"RTN","SAMICTRT",97,0)
 ;
"RTN","SAMICTRT",98,0)
testdata ;
"RTN","SAMICTRT",99,0)
 s filter("studyid")="XXX00102"
"RTN","SAMICTRT",100,0)
 s filter("form")="ceform-2018-10-09"
"RTN","SAMICTRT",101,0)
 s pgraph=$na(^%wd(17.040801,15,102))
"RTN","SAMICTRT",102,0)
 s name=@pgraph@("sinamel")_"-"_@pgraph@("sinamef")
"RTN","SAMICTRT",103,0)
 d makeData(name,.filter)
"RTN","SAMICTRT",104,0)
 q
"RTN","SAMICTRT",105,0)
 ;
"RTN","SAMICTRT",106,0)
whereIs(dirname) ; extrinsic which returns a directory path
"RTN","SAMICTRT",107,0)
 n root s root=$$setroot^%wd("seeGraph")
"RTN","SAMICTRT",108,0)
 q:root=""
"RTN","SAMICTRT",109,0)
 n dien,dir
"RTN","SAMICTRT",110,0)
 s dien=$o(@root@("graph","ops",dirname,"distdir",""))
"RTN","SAMICTRT",111,0)
 i $o(@root@("graph",dien,"type",""))'="directory" q  ;
"RTN","SAMICTRT",112,0)
 s dir=$o(@root@("graph",dien,"localdir",""))
"RTN","SAMICTRT",113,0)
 i dir'="" s dir=dir_"/"
"RTN","SAMICTRT",114,0)
 q dir
"RTN","SAMICTRT",115,0)
 ;
"RTN","SAMICTRX")
0^18^B1378968
"RTN","SAMICTRX",1,0)
SAMICTRX ;ven/gpl - ielcap: forms ; 12/28/18 9:16am
"RTN","SAMICTRX",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMICTRX",3,0)
 ;
"RTN","SAMICTRX",4,0)
 ;
"RTN","SAMICTRX",5,0)
 quit  ; no entry from top
"RTN","SAMICTRX",6,0)
 ;
"RTN","SAMICTRX",7,0)
 ;NAME HERE
"RTN","SAMICTRX",8,0)
 ;
"RTN","SAMICTRX",9,0)
OUT(ln) ;
"RTN","SAMICTRX",10,0)
 s cnt=cnt+1
"RTN","SAMICTRX",11,0)
 n lnn
"RTN","SAMICTRX",12,0)
 ;s debug=1
"RTN","SAMICTRX",13,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTRX",14,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTRX",15,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTRX",16,0)
 . i ln["<" q  ; no markup
"RTN","SAMICTRX",17,0)
 . n zs s zs=$STACK
"RTN","SAMICTRX",18,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTRX",19,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTRX",20,0)
 q
"RTN","SAMICTRX",21,0)
 ;
"RTN","SAMICTRX",22,0)
HOUT(ln) ;
"RTN","SAMICTRX",23,0)
 d OUT("<p><span class='sectionhead'>"_ln_"</span>")
"RTN","SAMICTRX",24,0)
 q
"RTN","SAMICTRX",25,0)
 ;
"RTN","SAMICTRX",26,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMICTRX",27,0)
 ; vals is passed by name
"RTN","SAMICTRX",28,0)
 n zr
"RTN","SAMICTRX",29,0)
 s zr=$g(@vals@(var))
"RTN","SAMICTRX",30,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMICTRX",31,0)
 q zr
"RTN","SAMICTRX",32,0)
 ;
"RTN","SAMICTRX",33,0)
XSUB(var,vals,dict,valdx) ; extrinsic which returns the dictionary value defined by var
"RTN","SAMICTRX",34,0)
 ; vals and dict are passed by name
"RTN","SAMICTRX",35,0)
 ; valdx is used for nodules ala cect2co with the nodule number included
"RTN","SAMICTRX",36,0)
 ;n dict s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTRX",37,0)
 n zr,zv,zdx
"RTN","SAMICTRX",38,0)
 s zdx=$g(valdx)
"RTN","SAMICTRX",39,0)
 i zdx="" s zdx=var
"RTN","SAMICTRX",40,0)
 s zv=$g(@vals@(zdx))
"RTN","SAMICTRX",41,0)
 ;i zv="" s zr="["_var_"]" q zr
"RTN","SAMICTRX",42,0)
 i zv="" s zr="" q zr
"RTN","SAMICTRX",43,0)
 s zr=$g(@dict@(var,zv))
"RTN","SAMICTRX",44,0)
 ;i zr="" s zr="["_var_","_zv_"]"
"RTN","SAMICTRX",45,0)
 q zr
"RTN","SAMICTRX",46,0)
 ;
"RTN","SAMICTT0")
0^19^B97674764
"RTN","SAMICTT0",1,0)
SAMICTT0 ;ven/gpl - ctreport text main ;2021-05-21T20:47Z
"RTN","SAMICTT0",2,0)
 ;;18.0;SAMI;**4,10,11**;2020-01;Build 1
"RTN","SAMICTT0",3,0)
 ;;1.18.0.11+i11
"RTN","SAMICTT0",4,0)
 ;
"RTN","SAMICTT0",5,0)
 ; SAMICTT0 contains a web route & associated subroutines to produce
"RTN","SAMICTT0",6,0)
 ; the ELCAP CT Report in text format (route ctreport, format text).
"RTN","SAMICTT0",7,0)
 ; SAMICTT* routines serve web service interfaces WSVAPALS^SAMIHOM3
"RTN","SAMICTT0",8,0)
 ; (the main VAPALS-ELCAP post web service) & WSHOME^SAMIHOM3 (the
"RTN","SAMICTT0",9,0)
 ; VAPALS-ELCAP home-page service).
"RTN","SAMICTT0",10,0)
 ;
"RTN","SAMICTT0",11,0)
 quit  ; no entry from top
"RTN","SAMICTT0",12,0)
 ;
"RTN","SAMICTT0",13,0)
 ;
"RTN","SAMICTT0",14,0)
 ;
"RTN","SAMICTT0",15,0)
 ;@section 0 primary development
"RTN","SAMICTT0",16,0)
 ;
"RTN","SAMICTT0",17,0)
 ;
"RTN","SAMICTT0",18,0)
 ;
"RTN","SAMICTT0",19,0)
 ;@license see routine SAMIUL
"RTN","SAMICTT0",20,0)
 ;@documentation see SAMICTUL
"RTN","SAMICTT0",21,0)
 ;@contents
"RTN","SAMICTT0",22,0)
 ; WSREPORT web route: ctreport in text format
"RTN","SAMICTT0",23,0)
 ; OUT output a line of ct report
"RTN","SAMICTT0",24,0)
 ; OUTOLD old version of out
"RTN","SAMICTT0",25,0)
 ; HOUT output a ct report header line
"RTN","SAMICTT0",26,0)
 ; $$XVAL patient value for var
"RTN","SAMICTT0",27,0)
 ; $$XSUB dictionary value defined by var
"RTN","SAMICTT0",28,0)
 ; GETFILTR fill in the filter for Ct Eval for sid
"RTN","SAMICTT0",29,0)
 ; T1 test
"RTN","SAMICTT0",30,0)
 ;
"RTN","SAMICTT0",31,0)
 ;
"RTN","SAMICTT0",32,0)
 ;
"RTN","SAMICTT0",33,0)
 ;@section 1 wsi WSREPORT & related subroutines
"RTN","SAMICTT0",34,0)
 ;
"RTN","SAMICTT0",35,0)
 ;
"RTN","SAMICTT0",36,0)
 ;
"RTN","SAMICTT0",37,0)
 ;@wsr WSREPORT^SAMICTT0
"RTN","SAMICTT0",38,0)
WSREPORT(return,filter) ; web route: ctreport in text format
"RTN","SAMICTT0",39,0)
 ;
"RTN","SAMICTT0",40,0)
 ;@called-by
"RTN","SAMICTT0",41,0)
 ; WSNOTE^SAMINOT3
"RTN","SAMICTT0",42,0)
 ;  (called-by wsi WSVAPALS^SAMIHOM3)
"RTN","SAMICTT0",43,0)
 ;    (called by wsi WSHOME^SAMIHOM3)
"RTN","SAMICTT0",44,0)
 ;  (sibling to wri WSREPORT^SAMICTR0, keep in sync)
"RTN","SAMICTT0",45,0)
 ;@calls
"RTN","SAMICTT0",46,0)
 ; INIT2GPH^SAMICTD2
"RTN","SAMICTT0",47,0)
 ; $$setroot^%wd
"RTN","SAMICTT0",48,0)
 ; $$XVAL
"RTN","SAMICTT0",49,0)
 ; OUT
"RTN","SAMICTT0",50,0)
 ; $$XSUB
"RTN","SAMICTT0",51,0)
 ; HOUT
"RTN","SAMICTT0",52,0)
 ; NODULES^SAMICTT1
"RTN","SAMICTT0",53,0)
 ; OTHRLUNG^SAMICTT2
"RTN","SAMICTT0",54,0)
 ; EMPHYS^SAMICTT3
"RTN","SAMICTT0",55,0)
 ; BREAST^SAMICTT4
"RTN","SAMICTT0",56,0)
 ; IMPRSN^SAMICTT9
"RTN","SAMICTT0",57,0)
 ; RCMND^SAMICTTA
"RTN","SAMICTT0",58,0)
 ;
"RTN","SAMICTT0",59,0)
 s debug=0
"RTN","SAMICTT0",60,0)
 n outmode s outmode="go"
"RTN","SAMICTT0",61,0)
 n line s line=""
"RTN","SAMICTT0",62,0)
 i $g(filter("debug"))=1 s debug=1
"RTN","SAMICTT0",63,0)
 ;
"RTN","SAMICTT0",64,0)
 ;s rtn=$na(^TMP("SAMICTT",$J))
"RTN","SAMICTT0",65,0)
 s rtn="return"
"RTN","SAMICTT0",66,0)
 k @rtn
"RTN","SAMICTT0",67,0)
 s HTTPRSP("mime")="text/html"
"RTN","SAMICTT0",68,0)
 ;
"RTN","SAMICTT0",69,0)
 n cnt s cnt=0 ; line number
"RTN","SAMICTT0",70,0)
 ;
"RTN","SAMICTT0",71,0)
 ; set up dictionary and patient values
"RTN","SAMICTT0",72,0)
 ;
"RTN","SAMICTT0",73,0)
 n dict,vals
"RTN","SAMICTT0",74,0)
 ;d INIT^SAMICTD2("dict")
"RTN","SAMICTT0",75,0)
 s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTT0",76,0)
 s dict=$na(@dict@("cteval-dict"))
"RTN","SAMICTT0",77,0)
 i $g(@dict@("pet"))="" d INIT2GPH^SAMICTD2 ; init dictionary 1st time
"RTN","SAMICTT0",78,0)
 n si
"RTN","SAMICTT0",79,0)
 s si=$g(filter("studyid"))
"RTN","SAMICTT0",80,0)
 i si="" d  ;
"RTN","SAMICTT0",81,0)
 . s si="XXX00102"
"RTN","SAMICTT0",82,0)
 q:si=""
"RTN","SAMICTT0",83,0)
 n samikey
"RTN","SAMICTT0",84,0)
 s samikey=$g(filter("form"))
"RTN","SAMICTT0",85,0)
 i samikey="" d  ;
"RTN","SAMICTT0",86,0)
 . s samikey="ceform-2018-10-09"
"RTN","SAMICTT0",87,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMICTT0",88,0)
 i $g(filter("studyid"))="" s root=$$setroot^%wd("vapals-patients")
"RTN","SAMICTT0",89,0)
 s vals=$na(@root@("graph",si,samikey))
"RTN","SAMICTT0",90,0)
 ;W !,vals
"RTN","SAMICTT0",91,0)
 ;zwr @vals@(*)
"RTN","SAMICTT0",92,0)
 i '$d(@vals) d  q  ;
"RTN","SAMICTT0",93,0)
 . w !,"error, patient values not found"
"RTN","SAMICTT0",94,0)
 ;
"RTN","SAMICTT0",95,0)
 ; report parameters
"RTN","SAMICTT0",96,0)
 ;
"RTN","SAMICTT0",97,0)
 n nt,sectionheader,dummy,cac,tex,para,legout
"RTN","SAMICTT0",98,0)
 ;; n lang,lanread
"RTN","SAMICTT0",99,0)
 ;
"RTN","SAMICTT0",100,0)
 s nt=1
"RTN","SAMICTT0",101,0)
 s sectionheader=1
"RTN","SAMICTT0",102,0)
 ;;s dummy="******"
"RTN","SAMICTT0",103,0)
 s cac=""
"RTN","SAMICTT0",104,0)
 n cacrec s cacrec=""
"RTN","SAMICTT0",105,0)
 ;;s tex=0
"RTN","SAMICTT0",106,0)
 ;s para="<p>"
"RTN","SAMICTT0",107,0)
 ;s para=$char(13,10)
"RTN","SAMICTT0",108,0)
 s para=""
"RTN","SAMICTT0",109,0)
 ;;s legout=0
"RTN","SAMICTT0",110,0)
 n qheader s qheader=0
"RTN","SAMICTT0",111,0)
 ;
"RTN","SAMICTT0",112,0)
 n lang s lang=""
"RTN","SAMICTT0",113,0)
 n langread s langread=0
"RTN","SAMICTT0",114,0)
 ;
"RTN","SAMICTT0",115,0)
 n auth s auth("perm")="a"
"RTN","SAMICTT0",116,0)
 s auth("inst")=$g(filter("auth"))
"RTN","SAMICTT0",117,0)
 ;
"RTN","SAMICTT0",118,0)
 n newct s newct=0
"RTN","SAMICTT0",119,0)
 i $$XVAL("ceoppa",vals)'="" s newct=1
"RTN","SAMICTT0",120,0)
 ;
"RTN","SAMICTT0",121,0)
 n registryForm s registryForm=0
"RTN","SAMICTT0",122,0)
 i $$XVAL("ceaf",vals)'="" s registryForm=1
"RTN","SAMICTT0",123,0)
 ;
"RTN","SAMICTT0",124,0)
 ;d OUT("<HTML>")
"RTN","SAMICTT0",125,0)
 ;d OUT("<HEAD>")
"RTN","SAMICTT0",126,0)
 ;d OUT("<!-- Calling TR: CT Evaluation Report -->")
"RTN","SAMICTT0",127,0)
 ;d OUT("<TITLE>CT Evaluation Report</TITLE>")
"RTN","SAMICTT0",128,0)
 ;d OUT("<link rel='stylesheet' href='/css/report.css'>")
"RTN","SAMICTT0",129,0)
 ;d OUT("</HEAD>")
"RTN","SAMICTT0",130,0)
 ;d OUT("<BODY BGCOLOR=""#ffffff"" TEXT=""#000000"">")
"RTN","SAMICTT0",131,0)
 ;;d OUT("<TABLE border=""0"" cellspacing=""0"" cellpadding=""3"" WIDTH=""640""><TR><TD>")
"RTN","SAMICTT0",132,0)
 ;d OUT("<FONT SIZE=""+2""><CENTER>")
"RTN","SAMICTT0",133,0)
 ;d OUT("<!-- Calling TR: CT Evaluation Report -->")
"RTN","SAMICTT0",134,0)
 ;d OUT("<B>CT Evaluation Report</B>")
"RTN","SAMICTT0",135,0)
 d OUT("CT Evaluation Report")
"RTN","SAMICTT0",136,0)
 ;d OUT("</CENTER></FONT>")
"RTN","SAMICTT0",137,0)
 ;d OUT("</TD></TR><TR><TD>")
"RTN","SAMICTT0",138,0)
 ;d OUT("<HR SIZE=""2"" WIDTH=""100%"" ALIGN=""center"" NOSHADE>")
"RTN","SAMICTT0",139,0)
 ;d OUT("</TD></TR>")
"RTN","SAMICTT0",140,0)
 ;
"RTN","SAMICTT0",141,0)
 ;d OUT("<!-- patient information -->")
"RTN","SAMICTT0",142,0)
 ;d OUT("<TR><TD><TABLE border=""0"" cellspacing=""0"" cellpadding=""3"" WIDTH=""640"">")
"RTN","SAMICTT0",143,0)
 ;
"RTN","SAMICTT0",144,0)
 ; generate header
"RTN","SAMICTT0",145,0)
 ;
"RTN","SAMICTT0",146,0)
 d  ;
"RTN","SAMICTT0",147,0)
 . n pname
"RTN","SAMICTT0",148,0)
 . ;s pname=$$XVAL("sinamel",vals)_", "_$$XVAL("sinamef",vals)
"RTN","SAMICTT0",149,0)
 . s pname=$$XVAL("saminame",vals)
"RTN","SAMICTT0",150,0)
 . d OUT("Participant Name: "_pname)
"RTN","SAMICTT0",151,0)
 ;d OUT("<TR><TD WIDTH=""180""><B>Participant Name:</B></TD><TD WIDTH=""365"">")
"RTN","SAMICTT0",152,0)
 ;d OUT($$XVAL("sinamel",vals)_", "_$$XVAL("sinamef",vals))
"RTN","SAMICTT0",153,0)
 ;d OUT("</TD>")
"RTN","SAMICTT0",154,0)
 ;
"RTN","SAMICTT0",155,0)
 d  ;
"RTN","SAMICTT0",156,0)
 . n sid s sid=$$XVAL("sisid",vals)
"RTN","SAMICTT0",157,0)
 . d OUT("Study ID: "_sid)
"RTN","SAMICTT0",158,0)
 ;d OUT("<TD WIDTH=""120""><B>Study ID:</B></TD><TD WIDTH=""75"">")
"RTN","SAMICTT0",159,0)
 ;d OUT($$XVAL("sisid",vals))
"RTN","SAMICTT0",160,0)
 ;d OUT("</TD>")
"RTN","SAMICTT0",161,0)
 ;
"RTN","SAMICTT0",162,0)
 d  ;
"RTN","SAMICTT0",163,0)
 . n etype s etype=$$XSUB("cetex",vals,dict)_" "_$$XSUB("cectp",vals,dict)
"RTN","SAMICTT0",164,0)
 . d OUT("Type of Examination: "_etype)
"RTN","SAMICTT0",165,0)
 ;d OUT("<TR><TD><B>Type of Examination:</B></TD><TD>")
"RTN","SAMICTT0",166,0)
 ;d OUT($$XSUB("cetex",vals,dict)_" "_$$XSUB("cectp",vals,dict))
"RTN","SAMICTT0",167,0)
 ;d OUT("</TD>")
"RTN","SAMICTT0",168,0)
 ;d OUT("<TD> &nbsp; </TD><TD> &nbsp; </TD></TR>")
"RTN","SAMICTT0",169,0)
 ;
"RTN","SAMICTT0",170,0)
 d  ;
"RTN","SAMICTT0",171,0)
 . n edate s edate=$$XVAL("cedos",vals)
"RTN","SAMICTT0",172,0)
 . d OUT("Examination Date: "_edate)
"RTN","SAMICTT0",173,0)
 ;d OUT("<TR><TD><B>Examination Date:</B></TD><TD>")
"RTN","SAMICTT0",174,0)
 ;d OUT($$XVAL("cedos",vals))
"RTN","SAMICTT0",175,0)
 ;
"RTN","SAMICTT0",176,0)
 ;i $$XVAL("sidob",vals)'=-1 d  ;
"RTN","SAMICTT0",177,0)
 ;. d OUT("<TD><B>Date of Birth:</B></TD><TD>")
"RTN","SAMICTT0",178,0)
 ;. d OUT($$XVAL("sidob",vals))
"RTN","SAMICTT0",179,0)
 ;e  d OUT("<TD> &nbsp; </TD><TD> &nbsp; </TD></TR>")
"RTN","SAMICTT0",180,0)
 ;
"RTN","SAMICTT0",181,0)
 d  ;
"RTN","SAMICTT0",182,0)
 . n dob s dob=$$XVAL("sidob",vals)
"RTN","SAMICTT0",183,0)
 . i dob>0 d OUT("Date of Birth: "_dob)
"RTN","SAMICTT0",184,0)
 . d OUT("")
"RTN","SAMICTT0",185,0)
 ;i $$XVAL("sidob",vals)>0 d  ;
"RTN","SAMICTT0",186,0)
 ;. d OUT("<TD><B>Date of Birth:</B></TD><TD>")
"RTN","SAMICTT0",187,0)
 ;. d OUT($$XVAL("sidob",vals))
"RTN","SAMICTT0",188,0)
 ;. d OUT("</TD></TR>")
"RTN","SAMICTT0",189,0)
 ;e  d  ;
"RTN","SAMICTT0",190,0)
 ;. d OUT("<TD> &nbsp; </TD><TD> &nbsp; </TD></TR>")
"RTN","SAMICTT0",191,0)
 ;
"RTN","SAMICTT0",192,0)
 ;# End of Header
"RTN","SAMICTT0",193,0)
 ;
"RTN","SAMICTT0",194,0)
 ;d OUT("</TABLE>")
"RTN","SAMICTT0",195,0)
 ;;d OUT("</TD></TR><TR><TD>")
"RTN","SAMICTT0",196,0)
 ;d OUT("<HR SIZE=""2"" WIDTH=""100%"" ALIGN=""center"" NOSHADE>")
"RTN","SAMICTT0",197,0)
 ;d OUT("</TD></TR>")
"RTN","SAMICTT0",198,0)
 ;d OUT("<!-- report -->")
"RTN","SAMICTT0",199,0)
 ;d OUT("<TR><TD>")
"RTN","SAMICTT0",200,0)
 ;d OUT("<FONT SIZE=""+2""><B>")
"RTN","SAMICTT0",201,0)
 ;d OUT("Report:")
"RTN","SAMICTT0",202,0)
 ;d OUT("</B></FONT>")
"RTN","SAMICTT0",203,0)
 ;d OUT("</TD></TR><TR><TD><TABLE><TR><TD WIDTH=20></TD><TD>")
"RTN","SAMICTT0",204,0)
 d OUT("Report:")
"RTN","SAMICTT0",205,0)
 ;
"RTN","SAMICTT0",206,0)
 s outmode="hold"
"RTN","SAMICTT0",207,0)
 s line=""
"RTN","SAMICTT0",208,0)
 i $$XVAL("ceclin",vals)'="" d  ;
"RTN","SAMICTT0",209,0)
 . d HOUT("Clinical Information: ")
"RTN","SAMICTT0",210,0)
 . d OUT($$XVAL("ceclin",vals))
"RTN","SAMICTT0",211,0)
 . s outmode="go" d OUT("")
"RTN","SAMICTT0",212,0)
 ;
"RTN","SAMICTT0",213,0)
 s outmode="hold"
"RTN","SAMICTT0",214,0)
 n nopri s nopri=1
"RTN","SAMICTT0",215,0)
 d HOUT("Comparison CT Scans: ")
"RTN","SAMICTT0",216,0)
 if $$XVAL("cedcs",vals)'="" d  ;
"RTN","SAMICTT0",217,0)
 . d OUT($$XSUB("cetex",vals,dict)_". ")
"RTN","SAMICTT0",218,0)
 . d OUT("Comparisons: "_$$XVAL("cedcs",vals))
"RTN","SAMICTT0",219,0)
 . s nopri=0
"RTN","SAMICTT0",220,0)
 if $$XVAL("cedps",vals)'="" d  ;
"RTN","SAMICTT0",221,0)
 . d OUT(" "_$$XVAL("cedps",vals))
"RTN","SAMICTT0",222,0)
 . s nopri=0
"RTN","SAMICTT0",223,0)
 d:nopri OUT("None")
"RTN","SAMICTT0",224,0)
 s outmode="go" d OUT("")
"RTN","SAMICTT0",225,0)
 ;
"RTN","SAMICTT0",226,0)
 s outmode="hold"
"RTN","SAMICTT0",227,0)
 d HOUT(" Description: ")
"RTN","SAMICTT0",228,0)
 i $$XVAL("cectp",vals)="i" d  ;
"RTN","SAMICTT0",229,0)
 . d OUT("Limited Diagnostic CT examination was performed. ")
"RTN","SAMICTT0",230,0)
 e  d  ;
"RTN","SAMICTT0",231,0)
 . d OUT("CT examination of the entire thorax was performed at "_$$XSUB("cectp",vals,dict)_" settings. ")
"RTN","SAMICTT0",232,0)
 ;
"RTN","SAMICTT0",233,0)
 i $$XVAL("cectrst",vals)'="" d  ;
"RTN","SAMICTT0",234,0)
 . d OUT(" Images were obtained at "_$$XVAL("cectrst",vals)_" mm slice thickness. ")
"RTN","SAMICTT0",235,0)
 . d OUT(" Multiplanar reconstructions were performed. ")
"RTN","SAMICTT0",236,0)
 ;
"RTN","SAMICTT0",237,0)
 i newct d  ;
"RTN","SAMICTT0",238,0)
 . n nvadbo s nvadbo=1
"RTN","SAMICTT0",239,0)
 . n ii
"RTN","SAMICTT0",240,0)
 . f ii="ceoaa","ceaga","ceasa","ceala","ceapa","ceaaa","ceaka" d  ;
"RTN","SAMICTT0",241,0)
 . . i $$XVAL(ii,vals)="y" set nvadbo=0
"RTN","SAMICTT0",242,0)
 . ;
"RTN","SAMICTT0",243,0)
 . i nvadbo=1 d  ;
"RTN","SAMICTT0",244,0)
 . . d OUT("Upper abdominal images were not acquired on the current scan due to its limited nature. ")
"RTN","SAMICTT0",245,0)
 s outmode="go" d OUT("")
"RTN","SAMICTT0",246,0)
 ;
"RTN","SAMICTT0",247,0)
 ; lung nodules
"RTN","SAMICTT0",248,0)
 ;
"RTN","SAMICTT0",249,0)
 ;d OUT("")
"RTN","SAMICTT0",250,0)
 d HOUT("Lung Nodules:")
"RTN","SAMICTT0",251,0)
 ;d OUT("")
"RTN","SAMICTT0",252,0)
 ;
"RTN","SAMICTT0",253,0)
 ; see if there are any nodules using the cectXch fields
"RTN","SAMICTT0",254,0)
 ;
"RTN","SAMICTT0",255,0)
 n ij,hasnodules s hasnodules=0
"RTN","SAMICTT0",256,0)
 f ij=1:1:10 i ($$XVAL("cect"_ij_"ch",vals)'="")&($$XVAL("cect"_ij_"ch",vals)'="-") s hasnodules=1
"RTN","SAMICTT0",257,0)
 ;
"RTN","SAMICTT0",258,0)
 ; check for small nodule checkboxes
"RTN","SAMICTT0",259,0)
 i $$XVAL("cectancn",vals)=1 s hasnodules=1
"RTN","SAMICTT0",260,0)
 i $$XVAL("cectacn",vals)=1 s hasnodules=1
"RTN","SAMICTT0",261,0)
 ;
"RTN","SAMICTT0",262,0)
 i hasnodules=0 d  ;
"RTN","SAMICTT0",263,0)
 . d OUT(para)
"RTN","SAMICTT0",264,0)
 . d OUT("No pulmonary nodules are seen. "_para)
"RTN","SAMICTT0",265,0)
 ;
"RTN","SAMICTT0",266,0)
 ;i $$XVAL("cennod",vals)="" d  ;
"RTN","SAMICTT0",267,0)
 ;. d OUT(para)
"RTN","SAMICTT0",268,0)
 ;. d OUT("No pulmonary nodules are seen. "_para)
"RTN","SAMICTT0",269,0)
 ;e  i $$XVAL("ceanod",vals)="n" d  ;
"RTN","SAMICTT0",270,0)
 ;. d OUT(para)
"RTN","SAMICTT0",271,0)
 ;. d OUT("No pulmonary nodules are seen. "_para)
"RTN","SAMICTT0",272,0)
 ;
"RTN","SAMICTT0",273,0)
 d NODULES^SAMICTT1(rtn,.vals,.dict)
"RTN","SAMICTT0",274,0)
 ;
"RTN","SAMICTT0",275,0)
 d OTHRLUNG^SAMICTT2(rtn,.vals,.dict)
"RTN","SAMICTT0",276,0)
 ;
"RTN","SAMICTT0",277,0)
 d EMPHYS^SAMICTT3(rtn,.vals,.dict)
"RTN","SAMICTT0",278,0)
 ;
"RTN","SAMICTT0",279,0)
 d BREAST^SAMICTT4(rtn,.vals,.dict)
"RTN","SAMICTT0",280,0)
 ;
"RTN","SAMICTT0",281,0)
 d IMPRSN^SAMICTT9(rtn,.vals,.dict)
"RTN","SAMICTT0",282,0)
 ;
"RTN","SAMICTT0",283,0)
 d RCMND^SAMICTTA(rtn,.vals,.dict)
"RTN","SAMICTT0",284,0)
 ;
"RTN","SAMICTT0",285,0)
 ; etc etc
"RTN","SAMICTT0",286,0)
 ;
"RTN","SAMICTT0",287,0)
 d  ;
"RTN","SAMICTT0",288,0)
 . d OUT("References:")
"RTN","SAMICTT0",289,0)
 . d OUT("Recommendations for nodules and other findings are detailed in the I-ELCAP Protocol. ")
"RTN","SAMICTT0",290,0)
 . d OUT("A summary and the full I-ELCAP protocol can be viewed at: http://ielcap.org/protocols")
"RTN","SAMICTT0",291,0)
 ;d OUT("</TABLE>")
"RTN","SAMICTT0",292,0)
 ;d OUT("<p><br></p><p><b>References:</b><br></p>")
"RTN","SAMICTT0",293,0)
 ;d OUT("<p>Recommendations for nodules and other findings are detailed in the I-ELCAP Protocol.<BR>")
"RTN","SAMICTT0",294,0)
 ;d OUT("A summary and the full I-ELCAP protocol can be viewed at: <a href=""http://ielcap.org/protocols"">http://ielcap.org/protocols</a></p>")
"RTN","SAMICTT0",295,0)
 ;d OUT("</TD></TR></TABLE></TD></TR></TABLE>")
"RTN","SAMICTT0",296,0)
 ;s debug=1
"RTN","SAMICTT0",297,0)
 d:$g(debug)  ;
"RTN","SAMICTT0",298,0)
 . n zi s zi=""
"RTN","SAMICTT0",299,0)
 . f  s zi=$o(@vals@(zi)) q:zi=""  d  ;
"RTN","SAMICTT0",300,0)
 . . d OUT(zi_" "_$g(@vals@(zi)))
"RTN","SAMICTT0",301,0)
 ;d OUT("</BODY></HTML>")
"RTN","SAMICTT0",302,0)
 ;
"RTN","SAMICTT0",303,0)
 quit  ; end of wsr WSREPORT^SAMICTT0
"RTN","SAMICTT0",304,0)
 ;
"RTN","SAMICTT0",305,0)
 ;
"RTN","SAMICTT0",306,0)
 ;
"RTN","SAMICTT0",307,0)
OUT(ln) ; output a line of ct report
"RTN","SAMICTT0",308,0)
 ;
"RTN","SAMICTT0",309,0)
 i outmode="hold" s line=line_ln q  ;
"RTN","SAMICTT0",310,0)
 s cnt=cnt+1
"RTN","SAMICTT0",311,0)
 n lnn
"RTN","SAMICTT0",312,0)
 i $g(debug)'=1 s debug=0
"RTN","SAMICTT0",313,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTT0",314,0)
 i outmode="go" d  ;
"RTN","SAMICTT0",315,0)
 . s @rtn@(lnn)=line
"RTN","SAMICTT0",316,0)
 . s line=""
"RTN","SAMICTT0",317,0)
 . s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTT0",318,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTT0",319,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTT0",320,0)
 . i ln["<" q  ; no markup
"RTN","SAMICTT0",321,0)
 . n zs s zs=$STACK
"RTN","SAMICTT0",322,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTT0",323,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTT0",324,0)
 ;
"RTN","SAMICTT0",325,0)
 quit  ; end of OUT
"RTN","SAMICTT0",326,0)
 ;
"RTN","SAMICTT0",327,0)
 ;
"RTN","SAMICTT0",328,0)
 ;
"RTN","SAMICTT0",329,0)
OUTOLD(ln) ; old version of out
"RTN","SAMICTT0",330,0)
 ;
"RTN","SAMICTT0",331,0)
 s cnt=cnt+1
"RTN","SAMICTT0",332,0)
 n lnn
"RTN","SAMICTT0",333,0)
 ;s debug=1
"RTN","SAMICTT0",334,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTT0",335,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTT0",336,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTT0",337,0)
 . i ln["<" q  ; no markup
"RTN","SAMICTT0",338,0)
 . n zs s zs=$STACK
"RTN","SAMICTT0",339,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTT0",340,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTT0",341,0)
 ;
"RTN","SAMICTT0",342,0)
 quit  ; end of OUTOLD
"RTN","SAMICTT0",343,0)
 ;
"RTN","SAMICTT0",344,0)
 ;
"RTN","SAMICTT0",345,0)
 ;
"RTN","SAMICTT0",346,0)
HOUT(ln) ; output a ct report header line
"RTN","SAMICTT0",347,0)
 ;
"RTN","SAMICTT0",348,0)
 d OUT(ln)
"RTN","SAMICTT0",349,0)
 ;d OUT("<p><span class='sectionhead'>"_ln_"</span>")
"RTN","SAMICTT0",350,0)
 ;
"RTN","SAMICTT0",351,0)
 quit  ; end of HOUT
"RTN","SAMICTT0",352,0)
 ;
"RTN","SAMICTT0",353,0)
 ;
"RTN","SAMICTT0",354,0)
 ;
"RTN","SAMICTT0",355,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMICTT0",356,0)
 ;
"RTN","SAMICTT0",357,0)
 ;@input
"RTN","SAMICTT0",358,0)
 ; @vals is passed by name
"RTN","SAMICTT0",359,0)
 ;
"RTN","SAMICTT0",360,0)
 n zr
"RTN","SAMICTT0",361,0)
 s zr=$g(@vals@(var))
"RTN","SAMICTT0",362,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMICTT0",363,0)
 ;
"RTN","SAMICTT0",364,0)
 quit zr ; end of $$XVAL
"RTN","SAMICTT0",365,0)
 ;
"RTN","SAMICTT0",366,0)
 ;
"RTN","SAMICTT0",367,0)
 ;
"RTN","SAMICTT0",368,0)
XSUB(var,vals,dict,valdx) ; extrinsic which returns the dictionary value defined by var
"RTN","SAMICTT0",369,0)
 ;
"RTN","SAMICTT0",370,0)
 ; vals and dict are passed by name
"RTN","SAMICTT0",371,0)
 ; valdx is used for nodules ala cect2co with the nodule number included
"RTN","SAMICTT0",372,0)
 ;
"RTN","SAMICTT0",373,0)
 ;n dict s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTT0",374,0)
 n zr,zv,zdx
"RTN","SAMICTT0",375,0)
 s zdx=$g(valdx)
"RTN","SAMICTT0",376,0)
 i zdx="" s zdx=var
"RTN","SAMICTT0",377,0)
 s zv=$g(@vals@(zdx))
"RTN","SAMICTT0",378,0)
 ;i zv="" s zr="["_var_"]" q zr
"RTN","SAMICTT0",379,0)
 i zv="" s zr="" q zr
"RTN","SAMICTT0",380,0)
 s zr=$g(@dict@(var,zv))
"RTN","SAMICTT0",381,0)
 ;i zr="" s zr="["_var_","_zv_"]"
"RTN","SAMICTT0",382,0)
 ;
"RTN","SAMICTT0",383,0)
 quit zr ; end of $$XSUB
"RTN","SAMICTT0",384,0)
 ;
"RTN","SAMICTT0",385,0)
 ;
"RTN","SAMICTT0",386,0)
 ;
"RTN","SAMICTT0",387,0)
GETFILTR(filter,sid) ; fill in the filter for Ct Eval for sid
"RTN","SAMICTT0",388,0)
 ;
"RTN","SAMICTT0",389,0)
 s filter("studyid")=sid
"RTN","SAMICTT0",390,0)
 n items,zform
"RTN","SAMICTT0",391,0)
 d GETITEMS^SAMICASE("items",sid)
"RTN","SAMICTT0",392,0)
 s zform=$o(items("ceform"))
"RTN","SAMICTT0",393,0)
 s filter("form")=zform
"RTN","SAMICTT0",394,0)
 ;zwr filter
"RTN","SAMICTT0",395,0)
 ;
"RTN","SAMICTT0",396,0)
 quit  ; end of GETFILTR
"RTN","SAMICTT0",397,0)
 ;
"RTN","SAMICTT0",398,0)
 ;
"RTN","SAMICTT0",399,0)
 ;
"RTN","SAMICTT0",400,0)
T1(grtn,debug) ; test
"RTN","SAMICTT0",401,0)
 ;
"RTN","SAMICTT0",402,0)
 n filter
"RTN","SAMICTT0",403,0)
 ;n sid s sid="XXX00333"
"RTN","SAMICTT0",404,0)
 ;n sid s sid="XXX00484"
"RTN","SAMICTT0",405,0)
 n sid s sid="XXX9000001"
"RTN","SAMICTT0",406,0)
 d GETFILTR(.filter,sid)
"RTN","SAMICTT0",407,0)
 i $g(debug)=1 s filter("debug")=1
"RTN","SAMICTT0",408,0)
 d WSNOTE^SAMINOT3(.grtn,.filter)
"RTN","SAMICTT0",409,0)
 ;d WSREPORT^SAMICTT0(.grtn,.filter)
"RTN","SAMICTT0",410,0)
 ;
"RTN","SAMICTT0",411,0)
 quit  ; end of T1
"RTN","SAMICTT0",412,0)
 ;
"RTN","SAMICTT0",413,0)
 ;
"RTN","SAMICTT0",414,0)
 ;
"RTN","SAMICTT0",415,0)
EOR ; end of routine SAMICTT0
"RTN","SAMICTT1")
0^20^B122873178
"RTN","SAMICTT1",1,0)
SAMICTT1 ;ven/gpl - ctreport text nodules ;2021-05-21T20:47Z
"RTN","SAMICTT1",2,0)
 ;;18.0;SAMI;**4,10,11**;2020-01;Build 1
"RTN","SAMICTT1",3,0)
 ;;1.18.0.11+i11
"RTN","SAMICTT1",4,0)
 ;
"RTN","SAMICTT1",5,0)
 ; SAMICTT1 creates the Nodules section of the ELCAP CT Report in text
"RTN","SAMICTT1",6,0)
 ; format.
"RTN","SAMICTT1",7,0)
 ;
"RTN","SAMICTT1",8,0)
 quit  ; no entry from top
"RTN","SAMICTT1",9,0)
 ;
"RTN","SAMICTT1",10,0)
 ;
"RTN","SAMICTT1",11,0)
 ;
"RTN","SAMICTT1",12,0)
 ;@section 0 primary development
"RTN","SAMICTT1",13,0)
 ;
"RTN","SAMICTT1",14,0)
 ;
"RTN","SAMICTT1",15,0)
 ;
"RTN","SAMICTT1",16,0)
 ;@license see routine SAMIUL
"RTN","SAMICTT1",17,0)
 ;@documentation see SAMICTUL
"RTN","SAMICTT1",18,0)
 ;@contents
"RTN","SAMICTT1",19,0)
 ; NODULES nodules section of ctreport in text format
"RTN","SAMICTT1",20,0)
 ; OUT output a line of ct report
"RTN","SAMICTT1",21,0)
 ; HOUT output a ct report header line
"RTN","SAMICTT1",22,0)
 ; $$XVAL patient value for var
"RTN","SAMICTT1",23,0)
 ; $$XSUB dictionary value defined by var
"RTN","SAMICTT1",24,0)
 ;
"RTN","SAMICTT1",25,0)
 ;
"RTN","SAMICTT1",26,0)
 ;
"RTN","SAMICTT1",27,0)
 ;@section 1 NODULES & related subroutines
"RTN","SAMICTT1",28,0)
 ;
"RTN","SAMICTT1",29,0)
 ;
"RTN","SAMICTT1",30,0)
 ;
"RTN","SAMICTT1",31,0)
NODULES(rtn,vals,dict) ; nodules section of ctreport in text format
"RTN","SAMICTT1",32,0)
 ;
"RTN","SAMICTT1",33,0)
 ;@called-by
"RTN","SAMICTT1",34,0)
 ; WSREPORT^SAMICTT0
"RTN","SAMICTT1",35,0)
 ;@calls
"RTN","SAMICTT1",36,0)
 ; $$XVAL
"RTN","SAMICTT1",37,0)
 ; OUT
"RTN","SAMICTT1",38,0)
 ; $$XSUB
"RTN","SAMICTT1",39,0)
 ; HOUT
"RTN","SAMICTT1",40,0)
 ;@input
"RTN","SAMICTT1",41,0)
 ; rtn
"RTN","SAMICTT1",42,0)
 ; vals
"RTN","SAMICTT1",43,0)
 ; dict
"RTN","SAMICTT1",44,0)
 ;@output
"RTN","SAMICTT1",45,0)
 ; nodules section added to cteval report
"RTN","SAMICTT1",46,0)
 ;
"RTN","SAMICTT1",47,0)
 ;# Report on Nodules
"RTN","SAMICTT1",48,0)
 n firstitem
"RTN","SAMICTT1",49,0)
 set firstitem=0
"RTN","SAMICTT1",50,0)
 n outmode s outmode="hold"
"RTN","SAMICTT1",51,0)
 n line s line=""
"RTN","SAMICTT1",52,0)
 n ii set ii=1
"RTN","SAMICTT1",53,0)
 ;# Information for each nodule
"RTN","SAMICTT1",54,0)
 f ii=1:1:10 d  ;
"RTN","SAMICTT1",55,0)
 . i $$XSUB("cectch",vals,dict,"cect"_ii_"ch")="px" q  ;
"RTN","SAMICTT1",56,0)
 . i $$XSUB("cectch",vals,dict,"cect"_ii_"ch")="" q  ;
"RTN","SAMICTT1",57,0)
 . i firstitem=0 d  ;
"RTN","SAMICTT1",58,0)
 . . ;d OUT("<!-- begin nodule info -->")
"RTN","SAMICTT1",59,0)
 . . ;d OUT("<UL TYPE=disc>")
"RTN","SAMICTT1",60,0)
 . . set firstitem=1
"RTN","SAMICTT1",61,0)
 . ;
"RTN","SAMICTT1",62,0)
 . ;d OUT("<LI>")
"RTN","SAMICTT1",63,0)
 . n specialcase s specialcase=0
"RTN","SAMICTT1",64,0)
 . n ij,ik
"RTN","SAMICTT1",65,0)
 . s ik=$$XVAL("cect"_ii_"ch",vals)
"RTN","SAMICTT1",66,0)
 . ;f ij="pw","px","pr","pv" i ij=ik s specialcase=1
"RTN","SAMICTT1",67,0)
 . i "pwpxprpv"[ik s specialcase=1
"RTN","SAMICTT1",68,0)
 . ;
"RTN","SAMICTT1",69,0)
 . ;# Example Sentence
"RTN","SAMICTT1",70,0)
 . ;# LUL Nodule 1 is non-calcified, non-solid, 6 mm x 6 mm (with 3 x 3) solid component), smooth edge, previously seen and unchanged. (Series 2, Image 65)
"RTN","SAMICTT1",71,0)
 . ;# [LOCATION] Nodule [N] is [CALCIFICATION], [SOLID], [L] mm x mm, [SMOOTH], [NEW].  (Series [Series], Image [ImageNum]).
"RTN","SAMICTT1",72,0)
 . ;
"RTN","SAMICTT1",73,0)
 . n spic s spic=""
"RTN","SAMICTT1",74,0)
 . i $$XVAL("cect"_ii_"sp",vals)="y" s spic="spiculated, "
"RTN","SAMICTT1",75,0)
 . ;
"RTN","SAMICTT1",76,0)
 . n calcification,calcstr,status
"RTN","SAMICTT1",77,0)
 . s status=$$XVAL("cect"_ii_"st",vals)
"RTN","SAMICTT1",78,0)
 . s @vals@("cect"_ii_"ca")=$s(status="bc":"y",status="pc":"q",1:"n")
"RTN","SAMICTT1",79,0)
 . s calcification=$$XSUB("cectca",vals,dict,"cect"_ii_"ca")
"RTN","SAMICTT1",80,0)
 . i calcification="" s calcstr="is "_spic_$$XSUB("cectnt",vals,dict,"cect"_ii_"nt")_", "
"RTN","SAMICTT1",81,0)
 . e  s calcstr="is "_calcification_", "_spic_$$XSUB("cectnt",vals,dict,"cect"_ii_"nt")_", "
"RTN","SAMICTT1",82,0)
 . ;
"RTN","SAMICTT1",83,0)
 . n vssl,vssw,vsl,vsw,avgs,avgss
"RTN","SAMICTT1",84,0)
 . s (vssl,vssw,vsl,vsw,avgs,avgss)=0
"RTN","SAMICTT1",85,0)
 . s vssl=$$XVAL("cect"_ii_"ssl",vals)
"RTN","SAMICTT1",86,0)
 . i vssl'=0 d  ;
"RTN","SAMICTT1",87,0)
 . . s vssw=$$XVAL("cect"_ii_"ssw",vals)
"RTN","SAMICTT1",88,0)
 . . s avgss=(vssl+vssw)/2
"RTN","SAMICTT1",89,0)
 . . s avgss=$j(avgss,1,1)
"RTN","SAMICTT1",90,0)
 . s vsl=$$XVAL("cect"_ii_"sl",vals)
"RTN","SAMICTT1",91,0)
 . s vsw=$$XVAL("cect"_ii_"sw",vals)
"RTN","SAMICTT1",92,0)
 . s avgs=(vsl+vsw)/2
"RTN","SAMICTT1",93,0)
 . s avgs=$j(avgs,1,1)
"RTN","SAMICTT1",94,0)
 . n scomp
"RTN","SAMICTT1",95,0)
 . s scomp=""
"RTN","SAMICTT1",96,0)
 . i $$XVAL("cect"_ii_"ssl",vals)'="" d  ;
"RTN","SAMICTT1",97,0)
 . . ;s scomp=" (solid component "_$$XVAL("cect"_ii_"ssl",vals)_" mm x "_$$XVAL("cect"_ii_"ssw",vals)_" mm average diameter "_avgss_" mm)"
"RTN","SAMICTT1",98,0)
 . . s scomp=", solid component "_$$XVAL("cect"_ii_"ssl",vals)_" mm x "_$$XVAL("cect"_ii_"ssw",vals)_" mm (average diameter of "_avgss_" mm)"
"RTN","SAMICTT1",99,0)
 . ;
"RTN","SAMICTT1",100,0)
 . s calcstr=calcstr_$$XVAL("cect"_ii_"sl",vals)_" mm x "_$$XVAL("cect"_ii_"sw",vals)_" mm (average diameter of "_avgs_" mm)"_scomp_", "
"RTN","SAMICTT1",101,0)
 . ;
"RTN","SAMICTT1",102,0)
 . n smooth
"RTN","SAMICTT1",103,0)
 . ;s smooth=$$XSUB("cectse",vals,dict,"cect"_ii_"se")
"RTN","SAMICTT1",104,0)
 . s smooth=$$XVAL("cect"_ii_"se",vals)
"RTN","SAMICTT1",105,0)
 . i smooth="y" s calcstr=calcstr_"smooth edges, "
"RTN","SAMICTT1",106,0)
 . ;e  s calcstr=calcstr_smooth_" edges, " ;nothing if not smooth
"RTN","SAMICTT1",107,0)
 . ;
"RTN","SAMICTT1",108,0)
 . ; adding distance from costal pleura
"RTN","SAMICTT1",109,0)
 . n pldstr
"RTN","SAMICTT1",110,0)
 . s pldstr="within "_$$XVAL("cect"_ii_"pld",vals)_" mm of the costal pleura"
"RTN","SAMICTT1",111,0)
 . ;
"RTN","SAMICTT1",112,0)
 . n skip s skip=0
"RTN","SAMICTT1",113,0)
 . ;# 3 cases: parenchymal, endobronchial, and both
"RTN","SAMICTT1",114,0)
 . ;
"RTN","SAMICTT1",115,0)
 . n en,loc,nloc,endo,ll
"RTN","SAMICTT1",116,0)
 . s loc=""
"RTN","SAMICTT1",117,0)
 . s nloc=""
"RTN","SAMICTT1",118,0)
 . s en=$$XVAL("cect"_ii_"en",vals)
"RTN","SAMICTT1",119,0)
 . s ll=$$XVAL("cect"_ii_"ll",vals)
"RTN","SAMICTT1",120,0)
 . i ($l(en)<2)!(en="no")!(en="") d  ;
"RTN","SAMICTT1",121,0)
 . . ;# 1) parenchymal only
"RTN","SAMICTT1",122,0)
 . . n X,Y s X=ll
"RTN","SAMICTT1",123,0)
 . . X ^%ZOSF("UPPERCASE")
"RTN","SAMICTT1",124,0)
 . . s loc=Y
"RTN","SAMICTT1",125,0)
 . . s nloc=Y
"RTN","SAMICTT1",126,0)
 . . s endo="Nodule"
"RTN","SAMICTT1",127,0)
 . e  d  ;
"RTN","SAMICTT1",128,0)
 . . i ll="end" d  ;
"RTN","SAMICTT1",129,0)
 . . . ;# 2) Endobronchial only
"RTN","SAMICTT1",130,0)
 . . . i en="tr" d  ;
"RTN","SAMICTT1",131,0)
 . . . . s endo="Endotracheal Nodule"
"RTN","SAMICTT1",132,0)
 . . . . i specialcase=1 d  ;
"RTN","SAMICTT1",133,0)
 . . . . . d OUT("Previously seen "_endo_" "_ii_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_". ")
"RTN","SAMICTT1",134,0)
 . . . . e  d  ;
"RTN","SAMICTT1",135,0)
 . . . . . i ($$XVAL("cetex",vals)="b")&($$XVAL("cectch"_ii_"ch",vals)="n") d  ;
"RTN","SAMICTT1",136,0)
 . . . . . . d OUT(endo_" "_ii_" "_calcstr_" is seen. ")
"RTN","SAMICTT1",137,0)
 . . . . . e  d OUT(endo_" "_ii_" "_calcstr_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_". ")
"RTN","SAMICTT1",138,0)
 . . . . s skip=1
"RTN","SAMICTT1",139,0)
 . . . i en="rm" d  ;
"RTN","SAMICTT1",140,0)
 . . . . s endo="Nodule"
"RTN","SAMICTT1",141,0)
 . . . . s nloc=$$XSUB("cecten",vals,dict,"cect"_ii_"en")
"RTN","SAMICTT1",142,0)
 . . . . i specialcase=1 d  ;
"RTN","SAMICTT1",143,0)
 . . . . . ;d OUT("Previously seen "_nloc_" "_endo_" "_ii_" ")
"RTN","SAMICTT1",144,0)
 . . . . . d OUT("Previously seen "_endo_" "_ii_" in the "_nloc_" "_calcstr_" ")
"RTN","SAMICTT1",145,0)
 . . . . . d OUT($$XSUB("cectch",vals,dict,"cect"_ii_"ch")_". ")
"RTN","SAMICTT1",146,0)
 . . . . e  d  ;
"RTN","SAMICTT1",147,0)
 . . . . . i ($$XVAL("cetex",vals)="b")&($$XVAL("cect"_ii_"ch",vals)="n") d  ;
"RTN","SAMICTT1",148,0)
 . . . . . . ;d OUT(nloc_" "_endo_" "_ii_". ")
"RTN","SAMICTT1",149,0)
 . . . . . . d OUT(endo_" "_ii_" is seen in the "_nloc_" "_calcstr_". ")
"RTN","SAMICTT1",150,0)
 . . . . . ;e  d OUT(nloc_" "_endo_" "_ii_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_". ")
"RTN","SAMICTT1",151,0)
 . . . . . e  d OUT(endo_" "_ii_" in the "_nloc_" "_calcstr_", "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_". ")
"RTN","SAMICTT1",152,0)
 . . . . s skip=1
"RTN","SAMICTT1",153,0)
 . . . i en="bi" d  ;
"RTN","SAMICTT1",154,0)
 . . . . s endo="Nodule"
"RTN","SAMICTT1",155,0)
 . . . . s loc=$$XSUB("cecten",vals,dict,"cect"_ii_"en")
"RTN","SAMICTT1",156,0)
 . . . . i specialcase=1 d  ;
"RTN","SAMICTT1",157,0)
 . . . . . ;d OUT("Previously seen "_endo_" "_ii_" in the "_loc)
"RTN","SAMICTT1",158,0)
 . . . . . d OUT("Previously seen "_endo_" "_ii_" in the "_nloc_" "_calcstr_" ")
"RTN","SAMICTT1",159,0)
 . . . . . d OUT($$XSUB("cectch",vals,dict,"cect"_ii_"ch")_". ")
"RTN","SAMICTT1",160,0)
 . . . . e  d  ;
"RTN","SAMICTT1",161,0)
 . . . . . i ($$XVAL("cetex",vals)="b")&($$XVAL("cect"_ii_"ch",vals)="n") d  ;
"RTN","SAMICTT1",162,0)
 . . . . . . ;d OUT(endo_" "_ii_" is seen in the "_loc_". ")
"RTN","SAMICTT1",163,0)
 . . . . . . d OUT(endo_" "_ii_" is seen in the "_loc_" "_calcstr_". ")
"RTN","SAMICTT1",164,0)
 . . . . . e  d OUT(nloc_" "_endo_" "_ii_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_". ")
"RTN","SAMICTT1",165,0)
 . . . . s skip=1
"RTN","SAMICTT1",166,0)
 . . . i skip=0 d  ; "default"
"RTN","SAMICTT1",167,0)
 . . . . s endo="Nodule"
"RTN","SAMICTT1",168,0)
 . . . . n X,Y
"RTN","SAMICTT1",169,0)
 . . . . s X=$$XVAL("cect"_ii_"en",vals)
"RTN","SAMICTT1",170,0)
 . . . . X ^%ZOSF("UPPERCASE")
"RTN","SAMICTT1",171,0)
 . . . . s nloc=Y
"RTN","SAMICTT1",172,0)
 . . . . i specialcase=1 d  ;
"RTN","SAMICTT1",173,0)
 . . . . . d OUT(nloc_" "_endo_" "_ii_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_", likely endobronchial. ")
"RTN","SAMICTT1",174,0)
 . . . . e  d  ;
"RTN","SAMICTT1",175,0)
 . . . . . ;i ($$XVAL("cetex",vals)="b")&($$XSUB("cectch",vals,dict,"cect"_ii_"ch")="n") d  ;
"RTN","SAMICTT1",176,0)
 . . . . . i (($$XVAL("cetex",vals)="b")&($$XVAL("cect"_ii_"ch",vals)="n")) d  ; gpl 1002
"RTN","SAMICTT1",177,0)
 . . . . . . d OUT(nloc_" "_endo_" "_ii_" "_calcstr_" likely endobronchial. ")
"RTN","SAMICTT1",178,0)
 . . . . . e  d OUT(nloc_" "_endo_" "_ii_" "_calcstr_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_" likely endobronchial. ")
"RTN","SAMICTT1",179,0)
 . . . . s skip=1
"RTN","SAMICTT1",180,0)
 . . e  d  ;
"RTN","SAMICTT1",181,0)
 . . . s endo="Nodule"
"RTN","SAMICTT1",182,0)
 . . . s loc=$$XSUB("cectll",vals,dict,"cect"_ii_"ll")
"RTN","SAMICTT1",183,0)
 . . . n X,Y
"RTN","SAMICTT1",184,0)
 . . . s X=$$XVAL("cect"_ii_"en",vals)
"RTN","SAMICTT1",185,0)
 . . . X ^%ZOSF("UPPERCASE")
"RTN","SAMICTT1",186,0)
 . . . s nloc=Y
"RTN","SAMICTT1",187,0)
 . . . i specialcase=1 d  ;
"RTN","SAMICTT1",188,0)
 . . . . d OUT(nloc_" "_endo_" "_ii_" previously seen with possible endobronchial component")
"RTN","SAMICTT1",189,0)
 . . . . d OUT($$XSUB("cectch",vals,dict,"cect"_ii_"ch")_". ")
"RTN","SAMICTT1",190,0)
 . . . e  d  ;
"RTN","SAMICTT1",191,0)
 . . . . ;i ($$XVAL("cetex",vals)="b")&($$XSUB("cectch",vals,dict,"cect"_ii_"ch")="n") d  ;
"RTN","SAMICTT1",192,0)
 . . . . i (($$XVAL("cetex",vals)="b")&($$XVAL("cect"_ii_"ch",vals)="n")) d  ; gpl 1002
"RTN","SAMICTT1",193,0)
 . . . . . d OUT(nloc_" "_endo_" "_ii_" "_calcstr_" with possible endobronchial component")
"RTN","SAMICTT1",194,0)
 . . . . e  d OUT(nloc_" "_endo_" "_ii_" "_calcstr_" with possible endobronchial component "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_". ")
"RTN","SAMICTT1",195,0)
 . . . s skip=1
"RTN","SAMICTT1",196,0)
 . i specialcase=1 d  ;
"RTN","SAMICTT1",197,0)
 . . i skip=0 d  ;
"RTN","SAMICTT1",198,0)
 . . . d OUT("Previously seen "_nloc_" "_endo_" "_ii_" ")
"RTN","SAMICTT1",199,0)
 . . . d OUT($$XSUB("cectch",vals,dict,"cect"_ii_"ch")_". ")
"RTN","SAMICTT1",200,0)
 . e  d  ;
"RTN","SAMICTT1",201,0)
 . . i skip=0 d  ;
"RTN","SAMICTT1",202,0)
 . . . ;# pleural distance only goes here
"RTN","SAMICTT1",203,0)
 . . . i $$XVAL("cect"_ii_"pld",vals)'="" s calcstr=calcstr_" "_pldstr_","
"RTN","SAMICTT1",204,0)
 . . . ;# Special Handling for "newly seen" on baseline
"RTN","SAMICTT1",205,0)
 . . . ;i ($$XVAL("cetex",vals)="b")&($$XSUB("cectch",vals,dict,"cect"_ii_"ch")="n") d  ;
"RTN","SAMICTT1",206,0)
 . . . i (($$XVAL("cetex",vals)="b")&($$XVAL("cect"_ii_"ch",vals)="n")) d  ; gpl 1002
"RTN","SAMICTT1",207,0)
 . . . . d OUT(nloc_" "_endo_" "_ii_" "_calcstr)
"RTN","SAMICTT1",208,0)
 . . . e  d OUT(nloc_" "_endo_" "_ii_" "_calcstr_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_" ")
"RTN","SAMICTT1",209,0)
 . . d OUT(" (Series "_$$XVAL("cect"_ii_"sn",vals)_",") ; added from 1114 gpl1
"RTN","SAMICTT1",210,0)
 . . ;i $$XVAL("cect"_ii_"inl",vals)=$$XVAL("cect"_ii_"inh",vals) d  ;
"RTN","SAMICTT1",211,0)
 . . ;. d OUT(" image "_$$XVAL("cect"_ii_"inh",vals)_"). ")
"RTN","SAMICTT1",212,0)
 . . ;e  d  ;
"RTN","SAMICTT1",213,0)
 . . ;. d OUT(" image "_$$XVAL("cect"_ii_"inl",vals)_$$XVAL("cect"_ii_"inh",vals)_"). ")
"RTN","SAMICTT1",214,0)
 . . i $$XVAL("cect"_ii_"inh",vals)="" d  ;
"RTN","SAMICTT1",215,0)
 . . . d OUT(" image "_$$XVAL("cect"_ii_"inl",vals)_"). ")
"RTN","SAMICTT1",216,0)
 . . e  d  ;
"RTN","SAMICTT1",217,0)
 . . . d OUT(" image "_$$XVAL("cect"_ii_"inl",vals)_"-"_$$XVAL("cect"_ii_"inh",vals)_"). ")
"RTN","SAMICTT1",218,0)
 . . i $$XVAL("cect"_ii_"co",vals)'="" d OUT($$XVAL("cect"_ii_"co",vals)_". ") ;1122 gpl1
"RTN","SAMICTT1",219,0)
 . . n ac
"RTN","SAMICTT1",220,0)
 . . s ac=$$XVAL("cect"_ii_"ac",vals)
"RTN","SAMICTT1",221,0)
 . . i ac'="" i (ac'="-") i (ac'="s") d  ;
"RTN","SAMICTT1",222,0)
 . . . d OUT($$XSUB("cectac",vals,dict,"cect"_ii_"ac")_" recommended. ")
"RTN","SAMICTT1",223,0)
 . ;
"RTN","SAMICTT1",224,0)
 . ; end of nodule processing
"RTN","SAMICTT1",225,0)
 . ;
"RTN","SAMICTT1",226,0)
 . s outmode="go"
"RTN","SAMICTT1",227,0)
 . d OUT("")
"RTN","SAMICTT1",228,0)
 . s outmode="hold"
"RTN","SAMICTT1",229,0)
 i firstitem'=0 d  ;
"RTN","SAMICTT1",230,0)
 . ;d OUT("</UL>")
"RTN","SAMICTT1",231,0)
 . ;d OUT("<!-- end nodule info -->")
"RTN","SAMICTT1",232,0)
 ;d OUT("</p>")
"RTN","SAMICTT1",233,0)
 ;
"RTN","SAMICTT1",234,0)
 ; added 5/19/21 gpl
"RTN","SAMICTT1",235,0)
 s outmode="go"
"RTN","SAMICTT1",236,0)
 i $$XVAL("cectancn",vals)=1 d OUT("Small non-calcified nodules are present ")
"RTN","SAMICTT1",237,0)
 i $$XVAL("cectacn",vals)=1 d OUT("Small calcified nodules are present ")
"RTN","SAMICTT1",238,0)
 d OUT(" ")
"RTN","SAMICTT1",239,0)
 ;
"RTN","SAMICTT1",240,0)
 quit  ; end of NODULES
"RTN","SAMICTT1",241,0)
 ;
"RTN","SAMICTT1",242,0)
 ;
"RTN","SAMICTT1",243,0)
 ;
"RTN","SAMICTT1",244,0)
OUT(ln) ; output a line of ct report
"RTN","SAMICTT1",245,0)
 ;
"RTN","SAMICTT1",246,0)
 ;@called-by
"RTN","SAMICTT1",247,0)
 ; NODULES
"RTN","SAMICTT1",248,0)
 ;@calls none
"RTN","SAMICTT1",249,0)
 ;@input
"RTN","SAMICTT1",250,0)
 ; ln = output to add
"RTN","SAMICTT1",251,0)
 ;@output
"RTN","SAMICTT1",252,0)
 ; line added to report
"RTN","SAMICTT1",253,0)
 ;
"RTN","SAMICTT1",254,0)
 i outmode="hold" s line=line_ln q  ;
"RTN","SAMICTT1",255,0)
 s cnt=cnt+1
"RTN","SAMICTT1",256,0)
 n lnn
"RTN","SAMICTT1",257,0)
 ;s debug=1
"RTN","SAMICTT1",258,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTT1",259,0)
 i outmode="go" d  ;
"RTN","SAMICTT1",260,0)
 . s @rtn@(lnn)=line
"RTN","SAMICTT1",261,0)
 . s line=""
"RTN","SAMICTT1",262,0)
 . s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTT1",263,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTT1",264,0)
 ;
"RTN","SAMICTT1",265,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTT1",266,0)
 . i ln["<" q  ; no markup
"RTN","SAMICTT1",267,0)
 . n zs s zs=$STACK
"RTN","SAMICTT1",268,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTT1",269,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTT1",270,0)
 ;
"RTN","SAMICTT1",271,0)
 quit  ; end of OUT
"RTN","SAMICTT1",272,0)
 ;
"RTN","SAMICTT1",273,0)
 ;
"RTN","SAMICTT1",274,0)
 ;
"RTN","SAMICTT1",275,0)
HOUT(ln) ; output a ct report header line
"RTN","SAMICTT1",276,0)
 ;
"RTN","SAMICTT1",277,0)
 ;@called-by
"RTN","SAMICTT1",278,0)
 ; NODULES
"RTN","SAMICTT1",279,0)
 ;@calls
"RTN","SAMICTT1",280,0)
 ; OUT
"RTN","SAMICTT1",281,0)
 ;@input
"RTN","SAMICTT1",282,0)
 ; ln = header output to add
"RTN","SAMICTT1",283,0)
 ;@output
"RTN","SAMICTT1",284,0)
 ; header line added to report
"RTN","SAMICTT1",285,0)
 ;
"RTN","SAMICTT1",286,0)
 d OUT(ln)
"RTN","SAMICTT1",287,0)
 ;d OUT("<p><span class='sectionhead'>"_ln_"</span>")
"RTN","SAMICTT1",288,0)
 ;
"RTN","SAMICTT1",289,0)
 quit  ; end of HOUT
"RTN","SAMICTT1",290,0)
 ;
"RTN","SAMICTT1",291,0)
 ;
"RTN","SAMICTT1",292,0)
 ;
"RTN","SAMICTT1",293,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMICTT1",294,0)
 ;
"RTN","SAMICTT1",295,0)
 ;@called-by
"RTN","SAMICTT1",296,0)
 ; NODULES
"RTN","SAMICTT1",297,0)
 ;@calls none
"RTN","SAMICTT1",298,0)
 ;@input
"RTN","SAMICTT1",299,0)
 ; val
"RTN","SAMICTT1",300,0)
 ; vals is passed by name
"RTN","SAMICTT1",301,0)
 ;@output = patient value for var
"RTN","SAMICTT1",302,0)
 ;
"RTN","SAMICTT1",303,0)
 n zr
"RTN","SAMICTT1",304,0)
 s zr=$g(@vals@(var))
"RTN","SAMICTT1",305,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMICTT1",306,0)
 ;
"RTN","SAMICTT1",307,0)
 quit zr ; end of $$XVAL
"RTN","SAMICTT1",308,0)
 ;
"RTN","SAMICTT1",309,0)
 ;
"RTN","SAMICTT1",310,0)
 ;
"RTN","SAMICTT1",311,0)
XSUB(var,vals,dict,valdx) ; extrinsic which returns the dictionary value defined by var
"RTN","SAMICTT1",312,0)
 ;
"RTN","SAMICTT1",313,0)
 ;@called-by
"RTN","SAMICTT1",314,0)
 ; NODULES
"RTN","SAMICTT1",315,0)
 ;@calls none
"RTN","SAMICTT1",316,0)
 ;@input
"RTN","SAMICTT1",317,0)
 ; val
"RTN","SAMICTT1",318,0)
 ; vals and dict are passed by name
"RTN","SAMICTT1",319,0)
 ; valdx is used for nodules ala cect2co with the nodule number included
"RTN","SAMICTT1",320,0)
 ;@output = dictionary value for var
"RTN","SAMICTT1",321,0)
 ;
"RTN","SAMICTT1",322,0)
 ;n dict s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTT1",323,0)
 n zr,zv,zdx
"RTN","SAMICTT1",324,0)
 s zdx=$g(valdx)
"RTN","SAMICTT1",325,0)
 i zdx="" s zdx=var
"RTN","SAMICTT1",326,0)
 s zv=$g(@vals@(zdx))
"RTN","SAMICTT1",327,0)
 ;i zv="" s zr="["_var_"]" q zr
"RTN","SAMICTT1",328,0)
 i zv="" s zr="" q zr
"RTN","SAMICTT1",329,0)
 s zr=$g(@dict@(var,zv))
"RTN","SAMICTT1",330,0)
 ;i zr="" s zr="["_var_","_zv_"]"
"RTN","SAMICTT1",331,0)
 ;
"RTN","SAMICTT1",332,0)
 quit zr ; end of $$XSUB
"RTN","SAMICTT1",333,0)
 ;
"RTN","SAMICTT1",334,0)
 ;
"RTN","SAMICTT1",335,0)
 ;
"RTN","SAMICTT1",336,0)
EOR ; end of routine SAMICTT1
"RTN","SAMICTT2")
0^21^B115984956
"RTN","SAMICTT2",1,0)
SAMICTT2 ;ven/gpl - ctreport text other lung ;2021-03-22T15:19Z
"RTN","SAMICTT2",2,0)
 ;;18.0;SAMI;**4,10**;2020-01;Build 1
"RTN","SAMICTT2",3,0)
 ;;1.18.0.10-i10
"RTN","SAMICTT2",4,0)
 ;
"RTN","SAMICTT2",5,0)
 ; SAMICTT2 creates the Other Lung Findings section of the ELCAP CT
"RTN","SAMICTT2",6,0)
 ; Report in text format.
"RTN","SAMICTT2",7,0)
 ;
"RTN","SAMICTT2",8,0)
 quit  ; no entry from top
"RTN","SAMICTT2",9,0)
 ;
"RTN","SAMICTT2",10,0)
 ;
"RTN","SAMICTT2",11,0)
 ;
"RTN","SAMICTT2",12,0)
 ;@section 0 primary development
"RTN","SAMICTT2",13,0)
 ;
"RTN","SAMICTT2",14,0)
 ;
"RTN","SAMICTT2",15,0)
 ;
"RTN","SAMICTT2",16,0)
 ;@license see routine SAMIUL
"RTN","SAMICTT2",17,0)
 ;@documentation see SAMICTUL
"RTN","SAMICTT2",18,0)
 ;@contents
"RTN","SAMICTT2",19,0)
 ; OTHRLUNG: other lung findings section of ctreport in text format
"RTN","SAMICTT2",20,0)
 ; $$LOBESTR = extrinsic returns lobes
"RTN","SAMICTT2",21,0)
 ; HLFIND: references & sets lfind in calling routine
"RTN","SAMICTT2",22,0)
 ; OUT: output a line of ct report
"RTN","SAMICTT2",23,0)
 ; OUTold: old version of out
"RTN","SAMICTT2",24,0)
 ; HOUT: output a ct report header line
"RTN","SAMICTT2",25,0)
 ; $$XVAL = patient value for var
"RTN","SAMICTT2",26,0)
 ; $$XSUB = dictionary value defined by var
"RTN","SAMICTT2",27,0)
 ;
"RTN","SAMICTT2",28,0)
 ;
"RTN","SAMICTT2",29,0)
 ;
"RTN","SAMICTT2",30,0)
 ;@section 1 OTHRLUNG & related subroutines
"RTN","SAMICTT2",31,0)
 ;
"RTN","SAMICTT2",32,0)
 ;
"RTN","SAMICTT2",33,0)
 ;
"RTN","SAMICTT2",34,0)
OTHRLUNG(rtn,vals,dict) ; other lung findings sect of ct report text
"RTN","SAMICTT2",35,0)
 ;
"RTN","SAMICTT2",36,0)
 ; repgen2,repgen3
"RTN","SAMICTT2",37,0)
 ;
"RTN","SAMICTT2",38,0)
 ;@called-by
"RTN","SAMICTT2",39,0)
 ; WSREPORT^SAMICTT0
"RTN","SAMICTT2",40,0)
 ;@calls
"RTN","SAMICTT2",41,0)
 ; $$XVAL
"RTN","SAMICTT2",42,0)
 ; HLFIND
"RTN","SAMICTT2",43,0)
 ; OUT
"RTN","SAMICTT2",44,0)
 ; $$LOBESTR
"RTN","SAMICTT2",45,0)
 ;@input
"RTN","SAMICTT2",46,0)
 ; rtn
"RTN","SAMICTT2",47,0)
 ; vals
"RTN","SAMICTT2",48,0)
 ; dict
"RTN","SAMICTT2",49,0)
 ;@output: create other lung findings section of ct eval report
"RTN","SAMICTT2",50,0)
 ;
"RTN","SAMICTT2",51,0)
 ; starts at "Other lung findings:"
"RTN","SAMICTT2",52,0)
 ;
"RTN","SAMICTT2",53,0)
 ;#hputs "Other lung findings:"
"RTN","SAMICTT2",54,0)
 s outmode="hold"
"RTN","SAMICTT2",55,0)
 n line s line=""
"RTN","SAMICTT2",56,0)
 ;
"RTN","SAMICTT2",57,0)
 n sp1 s sp1="  "
"RTN","SAMICTT2",58,0)
 n hfind,lfind,yespp,newct
"RTN","SAMICTT2",59,0)
 s (hfind,lfind,yespp)=0
"RTN","SAMICTT2",60,0)
 s newct=1
"RTN","SAMICTT2",61,0)
 ;
"RTN","SAMICTT2",62,0)
 ;# Add handling for new sections
"RTN","SAMICTT2",63,0)
 ;# ceopp is new, if it doensn't exist skip whole section
"RTN","SAMICTT2",64,0)
 ;# only then should old fields be included.
"RTN","SAMICTT2",65,0)
 ;
"RTN","SAMICTT2",66,0)
 i $g(newct)=1 d  ;
"RTN","SAMICTT2",67,0)
 . i "y"="y" d  ;
"RTN","SAMICTT2",68,0)
 . . s yespp=1
"RTN","SAMICTT2",69,0)
 . . i $$XVAL("cecbc",vals)="y" d  ;
"RTN","SAMICTT2",70,0)
 . . . d HLFIND ;
"RTN","SAMICTT2",71,0)
 . . . d OUT(sp1_"Cyst seen in the "_$$LOBESTR("cecbcl1^cecbcl2^cecbcl3^cecbcl4^cecbcl5",0)_". ") d OUT("")
"RTN","SAMICTT2",72,0)
 . . . ;d OUT($$LOBESTR("cecbcl1^cecbcl2^cecbcl3^cecbcl4^cecbcl5",0)_". ")
"RTN","SAMICTT2",73,0)
 . . . s yespp=1
"RTN","SAMICTT2",74,0)
 . . if $$XVAL("cecbb",vals)="y" d  ;
"RTN","SAMICTT2",75,0)
 . . . d HLFIND ; 
"RTN","SAMICTT2",76,0)
 . . . ;d OUT("<br>"_"Bleb or bullae seen in the ")
"RTN","SAMICTT2",77,0)
 . . . d OUT(sp1_"Bleb or bullae seen in the "_$$LOBESTR("cecbbl1^cecbbl2^cecbbl3^cecbbl4^cecbbl5",0)_". ") d OUT("")
"RTN","SAMICTT2",78,0)
 . . . set yespp=1
"RTN","SAMICTT2",79,0)
 . . if $$XVAL("cebrsb",vals)="y" d  ;
"RTN","SAMICTT2",80,0)
 . . . d HLFIND ; 
"RTN","SAMICTT2",81,0)
 . . . ;d OUT("<br>"_"Bronchiectasis in the ")
"RTN","SAMICTT2",82,0)
 . . . d OUT(sp1_"Bronchiectasis in the "_$$LOBESTR("cebrsbl1^cebrsbl2^cebrsbl3^cebrsbl4^cebrsbl5",0)_". ") d OUT("")
"RTN","SAMICTT2",83,0)
 . . . set yespp=1
"RTN","SAMICTT2",84,0)
 . . if $$XVAL("cebrs",vals)="y" d  ;
"RTN","SAMICTT2",85,0)
 . . . if $$XVAL("cebrsb",vals)'="y" d  ;
"RTN","SAMICTT2",86,0)
 . . . . if $$XVAL("cebrss",vals)'="y" d  ;
"RTN","SAMICTT2",87,0)
 . . . . . d HLFIND ;
"RTN","SAMICTT2",88,0)
 . . . . . ;d OUT("<br>"_"Small Airways Disease in the ")
"RTN","SAMICTT2",89,0)
 . . . . . d OUT(sp1_"Small Airways Disease in the "_$$LOBESTR("cebrsl1^cebrsl2^cebrsl3^cebrsl4^cebrsl5",0)_". ") d OUT("")
"RTN","SAMICTT2",90,0)
 . . . . . set yespp=1
"RTN","SAMICTT2",91,0)
 . . if $$XVAL("cebrss",vals)="y" d  ;
"RTN","SAMICTT2",92,0)
 . . . d HLFIND ;
"RTN","SAMICTT2",93,0)
 . . . ;d OUT("<br>"_"Small Airways Disease/Bronchiolectasis in the ")
"RTN","SAMICTT2",94,0)
 . . . d OUT(sp1_"Small Airways Disease/Bronchiolectasis in the "_$$LOBESTR("cebrssl1^cebrssl2^cebrssl3^cebrssl4^cebrssl5",0)_". ") d OUT("")
"RTN","SAMICTT2",95,0)
 . . . set yespp=1
"RTN","SAMICTT2",96,0)
 . . n numl,str
"RTN","SAMICTT2",97,0)
 . . s numl=0
"RTN","SAMICTT2",98,0)
 . . s str=""
"RTN","SAMICTT2",99,0)
 . . if $$XVAL("cebs",vals)="o" d  ;
"RTN","SAMICTT2",100,0)
 . . . set yespp=1
"RTN","SAMICTT2",101,0)
 . . . set numl=0
"RTN","SAMICTT2",102,0)
 . . . set str="Normal bronchial resection margin on"
"RTN","SAMICTT2",103,0)
 . . . if $$XVAL("cebsrt",vals)="r" d  ;
"RTN","SAMICTT2",104,0)
 . . . . s str=str_" right"
"RTN","SAMICTT2",105,0)
 . . . . s numl=numl+1
"RTN","SAMICTT2",106,0)
 . . . if $$XVAL("cebslt",vals)="l" d  ;
"RTN","SAMICTT2",107,0)
 . . . . if numl>0 d  ;
"RTN","SAMICTT2",108,0)
 . . . . . s str=str_" and"
"RTN","SAMICTT2",109,0)
 . . . . s str=str_" left"
"RTN","SAMICTT2",110,0)
 . . . . s numl=numl+1
"RTN","SAMICTT2",111,0)
 . . . s str=str_". "
"RTN","SAMICTT2",112,0)
 . . . if numl=0 d  ;
"RTN","SAMICTT2",113,0)
 . . . . set str="Normal bronchial resection margin noted. "
"RTN","SAMICTT2",114,0)
 . . . d HLFIND ;
"RTN","SAMICTT2",115,0)
 . . . d OUT(sp1_str)
"RTN","SAMICTT2",116,0)
 . . . ;d OUT("<br>")
"RTN","SAMICTT2",117,0)
 . . ;if $$XVAL("cebrsb",vals)="y" d  ;
"RTN","SAMICTT2",118,0)
 . . ;. d HLFIND
"RTN","SAMICTT2",119,0)
 . . ;. d OUT("<br>"_"Bronchiectasis in the ")
"RTN","SAMICTT2",120,0)
 . . ;. d OUT($$LOBESTR("cebrsbl1^cebrsbl2^cebrsbl3^cebrsbl4^cebrsbl5",0)_". ")
"RTN","SAMICTT2",121,0)
 . . ;. set yespp=1
"RTN","SAMICTT2",122,0)
 . . if $$XVAL("ceild",vals)="y" d  ;
"RTN","SAMICTT2",123,0)
 . . . d HLFIND
"RTN","SAMICTT2",124,0)
 . . . ;d OUT("<br>"_"Evidence of interstitial lung disease in the ")
"RTN","SAMICTT2",125,0)
 . . . d OUT(sp1_"Evidence of interstitial lung disease in the "_$$LOBESTR("ceildl1^ceildl2^ceildl3^ceildl4^ceildl5",0)_". ") d OUT("")
"RTN","SAMICTT2",126,0)
 . . . set yespp=1
"RTN","SAMICTT2",127,0)
 . . if $$XVAL("cerdc",vals)="y" d  ;
"RTN","SAMICTT2",128,0)
 . . . d HLFIND
"RTN","SAMICTT2",129,0)
 . . . ;d OUT("<br>"_"Regional or diffuse consolidation in the ")
"RTN","SAMICTT2",130,0)
 . . . d OUT(sp1_"Regional or diffuse consolidation in the "_$$LOBESTR("cerdcl1^cerdcl2^cerdcl3^cerdcl4^cerdcl5",0)_". ") d OUT("")
"RTN","SAMICTT2",131,0)
 . . . set yespp=1
"RTN","SAMICTT2",132,0)
 . . ;# scarring may be more complicated (apical, and bilateral)
"RTN","SAMICTT2",133,0)
 . . if $$XVAL("cescr",vals)="y" d  ;
"RTN","SAMICTT2",134,0)
 . . . d HLFIND
"RTN","SAMICTT2",135,0)
 . . . ;# If apical use "unilateral apical scarring", if bilateral use "bilateral apical scarring"
"RTN","SAMICTT2",136,0)
 . . . ;# Otherwise use our previouse construct
"RTN","SAMICTT2",137,0)
 . . . n done s done=0 ; flag to use for other scarring 
"RTN","SAMICTT2",138,0)
 . . . if $$XVAL("cescrl6",vals)="au" d  ;
"RTN","SAMICTT2",139,0)
 . . . . d OUT(sp1_"Unilateral apical scarring. ") d OUT("")
"RTN","SAMICTT2",140,0)
 . . . . s done=1
"RTN","SAMICTT2",141,0)
 . . . else  if $$XVAL("cescrl7",vals)="ab" d  ;
"RTN","SAMICTT2",142,0)
 . . . . d OUT(sp1_"Bilateral apical scarring. ") d OUT("")
"RTN","SAMICTT2",143,0)
 . . . . s done=1
"RTN","SAMICTT2",144,0)
 . . . if done=0  d  ;
"RTN","SAMICTT2",145,0)
 . . . . ;d OUT("<br>"_"Scarring in the ")
"RTN","SAMICTT2",146,0)
 . . . . d OUT(sp1_"Scarring in the "_$$LOBESTR("cescrl1^cescrl2^cescrl3^cescrl4^cescrl5",1)_". ") d OUT("")
"RTN","SAMICTT2",147,0)
 . . . . set yespp=1
"RTN","SAMICTT2",148,0)
 . . if $$XVAL("cebat",vals)="y" d  ;
"RTN","SAMICTT2",149,0)
 . . . d HLFIND
"RTN","SAMICTT2",150,0)
 . . . ;d OUT("<br>"_"Other atelectasis in the ")
"RTN","SAMICTT2",151,0)
 . . . d OUT(sp1_"Other atelectasis in the "_$$LOBESTR("cebatl1^cebatl2^cebatl3^cebatl4^cebatl5",0)_". ") d OUT("")
"RTN","SAMICTT2",152,0)
 . . . set yespp=1
"RTN","SAMICTT2",153,0)
 . . if $$XVAL("cerb",vals)="y" d  ;
"RTN","SAMICTT2",154,0)
 . . . d HLFIND
"RTN","SAMICTT2",155,0)
 . . . ;d OUT("<br>"_"Traction bronchiectasis in the ")
"RTN","SAMICTT2",156,0)
 . . . d OUT(sp1_"Traction bronchiectasis in the "_$$LOBESTR("cerbl1^cerbl2^cerbl3^cerbl4^cerbl5",0)_". ") d OUT("")
"RTN","SAMICTT2",157,0)
 . . . set yespp=1
"RTN","SAMICTT2",158,0)
 . . if $$XVAL("cepgo",vals)="y" d  ;
"RTN","SAMICTT2",159,0)
 . . . d HLFIND
"RTN","SAMICTT2",160,0)
 . . . ;d OUT("<br>"_"Peripheral Ground-glass Opacities in the ")
"RTN","SAMICTT2",161,0)
 . . . d OUT(sp1_"Peripheral Ground-glass Opacities in the "_$$LOBESTR("cepgol1^cepgol2^cepgol3^cepgol4^cepgol5",0)_". ") d OUT("")
"RTN","SAMICTT2",162,0)
 . . . set yespp=1
"RTN","SAMICTT2",163,0)
 . . if $$XVAL("ceret",vals)="y" d  ;
"RTN","SAMICTT2",164,0)
 . . . d HLFIND
"RTN","SAMICTT2",165,0)
 . . . ;d OUT("<br>"_"Reticulations in the ")
"RTN","SAMICTT2",166,0)
 . . . d OUT(sp1_"Reticulations in the "_$$LOBESTR("ceretl1^ceretl2^ceretl3^ceretl4^ceretl5",0)_". ") d OUT("")
"RTN","SAMICTT2",167,0)
 . . . set yespp=1
"RTN","SAMICTT2",168,0)
 . . if $$XVAL("cephc",vals)="y" d  ;
"RTN","SAMICTT2",169,0)
 . . . d HLFIND
"RTN","SAMICTT2",170,0)
 . . . ;d OUT("<br>"_"Honeycombing in the ")
"RTN","SAMICTT2",171,0)
 . . . d OUT(sp1_"Honeycombing in the "_$$LOBESTR("cephcl1^cephcl2^cephcl3^cephcl4^cephcl5",0)_". ") d OUT("")
"RTN","SAMICTT2",172,0)
 . . . set yespp=1
"RTN","SAMICTT2",173,0)
 . . if $$XVAL("cepp",vals)="y" d  ;
"RTN","SAMICTT2",174,0)
 . . . set yespp=1
"RTN","SAMICTT2",175,0)
 . . . set numl=0
"RTN","SAMICTT2",176,0)
 . . . set str="Pleural or fissural plaques in the "
"RTN","SAMICTT2",177,0)
 . . . if $$XVAL("cepprt",vals)="r" d  ;
"RTN","SAMICTT2",178,0)
 . . . . s str=str_"right"
"RTN","SAMICTT2",179,0)
 . . . . s numl=numl+1
"RTN","SAMICTT2",180,0)
 . . . if $$XVAL("cepplt",vals)="l" d  ;
"RTN","SAMICTT2",181,0)
 . . . . if numl>0 d  ;
"RTN","SAMICTT2",182,0)
 . . . . . s str=str_" and"
"RTN","SAMICTT2",183,0)
 . . . . s str=str_" left"
"RTN","SAMICTT2",184,0)
 . . . . s numl=numl+1
"RTN","SAMICTT2",185,0)
 . . . . if numl>1 s str=str_" lobes"
"RTN","SAMICTT2",186,0)
 . . . . else  s str=str_" lobe"
"RTN","SAMICTT2",187,0)
 . . . . if $$XVAL("ceppca",vals)="c" s str=str_" with calcifications"
"RTN","SAMICTT2",188,0)
 . . . . s str=str_". "_para
"RTN","SAMICTT2",189,0)
 . . . if numl=0 set str="Pleural or fissural plaques are noted. "
"RTN","SAMICTT2",190,0)
 . . . d HLFIND
"RTN","SAMICTT2",191,0)
 . . . d OUT(sp1_str)
"RTN","SAMICTT2",192,0)
 . . ;
"RTN","SAMICTT2",193,0)
 . . ;# Note: Not used for newer CT Evaluation Forms
"RTN","SAMICTT2",194,0)
 . . ;if { 0 == [ string compare y [xval cepc] ] } {
"RTN","SAMICTT2",195,0)
 . . ;  set yespp 1
"RTN","SAMICTT2",196,0)
 . . ;     hlfind
"RTN","SAMICTT2",197,0)
 . . ;     puts "[sidestr {Pleural calcifications} cepcrt cepclt]"
"RTN","SAMICTT2",198,0)
 . . ;
"RTN","SAMICTT2",199,0)
 . . if $$XVAL("cebs",vals)="y" d  ;
"RTN","SAMICTT2",200,0)
 . . . set yespp=1
"RTN","SAMICTT2",201,0)
 . . . set numl=0
"RTN","SAMICTT2",202,0)
 . . . set str="Abnormal bronchial resection margin on"
"RTN","SAMICTT2",203,0)
 . . . d  ;
"RTN","SAMICTT2",204,0)
 . . . . if $$XVAL("cebsrt",vals)="r" d  ;
"RTN","SAMICTT2",205,0)
 . . . . . s str=str_" right"
"RTN","SAMICTT2",206,0)
 . . . . . s numl=numl+1
"RTN","SAMICTT2",207,0)
 . . . . if $$XVAL("cebslt",vals)="l" d  ;
"RTN","SAMICTT2",208,0)
 . . . . . if numl>0 s str=str_" and"
"RTN","SAMICTT2",209,0)
 . . . . . s str=str_" left"
"RTN","SAMICTT2",210,0)
 . . . . . s numl=numl+1
"RTN","SAMICTT2",211,0)
 . . . . s str=str_". "
"RTN","SAMICTT2",212,0)
 . . . if numl=0 set str="<br>"_"Abnormal bronchial resection margin noted. "
"RTN","SAMICTT2",213,0)
 . . . d HLFIND
"RTN","SAMICTT2",214,0)
 . . . d OUT(sp1_str)
"RTN","SAMICTT2",215,0)
 . . . ;d OUT(para)
"RTN","SAMICTT2",216,0)
 . . ;
"RTN","SAMICTT2",217,0)
 . . if $L($$XVAL("ceoppa",vals))'=0 d  ;
"RTN","SAMICTT2",218,0)
 . . . ;# puts "Additional Comments on Parenchymal or Pleural Abnormalities:"
"RTN","SAMICTT2",219,0)
 . . . d HLFIND
"RTN","SAMICTT2",220,0)
 . . . d OUT(sp1_$$XVAL("ceoppa",vals)_". ") d OUT("")
"RTN","SAMICTT2",221,0)
 . . . ;d OUT(para)
"RTN","SAMICTT2",222,0)
 . . else  if yespp=1  ;d OUT(para)
"RTN","SAMICTT2",223,0)
 s outmode="go" d OUT("")
"RTN","SAMICTT2",224,0)
 ;
"RTN","SAMICTT2",225,0)
 quit  ; end of OTHRLUNG
"RTN","SAMICTT2",226,0)
 ;
"RTN","SAMICTT2",227,0)
 ;
"RTN","SAMICTT2",228,0)
 ;
"RTN","SAMICTT2",229,0)
LOBESTR(lst,opt) ; extrinsic returns lobes
"RTN","SAMICTT2",230,0)
 ;
"RTN","SAMICTT2",231,0)
 ;@called-by
"RTN","SAMICTT2",232,0)
 ; OTHRLUNG
"RTN","SAMICTT2",233,0)
 ;@calls
"RTN","SAMICTT2",234,0)
 ; $$XVAL
"RTN","SAMICTT2",235,0)
 ; @^%ZOSF("UPPERCASE")
"RTN","SAMICTT2",236,0)
 ;@input
"RTN","SAMICTT2",237,0)
 ; lst = a^b^c where a,b and c are variable names
"RTN","SAMICTT2",238,0)
 ; opt
"RTN","SAMICTT2",239,0)
 ;@output = lobes
"RTN","SAMICTT2",240,0)
 ;
"RTN","SAMICTT2",241,0)
 n rtstr,lln,tary
"RTN","SAMICTT2",242,0)
 s tary=""
"RTN","SAMICTT2",243,0)
 s rtstr=""
"RTN","SAMICTT2",244,0)
 s lln=$l(lst,"^")
"RTN","SAMICTT2",245,0)
 f lzi=1:1:lln d  ;
"RTN","SAMICTT2",246,0)
 . n tval
"RTN","SAMICTT2",247,0)
 . s tval=$$XVAL($p(lst,"^",lzi),vals)
"RTN","SAMICTT2",248,0)
 . n X,Y S X=tval X ^%ZOSF("UPPERCASE")
"RTN","SAMICTT2",249,0)
 . s tval=Y
"RTN","SAMICTT2",250,0)
 . i tval'="" s tary($o(tary(""),-1)+1)=tval
"RTN","SAMICTT2",251,0)
 n tcnt s tcnt=$o(tary(""),-1)
"RTN","SAMICTT2",252,0)
 q:tcnt=0
"RTN","SAMICTT2",253,0)
 i tcnt=1 q tary(1)
"RTN","SAMICTT2",254,0)
 i tcnt=2 q tary(1)_" and "_tary(2)
"RTN","SAMICTT2",255,0)
 f lzi=1:1:tcnt s rtstr=rtstr_tary(lzi)_$s(lzi<tcnt:", ",1:"")
"RTN","SAMICTT2",256,0)
 ;
"RTN","SAMICTT2",257,0)
 quit rtstr ; end of $$LOBESTR
"RTN","SAMICTT2",258,0)
 ;
"RTN","SAMICTT2",259,0)
 ;
"RTN","SAMICTT2",260,0)
 ;
"RTN","SAMICTT2",261,0)
HLFIND() ; references & sets lfind in calling routine
"RTN","SAMICTT2",262,0)
 ;
"RTN","SAMICTT2",263,0)
 ;@called-by
"RTN","SAMICTT2",264,0)
 ; OTHRLUNG
"RTN","SAMICTT2",265,0)
 ;@calls
"RTN","SAMICTT2",266,0)
 ; HOUT
"RTN","SAMICTT2",267,0)
 ; OUT
"RTN","SAMICTT2",268,0)
 ;@thruput
"RTN","SAMICTT2",269,0)
 ; ]lfind
"RTN","SAMICTT2",270,0)
 ;@output: adds other lung findings header to report
"RTN","SAMICTT2",271,0)
 ;
"RTN","SAMICTT2",272,0)
 i $g(lfind)=0 d  ;
"RTN","SAMICTT2",273,0)
 . d HOUT("Other lung findings:")
"RTN","SAMICTT2",274,0)
 . d OUT("")
"RTN","SAMICTT2",275,0)
 . s lfind=1
"RTN","SAMICTT2",276,0)
 ;
"RTN","SAMICTT2",277,0)
 quit  ; end of HLFIND
"RTN","SAMICTT2",278,0)
 ;
"RTN","SAMICTT2",279,0)
 ;
"RTN","SAMICTT2",280,0)
 ;
"RTN","SAMICTT2",281,0)
OUT(ln) ; output a line of ct report
"RTN","SAMICTT2",282,0)
 ;
"RTN","SAMICTT2",283,0)
 ;@called-by
"RTN","SAMICTT2",284,0)
 ; OTHRLUNG
"RTN","SAMICTT2",285,0)
 ; HLFIND
"RTN","SAMICTT2",286,0)
 ;@calls none
"RTN","SAMICTT2",287,0)
 ;@input
"RTN","SAMICTT2",288,0)
 ; ln = output to add
"RTN","SAMICTT2",289,0)
 ;@output: line added to report
"RTN","SAMICTT2",290,0)
 ;
"RTN","SAMICTT2",291,0)
 i outmode="hold" s line=line_ln q  ;
"RTN","SAMICTT2",292,0)
 s cnt=cnt+1
"RTN","SAMICTT2",293,0)
 n lnn
"RTN","SAMICTT2",294,0)
 i $g(debug)'=1 s debug=0
"RTN","SAMICTT2",295,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTT2",296,0)
 i outmode="go" d  ;
"RTN","SAMICTT2",297,0)
 . s @rtn@(lnn)=line
"RTN","SAMICTT2",298,0)
 . s line=""
"RTN","SAMICTT2",299,0)
 . s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTT2",300,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTT2",301,0)
 ;
"RTN","SAMICTT2",302,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTT2",303,0)
 . i ln["<" q  ; no markup
"RTN","SAMICTT2",304,0)
 . n zs s zs=$STACK
"RTN","SAMICTT2",305,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTT2",306,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTT2",307,0)
 ;
"RTN","SAMICTT2",308,0)
 quit  ; end of OUT
"RTN","SAMICTT2",309,0)
 ;
"RTN","SAMICTT2",310,0)
 ;
"RTN","SAMICTT2",311,0)
 ;
"RTN","SAMICTT2",312,0)
OUTold(ln) ; old version of out
"RTN","SAMICTT2",313,0)
 ;
"RTN","SAMICTT2",314,0)
 ;@called-by none
"RTN","SAMICTT2",315,0)
 ;@calls none
"RTN","SAMICTT2",316,0)
 ;@input
"RTN","SAMICTT2",317,0)
 ; ln = output to add
"RTN","SAMICTT2",318,0)
 ;@output: line added to report
"RTN","SAMICTT2",319,0)
 ;
"RTN","SAMICTT2",320,0)
 s cnt=cnt+1
"RTN","SAMICTT2",321,0)
 n lnn
"RTN","SAMICTT2",322,0)
 ;s debug=1
"RTN","SAMICTT2",323,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTT2",324,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTT2",325,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTT2",326,0)
 . i ln["<" q  ; no markup
"RTN","SAMICTT2",327,0)
 . n zs s zs=$STACK
"RTN","SAMICTT2",328,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTT2",329,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTT2",330,0)
 ;
"RTN","SAMICTT2",331,0)
 quit  ; end of OUTold
"RTN","SAMICTT2",332,0)
 ;
"RTN","SAMICTT2",333,0)
 ;
"RTN","SAMICTT2",334,0)
 ;
"RTN","SAMICTT2",335,0)
HOUT(ln) ; output a ct report header line
"RTN","SAMICTT2",336,0)
 ;
"RTN","SAMICTT2",337,0)
 ;@called-by
"RTN","SAMICTT2",338,0)
 ; HLFIND
"RTN","SAMICTT2",339,0)
 ;@calls
"RTN","SAMICTT2",340,0)
 ; OUT
"RTN","SAMICTT2",341,0)
 ;@input
"RTN","SAMICTT2",342,0)
 ; ln = header output to add
"RTN","SAMICTT2",343,0)
 ;@output: header line added to report
"RTN","SAMICTT2",344,0)
 ;
"RTN","SAMICTT2",345,0)
 d OUT("<p><span class='sectionhead'>"_ln_"</span>")
"RTN","SAMICTT2",346,0)
 ;
"RTN","SAMICTT2",347,0)
 quit  ; end of HOUT
"RTN","SAMICTT2",348,0)
 ;
"RTN","SAMICTT2",349,0)
 ;
"RTN","SAMICTT2",350,0)
 ;
"RTN","SAMICTT2",351,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMICTT2",352,0)
 ;
"RTN","SAMICTT2",353,0)
 ;@called-by
"RTN","SAMICTT2",354,0)
 ; OTHRLUNG
"RTN","SAMICTT2",355,0)
 ; $$LOBESTR
"RTN","SAMICTT2",356,0)
 ;@calls none
"RTN","SAMICTT2",357,0)
 ;@input
"RTN","SAMICTT2",358,0)
 ; var
"RTN","SAMICTT2",359,0)
 ; vals is passed by name
"RTN","SAMICTT2",360,0)
 ;@output = patient value for var
"RTN","SAMICTT2",361,0)
 ;
"RTN","SAMICTT2",362,0)
 ;
"RTN","SAMICTT2",363,0)
 n zr
"RTN","SAMICTT2",364,0)
 s zr=$g(@vals@(var))
"RTN","SAMICTT2",365,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMICTT2",366,0)
 ;
"RTN","SAMICTT2",367,0)
 quit zr ; end of $$XVAL
"RTN","SAMICTT2",368,0)
 ;
"RTN","SAMICTT2",369,0)
 ;
"RTN","SAMICTT2",370,0)
 ;
"RTN","SAMICTT2",371,0)
XSUB(var,vals,dict,valdx) ; extrinsic which returns the dictionary value defined by var
"RTN","SAMICTT2",372,0)
 ;
"RTN","SAMICTT2",373,0)
 ;@called-by none
"RTN","SAMICTT2",374,0)
 ;@calls none
"RTN","SAMICTT2",375,0)
 ;@input
"RTN","SAMICTT2",376,0)
 ; var
"RTN","SAMICTT2",377,0)
 ; vals and dict are passed by name
"RTN","SAMICTT2",378,0)
 ; valdx is used for nodules ala cect2co with the nodule number included
"RTN","SAMICTT2",379,0)
 ;@output = dictionary value for var
"RTN","SAMICTT2",380,0)
 ;
"RTN","SAMICTT2",381,0)
 ;n dict s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTT2",382,0)
 n zr,zv,zdx
"RTN","SAMICTT2",383,0)
 s zdx=$g(valdx)
"RTN","SAMICTT2",384,0)
 i zdx="" s zdx=var
"RTN","SAMICTT2",385,0)
 s zv=$g(@vals@(zdx))
"RTN","SAMICTT2",386,0)
 ;i zv="" s zr="["_var_"]" q zr
"RTN","SAMICTT2",387,0)
 i zv="" s zr="" q zr
"RTN","SAMICTT2",388,0)
 s zr=$g(@dict@(var,zv))
"RTN","SAMICTT2",389,0)
 ;i zr="" s zr="["_var_","_zv_"]"
"RTN","SAMICTT2",390,0)
 ;
"RTN","SAMICTT2",391,0)
 quit zr ; end of $$XSUB
"RTN","SAMICTT2",392,0)
 ;
"RTN","SAMICTT2",393,0)
 ;
"RTN","SAMICTT2",394,0)
 ;
"RTN","SAMICTT2",395,0)
EOR ; end of routine SAMICTT2
"RTN","SAMICTT3")
0^22^B222214559
"RTN","SAMICTT3",1,0)
SAMICTT3 ;ven/gpl - ctreport text emphysema ;2021-08-17T19:12Z
"RTN","SAMICTT3",2,0)
 ;;18.0;SAMI;**4,10,13**;2020-01;Build 1
"RTN","SAMICTT3",3,0)
 ;;18.13
"RTN","SAMICTT3",4,0)
 ;
"RTN","SAMICTT3",5,0)
 ; SAMICTT3 creates the Emphysema section of the ELCAP CT Report in
"RTN","SAMICTT3",6,0)
 ; text format.
"RTN","SAMICTT3",7,0)
 ;
"RTN","SAMICTT3",8,0)
 quit  ; no entry from top
"RTN","SAMICTT3",9,0)
 ;
"RTN","SAMICTT3",10,0)
 ;
"RTN","SAMICTT3",11,0)
 ;
"RTN","SAMICTT3",12,0)
 ;@section 0 primary development
"RTN","SAMICTT3",13,0)
 ;
"RTN","SAMICTT3",14,0)
 ;
"RTN","SAMICTT3",15,0)
 ;
"RTN","SAMICTT3",16,0)
 ;@license see routine SAMIUL
"RTN","SAMICTT3",17,0)
 ;@documentation see SAMICTUL
"RTN","SAMICTT3",18,0)
 ;@contents
"RTN","SAMICTT3",19,0)
 ; EMPHYS: emphysema section of ctreport text format
"RTN","SAMICTT3",20,0)
 ; $$CCMSTR = form phrases
"RTN","SAMICTT3",21,0)
 ; $$LOWC = convert X to lowercase
"RTN","SAMICTT3",22,0)
 ; OUT: output a line of ct report
"RTN","SAMICTT3",23,0)
 ; OUTOLD: old version of out
"RTN","SAMICTT3",24,0)
 ; HOUT: output a ct report header line
"RTN","SAMICTT3",25,0)
 ; $$XVAL = patient value for var
"RTN","SAMICTT3",26,0)
 ; $$XSUB = dictionary value defined by var
"RTN","SAMICTT3",27,0)
 ;
"RTN","SAMICTT3",28,0)
 ;
"RTN","SAMICTT3",29,0)
 ;
"RTN","SAMICTT3",30,0)
 ;@section 1 EMPHYS & related subroutines
"RTN","SAMICTT3",31,0)
 ;
"RTN","SAMICTT3",32,0)
 ;
"RTN","SAMICTT3",33,0)
 ;
"RTN","SAMICTT3",34,0)
EMPHYS(rtn,vals,dict) ; emphysema section of ct report text format
"RTN","SAMICTT3",35,0)
 ;
"RTN","SAMICTT3",36,0)
 ; repgen4,repgen5
"RTN","SAMICTT3",37,0)
 ;
"RTN","SAMICTT3",38,0)
 ;@called-by
"RTN","SAMICTT3",39,0)
 ; WSREPORT^SAMICTT0
"RTN","SAMICTT3",40,0)
 ;@calls
"RTN","SAMICTT3",41,0)
 ; $$XVAL
"RTN","SAMICTT3",42,0)
 ; HOUT
"RTN","SAMICTT3",43,0)
 ; OUT
"RTN","SAMICTT3",44,0)
 ; $$XSUB
"RTN","SAMICTT3",45,0)
 ; $$LOBESTR^SAMICTR2
"RTN","SAMICTT3",46,0)
 ; $$CCMSTR
"RTN","SAMICTT3",47,0)
 ; $$LOWC
"RTN","SAMICTT3",48,0)
 ;@input
"RTN","SAMICTT3",49,0)
 ; rtn
"RTN","SAMICTT3",50,0)
 ; vals
"RTN","SAMICTT3",51,0)
 ; dict
"RTN","SAMICTT3",52,0)
 ;@output: create emphysema section of ct eval report
"RTN","SAMICTT3",53,0)
 ;  
"RTN","SAMICTT3",54,0)
 ;# Emphysema
"RTN","SAMICTT3",55,0)
 ;
"RTN","SAMICTT3",56,0)
 n sp1 s sp1="  "
"RTN","SAMICTT3",57,0)
 s outmode="hold" s line=""
"RTN","SAMICTT3",58,0)
 ;if $$XVAL("ceemv",vals)'="e" d  ;
"RTN","SAMICTT3",59,0)
 if $$XVAL("ceem",vals)'="" d  ;
"RTN","SAMICTT3",60,0)
 . if $$XVAL("ceem",vals)="nv" q  ;
"RTN","SAMICTT3",61,0)
 . if $$XVAL("ceem",vals)="no" q  ;
"RTN","SAMICTT3",62,0)
 . ;d OUT("")
"RTN","SAMICTT3",63,0)
 . D HOUT("Emphysema: ")
"RTN","SAMICTT3",64,0)
 . ;d OUT("")
"RTN","SAMICTT3",65,0)
 . D OUT(sp1_$$XSUB("ceem",vals,dict))
"RTN","SAMICTT3",66,0)
 . s outmode="go" d OUT("")
"RTN","SAMICTT3",67,0)
 ;
"RTN","SAMICTT3",68,0)
 if $$XVAL("ceem",vals)="" d  ;
"RTN","SAMICTT3",69,0)
 . D HOUT("Emphysema: None")
"RTN","SAMICTT3",70,0)
 . s outmode="go" d OUT("")
"RTN","SAMICTT3",71,0)
 ;d OUT("")
"RTN","SAMICTT3",72,0)
 s outmode="hold"
"RTN","SAMICTT3",73,0)
 D HOUT("Pleura: ")
"RTN","SAMICTT3",74,0)
 ;d OUT("")
"RTN","SAMICTT3",75,0)
 ; hputs "Pleura:"
"RTN","SAMICTT3",76,0)
 N pe s pe=0
"RTN","SAMICTT3",77,0)
 ;
"RTN","SAMICTT3",78,0)
 ; # Pleural Effusion
"RTN","SAMICTT3",79,0)
 ; 
"RTN","SAMICTT3",80,0)
 i $$XVAL("cepev",vals)="y" d  ;
"RTN","SAMICTT3",81,0)
 . if $$XVAL("ceper",vals)="-" d  ;
"RTN","SAMICTT3",82,0)
 . . if $$XVAL("cepel",vals)="-" d  ;
"RTN","SAMICTT3",83,0)
 . . . s @vals@("cepev")="e"
"RTN","SAMICTT3",84,0)
 . ;
"RTN","SAMICTT3",85,0)
 . if $$XVAL("cepev",vals)'="e" d  ;
"RTN","SAMICTT3",86,0)
 . . if $$XVAL("ceper",vals)'="-" d  ;
"RTN","SAMICTT3",87,0)
 . . . if $$XVAL("cepel",vals)'="-" d  ;
"RTN","SAMICTT3",88,0)
 . . . . if $$XVAL("cepel",vals)=$$XVAL("ceper",vals) d  ;
"RTN","SAMICTT3",89,0)
 . . . . . d OUT(sp1_"Bilateral "_$$XSUB("cepe",vals,dict,"cepel")_" pleural effusions. ") d OUT("")
"RTN","SAMICTT3",90,0)
 . . . . else  d  ;
"RTN","SAMICTT3",91,0)
 . . . . . d OUT(sp1_"Bilateral pleural effusions ; "_$$XSUB("cepe",vals,dict,"cepel")_" on left, and "_$$XSUB("cepe",vals,dict,"ceper")_" on right. ")
"RTN","SAMICTT3",92,0)
 . . . . . s pe=1
"RTN","SAMICTT3",93,0)
 . . . else  d  ;
"RTN","SAMICTT3",94,0)
 . . . . d OUT(sp1_"On right "_$$XSUB("cepe",vals,dict,"cepr")_" pleural effusion and on left "_$$XSUB("cepe",vals,dict,"cepel")_" pleural effusion. ") d OUT("")
"RTN","SAMICTT3",95,0)
 . . . . s pe=1
"RTN","SAMICTT3",96,0)
 . . else  d  ;
"RTN","SAMICTT3",97,0)
 . . . d OUT(sp1_"On right "_$$XSUB("cepe",vals,dict,"cepr")_" pleural effusion and on left "_$$XSUB("cepe",vals,dict,"cepel")_" pleural effusion. ") d OUT("")
"RTN","SAMICTT3",98,0)
 . . . s pe=1
"RTN","SAMICTT3",99,0)
 . ;
"RTN","SAMICTT3",100,0)
 i $$XVAL("cepev",vals)'="y" d  ; 
"RTN","SAMICTT3",101,0)
 . d OUT(sp1_"No pleural effusions. ") d OUT("")
"RTN","SAMICTT3",102,0)
 ;  if { $pe == 0 } {
"RTN","SAMICTT3",103,0)
 ;    puts "[tr "No pleural effusions"].${para}"
"RTN","SAMICTT3",104,0)
 ;  }
"RTN","SAMICTT3",105,0)
 ;  
"RTN","SAMICTT3",106,0)
 n yespp s yespp=0
"RTN","SAMICTT3",107,0)
 ;
"RTN","SAMICTT3",108,0)
 if $$XVAL("cebatr",vals)="y" d  ;
"RTN","SAMICTT3",109,0)
 . ;d OUT("Rounded atelectasis in the ")
"RTN","SAMICTT3",110,0)
 . d OUT(sp1_"Rounded atelectasis in the "_$$LOBESTR^SAMICTR2("cebatrl1^cebatrl2^cebatrl3^cebatrl4^cebatrl5",0)_". ") ;d OUT("")
"RTN","SAMICTT3",111,0)
 . s yespp=1
"RTN","SAMICTT3",112,0)
 ;
"RTN","SAMICTT3",113,0)
 if $$XVAL("cept",vals)="y" d  ;
"RTN","SAMICTT3",114,0)
 . s yespp=1
"RTN","SAMICTT3",115,0)
 . s numl=0
"RTN","SAMICTT3",116,0)
 . set str=sp1_"Pleural thickening/plaques in the "
"RTN","SAMICTT3",117,0)
 . if $$XVAL("ceptrt",vals)="r" d  ;
"RTN","SAMICTT3",118,0)
 . . s str=str_"right"
"RTN","SAMICTT3",119,0)
 . . s numl=numl+1
"RTN","SAMICTT3",120,0)
 . if $$XVAL("ceptlt",vals)="l" d  ;
"RTN","SAMICTT3",121,0)
 . . i numl>0 d  ;
"RTN","SAMICTT3",122,0)
 . . . s str=str_" and"
"RTN","SAMICTT3",123,0)
 . . s str=str_" left"
"RTN","SAMICTT3",124,0)
 . . s numl=numl+1
"RTN","SAMICTT3",125,0)
 . ;if numl>1 d  ;
"RTN","SAMICTT3",126,0)
 . ;. s str=str_" lungs. "
"RTN","SAMICTT3",127,0)
 . ;else  d  ;
"RTN","SAMICTT3",128,0)
 . ;. s str=str_" lung. "
"RTN","SAMICTT3",129,0)
 . s str=str_". "
"RTN","SAMICTT3",130,0)
 . if numl=0 set str=sp1_"Pleural thickening/plaques. "
"RTN","SAMICTT3",131,0)
 . d OUT(str) ;d OUT("")
"RTN","SAMICTT3",132,0)
 ;
"RTN","SAMICTT3",133,0)
 if $$XVAL("cepu",vals)="y" d  ;
"RTN","SAMICTT3",134,0)
 . s yespp=1
"RTN","SAMICTT3",135,0)
 . if $l($$XVAL("cepus",vals))'=0 d  ;
"RTN","SAMICTT3",136,0)
 . . d OUT(sp1_"Pleural rumor: "_$$XVAL("cepus",vals))
"RTN","SAMICTT3",137,0)
 . e  d OUT(sp1_"Pleural tumor. ")
"RTN","SAMICTT3",138,0)
 . ;d OUT("")
"RTN","SAMICTT3",139,0)
 ;
"RTN","SAMICTT3",140,0)
 i yespp=0 d OUT("")
"RTN","SAMICTT3",141,0)
 ;
"RTN","SAMICTT3",142,0)
 d  ;
"RTN","SAMICTT3",143,0)
 . if $$XVAL("ceoppab",vals)'="" d OUT(sp1_$$XVAL("ceoppab",vals)_". ") ;d OUT("")
"RTN","SAMICTT3",144,0)
 . else  d
"RTN","SAMICTT3",145,0)
 . . if yespp=1 d OUT("")
"RTN","SAMICTT3",146,0)
 ;
"RTN","SAMICTT3",147,0)
 s outmode="go" d OUT("")
"RTN","SAMICTT3",148,0)
 ;
"RTN","SAMICTT3",149,0)
 s outmode="hold"
"RTN","SAMICTT3",150,0)
 d OUT("Coronary Artery Calcifications: ")
"RTN","SAMICTT3",151,0)
 ;# Coronary Calcification
"RTN","SAMICTT3",152,0)
 n vcac,cac,cacrec
"RTN","SAMICTT3",153,0)
 s (cac,cacrec)=""
"RTN","SAMICTT3",154,0)
 ;
"RTN","SAMICTT3",155,0)
 ; if $$XVAL("cecccac",vals)'="" d  ;
"RTN","SAMICTT3",156,0)
 ; . s @vals@("ceccv")="e"
"RTN","SAMICTT3",157,0)
 ;
"RTN","SAMICTT3",158,0)
 d  if $$XVAL("ceccv",vals)'="n" d  ;
"RTN","SAMICTT3",159,0)
 . set vcac=$$XVAL("cecccac",vals)
"RTN","SAMICTT3",160,0)
 . if vcac'="" d  ;
"RTN","SAMICTT3",161,0)
 . . s cacrec=""
"RTN","SAMICTT3",162,0)
 . . s cac="The Visual Coronary Artery Calcium (CAC) Score is "_vcac_". "
"RTN","SAMICTT3",163,0)
 . . s cacval=vcac
"RTN","SAMICTT3",164,0)
 . . i cacval>3 s cacrec=$g(@dict@("CAC_recommendation"))
"RTN","SAMICTT3",165,0)
 ;
"RTN","SAMICTT3",166,0)
 ;
"RTN","SAMICTT3",167,0)
 ;n samicac s samicac=0
"RTN","SAMICTT3",168,0)
 ;i $$XVAL("cecclm",vals)'="no" s samicac=1
"RTN","SAMICTT3",169,0)
 ;i $$XVAL("ceccld",vals)'="no" s samicac=1
"RTN","SAMICTT3",170,0)
 ;;i $$XVAL("cecclf",vals)'="no" s samicac=1
"RTN","SAMICTT3",171,0)
 ;i $$XVAL("cecccf",vals)'="no" s samicac=1
"RTN","SAMICTT3",172,0)
 ;i $$XVAL("ceccrc",vals)'="no" s samicac=1
"RTN","SAMICTT3",173,0)
 ;
"RTN","SAMICTT3",174,0)
 ;;s outmode="hold" s line=""
"RTN","SAMICTT3",175,0)
 ;i samicac=1 d  ;
"RTN","SAMICTT3",176,0)
 i $g(@vals@("cecclm"))="-" s @vals@("cecclm")="no"
"RTN","SAMICTT3",177,0)
 i $g(@vals@("ceccld"))="-" s @vals@("ceccld")="no"
"RTN","SAMICTT3",178,0)
 i $g(@vals@("cecccf"))="-" s @vals@("cecccf")="no"
"RTN","SAMICTT3",179,0)
 i $g(@vals@("ceccrc"))="-" s @vals@("ceccrc")="no"
"RTN","SAMICTT3",180,0)
 i $g(@vals@("cecclm"))="" s @vals@("cecclm")="no"
"RTN","SAMICTT3",181,0)
 i $g(@vals@("ceccld"))="" s @vals@("ceccld")="no"
"RTN","SAMICTT3",182,0)
 i $g(@vals@("cecccf"))="" s @vals@("cecccf")="no"
"RTN","SAMICTT3",183,0)
 i $g(@vals@("ceccrc"))="" s @vals@("ceccrc")="no"
"RTN","SAMICTT3",184,0)
 ;
"RTN","SAMICTT3",185,0)
 d  ;
"RTN","SAMICTT3",186,0)
 . d OUT($$XSUB("cecc",vals,dict,"cecclm")_" in left main, ")
"RTN","SAMICTT3",187,0)
 . d OUT($$XSUB("cecc",vals,dict,"ceccld")_" in left anterior descending, ")
"RTN","SAMICTT3",188,0)
 . ;d OUT($$XSUB("cecc",vals,dict,"cecclf")_" in circumflex, and ")
"RTN","SAMICTT3",189,0)
 . d OUT($$XSUB("cecc",vals,dict,"cecccf")_" in circumflex, and ")
"RTN","SAMICTT3",190,0)
 . d OUT($$XSUB("cecc",vals,dict,"ceccrc")_" in right coronary. "_cac)
"RTN","SAMICTT3",191,0)
 . s outmode="go"
"RTN","SAMICTT3",192,0)
 . d OUT("")
"RTN","SAMICTT3",193,0)
 ; 
"RTN","SAMICTT3",194,0)
 s outmode="hold"
"RTN","SAMICTT3",195,0)
 if $$XVAL("cecca",vals)'="-" d  ;
"RTN","SAMICTT3",196,0)
 . d HOUT("Aortic Calcifications: ")
"RTN","SAMICTT3",197,0)
 . d OUT($$XSUB("cecc",vals,dict,"cecca"))
"RTN","SAMICTT3",198,0)
 . s outmode="go" d OUT("")
"RTN","SAMICTT3",199,0)
 ;
"RTN","SAMICTT3",200,0)
 s outmode="hold"
"RTN","SAMICTT3",201,0)
 n ocf s ocf=0
"RTN","SAMICTT3",202,0)
 d HOUT("Other Cardiac Findings: ")
"RTN","SAMICTT3",203,0)
 ;d HOUT("Other Cardiac Findings: ")
"RTN","SAMICTT3",204,0)
 ;
"RTN","SAMICTT3",205,0)
 ;s outmode="hold"
"RTN","SAMICTT3",206,0)
 ;# Pericardial Effusion
"RTN","SAMICTT3",207,0)
 if $$XVAL("ceprevm",vals)'="-" d  ;
"RTN","SAMICTT3",208,0)
 . if $$XVAL("ceprevm",vals)'="no" d  ;
"RTN","SAMICTT3",209,0)
 . . if $$XVAL("ceprevm",vals)'="" d
"RTN","SAMICTT3",210,0)
 . . . d OUT("A "_$$XSUB("ceprevm",vals,dict,"ceprevm")_" pericardial effusion"_". ") d OUT("")
"RTN","SAMICTT3",211,0)
 . . . s pe=1 s ocf=1
"RTN","SAMICTT3",212,0)
 . . else  d OUT("No pericardial effusion. ") d OUT("")
"RTN","SAMICTT3",213,0)
 ;
"RTN","SAMICTT3",214,0)
 ;
"RTN","SAMICTT3",215,0)
 ;;# Pulmonary and Aortic Diameter
"RTN","SAMICTT3",216,0)
 i $$XVAL("cepaw",vals)'="" d  ;
"RTN","SAMICTT3",217,0)
 . d OUT("Widest main pulmonary artery diameter is "_$$XVAL("cepaw",vals)_" mm. ")
"RTN","SAMICTT3",218,0)
 . if $$XVAL("ceaow",vals)'="" d  ;
"RTN","SAMICTT3",219,0)
 . . d OUT("Widest ascending aortic diameter at the same level is "_$$XVAL("ceaow",vals)_" mm. ")
"RTN","SAMICTT3",220,0)
 . . if $$XVAL("cepar",vals)'="" d  ;
"RTN","SAMICTT3",221,0)
 . . . d OUT("The ratio is "_$$XVAL("cepar",vals)_". ")
"RTN","SAMICTT3",222,0)
 . d OUT("") s ocf=1
"RTN","SAMICTT3",223,0)
 ;
"RTN","SAMICTT3",224,0)
 ; #"Additional Comments on Cardiac Abnormalities:"
"RTN","SAMICTT3",225,0)
 if $$XVAL("cecommca",vals)'="" d  ;
"RTN","SAMICTT3",226,0)
 . d OUT($$XVAL("cecommca",vals)_". ")
"RTN","SAMICTT3",227,0)
 . s ocf=1
"RTN","SAMICTT3",228,0)
 i ocf=0 d OUT("None. ")
"RTN","SAMICTT3",229,0)
 s outmode="go"
"RTN","SAMICTT3",230,0)
 d OUT("")
"RTN","SAMICTT3",231,0)
 ;
"RTN","SAMICTT3",232,0)
 ;
"RTN","SAMICTT3",233,0)
 s outmode="hold"
"RTN","SAMICTT3",234,0)
 d HOUT("Mediastinum: ")
"RTN","SAMICTT3",235,0)
 n yesmm s yesmm=0
"RTN","SAMICTT3",236,0)
 n abn
"RTN","SAMICTT3",237,0)
 i ($$XVAL("ceoma",vals)="y")&($$XVAL("ceata",vals)="y") d  ;
"RTN","SAMICTT3",238,0)
 . s yeamm=1
"RTN","SAMICTT3",239,0)
 . s abn=$$CCMSTR("ceatc^ceaty^ceatm",vals)
"RTN","SAMICTT3",240,0)
 . ;d OUT("[abn="_abn_"]")
"RTN","SAMICTT3",241,0)
 . i abn="" d OUT(sp1_"Noted in the thyroid. ")
"RTN","SAMICTT3",242,0)
 . i abn'="" d OUT(sp1_abn_" thyroid. ")
"RTN","SAMICTT3",243,0)
 . i $$XVAL("ceato",vals)="o" d OUT(sp1_$$XVAL("ceatos",vals)_"<br>")
"RTN","SAMICTT3",244,0)
 i $$XVAL("ceaya",vals)="y" d  ;
"RTN","SAMICTT3",245,0)
 . s yesmm=1
"RTN","SAMICTT3",246,0)
 . s abn=$$CCMSTR("ceayc^ceayy^ceaym",vals)
"RTN","SAMICTT3",247,0)
 . i abn="" d OUT(sp1_"Noted in the thymus")
"RTN","SAMICTT3",248,0)
 . i abn'="" d OUT(sp1_abn_" thymus. ")
"RTN","SAMICTT3",249,0)
 . i $$XVAL("ceayo",vals)="o" d OUT(sp1_$$XVAL("ceayos",vals))
"RTN","SAMICTT3",250,0)
 ;
"RTN","SAMICTT3",251,0)
 ;   # Non-calcified lymph nodes
"RTN","SAMICTT3",252,0)
 n lnlist,lnlistt
"RTN","SAMICTT3",253,0)
 set lnlist(1)="cemlnl1"
"RTN","SAMICTT3",254,0)
 set lnlist(2)="cemlnl2r"
"RTN","SAMICTT3",255,0)
 set lnlist(3)="cemlnl2l"
"RTN","SAMICTT3",256,0)
 set lnlist(4)="cemlnl3"
"RTN","SAMICTT3",257,0)
 set lnlist(5)="cemlnl4r"
"RTN","SAMICTT3",258,0)
 set lnlist(6)="cemlnl4l"
"RTN","SAMICTT3",259,0)
 set lnlist(7)="cemlnl5"
"RTN","SAMICTT3",260,0)
 set lnlist(8)="cemlnl6"
"RTN","SAMICTT3",261,0)
 set lnlist(9)="cemlnl7"
"RTN","SAMICTT3",262,0)
 set lnlist(10)="cemlnl8"
"RTN","SAMICTT3",263,0)
 set lnlist(11)="cemlnl9"
"RTN","SAMICTT3",264,0)
 set lnlist(12)="cemlnl10r"
"RTN","SAMICTT3",265,0)
 set lnlist(13)="cemlnl10l"
"RTN","SAMICTT3",266,0)
 ;
"RTN","SAMICTT3",267,0)
 set lnlistt(1)="high mediastinal"
"RTN","SAMICTT3",268,0)
 set lnlistt(2)="right upper paratracheal"
"RTN","SAMICTT3",269,0)
 set lnlistt(3)="left upper paratracheal"
"RTN","SAMICTT3",270,0)
 set lnlistt(4)="prevascular/retrotracheal"
"RTN","SAMICTT3",271,0)
 set lnlistt(5)="right lower paratracheal"
"RTN","SAMICTT3",272,0)
 set lnlistt(6)="left lower paratracheal"
"RTN","SAMICTT3",273,0)
 set lnlistt(7)="sub-aortic (A-P window)"
"RTN","SAMICTT3",274,0)
 set lnlistt(8)="para-aortic"
"RTN","SAMICTT3",275,0)
 set lnlistt(9)="subcarinal"
"RTN","SAMICTT3",276,0)
 set lnlistt(10)="para-esophageal"
"RTN","SAMICTT3",277,0)
 set lnlistt(11)="pulmonary ligament"
"RTN","SAMICTT3",278,0)
 set lnlistt(12)="right hilar"
"RTN","SAMICTT3",279,0)
 set lnlistt(13)="left hilar"
"RTN","SAMICTT3",280,0)
 ;
"RTN","SAMICTT3",281,0)
 ;
"RTN","SAMICTT3",282,0)
 ;s outmode="hold"
"RTN","SAMICTT3",283,0)
 if $$XVAL("cemln",vals)="y" d  ;
"RTN","SAMICTT3",284,0)
 . s yesmm=1
"RTN","SAMICTT3",285,0)
 . n llist,item
"RTN","SAMICTT3",286,0)
 . s (llist,item)=""
"RTN","SAMICTT3",287,0)
 . f  s item=$o(lnlist(item)) q:item=""  d  ;
"RTN","SAMICTT3",288,0)
 . . i $$XVAL(lnlist(item),vals)'="" s llist($o(llist(""),-1)+1)=lnlist(item)
"RTN","SAMICTT3",289,0)
 . n lnum,slnum
"RTN","SAMICTT3",290,0)
 . s lnum=$o(llist(""),-1)
"RTN","SAMICTT3",291,0)
 . i lnum=0 d OUT("Enlarged or growing lymph nodes are noted. ")
"RTN","SAMICTT3",292,0)
 . i lnum>0 d  ;
"RTN","SAMICTT3",293,0)
 . . s slnum=lnum
"RTN","SAMICTT3",294,0)
 . . d OUT("Enlarged or growing lymph nodes in the ")
"RTN","SAMICTT3",295,0)
 . . s item=""
"RTN","SAMICTT3",296,0)
 . . f  s item=$o(llist(item)) q:item=""  d  ;
"RTN","SAMICTT3",297,0)
 . . . d OUT(lnlistt(item))
"RTN","SAMICTT3",298,0)
 . . . i lnum>2 d OUT(", ")
"RTN","SAMICTT3",299,0)
 . . . i lnum=2 d OUT(" and ")
"RTN","SAMICTT3",300,0)
 . . . s lnum=lnum-1
"RTN","SAMICTT3",301,0)
 . . i slnum>1 d OUT(" locations. ")
"RTN","SAMICTT3",302,0)
 . . i slnum=1 d OUT(" location. ")
"RTN","SAMICTT3",303,0)
 ;
"RTN","SAMICTT3",304,0)
 ;s outmode="go"
"RTN","SAMICTT3",305,0)
 ;d OUT("")
"RTN","SAMICTT3",306,0)
 ;
"RTN","SAMICTT3",307,0)
 if $$XVAL("cemlncab",vals)="y" d  ;
"RTN","SAMICTT3",308,0)
 . set yesmm=1
"RTN","SAMICTT3",309,0)
 . d OUT("Calcified lymph nodes present. ")
"RTN","SAMICTT3",310,0)
 ;
"RTN","SAMICTT3",311,0)
 if $$XVAL("ceagaln",vals)="y" d  ;
"RTN","SAMICTT3",312,0)
 . set yesmm=1
"RTN","SAMICTT3",313,0)
 . d OUT("Enlarged or growing axillary lymph nodes without central fat are seen. ")
"RTN","SAMICTT3",314,0)
 . d OUT($$XVAL("ceagalns",vals))
"RTN","SAMICTT3",315,0)
 ;
"RTN","SAMICTT3",316,0)
 if $$XVAL("cemva",vals)="y" d  ;
"RTN","SAMICTT3",317,0)
 . set yesmm=1
"RTN","SAMICTT3",318,0)
 . if $$XVAL("cemvaa",vals)="a" d  ;
"RTN","SAMICTT3",319,0)
 . . d OUT("Other vascular abnormalities are seen in the aorta. ")
"RTN","SAMICTT3",320,0)
 . if $$XVAL("cemvaa",vals)="w" d  ;
"RTN","SAMICTT3",321,0)
 . . d OUT("Other vascular abnormalities are seen in the pulmonary series. ")
"RTN","SAMICTT3",322,0)
 . d OUT($$XVAL("cemvaos",vals)_"<br>")
"RTN","SAMICTT3",323,0)
 ;
"RTN","SAMICTT3",324,0)
 ;s outmode="hold"
"RTN","SAMICTT3",325,0)
 ;   # Esophageal
"RTN","SAMICTT3",326,0)
 if $$XVAL("cemeln",vals)="y" d  ;
"RTN","SAMICTT3",327,0)
 . set yesmm=1
"RTN","SAMICTT3",328,0)
 . n elist s elist=""
"RTN","SAMICTT3",329,0)
 . set numl=0
"RTN","SAMICTT3",330,0)
 . if $$XVAL("cemelna",vals)="a" d  ;
"RTN","SAMICTT3",331,0)
 . . s elist($o(elist(""),-1)+1)="Air-fluid level"
"RTN","SAMICTT3",332,0)
 . . s numl=numl+1
"RTN","SAMICTT3",333,0)
 . if $$XVAL("cemelnw",vals)="w" d  ;
"RTN","SAMICTT3",334,0)
 . . s elist($o(elist(""),-1)+1)="Wall thickening"
"RTN","SAMICTT3",335,0)
 . . s numl=numl+1
"RTN","SAMICTT3",336,0)
 . if $$XVAL("cemelnm",vals)="m" d  ;
"RTN","SAMICTT3",337,0)
 . . s elist($o(elist(""),-1)+1)="A mass"
"RTN","SAMICTT3",338,0)
 . . s numl=numl+1
"RTN","SAMICTT3",339,0)
 . if numl=0 d OUT("Esophageal abnormality noted. ")
"RTN","SAMICTT3",340,0)
 . e  d  ;
"RTN","SAMICTT3",341,0)
 . . d OUT($g(elist(1)))
"RTN","SAMICTT3",342,0)
 . . if numl=1 d OUT(" is ")
"RTN","SAMICTT3",343,0)
 . . e  d  ;
"RTN","SAMICTT3",344,0)
 . . . if numl=2 d  ;
"RTN","SAMICTT3",345,0)
 . . . . d OUT(" and ")
"RTN","SAMICTT3",346,0)
 . . . e  d OUT(", ")
"RTN","SAMICTT3",347,0)
 . . . d OUT($$LOWC($g(elist(2))))
"RTN","SAMICTT3",348,0)
 . . . if numl=3 d  ;
"RTN","SAMICTT3",349,0)
 . . . . d OUT(", and "_$$LOWC($g(elist(3))))
"RTN","SAMICTT3",350,0)
 . . d OUT("seen in the esophagus. ")
"RTN","SAMICTT3",351,0)
 . d OUT($$XVAL("cemelnos",vals))
"RTN","SAMICTT3",352,0)
 ;s outmode="go"
"RTN","SAMICTT3",353,0)
 ;d OUT("")
"RTN","SAMICTT3",354,0)
 ;
"RTN","SAMICTT3",355,0)
 ;
"RTN","SAMICTT3",356,0)
 if $$XVAL("cehhn",vals)="y" d  ;
"RTN","SAMICTT3",357,0)
 . set yesmm=1
"RTN","SAMICTT3",358,0)
 . if $$XVAL("cehhnos",vals)'="" d OUT("Hiatal hernia: "_$$XVAL("cehhnos",vals))
"RTN","SAMICTT3",359,0)
 . if $$XVAL("cehhnos",vals)="" d OUT("Hiatal hernia. ")
"RTN","SAMICTT3",360,0)
 . d OUT("")
"RTN","SAMICTT3",361,0)
 ;
"RTN","SAMICTT3",362,0)
 if $$XVAL("ceomm",vals)="y" d  ;
"RTN","SAMICTT3",363,0)
 . set yesmm=1
"RTN","SAMICTT3",364,0)
 . n tval
"RTN","SAMICTT3",365,0)
 . set tval=$$XVAL("ceommos",vals)
"RTN","SAMICTT3",366,0)
 . set abn=$$CCMSTR("ceamc^ceamy^ceamm",vals)
"RTN","SAMICTT3",367,0)
 . if abn="" d OUT(sp1_"Abnormality noted in the mediastinum. ")
"RTN","SAMICTT3",368,0)
 . e  d OUT(sp1_abn_" mediastinum. ")
"RTN","SAMICTT3",369,0)
 . d OUT(tval)
"RTN","SAMICTT3",370,0)
 ;i yesmm=0 d OUT(sp1_"No abnormalities. ")
"RTN","SAMICTT3",371,0)
 i yesmm=0 d OUT(sp1_"Unremarkable. ")
"RTN","SAMICTT3",372,0)
 i $$XVAL("ceotabnm",vals)'="" d  ;
"RTN","SAMICTT3",373,0)
 . d OUT(sp1_$$XVAL("ceotabnm",vals)_". ")
"RTN","SAMICTT3",374,0)
 s outmode="go"
"RTN","SAMICTT3",375,0)
 d OUT("")
"RTN","SAMICTT3",376,0)
 ;
"RTN","SAMICTT3",377,0)
 ;
"RTN","SAMICTT3",378,0)
 quit  ; end of EMPHYS
"RTN","SAMICTT3",379,0)
 ;
"RTN","SAMICTT3",380,0)
 ;
"RTN","SAMICTT3",381,0)
 ;
"RTN","SAMICTT3",382,0)
CCMSTR(lst,vals) ; extrinsic that forms phrases
"RTN","SAMICTT3",383,0)
 ;
"RTN","SAMICTT3",384,0)
 ;@called-by
"RTN","SAMICTT3",385,0)
 ; EMPHYS
"RTN","SAMICTT3",386,0)
 ;@calls
"RTN","SAMICTT3",387,0)
 ; $$XVAL
"RTN","SAMICTT3",388,0)
 ; $$LOWC
"RTN","SAMICTT3",389,0)
 ;@input
"RTN","SAMICTT3",390,0)
 ; lst
"RTN","SAMICTT3",391,0)
 ; vals
"RTN","SAMICTT3",392,0)
 ;@output = phrase for comments
"RTN","SAMICTT3",393,0)
 ;
"RTN","SAMICTT3",394,0)
 n retstr s retstr=""
"RTN","SAMICTT3",395,0)
 n lblist s lblist=""
"RTN","SAMICTT3",396,0)
 n lb,ib s ib=""
"RTN","SAMICTT3",397,0)
 f lb=1:1:$l(lst,"^") d  ;
"RTN","SAMICTT3",398,0)
 . n lvar s lvar=$p(lst,"^",lb)
"RTN","SAMICTT3",399,0)
 . s ib=$$XVAL($p(lst,"^",lb),vals)
"RTN","SAMICTT3",400,0)
 . if ib'="" d  ;
"RTN","SAMICTT3",401,0)
 . . i ib="y" d  ; 
"RTN","SAMICTT3",402,0)
 . . . i $f("ceasc cealc ceapc ceapc ceaac ceakc",lvar)>0 s lblist($o(lblist(""),-1)+1)="Calcification"
"RTN","SAMICTT3",403,0)
 . . . ;i "ceasc cealc ceapc ceapc ceaac ceakc"[lb s lblist($o(lblist(""),-1)+1)="Calcification"
"RTN","SAMICTT3",404,0)
 . . . else  s lblist($o(lblist(""),-1)+1)="Cyst"
"RTN","SAMICTT3",405,0)
 . . i ib="c" s lblist($o(lblist(""),-1)+1)="Calcification"
"RTN","SAMICTT3",406,0)
 . . i ib="m" s lblist($o(lblist(""),-1)+1)="Mass"
"RTN","SAMICTT3",407,0)
 i $o(lblist(""),-1)=1 s retstr=retstr_lblist(1)_" is seen in the"
"RTN","SAMICTT3",408,0)
 e  i $o(lblist(""),-1)=2 s retstr=retstr_lblist(1)_" and "_$$LOWC(lblist(2))_" are seen in the"
"RTN","SAMICTT3",409,0)
 e  i $o(lblist(""),-1)=3 s retstr=retstr_"Calicification, cyst, and mass are seen in the"
"RTN","SAMICTT3",410,0)
 ;
"RTN","SAMICTT3",411,0)
 quit retstr ; end of $$CCMSTR
"RTN","SAMICTT3",412,0)
 ;
"RTN","SAMICTT3",413,0)
 ;
"RTN","SAMICTT3",414,0)
 ;
"RTN","SAMICTT3",415,0)
LOWC(X) ; convert X to lowercase
"RTN","SAMICTT3",416,0)
 ;
"RTN","SAMICTT3",417,0)
 ;@called-by
"RTN","SAMICTT3",418,0)
 ; EMPHYS
"RTN","SAMICTT3",419,0)
 ; $$CCMSTR
"RTN","SAMICTT3",420,0)
 ;@calls none
"RTN","SAMICTT3",421,0)
 ;@input
"RTN","SAMICTT3",422,0)
 ; X
"RTN","SAMICTT3",423,0)
 ;@output = lowercase string
"RTN","SAMICTT3",424,0)
 ;
"RTN","SAMICTT3",425,0)
 quit $translate(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","SAMICTT3",426,0)
 ;
"RTN","SAMICTT3",427,0)
 ;
"RTN","SAMICTT3",428,0)
 ;
"RTN","SAMICTT3",429,0)
OUT(ln) ; output a line of ct report
"RTN","SAMICTT3",430,0)
 ;
"RTN","SAMICTT3",431,0)
 ;@called-by
"RTN","SAMICTT3",432,0)
 ; EMPHYS
"RTN","SAMICTT3",433,0)
 ;@calls none
"RTN","SAMICTT3",434,0)
 ;@input
"RTN","SAMICTT3",435,0)
 ; ln = output to add
"RTN","SAMICTT3",436,0)
 ;@output: line added to report
"RTN","SAMICTT3",437,0)
 ;
"RTN","SAMICTT3",438,0)
 i outmode="hold" s line=line_ln q  ;
"RTN","SAMICTT3",439,0)
 s cnt=cnt+1
"RTN","SAMICTT3",440,0)
 n lnn
"RTN","SAMICTT3",441,0)
 ;s debug=1
"RTN","SAMICTT3",442,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTT3",443,0)
 i outmode="go" d  ;
"RTN","SAMICTT3",444,0)
 . s @rtn@(lnn)=line
"RTN","SAMICTT3",445,0)
 . s line=""
"RTN","SAMICTT3",446,0)
 . s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTT3",447,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTT3",448,0)
 ;
"RTN","SAMICTT3",449,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTT3",450,0)
 . i ln["<" q  ; no markup
"RTN","SAMICTT3",451,0)
 . n zs s zs=$STACK
"RTN","SAMICTT3",452,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTT3",453,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTT3",454,0)
 ;
"RTN","SAMICTT3",455,0)
 quit  ; end of OUT
"RTN","SAMICTT3",456,0)
 ;
"RTN","SAMICTT3",457,0)
 ;
"RTN","SAMICTT3",458,0)
 ;
"RTN","SAMICTT3",459,0)
OUTOLD(ln) ; old version of out
"RTN","SAMICTT3",460,0)
 ;
"RTN","SAMICTT3",461,0)
 ;@called-by none
"RTN","SAMICTT3",462,0)
 ;@calls none
"RTN","SAMICTT3",463,0)
 ;@input
"RTN","SAMICTT3",464,0)
 ; ln = output to add
"RTN","SAMICTT3",465,0)
 ;@output: line added to report
"RTN","SAMICTT3",466,0)
 ;
"RTN","SAMICTT3",467,0)
 s cnt=cnt+1
"RTN","SAMICTT3",468,0)
 n lnn
"RTN","SAMICTT3",469,0)
 ;s debug=1
"RTN","SAMICTT3",470,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTT3",471,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTT3",472,0)
 ;
"RTN","SAMICTT3",473,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTT3",474,0)
 . i ln["<" q  ; no markup
"RTN","SAMICTT3",475,0)
 . n zs s zs=$STACK
"RTN","SAMICTT3",476,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTT3",477,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTT3",478,0)
 ;
"RTN","SAMICTT3",479,0)
 quit  ; end of OUTOLD
"RTN","SAMICTT3",480,0)
 ;
"RTN","SAMICTT3",481,0)
 ;
"RTN","SAMICTT3",482,0)
 ;
"RTN","SAMICTT3",483,0)
HOUT(ln) ; output a ct report header line
"RTN","SAMICTT3",484,0)
 ;
"RTN","SAMICTT3",485,0)
 ;@called-by
"RTN","SAMICTT3",486,0)
 ; EMPHYS
"RTN","SAMICTT3",487,0)
 ;@calls
"RTN","SAMICTT3",488,0)
 ; OUT
"RTN","SAMICTT3",489,0)
 ;@input
"RTN","SAMICTT3",490,0)
 ; ln = header output to add
"RTN","SAMICTT3",491,0)
 ;@output: header line added to report
"RTN","SAMICTT3",492,0)
 ;
"RTN","SAMICTT3",493,0)
 D OUT(ln)
"RTN","SAMICTT3",494,0)
 ;d OUT("<p><span class='sectionhead'>"_ln_"</span>")
"RTN","SAMICTT3",495,0)
 ;
"RTN","SAMICTT3",496,0)
 quit  ; end of HOUT
"RTN","SAMICTT3",497,0)
 ;
"RTN","SAMICTT3",498,0)
 ;
"RTN","SAMICTT3",499,0)
 ;
"RTN","SAMICTT3",500,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMICTT3",501,0)
 ;
"RTN","SAMICTT3",502,0)
 ;@called-by
"RTN","SAMICTT3",503,0)
 ; EMPHYS
"RTN","SAMICTT3",504,0)
 ; $$CCMSTR
"RTN","SAMICTT3",505,0)
 ;@calls none
"RTN","SAMICTT3",506,0)
 ;@input
"RTN","SAMICTT3",507,0)
 ; var
"RTN","SAMICTT3",508,0)
 ; vals is passed by nam
"RTN","SAMICTT3",509,0)
 ;@output = patient value for var
"RTN","SAMICTT3",510,0)
 ;
"RTN","SAMICTT3",511,0)
 ;e
"RTN","SAMICTT3",512,0)
 n zr
"RTN","SAMICTT3",513,0)
 s zr=$g(@vals@(var))
"RTN","SAMICTT3",514,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMICTT3",515,0)
 ;
"RTN","SAMICTT3",516,0)
 quit zr ; end of $$XVAL
"RTN","SAMICTT3",517,0)
 ;
"RTN","SAMICTT3",518,0)
 ;
"RTN","SAMICTT3",519,0)
 ;
"RTN","SAMICTT3",520,0)
XSUB(var,vals,dict,valdx) ; extrinsic which returns the dictionary value defined by var
"RTN","SAMICTT3",521,0)
 ;
"RTN","SAMICTT3",522,0)
 ;@called-by
"RTN","SAMICTT3",523,0)
 ; EMPHYS
"RTN","SAMICTT3",524,0)
 ;@calls none
"RTN","SAMICTT3",525,0)
 ;@input
"RTN","SAMICTT3",526,0)
 ; var
"RTN","SAMICTT3",527,0)
 ; vals and dict are passed by name
"RTN","SAMICTT3",528,0)
 ; valdx is used for nodules ala cect2co with the nodule number included
"RTN","SAMICTT3",529,0)
 ;@output = dictionary value for var
"RTN","SAMICTT3",530,0)
 ;
"RTN","SAMICTT3",531,0)
 ;
"RTN","SAMICTT3",532,0)
 ;n dict s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTT3",533,0)
 n zr,zv,zdx
"RTN","SAMICTT3",534,0)
 s zdx=$g(valdx)
"RTN","SAMICTT3",535,0)
 i zdx="" s zdx=var
"RTN","SAMICTT3",536,0)
 s zv=$g(@vals@(zdx))
"RTN","SAMICTT3",537,0)
 ;i zv="" s zr="["_var_"]" q zr
"RTN","SAMICTT3",538,0)
 i zv="" s zr="" q zr
"RTN","SAMICTT3",539,0)
 s zr=$g(@dict@(var,zv))
"RTN","SAMICTT3",540,0)
 ;i zr="" s zr="["_var_","_zv_"]"
"RTN","SAMICTT3",541,0)
 ;
"RTN","SAMICTT3",542,0)
 quit zr ; end of $$XSUB
"RTN","SAMICTT3",543,0)
 ;
"RTN","SAMICTT3",544,0)
 ;
"RTN","SAMICTT3",545,0)
 ;
"RTN","SAMICTT3",546,0)
EOR ; end of routine SAMICTT3
"RTN","SAMICTT4")
0^23^B54435090
"RTN","SAMICTT4",1,0)
SAMICTT4 ;ven/gpl - ctreport text breast abnorm ;2021-03-22T15:18Z
"RTN","SAMICTT4",2,0)
 ;;18.0;SAMI;**4,10**;2020-01;Build 1
"RTN","SAMICTT4",3,0)
 ;;1.18.0.10-i10
"RTN","SAMICTT4",4,0)
 ;
"RTN","SAMICTT4",5,0)
 ; SAMICTT4 creates the Breast Abnormalities section of the ELCAP CT
"RTN","SAMICTT4",6,0)
 ; Report in text format.
"RTN","SAMICTT4",7,0)
 ;
"RTN","SAMICTT4",8,0)
 quit  ; no entry from top
"RTN","SAMICTT4",9,0)
 ;
"RTN","SAMICTT4",10,0)
 ;
"RTN","SAMICTT4",11,0)
 ;
"RTN","SAMICTT4",12,0)
 ;@section 0 primary development
"RTN","SAMICTT4",13,0)
 ;
"RTN","SAMICTT4",14,0)
 ;
"RTN","SAMICTT4",15,0)
 ;
"RTN","SAMICTT4",16,0)
 ;@license see routine SAMIUL
"RTN","SAMICTT4",17,0)
 ;@documentation see SAMICTUL
"RTN","SAMICTT4",18,0)
 ;@contents
"RTN","SAMICTT4",19,0)
 ; BREAST: breast abnormalities section of ct report text
"RTN","SAMICTT4",20,0)
 ; OUT: output a line of ct report
"RTN","SAMICTT4",21,0)
 ; OUTOLD: old version of out
"RTN","SAMICTT4",22,0)
 ; HOUT: output a ct report header line
"RTN","SAMICTT4",23,0)
 ; $$XVAL = patient value for var
"RTN","SAMICTT4",24,0)
 ; $$XSUB = dictionary value defined by var
"RTN","SAMICTT4",25,0)
 ;
"RTN","SAMICTT4",26,0)
 ;
"RTN","SAMICTT4",27,0)
 ;
"RTN","SAMICTT4",28,0)
 ;@section 1 BREAST & related subroutines
"RTN","SAMICTT4",29,0)
 ;
"RTN","SAMICTT4",30,0)
 ;
"RTN","SAMICTT4",31,0)
 ;
"RTN","SAMICTT4",32,0)
BREAST(rtn,vals,dict) ; breast abnormalities section of ct report text
"RTN","SAMICTT4",33,0)
 ;
"RTN","SAMICTT4",34,0)
 ; repgen6
"RTN","SAMICTT4",35,0)
 ;
"RTN","SAMICTT4",36,0)
 ;@called-by
"RTN","SAMICTT4",37,0)
 ; WSREPORT^SAMICTT0
"RTN","SAMICTT4",38,0)
 ;@calls
"RTN","SAMICTT4",39,0)
 ; $$XVAL
"RTN","SAMICTT4",40,0)
 ; OUT
"RTN","SAMICTT4",41,0)
 ; $$CCMSTR^SAMICTR3
"RTN","SAMICTT4",42,0)
 ; $$XSUB
"RTN","SAMICTT4",43,0)
 ; $$LOWC^SAMICTR3
"RTN","SAMICTT4",44,0)
 ;@input
"RTN","SAMICTT4",45,0)
 ; rtn
"RTN","SAMICTT4",46,0)
 ; vals
"RTN","SAMICTT4",47,0)
 ; dict
"RTN","SAMICTT4",48,0)
 ;@output: create breast abnormalities section of ct report text
"RTN","SAMICTT4",49,0)
 ;
"RTN","SAMICTT4",50,0)
 n sp1 s sp1="  "
"RTN","SAMICTT4",51,0)
 n outmode s outmode="hold"
"RTN","SAMICTT4",52,0)
 n line s line=""
"RTN","SAMICTT4",53,0)
 n destr s destr="is seen"
"RTN","SAMICTT4",54,0)
 n sba set sba=0
"RTN","SAMICTT4",55,0)
 ;   # Breast Abnormalities
"RTN","SAMICTT4",56,0)
 n bd,brt,blt
"RTN","SAMICTT4",57,0)
 s (bd,brt,blt)=0
"RTN","SAMICTT4",58,0)
 if $$XVAL("ceobard",vals)'="-" s brt=$$XVAL("ceobard",vals)
"RTN","SAMICTT4",59,0)
 if $$XVAL("ceobald",vals)'="-" s brt=$$XVAL("ceobald",vals)
"RTN","SAMICTT4",60,0)
 if (blt'=0)!(brt'=0) d  ;
"RTN","SAMICTT4",61,0)
 . d OUT("Breast:")
"RTN","SAMICTT4",62,0)
 . s bd=1
"RTN","SAMICTT4",63,0)
 s outmode="hold"
"RTN","SAMICTT4",64,0)
 if $$XVAL("ceara",vals)="y" d  ; our substitute for ceoba, which is null
"RTN","SAMICTT4",65,0)
 . if bd=0 d OUT("Breast:")
"RTN","SAMICTT4",66,0)
 . if $$XVAL("ceara",vals)="y" d  ;
"RTN","SAMICTT4",67,0)
 . . set sba=1
"RTN","SAMICTT4",68,0)
 . . n br
"RTN","SAMICTT4",69,0)
 . . set br=$$CCMSTR^SAMICTR3("ceobarc^ceobary^ceobarm",vals)
"RTN","SAMICTT4",70,0)
 . . if br="" d OUT("Noted in right breast: ")
"RTN","SAMICTT4",71,0)
 . . if br'="" d OUT(br_" right breast. ")
"RTN","SAMICTT4",72,0)
 . . d OUT($$XVAL("ceobaros",vals))
"RTN","SAMICTT4",73,0)
 if $$XVAL("ceafa",vals)="y" d  ; our substitute for ceoba, which is null
"RTN","SAMICTT4",74,0)
 . if bd=0 d OUT("Breast:")
"RTN","SAMICTT4",75,0)
 . if $$XVAL("ceafa",vals)="y" d  ;
"RTN","SAMICTT4",76,0)
 . . set sba=1
"RTN","SAMICTT4",77,0)
 . . n br
"RTN","SAMICTT4",78,0)
 . . set br=$$CCMSTR^SAMICTR3("ceobafc^ceobafy^ceobafm",vals)
"RTN","SAMICTT4",79,0)
 . . if br="" d OUT("Noted in left breast: ")
"RTN","SAMICTT4",80,0)
 . . if br'="" d OUT(br_" left breast. ")
"RTN","SAMICTT4",81,0)
 . . d OUT($$XVAL("ceobafos",vals))
"RTN","SAMICTT4",82,0)
 if bd=1 d  ;
"RTN","SAMICTT4",83,0)
 . if blt=brt d OUT("Density: "_$$XSUB("ceobad",vals,dict,"ceobald"))
"RTN","SAMICTT4",84,0)
 . else  d OUT("Density: Left "_$$XSUB("ceobad",vals,dict,"ceobald")_", Right "_$$XSUB("ceobad",vals,dict,"ceobard")_". ")
"RTN","SAMICTT4",85,0)
 if $$XVAL("ceobrc",vals)'="" d OUT($$XVAL("ceobrc",vals))
"RTN","SAMICTT4",86,0)
 else  if sba=1 d OUT("")
"RTN","SAMICTT4",87,0)
 s outmode="go"
"RTN","SAMICTT4",88,0)
 d OUT("")
"RTN","SAMICTT4",89,0)
 ;
"RTN","SAMICTT4",90,0)
 ;
"RTN","SAMICTT4",91,0)
 s outmode="hold"
"RTN","SAMICTT4",92,0)
 d OUT("Abdomen: ")
"RTN","SAMICTT4",93,0)
 n yesaa s yesaa=0
"RTN","SAMICTT4",94,0)
 ;  # Special Handling for the gallbladder
"RTN","SAMICTT4",95,0)
 ;
"RTN","SAMICTT4",96,0)
 if $$XVAL("ceaga",vals)="y" d  ;
"RTN","SAMICTT4",97,0)
 . d OUT(sp1_"Limited view of the upper abdomen reveals the following: ")
"RTN","SAMICTT4",98,0)
 . set yesaa=1
"RTN","SAMICTT4",99,0)
 . if $$XVAL("ceagh",vals)="h" d  ;
"RTN","SAMICTT4",100,0)
 . . d OUT(sp1_"status post cholecystectomy. ")
"RTN","SAMICTT4",101,0)
 . if $$XVAL("ceags",vals)="s" d  ;
"RTN","SAMICTT4",102,0)
 . . d OUT(sp1_"Gallstones are noted. ")
"RTN","SAMICTT4",103,0)
 . if $$XVAL("ceagl",vals)="l" d  ;
"RTN","SAMICTT4",104,0)
 . . d OUT(sp1_"Sludge is seen in the gall bladder. ")
"RTN","SAMICTT4",105,0)
 . if $$XVAL("ceago",vals)="y" d  ;
"RTN","SAMICTT4",106,0)
 . . d OUT(sp1_"An abnormality was noted in the gall bladder: ")
"RTN","SAMICTT4",107,0)
 if $$XVAL("ceagos",vals)'="" d  ;
"RTN","SAMICTT4",108,0)
 . d OUT($$XVAL("ceagos",vals))
"RTN","SAMICTT4",109,0)
 ;
"RTN","SAMICTT4",110,0)
 n aalist
"RTN","SAMICTT4",111,0)
 s aalist(1,"spleen",0)=$$XVAL("ceasa",vals)
"RTN","SAMICTT4",112,0)
 s aalist(1,"spleen",1)="ceasc^ceasy^ceasm"
"RTN","SAMICTT4",113,0)
 s aalist(1,"spleen",2)=$$XVAL("ceasos",vals)
"RTN","SAMICTT4",114,0)
 s aalist(2,"liver",0)=$$XVAL("ceala",vals)
"RTN","SAMICTT4",115,0)
 s aalist(2,"liver",1)="cealc^cealy^cealm"
"RTN","SAMICTT4",116,0)
 s aalist(2,"liver",2)=$$XVAL("cealos",vals)
"RTN","SAMICTT4",117,0)
 s aalist(3,"pancreas",0)=$$XVAL("ceapa",vals)
"RTN","SAMICTT4",118,0)
 s aalist(3,"pancreas",1)="ceapc^ceapy^ceapm"
"RTN","SAMICTT4",119,0)
 s aalist(3,"pancreas",2)=$$XVAL("ceapos",vals)
"RTN","SAMICTT4",120,0)
 s aalist(4,"adrenals",0)=$$XVAL("ceaaa",vals)
"RTN","SAMICTT4",121,0)
 s aalist(4,"adrenals",1)="ceaac^ceaay^ceaam"
"RTN","SAMICTT4",122,0)
 s aalist(4,"adrenals",2)=$$XVAL("ceaaos",vals)
"RTN","SAMICTT4",123,0)
 s aalist(5,"kidneys",0)=$$XVAL("ceaka",vals)
"RTN","SAMICTT4",124,0)
 s aalist(5,"kidneys",1)="ceakc^ceaky^ceakm"
"RTN","SAMICTT4",125,0)
 s aalist(5,"kidneys",2)=$$XVAL("ceakos",vals)
"RTN","SAMICTT4",126,0)
 ;
"RTN","SAMICTT4",127,0)
 n zan,zaa s zaa=""
"RTN","SAMICTT4",128,0)
 f zan=1:1:5  d  ;
"RTN","SAMICTT4",129,0)
 . s zaa=$o(aalist(zan,""))
"RTN","SAMICTT4",130,0)
 . if aalist(zan,zaa,0)="y" d  ;
"RTN","SAMICTT4",131,0)
 . . n zout
"RTN","SAMICTT4",132,0)
 . . s zout=$$CCMSTR^SAMICTR3(aalist(zan,zaa,1),vals)
"RTN","SAMICTT4",133,0)
 . . set yesaa=1
"RTN","SAMICTT4",134,0)
 . . if zout="" d  ;
"RTN","SAMICTT4",135,0)
 . . . ;d OUT(aalist(zan,zaa,2))
"RTN","SAMICTT4",136,0)
 . . . if aalist(zan,zaa,2)'="" d OUT(aalist(zan,zaa,2))
"RTN","SAMICTT4",137,0)
 . . if zout'="" d  ;
"RTN","SAMICTT4",138,0)
 . . . d OUT(sp1_"A "_$$LOWC^SAMICTR3(zout)_" "_zaa_". "_aalist(zan,zaa,2))
"RTN","SAMICTT4",139,0)
 ;
"RTN","SAMICTT4",140,0)
 ;# Other Abdominal Abnormalities
"RTN","SAMICTT4",141,0)
 ;
"RTN","SAMICTT4",142,0)
 if $$XVAL("ceaoab",vals)'="" d  ;
"RTN","SAMICTT4",143,0)
 . d OUT($$XVAL("ceaoab",vals)_". ")
"RTN","SAMICTT4",144,0)
 if yesaa=0  d  ;
"RTN","SAMICTT4",145,0)
 . ;d OUT(sp1_"Limited view of the upper abdomen reveals no abnormalities. ")
"RTN","SAMICTT4",146,0)
 . d OUT(sp1_"Limited view of the upper abdomen reveals nothing remarkable. ")
"RTN","SAMICTT4",147,0)
 ;
"RTN","SAMICTT4",148,0)
 ;
"RTN","SAMICTT4",149,0)
 ;# Other Chest Abnormalities
"RTN","SAMICTT4",150,0)
 ;
"RTN","SAMICTT4",151,0)
 if $$XVAL("ceotab",vals)'="" d
"RTN","SAMICTT4",152,0)
 . d OUT("Other chest abnormalities:")
"RTN","SAMICTT4",153,0)
 . d OUT($$XVAL("ceotab",vals)_". ")
"RTN","SAMICTT4",154,0)
 ;
"RTN","SAMICTT4",155,0)
 s outmode="go"
"RTN","SAMICTT4",156,0)
 d OUT("")
"RTN","SAMICTT4",157,0)
 ;
"RTN","SAMICTT4",158,0)
 ;# Bone Abnormalities
"RTN","SAMICTT4",159,0)
 ;
"RTN","SAMICTT4",160,0)
 s outmode="hold"
"RTN","SAMICTT4",161,0)
 if $$XVAL("ceaoabb",vals)'="" d  ;
"RTN","SAMICTT4",162,0)
 . d OUT("Bone:")
"RTN","SAMICTT4",163,0)
 . d OUT($$XVAL("ceaoabb",vals)_para)
"RTN","SAMICTT4",164,0)
 d  ;
"RTN","SAMICTT4",165,0)
 . q  ; LungRADS moved to SAMICTRA
"RTN","SAMICTT4",166,0)
 . n lradModifiers
"RTN","SAMICTT4",167,0)
 . s lradModifiers=$$XVAL("celradc",vals)_$$XVAL("celrads",vals)
"RTN","SAMICTT4",168,0)
 . ;
"RTN","SAMICTT4",169,0)
 . i ($$XVAL("celrad",vals)'="-")&($$XVAL("celrad",vals)'="") d  ;
"RTN","SAMICTT4",170,0)
 . . d OUT("The LungRADS category for this scan is: "_$$XVAL("celrad",vals)_" "_lradModifiers)
"RTN","SAMICTT4",171,0)
 . . d OUT("")
"RTN","SAMICTT4",172,0)
 s outmode="go"
"RTN","SAMICTT4",173,0)
 d OUT("")
"RTN","SAMICTT4",174,0)
 ;
"RTN","SAMICTT4",175,0)
 quit  ; end of BREAST
"RTN","SAMICTT4",176,0)
 ;
"RTN","SAMICTT4",177,0)
 ;
"RTN","SAMICTT4",178,0)
 ;
"RTN","SAMICTT4",179,0)
OUT(ln) ; output a line of ct report
"RTN","SAMICTT4",180,0)
 ;
"RTN","SAMICTT4",181,0)
 ;@called-by
"RTN","SAMICTT4",182,0)
 ; BREAST
"RTN","SAMICTT4",183,0)
 ;@calls none
"RTN","SAMICTT4",184,0)
 ;@input
"RTN","SAMICTT4",185,0)
 ; ln = output to add
"RTN","SAMICTT4",186,0)
 ;@output: line added to report
"RTN","SAMICTT4",187,0)
 ;
"RTN","SAMICTT4",188,0)
 i outmode="hold" s line=line_ln q  ;
"RTN","SAMICTT4",189,0)
 s cnt=cnt+1
"RTN","SAMICTT4",190,0)
 n lnn
"RTN","SAMICTT4",191,0)
 i $g(debug)'=1 s debug=0
"RTN","SAMICTT4",192,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTT4",193,0)
 i outmode="go" d  ;
"RTN","SAMICTT4",194,0)
 . s @rtn@(lnn)=line
"RTN","SAMICTT4",195,0)
 . s line=""
"RTN","SAMICTT4",196,0)
 . s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTT4",197,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTT4",198,0)
 ;
"RTN","SAMICTT4",199,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTT4",200,0)
 . i ln["<" q  ; no markup
"RTN","SAMICTT4",201,0)
 . n zs s zs=$STACK
"RTN","SAMICTT4",202,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTT4",203,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTT4",204,0)
 ;
"RTN","SAMICTT4",205,0)
 quit  ; end of OUT
"RTN","SAMICTT4",206,0)
 ;
"RTN","SAMICTT4",207,0)
 ;
"RTN","SAMICTT4",208,0)
 ;
"RTN","SAMICTT4",209,0)
OUTOLD(ln) ; old version of out
"RTN","SAMICTT4",210,0)
 ;
"RTN","SAMICTT4",211,0)
 ;@called-by none
"RTN","SAMICTT4",212,0)
 ;@calls none
"RTN","SAMICTT4",213,0)
 ;@input
"RTN","SAMICTT4",214,0)
 ; ln = output to add
"RTN","SAMICTT4",215,0)
 ;@output: line added to report
"RTN","SAMICTT4",216,0)
 ;
"RTN","SAMICTT4",217,0)
 s cnt=cnt+1
"RTN","SAMICTT4",218,0)
 n lnn
"RTN","SAMICTT4",219,0)
 ;s debug=1
"RTN","SAMICTT4",220,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTT4",221,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTT4",222,0)
 ;
"RTN","SAMICTT4",223,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTT4",224,0)
 . i ln["<" q  ; no markup
"RTN","SAMICTT4",225,0)
 . n zs s zs=$STACK
"RTN","SAMICTT4",226,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTT4",227,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTT4",228,0)
 ;
"RTN","SAMICTT4",229,0)
 quit  ; end of OUTOLD
"RTN","SAMICTT4",230,0)
 ;
"RTN","SAMICTT4",231,0)
 ;
"RTN","SAMICTT4",232,0)
 ;
"RTN","SAMICTT4",233,0)
HOUT(ln) ; output a ct report header line
"RTN","SAMICTT4",234,0)
 ;
"RTN","SAMICTT4",235,0)
 ;@called-by none
"RTN","SAMICTT4",236,0)
 ;@calls
"RTN","SAMICTT4",237,0)
 ; OUT
"RTN","SAMICTT4",238,0)
 ;@input
"RTN","SAMICTT4",239,0)
 ; ln = header output to add
"RTN","SAMICTT4",240,0)
 ;@output: header line added to report
"RTN","SAMICTT4",241,0)
 ;
"RTN","SAMICTT4",242,0)
 d OUT(ln)
"RTN","SAMICTT4",243,0)
 ;d OUT("<p><span class='sectionhead'>"_ln_"</span>")
"RTN","SAMICTT4",244,0)
 ;
"RTN","SAMICTT4",245,0)
 quit  ; end of HOUT
"RTN","SAMICTT4",246,0)
 ;
"RTN","SAMICTT4",247,0)
 ;
"RTN","SAMICTT4",248,0)
 ;
"RTN","SAMICTT4",249,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMICTT4",250,0)
 ;
"RTN","SAMICTT4",251,0)
 ;@called-by
"RTN","SAMICTT4",252,0)
 ; BREAST
"RTN","SAMICTT4",253,0)
 ;@calls none
"RTN","SAMICTT4",254,0)
 ;@input
"RTN","SAMICTT4",255,0)
 ; vals is passed by name
"RTN","SAMICTT4",256,0)
 ;@output = patient value for var
"RTN","SAMICTT4",257,0)
 ;
"RTN","SAMICTT4",258,0)
 n zr
"RTN","SAMICTT4",259,0)
 s zr=$g(@vals@(var))
"RTN","SAMICTT4",260,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMICTT4",261,0)
 ;
"RTN","SAMICTT4",262,0)
 quit zr ; end of $$XVAL
"RTN","SAMICTT4",263,0)
 ;
"RTN","SAMICTT4",264,0)
 ;
"RTN","SAMICTT4",265,0)
 ;
"RTN","SAMICTT4",266,0)
XSUB(var,vals,dict,valdx) ; extrinsic which returns the dictionary value defined by var
"RTN","SAMICTT4",267,0)
 ;
"RTN","SAMICTT4",268,0)
 ;@called-by
"RTN","SAMICTT4",269,0)
 ; BREAST
"RTN","SAMICTT4",270,0)
 ;@calls none
"RTN","SAMICTT4",271,0)
 ;@input
"RTN","SAMICTT4",272,0)
 ; vals and dict are passed by name
"RTN","SAMICTT4",273,0)
 ; valdx is used for nodules ala cect2co with the nodule number included
"RTN","SAMICTT4",274,0)
 ;@output = dictionary value for var
"RTN","SAMICTT4",275,0)
 ;
"RTN","SAMICTT4",276,0)
 ;n dict s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTT4",277,0)
 n zr,zv,zdx
"RTN","SAMICTT4",278,0)
 s zdx=$g(valdx)
"RTN","SAMICTT4",279,0)
 i zdx="" s zdx=var
"RTN","SAMICTT4",280,0)
 s zv=$g(@vals@(zdx))
"RTN","SAMICTT4",281,0)
 ;i zv="" s zr="["_var_"]" q zr
"RTN","SAMICTT4",282,0)
 i zv="" s zr="" q zr
"RTN","SAMICTT4",283,0)
 s zr=$g(@dict@(var,zv))
"RTN","SAMICTT4",284,0)
 ;i zr="" s zr="["_var_","_zv_"]"
"RTN","SAMICTT4",285,0)
 ;
"RTN","SAMICTT4",286,0)
 quit zr ; end of $$XSUB
"RTN","SAMICTT4",287,0)
 ;
"RTN","SAMICTT4",288,0)
 ;
"RTN","SAMICTT4",289,0)
 ;
"RTN","SAMICTT4",290,0)
EOR ; end of routine SAMICTT4
"RTN","SAMICTT9")
0^24^B17246420
"RTN","SAMICTT9",1,0)
SAMICTT9 ;ven/gpl - ctreport text impressions ;2021-03-22T15:17Z
"RTN","SAMICTT9",2,0)
 ;;18.0;SAMI;**4,10**;2020-01;Build 1
"RTN","SAMICTT9",3,0)
 ;;1.18.0.10-i10
"RTN","SAMICTT9",4,0)
 ;
"RTN","SAMICTT9",5,0)
 ; SAMICTT9 creates the Impressions section of the ELCAP CT Report in
"RTN","SAMICTT9",6,0)
 ; text format.
"RTN","SAMICTT9",7,0)
 ;
"RTN","SAMICTT9",8,0)
 quit  ; no entry from top
"RTN","SAMICTT9",9,0)
 ;
"RTN","SAMICTT9",10,0)
 ;
"RTN","SAMICTT9",11,0)
 ;
"RTN","SAMICTT9",12,0)
 ;@section 0 primary development
"RTN","SAMICTT9",13,0)
 ;
"RTN","SAMICTT9",14,0)
 ;
"RTN","SAMICTT9",15,0)
 ;
"RTN","SAMICTT9",16,0)
 ;@license see routine SAMIUL
"RTN","SAMICTT9",17,0)
 ;@documentation see SAMICTUL
"RTN","SAMICTT9",18,0)
 ;@contents
"RTN","SAMICTT9",19,0)
 ; IMPRSN: impressions section of ctreport text format
"RTN","SAMICTT9",20,0)
 ; OUT: output a line of ct report
"RTN","SAMICTT9",21,0)
 ; OUTOLD: old version of out
"RTN","SAMICTT9",22,0)
 ; HOUT: output a ct report header line
"RTN","SAMICTT9",23,0)
 ; $$XVAL = patient value for var
"RTN","SAMICTT9",24,0)
 ; $$XSUB = dictionary value defined by var
"RTN","SAMICTT9",25,0)
 ;
"RTN","SAMICTT9",26,0)
 ;
"RTN","SAMICTT9",27,0)
 ;
"RTN","SAMICTT9",28,0)
 ;@section 1 IMPRSN & related subroutines
"RTN","SAMICTT9",29,0)
 ;
"RTN","SAMICTT9",30,0)
 ;
"RTN","SAMICTT9",31,0)
 ;
"RTN","SAMICTT9",32,0)
IMPRSN(rtn,vals,dict) ; impressions section of ctreport text format
"RTN","SAMICTT9",33,0)
 ;
"RTN","SAMICTT9",34,0)
 ; repgen13
"RTN","SAMICTT9",35,0)
 ;
"RTN","SAMICTT9",36,0)
 ;@called-by
"RTN","SAMICTT9",37,0)
 ; WSREPORT^SAMICTT0
"RTN","SAMICTT9",38,0)
 ;@calls
"RTN","SAMICTT9",39,0)
 ; OUT
"RTN","SAMICTT9",40,0)
 ; $$XSUB
"RTN","SAMICTT9",41,0)
 ; $$XVAL
"RTN","SAMICTT9",42,0)
 ;@input
"RTN","SAMICTT9",43,0)
 ; rtn
"RTN","SAMICTT9",44,0)
 ; vals
"RTN","SAMICTT9",45,0)
 ; dict
"RTN","SAMICTT9",46,0)
 ;@output: create impressions section of ct report in text format
"RTN","SAMICTT9",47,0)
 ;
"RTN","SAMICTT9",48,0)
 ; # Impression
"RTN","SAMICTT9",49,0)
 ;d OUT("</TD></TR></TABLE><TR><TD>")
"RTN","SAMICTT9",50,0)
 ;d OUT("<HR SIZE=""2"" WIDTH=""100%"" ALIGN=""center"" NOSHADE>")
"RTN","SAMICTT9",51,0)
 ;d OUT("</TD></TR>")
"RTN","SAMICTT9",52,0)
 ;d OUT("<!-- impression -->")
"RTN","SAMICTT9",53,0)
 ;d OUT("<TR><TD>")
"RTN","SAMICTT9",54,0)
 ;d OUT("<FONT SIZE=""+2"">")
"RTN","SAMICTT9",55,0)
 ;d OUT("<B>IMPRESSION:</B>")
"RTN","SAMICTT9",56,0)
 ;d OUT("</FONT>")
"RTN","SAMICTT9",57,0)
 ;d OUT("</TD></TR><TR><TD><TABLE>")
"RTN","SAMICTT9",58,0)
 ;d OUT("<TR><TD WIDTH=20></TD><TD>")
"RTN","SAMICTT9",59,0)
 d OUT("")
"RTN","SAMICTT9",60,0)
 d OUT("IMPRESSION:")
"RTN","SAMICTT9",61,0)
 d OUT("")
"RTN","SAMICTT9",62,0)
 ;
"RTN","SAMICTT9",63,0)
 d OUT($$XSUB("ceimn",vals,dict)_para)
"RTN","SAMICTT9",64,0)
 ;
"RTN","SAMICTT9",65,0)
 ;# Report CAC Score and Extent of Emphysema
"RTN","SAMICTT9",66,0)
 s cacval=0
"RTN","SAMICTT9",67,0)
 d  ;if $$XVAL("ceccv",vals)'="e" d  ;
"RTN","SAMICTT9",68,0)
 . set vcac=$$XVAL("cecccac",vals)
"RTN","SAMICTT9",69,0)
 . if vcac'="" d  ;
"RTN","SAMICTT9",70,0)
 . . s cacrec=""
"RTN","SAMICTT9",71,0)
 . . s cac="The Visual Coronary Artery Calcium (CAC) Score is "_vcac_". "
"RTN","SAMICTT9",72,0)
 . . s cacval=vcac
"RTN","SAMICTT9",73,0)
 . . i cacval>3 s cacrec=$g(@dict@("CAC_recommendation"))_para
"RTN","SAMICTT9",74,0)
 ;
"RTN","SAMICTT9",75,0)
 i cacval>0 d  ;
"RTN","SAMICTT9",76,0)
 . d OUT("")
"RTN","SAMICTT9",77,0)
 . d OUT(cac_" "_cacrec_" ") d OUT("")
"RTN","SAMICTT9",78,0)
 . d  ;if $$XVAL("ceemv",vals)="e" d  ;
"RTN","SAMICTT9",79,0)
 . . if $$XVAL("ceem",vals)'="no" d  ;
"RTN","SAMICTT9",80,0)
 . . . if $$XVAL("ceem",vals)="nv" q  ;
"RTN","SAMICTT9",81,0)
 . . . d OUT("Emphysema:") d OUT("")
"RTN","SAMICTT9",82,0)
 . . . d OUT($$XSUB("ceem",vals,dict)_". ") d OUT("")
"RTN","SAMICTT9",83,0)
 ;
"RTN","SAMICTT9",84,0)
 i $$XVAL("ceclini",vals)="y" d  ;
"RTN","SAMICTT9",85,0)
 . d OUT($$XVAL("ceclin",vals)_". ") d OUT("")
"RTN","SAMICTT9",86,0)
 ;
"RTN","SAMICTT9",87,0)
 i $$XVAL("ceoppai",vals)="y" d  ;
"RTN","SAMICTT9",88,0)
 . d OUT($$XVAL("ceoppa",vals)_". ") d OUT("")
"RTN","SAMICTT9",89,0)
 ;
"RTN","SAMICTT9",90,0)
 i $$XVAL("ceoppabi",vals)="y" d  ;
"RTN","SAMICTT9",91,0)
 . d OUT($$XVAL("ceoppab",vals)_". ") d OUT("")
"RTN","SAMICTT9",92,0)
 ;
"RTN","SAMICTT9",93,0)
 i $$XVAL("cecommcai",vals)="y" d  ;
"RTN","SAMICTT9",94,0)
 . d OUT($$XVAL("cecommca",vals)_". ") d OUT("")
"RTN","SAMICTT9",95,0)
 ;
"RTN","SAMICTT9",96,0)
 i $$XVAL("ceotabnmi",vals)="y" d  ;
"RTN","SAMICTT9",97,0)
 . d OUT($$XVAL("ceotabnm",vals)_". ") d OUT("")
"RTN","SAMICTT9",98,0)
 ;
"RTN","SAMICTT9",99,0)
 i $$XVAL("ceobrci",vals)="y" d  ;
"RTN","SAMICTT9",100,0)
 . d OUT($$XVAL("ceobrc",vals)_". ") d OUT("")
"RTN","SAMICTT9",101,0)
 ;
"RTN","SAMICTT9",102,0)
 i $$XVAL("ceaoabbi",vals)="y" d  ;
"RTN","SAMICTT9",103,0)
 . d OUT($$XVAL("ceaoabb",vals)_". ") d OUT("")
"RTN","SAMICTT9",104,0)
 ;
"RTN","SAMICTT9",105,0)
 i $$XVAL("ceaoabi",vals)="y" d  ;
"RTN","SAMICTT9",106,0)
 . d OUT($$XVAL("ceaoab",vals)_". ") d OUT("")
"RTN","SAMICTT9",107,0)
 ;
"RTN","SAMICTT9",108,0)
 ;# Impression Remarks
"RTN","SAMICTT9",109,0)
 i $$XVAL("ceimre",vals)'="" d  ;
"RTN","SAMICTT9",110,0)
 . d OUT($$XVAL("ceimre",vals)_". ") d OUT("")
"RTN","SAMICTT9",111,0)
 ;
"RTN","SAMICTT9",112,0)
 quit  ; end of IMPRSN
"RTN","SAMICTT9",113,0)
 ;
"RTN","SAMICTT9",114,0)
 ;
"RTN","SAMICTT9",115,0)
 ;
"RTN","SAMICTT9",116,0)
OUT(ln) ; output a line of ct report
"RTN","SAMICTT9",117,0)
 ;
"RTN","SAMICTT9",118,0)
 ;@called-by
"RTN","SAMICTT9",119,0)
 ; IMPRSN
"RTN","SAMICTT9",120,0)
 ;@calls none
"RTN","SAMICTT9",121,0)
 ;@input
"RTN","SAMICTT9",122,0)
 ; ln = output to add
"RTN","SAMICTT9",123,0)
 ;@output: line added to ct report
"RTN","SAMICTT9",124,0)
 ;
"RTN","SAMICTT9",125,0)
 s cnt=cnt+1
"RTN","SAMICTT9",126,0)
 n lnn
"RTN","SAMICTT9",127,0)
 ;s debug=1
"RTN","SAMICTT9",128,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTT9",129,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTT9",130,0)
 ;
"RTN","SAMICTT9",131,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTT9",132,0)
 . i ln["<" q  ; no markup
"RTN","SAMICTT9",133,0)
 . n zs s zs=$STACK
"RTN","SAMICTT9",134,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTT9",135,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTT9",136,0)
 ;
"RTN","SAMICTT9",137,0)
 quit  ; end of OUT
"RTN","SAMICTT9",138,0)
 ;
"RTN","SAMICTT9",139,0)
 ;
"RTN","SAMICTT9",140,0)
 ;
"RTN","SAMICTT9",141,0)
HOUT(ln) ; output a ct report header line
"RTN","SAMICTT9",142,0)
 ;
"RTN","SAMICTT9",143,0)
 ;@called-by none
"RTN","SAMICTT9",144,0)
 ;@calls
"RTN","SAMICTT9",145,0)
 ; OUT
"RTN","SAMICTT9",146,0)
 ;@input
"RTN","SAMICTT9",147,0)
 ; ln = output to add
"RTN","SAMICTT9",148,0)
 ;@output: header line added to ct report
"RTN","SAMICTT9",149,0)
 ;
"RTN","SAMICTT9",150,0)
 d OUT("<p><span class='sectionhead'>"_ln_"</span>")
"RTN","SAMICTT9",151,0)
 ;
"RTN","SAMICTT9",152,0)
 quit  ; end of HOUT
"RTN","SAMICTT9",153,0)
 ;
"RTN","SAMICTT9",154,0)
 ;
"RTN","SAMICTT9",155,0)
 ;
"RTN","SAMICTT9",156,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMICTT9",157,0)
 ;
"RTN","SAMICTT9",158,0)
 ;@called-by
"RTN","SAMICTT9",159,0)
 ; IMPRSN
"RTN","SAMICTT9",160,0)
 ;@calls none
"RTN","SAMICTT9",161,0)
 ;@input
"RTN","SAMICTT9",162,0)
 ; var
"RTN","SAMICTT9",163,0)
 ; vals is passed by name
"RTN","SAMICTT9",164,0)
 ;@output = patient value for var
"RTN","SAMICTT9",165,0)
 ;
"RTN","SAMICTT9",166,0)
 n zr
"RTN","SAMICTT9",167,0)
 s zr=$g(@vals@(var))
"RTN","SAMICTT9",168,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMICTT9",169,0)
 ;
"RTN","SAMICTT9",170,0)
 quit zr ; end of $$XVAL
"RTN","SAMICTT9",171,0)
 ;
"RTN","SAMICTT9",172,0)
 ;
"RTN","SAMICTT9",173,0)
 ;
"RTN","SAMICTT9",174,0)
XSUB(var,vals,dict,valdx) ; extrinsic which returns the dictionary value defined by var
"RTN","SAMICTT9",175,0)
 ;
"RTN","SAMICTT9",176,0)
 ;@called-by
"RTN","SAMICTT9",177,0)
 ; IMPRSN
"RTN","SAMICTT9",178,0)
 ;@calls none
"RTN","SAMICTT9",179,0)
 ;@input
"RTN","SAMICTT9",180,0)
 ; var
"RTN","SAMICTT9",181,0)
 ; vals & dict are passed by name
"RTN","SAMICTT9",182,0)
 ; valdx is used for nodules ala cect2co with nodule # included
"RTN","SAMICTT9",183,0)
 ;@output = dictionary value for var
"RTN","SAMICTT9",184,0)
 ;
"RTN","SAMICTT9",185,0)
 ;n dict s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTT9",186,0)
 n zr,zv,zdx
"RTN","SAMICTT9",187,0)
 s zdx=$g(valdx)
"RTN","SAMICTT9",188,0)
 i zdx="" s zdx=var
"RTN","SAMICTT9",189,0)
 s zv=$g(@vals@(zdx))
"RTN","SAMICTT9",190,0)
 ;i zv="" s zr="["_var_"]" q zr
"RTN","SAMICTT9",191,0)
 i zv="" s zr="" q zr
"RTN","SAMICTT9",192,0)
 s zr=$g(@dict@(var,zv))
"RTN","SAMICTT9",193,0)
 ;i zr="" s zr="["_var_","_zv_"]"
"RTN","SAMICTT9",194,0)
 ;
"RTN","SAMICTT9",195,0)
 quit zr ; end of $$XSUB
"RTN","SAMICTT9",196,0)
 ;
"RTN","SAMICTT9",197,0)
 ;
"RTN","SAMICTT9",198,0)
 ;
"RTN","SAMICTT9",199,0)
EOR ; end of routine SAMICTT9
"RTN","SAMICTTA")
0^25^B35698365
"RTN","SAMICTTA",1,0)
SAMICTTA ;ven/gpl - ctreport text recommendations ;2021-05-21T20:47Z
"RTN","SAMICTTA",2,0)
 ;;18.0;SAMI;**4,10,11**;2020-01;Build 1
"RTN","SAMICTTA",3,0)
 ;;1.18.0.11+i11
"RTN","SAMICTTA",4,0)
 ;
"RTN","SAMICTTA",5,0)
 ; SAMICTTA creates the Recommendations section of the ELCAP CT Report
"RTN","SAMICTTA",6,0)
 ; in text format.
"RTN","SAMICTTA",7,0)
 ;
"RTN","SAMICTTA",8,0)
 quit  ; no entry from top
"RTN","SAMICTTA",9,0)
 ;
"RTN","SAMICTTA",10,0)
 ;
"RTN","SAMICTTA",11,0)
 ;
"RTN","SAMICTTA",12,0)
 ;@section 0 primary development
"RTN","SAMICTTA",13,0)
 ;
"RTN","SAMICTTA",14,0)
 ;
"RTN","SAMICTTA",15,0)
 ;
"RTN","SAMICTTA",16,0)
 ;@license see routine SAMIUL
"RTN","SAMICTTA",17,0)
 ;@documentation see SAMICTUL
"RTN","SAMICTTA",18,0)
 ;@contents
"RTN","SAMICTTA",19,0)
 ; RCMND recommendations section of ctreport in text format
"RTN","SAMICTTA",20,0)
 ; OUT output a line of ct report
"RTN","SAMICTTA",21,0)
 ; HOUT output a ct report header line
"RTN","SAMICTTA",22,0)
 ; $$XVAL patient value for var
"RTN","SAMICTTA",23,0)
 ; $$XSUB dictionary value defined by var
"RTN","SAMICTTA",24,0)
 ;
"RTN","SAMICTTA",25,0)
 ;
"RTN","SAMICTTA",26,0)
 ;
"RTN","SAMICTTA",27,0)
 ;@section 1 RCMND & related subroutines
"RTN","SAMICTTA",28,0)
 ;
"RTN","SAMICTTA",29,0)
 ;
"RTN","SAMICTTA",30,0)
 ;
"RTN","SAMICTTA",31,0)
RCMND(rtn,vals,dict) ; recommendations section of ctreport text format
"RTN","SAMICTTA",32,0)
 ;
"RTN","SAMICTTA",33,0)
 ; repgen14
"RTN","SAMICTTA",34,0)
 ;
"RTN","SAMICTTA",35,0)
 ;@called-by
"RTN","SAMICTTA",36,0)
 ; WSREPORT^SAMICTT0
"RTN","SAMICTTA",37,0)
 ;@calls
"RTN","SAMICTTA",38,0)
 ; $$XVAL
"RTN","SAMICTTA",39,0)
 ; OUT
"RTN","SAMICTTA",40,0)
 ; $$XSUB
"RTN","SAMICTTA",41,0)
 ;@input
"RTN","SAMICTTA",42,0)
 ; rtn
"RTN","SAMICTTA",43,0)
 ; vals
"RTN","SAMICTTA",44,0)
 ; dict
"RTN","SAMICTTA",45,0)
 ;@output
"RTN","SAMICTTA",46,0)
 ; create impressions section of ct report in text format
"RTN","SAMICTTA",47,0)
 ;
"RTN","SAMICTTA",48,0)
 ;# Recommendation
"RTN","SAMICTTA",49,0)
 ;d OUT("</TD></TR>")
"RTN","SAMICTTA",50,0)
 ;d OUT("</TABLE>")
"RTN","SAMICTTA",51,0)
 ;d OUT("<TR><TD></TD></TR>")
"RTN","SAMICTTA",52,0)
 ;d OUT("<!-- Recommendation -->")
"RTN","SAMICTTA",53,0)
 ;
"RTN","SAMICTTA",54,0)
 i $$XVAL("cefu",vals)'="nf" d  ; 2445-2450 gpl1
"RTN","SAMICTTA",55,0)
 . ;d OUT("<TR><TD><FONT SIZE=""+2""><B>")
"RTN","SAMICTTA",56,0)
 . ;d OUT("<FONT SIZE=""+2""><B>")
"RTN","SAMICTTA",57,0)
 . d OUT("")
"RTN","SAMICTTA",58,0)
 . d OUT("Recommendations:")
"RTN","SAMICTTA",59,0)
 . d OUT("")
"RTN","SAMICTTA",60,0)
 . ;d OUT("</B></FONT>")
"RTN","SAMICTTA",61,0)
 . ;d OUT("</TD></TR><TR><TD><TABLE><TR><TD WIDTH=20></TD><TD>")
"RTN","SAMICTTA",62,0)
 ;
"RTN","SAMICTTA",63,0)
 n fuw
"RTN","SAMICTTA",64,0)
 s fuw=$$XSUB("cefuw",vals,dict)
"RTN","SAMICTTA",65,0)
 ;d OUT("fuw= "_fuw)
"RTN","SAMICTTA",66,0)
 ;d OUT("vals= "_vals)
"RTN","SAMICTTA",67,0)
 ;d OUT(" dict= "_dict)
"RTN","SAMICTTA",68,0)
 ;d OUT($o(@vals@("cefuw","")))
"RTN","SAMICTTA",69,0)
 ;zwr @vals@(*)
"RTN","SAMICTTA",70,0)
 ;zwr @dict@(*)
"RTN","SAMICTTA",71,0)
 ;i fuw="" d  ;
"RTN","SAMICTTA",72,0)
 ;. d OUT(para_"<B>"_$$XSUB("cefu",vals,dict)_" on "_$$XVAL("cefud",vals)_".</B>"_para)
"RTN","SAMICTTA",73,0)
 ;e  d  ;
"RTN","SAMICTTA",74,0)
 ;. d OUT(para_"<B>"_$$XSUB("cefu",vals,dict)_" "_fuw_" on "_$$XVAL("cefud",vals)_".</B>"_para)
"RTN","SAMICTTA",75,0)
 i fuw="" d  ;
"RTN","SAMICTTA",76,0)
 . ;d OUT(para_"<B>A followup CT scan is recommended on "_$$XVAL("cefud",vals)_".</B>"_para)
"RTN","SAMICTTA",77,0)
 . i $$XVAL("cefud",vals)="" q  ; no date given
"RTN","SAMICTTA",78,0)
 . d OUT("A followup CT scan is recommended on "_$$XVAL("cefud",vals)_". ") d OUT("")
"RTN","SAMICTTA",79,0)
 e  d  ;
"RTN","SAMICTTA",80,0)
 . ;d OUT(para_"<B>A followup CT scan is recommended "_fuw_" on "_$$XVAL("cefud",vals)_".</B>"_para)
"RTN","SAMICTTA",81,0)
 . d OUT("A followup CT scan is recommended "_fuw_" on "_$$XVAL("cefud",vals)_". ") d OUT("")
"RTN","SAMICTTA",82,0)
 ;
"RTN","SAMICTTA",83,0)
 ; #Other followup
"RTN","SAMICTTA",84,0)
 n zfu,ofu,tofu,comma
"RTN","SAMICTTA",85,0)
 s comma=0,tofu=""
"RTN","SAMICTTA",86,0)
 s ofu=""
"RTN","SAMICTTA",87,0)
 f zfu="cefuaf","cefucc","cefupe","cefufn","cefubr","cefupc","cefutb" d  ;
"RTN","SAMICTTA",88,0)
 . i $$XVAL(zfu,vals)="y" s ofu=ofu_zfu
"RTN","SAMICTTA",89,0)
 i $$XVAL("cefuo",vals)'="" s ofu=ofu_"cefuo"
"RTN","SAMICTTA",90,0)
 i ofu'="" d  ;
"RTN","SAMICTTA",91,0)
 . s tofu="Followup: "
"RTN","SAMICTTA",92,0)
 . i ofu["cefuaf" s tofu=tofu_"Antibiotics" s comma=1
"RTN","SAMICTTA",93,0)
 . i ofu["cefucc" s tofu=tofu_$s(comma:", ",1:"")_"Diagnostic CT" s comma=1
"RTN","SAMICTTA",94,0)
 . i ofu["cefupe" s tofu=tofu_$s(comma:", ",1:"")_"PET" s comma=1
"RTN","SAMICTTA",95,0)
 . i ofu["cefufn" s tofu=tofu_$s(comma:", ",1:"")_"Percutaneous biopsy" s comma=1
"RTN","SAMICTTA",96,0)
 . i ofu["cefubr" s tofu=tofu_$s(comma:", ",1:"")_"Bronchoscopy" s comma=1
"RTN","SAMICTTA",97,0)
 . i ofu["cefupc" s tofu=tofu_$s(comma:", ",1:"")_"Pulmonary consultation" s comma=1
"RTN","SAMICTTA",98,0)
 . i ofu["cefutb" s tofu=tofu_$s(comma:", ",1:"")_"Refer to tumor board" s comma=1
"RTN","SAMICTTA",99,0)
 . i ofu["cefuo" s tofu=tofu_$s(comma:", ",1:"")_$$XVAL("cefuoo",vals) s comma=1
"RTN","SAMICTTA",100,0)
 i ofu'="" d OUT(para_tofu_para) d OUT("")
"RTN","SAMICTTA",101,0)
 ;d OUT("<TR><TD></TD></TR>")
"RTN","SAMICTTA",102,0)
 ; # LungRADS
"RTN","SAMICTTA",103,0)
 ;
"RTN","SAMICTTA",104,0)
 ;d OUT("<TR><TD>")
"RTN","SAMICTTA",105,0)
 ;n lrstyle
"RTN","SAMICTTA",106,0)
 ;i $$XVAL("celrc",vals)'="" s lrstyle=1 ; dom's style
"RTN","SAMICTTA",107,0)
 ;e  s lrstyle=0 ; artit's style
"RTN","SAMICTTA",108,0)
 ;s lrstyle=0
"RTN","SAMICTTA",109,0)
 ;
"RTN","SAMICTTA",110,0)
 d  ;
"RTN","SAMICTTA",111,0)
 . q  ; LUNGRADS moved to SAMICTR4
"RTN","SAMICTTA",112,0)
 . n lradModifiers
"RTN","SAMICTTA",113,0)
 . s lradModifiers=$$XVAL("celradc",vals)_$$XVAL("celrads",vals)
"RTN","SAMICTTA",114,0)
 . ;
"RTN","SAMICTTA",115,0)
 . i ($$XVAL("celrad",vals)'="-")&($$XVAL("celrad",vals)'="") d  ;
"RTN","SAMICTTA",116,0)
 . . d OUT("The LungRADS category for this scan is: "_$$XVAL("celrad",vals)_" "_lradModifiers)
"RTN","SAMICTTA",117,0)
 . . d OUT(para)
"RTN","SAMICTTA",118,0)
 ;
"RTN","SAMICTTA",119,0)
 ;d OUT("</TD></TR>")
"RTN","SAMICTTA",120,0)
 ;
"RTN","SAMICTTA",121,0)
 ;d OUT("<TR><TD><TABLE><TR><TD WIDTH=20></TD><TD>")
"RTN","SAMICTTA",122,0)
 ;
"RTN","SAMICTTA",123,0)
 ;# Check if Study is Completed
"RTN","SAMICTTA",124,0)
 ;# Find Current Study ID
"RTN","SAMICTTA",125,0)
 ;# locate most recent followup
"RTN","SAMICTTA",126,0)
 ;# get status (sies)
"RTN","SAMICTTA",127,0)
 ;# if sc=Study Complete and cefu=rs
"RTN","SAMICTTA",128,0)
 ;
"RTN","SAMICTTA",129,0)
 n patstatus
"RTN","SAMICTTA",130,0)
 s patstatus=$$XVAL("cedos",vals)
"RTN","SAMICTTA",131,0)
 ;i patstatus="sc" d OUT(para_$g(@dict@("study_complete")))
"RTN","SAMICTTA",132,0)
 i patstatus="sc" d OUT($g(@dict@("study_complete"))) d OUT("")
"RTN","SAMICTTA",133,0)
 ;
"RTN","SAMICTTA",134,0)
 ;# Radiologist
"RTN","SAMICTTA",135,0)
 i $$XVAL("cerad",vals)'="" d  ;
"RTN","SAMICTTA",136,0)
 . d OUT("Interpreted by: "_$$XVAL("cerad",vals)) d OUT("")
"RTN","SAMICTTA",137,0)
 ;
"RTN","SAMICTTA",138,0)
 ;d OUT("<TR><TD></TD></TR>")
"RTN","SAMICTTA",139,0)
 ; # LungRADS
"RTN","SAMICTTA",140,0)
 ;
"RTN","SAMICTTA",141,0)
 ;d OUT("<TR><TD>")
"RTN","SAMICTTA",142,0)
 n lrstyle
"RTN","SAMICTTA",143,0)
 i $$XVAL("celrc",vals)'="" s lrstyle=1 ; dom's style
"RTN","SAMICTTA",144,0)
 e  s lrstyle=0 ; artit's style
"RTN","SAMICTTA",145,0)
 s lrstyle=0
"RTN","SAMICTTA",146,0)
 ;
"RTN","SAMICTTA",147,0)
 d  ;
"RTN","SAMICTTA",148,0)
 . ;q  ; LUNGRADS moved to SAMICTR4
"RTN","SAMICTTA",149,0)
 . n lradModifiers
"RTN","SAMICTTA",150,0)
 . s lradModifiers=$$XVAL("celradc",vals)_$$XVAL("celrads",vals)
"RTN","SAMICTTA",151,0)
 . ;
"RTN","SAMICTTA",152,0)
 . i ($$XVAL("celrad",vals)'="-")&($$XVAL("celrad",vals)'="") d  ;
"RTN","SAMICTTA",153,0)
 . . d OUT("The LungRADS category for this scan is: "_$$XVAL("celrad",vals)_" "_lradModifiers)
"RTN","SAMICTTA",154,0)
 . . d OUT("")
"RTN","SAMICTTA",155,0)
 ;
"RTN","SAMICTTA",156,0)
 ;d OUT("</TD></TR>")
"RTN","SAMICTTA",157,0)
 ;
"RTN","SAMICTTA",158,0)
 ;d OUT("<TR><TD><TABLE><TR><TD WIDTH=20></TD><TD>")
"RTN","SAMICTTA",159,0)
 ;
"RTN","SAMICTTA",160,0)
 quit  ; end of RCMND
"RTN","SAMICTTA",161,0)
 ;
"RTN","SAMICTTA",162,0)
 ;
"RTN","SAMICTTA",163,0)
 ;
"RTN","SAMICTTA",164,0)
OUT(ln) ; output a line of ct report
"RTN","SAMICTTA",165,0)
 ;
"RTN","SAMICTTA",166,0)
 ;@called-by
"RTN","SAMICTTA",167,0)
 ; RCMND
"RTN","SAMICTTA",168,0)
 ;@calls none
"RTN","SAMICTTA",169,0)
 ;@input
"RTN","SAMICTTA",170,0)
 ; ln = output to add
"RTN","SAMICTTA",171,0)
 ;@output
"RTN","SAMICTTA",172,0)
 ; line added to ct report
"RTN","SAMICTTA",173,0)
 ;
"RTN","SAMICTTA",174,0)
 s cnt=cnt+1
"RTN","SAMICTTA",175,0)
 n lnn
"RTN","SAMICTTA",176,0)
 ;s debug=1
"RTN","SAMICTTA",177,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTTA",178,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTTA",179,0)
 ;
"RTN","SAMICTTA",180,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTTA",181,0)
 . i ln["<T" q  ; no markup
"RTN","SAMICTTA",182,0)
 . i ln["</" q  ; no markup
"RTN","SAMICTTA",183,0)
 . n zs s zs=$STACK
"RTN","SAMICTTA",184,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTTA",185,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTTA",186,0)
 ;
"RTN","SAMICTTA",187,0)
 quit  ; end of OUT
"RTN","SAMICTTA",188,0)
 ;
"RTN","SAMICTTA",189,0)
 ;
"RTN","SAMICTTA",190,0)
 ;
"RTN","SAMICTTA",191,0)
HOUT(ln) ; output a ct report header line
"RTN","SAMICTTA",192,0)
 ;
"RTN","SAMICTTA",193,0)
 ;@called-by none
"RTN","SAMICTTA",194,0)
 ;@calls
"RTN","SAMICTTA",195,0)
 ; OUT
"RTN","SAMICTTA",196,0)
 ;@input
"RTN","SAMICTTA",197,0)
 ; ln = header output to add
"RTN","SAMICTTA",198,0)
 ;@output
"RTN","SAMICTTA",199,0)
 ; header line added to ct report
"RTN","SAMICTTA",200,0)
 ;
"RTN","SAMICTTA",201,0)
 d OUT("<p><span class='sectionhead'>"_ln_"</span>")
"RTN","SAMICTTA",202,0)
 ;
"RTN","SAMICTTA",203,0)
 quit  ; end of HOUT
"RTN","SAMICTTA",204,0)
 ;
"RTN","SAMICTTA",205,0)
 ;
"RTN","SAMICTTA",206,0)
 ;
"RTN","SAMICTTA",207,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMICTTA",208,0)
 ;
"RTN","SAMICTTA",209,0)
 ;@called-by
"RTN","SAMICTTA",210,0)
 ; RCMND
"RTN","SAMICTTA",211,0)
 ;@calls none
"RTN","SAMICTTA",212,0)
 ;@input
"RTN","SAMICTTA",213,0)
 ; var
"RTN","SAMICTTA",214,0)
 ; vals is passed by name
"RTN","SAMICTTA",215,0)
 ;@output = patient value for var
"RTN","SAMICTTA",216,0)
 ;
"RTN","SAMICTTA",217,0)
 n zr
"RTN","SAMICTTA",218,0)
 s zr=$g(@vals@(var))
"RTN","SAMICTTA",219,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMICTTA",220,0)
 ;
"RTN","SAMICTTA",221,0)
 quit zr ; end of $$XVAL
"RTN","SAMICTTA",222,0)
 ;
"RTN","SAMICTTA",223,0)
 ;
"RTN","SAMICTTA",224,0)
 ;
"RTN","SAMICTTA",225,0)
XSUB(var,vals,dict,valdx) ; extrinsic which returns the dictionary value defined by var
"RTN","SAMICTTA",226,0)
 ;
"RTN","SAMICTTA",227,0)
 ;@called-by
"RTN","SAMICTTA",228,0)
 ; RCMND
"RTN","SAMICTTA",229,0)
 ;@calls none
"RTN","SAMICTTA",230,0)
 ;@input
"RTN","SAMICTTA",231,0)
 ; var
"RTN","SAMICTTA",232,0)
 ; vals and dict are passed by name
"RTN","SAMICTTA",233,0)
 ; valdx is used for nodules ala cect2co with the nodule number included
"RTN","SAMICTTA",234,0)
 ;@output = dictionary value for var
"RTN","SAMICTTA",235,0)
 ;
"RTN","SAMICTTA",236,0)
 ;n dict s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTTA",237,0)
 n zr,zv,zdx
"RTN","SAMICTTA",238,0)
 s zdx=$g(valdx)
"RTN","SAMICTTA",239,0)
 i zdx="" s zdx=var
"RTN","SAMICTTA",240,0)
 s zv=$g(@vals@(zdx))
"RTN","SAMICTTA",241,0)
 ;i zv="" s zr="["_var_"]" q zr
"RTN","SAMICTTA",242,0)
 i zv="" s zr="" q zr
"RTN","SAMICTTA",243,0)
 s zr=$g(@dict@(var,zv))
"RTN","SAMICTTA",244,0)
 ;i zr="" s zr="["_var_","_zv_"]"
"RTN","SAMICTTA",245,0)
 ;
"RTN","SAMICTTA",246,0)
 quit zr ; end of $$XSUB
"RTN","SAMICTTA",247,0)
 ;
"RTN","SAMICTTA",248,0)
 ;
"RTN","SAMICTTA",249,0)
 ;
"RTN","SAMICTTA",250,0)
EOR ; end of routine SAMICTTA
"RTN","SAMICTUL")
0^26^B101132
"RTN","SAMICTUL",1,0)
SAMICTUL ;ven/gpl - ct report & copy log ;2021-08-18t17:06z
"RTN","SAMICTUL",2,0)
 ;;18.0;SAMI;**10,11,12,13**;2020-01;Build 1
"RTN","SAMICTUL",3,0)
 ;;18.13
"RTN","SAMICTUL",4,0)
 ;
"RTN","SAMICTUL",5,0)
 ; SAMICTUL contains routine & module info & the primary development
"RTN","SAMICTUL",6,0)
 ; log for VAPALS-ELCAP's CT Report ctreport web service route, which
"RTN","SAMICTUL",7,0)
 ; is implemented by the SAMICTR* (html) and SAMICTT* (text)
"RTN","SAMICTUL",8,0)
 ; routines. It also contains the log for the SAMICTC* routines that
"RTN","SAMICTUL",9,0)
 ; implement the ct form copy operation.
"RTN","SAMICTUL",10,0)
 ; SAMICTUL contains no public interfaces or executable code.
"RTN","SAMICTUL",11,0)
 ;
"RTN","SAMICTUL",12,0)
 quit  ; no entry from top
"RTN","SAMICTUL",13,0)
 ;
"RTN","SAMICTUL",14,0)
 ;
"RTN","SAMICTUL",15,0)
 ;
"RTN","SAMICTUL",16,0)
 ;@section 0 primary development
"RTN","SAMICTUL",17,0)
 ;
"RTN","SAMICTUL",18,0)
 ;
"RTN","SAMICTUL",19,0)
 ;
"RTN","SAMICTUL",20,0)
 ;@routine-credits
"RTN","SAMICTUL",21,0)
 ;@dev-main George P. Lilly (gpl)
"RTN","SAMICTUL",22,0)
 ; gpl@vistaexpertise.net
"RTN","SAMICTUL",23,0)
 ;@dev-org-main Vista Expertise Network (ven)
"RTN","SAMICTUL",24,0)
 ; http://vistaexpertise.net
"RTN","SAMICTUL",25,0)
 ;@copyright 2017/2021, gpl, all rights reserved
"RTN","SAMICTUL",26,0)
 ;@license Apache 2.0
"RTN","SAMICTUL",27,0)
 ; https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMICTUL",28,0)
 ;
"RTN","SAMICTUL",29,0)
 ;@last-update 2021-08-17t21:42z
"RTN","SAMICTUL",30,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMICTUL",31,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMICTUL",32,0)
 ;@version 18.13
"RTN","SAMICTUL",33,0)
 ;@release-date 2020-01
"RTN","SAMICTUL",34,0)
 ;@patch-list **10,11,12**
"RTN","SAMICTUL",35,0)
 ;
"RTN","SAMICTUL",36,0)
 ;@dev-add Frederick D. S. Marshall (toad)
"RTN","SAMICTUL",37,0)
 ; toad@vistaexpertise.net
"RTN","SAMICTUL",38,0)
 ;@dev-add Alexis Carlson (arc)
"RTN","SAMICTUL",39,0)
 ; alexis.carlson@vistaexpertise.net
"RTN","SAMICTUL",40,0)
 ;@dev-add Kenneth McGlothlen (mcglk)
"RTN","SAMICTUL",41,0)
 ; mcglk@vistaexpertise.net
"RTN","SAMICTUL",42,0)
 ;
"RTN","SAMICTUL",43,0)
 ;@module-credits
"RTN","SAMICTUL",44,0)
 ;@project VA Partnership to Increase Access to Lung Screening
"RTN","SAMICTUL",45,0)
 ; (VA-PALS)
"RTN","SAMICTUL",46,0)
 ; http://va-pals.org/
"RTN","SAMICTUL",47,0)
 ;@funding 2017/2021, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMICTUL",48,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMICTUL",49,0)
 ;@partner-org Veterans Affairs Office of Rural health
"RTN","SAMICTUL",50,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMICTUL",51,0)
 ;@partner-org International Early Lung Cancer Action Program (IELCAP)
"RTN","SAMICTUL",52,0)
 ; http://ielcap.com/
"RTN","SAMICTUL",53,0)
 ;@partner-org Paraxial Technologies (par)
"RTN","SAMICTUL",54,0)
 ; http://paraxialtech.com/
"RTN","SAMICTUL",55,0)
 ;@partner-org Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMICTUL",56,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMICTUL",57,0)
 ;
"RTN","SAMICTUL",58,0)
 ;@module-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMICTUL",59,0)
 ;
"RTN","SAMICTUL",60,0)
 ; 2018-07-01/05 ven/arc&lgc 18.0 8b0a4329,f5ff7eeb,5549cd30
"RTN","SAMICTUL",61,0)
 ;  SAMICTD2 1st version of CT Eval Report, fix init routine, get
"RTN","SAMICTUL",62,0)
 ; lungrads & nonodules working.
"RTN","SAMICTUL",63,0)
 ;
"RTN","SAMICTUL",64,0)
 ; 2018-10-14 ven/arc 18.0 f6e1229
"RTN","SAMICTUL",65,0)
 ;  SAMICTC1 turn on copy forward for cteval new forms
"RTN","SAMICTUL",66,0)
 ;
"RTN","SAMICTUL",67,0)
 ; 2018-12-11/2019-01-22 ven/lgc&lmry 18.0 9925713f,3ceb74b,3bb70c8,
"RTN","SAMICTUL",68,0)
 ; d22e0f21,5368121
"RTN","SAMICTUL",69,0)
 ;  SAMICTC1,2,D2 sac compliance, add license info.
"RTN","SAMICTUL",70,0)
 ;
"RTN","SAMICTUL",71,0)
 ; 2020-02-01/03 ven/arc 18.4 d47135a5,bc32c1cb,5b2e4525,7bcd14a2,
"RTN","SAMICTUL",72,0)
 ; 1c96fe0e,cb0075e8,5e553dd2,9cde6840,dcea0048e,98b7b273,a4f98f19
"RTN","SAMICTUL",73,0)
 ;  SAMICTT0,1,2,3,4,9,A routines (starting as copies of SAMICTR*) to
"RTN","SAMICTUL",74,0)
 ; implement ctreport in text format, start convert nodules to text,
"RTN","SAMICTUL",75,0)
 ; add'l lung findings, fix parag spacing, add impressions sect,
"RTN","SAMICTUL",76,0)
 ; recommendations sect, add'l sects on other abnormalities, breast
"RTN","SAMICTUL",77,0)
 ; abnorm sect, other abnorm sect, tweak format, make it more compact.
"RTN","SAMICTUL",78,0)
 ;
"RTN","SAMICTUL",79,0)
 ; 2021-02-18 ven/gpl 18.10 38fb2d70
"RTN","SAMICTUL",80,0)
 ;  SAMICTT0,1,2,3,4,9,A ct report - insert space after every period.
"RTN","SAMICTUL",81,0)
 ;
"RTN","SAMICTUL",82,0)
 ; 2021-03-04/16 ven/gpl 18.10 e09d5f16,3ea26de9,91793ba3
"RTN","SAMICTUL",83,0)
 ;  SAMICTT1,3,4 ct report: fix normal cardiac default output, CAC
"RTN","SAMICTUL",84,0)
 ; logic, other enhancements.
"RTN","SAMICTUL",85,0)
 ;
"RTN","SAMICTUL",86,0)
 ; 2021-03-23 ven/gpl 18.10 a68f7f31
"RTN","SAMICTUL",87,0)
 ;  SAMICTT3 fix CAC problem.
"RTN","SAMICTUL",88,0)
 ;
"RTN","SAMICTUL",89,0)
 ; 2021-03-21/23 ven/toad 18.10 96f461d
"RTN","SAMICTUL",90,0)
 ;  SAMICTUL: create development log routine.
"RTN","SAMICTUL",91,0)
 ;  SAMICTT0,1,2,3,4,9,A bump date & version, lt refactor.
"RTN","SAMICTUL",92,0)
 ;
"RTN","SAMICTUL",93,0)
 ; 2021-05-14 ven/gpl 18.11 0a01cf2
"RTN","SAMICTUL",94,0)
 ;  SAMICTTA in RCMND change to ctreport for no followup ct w/other
"RTN","SAMICTUL",95,0)
 ; followup recommendations, "Followup" instead of "Other Followup."
"RTN","SAMICTUL",96,0)
 ;
"RTN","SAMICTUL",97,0)
 ; 2021-05-19 ven/gpl 18.11 a21b056,139c6a5
"RTN","SAMICTUL",98,0)
 ;  SAMICTT0 in WSREPORT check for small nodule checkboxes.
"RTN","SAMICTUL",99,0)
 ;  SAMICTT1 in NODULES urgent fix to add to ct report "Small [non-]
"RTN","SAMICTUL",100,0)
 ; calcified nodules are present."
"RTN","SAMICTUL",101,0)
 ;
"RTN","SAMICTUL",102,0)
 ; 2021-05-20/21 ven/mcglk&toad 18.11 43a4557,129e96b
"RTN","SAMICTUL",103,0)
 ;  SAMICTT0,1 bump version & dates.
"RTN","SAMICTUL",104,0)
 ;
"RTN","SAMICTUL",105,0)
 ; 2021-05-24 ven/gpl 18.11 4aba1a9
"RTN","SAMICTUL",106,0)
 ;  SAMICTC1 in CTCOPY add new param key to control two new opening
"RTN","SAMICTUL",107,0)
 ; blocks, critical fix to copy forward for Is It New field for new ct
"RTN","SAMICTUL",108,0)
 ; eval forms.
"RTN","SAMICTUL",109,0)
 ;
"RTN","SAMICTUL",110,0)
 ; 2021-05-25 ven/toad 18.11 801d7c7
"RTN","SAMICTUL",111,0)
 ;  SAMICTC1 bump version & dates; passim annotate & lt refactor.
"RTN","SAMICTUL",112,0)
 ;  SAMICTUL add SAMICTC* routines to log.
"RTN","SAMICTUL",113,0)
 ;
"RTN","SAMICTUL",114,0)
 ; 2021-06-01 ven/gpl 18.11 e86756e
"RTN","SAMICTUL",115,0)
 ;  SAMICTC1 corrected bug on CT eval copy forward: in CTCOPY stanza
"RTN","SAMICTUL",116,0)
 ; 2 q:isnew="".
"RTN","SAMICTUL",117,0)
 ;
"RTN","SAMICTUL",118,0)
 ; 2021-06-04 ven/toad 18.11 7dd9410c,911264de
"RTN","SAMICTUL",119,0)
 ;  SAMICTC1 fold in gpl chg, log, bump dates.
"RTN","SAMICTUL",120,0)
 ;
"RTN","SAMICTUL",121,0)
 ; 2021-07-19 ven/gpl 18.12 e9359411
"RTN","SAMICTUL",122,0)
 ;  SAMICTD2 chg minimal to mild for emphesema in ct report.
"RTN","SAMICTUL",123,0)
 ;
"RTN","SAMICTUL",124,0)
 ; 2021-08-17 ven/gpl 18.13 
"RTN","SAMICTUL",125,0)
 ;  SAMIICTT3 correct typo in field name for circumflex in CAC section
"RTN","SAMICTUL",126,0)
 ;
"RTN","SAMICTUL",127,0)
 ;
"RTN","SAMICTUL",128,0)
 ;@contents
"RTN","SAMICTUL",129,0)
 ; SAMICTC1 ceform copy
"RTN","SAMICTUL",130,0)
 ; SAMICTC2 ceform copy continued
"RTN","SAMICTUL",131,0)
 ;
"RTN","SAMICTUL",132,0)
 ; SAMICTD2 cteval-dict init
"RTN","SAMICTUL",133,0)
 ;
"RTN","SAMICTUL",134,0)
 ; SAMICTT0 ctreport text main
"RTN","SAMICTUL",135,0)
 ; SAMICTT1 ctreport text nodules
"RTN","SAMICTUL",136,0)
 ; SAMICTT2 ctreport text other lung
"RTN","SAMICTUL",137,0)
 ; SAMICTT3 ctreport text emphysema
"RTN","SAMICTUL",138,0)
 ; SAMICTT4 ctreport text breast abnorm
"RTN","SAMICTUL",139,0)
 ; SAMICTT9 ctreport text impressions
"RTN","SAMICTUL",140,0)
 ; SAMICTTA ctreport text recommendations
"RTN","SAMICTUL",141,0)
 ; SAMICTUL ctreport log
"RTN","SAMICTUL",142,0)
 ;
"RTN","SAMICTUL",143,0)
 ; SAMICTR* ctreport html format
"RTN","SAMICTUL",144,0)
 ; SAMIUTR* test the SAMICTR routines
"RTN","SAMICTUL",145,0)
 ;
"RTN","SAMICTUL",146,0)
 ;
"RTN","SAMICTUL",147,0)
 ;
"RTN","SAMICTUL",148,0)
EOR ; end of routine SAMICTUL
"RTN","SAMICUL")
0^27^B134436
"RTN","SAMICUL",1,0)
SAMICUL ;ven/gpl - case review log ;2021-08-10t18:36z
"RTN","SAMICUL",2,0)
 ;;18.0;SAMI;**9,11,12**;2020-01;Build 1
"RTN","SAMICUL",3,0)
 ;;18.12
"RTN","SAMICUL",4,0)
 ;
"RTN","SAMICUL",5,0)
 ; SAMICUL contains the development log for the VAPALS-IELCAP Case
"RTN","SAMICUL",6,0)
 ; Review Page (SAMICA* routines).
"RTN","SAMICUL",7,0)
 ; It contains no executable code.
"RTN","SAMICUL",8,0)
 ;
"RTN","SAMICUL",9,0)
 quit  ; no entry from top
"RTN","SAMICUL",10,0)
 ;
"RTN","SAMICUL",11,0)
 ;
"RTN","SAMICUL",12,0)
 ;
"RTN","SAMICUL",13,0)
 ;@section 0 primary development
"RTN","SAMICUL",14,0)
 ;
"RTN","SAMICUL",15,0)
 ;
"RTN","SAMICUL",16,0)
 ;
"RTN","SAMICUL",17,0)
 ;@routine-credits
"RTN","SAMICUL",18,0)
 ;@dev-main George P. Lilly (gpl)
"RTN","SAMICUL",19,0)
 ; gpl@vistaexpertise.net
"RTN","SAMICUL",20,0)
 ;@dev-org-main Vista Expertise Network (ven)
"RTN","SAMICUL",21,0)
 ; http://vistaexpertise.net
"RTN","SAMICUL",22,0)
 ;@copyright 2017/2021, gpl, all rights reserved
"RTN","SAMICUL",23,0)
 ;@license see routine SAMIUL
"RTN","SAMICUL",24,0)
 ;
"RTN","SAMICUL",25,0)
 ;@last-update 2021-08-10t18:36z
"RTN","SAMICUL",26,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMICUL",27,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMICUL",28,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMICUL",29,0)
 ;@version 18.12
"RTN","SAMICUL",30,0)
 ;@release-date 2020-01
"RTN","SAMICUL",31,0)
 ;@patch-list **9,11,12**
"RTN","SAMICUL",32,0)
 ;
"RTN","SAMICUL",33,0)
 ;@dev-add Frederick D. S. Marshall (toad)
"RTN","SAMICUL",34,0)
 ; toad@vistaexpertise.net
"RTN","SAMICUL",35,0)
 ;@dev-add Linda M. R. Yaw (lmry)
"RTN","SAMICUL",36,0)
 ; linda.yaw@vistaexpertise.net
"RTN","SAMICUL",37,0)
 ;@dev-add Larry G. Carlson (lgc)
"RTN","SAMICUL",38,0)
 ; larry.g.carlson@gmail.com
"RTN","SAMICUL",39,0)
 ;@dev-add Domenick DiNatale (ddn)
"RTN","SAMICUL",40,0)
 ; domenic@intellitechinnovations.com
"RTN","SAMICUL",41,0)
 ;@dev-add Kenneth McGlothlen (mcglk)
"RTN","SAMICUL",42,0)
 ; mcglk@vistaexpertise.net
"RTN","SAMICUL",43,0)
 ;
"RTN","SAMICUL",44,0)
 ;@module-credits
"RTN","SAMICUL",45,0)
 ;@project VA Partnership to Increase Access to Lung Screening
"RTN","SAMICUL",46,0)
 ; (VA-PALS)
"RTN","SAMICUL",47,0)
 ; http://va-pals.org/
"RTN","SAMICUL",48,0)
 ;@funding 2017/2021, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMICUL",49,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMICUL",50,0)
 ;@partner-org Veterans Affairs Office of Rural health
"RTN","SAMICUL",51,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMICUL",52,0)
 ;@partner-org International Early Lung Cancer Action Program (I-ELCAP)
"RTN","SAMICUL",53,0)
 ; http://ielcap.com/
"RTN","SAMICUL",54,0)
 ;@partner-org Paraxial Technologies (par)
"RTN","SAMICUL",55,0)
 ; http://paraxialtech.com/
"RTN","SAMICUL",56,0)
 ;@partner-org Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMICUL",57,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMICUL",58,0)
 ;
"RTN","SAMICUL",59,0)
 ;@module-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMICUL",60,0)
 ;
"RTN","SAMICUL",61,0)
 ; 2018-01-14 ven/gpl 18.0-t4
"RTN","SAMICUL",62,0)
 ;  SAMICASE split from routine SAMIFRM, incl wsCASE,GETTMPL,GETITEMS,
"RTN","SAMICUL",63,0)
 ; casetbl.
"RTN","SAMICUL",64,0)
 ;
"RTN","SAMICUL",65,0)
 ; 2018-02-05/08 ven/toad 18.0-t4
"RTN","SAMICUL",66,0)
 ;  SAMICASE update style, license, & attribution, spell out language
"RTN","SAMICUL",67,0)
 ; elements, add white space & do-dot quits, r/replaceAll^%wfhfrom w/
"RTN","SAMICUL",68,0)
 ; replaceAll^%wf, r/$$getTemplate^%wfhform w/$$getTemplate^%wf.
"RTN","SAMICUL",69,0)
 ;
"RTN","SAMICUL",70,0)
 ; 2018-02-14 ven/toad 18.0-t4
"RTN","SAMICUL",71,0)
 ;  SAMICASE r/replaceAll^%wf w/findReplaceAll^%wf, r/ln w/line, add
"RTN","SAMICUL",72,0)
 ; @calls & @called-by tags, break up some long lines.
"RTN","SAMICUL",73,0)
 ;
"RTN","SAMICUL",74,0)
 ; 2018-02-27 ven/gpl 18.0-t4
"RTN","SAMICUL",75,0)
 ;  SAMICASE new subroutines $$KEY2DSPD, $$GETDTKEY; in wsCASE get
"RTN","SAMICUL",76,0)
 ; 1st & last names from graph, fix paths, key forms in graph w/date.
"RTN","SAMICUL",77,0)
 ;
"RTN","SAMICUL",78,0)
 ; 2018-03-01 ven/toad 18.0-t4
"RTN","SAMICUL",79,0)
 ;  SAMICASE refactor & reorganize new code, add header comments, r/
"RTN","SAMICUL",80,0)
 ; findReplaceAll^%wf w/findReplace^%ts.
"RTN","SAMICUL",81,0)
 ;
"RTN","SAMICUL",82,0)
 ; 2018-03-06 ven/gpl 18.0-t4
"RTN","SAMICUL",83,0)
 ;  SAMICASE add New Form button, list rest of forms for patient, add
"RTN","SAMICUL",84,0)
 ; web services wsNuForm & wsNuFormPost & method MKCEFORM, extend
"RTN","SAMICUL",85,0)
 ; GETITEMS to get rest of forms.
"RTN","SAMICUL",86,0)
 ;
"RTN","SAMICUL",87,0)
 ; 2018-03-07/08 ven/toad 18.0-t4
"RTN","SAMICUL",88,0)
 ;  SAMICASE merge George changes w/ rest, add white space, spell out
"RTN","SAMICUL",89,0)
 ; M elements, add hdr comments to new subroutines, r/findReplace^%wf
"RTN","SAMICUL",90,0)
 ; & replaceAll^%wf w/findReplace^%ts.
"RTN","SAMICUL",91,0)
 ;
"RTN","SAMICUL",92,0)
 ; 2018-03-11 ven/gpl 18.0-t4 9bd663ee
"RTN","SAMICUL",93,0)
 ;  SAMICAS2 vapals forms working.
"RTN","SAMICUL",94,0)
 ;
"RTN","SAMICUL",95,0)
 ; 2018-03-12 ven/gpl 18.0-t4 8c36c6a7
"RTN","SAMICUL",96,0)
 ;  SAMICAS2 new form works now & charts on home page.
"RTN","SAMICUL",97,0)
 ;
"RTN","SAMICUL",98,0)
 ; 2018-03-14 ven/gpl 18.0-t4 9653650a
"RTN","SAMICUL",99,0)
 ;  SAMICAS2 revised casereview page link, fixed external url
"RTN","SAMICUL",100,0)
 ; preservation.
"RTN","SAMICUL",101,0)
 ;
"RTN","SAMICUL",102,0)
 ; 2018-03-21 ven/gpl 18.0-t4 48868561
"RTN","SAMICUL",103,0)
 ;  SAMICAS2 max date insertion, case review navigation changed to
"RTN","SAMICUL",104,0)
 ; post, date order for CT Eval in case review.
"RTN","SAMICUL",105,0)
 ;
"RTN","SAMICUL",106,0)
 ; 2018-03-26 ven/gpl 18.0-t4 5fa4ee96
"RTN","SAMICUL",107,0)
 ;  SAMICAS2 changes to support incomplete forms display &
"RTN","SAMICUL",108,0)
 ; processing.
"RTN","SAMICUL",109,0)
 ;
"RTN","SAMICUL",110,0)
 ; 2018-03-27 ven/gpl 18.0-t4 cace9756
"RTN","SAMICUL",111,0)
 ;  SAMICAS2 siforms are always complete.
"RTN","SAMICUL",112,0)
 ;
"RTN","SAMICUL",113,0)
 ; 2018-04-02 ven/gpl 18.0-t4 00da9146
"RTN","SAMICUL",114,0)
 ;  SAMICAS2 added followup form.
"RTN","SAMICUL",115,0)
 ;
"RTN","SAMICUL",116,0)
 ; 2018-04-24 ven/gpl 18.0-t4 22e39d87
"RTN","SAMICUL",117,0)
 ;  SAMICAS2 added pet & biopsy forms.
"RTN","SAMICUL",118,0)
 ;
"RTN","SAMICUL",119,0)
 ; 2018-05-01 ven/gpl 18.0-t4 f1751c43
"RTN","SAMICUL",120,0)
 ;  SAMICAS2 fix problem with new forms: followup & pet.
"RTN","SAMICUL",121,0)
 ;
"RTN","SAMICUL",122,0)
 ; 2018-05-18 ven/lgc 18.0-t4 9eba8f8c
"RTN","SAMICUL",123,0)
 ;  SAMICAS2 conversion to new graph and simplified forms processing.
"RTN","SAMICUL",124,0)
 ;
"RTN","SAMICUL",125,0)
 ; 2018-05-21 ven/lgc 18.0-t4 0d7ed2f7
"RTN","SAMICUL",126,0)
 ;  SAMICAS2 changes for new navigation html.
"RTN","SAMICUL",127,0)
 ;
"RTN","SAMICUL",128,0)
 ; 2018-06-14 ven/lgc 18.0-t4 d71f4fe4
"RTN","SAMICUL",129,0)
 ;  SAMICAS2 changes to make the background form optional.
"RTN","SAMICUL",130,0)
 ;
"RTN","SAMICUL",131,0)
 ; 2018-06-20 ven/lgc 18.0-t4 bf03b07f
"RTN","SAMICUL",132,0)
 ;  SAMICAS2 corrections for new forms processing navigation.
"RTN","SAMICUL",133,0)
 ;
"RTN","SAMICUL",134,0)
 ; 2018-07-01 ven/lgc 18.0-t4 2e1541dc,8b0a4329
"RTN","SAMICUL",135,0)
 ;  SAMICAS2 add intervention forms to case review page, 1st version
"RTN","SAMICUL",136,0)
 ; of ct eval report.
"RTN","SAMICUL",137,0)
 ;
"RTN","SAMICUL",138,0)
 ; 2018-07-04 ven/lgc 18.0-t4 b28c1658
"RTN","SAMICUL",139,0)
 ;  SAMICAS2 fix a typo.
"RTN","SAMICUL",140,0)
 ;
"RTN","SAMICUL",141,0)
 ; 2018-07-10 ven/lgc 18.0-t4 2e9662b4
"RTN","SAMICUL",142,0)
 ;  SAMICAS2 repair SAMIHOM3 & redact report link.
"RTN","SAMICUL",143,0)
 ;
"RTN","SAMICUL",144,0)
 ; 2018-08-19 ven/lgc 18.0-t4 2ce0cab4
"RTN","SAMICUL",145,0)
 ;  SAMICAS2 use ssn instead of last5 where available.
"RTN","SAMICUL",146,0)
 ;
"RTN","SAMICUL",147,0)
 ; 2018-08-20 ven/lgc 18.0-t4 955fd484
"RTN","SAMICUL",148,0)
 ;  SAMICAS2 fix case review page cr lf issue.
"RTN","SAMICUL",149,0)
 ;
"RTN","SAMICUL",150,0)
 ; 2018-08-22 ven/gpl 18.0-t4 d67a2fe5
"RTN","SAMICUL",151,0)
 ;  SAMICAS2 turn off ctreport.
"RTN","SAMICUL",152,0)
 ;
"RTN","SAMICUL",153,0)
 ; 2018-08-30 ven/lgc 18.0-t4 125f1c8b
"RTN","SAMICUL",154,0)
 ;  SAMICAS2 add type index to getItems to help find last previous
"RTN","SAMICUL",155,0)
 ; form of a type.
"RTN","SAMICUL",156,0)
 ;
"RTN","SAMICUL",157,0)
 ; 2018-09-04 ven/lgc 18.0-t4 3e6e326f
"RTN","SAMICUL",158,0)
 ;  SAMICAS2 hide report link.
"RTN","SAMICUL",159,0)
 ;
"RTN","SAMICUL",160,0)
 ; 2018-10-14 ven/lgc 18.0-t4 f6e1229f
"RTN","SAMICUL",161,0)
 ;  SAMICAS2 turn on copy forward for cteval new forms.
"RTN","SAMICUL",162,0)
 ;
"RTN","SAMICUL",163,0)
 ; 2018-10-26 ven/lgc 18.0-t4 f19bf1ae
"RTN","SAMICUL",164,0)
 ;  SAMICAS2 ability to add multiple forms on same day.
"RTN","SAMICUL",165,0)
 ;
"RTN","SAMICUL",166,0)
 ; 2018-11-07 ven/gpl 18.0-t4 c76b2eac
"RTN","SAMICUL",167,0)
 ;  SAMICAS2 defend against unit test patient 1.
"RTN","SAMICUL",168,0)
 ;
"RTN","SAMICUL",169,0)
 ; 2018-11-13 ven/toad 18.0-t4
"RTN","SAMICUL",170,0)
 ;  SAMICAS2 SAMIHOM2 > SAMIHOM3.
"RTN","SAMICUL",171,0)
 ;
"RTN","SAMICUL",172,0)
 ; 2018-11-14 ven/lgc 18.0-t4 6e9799ba
"RTN","SAMICUL",173,0)
 ;  SAMICUL fix graphstore forms.
"RTN","SAMICUL",174,0)
 ;
"RTN","SAMICUL",175,0)
 ; 2018-11-28 ven/lgc 18.0-t4 a9539464
"RTN","SAMICUL",176,0)
 ;  SAMICAS2 work on sac compliance.
"RTN","SAMICUL",177,0)
 ;
"RTN","SAMICUL",178,0)
 ; 2018-12-11 ven/lgc 18.0-t4 3ceb74b5
"RTN","SAMICUL",179,0)
 ;  SAMICAS2 update for sac compliance.
"RTN","SAMICUL",180,0)
 ;
"RTN","SAMICUL",181,0)
 ; 2018-12-19/20 ven/lgc 18.0-t4 7a5d3400,a14554c1
"RTN","SAMICUL",182,0)
 ;  SAMICAS2 more sac compliance, r/^gpl w/^SAMIGPL.
"RTN","SAMICUL",183,0)
 ;
"RTN","SAMICUL",184,0)
 ; 2018-12-26 ven/lgc 18.0-t4 8dd6f34d,51eb1635
"RTN","SAMICUL",185,0)
 ;  SAMICAS2 update for sac compliance, fix accidental reversions.
"RTN","SAMICUL",186,0)
 ;
"RTN","SAMICUL",187,0)
 ; 2019-01-10 ven/lgc 18.0-t4 2daba010
"RTN","SAMICUL",188,0)
 ;  SAMICAS2 update for SAC compliance.
"RTN","SAMICUL",189,0)
 ;
"RTN","SAMICUL",190,0)
 ; 2019-01-22 ven/lgc 18.0-t4 53681219,5ddb29c5
"RTN","SAMICUL",191,0)
 ;  SAMICAS2 add license info to each SAMI routine; edit for lower
"RTN","SAMICUL",192,0)
 ; case initials.
"RTN","SAMICUL",193,0)
 ;
"RTN","SAMICUL",194,0)
 ; 2019-02-18 ven/lgc 18.0-t4 76874314
"RTN","SAMICUL",195,0)
 ;  SAMICAS2,SAMICAS3 update recently edited routines.
"RTN","SAMICUL",196,0)
 ;
"RTN","SAMICUL",197,0)
 ; 2019-03-13 ven/lmry 18.0-t4 ef66ef16
"RTN","SAMICUL",198,0)
 ;  SAMICAS2 spell out some elements missed earlier.
"RTN","SAMICUL",199,0)
 ;
"RTN","SAMICUL",200,0)
 ; 2019-03-14 ven/lmry 18.0-t4 038507e2
"RTN","SAMICUL",201,0)
 ;  SAMICAS3 spell out some missed M elements, fix copy/paste errors
"RTN","SAMICUL",202,0)
 ; in comments for MKFUFORM, MKBXFORM, & MKPTFORM.
"RTN","SAMICUL",203,0)
 ;
"RTN","SAMICUL",204,0)
 ; 2019-04-16 ven/lgc 18.0-t4 e54b76d1
"RTN","SAMICUL",205,0)
 ;  SAMICAS2 update for SAMIFORM project.
"RTN","SAMICUL",206,0)
 ;
"RTN","SAMICUL",207,0)
 ; 2019-04-23 ven/gpl 18.0-t4 ce322911
"RTN","SAMICUL",208,0)
 ;  SAMICAS2 add intake notes to case review page.
"RTN","SAMICUL",209,0)
 ;
"RTN","SAMICUL",210,0)
 ; 2019-06-18 ven/lgc 18.0-t4 91022482
"RTN","SAMICUL",211,0)
 ;  SAMICAS3 switch fr/global ^SAMIGPL to/^SAMIUL.
"RTN","SAMICUL",212,0)
 ;
"RTN","SAMICUL",213,0)
 ; 2019-07-01 ven/gpl 18.0-t4 cc87cc44
"RTN","SAMICUL",214,0)
 ;  SAMICAS3 prevent >1 bkgd form/patient.
"RTN","SAMICUL",215,0)
 ;
"RTN","SAMICUL",216,0)
 ; 2019-07-07 ven/gpl 18.0-t4 776f7451
"RTN","SAMICUL",217,0)
 ;  SAMICAS3 resolving can't create bkgd form, branch messed up.
"RTN","SAMICUL",218,0)
 ;
"RTN","SAMICUL",219,0)
 ; 2019-08-01 ven/lgc 18.0-t4 d710f27d
"RTN","SAMICUL",220,0)
 ;  SAMICAS2 pull displayed facility code from Vista parameter.
"RTN","SAMICUL",221,0)
 ;
"RTN","SAMICUL",222,0)
 ; 2019-09-26 ven/gpl 18.0-t4 92b12324 vap-420
"RTN","SAMICUL",223,0)
 ;  SAMICAS3 prefill form date & date of baseline ct on new followup
"RTN","SAMICUL",224,0)
 ; form.
"RTN","SAMICUL",225,0)
 ;
"RTN","SAMICUL",226,0)
 ; 2019-10-01 par/ddn 18.0-t4 4caf1a98 vap-344
"RTN","SAMICUL",227,0)
 ;  SAMICAS2 use proper capitalization of the word "veteran".
"RTN","SAMICUL",228,0)
 ;
"RTN","SAMICUL",229,0)
 ; 2020-01-11 ven/lgc 18.1 5651698a
"RTN","SAMICUL",230,0)
 ;  SAMICAS2,SAMICAS3 fix duplicate form overwriting.
"RTN","SAMICUL",231,0)
 ;
"RTN","SAMICUL",232,0)
 ; 2020-01-17 ven/lgc 18.1 8557207f
"RTN","SAMICUL",233,0)
 ;  SAMICAS2 followup note.
"RTN","SAMICUL",234,0)
 ;
"RTN","SAMICUL",235,0)
 ; 2020-01-25 ven/lgc 18.3 6a07a860,6a947567
"RTN","SAMICUL",236,0)
 ;  SAMICAS3 nodule copy & fix to ru, fix subtle bug in nodule copy.
"RTN","SAMICUL",237,0)
 ;
"RTN","SAMICUL",238,0)
 ; 2020-04-11 ven/gpl 18.5 666f5b91,2f2c29c1
"RTN","SAMICUL",239,0)
 ;  SAMICAS2 multi-tenancy.
"RTN","SAMICUL",240,0)
 ;
"RTN","SAMICUL",241,0)
 ; 2020-05-12 ven/gpl 18.5 ad11e0ea
"RTN","SAMICUL",242,0)
 ;  SAMICAS2 fix SITE on case review page.
"RTN","SAMICUL",243,0)
 ;
"RTN","SAMICUL",244,0)
 ; 2020-11-12 ven/gpl 18.9 cec1ccd6
"RTN","SAMICUL",245,0)
 ;  SAMICAS2,SAMICAS3 ceform date refill upgrade.
"RTN","SAMICUL",246,0)
 ;
"RTN","SAMICUL",247,0)
 ; 2020-11-13 ven/gpl 18.9 dce3c568
"RTN","SAMICUL",248,0)
 ;  SAMICAS3 prefill ceform prior scans text field.
"RTN","SAMICUL",249,0)
 ;
"RTN","SAMICUL",250,0)
 ; 2021-02-18 ven/gpl 18.9 af2a0b8a
"RTN","SAMICUL",251,0)
 ;  SAMICAS3 copy last previous CT nodules instead of last nodules in
"RTN","SAMICUL",252,0)
 ; any form.
"RTN","SAMICUL",253,0)
 ;
"RTN","SAMICUL",254,0)
 ; 2021-02-21 ven/gpl 18.9 3fd704fb
"RTN","SAMICUL",255,0)
 ;  SAMICAS3 fix bug in prefill logic.
"RTN","SAMICUL",256,0)
 ;
"RTN","SAMICUL",257,0)
 ; 2021-03-02 ven/gpl 18.9 479dc041
"RTN","SAMICUL",258,0)
 ;  SAMICAS2 return error msg if no CT Eval form exists when
"RTN","SAMICUL",259,0)
 ; generating a FU note.
"RTN","SAMICUL",260,0)
 ;
"RTN","SAMICUL",261,0)
 ; 2021-03-10 ven/toad 18.9 a46a2cc1
"RTN","SAMICUL",262,0)
 ;  SAMICUL update log, convert to new vistaver schema.
"RTN","SAMICUL",263,0)
 ;  SAMICAS2,SAMICAS3 bump date & patch list, update contents, lt
"RTN","SAMICUL",264,0)
 ; refactor.
"RTN","SAMICUL",265,0)
 ;
"RTN","SAMICUL",266,0)
 ; 2021-03-17 ven/toad 18.9 62da30b
"RTN","SAMICUL",267,0)
 ;  SAMICAS2 fix xindex errors: in WSCASE add missing space between
"RTN","SAMICUL",268,0)
 ; do & comment to prevent syntax error reported as block mismatch.
"RTN","SAMICUL",269,0)
 ;  SAMICAS3 remove extra spaces at ends of 3 lines.
"RTN","SAMICUL",270,0)
 ;
"RTN","SAMICUL",271,0)
 ; 2021-04-16 ven/gpl 18.11 ac82eec
"RTN","SAMICUL",272,0)
 ;  SAMICAS3 include baseline scan in prior scans field on prefill.
"RTN","SAMICUL",273,0)
 ;
"RTN","SAMICUL",274,0)
 ; 2021-05-14/19 ven/gpl 18.11 0cbee7b,a21b056,139c6a5,0a0cccc
"RTN","SAMICUL",275,0)
 ;  SAMICAS3 improved CT eval prefill of past scan dates, urgent
"RTN","SAMICUL",276,0)
 ; fixes to CT Report & intervention & pet form prefill.
"RTN","SAMICUL",277,0)
 ;
"RTN","SAMICUL",278,0)
 ; 2021-05-20/21 ven/mcglk&toad 18.11 43a4557,424ea11,129e96b
"RTN","SAMICUL",279,0)
 ;  SAMICAS3 bump version & dates.
"RTN","SAMICUL",280,0)
 ;
"RTN","SAMICUL",281,0)
 ; 2021-05-24 ven/gpl 18.11 4aba1a9
"RTN","SAMICUL",282,0)
 ;  SAMICAS3 in MKCEFORM,MKPTFORM,MKBXFORM pass key to
"RTN","SAMICUL",283,0)
 ; CTCOPY^SAMICTC1 to modulate node-copy operation; critical fix to
"RTN","SAMICUL",284,0)
 ; copy forward for is it new field for new ct eval forms.
"RTN","SAMICUL",285,0)
 ;
"RTN","SAMICUL",286,0)
 ; 2021-05-25 ven/toad 18.11 801d7c74
"RTN","SAMICUL",287,0)
 ;  SAMICAS3 bump date; passim lt refactor.
"RTN","SAMICUL",288,0)
 ;
"RTN","SAMICUL",289,0)
 ; 2021-05-26/27 ven/gpl 18.11 6edc0610,73728821
"RTN","SAMICUL",290,0)
 ;  SAMICAS3 in MKITFORM add new nodule-copy block to copy forward
"RTN","SAMICUL",291,0)
 ; for intervention form; in LASTCMP,PRIORCMP init tdt to today to
"RTN","SAMICUL",292,0)
 ; start before today, to fix last comp & prior scan field prefill in
"RTN","SAMICUL",293,0)
 ; ct eval form.
"RTN","SAMICUL",294,0)
 ;
"RTN","SAMICUL",295,0)
 ; 2021-06-01 ven/toad 18.11 7dd9410c
"RTN","SAMICUL",296,0)
 ;  SAMICAS3 fold in gpl chgs fr 2021-05-26/27, annotate, adjust news
"RTN","SAMICUL",297,0)
 ; in nodule copy blocks, bump date.
"RTN","SAMICUL",298,0)
 ;
"RTN","SAMICUL",299,0)
 ; 2021-06-29 ven/gpl 18.12 50d3998b,a5bbd37a
"RTN","SAMICUL",300,0)
 ;  SAMICAS3 in LASTCMP fix bug that excluded ct forms from today in
"RTN","SAMICUL",301,0)
 ; date list, init tdt to today+1 to start today; text-box formatting
"RTN","SAMICUL",302,0)
 ; for intake & followup notes, new text-processing utils; in MKFUFORM
"RTN","SAMICUL",303,0)
 ; set basedt to $$BASELNDT or $$LASTCMP or now.
"RTN","SAMICUL",304,0)
 ;
"RTN","SAMICUL",305,0)
 ; 2021-06-30/07-06 ven/mcglk&toad&gpl 18.12 cbf7e46b,d8296fda,
"RTN","SAMICUL",306,0)
 ; b248664b
"RTN","SAMICUL",307,0)
 ;  SAMICASE,2,3 bump version & dates.
"RTN","SAMICUL",308,0)
 ;  SAMICAS3 in MKFUFORM,LASTCMP update calls & called-by.
"RTN","SAMICUL",309,0)
 ;  SAMICASE,2,3 finish converting to ppi format, annotate; fix typos.
"RTN","SAMICUL",310,0)
 ;
"RTN","SAMICUL",311,0)
 ; 2021-08-01 ven/gpl 18.12 5bd7c627,50620b8b
"RTN","SAMICUL",312,0)
 ;  SAMICAS2 set intake form to incomplete on creation: in GSAMISTA
"RTN","SAMICUL",313,0)
 ; add final line to conditionally set stat="incomplete".
"RTN","SAMICUL",314,0)
 ;  SAMICAS3 exclude current date from last compare field when prev ct
"RTN","SAMICUL",315,0)
 ; report exists: in LASTCMP start w/before today; in PRIORCMP add
"RTN","SAMICUL",316,0)
 ; line to handle retstr="".
"RTN","SAMICUL",317,0)
 ;
"RTN","SAMICUL",318,0)
 ;@contents
"RTN","SAMICUL",319,0)
 ; SAMICASE case review
"RTN","SAMICUL",320,0)
 ; SAMICAS2 case review continued
"RTN","SAMICUL",321,0)
 ; SAMICAS3 case review continued
"RTN","SAMICUL",322,0)
 ; SAMICUL case review log
"RTN","SAMICUL",323,0)
 ;
"RTN","SAMICUL",324,0)
 ;
"RTN","SAMICUL",325,0)
 ;
"RTN","SAMICUL",326,0)
EOR ; end of routine SAMICUL
"RTN","SAMIFLD")
0^28^B215854610
"RTN","SAMIFLD",1,0)
SAMIFLD ;ven/gpl - elcap: form load & case review ;2021-03-21T23:51Z
"RTN","SAMIFLD",2,0)
 ;;18.0;SAMI;**10**;2020-01;Build 1
"RTN","SAMIFLD",3,0)
 ;;1.18.0.10-i10
"RTN","SAMIFLD",4,0)
 ;
"RTN","SAMIFLD",5,0)
 ; SAMIFLD contains subroutines for processing ELCAP forms, loading
"RTN","SAMIFLD",6,0)
 ; JSON data into the graphstore for each line. Since three of those
"RTN","SAMIFLD",7,0)
 ; subroutines are also code for ppis called by WSCASE^SAMICASE, two
"RTN","SAMIFLD",8,0)
 ; additional subroutines are included that are not part of the LOAD
"RTN","SAMIFLD",9,0)
 ; opus but are called by WSCASE^SAMICASE.
"RTN","SAMIFLD",10,0)
 ; SAMIFLD contains no public entry points (see SAMIFORM).
"RTN","SAMIFLD",11,0)
 ;
"RTN","SAMIFLD",12,0)
 quit  ; no entry from top
"RTN","SAMIFLD",13,0)
 ;
"RTN","SAMIFLD",14,0)
 ;
"RTN","SAMIFLD",15,0)
 ;
"RTN","SAMIFLD",16,0)
 ;@section 0 primary development
"RTN","SAMIFLD",17,0)
 ;
"RTN","SAMIFLD",18,0)
 ;
"RTN","SAMIFLD",19,0)
 ;
"RTN","SAMIFLD",20,0)
 ;@routine-credits
"RTN","SAMIFLD",21,0)
 ;@primary-dev George P. Lilly (gpl)
"RTN","SAMIFLD",22,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIFLD",23,0)
 ;@primary-dev-org Vista Expertise Network (ven)
"RTN","SAMIFLD",24,0)
 ; http://vistaexpertise.net
"RTN","SAMIFLD",25,0)
 ;@copyright 2017/2021, gpl, all rights reserved
"RTN","SAMIFLD",26,0)
 ;@license Apache 2.0
"RTN","SAMIFLD",27,0)
 ; https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIFLD",28,0)
 ;
"RTN","SAMIFLD",29,0)
 ;@last-updated 2021-03-21T23:51Z
"RTN","SAMIFLD",30,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMIFLD",31,0)
 ;@module Screening Applications Management - VAPALS-ELCAP (SAMI)
"RTN","SAMIFLD",32,0)
 ;@version 1.18.0.10-i10
"RTN","SAMIFLD",33,0)
 ;@release-date 2020-01
"RTN","SAMIFLD",34,0)
 ;@patch-list **10**
"RTN","SAMIFLD",35,0)
 ;@build 11
"RTN","SAMIFLD",36,0)
 ;
"RTN","SAMIFLD",37,0)
 ;@additional-dev Frederick D. S. Marshall (toad)
"RTN","SAMIFLD",38,0)
 ; toad@vistaexpertise.net
"RTN","SAMIFLD",39,0)
 ;@additional-dev Larry G. Carlson (lgc)
"RTN","SAMIFLD",40,0)
 ; lgc@vistaexpertise.net
"RTN","SAMIFLD",41,0)
 ;@additional-dev Alexis Carlson (arc)
"RTN","SAMIFLD",42,0)
 ; alexis.carlson@vistaexpertise.net
"RTN","SAMIFLD",43,0)
 ;@additional-dev Domenic DiNatale (dom)
"RTN","SAMIFLD",44,0)
 ; domenic.dinatale@paraxialtech.com
"RTN","SAMIFLD",45,0)
 ;
"RTN","SAMIFLD",46,0)
 ;@module-credits [see SAMIFUL]
"RTN","SAMIFLD",47,0)
 ;
"RTN","SAMIFLD",48,0)
 ;@contents
"RTN","SAMIFLD",49,0)
 ; LOAD: code for ppi LOAD^SAMIFORM
"RTN","SAMIFLD",50,0)
 ;  process html line, e.g., load json data into graph
"RTN","SAMIFLD",51,0)
 ;
"RTN","SAMIFLD",52,0)
 ; $$xpand = expand # to 8 digits
"RTN","SAMIFLD",53,0)
 ; $$GETHDR-AGE = header string for patient sid
"RTN","SAMIFLD",54,0)
 ;
"RTN","SAMIFLD",55,0)
 ; GETLAST5 = code for ppi $$GETLAST5^SAMIFORM
"RTN","SAMIFLD",56,0)
 ;  last5 for patient sid
"RTN","SAMIFLD",57,0)
 ; FIXSRC: code for ppi FIXSRC^SAMIFORM
"RTN","SAMIFLD",58,0)
 ;  fix html src lines to use resources in see/
"RTN","SAMIFLD",59,0)
 ; FIXHREF: code for ppi FIXHREF^SAMIFORM
"RTN","SAMIFLD",60,0)
 ;  fix html href lines to use resources in see/
"RTN","SAMIFLD",61,0)
 ;
"RTN","SAMIFLD",62,0)
 ; GETNAME = code for ppi $$GETNAME^SAMIFORM
"RTN","SAMIFLD",63,0)
 ;  name for patient sid
"RTN","SAMIFLD",64,0)
 ; GETSSN = code for ppi $$GETSSN^SAMIFORM
"RTN","SAMIFLD",65,0)
 ;  ssn for patient sid
"RTN","SAMIFLD",66,0)
 ; GETPRFX = code for ppi $$GETPRFX^SAMIFORM [deprecated]
"RTN","SAMIFLD",67,0)
 ;  retrieve study id prefix from parameter file
"RTN","SAMIFLD",68,0)
 ;
"RTN","SAMIFLD",69,0)
 ;
"RTN","SAMIFLD",70,0)
 ;
"RTN","SAMIFLD",71,0)
 ;@section 1 code for ppi LOAD^SAMIFRM
"RTN","SAMIFLD",72,0)
 ;
"RTN","SAMIFLD",73,0)
 ;
"RTN","SAMIFLD",74,0)
 ;
"RTN","SAMIFLD",75,0)
 ;@ppi-code LOAD^SAMIFORM
"RTN","SAMIFLD",76,0)
LOAD ; process html line, e.g., load json data into graph
"RTN","SAMIFLD",77,0)
 ;
"RTN","SAMIFLD",78,0)
 ;@signature
"RTN","SAMIFLD",79,0)
 ; do LOAD^SAMIFORM(.SAMILINE,form,sid,.SAMIFILTER,.SAMILNUM,.SAMIHTML,.SAMIVALS)
"RTN","SAMIFLD",80,0)
 ;@branches-from
"RTN","SAMIFLD",81,0)
 ; LOAD^SAMIFORM
"RTN","SAMIFLD",82,0)
 ;@ppi-called-by
"RTN","SAMIFLD",83,0)
 ; wsGetForm^%wf
"RTN","SAMIFLD",84,0)
 ; WSNOTE^SAMINOTI
"RTN","SAMIFLD",85,0)
 ; WSREPORT^SAMIUR1
"RTN","SAMIFLD",86,0)
 ;@called-by: none
"RTN","SAMIFLD",87,0)
 ;@calls
"RTN","SAMIFLD",88,0)
 ; $$GETHDR
"RTN","SAMIFLD",89,0)
 ; $$GETLAST5^SAMIFORM
"RTN","SAMIFLD",90,0)
 ; findReplace^%ts
"RTN","SAMIFLD",91,0)
 ; findReplaceAll^%ts
"RTN","SAMIFLD",92,0)
 ; $$xpand
"RTN","SAMIFLD",93,0)
 ; FIXSRC^SAMIFORM
"RTN","SAMIFLD",94,0)
 ; FIXHREF^SAMIFORM
"RTN","SAMIFLD",95,0)
 ;@thruput
"RTN","SAMIFLD",96,0)
 ;.SAMILINE = line of html
"RTN","SAMIFLD",97,0)
 ; SAMILINE("low") = lowercase line for easier checks
"RTN","SAMIFLD",98,0)
 ;.SAMIFILTER = work-parameters array
"RTN","SAMIFLD",99,0)
 ; SAMIFILTER("debug") = 1 to debug some fields, 2 to debug more fields
"RTN","SAMIFLD",100,0)
 ; SAMIFILTER("errormessagestyle") = 2 (default) = use current error msg style
"RTN","SAMIFLD",101,0)
 ; SAMIFILTER("form") = form id (e.g., "vapals:sbform")
"RTN","SAMIFLD",102,0)
 ; SAMIFILTER("key") = graph key for saved form (e.g., "ceform-2019-07-01")
"RTN","SAMIFLD",103,0)
 ; SAMIFILTER("studyid") = patient study id (e.g., "XXX00045")
"RTN","SAMIFLD",104,0)
 ; SAMIFILTER("fvalue") = deprecated
"RTN","SAMIFLD",105,0)
 ;.SAMILNUM = html line #, in case need to reset cursor to skip lines
"RTN","SAMIFLD",106,0)
 ;.SAMIHTML = complete html form, in case other lines need changing
"RTN","SAMIFLD",107,0)
 ;@input
"RTN","SAMIFLD",108,0)
 ; form = form id
"RTN","SAMIFLD",109,0)
 ; sid = patient study id
"RTN","SAMIFLD",110,0)
 ;.SAMIVALS = field values
"RTN","SAMIFLD",111,0)
 ; SAMIVALS("saminame")
"RTN","SAMIFLD",112,0)
 ; SAMIVALS("samistatus")
"RTN","SAMIFLD",113,0)
 ; SAMIVALS("samifirsttime")
"RTN","SAMIFLD",114,0)
 ;@tests
"RTN","SAMIFLD",115,0)
 ; UTSSUB2^SAMIUTF2: used for Dom's new style forms
"RTN","SAMIFLD",116,0)
 ;
"RTN","SAMIFLD",117,0)
 ; This line processor/data loader can modify any line in the html as needed.
"RTN","SAMIFLD",118,0)
 ;
"RTN","SAMIFLD",119,0)
 new touched set touched=0
"RTN","SAMIFLD",120,0)
 ;
"RTN","SAMIFLD",121,0)
 set SAMILINE=SAMILINE_$char(13,10) ; insert CRLF at end of every line
"RTN","SAMIFLD",122,0)
 ; for readability in browser
"RTN","SAMIFLD",123,0)
 ;
"RTN","SAMIFLD",124,0)
 new pssn set pssn=$$GETHDR(sid)
"RTN","SAMIFLD",125,0)
 i pssn=""  d  ; for participants without a sid - ie not registered
"RTN","SAMIFLD",126,0)
 . n dfn,lien
"RTN","SAMIFLD",127,0)
 . s dfn=$g(SAMIFILTER("dfn")) ; if no sid, maybe a dfn
"RTN","SAMIFLD",128,0)
 . q:dfn=""
"RTN","SAMIFLD",129,0)
 . n lroot s lroot=$$setroot^%wd("patient-lookup") ; 
"RTN","SAMIFLD",130,0)
 . s lien=$o(@lroot@("dfn",dfn,""))
"RTN","SAMIFLD",131,0)
 . q:lien=""
"RTN","SAMIFLD",132,0)
 . n ssn s ssn=$g(@lroot@(lien,"ssn"))
"RTN","SAMIFLD",133,0)
 . q:ssn=""
"RTN","SAMIFLD",134,0)
 . s pssn=$e(ssn,1,3)_"-"_$e(ssn,4,5)_"-"_$e(ssn,6,9)
"RTN","SAMIFLD",135,0)
 new last5 set last5=$$GETLAST5^SAMIFORM(sid)
"RTN","SAMIFLD",136,0)
 new useid set useid=pssn
"RTN","SAMIFLD",137,0)
 if useid="" set useid=last5
"RTN","SAMIFLD",138,0)
 ;
"RTN","SAMIFLD",139,0)
 if SAMILINE["@@FORMKEY@@" do  ; insert form id (graph key for new forms)
"RTN","SAMIFLD",140,0)
 . do findReplace^%ts(.SAMILINE,"@@FORMKEY@@",form) ; key -> form, test me
"RTN","SAMIFLD",141,0)
 . quit
"RTN","SAMIFLD",142,0)
 ;
"RTN","SAMIFLD",143,0)
 if SAMILINE["@@SID@@" do  ; insert patient study id
"RTN","SAMIFLD",144,0)
 . do findReplace^%ts(.SAMILINE,"@@SID@@",sid)
"RTN","SAMIFLD",145,0)
 . quit
"RTN","SAMIFLD",146,0)
 ;
"RTN","SAMIFLD",147,0)
 if SAMILINE["@@SITE@@" do  ; insert site id
"RTN","SAMIFLD",148,0)
 . n siteid s siteid=$g(SAMIVALS("siteid"))
"RTN","SAMIFLD",149,0)
 . i siteid="" s siteid=$g(SAMIFILTER("siteid"))
"RTN","SAMIFLD",150,0)
 . q:siteid=""
"RTN","SAMIFLD",151,0)
 . do findReplace^%ts(.SAMILINE,"@@SITE@@",siteid)
"RTN","SAMIFLD",152,0)
 . quit
"RTN","SAMIFLD",153,0)
 ;
"RTN","SAMIFLD",154,0)
 if SAMILINE["@@SITETITLE@@" do  ; insert site title
"RTN","SAMIFLD",155,0)
 . n sitetit s sitetit=$g(SAMIVALS("sitetitle"))
"RTN","SAMIFLD",156,0)
 . i sitetit="" s sitetit=$g(SAMIFILTER("sitetitle"))
"RTN","SAMIFLD",157,0)
 . q:sitetit=""
"RTN","SAMIFLD",158,0)
 . do findReplace^%ts(.SAMILINE,"@@SITETITLE@@",sitetit)
"RTN","SAMIFLD",159,0)
 . quit
"RTN","SAMIFLD",160,0)
 ;
"RTN","SAMIFLD",161,0)
 if SAMILINE["@@MANUALREGISTRATION@@" do  ; turn off manual registration
"RTN","SAMIFLD",162,0)
 . n setman,setparm
"RTN","SAMIFLD",163,0)
 . s setman="true"
"RTN","SAMIFLD",164,0)
 . s setparm=$$GET^XPAR("SYS","SAMI ALLOW MANUAL ENTRY",,"Q")
"RTN","SAMIFLD",165,0)
 . i setparm=0 s setman="false"
"RTN","SAMIFLD",166,0)
 . do findReplace^%ts(.SAMILINE,"@@MANUALREGISTRATION@@",setman)
"RTN","SAMIFLD",167,0)
 ; 
"RTN","SAMIFLD",168,0)
 if SAMILINE["@@DFN@@" do  ; insert patient study id
"RTN","SAMIFLD",169,0)
 . n dfn s dfn=$g(SAMIVALS("dfn"))
"RTN","SAMIFLD",170,0)
 . q:dfn=""
"RTN","SAMIFLD",171,0)
 . do findReplace^%ts(.SAMILINE,"@@DFN@@",dfn)
"RTN","SAMIFLD",172,0)
 . quit
"RTN","SAMIFLD",173,0)
 ;
"RTN","SAMIFLD",174,0)
 if SAMILINE["src=" do  ; repoint src directory references
"RTN","SAMIFLD",175,0)
 . do FIXSRC^SAMIFORM(.SAMILINE) ; insert see/ processor on src= references
"RTN","SAMIFLD",176,0)
 . quit
"RTN","SAMIFLD",177,0)
 ;
"RTN","SAMIFLD",178,0)
 if SAMILINE["href=" if 'touched do  ; repoint href directory references
"RTN","SAMIFLD",179,0)
 . do FIXHREF^SAMIFORM(.SAMILINE) ; insert see/ processor on href= references
"RTN","SAMIFLD",180,0)
 . quit
"RTN","SAMIFLD",181,0)
 ;
"RTN","SAMIFLD",182,0)
 if SAMILINE["Sample, Sammy G" do  ; insert actual patient name
"RTN","SAMIFLD",183,0)
 . ;do findReplace^%ts(.SAMILINE,"Sample, Sammy G",$get(SAMIVALS("saminame")))
"RTN","SAMIFLD",184,0)
 . do findReplace^%ts(.SAMILINE,"Sample, Sammy G",$$GETNAME^SAMIFORM(sid))
"RTN","SAMIFLD",185,0)
 . quit
"RTN","SAMIFLD",186,0)
 ;
"RTN","SAMIFLD",187,0)
 if SAMILINE["ST0001" do  ; insert patient ssn or last 5
"RTN","SAMIFLD",188,0)
 . do findReplace^%ts(.SAMILINE,"ST0001",useid)
"RTN","SAMIFLD",189,0)
 . quit
"RTN","SAMIFLD",190,0)
 ;
"RTN","SAMIFLD",191,0)
 if SAMILINE["1234567890" do  ; cut patient id placeholder
"RTN","SAMIFLD",192,0)
 . do findReplace^%ts(.SAMILINE,"1234567890","")
"RTN","SAMIFLD",193,0)
 . quit
"RTN","SAMIFLD",194,0)
 ;
"RTN","SAMIFLD",195,0)
 if SAMILINE["XX0002" do  ; insert patient study id
"RTN","SAMIFLD",196,0)
 . if SAMILINE["XXX" quit  ;
"RTN","SAMIFLD",197,0)
 . do findReplace^%ts(.SAMILINE,"XX0002",sid)
"RTN","SAMIFLD",198,0)
 . quit
"RTN","SAMIFLD",199,0)
 ;
"RTN","SAMIFLD",200,0)
 if SAMILINE["VEP0001" do  ; insert patient study id
"RTN","SAMIFLD",201,0)
 . do findReplaceAll^%ts(.SAMILINE,"VEP0001",sid)
"RTN","SAMIFLD",202,0)
 . quit
"RTN","SAMIFLD",203,0)
 ;
"RTN","SAMIFLD",204,0)
 if SAMILINE["@@FROZEN@@" do  ; insert whether form is frozen
"RTN","SAMIFLD",205,0)
 . if $get(SAMIVALS("samistatus"))="complete" do  ;
"RTN","SAMIFLD",206,0)
 . . do findReplace^%ts(.SAMILINE,"@@FROZEN@@","true")
"RTN","SAMIFLD",207,0)
 . . quit
"RTN","SAMIFLD",208,0)
 . else  do  ;
"RTN","SAMIFLD",209,0)
 . . do findReplace^%ts(.SAMILINE,"@@FROZEN@@","false")
"RTN","SAMIFLD",210,0)
 . . quit
"RTN","SAMIFLD",211,0)
 . quit
"RTN","SAMIFLD",212,0)
 ;
"RTN","SAMIFLD",213,0)
 if SAMILINE["@@NEWFORM@@" do  ; insert whether first edit of form
"RTN","SAMIFLD",214,0)
 . if $get(SAMIVALS("samifirsttime"))="true" do  ;
"RTN","SAMIFLD",215,0)
 . . do findReplace^%ts(.SAMILINE,"@@NEWFORM@@","true")
"RTN","SAMIFLD",216,0)
 . . quit
"RTN","SAMIFLD",217,0)
 . else  do  ;
"RTN","SAMIFLD",218,0)
 . . do findReplace^%ts(.SAMILINE,"@@NEWFORM@@","false")
"RTN","SAMIFLD",219,0)
 . . quit
"RTN","SAMIFLD",220,0)
 . quit
"RTN","SAMIFLD",221,0)
 ;
"RTN","SAMIFLD",222,0)
 if SAMILINE["@@CHART_ELIGIBILITY_NOTE_EXISTS@@" d  ;
"RTN","SAMIFLD",223,0)
 . n zexist
"RTN","SAMIFLD",224,0)
 . s zexist=$$EXISTCE^SAMINOT1(sid,form)
"RTN","SAMIFLD",225,0)
 . do findReplace^%ts(.SAMILINE,"@@CHART_ELIGIBILITY_NOTE_EXISTS@@",zexist)
"RTN","SAMIFLD",226,0)
 ;
"RTN","SAMIFLD",227,0)
 if SAMILINE["@@PRE_ENROLLMENT_NOTE_EXISTS@@" d  ;
"RTN","SAMIFLD",228,0)
 . n zexist
"RTN","SAMIFLD",229,0)
 . s zexist=$$EXISTPRE^SAMINOT1(sid,form)
"RTN","SAMIFLD",230,0)
 . do findReplace^%ts(.SAMILINE,"@@PRE_ENROLLMENT_NOTE_EXISTS@@",zexist)
"RTN","SAMIFLD",231,0)
 ;
"RTN","SAMIFLD",232,0)
 if SAMILINE["@@INTAKE_NOTE_EXISTS@@" d  ;
"RTN","SAMIFLD",233,0)
 . n zexist
"RTN","SAMIFLD",234,0)
 . s zexist=$$EXISTINT^SAMINOT1(sid,form)
"RTN","SAMIFLD",235,0)
 . do findReplace^%ts(.SAMILINE,"@@INTAKE_NOTE_EXISTS@@",zexist)
"RTN","SAMIFLD",236,0)
 ;
"RTN","SAMIFLD",237,0)
 if SAMILINE["changelog" d  ;
"RTN","SAMIFLD",238,0)
 . new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIFLD",239,0)
 . new clog set clog=$na(@root@("graph",sid,form,"changelog"))
"RTN","SAMIFLD",240,0)
 . if '$d(@clog) q  ;
"RTN","SAMIFLD",241,0)
 . do findReplace^%ts(.SAMILINE,"</pre>","")
"RTN","SAMIFLD",242,0)
 . new zi set zi=""
"RTN","SAMIFLD",243,0)
 . for  set zi=$order(@clog@(zi)) quit:zi=""  d  ;
"RTN","SAMIFLD",244,0)
 . . new zien set zien=SAMILNUM_"."_$$xpand(zi)
"RTN","SAMIFLD",245,0)
 . . set zhtml(zien)=@clog@(zi)
"RTN","SAMIFLD",246,0)
 . set zhtml(SAMILNUM_"."_$$xpand($order(@clog@(""),-1)+1))="</pre>"
"RTN","SAMIFLD",247,0)
 ;
"RTN","SAMIFLD",248,0)
 if SAMILINE["commlog" d  ;
"RTN","SAMIFLD",249,0)
 . new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIFLD",250,0)
 . new clog set clog=$na(@root@("graph",sid,form,"comlog"))
"RTN","SAMIFLD",251,0)
 . if '$d(@clog) q  ;
"RTN","SAMIFLD",252,0)
 . do findReplace^%ts(.SAMILINE,"</pre>","")
"RTN","SAMIFLD",253,0)
 . new zi set zi=""
"RTN","SAMIFLD",254,0)
 . for  set zi=$order(@clog@(zi)) quit:zi=""  d  ;
"RTN","SAMIFLD",255,0)
 . . new zien set zien=SAMILNUM_"."_$$xpand(zi)
"RTN","SAMIFLD",256,0)
 . . set zhtml(zien)=@clog@(zi)
"RTN","SAMIFLD",257,0)
 . set zhtml(SAMILNUM_"."_$$xpand($order(@clog@(""),-1)+1))="</pre>"
"RTN","SAMIFLD",258,0)
 ;
"RTN","SAMIFLD",259,0)
 ;if form["fuform" d  ;
"RTN","SAMIFLD",260,0)
 i SAMILINE["pack-years-history" d  ;
"RTN","SAMIFLD",261,0)
 . d  ;
"RTN","SAMIFLD",262,0)
 . . i SAMILINE'["id" q  ;
"RTN","SAMIFLD",263,0)
 . . n zzi s zzi=SAMILNUM
"RTN","SAMIFLD",264,0)
 . . f  s zzi=$o(SAMIHTML(zzi)) q:zzi>(SAMILNUM+20)  q:SAMIHTML(zzi)["tbody"  d
"RTN","SAMIFLD",265,0)
 . . . s SAMIHTML(zzi)=SAMIHTML(zzi)_$char(13,10)
"RTN","SAMIFLD",266,0)
 . . ;s SAMIHTML(zzi)="<tbody>"_$$SHDET^SAMIUR2(sid)
"RTN","SAMIFLD",267,0)
 . . s SAMILNUM=zzi+1
"RTN","SAMIFLD",268,0)
 . . s SAMILINE=$$SHDET^SAMIUR2(sid,form)_"</tbody>"
"RTN","SAMIFLD",269,0)
 ;
"RTN","SAMIFLD",270,0)
 i SAMILINE["@@ERROR_MESSAGE@@" d  ;
"RTN","SAMIFLD",271,0)
 . n errMsg s errMsg=$get(SAMIVALS("errorMessage"))
"RTN","SAMIFLD",272,0)
 . if errMsg="" q  ; no error message
"RTN","SAMIFLD",273,0)
 . do findReplace^%ts(.SAMILINE,"@@ERROR_MESSAGE@@",errMsg)
"RTN","SAMIFLD",274,0)
 ;
"RTN","SAMIFLD",275,0)
 i SAMILINE["@@ERROR_FIELDS@@" d  ;
"RTN","SAMIFLD",276,0)
 . n errFld s errFld=$get(SAMIVALS("errorField"))
"RTN","SAMIFLD",277,0)
 . if errFld="" q  ; no error field
"RTN","SAMIFLD",278,0)
 . do findReplace^%ts(.SAMILINE,"@@ERROR_FIELDS@@",errFld)
"RTN","SAMIFLD",279,0)
 ;
"RTN","SAMIFLD",280,0)
 i SAMILINE["@@INFO_MESSAGE@@" d  ;
"RTN","SAMIFLD",281,0)
 . n infoMsg s infoMsg=$get(SAMIVALS("infoMessage"))
"RTN","SAMIFLD",282,0)
 . if infoMsg="" q  ; no message
"RTN","SAMIFLD",283,0)
 . do findReplace^%ts(.SAMILINE,"@@INFO_MESSAGE@@",infoMsg)
"RTN","SAMIFLD",284,0)
 ;
"RTN","SAMIFLD",285,0)
 i SAMILINE["@@WARN_MESSAGE@@" d  ;
"RTN","SAMIFLD",286,0)
 . n warnMsg s warnMsg=$get(SAMIVALS("warnMessage"))
"RTN","SAMIFLD",287,0)
 . if warnMsg="" q  ; no message
"RTN","SAMIFLD",288,0)
 . do findReplace^%ts(.SAMILINE,"@@WARN_MESSAGE@@",warnMsg)
"RTN","SAMIFLD",289,0)
 ;
"RTN","SAMIFLD",290,0)
 quit  ; end of ppi LOAD^SAMIFORM
"RTN","SAMIFLD",291,0)
 ;
"RTN","SAMIFLD",292,0)
 ;
"RTN","SAMIFLD",293,0)
 ;
"RTN","SAMIFLD",294,0)
xpand(zi) ; expand # to 8 digits
"RTN","SAMIFLD",295,0)
 ;
"RTN","SAMIFLD",296,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIFLD",297,0)
 ;
"RTN","SAMIFLD",298,0)
 ;ven/gpl;private;function;clean;silent;sac;0% tests
"RTN","SAMIFLD",299,0)
 ;@called-by
"RTN","SAMIFLD",300,0)
 ; LOAD
"RTN","SAMIFLD",301,0)
 ;@calls none
"RTN","SAMIFLD",302,0)
 ;@input
"RTN","SAMIFLD",303,0)
 ; zi = # to expand
"RTN","SAMIFLD",304,0)
 ;@output = # expanded to 8 digits by prefixing 0 & appending 1 so 10,
"RTN","SAMIFLD",305,0)
 ; 20, etc. collate properly
"RTN","SAMIFLD",306,0)
 ;
"RTN","SAMIFLD",307,0)
 ;@stanza 2 algorithm
"RTN","SAMIFLD",308,0)
 ;
"RTN","SAMIFLD",309,0)
 new g1 set g1=8-$length(zi)
"RTN","SAMIFLD",310,0)
 new g2 set $piece(g2,"0",g1)=""
"RTN","SAMIFLD",311,0)
 new g3 set g3=g2_zi_"1"
"RTN","SAMIFLD",312,0)
 ;
"RTN","SAMIFLD",313,0)
 ;@stanza 3 termination
"RTN","SAMIFLD",314,0)
 ;
"RTN","SAMIFLD",315,0)
 quit g3 ; end of $$xpand
"RTN","SAMIFLD",316,0)
 ;
"RTN","SAMIFLD",317,0)
 ;
"RTN","SAMIFLD",318,0)
 ;
"RTN","SAMIFLD",319,0)
GETHDR(sid) ; header string for patient sid
"RTN","SAMIFLD",320,0)
 ;
"RTN","SAMIFLD",321,0)
 ;@signature
"RTN","SAMIFLD",322,0)
 ; $$GETHDR^SAMIFORM(sid)
"RTN","SAMIFLD",323,0)
 ;@called-by
"RTN","SAMIFLD",324,0)
 ; LOAD
"RTN","SAMIFLD",325,0)
 ;@calls
"RTN","SAMIFLD",326,0)
 ; $$setroot^%wd
"RTN","SAMIFLD",327,0)
 ; PREFILL^SAMIHOM3
"RTN","SAMIFLD",328,0)
 ; ^%DT
"RTN","SAMIFLD",329,0)
 ; $$NOW^XLFDT
"RTN","SAMIFLD",330,0)
 ; $$FMDIFF^XLFDT
"RTN","SAMIFLD",331,0)
 ;@input
"RTN","SAMIFLD",332,0)
 ; sid = patient study id
"RTN","SAMIFLD",333,0)
 ;@output = header string (patient id dob age gender)
"RTN","SAMIFLD",334,0)
 ;@tests
"RTN","SAMIFLD",335,0)
 ; UTGETHDR^SAMIUTF2: header string for patient sid
"RTN","SAMIFLD",336,0)
 ;
"RTN","SAMIFLD",337,0)
 quit:$get(sid)="" ""
"RTN","SAMIFLD",338,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIFLD",339,0)
 new ien set ien=$order(@root@("sid",sid,""))
"RTN","SAMIFLD",340,0)
 new dfn set dfn=@root@(ien,"dfn")
"RTN","SAMIFLD",341,0)
 quit:ien=""
"RTN","SAMIFLD",342,0)
 ;
"RTN","SAMIFLD",343,0)
 ; do PREFILL^SAMIHOM3(dfn) ; update from Vista
"RTN","SAMIFLD",344,0)
 if $get(@root@(ien,"ssn"))="" do PREFILL^SAMIHOM3(dfn) ; update from Vista
"RTN","SAMIFLD",345,0)
 if $get(@root@(ien,"sbdob"))=-1 do PREFILL^SAMIHOM3(dfn) ; update from Vista
"RTN","SAMIFLD",346,0)
 ;
"RTN","SAMIFLD",347,0)
 if $get(@root@(ien,"ssn"))="" quit "" ; patient info not available
"RTN","SAMIFLD",348,0)
 new pssn set pssn=$get(@root@(ien,"sissn"))
"RTN","SAMIFLD",349,0)
 if pssn["sta" set pssn=""
"RTN","SAMIFLD",350,0)
 if pssn="" do  ;
"RTN","SAMIFLD",351,0)
 . new orgssn
"RTN","SAMIFLD",352,0)
 . set orgssn=$get(@root@(ien,"ssn"))
"RTN","SAMIFLD",353,0)
 . quit:orgssn=""
"RTN","SAMIFLD",354,0)
 . set pssn=$extract(orgssn,1,3)_"-"_$extract(orgssn,4,5)_"-"_$extract(orgssn,6,9)
"RTN","SAMIFLD",355,0)
 . set @root@(ien,"sissn")=pssn
"RTN","SAMIFLD",356,0)
 . quit
"RTN","SAMIFLD",357,0)
 ;
"RTN","SAMIFLD",358,0)
AGE new dob set dob=$get(@root@(ien,"sbdob")) ; dob in VAPALS format
"RTN","SAMIFLD",359,0)
 i dob["-" s dob=$e(dob,6,7)_"/"_$e(dob,9,10)_"/"_$e(dob,1,4)
"RTN","SAMIFLD",360,0)
 i dob'["/" s dob=$e(dob,5,6)_"/"_$e(dob,7,8)_"/"_$e(dob,1,4)
"RTN","SAMIFLD",361,0)
 new X set X=dob
"RTN","SAMIFLD",362,0)
 new Y
"RTN","SAMIFLD",363,0)
 do ^%DT
"RTN","SAMIFLD",364,0)
 ;
"RTN","SAMIFLD",365,0)
 ; change ven/lgc 20190628 - calculate age with MASH 
"RTN","SAMIFLD",366,0)
 ;
"RTN","SAMIFLD",367,0)
 ;new age set age=$piece($$FMDIFF^XLFDT($$NOW^XLFDT,Y)/365,".")
"RTN","SAMIFLD",368,0)
 new age s age=$$age^%th(Y)
"RTN","SAMIFLD",369,0)
 ;
"RTN","SAMIFLD",370,0)
 set @root@(ien,"age")=age
"RTN","SAMIFLD",371,0)
 ;
"RTN","SAMIFLD",372,0)
 new sex set sex=$get(@root@(ien,"sex"))
"RTN","SAMIFLD",373,0)
 ;
"RTN","SAMIFLD",374,0)
 new rtn set rtn=pssn_" DOB: "_dob_" AGE: "_age_" GENDER: "_sex
"RTN","SAMIFLD",375,0)
 ;
"RTN","SAMIFLD",376,0)
 quit rtn ; end of $$GETHDR-AGE
"RTN","SAMIFLD",377,0)
 ;
"RTN","SAMIFLD",378,0)
 ;
"RTN","SAMIFLD",379,0)
 ;
"RTN","SAMIFLD",380,0)
 ;@section 2 code for ppis $$GETLAST5^SAMIFORM,FIXSRC^SAMIFORM,FIXHREF^SAMIFORM
"RTN","SAMIFLD",381,0)
 ;
"RTN","SAMIFLD",382,0)
 ;
"RTN","SAMIFLD",383,0)
 ;
"RTN","SAMIFLD",384,0)
 ;@ppi-code $$GETLAST5^SAMIFORM
"RTN","SAMIFLD",385,0)
GETLAST5 ; last5 for patient sid
"RTN","SAMIFLD",386,0)
 ;
"RTN","SAMIFLD",387,0)
 ;@signature
"RTN","SAMIFLD",388,0)
 ; $$GETHDR^SAMIFORM(sid)
"RTN","SAMIFLD",389,0)
 ;@branches-from
"RTN","SAMIFLD",390,0)
 ; GETLAST5^SAMIFORM
"RTN","SAMIFLD",391,0)
 ;@ppi-called-by
"RTN","SAMIFLD",392,0)
 ; WSCASE^SAMICAS2
"RTN","SAMIFLD",393,0)
 ; LOAD
"RTN","SAMIFLD",394,0)
 ;@called-by: none
"RTN","SAMIFLD",395,0)
 ;@calls
"RTN","SAMIFLD",396,0)
 ; $$setroot^%wd
"RTN","SAMIFLD",397,0)
 ;@input
"RTN","SAMIFLD",398,0)
 ; sid = patient study id
"RTN","SAMIFLD",399,0)
 ;@output = patient's BS5 (first initial of last name, last 4 of ssn)
"RTN","SAMIFLD",400,0)
 ;@tests
"RTN","SAMIFLD",401,0)
 ; UTGLST5^SAMIUTF2: last5 for patient sid
"RTN","SAMIFLD",402,0)
 ;
"RTN","SAMIFLD",403,0)
 quit:$get(sid)="" ""
"RTN","SAMIFLD",404,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIFLD",405,0)
 new ien set ien=$order(@root@("sid",sid,""))
"RTN","SAMIFLD",406,0)
 quit:ien=""
"RTN","SAMIFLD",407,0)
 ;
"RTN","SAMIFLD",408,0)
 quit @root@(ien,"last5") ; end of ppi $$GETLAST5^SAMIFORM
"RTN","SAMIFLD",409,0)
 ;
"RTN","SAMIFLD",410,0)
 ;
"RTN","SAMIFLD",411,0)
 ;
"RTN","SAMIFLD",412,0)
 ;@ppi-code FIXSRC^SAMIFORM
"RTN","SAMIFLD",413,0)
FIXSRC ; fix html src lines to use resources in see/
"RTN","SAMIFLD",414,0)
 ;
"RTN","SAMIFLD",415,0)
 ;@signature
"RTN","SAMIFLD",416,0)
 ; do FIXSRC^SAMIFORM(.SAMILINE)
"RTN","SAMIFLD",417,0)
 ;@branches-from
"RTN","SAMIFLD",418,0)
 ; FIXSRC^SAMIFORM
"RTN","SAMIFLD",419,0)
 ;@ppi-called-by
"RTN","SAMIFLD",420,0)
 ; WSCASE^SAMICAS2
"RTN","SAMIFLD",421,0)
 ; LOAD
"RTN","SAMIFLD",422,0)
 ;@called-by: none
"RTN","SAMIFLD",423,0)
 ;@calls
"RTN","SAMIFLD",424,0)
 ; findReplaceAll^%ts
"RTN","SAMIFLD",425,0)
 ;@thruput
"RTN","SAMIFLD",426,0)
 ;.SAMILINE = line of html to change
"RTN","SAMIFLD",427,0)
 ;@tests
"RTN","SAMIFLD",428,0)
 ; UTFSRC^SAMIUTF2: fix html src lines to use resources in see/
"RTN","SAMIFLD",429,0)
 ;
"RTN","SAMIFLD",430,0)
 if SAMILINE["src=" do  ;
"RTN","SAMIFLD",431,0)
 . if SAMILINE["src=""http" quit
"RTN","SAMIFLD",432,0)
 . if SAMILINE["src=""/" do  quit
"RTN","SAMIFLD",433,0)
 . . do findReplaceAll^%ts(.SAMILINE,"src=""/","src=""/see/sami/")
"RTN","SAMIFLD",434,0)
 . . quit
"RTN","SAMIFLD",435,0)
 . if SAMILINE["src=""" do  quit
"RTN","SAMIFLD",436,0)
 . . do findReplaceAll^%ts(.SAMILINE,"src=""","src=""/see/sami/")
"RTN","SAMIFLD",437,0)
 . . quit
"RTN","SAMIFLD",438,0)
 . if SAMILINE["src=" do
"RTN","SAMIFLD",439,0)
 . . do findReplaceAll^%ts(.SAMILINE,"src=","src=/see/sami/")
"RTN","SAMIFLD",440,0)
 . . quit
"RTN","SAMIFLD",441,0)
 . quit
"RTN","SAMIFLD",442,0)
 ;
"RTN","SAMIFLD",443,0)
 quit  ; end of ppi FIXSRC^SAMIFORM
"RTN","SAMIFLD",444,0)
 ;
"RTN","SAMIFLD",445,0)
 ;
"RTN","SAMIFLD",446,0)
 ;
"RTN","SAMIFLD",447,0)
 ;@ppi-code FIXHREF^SAMIFORM
"RTN","SAMIFLD",448,0)
FIXHREF ; fix html href lines to use resources in see/
"RTN","SAMIFLD",449,0)
 ;
"RTN","SAMIFLD",450,0)
 ;@signature
"RTN","SAMIFLD",451,0)
 ; do FIXHREF^SAMIFORM(.SAMILINE)
"RTN","SAMIFLD",452,0)
 ;@branches-from
"RTN","SAMIFLD",453,0)
 ; FIXHREF^SAMIFORM
"RTN","SAMIFLD",454,0)
 ;@ppi-called-by
"RTN","SAMIFLD",455,0)
 ; WSCASE^SAMICAS2
"RTN","SAMIFLD",456,0)
 ; LOAD
"RTN","SAMIFLD",457,0)
 ;@called-by: none
"RTN","SAMIFLD",458,0)
 ;@calls
"RTN","SAMIFLD",459,0)
 ; findReplaceAll^%ts
"RTN","SAMIFLD",460,0)
 ;@thruput
"RTN","SAMIFLD",461,0)
 ;.SAMILINE = line of html to change
"RTN","SAMIFLD",462,0)
 ;@tests
"RTN","SAMIFLD",463,0)
 ; UTFHREF^SAMIUTF2: fix html href lines to use resources in see/
"RTN","SAMIFLD",464,0)
 ;
"RTN","SAMIFLD",465,0)
 if SAMILINE["href=" do  ;
"RTN","SAMIFLD",466,0)
 . quit:SAMILINE["href=""#"
"RTN","SAMIFLD",467,0)
 . quit:SAMILINE["href='#"
"RTN","SAMIFLD",468,0)
 . quit:SAMILINE["href=""http"
"RTN","SAMIFLD",469,0)
 . quit:SAMILINE["/vapals"
"RTN","SAMIFLD",470,0)
 . if SAMILINE["href=""/" do  quit
"RTN","SAMIFLD",471,0)
 . . do findReplaceAll^%ts(.SAMILINE,"href=""/","href=""/","href=""/see/sami/")
"RTN","SAMIFLD",472,0)
 . . quit
"RTN","SAMIFLD",473,0)
 . if SAMILINE["href=""" do  quit
"RTN","SAMIFLD",474,0)
 . . do findReplaceAll^%ts(.SAMILINE,"href=""","href=""/see/sami/")
"RTN","SAMIFLD",475,0)
 . . quit
"RTN","SAMIFLD",476,0)
 . if SAMILINE["href=" do  quit
"RTN","SAMIFLD",477,0)
 . . do findReplaceAll^%ts(.SAMILINE,"href=","href=/see/sami/")
"RTN","SAMIFLD",478,0)
 . . quit
"RTN","SAMIFLD",479,0)
 . quit
"RTN","SAMIFLD",480,0)
 ;
"RTN","SAMIFLD",481,0)
 quit  ; end of ppi FIXHREF^SAMIFORM
"RTN","SAMIFLD",482,0)
 ;
"RTN","SAMIFLD",483,0)
 ;
"RTN","SAMIFLD",484,0)
 ;
"RTN","SAMIFLD",485,0)
 ;@section 3 code for ppis $$GETNAME,$$GETSSN,$$GETPRFX^SAMIFORM
"RTN","SAMIFLD",486,0)
 ;
"RTN","SAMIFLD",487,0)
 ;
"RTN","SAMIFLD",488,0)
 ;
"RTN","SAMIFLD",489,0)
 ;@ppi-code $$GETNAME^SAMIFORM
"RTN","SAMIFLD",490,0)
GETNAME ; name for patient sid
"RTN","SAMIFLD",491,0)
 ;
"RTN","SAMIFLD",492,0)
 ;@signature
"RTN","SAMIFLD",493,0)
 ; $$GETNAME^SAMIFORM(sid)
"RTN","SAMIFLD",494,0)
 ;@branches-from
"RTN","SAMIFLD",495,0)
 ; GETNAME^SAMIFORM
"RTN","SAMIFLD",496,0)
 ;@ppi-called-by
"RTN","SAMIFLD",497,0)
 ; WSCASE^SAMICAS2
"RTN","SAMIFLD",498,0)
 ;@called-by: none
"RTN","SAMIFLD",499,0)
 ;@calls
"RTN","SAMIFLD",500,0)
 ; $$setroot^%wd
"RTN","SAMIFLD",501,0)
 ;@input
"RTN","SAMIFLD",502,0)
 ; sid = patient study id
"RTN","SAMIFLD",503,0)
 ;@output = patient's name
"RTN","SAMIFLD",504,0)
 ;@tests
"RTN","SAMIFLD",505,0)
 ; UTGTNM^SAMIUTF2: name for patient sid
"RTN","SAMIFLD",506,0)
 ;
"RTN","SAMIFLD",507,0)
 quit:$get(sid)="" ""
"RTN","SAMIFLD",508,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIFLD",509,0)
 new ien set ien=$order(@root@("sid",sid,""))
"RTN","SAMIFLD",510,0)
 quit:ien=""
"RTN","SAMIFLD",511,0)
 ;
"RTN","SAMIFLD",512,0)
 quit @root@(ien,"saminame") ; end of ppi $$GETNAME^SAMIFORM
"RTN","SAMIFLD",513,0)
 ;
"RTN","SAMIFLD",514,0)
 ;
"RTN","SAMIFLD",515,0)
 ;
"RTN","SAMIFLD",516,0)
 ;@ppi-code $$GETSSN^SAMIFORM
"RTN","SAMIFLD",517,0)
GETSSN ; ssn for patient sid
"RTN","SAMIFLD",518,0)
 ;
"RTN","SAMIFLD",519,0)
 ;@signature
"RTN","SAMIFLD",520,0)
 ; $$GETSSN^SAMIFORM(sid)
"RTN","SAMIFLD",521,0)
 ;@branches-from
"RTN","SAMIFLD",522,0)
 ; GETSSN^SAMIFORM
"RTN","SAMIFLD",523,0)
 ;@ppi-called-by
"RTN","SAMIFLD",524,0)
 ; WSCASE^SAMICAS2
"RTN","SAMIFLD",525,0)
 ;@called-by: none
"RTN","SAMIFLD",526,0)
 ;@calls
"RTN","SAMIFLD",527,0)
 ; $$setroot^%wd
"RTN","SAMIFLD",528,0)
 ;@input
"RTN","SAMIFLD",529,0)
 ; sid = patient study id
"RTN","SAMIFLD",530,0)
 ;@output = patient's ssn
"RTN","SAMIFLD",531,0)
 ;@tests
"RTN","SAMIFLD",532,0)
 ; UTGSSN^SAMIUTF2: ssn for patient sid
"RTN","SAMIFLD",533,0)
 ;
"RTN","SAMIFLD",534,0)
 quit:$get(sid)="" ""
"RTN","SAMIFLD",535,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIFLD",536,0)
 new ien set ien=$order(@root@("sid",sid,""))
"RTN","SAMIFLD",537,0)
 quit:ien=""
"RTN","SAMIFLD",538,0)
 ;
"RTN","SAMIFLD",539,0)
 new pssn set pssn=$get(@root@(ien,"sissn"))
"RTN","SAMIFLD",540,0)
 if pssn["sta" set pssn=""
"RTN","SAMIFLD",541,0)
 if pssn="" do  ;
"RTN","SAMIFLD",542,0)
 . new orgssn set orgssn=$get(@root@(ien,"ssn"))
"RTN","SAMIFLD",543,0)
 . quit:orgssn=""
"RTN","SAMIFLD",544,0)
 . set pssn=$extract(orgssn,1,3)_"-"_$extract(orgssn,4,5)_"-"_$extract(orgssn,6,9)
"RTN","SAMIFLD",545,0)
 . set @root@(ien,"sissn")=pssn
"RTN","SAMIFLD",546,0)
 . quit
"RTN","SAMIFLD",547,0)
 ;
"RTN","SAMIFLD",548,0)
 quit pssn ; end of ppi $$GETSSN^SAMIFORM
"RTN","SAMIFLD",549,0)
 ;
"RTN","SAMIFLD",550,0)
 ;
"RTN","SAMIFLD",551,0)
 ;
"RTN","SAMIFLD",552,0)
 ;@ppi-code $$GETPRFX^SAMIFORM [deprecated]
"RTN","SAMIFLD",553,0)
GETPRFX ; Retrieve study ID prefix from parameter file
"RTN","SAMIFLD",554,0)
 ; This subroutine is deprecated as of the multi-tenancy features.
"RTN","SAMIFLD",555,0)
 ;
"RTN","SAMIFLD",556,0)
 ;@signature
"RTN","SAMIFLD",557,0)
 ; $$GETPRFX^SAMIFORM()
"RTN","SAMIFLD",558,0)
 ;@branches-from
"RTN","SAMIFLD",559,0)
 ; GETPRFX^SAMIFORM
"RTN","SAMIFLD",560,0)
 ;@ppi-called-by
"RTN","SAMIFLD",561,0)
 ; WSCASE^SAMICAS2
"RTN","SAMIFLD",562,0)
 ;@calls
"RTN","SAMIFLD",563,0)
 ; $$GET^XPAR
"RTN","SAMIFLD",564,0)
 ;@output = patient's ssn
"RTN","SAMIFLD",565,0)
 ;@tests
"RTN","SAMIFLD",566,0)
 ; None yet
"RTN","SAMIFLD",567,0)
 ;
"RTN","SAMIFLD",568,0)
 new prefix
"RTN","SAMIFLD",569,0)
 ;set prefix=$$GET^XPAR("SYS","SAMI SID PREFIX",,"Q")
"RTN","SAMIFLD",570,0)
 s prefix=$g(ARG("siteid"))
"RTN","SAMIFLD",571,0)
 i prefix="" s prefix=$g(ARG("site"))
"RTN","SAMIFLD",572,0)
 if $get(prefix)="" set prefix="UNK"
"RTN","SAMIFLD",573,0)
 ;
"RTN","SAMIFLD",574,0)
 quit prefix ; end of ppi $$GETPRFX^SAMIFORM
"RTN","SAMIFLD",575,0)
 ;
"RTN","SAMIFLD",576,0)
 ;
"RTN","SAMIFLD",577,0)
 ;
"RTN","SAMIFLD",578,0)
EOR ; end of routine SAMIFLD
"RTN","SAMIFORM")
0^29^B4892541
"RTN","SAMIFORM",1,0)
SAMIFORM ;ven/gpl - ielcap: form library ; 2019-08-01T15:42Z
"RTN","SAMIFORM",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIFORM",3,0)
 ;
"RTN","SAMIFORM",4,0)
 ; Routine SAMIFORM contains the vapals-elcap form library.
"RTN","SAMIFORM",5,0)
 ; SAMIFORM contains private program interfaces, direct-mode
"RTN","SAMIFORM",6,0)
 ; interfaces, and web-service interfaces.
"RTN","SAMIFORM",7,0)
 ; It contains no public entry points.
"RTN","SAMIFORM",8,0)
 ;
"RTN","SAMIFORM",9,0)
 quit  ; no entry from top
"RTN","SAMIFORM",10,0)
 ;
"RTN","SAMIFORM",11,0)
 ;
"RTN","SAMIFORM",12,0)
 ;
"RTN","SAMIFORM",13,0)
 ;@section 0 primary development
"RTN","SAMIFORM",14,0)
 ;
"RTN","SAMIFORM",15,0)
 ;
"RTN","SAMIFORM",16,0)
 ;
"RTN","SAMIFORM",17,0)
 ;@routine-credits
"RTN","SAMIFORM",18,0)
 ;@primary-dev: George P. Lilly (gpl)
"RTN","SAMIFORM",19,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIFORM",20,0)
 ;@primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIFORM",21,0)
 ; http://vistaexpertise.net
"RTN","SAMIFORM",22,0)
 ;@copyright: 2017/2019, gpl, all rights reserved
"RTN","SAMIFORM",23,0)
 ;@license: Apache 2.0
"RTN","SAMIFORM",24,0)
 ; https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIFORM",25,0)
 ;
"RTN","SAMIFORM",26,0)
 ;@last-updated: 2019-08-01T15:42Z
"RTN","SAMIFORM",27,0)
 ;@application: Screening Applications Management (SAM)
"RTN","SAMIFORM",28,0)
 ;@module: Screening Applications Management - VAPALS-ELCAP (SAMI)
"RTN","SAMIFORM",29,0)
 ;@version: 18.0T04 (fourth development version)
"RTN","SAMIFORM",30,0)
 ;@release-date: not yet released
"RTN","SAMIFORM",31,0)
 ;@patch-list: none yet
"RTN","SAMIFORM",32,0)
 ;
"RTN","SAMIFORM",33,0)
 ;@additional-dev: Frederick D. S. Marshall (toad)
"RTN","SAMIFORM",34,0)
 ; toad@vistaexpertise.net
"RTN","SAMIFORM",35,0)
 ;@additional-dev: Larry G. Carlson (lgc)
"RTN","SAMIFORM",36,0)
 ; lgc@vistaexpertise.net
"RTN","SAMIFORM",37,0)
 ;@additional-dev: Alexis Carlson (arc)
"RTN","SAMIFORM",38,0)
 ; alexis.carlson@vistaexpertise.net
"RTN","SAMIFORM",39,0)
 ;
"RTN","SAMIFORM",40,0)
 ;@module-credits [see SAMIFUL]
"RTN","SAMIFORM",41,0)
 ;
"RTN","SAMIFORM",42,0)
 ;@contents
"RTN","SAMIFORM",43,0)
 ; LOAD: ppi, process html line, e.g., load json data into graph
"RTN","SAMIFORM",44,0)
 ;
"RTN","SAMIFORM",45,0)
 ; $$GETLAST5 = ppi, last5 for patient sid
"RTN","SAMIFORM",46,0)
 ; FIXSRC: ppi, fix html src lines to use resources in see/
"RTN","SAMIFORM",47,0)
 ; FIXHREF: ppi, fix html href lines to use resources in see/
"RTN","SAMIFORM",48,0)
 ;
"RTN","SAMIFORM",49,0)
 ; $$GETNAME = ppi, name for patient sid
"RTN","SAMIFORM",50,0)
 ; $$GETSSN = ppi, ssn for patient sid
"RTN","SAMIFORM",51,0)
 ;
"RTN","SAMIFORM",52,0)
 ; INIT: dmi, initialize all available forms
"RTN","SAMIFORM",53,0)
 ; REGISTER: dmi, register elcap forms in form mapping file
"RTN","SAMIFORM",54,0)
 ; IMPORT: dmi, import json-data directory into elcap-patient graph
"RTN","SAMIFORM",55,0)
 ;
"RTN","SAMIFORM",56,0)
 ; WSSBFORM: wsi GET background, background form access
"RTN","SAMIFORM",57,0)
 ; WSSIFORM: wsi GET intake, intake form access
"RTN","SAMIFORM",58,0)
 ; WSCEFORM: wsi GET ctevaluation, ctevaluation form access
"RTN","SAMIFORM",59,0)
 ;
"RTN","SAMIFORM",60,0)
 ;
"RTN","SAMIFORM",61,0)
 ;
"RTN","SAMIFORM",62,0)
 ;@section 1 form-load & case-review private program interfaces
"RTN","SAMIFORM",63,0)
 ;
"RTN","SAMIFORM",64,0)
 ;
"RTN","SAMIFORM",65,0)
 ;
"RTN","SAMIFORM",66,0)
 ;@ppi LOAD^SAMIFORM, process html line, e.g., load json data into graph
"RTN","SAMIFORM",67,0)
LOAD(SAMILINE,form,sid,SAMIFILTER,SAMILNUM,SAMIHTML,SAMIVALS) goto LOAD^SAMIFLD
"RTN","SAMIFORM",68,0)
 ;
"RTN","SAMIFORM",69,0)
 ;
"RTN","SAMIFORM",70,0)
 ;
"RTN","SAMIFORM",71,0)
 ;@ppi $$GETLAST5^SAMIFORM, last5 for patient sid
"RTN","SAMIFORM",72,0)
GETLAST5(sid) goto GETLAST5^SAMIFLD
"RTN","SAMIFORM",73,0)
 ;
"RTN","SAMIFORM",74,0)
 ;
"RTN","SAMIFORM",75,0)
 ;
"RTN","SAMIFORM",76,0)
 ;@ppi FIXSRC^SAMIFORM, fix html src lines to use resources in see/
"RTN","SAMIFORM",77,0)
FIXSRC(SAMILINE) goto FIXSRC^SAMIFLD
"RTN","SAMIFORM",78,0)
 ;
"RTN","SAMIFORM",79,0)
 ;
"RTN","SAMIFORM",80,0)
 ;
"RTN","SAMIFORM",81,0)
 ;@ppi FIXHREF^SAMIFORM, fix html href lines to use resources in see/
"RTN","SAMIFORM",82,0)
FIXHREF(SAMILINE) goto FIXHREF^SAMIFLD
"RTN","SAMIFORM",83,0)
 ;
"RTN","SAMIFORM",84,0)
 ;
"RTN","SAMIFORM",85,0)
 ;
"RTN","SAMIFORM",86,0)
 ;@ppi-code $$GETNAME^SAMIFORM, name for patient sid
"RTN","SAMIFORM",87,0)
GETNAME(sid) goto GETNAME^SAMIFLD
"RTN","SAMIFORM",88,0)
 ;
"RTN","SAMIFORM",89,0)
 ;
"RTN","SAMIFORM",90,0)
 ;
"RTN","SAMIFORM",91,0)
 ;@ppi-code $$GETSSN^SAMIFORM, ssn for patient sid
"RTN","SAMIFORM",92,0)
GETSSN(sid) goto GETSSN^SAMIFLD
"RTN","SAMIFORM",93,0)
 ;
"RTN","SAMIFORM",94,0)
 ;
"RTN","SAMIFORM",95,0)
 ;
"RTN","SAMIFORM",96,0)
 ;@ppi-code $$GETPRFX^SAMIFORM, prefix for study ID
"RTN","SAMIFORM",97,0)
 ; this routine is depricated as of the multi-tenancy release
"RTN","SAMIFORM",98,0)
GETPRFX(ARG) goto GETPRFX^SAMIFLD
"RTN","SAMIFORM",99,0)
 ;
"RTN","SAMIFORM",100,0)
 ;
"RTN","SAMIFORM",101,0)
 ;
"RTN","SAMIFORM",102,0)
 ;@section 2 direct-mode interfaces
"RTN","SAMIFORM",103,0)
 ;
"RTN","SAMIFORM",104,0)
 ;
"RTN","SAMIFORM",105,0)
 ;
"RTN","SAMIFORM",106,0)
 ;@dmi INIT^SAMIFORM, initilize all available forms
"RTN","SAMIFORM",107,0)
INIT goto INIT^SAMIFDM
"RTN","SAMIFORM",108,0)
 ;
"RTN","SAMIFORM",109,0)
 ;
"RTN","SAMIFORM",110,0)
 ;
"RTN","SAMIFORM",111,0)
 ;@dmi REGISTER^SAMIFORM, register elcap forms in form mapping file
"RTN","SAMIFORM",112,0)
REGISTER goto REGISTER^SAMIFDM
"RTN","SAMIFORM",113,0)
 ;
"RTN","SAMIFORM",114,0)
 ;
"RTN","SAMIFORM",115,0)
 ;
"RTN","SAMIFORM",116,0)
 ;@dmi IMPORT^SAMIFORM, import json-data directory into elcap-patient graph
"RTN","SAMIFORM",117,0)
IMPORT goto IMPORT^SAMIFDM
"RTN","SAMIFORM",118,0)
 ;
"RTN","SAMIFORM",119,0)
 ;
"RTN","SAMIFORM",120,0)
 ;
"RTN","SAMIFORM",121,0)
 ;@section 3 web-service interfaces
"RTN","SAMIFORM",122,0)
 ;
"RTN","SAMIFORM",123,0)
 ;
"RTN","SAMIFORM",124,0)
 ;
"RTN","SAMIFORM",125,0)
 ;@debug old wsi GET background, background form access
"RTN","SAMIFORM",126,0)
WSSBFORM(SAMIRTN,SAMIFILTER) goto WSSBFORM^SAMIFWS
"RTN","SAMIFORM",127,0)
 ;
"RTN","SAMIFORM",128,0)
 ;
"RTN","SAMIFORM",129,0)
 ;
"RTN","SAMIFORM",130,0)
 ;@debug old wsi GET intake, intake form access
"RTN","SAMIFORM",131,0)
WSSIFORM(SAMIRTN,SAMIFILTER) goto WSSIFORM^SAMIFWS
"RTN","SAMIFORM",132,0)
 ;
"RTN","SAMIFORM",133,0)
 ;
"RTN","SAMIFORM",134,0)
 ;
"RTN","SAMIFORM",135,0)
 ;@debug old wsi GET ctevaluation, ctevaluation form access
"RTN","SAMIFORM",136,0)
WSCEFORM(SAMIRTN,SAMIFILTER) goto WSCEFORM^SAMIFWS
"RTN","SAMIFORM",137,0)
 ;
"RTN","SAMIFORM",138,0)
 ;
"RTN","SAMIFORM",139,0)
 ;
"RTN","SAMIFORM",140,0)
EOR ; end of routine SAMIFORM
"RTN","SAMIFUL")
0^30^B129116
"RTN","SAMIFUL",1,0)
SAMIFUL ;ven/gpl - vapals-elcap: form log ;2021-03-21T23:32Z
"RTN","SAMIFUL",2,0)
 ;;18.0;SAMI;**10**;2020-01;Build 1
"RTN","SAMIFUL",3,0)
 ;;1.18.0.10-i10
"RTN","SAMIFUL",4,0)
 ;
"RTN","SAMIFUL",5,0)
 ; SAMIFUL contains routine & module info & the primary development
"RTN","SAMIFUL",6,0)
 ; log for VAPALS-ELCAP's Form module, SAMIF.
"RTN","SAMIFUL",7,0)
 ; It contains no public interfaces or executable code.
"RTN","SAMIFUL",8,0)
 ;
"RTN","SAMIFUL",9,0)
 quit  ; no entry from top
"RTN","SAMIFUL",10,0)
 ;
"RTN","SAMIFUL",11,0)
 ;
"RTN","SAMIFUL",12,0)
 ;
"RTN","SAMIFUL",13,0)
 ;@section 0 primary development
"RTN","SAMIFUL",14,0)
 ;
"RTN","SAMIFUL",15,0)
 ;
"RTN","SAMIFUL",16,0)
 ;
"RTN","SAMIFUL",17,0)
 ;@routine-credits
"RTN","SAMIFUL",18,0)
 ;@primary-dev George P. Lilly (gpl)
"RTN","SAMIFUL",19,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIFUL",20,0)
 ;@primary-dev-org Vista Expertise Network (ven)
"RTN","SAMIFUL",21,0)
 ; http://vistaexpertise.net
"RTN","SAMIFUL",22,0)
 ;@copyright 2017/2021, gpl, all rights reserved
"RTN","SAMIFUL",23,0)
 ;@license Apache 2.0
"RTN","SAMIFUL",24,0)
 ; https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIFUL",25,0)
 ;
"RTN","SAMIFUL",26,0)
 ;@last-updated 2021-03-21T23:32Z
"RTN","SAMIFUL",27,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMIFUL",28,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMIFUL",29,0)
 ;@version 1.18.0.10-i10
"RTN","SAMIFUL",30,0)
 ;@release-date 2020-01
"RTN","SAMIFUL",31,0)
 ;@patch-list **10**
"RTN","SAMIFUL",32,0)
 ;
"RTN","SAMIFUL",33,0)
 ;@additional-dev Frederick D. S. Marshall (toad)
"RTN","SAMIFUL",34,0)
 ; toad@vistaexpertise.net
"RTN","SAMIFUL",35,0)
 ;@additional-dev Larry G. Carlson (lgc)
"RTN","SAMIFUL",36,0)
 ; lgc@vistaexpertise.net
"RTN","SAMIFUL",37,0)
 ;@additional-dev Alexis Carlson (arc)
"RTN","SAMIFUL",38,0)
 ; alexis.carlson@vistaexpertise.net
"RTN","SAMIFUL",39,0)
 ;@additional-dev Domenic DiNatale (dom)
"RTN","SAMIFUL",40,0)
 ; domenic.dinatale@paraxialtech.com
"RTN","SAMIFUL",41,0)
 ;
"RTN","SAMIFUL",42,0)
 ;@module-credits
"RTN","SAMIFUL",43,0)
 ;@project VA Partnership to Increase Access to Lung Screening
"RTN","SAMIFUL",44,0)
 ; (VA-PALS)
"RTN","SAMIFUL",45,0)
 ; http://va-pals.org/
"RTN","SAMIFUL",46,0)
 ;@funding 2017/2021, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMIFUL",47,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMIFUL",48,0)
 ;@partner-org Veterans Affairs Office of Rural health
"RTN","SAMIFUL",49,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMIFUL",50,0)
 ;@partner-org International Early Lung Cancer Action Program (I-ELCAP)
"RTN","SAMIFUL",51,0)
 ; http://ielcap.com/
"RTN","SAMIFUL",52,0)
 ;@partner-org Paraxial Technologies (par)
"RTN","SAMIFUL",53,0)
 ; http://paraxialtech.com/
"RTN","SAMIFUL",54,0)
 ;@partner-org Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMIFUL",55,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMIFUL",56,0)
 ;
"RTN","SAMIFUL",57,0)
 ;@module-log
"RTN","SAMIFUL",58,0)
 ; 2017-09-19 ven/gpl 1.18.0-t01 
"RTN","SAMIFUL",59,0)
 ;  SAMIFRM: initialize SAMI FORM file from elcap-patient graphs,
"RTN","SAMIFUL",60,0)
 ; using mash tools & graphs (%yottaq,^%wd).
"RTN","SAMIFUL",61,0)
 ;
"RTN","SAMIFUL",62,0)
 ; 2017-09-18 ven/gpl 1.18.0-t01
"RTN","SAMIFUL",63,0)
 ;  SAMIFRM: update.
"RTN","SAMIFUL",64,0)
 ;
"RTN","SAMIFUL",65,0)
 ; 2017-12-18 ven/gpl 1.18.0-t01
"RTN","SAMIFUL",66,0)
 ;  SAMIFRM: update.
"RTN","SAMIFUL",67,0)
 ;
"RTN","SAMIFUL",68,0)
 ; 2018-01-03 ven/gpl 1.18.0-t01
"RTN","SAMIFUL",69,0)
 ;  SAMIFRM: update.
"RTN","SAMIFUL",70,0)
 ;
"RTN","SAMIFUL",71,0)
 ; 2018-01-14 ven/gpl 1.18.0-t01
"RTN","SAMIFUL",72,0)
 ;  SAMIFRM: update.
"RTN","SAMIFUL",73,0)
 ;
"RTN","SAMIFUL",74,0)
 ; 2018-02-04 ven/gpl 1.18.0-t01
"RTN","SAMIFUL",75,0)
 ;  SAMIFRM: update.
"RTN","SAMIFUL",76,0)
 ;
"RTN","SAMIFUL",77,0)
 ; 2018-02-05/07 ven/toad 1.18.0-t04
"RTN","SAMIFUL",78,0)
 ;  SAMIFRM: update license & attribution & hdr comments, add white
"RTN","SAMIFUL",79,0)
 ; space & do-dot quits, spell out language elements; in SAMISUBS
"RTN","SAMIFUL",80,0)
 ; replaceAll^%wfhform > replaceAll^%wf; $$setroot^%yottaq > 
"RTN","SAMIFUL",81,0)
 ; $$setroot^%wdgraph; getVals^%yottaq > getVals^%wf.
"RTN","SAMIFUL",82,0)
 ;
"RTN","SAMIFUL",83,0)
 ; 2018-02-14 ven/toad 1.18.0-t04
"RTN","SAMIFUL",84,0)
 ;  SAMIFRM: replaceAll^%wf > findReplaceAll^%wf, ln > line, add
"RTN","SAMIFUL",85,0)
 ; @calls & @called-by tags, break up some long lines, scope variables
"RTN","SAMIFUL",86,0)
 ; in $$GETDIR & $$GETFN.
"RTN","SAMIFUL",87,0)
 ;
"RTN","SAMIFUL",88,0)
 ; 2018-03-01 ven/toad 1.18.0-t04
"RTN","SAMIFUL",89,0)
 ;  SAMIFRM: findReplaceAll^%wf > findReplace^%ts.
"RTN","SAMIFUL",90,0)
 ;
"RTN","SAMIFUL",91,0)
 ; 2018-03-07/08 ven/toad 1.18.0-t04
"RTN","SAMIFUL",92,0)
 ;  SAMIFRM: in SAMISUBS $$setroot^%wdgraph > $$setroot^%wf, fix bug
"RTN","SAMIFUL",93,0)
 ; when r/css w/see.
"RTN","SAMIFUL",94,0)
 ;
"RTN","SAMIFUL",95,0)
 ; 2018-03-18 ven/toad 1.18.0-t04
"RTN","SAMIFUL",96,0)
 ;  SAMIFRM2: restore calls to findReplaceAll^%ts.
"RTN","SAMIFUL",97,0)
 ;
"RTN","SAMIFUL",98,0)
 ; 2018-03-21/04-02 ven/gpl 1.18.0-t04
"RTN","SAMIFUL",99,0)
 ;  SAMIFRM2: insert max date, chg case review navigation to post,
"RTN","SAMIFUL",100,0)
 ; date order for CT Eval in case review; support incomplete forms
"RTN","SAMIFUL",101,0)
 ; display & processing; fix to not inject html in javascript for case
"RTN","SAMIFUL",102,0)
 ; review navigation; fix followup submit.
"RTN","SAMIFUL",103,0)
 ;
"RTN","SAMIFUL",104,0)
 ; 2018-04-24 ven/gpl 1.18.0-t04
"RTN","SAMIFUL",105,0)
 ;  SAMIFRM2: add Pet & Biopsy forms.
"RTN","SAMIFUL",106,0)
 ;
"RTN","SAMIFUL",107,0)
 ; 2018-05-18/21 ven/gpl 1.18.0-t04
"RTN","SAMIFUL",108,0)
 ;  SAMIFRM2: convert to new graph, simplify forms processing.
"RTN","SAMIFUL",109,0)
 ;
"RTN","SAMIFUL",110,0)
 ; 2018-05-22 par/dom 1.18.0-t04
"RTN","SAMIFUL",111,0)
 ;  SAMIFRM2: VAP-95 - remove code that replaced hard-coded date
"RTN","SAMIFUL",112,0)
 ; w/"today" from backend, no longer needed.
"RTN","SAMIFUL",113,0)
 ;
"RTN","SAMIFUL",114,0)
 ; 2018-05-24 ven/gpl 1.18.0-t04
"RTN","SAMIFUL",115,0)
 ;  SAMIFRM2: changes for submit processing on forms.
"RTN","SAMIFUL",116,0)
 ;
"RTN","SAMIFUL",117,0)
 ; 2018-05-25 par/dom 1.18.0-t04
"RTN","SAMIFUL",118,0)
 ;  SAMIFRM2: merge pull request 3 fr/OSEHRA/VAP-95-Remove-Today-Text-
"RTN","SAMIFUL",119,0)
 ; Replacement2. VAP-95 remove today text replacement.
"RTN","SAMIFUL",120,0)
 ;
"RTN","SAMIFUL",121,0)
 ; 2018-05-25 ven/gpl 1.18.0-t04
"RTN","SAMIFUL",122,0)
 ;  SAMIFRM2: add STUDYID for txt replace; more changes for STUDYID
"RTN","SAMIFUL",123,0)
 ; substitution.
"RTN","SAMIFUL",124,0)
 ;
"RTN","SAMIFUL",125,0)
 ; 2018-07-11 ven/gpl 1.18.0-t04
"RTN","SAMIFUL",126,0)
 ;  SAMIFRM2: add FROZEN variable based on samistatus=compete.
"RTN","SAMIFUL",127,0)
 ;
"RTN","SAMIFUL",128,0)
 ; 2018-08-19 ven/gpl 1.18.0-t04
"RTN","SAMIFUL",129,0)
 ;  SAMIFRM2: use ssn instead of last5 where available; revise ssn
"RTN","SAMIFUL",130,0)
 ; formatting.
"RTN","SAMIFUL",131,0)
 ;
"RTN","SAMIFUL",132,0)
 ; 2018-09-30 ven/gpl 1.18.0-t04
"RTN","SAMIFUL",133,0)
 ;  SAMIFRM2: header & prefill of intake.
"RTN","SAMIFUL",134,0)
 ;
"RTN","SAMIFUL",135,0)
 ; 2018-10-15 ven/gpl 1.18.0-t04
"RTN","SAMIFUL",136,0)
 ;  SAMIFRM2: initial user reports: enrollment.
"RTN","SAMIFUL",137,0)
 ;
"RTN","SAMIFUL",138,0)
 ; 2018-10-31 ven/gpl 1.18.0-t04
"RTN","SAMIFUL",139,0)
 ;  SAMIFRM2: new input form features, report menu fix.
"RTN","SAMIFUL",140,0)
 ;
"RTN","SAMIFUL",141,0)
 ; 2018-11-13 ven/gpl 1.18.0-t04
"RTN","SAMIFUL",142,0)
 ;  SAMIFRM2: SAMIHOM2 > SAMIHOM3.
"RTN","SAMIFUL",143,0)
 ;
"RTN","SAMIFUL",144,0)
 ; 2018-11-14 ven/gpl 1.18.0-t04
"RTN","SAMIFUL",145,0)
 ;  SAMIFRM2: fix graph store forms.
"RTN","SAMIFUL",146,0)
 ;
"RTN","SAMIFUL",147,0)
 ; 2018-11-29 ven/lgc 1.18.0-t04
"RTN","SAMIFUL",148,0)
 ;  SAMIFRM2: ongoing unit-test work.
"RTN","SAMIFUL",149,0)
 ;
"RTN","SAMIFUL",150,0)
 ; 2018-12-11/12 ven/toad 1.18.0-t04
"RTN","SAMIFUL",151,0)
 ;  SAMIFRM2: update chg log; in SAMISUB2 r/last findReplace^%ts w/a
"RTN","SAMIFUL",152,0)
 ; flag & r/w/findReplaceAll^%ts; passim spell out language elements,
"RTN","SAMIFUL",153,0)
 ; update tags called-by, calls, tests; namespace call-by-ref & call-
"RTN","SAMIFUL",154,0)
 ; by-name actuals.
"RTN","SAMIFUL",155,0)
 ;
"RTN","SAMIFUL",156,0)
 ; 2019-01-02/17 ven/toad 1.18.0-t04
"RTN","SAMIFUL",157,0)
 ;  SAMIFRM2: update chg log; in INIT1FRM id > form; doc signatures,
"RTN","SAMIFUL",158,0)
 ; web services, unit tests, dmis, ppis, input, output, thruput.
"RTN","SAMIFUL",159,0)
 ;  SAMIFUL: create from SAMIFRM2 as primary development log.
"RTN","SAMIFUL",160,0)
 ;  SAMIFLD: create from SAMIFRM2 w/SAMISUB2,GETHDR,GETLAST5,FIXSRC,
"RTN","SAMIFUL",161,0)
 ; FIXHREF,GETNAME,GETSSN; SAMISUB2 > LOAD, reroute calls, namespace
"RTN","SAMIFUL",162,0)
 ; filter > SAMIFILTER, %j > SAMILNUM, zhtml > SAMIHTML, vals >
"RTN","SAMIFUL",163,0)
 ; SAMIVALS (& add to params), key > form; convert to ppi-code (no
"RTN","SAMIFUL",164,0)
 ; params); minor edits.
"RTN","SAMIFUL",165,0)
 ;  SAMIFORM: create from SAMIFRM2 w/all ppi, dmi, & wsi entry points,
"RTN","SAMIFUL",166,0)
 ; no code, goto code in other routines.
"RTN","SAMIFUL",167,0)
 ;  SAMIFWS: create from SAMIFRM2 w/WSSBFORM,WSSIFORM,WSCEFORM;
"RTN","SAMIFUL",168,0)
 ; convert to ppi-code (no params); minor edits.
"RTN","SAMIFUL",169,0)
 ;  SAMIFDM: create from SAMIFRM2, INITFRMS > INIT, INIT1FRM > INIT1,
"RTN","SAMIFUL",170,0)
 ; REGFORMS > REGISTER, LOADDATA > IMPORT,PRSFLNM,GETDIR,GETFN;
"RTN","SAMIFUL",171,0)
 ; convert to ppi-code (no params); annotate & minor edits; move unit-
"RTN","SAMIFUL",172,0)
 ; test switch to cover more code.
"RTN","SAMIFUL",173,0)
 ;  related changes:
"RTN","SAMIFUL",174,0)
 ;  SAMICAS2,SAMICASE,SAMIFLD,SAMINOTI,SAMIUR,SAMIUR1,SAMIUTF,%tsfwr,
"RTN","SAMIFUL",175,0)
 ; %tsfwra,%wfhform: passim SAMIFRM2 > SAMIFORM.
"RTN","SAMIFUL",176,0)
 ;  SAMIUTST: SAMIFRM2 > SAMIFORM, add SAMIFLD,SAMIFDM,SAMIFWS.
"RTN","SAMIFUL",177,0)
 ;
"RTN","SAMIFUL",178,0)
 ; 2019-03-26 ven/lgc 1.18.0-t04
"RTN","SAMIFUL",179,0)
 ;  SAMIFLD: Add changlog code to end of LOAD^SAMIFLD code to account
"RTN","SAMIFUL",180,0)
 ; for new changelog functionality.
"RTN","SAMIFUL",181,0)
 ;
"RTN","SAMIFUL",182,0)
 ; 2019-03-27 ven/lgc 1.18.0-t04
"RTN","SAMIFUL",183,0)
 ;  SAMIFWS: Comment out lines 106, 164, 222 in SAMIFWS;
"RTN","SAMIFUL",184,0)
 ; GETITEMS^SAMICAS2 does not have formal list, may have been part of
"RTN","SAMIFUL",185,0)
 ; temporary debug code.
"RTN","SAMIFUL",186,0)
 ; 106;new items do GETITEMS^SAMICAS2("items",sid)
"RTN","SAMIFUL",187,0)
 ; 164;new items do GETITEMS^SAMICAS2("items",sid)
"RTN","SAMIFUL",188,0)
 ; 222;new items do GETITEMS^SAMICAS2("items",sid)
"RTN","SAMIFUL",189,0)
 ;
"RTN","SAMIFUL",190,0)
 ; 2019-03-28 ven/lgc 1.18.0-t04
"RTN","SAMIFUL",191,0)
 ; SAMIFDM: in IMPORT account for unit test where we do not wish to
"RTN","SAMIFUL",192,0)
 ; prompt user for directory; also modified directory for json files
"RTN","SAMIFUL",193,0)
 ; in repo.
"RTN","SAMIFUL",194,0)
 ;
"RTN","SAMIFUL",195,0)
 ; 2019-03-29 ven/lgc 1.18*0-t04
"RTN","SAMIFUL",196,0)
 ;  SAMIFLD: in LOAD include George's new variables for intake notes.
"RTN","SAMIFUL",197,0)
 ;
"RTN","SAMIFUL",198,0)
 ; 2019-04-16 ven/lgc 1.18.0-t04 e54b76d1
"RTN","SAMIFUL",199,0)
 ;  SAMIFDM,SAMIFLD,SAMIFORM,SAMIFWS: SAMIFRM2 > SAMIFORM.
"RTN","SAMIFUL",200,0)
 ;
"RTN","SAMIFUL",201,0)
 ; 2019-04-16 ven/lgc 1.18.0-t04 e54b76d1
"RTN","SAMIFUL",202,0)
 ;  SAMINOT1: SAMIFRM2 > SAMIFORM.
"RTN","SAMIFUL",203,0)
 ;
"RTN","SAMIFUL",204,0)
 ; 2019-04-18 ven/gpl 1.18.0-t04 2b6f0d63
"RTN","SAMIFUL",205,0)
 ;  SAMIFLD: fix missing patient name.
"RTN","SAMIFUL",206,0)
 ;
"RTN","SAMIFUL",207,0)
 ; 2019-04-22 ven/lgc 1.18.0-t04 e7afbfa1
"RTN","SAMIFUL",208,0)
 ;  SAMIFWS: removal of SAMIFRM2 reference.
"RTN","SAMIFUL",209,0)
 ;
"RTN","SAMIFUL",210,0)
 ; 2019-04-23 ven/lgc 1.18.0-t04 529e8f2f,89bffd3b
"RTN","SAMIFUL",211,0)
 ;  SAMIFDM: comment out zwrite commands.
"RTN","SAMIFUL",212,0)
 ;  SAMIFORM: SAMISUB2 > LOAD.
"RTN","SAMIFUL",213,0)
 ;
"RTN","SAMIFUL",214,0)
 ; 2019-05-08 ven/lgc 1.18.0-t04 33dfa8c2
"RTN","SAMIFUL",215,0)
 ;  SAMIFDM: replace zsystem command with MASH call.
"RTN","SAMIFUL",216,0)
 ;
"RTN","SAMIFUL",217,0)
 ; 2019-06-10/19 ven/arc 1.18.0-t04 5d7a987d,c69b6787
"RTN","SAMIFUL",218,0)
 ;  SAMIFDM: chg explicit paths, unify paths to unit test json data.
"RTN","SAMIFUL",219,0)
 ;
"RTN","SAMIFUL",220,0)
 ; 2019-06-28/07-08 ven/lgc 1.18.0-t04 703c3050
"RTN","SAMIFUL",221,0)
 ;  SAMIFLD: fix patient age calculations, calculate patient age
"RTN","SAMIFUL",222,0)
 ; w/MASH age^%th.
"RTN","SAMIFUL",223,0)
 ;
"RTN","SAMIFUL",224,0)
 ; 2019-08-01 ven/arc 1.18.0-t04 d710f27d
"RTN","SAMIFUL",225,0)
 ;  SAMIFLD,SAMIFORM: pull displayed facility code from vista
"RTN","SAMIFUL",226,0)
 ; parameter.
"RTN","SAMIFUL",227,0)
 ;
"RTN","SAMIFUL",228,0)
 ; 2019-08-03 ven/gpl 1.18.0-t04 bea65f7b,ffc94f65
"RTN","SAMIFUL",229,0)
 ;  SAMIFLD: fix bugs in Have You Ever Smoked processing in changelog
"RTN","SAMIFUL",230,0)
 ; & intake note, fix smoking status on enrollment report, fix change
"RTN","SAMIFUL",231,0)
 ; log display.
"RTN","SAMIFUL",232,0)
 ;
"RTN","SAMIFUL",233,0)
 ; 2019-08-05 ven/gpl 1.18.0-t04 4ee0d3e6
"RTN","SAMIFUL",234,0)
 ;  SAMIFLD: add GETPRFX to avoid colision with VAP-435.
"RTN","SAMIFUL",235,0)
 ;
"RTN","SAMIFUL",236,0)
 ; 2019-08-14 ven/gpl 1.18.0-t04 0aa37766,4e6f4fdf,08d45d99
"RTN","SAMIFUL",237,0)
 ;  SAMIFLD: resolve conflict over semicolon in comment, merge pull
"RTN","SAMIFUL",238,0)
 ; request #70 from OSEHRA/VAP-426-eversmoked, merge with 417.
"RTN","SAMIFUL",239,0)
 ;
"RTN","SAMIFUL",240,0)
 ; 2019-09-26 ven/gpl 1.18.0-t04 92b12324 VAP-420
"RTN","SAMIFUL",241,0)
 ;  SAMIFLD: add smoking history to intake/followup forms (#75).
"RTN","SAMIFUL",242,0)
 ;
"RTN","SAMIFUL",243,0)
 ; 2019-10-22 ven/lgc 1.18.0-t04 613e8ff4
"RTN","SAMIFUL",244,0)
 ;  SAMIFLD: update unit test routines for dfn 1.
"RTN","SAMIFUL",245,0)
 ;
"RTN","SAMIFUL",246,0)
 ; 2019-11-22 par/dom 1.18.0 b2cc389d VAP-458
"RTN","SAMIFUL",247,0)
 ;  SAMIFLD: add new manual registration page.
"RTN","SAMIFUL",248,0)
 ;
"RTN","SAMIFUL",249,0)
 ; 2020-01-21 ven/arc 1.18.0 a4c143be
"RTN","SAMIFUL",250,0)
 ;  SAMIFLD: patient matching additions.
"RTN","SAMIFUL",251,0)
 ;
"RTN","SAMIFUL",252,0)
 ; 2020-04-07/11 ven/gpl 1.18.0.5-i5 36607664,c8f4cf30,2f2c29c1
"RTN","SAMIFUL",253,0)
 ;  SAMIFLD,SAMIFORM,SAMIFWS: multi-tenancy.
"RTN","SAMIFUL",254,0)
 ;
"RTN","SAMIFUL",255,0)
 ; 2021-03-16 ven/gpl 1.18.0.10-i10 002071de
"RTN","SAMIFUL",256,0)
 ;  SAMIFLD: dob age calculation fix from hl7 dob format.
"RTN","SAMIFUL",257,0)
 ;
"RTN","SAMIFUL",258,0)
 ; 2021-03-21 ven/toad 1.18.0.10-i10
"RTN","SAMIFUL",259,0)
 ;  SAMIFLD: bump date & version, lt refactor.
"RTN","SAMIFUL",260,0)
 ;
"RTN","SAMIFUL",261,0)
 ;
"RTN","SAMIFUL",262,0)
 ;
"RTN","SAMIFUL",263,0)
 ;@contents
"RTN","SAMIFUL",264,0)
 ; SAMIFORM: form library
"RTN","SAMIFUL",265,0)
 ; SAMIFDM: form dmi code
"RTN","SAMIFUL",266,0)
 ; SAMIFLD: form load
"RTN","SAMIFUL",267,0)
 ; SAMIFWS: form web-service code
"RTN","SAMIFUL",268,0)
 ; SAMIFUL: form log
"RTN","SAMIFUL",269,0)
 ; SAMIUTF2: form unit tests
"RTN","SAMIFUL",270,0)
 ;
"RTN","SAMIFUL",271,0)
 ;
"RTN","SAMIFUL",272,0)
 ;
"RTN","SAMIFUL",273,0)
EOR ; end of routine SAMIFUL
"RTN","SAMIFWS")
0^31^B13804779
"RTN","SAMIFWS",1,0)
SAMIFWS ;ven/gpl - elcap: form debugging web services ; 4/22/19 12:25pm
"RTN","SAMIFWS",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIFWS",3,0)
 ;
"RTN","SAMIFWS",4,0)
 ; Routine SAMIFWS contains debugging subroutines that implement web
"RTN","SAMIFWS",5,0)
 ; services not needed in production but useful when troubleshooting.
"RTN","SAMIFWS",6,0)
 ; These form-specific web services for accessing the intake, background,
"RTN","SAMIFWS",7,0)
 ; and ct evaluation forms have been replaced in production by web
"RTN","SAMIFWS",8,0)
 ; service POST vapals, which handles all forms and reports now in the
"RTN","SAMIFWS",9,0)
 ; production application.
"RTN","SAMIFWS",10,0)
 ;
"RTN","SAMIFWS",11,0)
 ; When debugging problems with the forms it can be very useful to call
"RTN","SAMIFWS",12,0)
 ; them directly, bypassing the rest of the POST vapals logic. At such
"RTN","SAMIFWS",13,0)
 ; times, just recreate the record in file Web Service URl Handler for
"RTN","SAMIFWS",14,0)
 ; the form you want to call directly, use that to debug the form, and
"RTN","SAMIFWS",15,0)
 ; then when the problem has been resolved delete the record again.
"RTN","SAMIFWS",16,0)
 ;
"RTN","SAMIFWS",17,0)
 ; SAMIFWS contains no public entry points (see SAMIFORM).
"RTN","SAMIFWS",18,0)
 ;
"RTN","SAMIFWS",19,0)
 quit  ; no entry from top
"RTN","SAMIFWS",20,0)
 ;
"RTN","SAMIFWS",21,0)
 ;
"RTN","SAMIFWS",22,0)
 ;
"RTN","SAMIFWS",23,0)
 ;@section 0 primary development
"RTN","SAMIFWS",24,0)
 ;
"RTN","SAMIFWS",25,0)
 ;
"RTN","SAMIFWS",26,0)
 ;
"RTN","SAMIFWS",27,0)
 ;@routine-credits
"RTN","SAMIFWS",28,0)
 ;@primary-dev: George P. Lilly (gpl)
"RTN","SAMIFWS",29,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIFWS",30,0)
 ;@primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIFWS",31,0)
 ; http://vistaexpertise.net
"RTN","SAMIFWS",32,0)
 ;@copyright: 2017/2019, gpl, all rights reserved
"RTN","SAMIFWS",33,0)
 ;@license: Apache 2.0
"RTN","SAMIFWS",34,0)
 ; https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIFWS",35,0)
 ;
"RTN","SAMIFWS",36,0)
 ;@last-updated: 2019-01-08T20:59Z
"RTN","SAMIFWS",37,0)
 ;@application: Screening Applications Management (SAM)
"RTN","SAMIFWS",38,0)
 ;@module: Screening Applications Management - VAPALS-ELCAP (SAMI)
"RTN","SAMIFWS",39,0)
 ;@version: 18.0T04 (fourth development version)
"RTN","SAMIFWS",40,0)
 ;@release-date: not yet released
"RTN","SAMIFWS",41,0)
 ;@patch-list: none yet
"RTN","SAMIFWS",42,0)
 ;
"RTN","SAMIFWS",43,0)
 ;@additional-dev: Frederick D. S. Marshall (toad)
"RTN","SAMIFWS",44,0)
 ; toad@vistaexpertise.net
"RTN","SAMIFWS",45,0)
 ;@additional-dev: Larry G. Carlson (lgc)
"RTN","SAMIFWS",46,0)
 ; lgc@vistaexpertise.net
"RTN","SAMIFWS",47,0)
 ;
"RTN","SAMIFWS",48,0)
 ;@module-credits [see SAMIFUL]
"RTN","SAMIFWS",49,0)
 ;
"RTN","SAMIFWS",50,0)
 ;@contents
"RTN","SAMIFWS",51,0)
 ; 
"RTN","SAMIFWS",52,0)
 ;
"RTN","SAMIFWS",53,0)
 ;@to-do
"RTN","SAMIFWS",54,0)
 ; add dmis to create & delete each form's debugging web service
"RTN","SAMIFWS",55,0)
 ;
"RTN","SAMIFWS",56,0)
 ;
"RTN","SAMIFWS",57,0)
 ;
"RTN","SAMIFWS",58,0)
 ;@section 1 code for web service interfaces
"RTN","SAMIFWS",59,0)
 ;
"RTN","SAMIFWS",60,0)
 ;
"RTN","SAMIFWS",61,0)
 ;
"RTN","SAMIFWS",62,0)
 ;@debug old wsi GET background
"RTN","SAMIFWS",63,0)
WSSBFORM ; background form access
"RTN","SAMIFWS",64,0)
 ;
"RTN","SAMIFWS",65,0)
 ;@signature
"RTN","SAMIFWS",66,0)
 ; do WSSBFORM^SAMIFORM(.SAMIRTN,.SAMIFILTER)
"RTN","SAMIFWS",67,0)
 ;@branches-from
"RTN","SAMIFWS",68,0)
 ; WSSBFORM^SAMIFORM
"RTN","SAMIFWS",69,0)
 ;@ppi-called-by: none [only when debugging]
"RTN","SAMIFWS",70,0)
 ;@called-by: none
"RTN","SAMIFWS",71,0)
 ;@calls
"RTN","SAMIFWS",72,0)
 ; $$GENSTDID^SAMIHOM3
"RTN","SAMIFWS",73,0)
 ; GETITEMS^SAMICAS2
"RTN","SAMIFWS",74,0)
 ; wsGetForm^%wf
"RTN","SAMIFWS",75,0)
 ;@thruput
"RTN","SAMIFWS",76,0)
 ;.SAMIRTN = name of root containing returned html (the prepared form)
"RTN","SAMIFWS",77,0)
 ;.SAMIFILTER = work-parameters array
"RTN","SAMIFWS",78,0)
 ; SAMIFILTER("debug") = 1 to debug some fields, 2 to debug more fields
"RTN","SAMIFWS",79,0)
 ; SAMIFILTER("errormessagestyle") = 2 (default) = use current error msg style
"RTN","SAMIFWS",80,0)
 ; SAMIFILTER("form") = form id (e.g., "vapals:sbform")
"RTN","SAMIFWS",81,0)
 ; SAMIFILTER("key") = graph key for saved form (e.g., "sbform-2019-07-01")
"RTN","SAMIFWS",82,0)
 ; SAMIFILTER("studyid") = patient study id (e.g., "XXX00045")
"RTN","SAMIFWS",83,0)
 ; SAMIFILTER("fvalue") = deprecated
"RTN","SAMIFWS",84,0)
 ;@tests
"RTN","SAMIFWS",85,0)
 ; UTWSSBF^SAMIUTF: background form access
"RTN","SAMIFWS",86,0)
 ;
"RTN","SAMIFWS",87,0)
 ; This was the old GET background web service, before ws POST vapals
"RTN","SAMIFWS",88,0)
 ; took over all form get and post functions. It is kept as a debugging
"RTN","SAMIFWS",89,0)
 ; tool.
"RTN","SAMIFWS",90,0)
 ;
"RTN","SAMIFWS",91,0)
 ; To recreate this web service for debugging, edit file Web Service URL
"RTN","SAMIFWS",92,0)
 ; Handler (17.6001) to create a new record with the following field
"RTN","SAMIFWS",93,0)
 ; values:
"RTN","SAMIFWS",94,0)
 ;
"RTN","SAMIFWS",95,0)
 ; field HTTP Verb (.01): GET
"RTN","SAMIFWS",96,0)
 ; field URI (1): background
"RTN","SAMIFWS",97,0)
 ; field Execution Endpoint (2): WSSBFORM^SAMIFORM
"RTN","SAMIFWS",98,0)
 ;
"RTN","SAMIFWS",99,0)
 ; When finished debugging, delete the record from the file.
"RTN","SAMIFWS",100,0)
 ;
"RTN","SAMIFWS",101,0)
 new sid set sid=$get(SAMIFILTER("studyid"))
"RTN","SAMIFWS",102,0)
 set:sid="" sid=$get(SAMIFILTER("sid"))
"RTN","SAMIFWS",103,0)
 set:sid>0 sid=$$GENSTDID^SAMIHOM3(sid)
"RTN","SAMIFWS",104,0)
 ; if sid="" set sid="XXX0001"
"RTN","SAMIFWS",105,0)
 ;
"RTN","SAMIFWS",106,0)
 ;new items do GETITEMS^SAMICAS2("items",sid)
"RTN","SAMIFWS",107,0)
 ; write !,"sid=",sid,!
"RTN","SAMIFWS",108,0)
 ; zwrite items
"RTN","SAMIFWS",109,0)
 ; break
"RTN","SAMIFWS",110,0)
 ;
"RTN","SAMIFWS",111,0)
 new key set key=$order(items("sbfor"))
"RTN","SAMIFWS",112,0)
 set SAMIFILTER("key")=key
"RTN","SAMIFWS",113,0)
 set SAMIFILTER("form")="vapals:sbform"
"RTN","SAMIFWS",114,0)
 do wsGetForm^%wf(.SAMIRTN,.SAMIFILTER)
"RTN","SAMIFWS",115,0)
 ;
"RTN","SAMIFWS",116,0)
 quit  ; end of WSSBFORM^SAMIFORM
"RTN","SAMIFWS",117,0)
 ;
"RTN","SAMIFWS",118,0)
 ;
"RTN","SAMIFWS",119,0)
 ;
"RTN","SAMIFWS",120,0)
 ;@debug old wsi GET intake
"RTN","SAMIFWS",121,0)
WSSIFORM ; intake form access
"RTN","SAMIFWS",122,0)
 ;
"RTN","SAMIFWS",123,0)
 ;@signature
"RTN","SAMIFWS",124,0)
 ; do WSSIFORM^SAMIFORM(.SAMIRTN,.SAMIFILTER)
"RTN","SAMIFWS",125,0)
 ;@branches-from
"RTN","SAMIFWS",126,0)
 ; WSSIFORM^SAMIFORM
"RTN","SAMIFWS",127,0)
 ;@ppi-called-by: none [only when debugging]
"RTN","SAMIFWS",128,0)
 ;@called-by: none
"RTN","SAMIFWS",129,0)
 ;@calls
"RTN","SAMIFWS",130,0)
 ; $$GENSTDID^SAMIHOM3
"RTN","SAMIFWS",131,0)
 ; GETITEMS^SAMICAS2
"RTN","SAMIFWS",132,0)
 ; wsGetForm^%wf
"RTN","SAMIFWS",133,0)
 ;@thruput
"RTN","SAMIFWS",134,0)
 ;.SAMIRTN = name of root containing returned html (the prepared form)
"RTN","SAMIFWS",135,0)
 ;.SAMIFILTER = work-parameters array
"RTN","SAMIFWS",136,0)
 ; SAMIFILTER("debug") = 1 to debug some fields, 2 to debug more fields
"RTN","SAMIFWS",137,0)
 ; SAMIFILTER("errormessagestyle") = 2 (default) = use current error msg style
"RTN","SAMIFWS",138,0)
 ; SAMIFILTER("form") = form id (e.g., "vapals:siform")
"RTN","SAMIFWS",139,0)
 ; SAMIFILTER("key") = graph key for saved form (e.g., "siform-2019-07-01")
"RTN","SAMIFWS",140,0)
 ; SAMIFILTER("studyid") = patient study id (e.g., "XXX00045")
"RTN","SAMIFWS",141,0)
 ; SAMIFILTER("fvalue") = deprecated
"RTN","SAMIFWS",142,0)
 ;@tests
"RTN","SAMIFWS",143,0)
 ; UTWSIFM^SAMIUTF: intake form access
"RTN","SAMIFWS",144,0)
 ;
"RTN","SAMIFWS",145,0)
 ; This was the old GET intake web service, before ws POST vapals
"RTN","SAMIFWS",146,0)
 ; took over all form get and post functions. It is kept as a debugging
"RTN","SAMIFWS",147,0)
 ; tool.
"RTN","SAMIFWS",148,0)
 ;
"RTN","SAMIFWS",149,0)
 ; To recreate this web service for debugging, edit file Web Service URL
"RTN","SAMIFWS",150,0)
 ; Handler (17.6001) to create a new record with the following field
"RTN","SAMIFWS",151,0)
 ; values:
"RTN","SAMIFWS",152,0)
 ;
"RTN","SAMIFWS",153,0)
 ; field HTTP Verb (.01): GET
"RTN","SAMIFWS",154,0)
 ; field URI (1): intake
"RTN","SAMIFWS",155,0)
 ; field Execution Endpoint (2): WSSIFORM^SAMIFORM
"RTN","SAMIFWS",156,0)
 ;
"RTN","SAMIFWS",157,0)
 ; When finished debugging, delete the record from the file.
"RTN","SAMIFWS",158,0)
 ;
"RTN","SAMIFWS",159,0)
 new sid set sid=$get(SAMIFILTER("studyid"))
"RTN","SAMIFWS",160,0)
 set:sid="" sid=$get(SAMIFILTER("sid"))
"RTN","SAMIFWS",161,0)
 set:sid>0 sid=$$GENSTDID^SAMIHOM3(sid,.SAMIFILTER)
"RTN","SAMIFWS",162,0)
 ; if sid="" set sid="XXX0001"
"RTN","SAMIFWS",163,0)
 ;
"RTN","SAMIFWS",164,0)
 ;new items do GETITEMS^SAMICAS2("items",sid)
"RTN","SAMIFWS",165,0)
 ; write !,"sid=",sid,!
"RTN","SAMIFWS",166,0)
 ; zwrite items
"RTN","SAMIFWS",167,0)
 ; break
"RTN","SAMIFWS",168,0)
 ;
"RTN","SAMIFWS",169,0)
 new key set key=$order(items("sifor"))
"RTN","SAMIFWS",170,0)
 set SAMIFILTER("key")=key
"RTN","SAMIFWS",171,0)
 set SAMIFILTER("form")="vapals:siform"
"RTN","SAMIFWS",172,0)
 do wsGetForm^%wf(.SAMIRTN,.SAMIFILTER)
"RTN","SAMIFWS",173,0)
 ;
"RTN","SAMIFWS",174,0)
 quit  ; end of WSSIFORM^SAMIFORM
"RTN","SAMIFWS",175,0)
 ;
"RTN","SAMIFWS",176,0)
 ;
"RTN","SAMIFWS",177,0)
 ;
"RTN","SAMIFWS",178,0)
 ;@debug old wsi GET ctevaluation
"RTN","SAMIFWS",179,0)
WSCEFORM ; ctevaluation form access
"RTN","SAMIFWS",180,0)
 ;
"RTN","SAMIFWS",181,0)
 ;@signature
"RTN","SAMIFWS",182,0)
 ; do WSCEFORM^SAMIFORM(.SAMIRTN,.SAMIFILTER)
"RTN","SAMIFWS",183,0)
 ;@branches-from
"RTN","SAMIFWS",184,0)
 ; WSCEFORM^SAMIFORM
"RTN","SAMIFWS",185,0)
 ;@ppi-called-by: none [only when debugging]
"RTN","SAMIFWS",186,0)
 ;@called-by: none
"RTN","SAMIFWS",187,0)
 ;@calls
"RTN","SAMIFWS",188,0)
 ; $$GENSTDID^SAMIHOM3
"RTN","SAMIFWS",189,0)
 ; GETITEMS^SAMICAS2
"RTN","SAMIFWS",190,0)
 ; wsGetForm^%wf
"RTN","SAMIFWS",191,0)
 ;@thruput
"RTN","SAMIFWS",192,0)
 ;.SAMIRTN = name of root containing returned html (the prepared form)
"RTN","SAMIFWS",193,0)
 ;.SAMIFILTER = work-parameters array
"RTN","SAMIFWS",194,0)
 ; SAMIFILTER("debug") = 1 to debug some fields, 2 to debug more fields
"RTN","SAMIFWS",195,0)
 ; SAMIFILTER("errormessagestyle") = 2 (default) = use current error msg style
"RTN","SAMIFWS",196,0)
 ; SAMIFILTER("form") = form id (e.g., "vapals:ceform")
"RTN","SAMIFWS",197,0)
 ; SAMIFILTER("key") = graph key for saved form (e.g., "ceform-2019-07-01")
"RTN","SAMIFWS",198,0)
 ; SAMIFILTER("studyid") = patient study id (e.g., "XXX00045")
"RTN","SAMIFWS",199,0)
 ; SAMIFILTER("fvalue") = deprecated
"RTN","SAMIFWS",200,0)
 ;@tests
"RTN","SAMIFWS",201,0)
 ; UTCEFRM^SAMIUTF: ctevaluation form access
"RTN","SAMIFWS",202,0)
 ;
"RTN","SAMIFWS",203,0)
 ; This was the old GET ctevaluation web service, before ws POST vapals
"RTN","SAMIFWS",204,0)
 ; took over all form get and post functions. It is kept as a debugging
"RTN","SAMIFWS",205,0)
 ; tool.
"RTN","SAMIFWS",206,0)
 ;
"RTN","SAMIFWS",207,0)
 ; To recreate this web service for debugging, edit file Web Service URL
"RTN","SAMIFWS",208,0)
 ; Handler (17.6001) to create a new record with the following field
"RTN","SAMIFWS",209,0)
 ; values:
"RTN","SAMIFWS",210,0)
 ;
"RTN","SAMIFWS",211,0)
 ; field HTTP Verb (.01): GET
"RTN","SAMIFWS",212,0)
 ; field URI (1): ctevaluation
"RTN","SAMIFWS",213,0)
 ; field Execution Endpoint (2): WSCEFORM^SAMIFORM
"RTN","SAMIFWS",214,0)
 ;
"RTN","SAMIFWS",215,0)
 ; When finished debugging, delete the record from the file.
"RTN","SAMIFWS",216,0)
 ;
"RTN","SAMIFWS",217,0)
 new sid set sid=$get(SAMIFILTER("studyid"))
"RTN","SAMIFWS",218,0)
 set:sid="" sid=$get(SAMIFILTER("sid"))
"RTN","SAMIFWS",219,0)
 set:sid>0 sid=$$GENSTDID^SAMIHOM3(sid)
"RTN","SAMIFWS",220,0)
 ; if sid="" set sid="XXX0001"
"RTN","SAMIFWS",221,0)
 ;
"RTN","SAMIFWS",222,0)
 ;new items do GETITEMS^SAMICAS2("items",sid)
"RTN","SAMIFWS",223,0)
 ; write !,"sid=",sid,!
"RTN","SAMIFWS",224,0)
 ; zwrite items
"RTN","SAMIFWS",225,0)
 ; break
"RTN","SAMIFWS",226,0)
 ;
"RTN","SAMIFWS",227,0)
 new key set key=$order(items("cefor"))
"RTN","SAMIFWS",228,0)
 set SAMIFILTER("key")=key
"RTN","SAMIFWS",229,0)
 set SAMIFILTER("form")="vapals:ceform"
"RTN","SAMIFWS",230,0)
 do wsGetForm^%wf(.SAMIRTN,.SAMIFILTER)
"RTN","SAMIFWS",231,0)
 ;
"RTN","SAMIFWS",232,0)
 quit  ; end of WSCEFORM^SAMIFORM
"RTN","SAMIFWS",233,0)
 ;
"RTN","SAMIFWS",234,0)
 ;
"RTN","SAMIFWS",235,0)
 ;
"RTN","SAMIFWS",236,0)
EOR ; end of routine SAMIFWS
"RTN","SAMIHL7")
0^32^B234597214
"RTN","SAMIHL7",1,0)
SAMIHL7 ;ven/lgc&arc - HL7 utilities ;2021-06-04T12:50Z
"RTN","SAMIHL7",2,0)
 ;;18.0;SAMI;**11**;2020-01;Build 1
"RTN","SAMIHL7",3,0)
 ;;1.18.0.11+i11
"RTN","SAMIHL7",4,0)
 ;
"RTN","SAMIHL7",5,0)
 ; SAMIHL7 contains subroutines for manipulating VAPALS-ELCAP HL7
"RTN","SAMIHL7",6,0)
 ; messages.
"RTN","SAMIHL7",7,0)
 ;
"RTN","SAMIHL7",8,0)
 quit  ; no entry from top
"RTN","SAMIHL7",9,0)
 ;
"RTN","SAMIHL7",10,0)
 ;
"RTN","SAMIHL7",11,0)
 ;
"RTN","SAMIHL7",12,0)
 ;@section 0 primary development
"RTN","SAMIHL7",13,0)
 ;
"RTN","SAMIHL7",14,0)
 ;
"RTN","SAMIHL7",15,0)
 ;
"RTN","SAMIHL7",16,0)
 ;@routine-credits
"RTN","SAMIHL7",17,0)
 ;@primary-dev Larry G. Carlson (lgc)
"RTN","SAMIHL7",18,0)
 ; lgc@vistaexpertise.net
"RTN","SAMIHL7",19,0)
 ;@primary-dev-org Vista Expertise Network (ven)
"RTN","SAMIHL7",20,0)
 ; http://vistaexpertise.net
"RTN","SAMIHL7",21,0)
 ;@copyright 2017/2021, lgc, all rights reserved
"RTN","SAMIHL7",22,0)
 ;@license see routine SAMIUL
"RTN","SAMIHL7",23,0)
 ;
"RTN","SAMIHL7",24,0)
 ;@last-updated 2021-06-04T12:50Z
"RTN","SAMIHL7",25,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMIHL7",26,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMIHL7",27,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMIHL7",28,0)
 ;@version 1.18.0.11+i11
"RTN","SAMIHL7",29,0)
 ;@release-date 2020-01
"RTN","SAMIHL7",30,0)
 ;@patch-list **11**
"RTN","SAMIHL7",31,0)
 ;
"RTN","SAMIHL7",32,0)
 ;@additional-dev Alexis R. Carlson (arc)
"RTN","SAMIHL7",33,0)
 ; arc@vistaexpertise.net
"RTN","SAMIHL7",34,0)
 ;@additional-dev George P. Lilly (gpl)
"RTN","SAMIHL7",35,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIHL7",36,0)
 ;@additional-dev Frederick D. S. Marshall (toad)
"RTN","SAMIHL7",37,0)
 ; toad@vistaexpertise.net
"RTN","SAMIHL7",38,0)
 ;@additional-dev Kenneth McGlothlen (mcglk)
"RTN","SAMIHL7",39,0)
 ; mcglk@vistaexpertise.net
"RTN","SAMIHL7",40,0)
 ;
"RTN","SAMIHL7",41,0)
 ;@module-credits
"RTN","SAMIHL7",42,0)
 ;@project VA Partnership to Increase Access to Lung Screening
"RTN","SAMIHL7",43,0)
 ; (VA-PALS)
"RTN","SAMIHL7",44,0)
 ; http://va-pals.org/
"RTN","SAMIHL7",45,0)
 ;@funding 2017/2021, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMIHL7",46,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMIHL7",47,0)
 ;@partner-org Veterans Affairs Office of Rural health
"RTN","SAMIHL7",48,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMIHL7",49,0)
 ;@partner-org International Early Lung Cancer Action Program (I-ELCAP)
"RTN","SAMIHL7",50,0)
 ; http://ielcap.com/
"RTN","SAMIHL7",51,0)
 ;@partner-org Paraxial Technologies (par)
"RTN","SAMIHL7",52,0)
 ; http://paraxialtech.com/
"RTN","SAMIHL7",53,0)
 ;@partner-org Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMIHL7",54,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMIHL7",55,0)
 ;
"RTN","SAMIHL7",56,0)
 ;@module-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMIHL7",57,0)
 ;
"RTN","SAMIHL7",58,0)
 ; 2019-10-03/28 ven/lgc 1.18.0 d01fd10,ff6cea0,3670fb3,613e8ff
"RTN","SAMIHL7",59,0)
 ; ,82979cc
"RTN","SAMIHL7",60,0)
 ;  SAMIHL7: HL7 routines to populate & update patient-lookup graph,
"RTN","SAMIHL7",61,0)
 ; reorganize HL7 routines & work on unit tests, change how gender is
"RTN","SAMIHL7",62,0)
 ; handled, update unit test routines for dfn 1, further updates to
"RTN","SAMIHL7",63,0)
 ; SAMI unit tests.
"RTN","SAMIHL7",64,0)
 ;
"RTN","SAMIHL7",65,0)
 ; 2020-01-15 ven/lgc 1.18.0 0a2af96
"RTN","SAMIHL7",66,0)
 ;  SAMIHL7: bulk commit due to switch to cache, major overhaul:
"RTN","SAMIHL7",67,0)
 ; update capture of array structure; in UPDTPTL add UPDTPTL1,MATCHLOG
"RTN","SAMIHL7",68,0)
 ; & update indices; r/root w/rootpl; annotate; cut DELPTL & 2 lines,
"RTN","SAMIHL7",69,0)
 ; leaving rest of subroutine orphaned.
"RTN","SAMIHL7",70,0)
 ;
"RTN","SAMIHL7",71,0)
 ; 2020-01-16 ven/lgc 1.18.0 [no repo commit]
"RTN","SAMIHL7",72,0)
 ;  SAMIHL7: in MATCHLOG unbreak line MATCHLOG+13.
"RTN","SAMIHL7",73,0)
 ;
"RTN","SAMIHL7",74,0)
 ; 2020-02-04/12 ven/lgc 1.18.0.11+i11 ee53d8a
"RTN","SAMIHL7",75,0)
 ;  SAMIORM,SAMIORR ORM HL7 routines.
"RTN","SAMIHL7",76,0)
 ;
"RTN","SAMIHL7",77,0)
 ; 2020-07-24/28 ven/lgc 1.18.0.8/11+i8/i11 c08b051
"RTN","SAMIHL7",78,0)
 ;  SAMIHL7,SAMIORM,SAMIORU: update for ORU messaging.
"RTN","SAMIHL7",79,0)
 ;  SAMIHL7: in top update incoming fields array example; passim
"RTN","SAMIHL7",80,0)
 ; checkpoint into ^KBAP; in UPDTPTL1 add block to if new patient get
"RTN","SAMIHL7",81,0)
 ; next ptien to use & set dfn; in MATCHLOG r/MATCHLOG w/HL7MATCHLOG,
"RTN","SAMIHL7",82,0)
 ; if new patient load ORM msg data later, fix undef error, as didn't
"RTN","SAMIHL7",83,0)
 ; get dfn from va vista server (only ssn) do not try to set remotedfn
"RTN","SAMIHL7",84,0)
 ; field, build saminame index, call CAPTORM to save all ORM flds in
"RTN","SAMIHL7",85,0)
 ; patient-lookup; add CAPTORM; in ACK clear & set HLA("HLA").
"RTN","SAMIHL7",86,0)
 ;  SAMIORM: passim annotate, checkpoint into ^KBAP; in BLDAR get
"RTN","SAMIHL7",87,0)
 ; inverse date, put HL7 nodes in samihl7; in DEBUG save msg id; add
"RTN","SAMIHL7",88,0)
 ; PMSG; in PARSEMSG call PV1,ORC; in PID r/dfn w/ssn, get name flds,
"RTN","SAMIHL7",89,0)
 ; get last5; add tag ORMADDR; add PV1,ORC to handle those segments;
"RTN","SAMIHL7",90,0)
 ; in OBR reorg fields array; add CAMELCAS; update TEST.
"RTN","SAMIHL7",91,0)
 ;  SAMIORU: new routine?
"RTN","SAMIHL7",92,0)
 ;
"RTN","SAMIHL7",93,0)
 ; 2020-08-17/09-04 ven/lgc 1.18.0.11+i11 f3d7b38
"RTN","SAMIHL7",94,0)
 ;  SAMIORU: update to remove gtm mod: extensive chgs passim, incl add
"RTN","SAMIHL7",95,0)
 ; TESTALL,TESTOBXC; TESTOBX > TESTOBXV; PID2 > PID1; in DFN pull data
"RTN","SAMIHL7",96,0)
 ; from entry in patient-lookup graph; in HL7VARS if msg id returned,
"RTN","SAMIHL7",97,0)
 ; preface it with 1^; in ORMVARS don't confuse ORM msg id w/ORU msg
"RTN","SAMIHL7",98,0)
 ; id; etc.
"RTN","SAMIHL7",99,0)
 ;
"RTN","SAMIHL7",100,0)
 ; 2021-02-03 ven/gpl 1.18.0.8+i8 54a0c2e
"RTN","SAMIHL7",101,0)
 ;  SAMIORU: in EN chg line length limit (climit) to 81.
"RTN","SAMIHL7",102,0)
 ;
"RTN","SAMIHL7",103,0)
 ; 2021-03-12/13 ven/lgc 1.18.0.8+i8 6093b45
"RTN","SAMIHL7",104,0)
 ;  SAMIORU: larry's latest version of hl7 message building to
"RTN","SAMIHL7",105,0)
 ; preserve note formatting: in TESTALL cut dead code, chg patient &
"RTN","SAMIHL7",106,0)
 ; form, call EN&SAMIORU as function; in EN add debug code, cut climit
"RTN","SAMIHL7",107,0)
 ; lines & cache filter; in DFN add tag FINDORM; in OBX cut climit
"RTN","SAMIHL7",108,0)
 ; lines & dead code & BLDTXT.
"RTN","SAMIHL7",109,0)
 ;
"RTN","SAMIHL7",110,0)
 ; 2021-04-14/20 ven/gpl 1.18.0.11+i11 3a5756a,d7182d7
"RTN","SAMIHL7",111,0)
 ;  SAMIHL7: fix for duplicate patients fr/HL7, fix for updating 
"RTN","SAMIHL7",112,0)
 ; patient-lookup graph on receipt of 2nd order: in UPDTPTL1 uppercase
"RTN","SAMIHL7",113,0)
 ; names; in MATCHLOG prevent undef error.
"RTN","SAMIHL7",114,0)
 ;
"RTN","SAMIHL7",115,0)
 ; 2021-05-11 ven/lgc 1.18.0.11+i11 [no repo commit]
"RTN","SAMIHL7",116,0)
 ;  SAMIORM: in UPDTPTL stop updating hl7 counter node, because it was
"RTN","SAMIHL7",117,0)
 ; updated earlier, just set hl7cnt; in OBR set fields("siteid").
"RTN","SAMIHL7",118,0)
 ;
"RTN","SAMIHL7",119,0)
 ; 2021-05-20/21 ven/mcglk&toad 1.18.0.11+i11 43a4557,70fc6ba,129e96b
"RTN","SAMIHL7",120,0)
 ;  SAMIHL7: passim build hdr comments & dev log, lt refactor, bump
"RTN","SAMIHL7",121,0)
 ; version.
"RTN","SAMIHL7",122,0)
 ;
"RTN","SAMIHL7",123,0)
 ; 2021-05-27 ven/lgc 1.18.0.11+i11 2093bf0,a51e714
"RTN","SAMIHL7",124,0)
 ;  SAMIHL7,SAMIORM: new fixes for saving ORM & HL7 in patient-lookup
"RTN","SAMIHL7",125,0)
 ;  SAMIHL7: in section 1 update sample array; in MATCHLOG
"RTN","SAMIHL7",126,0)
 ; r/fields(field)'="" w/'(field=""); in CAPTORM annotate, r/invdt
"RTN","SAMIHL7",127,0)
 ; algo w/hl7cnt algo to align array structures of SAMIHL7 & SAMIORM,
"RTN","SAMIHL7",128,0)
 ; to use counters for subscripts instead of inverse dates.
"RTN","SAMIHL7",129,0)
 ;  SAMIORM: in BLDARR, new hl7cnt, cut tag DEBUG, move inits of INFS,
"RTN","SAMIHL7",130,0)
 ; INCC up to where DEBUG tag was; in PMSG fix KBaP typo, annotate,
"RTN","SAMIHL7",131,0)
 ; refactor block, get msgid; in PID get suffix.
"RTN","SAMIHL7",132,0)
 ;
"RTN","SAMIHL7",133,0)
 ; 2021-06-01/04 ven/toad 1.18.0.11+i11
"RTN","SAMIHL7",134,0)
 ;  SAMIHL7: update log, add SAMIORM,ORR,ORU to log.
"RTN","SAMIHL7",135,0)
 ;  SAMIORM,ORR,ORU: annotate, document hl7 call structure, refactor,
"RTN","SAMIHL7",136,0)
 ; bump version & dates.
"RTN","SAMIHL7",137,0)
 ;
"RTN","SAMIHL7",138,0)
 ;
"RTN","SAMIHL7",139,0)
 ;
"RTN","SAMIHL7",140,0)
 ;@contents
"RTN","SAMIHL7",141,0)
 ; UPDTPTL-UPDTPTL1-MATCHLOG update patient-lookup w/patient-fields array
"RTN","SAMIHL7",142,0)
 ; CAPTORM save all ORM fields in patient-lookup
"RTN","SAMIHL7",143,0)
 ; KILLREF kill old field in patient-lookup root
"RTN","SAMIHL7",144,0)
 ; ACK force a com ACK
"RTN","SAMIHL7",145,0)
 ;
"RTN","SAMIHL7",146,0)
 ;
"RTN","SAMIHL7",147,0)
 ;
"RTN","SAMIHL7",148,0)
 ;@section 1 example incoming fields array
"RTN","SAMIHL7",149,0)
 ;
"RTN","SAMIHL7",150,0)
 ;
"RTN","SAMIHL7",151,0)
 ;
"RTN","SAMIHL7",152,0)
 ; fields("PID","segment")="PID|1||000002341||ZZTEST^MACHO^^^^^L||19271106000000|M|||7726 W ORCHID ST^^PHOENIX^AZ^85017||||||||000002341|"
"RTN","SAMIHL7",153,0)
 ; fields("PIV","segment")="PV1||O|PHX-PULM RN LSS PHONE|||||244088^GARCIA^DANIEL^P"
"RTN","SAMIHL7",154,0)
 ; fields("OBR","segment")="OBR||||PHO_LUNG^LUNG|"
"RTN","SAMIHL7",155,0)
 ; fields("ORC","segment")="ORC|NW|3200616135751|||NW||||20200616135751||||||20200616135751"
"RTN","SAMIHL7",156,0)
 ;
"RTN","SAMIHL7",157,0)
 ; fields("ORM",6789473.805153,"assignedlocation")="PHX-PULM RN LSS PHONE"
"RTN","SAMIHL7",158,0)
 ; fields("ORM",6789473.805153,"fulladdress")="7726 W ORCHID ST^^PHOENIX^AZ^85017"
"RTN","SAMIHL7",159,0)
 ; fields("ORM",6789473.805153,"msgid")="99000023ORM"
"RTN","SAMIHL7",160,0)
 ; fields("ORM",6789473.805153,"order")="PHO_LUNG"
"RTN","SAMIHL7",161,0)
 ; fields("ORM",6789473.805153,"order2")="LUNG"
"RTN","SAMIHL7",162,0)
 ; fields("ORM",6789473.805153,"ordercontrol")="NW"
"RTN","SAMIHL7",163,0)
 ; fields("ORM",6789473.805153,"ordereffectivedt")=20200616135751
"RTN","SAMIHL7",164,0)
 ; fields("ORM",6789473.805153,"ordernumber")=3200616135751
"RTN","SAMIHL7",165,0)
 ; fields("ORM",6789473.805153,"orderstatus")="NW"
"RTN","SAMIHL7",166,0)
 ; fields("ORM",6789473.805153,"patientclass")="O"
"RTN","SAMIHL7",167,0)
 ; fields("ORM",6789473.805153,"providerien")=244088
"RTN","SAMIHL7",168,0)
 ; fields("ORM",6789473.805153,"providernm")="GARCIA,DANIEL,P"
"RTN","SAMIHL7",169,0)
 ; fields("ORM",6789473.805153,"siteid")="PHO"
"RTN","SAMIHL7",170,0)
 ; fields("ORM",6789473.805153,"transactiondt")=20200616135751
"RTN","SAMIHL7",171,0)
 ;
"RTN","SAMIHL7",172,0)
 ; fields("address1")="7726 W ORCHID ST"
"RTN","SAMIHL7",173,0)
 ; fields("city")="PHOENIX"
"RTN","SAMIHL7",174,0)
 ; fields("icn")=""
"RTN","SAMIHL7",175,0)
 ; fields("last5")="Z2341"
"RTN","SAMIHL7",176,0)
 ; fields("phone")=""
"RTN","SAMIHL7",177,0)
 ; fields("saminame")="Zztest,Macho"
"RTN","SAMIHL7",178,0)
 ; fields("sbdob")=19271106000000
"RTN","SAMIHL7",179,0)
 ; fields("sex")="M"
"RTN","SAMIHL7",180,0)
 ; fields("sinamef")="Macho"
"RTN","SAMIHL7",181,0)
 ; fields("sinamel")="Zztest"
"RTN","SAMIHL7",182,0)
 ; fields("siteid")="PHO"
"RTN","SAMIHL7",183,0)
 ; fields("ssn")="000002341"
"RTN","SAMIHL7",184,0)
 ; fields("state")="AZ"
"RTN","SAMIHL7",185,0)
 ; fields("zip")=85017
"RTN","SAMIHL7",186,0)
 ;
"RTN","SAMIHL7",187,0)
 ;
"RTN","SAMIHL7",188,0)
 ;
"RTN","SAMIHL7",189,0)
 ;@section 2 ppis & subroutines
"RTN","SAMIHL7",190,0)
 ;
"RTN","SAMIHL7",191,0)
 ;
"RTN","SAMIHL7",192,0)
 ;
"RTN","SAMIHL7",193,0)
 ;@ppi UPDTPTL^SAMIHL7
"RTN","SAMIHL7",194,0)
UPDTPTL(fields) ; update patient-lookup w/patient-fields array
"RTN","SAMIHL7",195,0)
 ;
"RTN","SAMIHL7",196,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHL7",197,0)
 ;
"RTN","SAMIHL7",198,0)
 ;;ppi;procedure;???;silent;sac
"RTN","SAMIHL7",199,0)
 ;@falls-thru-to
"RTN","SAMIHL7",200,0)
 ; UPDTPTL1-MATCHLOG
"RTN","SAMIHL7",201,0)
 ;@called-by
"RTN","SAMIHL7",202,0)
 ; MSH^SAMIADT [< EN^SAMIADT < old HL7 app, no longer used]
"RTN","SAMIHL7",203,0)
 ; PID^SAMIADT [< EN^SAMIADT < old HL7 app, no longer used]
"RTN","SAMIHL7",204,0)
 ; EN^SAMIORM [prot PHX ENROLL ORM < hla INST-MCAR < HL7]
"RTN","SAMIHL7",205,0)
 ; EN^SAMIORM [PHX ENROLL ORM < PHX ENROLL ORM EVN < hla MCAR-INST]
"RTN","SAMIHL7",206,0)
 ; IMPRTPTS^SAMIPI [patient-lookup graph import & export utils]
"RTN","SAMIHL7",207,0)
 ; ACK^SAMITIU [< old HL7 app, no longer used]
"RTN","SAMIHL7",208,0)
 ; RECTIU^SAMITIU
"RTN","SAMIHL7",209,0)
 ; RECTIU^SAMIVHL [HL7 TIU processing for VAPALS, no longer used?]
"RTN","SAMIHL7",210,0)
 ;@calls none
"RTN","SAMIHL7",211,0)
 ;@input
"RTN","SAMIHL7",212,0)
 ; fields = array of patient data
"RTN","SAMIHL7",213,0)
 ;@output
"RTN","SAMIHL7",214,0)
 ; existing entry in patient-lookup graph updated
"RTN","SAMIHL7",215,0)
 ; or new patient entered
"RTN","SAMIHL7",216,0)
 ;
"RTN","SAMIHL7",217,0)
 ;
"RTN","SAMIHL7",218,0)
 ;@stanza 2 setup
"RTN","SAMIHL7",219,0)
 ;
"RTN","SAMIHL7",220,0)
 kill ^KBAP("SAMIHL7")
"RTN","SAMIHL7",221,0)
 set ^KBAP("SAMIHL7","UPDTPTL")=""
"RTN","SAMIHL7",222,0)
 ;
"RTN","SAMIHL7",223,0)
 ; bail if we didn't get a fields array
"RTN","SAMIHL7",224,0)
 quit:'$data(fields)
"RTN","SAMIHL7",225,0)
 ;
"RTN","SAMIHL7",226,0)
 ;
"RTN","SAMIHL7",227,0)
UPDTPTL1 ;
"RTN","SAMIHL7",228,0)
 ;
"RTN","SAMIHL7",229,0)
 ;@falls-thru-from
"RTN","SAMIHL7",230,0)
 ; UPDTPTL
"RTN","SAMIHL7",231,0)
 ;@falls-thru-to
"RTN","SAMIHL7",232,0)
 ; MATCHLOG
"RTN","SAMIHL7",233,0)
 ;@called-by none
"RTN","SAMIHL7",234,0)
 ;@calls none
"RTN","SAMIHL7",235,0)
 ;
"RTN","SAMIHL7",236,0)
 set ^KBAP("SAMIHL7","UPDTPTL1")=""
"RTN","SAMIHL7",237,0)
 ;
"RTN","SAMIHL7",238,0)
 new rootpl s rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIHL7",239,0)
 new ptienssn set ptienssn=0 ; patient ssn
"RTN","SAMIHL7",240,0)
 new ptiennm set ptiennm=0 ; patient name
"RTN","SAMIHL7",241,0)
 new ptiendob set ptiendob=0 ; patient dob
"RTN","SAMIHL7",242,0)
 new ptienssntmp set ptienssntmp=0 ; patient 1st ssn xref match
"RTN","SAMIHL7",243,0)
 new ptien set ptien=0 ; patient ien
"RTN","SAMIHL7",244,0)
 new newpat set newpat=1 ; new patient: default to true
"RTN","SAMIHL7",245,0)
 ;
"RTN","SAMIHL7",246,0)
 ; look for existing patients w/matching ssn. If one has matching name
"RTN","SAMIHL7",247,0)
 ; we don't make new patient; we update existing w/changelog.
"RTN","SAMIHL7",248,0)
 ;
"RTN","SAMIHL7",249,0)
 do
"RTN","SAMIHL7",250,0)
 . quit:'$length($get(fields("ssn")))  ; existing ssn
"RTN","SAMIHL7",251,0)
 . quit:'$data(@rootpl@("ssn",$get(fields("ssn"))))  ; matches lkup?
"RTN","SAMIHL7",252,0)
 . set ptienssntmp=$order(@rootpl@("ssn",$get(fields("ssn")),0)) ;save
"RTN","SAMIHL7",253,0)
 . for  do  quit:'ptienssn  quit:ptiennm
"RTN","SAMIHL7",254,0)
 . . set ptienssn=$order(@rootpl@("ssn",$get(fields("ssn")),ptienssn))
"RTN","SAMIHL7",255,0)
 . . quit:'ptienssn
"RTN","SAMIHL7",256,0)
 . . ;
"RTN","SAMIHL7",257,0)
 . . quit:'$length($get(fields("saminame")))
"RTN","SAMIHL7",258,0)
 . . new name set name=fields("saminame") ; existing name
"RTN","SAMIHL7",259,0)
 . . new chkname set chkname=@rootpl@(ptienssn,"saminame") ; new name
"RTN","SAMIHL7",260,0)
 . . quit:$$UP^XLFSTR(chkname)'=$$UP^XLFSTR(name)  ; uppercase equal?
"RTN","SAMIHL7",261,0)
 . . set ptiennm=ptienssn ; we have a match!
"RTN","SAMIHL7",262,0)
 . . quit
"RTN","SAMIHL7",263,0)
 . quit
"RTN","SAMIHL7",264,0)
 ;
"RTN","SAMIHL7",265,0)
 set ^KBAP("SAMIHL7","UPDTPTL1","A")=""
"RTN","SAMIHL7",266,0)
 ;
"RTN","SAMIHL7",267,0)
 if ptienssn,ptiennm do
"RTN","SAMIHL7",268,0)
 . new fixdob set fixdob=@rootpl@(ptienssn,"sbdob")
"RTN","SAMIHL7",269,0)
 . new year set year=$piece(fixdob,"-")
"RTN","SAMIHL7",270,0)
 . new month
"RTN","SAMIHL7",271,0)
 . set month=$translate($justify($piece(fixdob,"-",2),2)," ","0")
"RTN","SAMIHL7",272,0)
 . new day
"RTN","SAMIHL7",273,0)
 . set day=$translate($justify($piece(fixdob,"-",3),2)," ","0")
"RTN","SAMIHL7",274,0)
 . set fixdob=year_"-"_month_"-"_day
"RTN","SAMIHL7",275,0)
 . if $length($get(fields("sbdob"))),fixdob=fields("sbdob") do
"RTN","SAMIHL7",276,0)
 . . set ptiendob=ptienssn
"RTN","SAMIHL7",277,0)
 . . quit
"RTN","SAMIHL7",278,0)
 . set newpat=0 ; not a new patient
"RTN","SAMIHL7",279,0)
 . set ptien=ptienssn ; existing patient!
"RTN","SAMIHL7",280,0)
 ;
"RTN","SAMIHL7",281,0)
 ;
"RTN","SAMIHL7",282,0)
 set ^KBAP("SAMIHL7","UPDTPTL1","B")=""
"RTN","SAMIHL7",283,0)
 ;
"RTN","SAMIHL7",284,0)
 ; if no name match, restore ptienssn to 1st ssn xref match
"RTN","SAMIHL7",285,0)
 set:'ptienssn ptienssn=ptienssntmp
"RTN","SAMIHL7",286,0)
 ;
"RTN","SAMIHL7",287,0)
 ; if existing patient, save existing data
"RTN","SAMIHL7",288,0)
 new oldarr
"RTN","SAMIHL7",289,0)
 merge:ptien oldarr=@rootpl@(ptien)
"RTN","SAMIHL7",290,0)
 ;
"RTN","SAMIHL7",291,0)
 ;
"RTN","SAMIHL7",292,0)
 set ^KBAP("SAMIHL7","UPDTPTL1","C")=""
"RTN","SAMIHL7",293,0)
 ;
"RTN","SAMIHL7",294,0)
 ; if new patient, get next ptien to use & set dfn
"RTN","SAMIHL7",295,0)
 if '$get(ptien) do
"RTN","SAMIHL7",296,0)
 . set ptien=$order(@rootpl@(999999999),-1)+1
"RTN","SAMIHL7",297,0)
 . set fields("dfn")=ptien
"RTN","SAMIHL7",298,0)
 . set newpat=1
"RTN","SAMIHL7",299,0)
 . quit
"RTN","SAMIHL7",300,0)
 ;
"RTN","SAMIHL7",301,0)
 ;
"RTN","SAMIHL7",302,0)
 set ^KBAP("SAMIHL7","UPDTPTL1","D")=""
"RTN","SAMIHL7",303,0)
 ;
"RTN","SAMIHL7",304,0)
 set ^KBAP("SAMIHL7","ptien","newpat")=$get(ptien)_"^"_$get(newpat)
"RTN","SAMIHL7",305,0)
 set ^KBAP("SAMIHL7","fields(dfn)")=$get(fields("dfn"))
"RTN","SAMIHL7",306,0)
 ;
"RTN","SAMIHL7",307,0)
 ; bail if for some reason we didn't get next patient ien
"RTN","SAMIHL7",308,0)
 quit:'ptien
"RTN","SAMIHL7",309,0)
 ;
"RTN","SAMIHL7",310,0)
 merge ^KBAP("SAMIHL7","fields")=fields
"RTN","SAMIHL7",311,0)
 set ^KBAP("SAMIHL7","ptien")=$get(ptien)
"RTN","SAMIHL7",312,0)
 ;
"RTN","SAMIHL7",313,0)
 ;
"RTN","SAMIHL7",314,0)
MATCHLOG ; build MATCHLOG
"RTN","SAMIHL7",315,0)
 ;
"RTN","SAMIHL7",316,0)
 ;@falls-thru-from
"RTN","SAMIHL7",317,0)
 ; UPDTPTL-UPDTPTL1
"RTN","SAMIHL7",318,0)
 ;@called-by none
"RTN","SAMIHL7",319,0)
 ;@calls
"RTN","SAMIHL7",320,0)
 ; $$FMTE^XLFDT
"RTN","SAMIHL7",321,0)
 ; $$NOW^XLFDT
"RTN","SAMIHL7",322,0)
 ; $$UP^XLFSTR
"RTN","SAMIHL7",323,0)
 ; $$HTE^XLFDT
"RTN","SAMIHL7",324,0)
 ; KILLREF
"RTN","SAMIHL7",325,0)
 ; CAPTORM
"RTN","SAMIHL7",326,0)
 ;
"RTN","SAMIHL7",327,0)
 ; If adding new patient, check whether we had a match for ssn or name
"RTN","SAMIHL7",328,0)
 ; on an existing patient (with precedence to the ssn). If so set
"RTN","SAMIHL7",329,0)
 ; MATCHLOG = new patient ien & add index to existing patient.
"RTN","SAMIHL7",330,0)
 ;
"RTN","SAMIHL7",331,0)
 new var
"RTN","SAMIHL7",332,0)
 new newptien set newptien=""
"RTN","SAMIHL7",333,0)
 if newpat do
"RTN","SAMIHL7",334,0)
 . set newptien=ptien ; ien of the new patient being added
"RTN","SAMIHL7",335,0)
 . ;
"RTN","SAMIHL7",336,0)
 . ; if 1 or more existing entries w/this ssn, set MATCHLOG
"RTN","SAMIHL7",337,0)
 . ;
"RTN","SAMIHL7",338,0)
 . if ptienssn do  quit
"RTN","SAMIHL7",339,0)
 . . new ssnien set ssnien=0
"RTN","SAMIHL7",340,0)
 . . for  do  quit:'ssnien
"RTN","SAMIHL7",341,0)
 . . . set ssnien=$order(@rootpl@("ssn",$get(fields("ssn")),ssnien))
"RTN","SAMIHL7",342,0)
 . . . quit:'ssnien
"RTN","SAMIHL7",343,0)
 . . . set @rootpl@(ssnien,"HL7MATCHLOG")=newptien
"RTN","SAMIHL7",344,0)
 . . . set @rootpl@("HL7MATCHLOG",ssnien,newptien)=""
"RTN","SAMIHL7",345,0)
 . . . use $principal
"RTN","SAMIHL7",346,0)
 . . . write !,"HL7MATCHLOG ssn","--- ssnien=",ssnien
"RTN","SAMIHL7",347,0)
 . . . write "--- newptien=",newptien
"RTN","SAMIHL7",348,0)
 . . . quit
"RTN","SAMIHL7",349,0)
 . . quit
"RTN","SAMIHL7",350,0)
 . ;
"RTN","SAMIHL7",351,0)
 . ; if 1 or more existing entries w/this patient name, set MATCHLOG
"RTN","SAMIHL7",352,0)
 . ;
"RTN","SAMIHL7",353,0)
 . if ptiennm do
"RTN","SAMIHL7",354,0)
 . . new pnien set pnien=0
"RTN","SAMIHL7",355,0)
 . . for  do  quit:'pnien
"RTN","SAMIHL7",356,0)
 . . . set pnien=$order(@rootpl@("name",$g(fields("saminame")),pnien))
"RTN","SAMIHL7",357,0)
 . . . quit:'pnien
"RTN","SAMIHL7",358,0)
 . . . set @rootpl@(pnien,"HL7MATCHLOG")=newptien
"RTN","SAMIHL7",359,0)
 . . . set @rootpl@("HL7MATCHLOG",pnien,newptien)=""
"RTN","SAMIHL7",360,0)
 . . . use $principal
"RTN","SAMIHL7",361,0)
 . . . write !,"HL7MATCHLOG name","---",pnien
"RTN","SAMIHL7",362,0)
 . . . quit
"RTN","SAMIHL7",363,0)
 . . quit
"RTN","SAMIHL7",364,0)
 . quit
"RTN","SAMIHL7",365,0)
 ;
"RTN","SAMIHL7",366,0)
 ;
"RTN","SAMIHL7",367,0)
 new field set field=""
"RTN","SAMIHL7",368,0)
 ; run through every fields subscript and set the
"RTN","SAMIHL7",369,0)
 ;   appropriate subscript patient entry in patient-lookup
"RTN","SAMIHL7",370,0)
 for  do  quit:field=""
"RTN","SAMIHL7",371,0)
 . set field=$order(fields(field))
"RTN","SAMIHL7",372,0)
 . quit:field=""
"RTN","SAMIHL7",373,0)
 . ;
"RTN","SAMIHL7",374,0)
 . ; new patient ====================================
"RTN","SAMIHL7",375,0)
 . ; if new patient just set all patient-lookup field w/data in field
"RTN","SAMIHL7",376,0)
 . ; array.
"RTN","SAMIHL7",377,0)
 . ;
"RTN","SAMIHL7",378,0)
 . ; Load ORM message data later
"RTN","SAMIHL7",379,0)
 . ;
"RTN","SAMIHL7",380,0)
 . if newpat do
"RTN","SAMIHL7",381,0)
 . . quit:field="ORM"
"RTN","SAMIHL7",382,0)
 . . set @rootpl@(ptien,field)=fields(field)
"RTN","SAMIHL7",383,0)
 . . quit
"RTN","SAMIHL7",384,0)
 . ;
"RTN","SAMIHL7",385,0)
 . ; old patient ====================================
"RTN","SAMIHL7",386,0)
 . ; if not new patient, only store field results that are NOT null.
"RTN","SAMIHL7",387,0)
 . ; Never overwrite existing patient's dfn; store dfn just received
"RTN","SAMIHL7",388,0)
 . ; in remotedfn field
"RTN","SAMIHL7",389,0)
 . ;
"RTN","SAMIHL7",390,0)
 . ; With existing patients, if new data for field doesn't match
"RTN","SAMIHL7",391,0)
 . ; pre-existing, save pre-existing data in changelog entry
"RTN","SAMIHL7",392,0)
 . ;
"RTN","SAMIHL7",393,0)
 . if '$get(newpat),'(field="") do
"RTN","SAMIHL7",394,0)
 . . quit:field="ORM"
"RTN","SAMIHL7",395,0)
 . . quit:field="dfn"
"RTN","SAMIHL7",396,0)
 . . ;
"RTN","SAMIHL7",397,0)
 . . if $get(@rootpl@(ptien,field))'=fields(field) do
"RTN","SAMIHL7",398,0)
 . . . new now set now=$$FMTE^XLFDT($$NOW^XLFDT,5)
"RTN","SAMIHL7",399,0)
 . . . set @rootpl@(ptien,"hl7changelog",now,field)=fields(field)
"RTN","SAMIHL7",400,0)
 . . . quit
"RTN","SAMIHL7",401,0)
 . . set @rootpl@(ptien,field)=fields(field)
"RTN","SAMIHL7",402,0)
 . . quit
"RTN","SAMIHL7",403,0)
 . ;
"RTN","SAMIHL7",404,0)
 . ; indices =========================================
"RTN","SAMIHL7",405,0)
 . ; set all indices for old & new patients for this field
"RTN","SAMIHL7",406,0)
 . ; note: we must kill any existing earlier indices on existing
"RTN","SAMIHL7",407,0)
 . ; patients to prevent duplicate pointers
"RTN","SAMIHL7",408,0)
 . ;
"RTN","SAMIHL7",409,0)
 . quit:$get(fields(field))=""
"RTN","SAMIHL7",410,0)
 . ;
"RTN","SAMIHL7",411,0)
 . ; field=dfn =====================================
"RTN","SAMIHL7",412,0)
 . if field="dfn" do
"RTN","SAMIHL7",413,0)
 . . if newpat do
"RTN","SAMIHL7",414,0)
 . . . set @rootpl@("dfn",fields(field),ptien)=""
"RTN","SAMIHL7",415,0)
 . . . quit
"RTN","SAMIHL7",416,0)
 . . quit
"RTN","SAMIHL7",417,0)
 . ;
"RTN","SAMIHL7",418,0)
 . ; didn't get DFN from VA server (only ssn) so can't set remotedfn
"RTN","SAMIHL7",419,0)
 . ; field
"RTN","SAMIHL7",420,0)
 . set @rootpl@(ptien,"remotedfn")=""
"RTN","SAMIHL7",421,0)
 . ;
"RTN","SAMIHL7",422,0)
 . ; field=icn =====================================
"RTN","SAMIHL7",423,0)
 . if field="icn" do
"RTN","SAMIHL7",424,0)
 . . set @rootpl@("icn",fields(field),ptien)=""
"RTN","SAMIHL7",425,0)
 . . quit
"RTN","SAMIHL7",426,0)
 . ;
"RTN","SAMIHL7",427,0)
 . ; field=last5 ===================================
"RTN","SAMIHL7",428,0)
 . if field="last5" do
"RTN","SAMIHL7",429,0)
 . . if '$get(newpat) do
"RTN","SAMIHL7",430,0)
 . . . do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",431,0)
 . . . quit
"RTN","SAMIHL7",432,0)
 . . set @rootpl@("last5",fields(field),ptien)=""
"RTN","SAMIHL7",433,0)
 . . quit
"RTN","SAMIHL7",434,0)
 . ;
"RTN","SAMIHL7",435,0)
 . ; field=saminame ================================
"RTN","SAMIHL7",436,0)
 . if field="saminame" do
"RTN","SAMIHL7",437,0)
 . . if '$get(newpat) do
"RTN","SAMIHL7",438,0)
 . . . do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",439,0)
 . . . do KILLREF("name",$get(oldarr("name")),ptien)
"RTN","SAMIHL7",440,0)
 . . . do KILLREF("name",$$UP^XLFSTR($get(oldarr("name"))),ptien)
"RTN","SAMIHL7",441,0)
 . . . quit
"RTN","SAMIHL7",442,0)
 . . set @rootpl@("name",fields(field),ptien)=""
"RTN","SAMIHL7",443,0)
 . . set @rootpl@("saminame",fields(field),ptien)=""
"RTN","SAMIHL7",444,0)
 . . set @rootpl@("name",$$UP^XLFSTR(fields(field)),ptien)=""
"RTN","SAMIHL7",445,0)
 . . quit
"RTN","SAMIHL7",446,0)
 . ;
"RTN","SAMIHL7",447,0)
 . ; field=sinamef ==================================
"RTN","SAMIHL7",448,0)
 . if field="sinamef" do
"RTN","SAMIHL7",449,0)
 . . if '$get(newpat) do
"RTN","SAMIHL7",450,0)
 . . . do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",451,0)
 . . . quit
"RTN","SAMIHL7",452,0)
 . . set @rootpl@(field,fields(field),ptien)=""
"RTN","SAMIHL7",453,0)
 . . quit
"RTN","SAMIHL7",454,0)
 . ;
"RTN","SAMIHL7",455,0)
 . ; field=sinamel ==================================
"RTN","SAMIHL7",456,0)
 . if field="sinamel" do
"RTN","SAMIHL7",457,0)
 . . if '$get(newpat) do
"RTN","SAMIHL7",458,0)
 . . . do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",459,0)
 . . . quit
"RTN","SAMIHL7",460,0)
 . . set @rootpl@(field,fields(field),ptien)=""
"RTN","SAMIHL7",461,0)
 . . quit
"RTN","SAMIHL7",462,0)
 . ;
"RTN","SAMIHL7",463,0)
 . ; field=ssn ======================================
"RTN","SAMIHL7",464,0)
 . if field="ssn" do
"RTN","SAMIHL7",465,0)
 . . if '$get(newpat) do
"RTN","SAMIHL7",466,0)
 . . . do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",467,0)
 . . . quit
"RTN","SAMIHL7",468,0)
 . . set @rootpl@(field,fields(field),ptien)=""
"RTN","SAMIHL7",469,0)
 . . quit
"RTN","SAMIHL7",470,0)
 . quit
"RTN","SAMIHL7",471,0)
 ;
"RTN","SAMIHL7",472,0)
 ;
"RTN","SAMIHL7",473,0)
 set @rootpl@("Date Last Updated")=$$HTE^XLFDT($horolog)
"RTN","SAMIHL7",474,0)
 ;
"RTN","SAMIHL7",475,0)
 ; set so SAMIORM can use ptien to file HL7 messages
"RTN","SAMIHL7",476,0)
 set fields("ptien")=$get(ptien)
"RTN","SAMIHL7",477,0)
 ;
"RTN","SAMIHL7",478,0)
 ; now capture most recent ORM message
"RTN","SAMIHL7",479,0)
 do CAPTORM(.fields,rootpl,ptien)
"RTN","SAMIHL7",480,0)
 ;
"RTN","SAMIHL7",481,0)
 merge ^KBAP("SAMIHL7","fields")=fields
"RTN","SAMIHL7",482,0)
 ;
"RTN","SAMIHL7",483,0)
 quit  ; end of UPDTPTL-UPDTPTL1-MATCHLOG
"RTN","SAMIHL7",484,0)
 ;
"RTN","SAMIHL7",485,0)
 ;
"RTN","SAMIHL7",486,0)
 ;
"RTN","SAMIHL7",487,0)
 ; Push all the patient data that was gleaned from the ORM message and
"RTN","SAMIHL7",488,0)
 ;   saved in the fields array into the patient-lookup file
"RTN","SAMIHL7",489,0)
 ;   as @rootpl@(ptien,hl7cnt,data name)=data value
"RTN","SAMIHL7",490,0)
 ; examples of fields array
"RTN","SAMIHL7",491,0)
 ;  fields("ORM",hl7cnt,"msgid")=123456
"RTN","SAMIHL7",492,0)
 ;  fields("address1")="7726 W ORCHID ST"
"RTN","SAMIHL7",493,0)
 ;
"RTN","SAMIHL7",494,0)
CAPTORM(fields,rootpl,ptien) ; save all ORM fields in patient-lookup
"RTN","SAMIHL7",495,0)
 ;
"RTN","SAMIHL7",496,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHL7",497,0)
 ;
"RTN","SAMIHL7",498,0)
 ;;private;procedure;clean;silent;sac
"RTN","SAMIHL7",499,0)
 ;@called-by
"RTN","SAMIHL7",500,0)
 ; UPDTPTL-UPDTPTL1-MATCHLOG
"RTN","SAMIHL7",501,0)
 ;@calls none
"RTN","SAMIHL7",502,0)
 ;@input
"RTN","SAMIHL7",503,0)
 ; .fields = fields array
"RTN","SAMIHL7",504,0)
 ; rootpl = patient-lookup root
"RTN","SAMIHL7",505,0)
 ; ptien = patient ien
"RTN","SAMIHL7",506,0)
 ;@output
"RTN","SAMIHL7",507,0)
 ; ORM fields are saved in patient-lookup
"RTN","SAMIHL7",508,0)
 ;
"RTN","SAMIHL7",509,0)
 ;
"RTN","SAMIHL7",510,0)
 ;@stanza 2 remove old field result from patient-lookup root
"RTN","SAMIHL7",511,0)
 ;
"RTN","SAMIHL7",512,0)
 ; capture only the ORM fields
"RTN","SAMIHL7",513,0)
 ; e.g. example fields("ORM",6789473.805153,"msgid")=1234
"RTN","SAMIHL7",514,0)
 new node set node=$name(fields("ORM"))
"RTN","SAMIHL7",515,0)
 new snode set snode=$piece(node,")")
"RTN","SAMIHL7",516,0)
 new hl7cnt
"RTN","SAMIHL7",517,0)
 set (hl7cnt,@rootpl@(ptien,"hl7 counter"))=$get(@rootpl@(ptien,"hl7 counter"))+1
"RTN","SAMIHL7",518,0)
 for  do   quit:node'[snode
"RTN","SAMIHL7",519,0)
 . set node=$query(@node)
"RTN","SAMIHL7",520,0)
 . quit:node'[snode
"RTN","SAMIHL7",521,0)
 . set invdt=$qsubscript(node,2)
"RTN","SAMIHL7",522,0)
 . set @rootpl@(ptien,"ORM",hl7cnt,$qsubscript(node,3))=@node
"RTN","SAMIHL7",523,0)
 . quit
"RTN","SAMIHL7",524,0)
 ;
"RTN","SAMIHL7",525,0)
 ;
"RTN","SAMIHL7",526,0)
 ;@stanza 3 termination
"RTN","SAMIHL7",527,0)
 ;
"RTN","SAMIHL7",528,0)
 quit  ; end of CAPTORM
"RTN","SAMIHL7",529,0)
 ;
"RTN","SAMIHL7",530,0)
 ;
"RTN","SAMIHL7",531,0)
 ;
"RTN","SAMIHL7",532,0)
KILLREF(field,oldrslt,ptien) ; kill old field in patient-lookup root
"RTN","SAMIHL7",533,0)
 ;
"RTN","SAMIHL7",534,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHL7",535,0)
 ;
"RTN","SAMIHL7",536,0)
 ;;private;procedure;clean;silent;sac
"RTN","SAMIHL7",537,0)
 ;@called-by
"RTN","SAMIHL7",538,0)
 ; UPDTPTL-UPDTPTL1-MATCHLOG
"RTN","SAMIHL7",539,0)
 ;@calls none
"RTN","SAMIHL7",540,0)
 ;@input
"RTN","SAMIHL7",541,0)
 ; ]rootpl = patient-lookup root
"RTN","SAMIHL7",542,0)
 ; field = name of field to kill
"RTN","SAMIHL7",543,0)
 ; oldrslt = old field value to kill
"RTN","SAMIHL7",544,0)
 ; ptien = patient ien
"RTN","SAMIHL7",545,0)
 ;@output
"RTN","SAMIHL7",546,0)
 ; field is killed
"RTN","SAMIHL7",547,0)
 ;
"RTN","SAMIHL7",548,0)
 ;
"RTN","SAMIHL7",549,0)
 ;@stanza 2 remove old field result from patient-lookup root
"RTN","SAMIHL7",550,0)
 ;
"RTN","SAMIHL7",551,0)
 quit:$get(oldrslt)=""
"RTN","SAMIHL7",552,0)
 kill @rootpl@(field,oldrslt,ptien)
"RTN","SAMIHL7",553,0)
 ;
"RTN","SAMIHL7",554,0)
 ;
"RTN","SAMIHL7",555,0)
 ;@stanza 3 termination
"RTN","SAMIHL7",556,0)
 ;
"RTN","SAMIHL7",557,0)
 quit  ; end of KILLREF
"RTN","SAMIHL7",558,0)
 ;
"RTN","SAMIHL7",559,0)
 ;
"RTN","SAMIHL7",560,0)
 ;
"RTN","SAMIHL7",561,0)
 ;@ppi ACK^SAMIHL7
"RTN","SAMIHL7",562,0)
ACK ; force a com ACK
"RTN","SAMIHL7",563,0)
 ;
"RTN","SAMIHL7",564,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHL7",565,0)
 ;
"RTN","SAMIHL7",566,0)
 ;;ppi;procedure;shell;silent;sac
"RTN","SAMIHL7",567,0)
 ;@called-by
"RTN","SAMIHL7",568,0)
 ; MSH^SAMIADT [<= EN^SAMIADT <= old HL7 app, no longer used]
"RTN","SAMIHL7",569,0)
 ; EN^SAMIORM [<= hl7 app INST-MCAR <= HL7, main vapals hl7 entry]
"RTN","SAMIHL7",570,0)
 ; EN-ACK^SAMITIU [<= old HL7 app, no longer used]
"RTN","SAMIHL7",571,0)
 ;@calls
"RTN","SAMIHL7",572,0)
 ; GENACK^HLMA1
"RTN","SAMIHL7",573,0)
 ;@input
"RTN","SAMIHL7",574,0)
 ;  expects all HL7 variables captured on message reception to be in
"RTN","SAMIHL7",575,0)
 ;  environment, incl:
"RTN","SAMIHL7",576,0)
 ; ]HL("EID")
"RTN","SAMIHL7",577,0)
 ; ]HL("EIDS")
"RTN","SAMIHL7",578,0)
 ; ]HLA
"RTN","SAMIHL7",579,0)
 ; ]HLA("HLA")
"RTN","SAMIHL7",580,0)
 ; ]HLREC("FS")
"RTN","SAMIHL7",581,0)
 ; ]HLREC("MID")
"RTN","SAMIHL7",582,0)
 ;@output
"RTN","SAMIHL7",583,0)
 ;  sends com ACK through appropriate link
"RTN","SAMIHL7",584,0)
 ; ]HLA("HLA",1)
"RTN","SAMIHL7",585,0)
 ; ]HLMTIENA
"RTN","SAMIHL7",586,0)
 ; ]HLP
"RTN","SAMIHL7",587,0)
 ; ]HLP("NAMESPACE")
"RTN","SAMIHL7",588,0)
 ; ^KBAP("SAMIHL7","HLA")
"RTN","SAMIHL7",589,0)
 ;
"RTN","SAMIHL7",590,0)
 ;
"RTN","SAMIHL7",591,0)
 ;@stanza 2 send HL7 ack message
"RTN","SAMIHL7",592,0)
 ;
"RTN","SAMIHL7",593,0)
 kill HLA("HLA")
"RTN","SAMIHL7",594,0)
 set HLA("HLA",1)="MSA"_HLREC("FS")_"CA"_HLREC("FS")_HLREC("MID")
"RTN","SAMIHL7",595,0)
 ;
"RTN","SAMIHL7",596,0)
 if $data(HLA("HLA")) do  quit
"RTN","SAMIHL7",597,0)
 . set HLP("NAMESPACE")="HL"
"RTN","SAMIHL7",598,0)
 . merge ^KBAP("SAMIHL7","HLA")=HLA
"RTN","SAMIHL7",599,0)
 . do GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.HLMTIENA,"",.HLP)
"RTN","SAMIHL7",600,0)
 . quit
"RTN","SAMIHL7",601,0)
 ;
"RTN","SAMIHL7",602,0)
 ;
"RTN","SAMIHL7",603,0)
 ;@stanza 3 termination
"RTN","SAMIHL7",604,0)
 ;
"RTN","SAMIHL7",605,0)
 quit  ; end of ACK
"RTN","SAMIHL7",606,0)
 ;
"RTN","SAMIHL7",607,0)
 ;
"RTN","SAMIHL7",608,0)
 ;
"RTN","SAMIHL7",609,0)
EOR ; end of routine SAMIHL7
"RTN","SAMIHOM3")
0^33^B168340275
"RTN","SAMIHOM3",1,0)
SAMIHOM3 ;ven/gpl - homepage web service ;2021-08-09t17:16z
"RTN","SAMIHOM3",2,0)
 ;;18.0;SAMI;**5,12**;2020-01;Build 1
"RTN","SAMIHOM3",3,0)
 ;;18.12
"RTN","SAMIHOM3",4,0)
 ;
"RTN","SAMIHOM3",5,0)
 ; Routine SAMIHOM3 contains subroutines for implementing the IELCAP
"RTN","SAMIHOM3",6,0)
 ; Home Page and to provide binding to VistA.
"RTN","SAMIHOM3",7,0)
 ;
"RTN","SAMIHOM3",8,0)
 quit  ; no entry from top
"RTN","SAMIHOM3",9,0)
 ;
"RTN","SAMIHOM3",10,0)
 ;
"RTN","SAMIHOM3",11,0)
 ;
"RTN","SAMIHOM3",12,0)
 ;@section 0 primary development
"RTN","SAMIHOM3",13,0)
 ;
"RTN","SAMIHOM3",14,0)
 ;
"RTN","SAMIHOM3",15,0)
 ;
"RTN","SAMIHOM3",16,0)
 ;@routine-credits
"RTN","SAMIHOM3",17,0)
 ;@license see routine SAMIUL
"RTN","SAMIHOM3",18,0)
 ;@documentation see SAMIHUL
"RTN","SAMIHOM3",19,0)
 ;
"RTN","SAMIHOM3",20,0)
 ;@routine-credits
"RTN","SAMIHOM3",21,0)
 ;@dev-main George P. Lilly (gpl)
"RTN","SAMIHOM3",22,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIHOM3",23,0)
 ;@dev-org-main Vista Expertise Network (ven)
"RTN","SAMIHOM3",24,0)
 ; http://vistaexpertise.net
"RTN","SAMIHOM3",25,0)
 ;@copyright 2017/2021, gpl, all rights reserved
"RTN","SAMIHOM3",26,0)
 ;@license Apache 2.0
"RTN","SAMIHOM3",27,0)
 ; https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIHOM3",28,0)
 ;
"RTN","SAMIHOM3",29,0)
 ;@last-update 2021-08-09t17:16z
"RTN","SAMIHOM3",30,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMIHOM3",31,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMIHOM3",32,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMIHOM3",33,0)
 ;@version 18.12
"RTN","SAMIHOM3",34,0)
 ;@release-date 2020-01
"RTN","SAMIHOM3",35,0)
 ;@patch-list **5,12**
"RTN","SAMIHOM3",36,0)
 ;
"RTN","SAMIHOM3",37,0)
 ;@dev-add Frederick D. S. Marshall (toad)
"RTN","SAMIHOM3",38,0)
 ; toad@vistaexpertise.net
"RTN","SAMIHOM3",39,0)
 ;@dev-add Kenneth W. McGlothlen (mcglk)
"RTN","SAMIHOM3",40,0)
 ; mcglk@vistaexpertise.net
"RTN","SAMIHOM3",41,0)
 ;
"RTN","SAMIHOM3",42,0)
 ;@routine-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMIHOM3",43,0)
 ; see routine SAMIHUL
"RTN","SAMIHOM3",44,0)
 ;@contents
"RTN","SAMIHOM3",45,0)
 ;
"RTN","SAMIHOM3",46,0)
 ;  web services get vapals & post vapals
"RTN","SAMIHOM3",47,0)
 ;
"RTN","SAMIHOM3",48,0)
 ; WSHOME wsi WSHOME^SAMIHOM3, get vapals (SAMI homepage)
"RTN","SAMIHOM3",49,0)
 ; WSVAPALS wsi WSVAPALS^SAMIHOM3, post vapals (main gateway)
"RTN","SAMIHOM3",50,0)
 ;
"RTN","SAMIHOM3",51,0)
 ;  web pages & web routes
"RTN","SAMIHOM3",52,0)
 ;
"RTN","SAMIHOM3",53,0)
 ; DEVHOME wpi DEVHOME^SAMIHOM3, development home page
"RTN","SAMIHOM3",54,0)
 ; GETHOME wpi GETHOME^SAMIHOM3, get homepage (not subsequent visit)
"RTN","SAMIHOM3",55,0)
 ; WSNEWCAS wri WSNEWCAS^SAMIHOM3, newcase (creates new case)
"RTN","SAMIHOM3",56,0)
 ;
"RTN","SAMIHOM3",57,0)
 ;  private program interfaces
"RTN","SAMIHOM3",58,0)
 ;
"RTN","SAMIHOM3",59,0)
 ; $$SID2NUM number part of studyid (XXX0001 -> 1)
"RTN","SAMIHOM3",60,0)
 ; $$GENSTDID studyID for number
"RTN","SAMIHOM3",61,0)
 ; $$PREFIX letters to use to begin studyId
"RTN","SAMIHOM3",62,0)
 ; $$KEYDATE date in StudyId format (yyyy-mm-dd)
"RTN","SAMIHOM3",63,0)
 ; PREFILL prefill fields for forms
"RTN","SAMIHOM3",64,0)
 ;
"RTN","SAMIHOM3",65,0)
 ;  private subroutines
"RTN","SAMIHOM3",66,0)
 ;
"RTN","SAMIHOM3",67,0)
 ; PATLIST returns a list of patients in ary, passed by name
"RTN","SAMIHOM3",68,0)
 ; MKSIFORM create intake form
"RTN","SAMIHOM3",69,0)
 ;
"RTN","SAMIHOM3",70,0)
 ;  unused &/or deprecated subroutines
"RTN","SAMIHOM3",71,0)
 ;
"RTN","SAMIHOM3",72,0)
 ; $$SCANFOR scan array looking for value, return index
"RTN","SAMIHOM3",73,0)
 ; $$NEXTNUM next number for studyid
"RTN","SAMIHOM3",74,0)
 ; $$VALDTNM validate a new name
"RTN","SAMIHOM3",75,0)
 ; MKSBFORM create background form
"RTN","SAMIHOM3",76,0)
 ; ADDPAT-INDEX calls newCase to add patient dfn to vapals
"RTN","SAMIHOM3",77,0)
 ;
"RTN","SAMIHOM3",78,0)
 ;
"RTN","SAMIHOM3",79,0)
 ;
"RTN","SAMIHOM3",80,0)
 ;@section 1 web services get vapals & post vapals
"RTN","SAMIHOM3",81,0)
 ;
"RTN","SAMIHOM3",82,0)
 ;
"RTN","SAMIHOM3",83,0)
 ;
"RTN","SAMIHOM3",84,0)
 ;@wsi WSHOME^SAMIHOM3, web service get vapals (SAMI homepage)
"RTN","SAMIHOM3",85,0)
WSHOME(SAMIRTN,SAMIFILTER) goto WSHOME^SAMIHOM4
"RTN","SAMIHOM3",86,0)
 ;
"RTN","SAMIHOM3",87,0)
 ;
"RTN","SAMIHOM3",88,0)
 ;
"RTN","SAMIHOM3",89,0)
 ;@wsi WSVAPALS^SAMIHOM3, web service post vapals (main gateway)
"RTN","SAMIHOM3",90,0)
WSVAPALS(SAMIARG,SAMIBODY,SAMIRESULT) goto WSVAPALS^SAMIHOM4
"RTN","SAMIHOM3",91,0)
 ; (all calls come through this gateway)
"RTN","SAMIHOM3",92,0)
 ;
"RTN","SAMIHOM3",93,0)
 ;
"RTN","SAMIHOM3",94,0)
 ;
"RTN","SAMIHOM3",95,0)
 ;@section 2 web pages & web routes
"RTN","SAMIHOM3",96,0)
 ;
"RTN","SAMIHOM3",97,0)
 ;
"RTN","SAMIHOM3",98,0)
 ;
"RTN","SAMIHOM3",99,0)
 ;@wri WSNEWCAS^SAMIHOM3, newcase (creates new case)
"RTN","SAMIHOM3",100,0)
WSNEWCAS(SAMIARGS,SAMIBODY,SAMIRESULT) goto WSNEWCAS^SAMIHOM4
"RTN","SAMIHOM3",101,0)
 ;
"RTN","SAMIHOM3",102,0)
 ;
"RTN","SAMIHOM3",103,0)
 ;
"RTN","SAMIHOM3",104,0)
 ;@wpi DEVHOME^SAMIHOM3, development home page
"RTN","SAMIHOM3",105,0)
DEVHOME(SAMIRTN,SAMIFILTER) goto DEVHOME^SAMIHOM4
"RTN","SAMIHOM3",106,0)
 ;
"RTN","SAMIHOM3",107,0)
 ;
"RTN","SAMIHOM3",108,0)
 ;
"RTN","SAMIHOM3",109,0)
 ;@wpi GETHOME^SAMIHOM3, get homepage (not subsequent visit)
"RTN","SAMIHOM3",110,0)
GETHOME(SAMIRTN,SAMIFILTER) goto GETHOME^SAMIHOM4
"RTN","SAMIHOM3",111,0)
 ;
"RTN","SAMIHOM3",112,0)
 ;
"RTN","SAMIHOM3",113,0)
 ;
"RTN","SAMIHOM3",114,0)
 ;@section 3 private program interfaces
"RTN","SAMIHOM3",115,0)
 ;
"RTN","SAMIHOM3",116,0)
 ;
"RTN","SAMIHOM3",117,0)
 ;
"RTN","SAMIHOM3",118,0)
 ;@API $$SID2NUM^SAMIHOM3, number part of study id
"RTN","SAMIHOM3",119,0)
SID2NUM(sid) ; number part of studyid (XXX0001 -> 1)
"RTN","SAMIHOM3",120,0)
 ;
"RTN","SAMIHOM3",121,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM3",122,0)
 ;
"RTN","SAMIHOM3",123,0)
 ;ven/gpl;public;function;clean;silent;sac;tests
"RTN","SAMIHOM3",124,0)
 ;@called-by
"RTN","SAMIHOM3",125,0)
 ; getVals^%wfhform
"RTN","SAMIHOM3",126,0)
 ; WSCASE^SAMICASE
"RTN","SAMIHOM3",127,0)
 ; WSNUFORM^SAMICASE
"RTN","SAMIHOM3",128,0)
 ; MKBXFORM^SAMICAS3
"RTN","SAMIHOM3",129,0)
 ; MKCEFORM^SAMICAS3
"RTN","SAMIHOM3",130,0)
 ; MKFUFORM^SAMICAS3
"RTN","SAMIHOM3",131,0)
 ; MKITFORM^SAMICAS3
"RTN","SAMIHOM3",132,0)
 ; MKPTFORM^SAMICAS3
"RTN","SAMIHOM3",133,0)
 ; MKSBFORM^SAMICAS3
"RTN","SAMIHOM3",134,0)
 ; filename^SAMICTRT
"RTN","SAMIHOM3",135,0)
 ; getVals^SAMIZ1
"RTN","SAMIHOM3",136,0)
 ;@calls
"RTN","SAMIHOM3",137,0)
 ; $$setroot^%wd
"RTN","SAMIHOM3",138,0)
 ;@input
"RTN","SAMIHOM3",139,0)
 ; sid = study id
"RTN","SAMIHOM3",140,0)
 ;@output = number from study id
"RTN","SAMIHOM3",141,0)
 ;@examples [tbd]
"RTN","SAMIHOM3",142,0)
 ;@tests [tbd]
"RTN","SAMIHOM3",143,0)
 ;
"RTN","SAMIHOM3",144,0)
 ;@stanza 2 calculate number
"RTN","SAMIHOM3",145,0)
 ;
"RTN","SAMIHOM3",146,0)
 ;new number set number=+$extract(sid,4,$length(sid))
"RTN","SAMIHOM3",147,0)
 ; we have to look up the number (pien) instead of computing it
"RTN","SAMIHOM3",148,0)
 new proot set proot=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM3",149,0)
 new number set number=$order(@proot@("sid",sid,""))
"RTN","SAMIHOM3",150,0)
 ;
"RTN","SAMIHOM3",151,0)
 ;@stanza 3 return & termination
"RTN","SAMIHOM3",152,0)
 ;
"RTN","SAMIHOM3",153,0)
 quit number ; return number; end of $$sid2num
"RTN","SAMIHOM3",154,0)
 ;
"RTN","SAMIHOM3",155,0)
 ;
"RTN","SAMIHOM3",156,0)
 ;
"RTN","SAMIHOM3",157,0)
GENSTDID(num,ARG) ; studyID for number
"RTN","SAMIHOM3",158,0)
 ;
"RTN","SAMIHOM3",159,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM3",160,0)
 ;
"RTN","SAMIHOM3",161,0)
 ;ven/gpl;private;function;clean;silent;sac;tests
"RTN","SAMIHOM3",162,0)
 ;@called-by
"RTN","SAMIHOM3",163,0)
 ; WSNEWCAS
"RTN","SAMIHOM3",164,0)
 ; WSSBFORM^SAMIFWS
"RTN","SAMIHOM3",165,0)
 ; WSSIFORM^SAMIFWS
"RTN","SAMIHOM3",166,0)
 ; WSCEFORM^SAMIFWS
"RTN","SAMIHOM3",167,0)
 ; MOV^SAMIMOV
"RTN","SAMIHOM3",168,0)
 ; WSLOOKUP^SAMISRCH
"RTN","SAMIHOM3",169,0)
 ;@calls none
"RTN","SAMIHOM3",170,0)
 ; $$GETPRFX^SAMIFORM [commented out]
"RTN","SAMIHOM3",171,0)
 ;@input
"RTN","SAMIHOM3",172,0)
 ; num = number of study id
"RTN","SAMIHOM3",173,0)
 ;@output = study id corresponding to number
"RTN","SAMIHOM3",174,0)
 ;@examples [tbd]
"RTN","SAMIHOM3",175,0)
 ;@tests
"RTN","SAMIHOM3",176,0)
 ; UTSTDID^SAMIUTH3
"RTN","SAMIHOM3",177,0)
 ;
"RTN","SAMIHOM3",178,0)
 ;
"RTN","SAMIHOM3",179,0)
 ;@stanza 2 calculate study id
"RTN","SAMIHOM3",180,0)
 ;
"RTN","SAMIHOM3",181,0)
 new zl set zl=$length(num)
"RTN","SAMIHOM3",182,0)
 new zz set zz="00000"
"RTN","SAMIHOM3",183,0)
 ;
"RTN","SAMIHOM3",184,0)
 ; new studyid set studyid=$$GETPRFX^SAMIFORM(.ARG)_$extract(zz,1,5-zl)_num
"RTN","SAMIHOM3",185,0)
 ;
"RTN","SAMIHOM3",186,0)
 ; the prefix is determined by the site or siteid, which should be passed
"RTN","SAMIHOM3",187,0)
 ; in ARG
"RTN","SAMIHOM3",188,0)
 new tsite set tsite=$get(ARG("siteid"))
"RTN","SAMIHOM3",189,0)
 if tsite="" set tsite=$get(ARG("site"))
"RTN","SAMIHOM3",190,0)
 if tsite="" set tsite="UNK"
"RTN","SAMIHOM3",191,0)
 new studyid set studyid=tsite_$extract(zz,1,5-zl)_num
"RTN","SAMIHOM3",192,0)
 ;
"RTN","SAMIHOM3",193,0)
 ;
"RTN","SAMIHOM3",194,0)
 ;@stanza 3 return & termination
"RTN","SAMIHOM3",195,0)
 ;
"RTN","SAMIHOM3",196,0)
 quit studyid ; return study id; end of $$GENSTDID
"RTN","SAMIHOM3",197,0)
 ;
"RTN","SAMIHOM3",198,0)
 ;
"RTN","SAMIHOM3",199,0)
 ;
"RTN","SAMIHOM3",200,0)
KEYDATE(fmdt) ; date in StudyId format (yyyy-mm-dd)
"RTN","SAMIHOM3",201,0)
 ;
"RTN","SAMIHOM3",202,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM3",203,0)
 ;
"RTN","SAMIHOM3",204,0)
 ;ven/gpl;private;function;clean;silent;sac;tests
"RTN","SAMIHOM3",205,0)
 ;@called-by
"RTN","SAMIHOM3",206,0)
 ; WSNEWCAS
"RTN","SAMIHOM3",207,0)
 ; WSNFPOST^SAMICASE
"RTN","SAMIHOM3",208,0)
 ; SAVFILTR^SAMISAV
"RTN","SAMIHOM3",209,0)
 ;@calls
"RTN","SAMIHOM3",210,0)
 ; $$FMTE^XLFDT
"RTN","SAMIHOM3",211,0)
 ;@input
"RTN","SAMIHOM3",212,0)
 ; fmdt = date in fileman format
"RTN","SAMIHOM3",213,0)
 ;@output = date in study id format
"RTN","SAMIHOM3",214,0)
 ;@examples [tbd]
"RTN","SAMIHOM3",215,0)
 ;@tests
"RTN","SAMIHOM3",216,0)
 ; UTKEYDT^SAMIUTH3
"RTN","SAMIHOM3",217,0)
 ;
"RTN","SAMIHOM3",218,0)
 ;
"RTN","SAMIHOM3",219,0)
 ;@stanza 2 calculate studyid format
"RTN","SAMIHOM3",220,0)
 ;
"RTN","SAMIHOM3",221,0)
 new zdt set zdt=$$FMTE^XLFDT(fmdt,"7D")
"RTN","SAMIHOM3",222,0)
 ;
"RTN","SAMIHOM3",223,0)
 new zy set zy=$piece(zdt,"/",1) ; year
"RTN","SAMIHOM3",224,0)
 new zm set zm=$piece(zdt,"/",2) ; month
"RTN","SAMIHOM3",225,0)
 if $length(zm)=1 set zm="0"_zm
"RTN","SAMIHOM3",226,0)
 ;
"RTN","SAMIHOM3",227,0)
 new zd set zd=$piece(zdt,"/",3) ; day
"RTN","SAMIHOM3",228,0)
 if $length(zd)=1 set zd="0"_zd
"RTN","SAMIHOM3",229,0)
 ;
"RTN","SAMIHOM3",230,0)
 new studydate set studydate=zy_"-"_zm_"-"_zd
"RTN","SAMIHOM3",231,0)
 ;
"RTN","SAMIHOM3",232,0)
 ;
"RTN","SAMIHOM3",233,0)
 ;@stanza 3 return & termination
"RTN","SAMIHOM3",234,0)
 ;
"RTN","SAMIHOM3",235,0)
 quit studydate ; return date; end of $$KEYDATE
"RTN","SAMIHOM3",236,0)
 ;
"RTN","SAMIHOM3",237,0)
 ;
"RTN","SAMIHOM3",238,0)
 ;
"RTN","SAMIHOM3",239,0)
PREFILL(dfn) ; prefill fields for form
"RTN","SAMIHOM3",240,0)
 ;
"RTN","SAMIHOM3",241,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM3",242,0)
 ;
"RTN","SAMIHOM3",243,0)
 ;ven/gpl;private;procedure;clean;silent;sac;tests
"RTN","SAMIHOM3",244,0)
 ;@called-by
"RTN","SAMIHOM3",245,0)
 ; WSNEWCAS
"RTN","SAMIHOM3",246,0)
 ; GETHDR^SAMIFLD
"RTN","SAMIHOM3",247,0)
 ;@calls
"RTN","SAMIHOM3",248,0)
 ; PTINFO^SAMIVSTA
"RTN","SAMIHOM3",249,0)
 ; $$setroot^%wd
"RTN","SAMIHOM3",250,0)
 ; ^%DT
"RTN","SAMIHOM3",251,0)
 ;@input
"RTN","SAMIHOM3",252,0)
 ; dfn = patient ien
"RTN","SAMIHOM3",253,0)
 ;@output
"RTN","SAMIHOM3",254,0)
 ; @root(gien) = ...
"RTN","SAMIHOM3",255,0)
 ;  where root = graph root for elcap patients
"RTN","SAMIHOM3",256,0)
 ;@examples [tbd]
"RTN","SAMIHOM3",257,0)
 ;@tests [tbd]
"RTN","SAMIHOM3",258,0)
 ;
"RTN","SAMIHOM3",259,0)
 ;
"RTN","SAMIHOM3",260,0)
 ;@stanza 2 prefill fields
"RTN","SAMIHOM3",261,0)
 ;
"RTN","SAMIHOM3",262,0)
 ; pull data from VistA
"RTN","SAMIHOM3",263,0)
 ;
"RTN","SAMIHOM3",264,0)
 ; new ok set ok=$$PTINFO^SAMIVSTA(dfn)
"RTN","SAMIHOM3",265,0)
 ; if +ok<1 do ^%ZTER
"RTN","SAMIHOM3",266,0)
 ;
"RTN","SAMIHOM3",267,0)
 do PTINFO^SAMIVSTA(dfn) ; get additional info on patient
"RTN","SAMIHOM3",268,0)
 ;
"RTN","SAMIHOM3",269,0)
 ; prefills fields from patient-lookup graph
"RTN","SAMIHOM3",270,0)
 ;
"RTN","SAMIHOM3",271,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM3",272,0)
 new lroot set lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM3",273,0)
 ;
"RTN","SAMIHOM3",274,0)
 new lien set lien=$order(@lroot@("dfn",dfn,""))
"RTN","SAMIHOM3",275,0)
 quit:lien=""
"RTN","SAMIHOM3",276,0)
 ;
"RTN","SAMIHOM3",277,0)
 new gien set gien=$order(@root@("dfn",dfn,"")) ; 
"RTN","SAMIHOM3",278,0)
 quit:gien=""
"RTN","SAMIHOM3",279,0)
 ;
"RTN","SAMIHOM3",280,0)
 ; merge prefill fields
"RTN","SAMIHOM3",281,0)
 merge @root@(gien)=@lroot@(lien)
"RTN","SAMIHOM3",282,0)
 ;
"RTN","SAMIHOM3",283,0)
 ; fix format problems
"RTN","SAMIHOM3",284,0)
 new saminame set saminame=$get(@root@(gien,"saminame"))
"RTN","SAMIHOM3",285,0)
 ;
"RTN","SAMIHOM3",286,0)
 ; dob format
"RTN","SAMIHOM3",287,0)
 new dob set dob=$get(@lroot@(lien,"sbdob"))
"RTN","SAMIHOM3",288,0)
 new X set X=dob
"RTN","SAMIHOM3",289,0)
 new Y
"RTN","SAMIHOM3",290,0)
 do ^%DT ; convert date to fileman format
"RTN","SAMIHOM3",291,0)
 quit:Y=-1
"RTN","SAMIHOM3",292,0)
 set dob=Y
"RTN","SAMIHOM3",293,0)
 if dob'="" set @root@(gien,"sbdob")=$$VAPALSDT^SAMICASE(dob)
"RTN","SAMIHOM3",294,0)
 if dob'="" set @root@(gien,"sidob")=$$VAPALSDT^SAMICASE(dob)
"RTN","SAMIHOM3",295,0)
 ;
"RTN","SAMIHOM3",296,0)
 ; ssn format
"RTN","SAMIHOM3",297,0)
 new ssn set ssn=$get(@lroot@(lien,"ssn"))
"RTN","SAMIHOM3",298,0)
 if $length(ssn)=9 set @root@(gien,"sissn")=$extract(ssn,1,3)_"-"_$extract(ssn,4,5)_"-"_$extract(ssn,6,9)
"RTN","SAMIHOM3",299,0)
 ;
"RTN","SAMIHOM3",300,0)
 ; studyid
"RTN","SAMIHOM3",301,0)
 set @root@(gien,"sisid")=@root@(gien,"samistudyid")
"RTN","SAMIHOM3",302,0)
 ;
"RTN","SAMIHOM3",303,0)
 ;
"RTN","SAMIHOM3",304,0)
 ;@stanza 3 termination
"RTN","SAMIHOM3",305,0)
 ;
"RTN","SAMIHOM3",306,0)
 quit  ; end of PREFILL
"RTN","SAMIHOM3",307,0)
 ;
"RTN","SAMIHOM3",308,0)
 ;
"RTN","SAMIHOM3",309,0)
 ;
"RTN","SAMIHOM3",310,0)
 ;@section 4 private subroutines
"RTN","SAMIHOM3",311,0)
 ;
"RTN","SAMIHOM3",312,0)
 ;
"RTN","SAMIHOM3",313,0)
 ;
"RTN","SAMIHOM3",314,0)
PATLIST(ARY) ; returns a list of patients in ary, passed by name
"RTN","SAMIHOM3",315,0)
 ;
"RTN","SAMIHOM3",316,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM3",317,0)
 ;
"RTN","SAMIHOM3",318,0)
 ;ven/gpl;private;procedure;clean;silent;sac;tests
"RTN","SAMIHOM3",319,0)
 ;@called-by
"RTN","SAMIHOM3",320,0)
 ; DEVHOME
"RTN","SAMIHOM3",321,0)
 ;@calls
"RTN","SAMIHOM3",322,0)
 ; $$setroot^%wd
"RTN","SAMIHOM3",323,0)
 ;@input
"RTN","SAMIHOM3",324,0)
 ; ARY = name of array to return patient list in
"RTN","SAMIHOM3",325,0)
 ;@output
"RTN","SAMIHOM3",326,0)
 ; @ary = array containing list of patients
"RTN","SAMIHOM3",327,0)
 ;@examples [tbd]
"RTN","SAMIHOM3",328,0)
 ;@tests
"RTN","SAMIHOM3",329,0)
 ; UTPTLST^SAMIUTH3
"RTN","SAMIHOM3",330,0)
 ;
"RTN","SAMIHOM3",331,0)
 ;
"RTN","SAMIHOM3",332,0)
 ;@stanza 2 build list of patients
"RTN","SAMIHOM3",333,0)
 ;
"RTN","SAMIHOM3",334,0)
 new GROOT set GROOT=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM3",335,0)
 ;
"RTN","SAMIHOM3",336,0)
 kill @ARY
"RTN","SAMIHOM3",337,0)
 new zi set zi=""
"RTN","SAMIHOM3",338,0)
 for  do  quit:zi=""
"RTN","SAMIHOM3",339,0)
 . set zi=$order(@GROOT@("graph",zi))
"RTN","SAMIHOM3",340,0)
 . quit:zi=""
"RTN","SAMIHOM3",341,0)
 . set @ARY@(zi)=""
"RTN","SAMIHOM3",342,0)
 . quit
"RTN","SAMIHOM3",343,0)
 ;
"RTN","SAMIHOM3",344,0)
 ;
"RTN","SAMIHOM3",345,0)
 ;@stanza 3 termination
"RTN","SAMIHOM3",346,0)
 ;
"RTN","SAMIHOM3",347,0)
 quit  ; end of PATLIST
"RTN","SAMIHOM3",348,0)
 ;
"RTN","SAMIHOM3",349,0)
 ;
"RTN","SAMIHOM3",350,0)
 ;
"RTN","SAMIHOM3",351,0)
MKSIFORM(num) ; create intake form
"RTN","SAMIHOM3",352,0)
 ;
"RTN","SAMIHOM3",353,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM3",354,0)
 ;
"RTN","SAMIHOM3",355,0)
 ;ven/gpl;private;procedure;clean;silent;sac;tests
"RTN","SAMIHOM3",356,0)
 ;@called-by
"RTN","SAMIHOM3",357,0)
 ; WSNEWCAS
"RTN","SAMIHOM3",358,0)
 ;@calls
"RTN","SAMIHOM3",359,0)
 ; $$setroot^%wd
"RTN","SAMIHOM3",360,0)
 ; SSAMISTA^SAMICASE
"RTN","SAMIHOM3",361,0)
 ; $$URBRUR^SAMIVSTA
"RTN","SAMIHOM3",362,0)
 ; $$NOW^XLFDT
"RTN","SAMIHOM3",363,0)
 ; $$VAPALSDT^SAMICASE
"RTN","SAMIHOM3",364,0)
 ;@input
"RTN","SAMIHOM3",365,0)
 ; num = index where new form should be built
"RTN","SAMIHOM3",366,0)
 ;@output
"RTN","SAMIHOM3",367,0)
 ; @root(num) = ...
"RTN","SAMIHOM3",368,0)
 ;  where root = graph root for elcap patients
"RTN","SAMIHOM3",369,0)
 ; @root@("graph")
"RTN","SAMIHOM3",370,0)
 ;@examples [tbd]
"RTN","SAMIHOM3",371,0)
 ;@tests
"RTN","SAMIHOM3",372,0)
 ; UTSIFRM^SAMIUTH3
"RTN","SAMIHOM3",373,0)
 ;
"RTN","SAMIHOM3",374,0)
 ;
"RTN","SAMIHOM3",375,0)
 ;@stanza 2 create & place graph for new intake form
"RTN","SAMIHOM3",376,0)
 ;
"RTN","SAMIHOM3",377,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM3",378,0)
 new sid set sid=$get(@root@(num,"samistudyid"))
"RTN","SAMIHOM3",379,0)
 quit:sid=""
"RTN","SAMIHOM3",380,0)
 ;
"RTN","SAMIHOM3",381,0)
 new cdate set cdate=$get(@root@(num,"samicreatedate"))
"RTN","SAMIHOM3",382,0)
 quit:cdate=""
"RTN","SAMIHOM3",383,0)
 ;
"RTN","SAMIHOM3",384,0)
 merge @root@("graph",sid,"siform-"_cdate)=@root@(num)
"RTN","SAMIHOM3",385,0)
 ;
"RTN","SAMIHOM3",386,0)
 ; update form samistatus to complete
"RTN","SAMIHOM3",387,0)
 do SSAMISTA^SAMICASE(sid,"siform-"_cdate,"incomplete")
"RTN","SAMIHOM3",388,0)
 ;
"RTN","SAMIHOM3",389,0)
 ;
"RTN","SAMIHOM3",390,0)
 ;@stanza 3 init new intake form from vista data
"RTN","SAMIHOM3",391,0)
 ;
"RTN","SAMIHOM3",392,0)
 new zf set zf=$name(@root@("graph",sid,"siform-"_cdate))
"RTN","SAMIHOM3",393,0)
 set @zf@("sipsa")=$get(@root@(num,"address1")) ; primary address
"RTN","SAMIHOM3",394,0)
 set @zf@("sipan")=$get(@root@(num,"address2")) ; apartment #
"RTN","SAMIHOM3",395,0)
 set @zf@("sipc")=$get(@root@(num,"city")) ; city
"RTN","SAMIHOM3",396,0)
 set @zf@("sips")=$get(@root@(num,"state")) ; state
"RTN","SAMIHOM3",397,0)
 set @zf@("sipcn")=$get(@root@(num,"county")) ; county
"RTN","SAMIHOM3",398,0)
 set @zf@("sipcr")="USA" ; country
"RTN","SAMIHOM3",399,0)
 ;
"RTN","SAMIHOM3",400,0)
 set @zf@("sipz")=$get(@root@(num,"zip")) ; zip
"RTN","SAMIHOM3",401,0)
 if @zf@("sipz")'="" do
"RTN","SAMIHOM3",402,0)
 . new zip set zip=@zf@("sipz")
"RTN","SAMIHOM3",403,0)
 . quit:zip=""
"RTN","SAMIHOM3",404,0)
 . ;
"RTN","SAMIHOM3",405,0)
 . new ru set ru=$$URBRUR^SAMIVSTA(zip) ; urban/rural from zip
"RTN","SAMIHOM3",406,0)
 . if ru=0 set ru="n"
"RTN","SAMIHOM3",407,0)
 . if ru="r"!(ru="u")!(ru="n") set @zf@("sirs")=ru
"RTN","SAMIHOM3",408,0)
 . set @root@(num,"sirs")=$get(@zf@("sirs"))
"RTN","SAMIHOM3",409,0)
 . quit
"RTN","SAMIHOM3",410,0)
 ;
"RTN","SAMIHOM3",411,0)
 new phn set phn=$get(@root@(num,"phone")) ; phone #
"RTN","SAMIHOM3",412,0)
 if phn["x" set phn=$piece(phn," x",1)
"RTN","SAMIHOM3",413,0)
 set @zf@("sippn")=phn
"RTN","SAMIHOM3",414,0)
 ;
"RTN","SAMIHOM3",415,0)
 set @zf@("sidc")=$$VAPALSDT^SAMICASE($$NOW^XLFDT) ; intake discussion
"RTN","SAMIHOM3",416,0)
 set @zf@("sipedc")=$$VAPALSDT^SAMICASE($$NOW^XLFDT) ; pre-enroll disc
"RTN","SAMIHOM3",417,0)
 ; set samifirsttime variable for intake form
"RTN","SAMIHOM3",418,0)
 set @zf@("samifirsttime")="true"
"RTN","SAMIHOM3",419,0)
 ;
"RTN","SAMIHOM3",420,0)
 ;
"RTN","SAMIHOM3",421,0)
 ;@stanza 3 termination
"RTN","SAMIHOM3",422,0)
 ;
"RTN","SAMIHOM3",423,0)
 quit "siform-"_cdate ; end of MKSIFORM
"RTN","SAMIHOM3",424,0)
 ;
"RTN","SAMIHOM3",425,0)
 ;
"RTN","SAMIHOM3",426,0)
 ;
"RTN","SAMIHOM3",427,0)
 ;@section 5 unused &/or deprecated subroutines
"RTN","SAMIHOM3",428,0)
 ;
"RTN","SAMIHOM3",429,0)
 ;
"RTN","SAMIHOM3",430,0)
 ;
"RTN","SAMIHOM3",431,0)
SCANFOR(ary,start,what) ; scan array looking for value
"RTN","SAMIHOM3",432,0)
 ;
"RTN","SAMIHOM3",433,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM3",434,0)
 ;
"RTN","SAMIHOM3",435,0)
 ;ven/gpl;private;function;clean;silent;sac;tests
"RTN","SAMIHOM3",436,0)
 ;@called-by none
"RTN","SAMIHOM3",437,0)
 ;@calls: none
"RTN","SAMIHOM3",438,0)
 ;@input
"RTN","SAMIHOM3",439,0)
 ; .ary = array to scan
"RTN","SAMIHOM3",440,0)
 ; start = index to begin scanning at
"RTN","SAMIHOM3",441,0)
 ; what = value to scan array for
"RTN","SAMIHOM3",442,0)
 ;@output = array index where value was found
"RTN","SAMIHOM3",443,0)
 ;@examples [tbd]
"RTN","SAMIHOM3",444,0)
 ;@tests
"RTN","SAMIHOM3",445,0)
 ; UTSCAN4^SAMIUTH3
"RTN","SAMIHOM3",446,0)
 ;
"RTN","SAMIHOM3",447,0)
 ;
"RTN","SAMIHOM3",448,0)
 ;@stanza 2 scan array
"RTN","SAMIHOM3",449,0)
 ;
"RTN","SAMIHOM3",450,0)
 new %1 set %1=start
"RTN","SAMIHOM3",451,0)
 new limit
"RTN","SAMIHOM3",452,0)
 for limit=0:1:1001  do  quit:'%1  quit:ary(%1)[what
"RTN","SAMIHOM3",453,0)
 . set %1=$order(ary(%1))
"RTN","SAMIHOM3",454,0)
 . quit:'%1
"RTN","SAMIHOM3",455,0)
 . quit:ary(%1)[what
"RTN","SAMIHOM3",456,0)
 . ; write !,ary(%1)
"RTN","SAMIHOM3",457,0)
 . quit
"RTN","SAMIHOM3",458,0)
 ;
"RTN","SAMIHOM3",459,0)
 new zrtn set zrtn=%1
"RTN","SAMIHOM3",460,0)
 if %1<start set zrtn=start
"RTN","SAMIHOM3",461,0)
 if %1>1000 set zrtn=start
"RTN","SAMIHOM3",462,0)
 ;
"RTN","SAMIHOM3",463,0)
 ;
"RTN","SAMIHOM3",464,0)
 ;@stanza 3 return & termination
"RTN","SAMIHOM3",465,0)
 ;
"RTN","SAMIHOM3",466,0)
 quit zrtn ; return array index; end of $$$SCANFOR
"RTN","SAMIHOM3",467,0)
 ;
"RTN","SAMIHOM3",468,0)
 ;
"RTN","SAMIHOM3",469,0)
 ;
"RTN","SAMIHOM3",470,0)
NEXTNUM() ; next number for studyid
"RTN","SAMIHOM3",471,0)
 ;
"RTN","SAMIHOM3",472,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM3",473,0)
 ;
"RTN","SAMIHOM3",474,0)
 ;ven/gpl;private;variable;clean;silent;sac;tests
"RTN","SAMIHOM3",475,0)
 ;@called-by none
"RTN","SAMIHOM3",476,0)
 ; WSNEWCAS [commented out]
"RTN","SAMIHOM3",477,0)
 ;@calls
"RTN","SAMIHOM3",478,0)
 ; $$setroot^%wd
"RTN","SAMIHOM3",479,0)
 ;@input: none
"RTN","SAMIHOM3",480,0)
 ;@output = next number for study id
"RTN","SAMIHOM3",481,0)
 ;@examples [tbd]
"RTN","SAMIHOM3",482,0)
 ;@tests
"RTN","SAMIHOM3",483,0)
 ; UTNXTN^SAMIUTH3
"RTN","SAMIHOM3",484,0)
 ;
"RTN","SAMIHOM3",485,0)
 ;
"RTN","SAMIHOM3",486,0)
 ;@stanza 2 calculate next number
"RTN","SAMIHOM3",487,0)
 ;
"RTN","SAMIHOM3",488,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM3",489,0)
 new number set number=$order(@root@("  "),-1)+1
"RTN","SAMIHOM3",490,0)
 ;
"RTN","SAMIHOM3",491,0)
 ;
"RTN","SAMIHOM3",492,0)
 ;@stanza 3 return & termination
"RTN","SAMIHOM3",493,0)
 ;
"RTN","SAMIHOM3",494,0)
 quit number ; return #; end of $$NEXTNUM
"RTN","SAMIHOM3",495,0)
 ;
"RTN","SAMIHOM3",496,0)
 ;
"RTN","SAMIHOM3",497,0)
 ;
"RTN","SAMIHOM3",498,0)
VALDTNM(nm,args) ; validate new name
"RTN","SAMIHOM3",499,0)
 ;
"RTN","SAMIHOM3",500,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM3",501,0)
 ;
"RTN","SAMIHOM3",502,0)
 ;ven/gpl;private;function;clean;silent;sac;tests
"RTN","SAMIHOM3",503,0)
 ;@called-by none
"RTN","SAMIHOM3",504,0)
 ; WSNEWCAS [commented out]
"RTN","SAMIHOM3",505,0)
 ;@calls none
"RTN","SAMIHOM3",506,0)
 ;@input
"RTN","SAMIHOM3",507,0)
 ; nm = name to validate
"RTN","SAMIHOM3",508,0)
 ; .args = array to return error messages
"RTN","SAMIHOM3",509,0)
 ;@output = 1 if valid, -1 if not
"RTN","SAMIHOM3",510,0)
 ;@examples [tbd]
"RTN","SAMIHOM3",511,0)
 ;@tests
"RTN","SAMIHOM3",512,0)
 ; UTVALNM^SAMIUTH3
"RTN","SAMIHOM3",513,0)
 ;
"RTN","SAMIHOM3",514,0)
 ;
"RTN","SAMIHOM3",515,0)
 ;@stanza 2 screen for invalid name
"RTN","SAMIHOM3",516,0)
 ;
"RTN","SAMIHOM3",517,0)
 if nm'["," do  quit -1
"RTN","SAMIHOM3",518,0)
 . set args("saminuerror")="invalid name"
"RTN","SAMIHOM3",519,0)
 . quit
"RTN","SAMIHOM3",520,0)
 ;
"RTN","SAMIHOM3",521,0)
 ;
"RTN","SAMIHOM3",522,0)
 ;@stanza 3 return & termination
"RTN","SAMIHOM3",523,0)
 ;
"RTN","SAMIHOM3",524,0)
 quit 1 ; return success; end of $$VALDTNM
"RTN","SAMIHOM3",525,0)
 ;
"RTN","SAMIHOM3",526,0)
 ;
"RTN","SAMIHOM3",527,0)
 ;
"RTN","SAMIHOM3",528,0)
MKSBFORM(num) ; create background form [deprecated]
"RTN","SAMIHOM3",529,0)
 ;
"RTN","SAMIHOM3",530,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM3",531,0)
 ;
"RTN","SAMIHOM3",532,0)
 ;ven/gpl;private;procedure;clean;silent;sac;tests
"RTN","SAMIHOM3",533,0)
 ;@called-by none
"RTN","SAMIHOM3",534,0)
 ; WSNEWCAS [commented out by gpl 2018-06-15]
"RTN","SAMIHOM3",535,0)
 ;@calls
"RTN","SAMIHOM3",536,0)
 ; $$setroot^%wd
"RTN","SAMIHOM3",537,0)
 ; SSAMISTA^SAMICASE
"RTN","SAMIHOM3",538,0)
 ;@input
"RTN","SAMIHOM3",539,0)
 ; num = index where new form should be built
"RTN","SAMIHOM3",540,0)
 ;@output
"RTN","SAMIHOM3",541,0)
 ; @root(num) = ...
"RTN","SAMIHOM3",542,0)
 ;  where root = graph root for elcap patients
"RTN","SAMIHOM3",543,0)
 ; @root@("graph")
"RTN","SAMIHOM3",544,0)
 ;@examples [tbd]
"RTN","SAMIHOM3",545,0)
 ;@tests
"RTN","SAMIHOM3",546,0)
 ; UTSBFRM^SAMIUTH3
"RTN","SAMIHOM3",547,0)
 ;
"RTN","SAMIHOM3",548,0)
 ;
"RTN","SAMIHOM3",549,0)
 ;@stanza 2 build background form & place graph
"RTN","SAMIHOM3",550,0)
 ;
"RTN","SAMIHOM3",551,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM3",552,0)
 new sid set sid=$get(@root@(num,"samistudyid"))
"RTN","SAMIHOM3",553,0)
 quit:sid=""
"RTN","SAMIHOM3",554,0)
 ;
"RTN","SAMIHOM3",555,0)
 new cdate set cdate=$get(@root@(num,"samicreatedate"))
"RTN","SAMIHOM3",556,0)
 quit:cdate=""
"RTN","SAMIHOM3",557,0)
 ;
"RTN","SAMIHOM3",558,0)
 merge @root@("graph",sid,"sbform-"_cdate)=@root@(num)
"RTN","SAMIHOM3",559,0)
 ;
"RTN","SAMIHOM3",560,0)
 ; update form samistatus to complete
"RTN","SAMIHOM3",561,0)
 do SSAMISTA^SAMICASE(sid,"sbform-"_cdate,"incomplete")
"RTN","SAMIHOM3",562,0)
 ;
"RTN","SAMIHOM3",563,0)
 ;
"RTN","SAMIHOM3",564,0)
 ;@stanza 3 termination
"RTN","SAMIHOM3",565,0)
 ;
"RTN","SAMIHOM3",566,0)
 quit  ; end of MKSBFORM
"RTN","SAMIHOM3",567,0)
 ;
"RTN","SAMIHOM3",568,0)
 ;
"RTN","SAMIHOM3",569,0)
 ;
"RTN","SAMIHOM3",570,0)
ADDPAT(dfn) ; calls newCase to add patient dfn to vapals
"RTN","SAMIHOM3",571,0)
 ;
"RTN","SAMIHOM3",572,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM3",573,0)
 ;
"RTN","SAMIHOM3",574,0)
 ;;private;procedure;clean;silent;sac;tests
"RTN","SAMIHOM3",575,0)
 ;@called-by none
"RTN","SAMIHOM3",576,0)
 ;@calls
"RTN","SAMIHOM3",577,0)
 ; $$setroot^%wd
"RTN","SAMIHOM3",578,0)
 ; WSNEWCAS
"RTN","SAMIHOM3",579,0)
 ;@falls-thru-to
"RTN","SAMIHOM3",580,0)
 ; INDEX
"RTN","SAMIHOM3",581,0)
 ;@input
"RTN","SAMIHOM3",582,0)
 ; dfn = patient ien
"RTN","SAMIHOM3",583,0)
 ;@output
"RTN","SAMIHOM3",584,0)
 ; new patient is added to vapals graphstore
"RTN","SAMIHOM3",585,0)
 ;@tests
"RTN","SAMIHOM3",586,0)
 ; UTADDPT^SAMIUTH3
"RTN","SAMIHOM3",587,0)
 ;
"RTN","SAMIHOM3",588,0)
 ;
"RTN","SAMIHOM3",589,0)
 ;@stanza 2 add patient to graphstore
"RTN","SAMIHOM3",590,0)
 ;
"RTN","SAMIHOM3",591,0)
 new lroot set lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM3",592,0)
 new lien set lien=$order(@lroot@("dfn",dfn,""))
"RTN","SAMIHOM3",593,0)
 quit:lien=""
"RTN","SAMIHOM3",594,0)
 ;
"RTN","SAMIHOM3",595,0)
 new name set name=$get(@lroot@(lien,"saminame"))
"RTN","SAMIHOM3",596,0)
 quit:name=""
"RTN","SAMIHOM3",597,0)
 ;
"RTN","SAMIHOM3",598,0)
 new bdy set bdy(1)="saminame="_name_"&dfn="_dfn
"RTN","SAMIHOM3",599,0)
 new ARGS,result
"RTN","SAMIHOM3",600,0)
 ;
"RTN","SAMIHOM3",601,0)
 do WSNEWCAS(.ARGS,.bdy,.result) ; add to graphstore
"RTN","SAMIHOM3",602,0)
 ; zwrite result
"RTN","SAMIHOM3",603,0)
 ;
"RTN","SAMIHOM3",604,0)
 ;
"RTN","SAMIHOM3",605,0)
INDEX ;@stanza 3 reindex vapals-patients graph
"RTN","SAMIHOM3",606,0)
 ;
"RTN","SAMIHOM3",607,0)
 ;@falls-thru-from
"RTN","SAMIHOM3",608,0)
 ; ADDPAT
"RTN","SAMIHOM3",609,0)
 ;
"RTN","SAMIHOM3",610,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM3",611,0)
 ;
"RTN","SAMIHOM3",612,0)
 new zi set zi=0
"RTN","SAMIHOM3",613,0)
 for  do  quit:+zi=0
"RTN","SAMIHOM3",614,0)
 . set zi=$order(@root@(zi))
"RTN","SAMIHOM3",615,0)
 . quit:+zi=0
"RTN","SAMIHOM3",616,0)
 . ;
"RTN","SAMIHOM3",617,0)
 . new dfn set dfn=@root@(zi,"dfn") ; patient ien
"RTN","SAMIHOM3",618,0)
 . new sid set sid=@root@(zi,"samistudyid") ; study id
"RTN","SAMIHOM3",619,0)
 . set @root@("dfn",dfn,zi)="" ; patient ien index
"RTN","SAMIHOM3",620,0)
 . set @root@("sid",sid,zi)="" ; study id index
"RTN","SAMIHOM3",621,0)
 . quit
"RTN","SAMIHOM3",622,0)
 ;
"RTN","SAMIHOM3",623,0)
 ;
"RTN","SAMIHOM3",624,0)
 ;@stanza 3 termination
"RTN","SAMIHOM3",625,0)
 ;
"RTN","SAMIHOM3",626,0)
 quit  ; end of ADDPAT-INDEX
"RTN","SAMIHOM3",627,0)
 ;
"RTN","SAMIHOM3",628,0)
 ;
"RTN","SAMIHOM3",629,0)
 ;
"RTN","SAMIHOM3",630,0)
EOR ; end of routine SAMIHOM3
"RTN","SAMIHOM4")
0^34^B899951012
"RTN","SAMIHOM4",1,0)
SAMIHOM4 ;ven/gpl,arc - homepage web services ;2021-06-16t18:09z
"RTN","SAMIHOM4",2,0)
 ;;18.0;SAMI;**1,4,5,6,9,12**;;Build 1
"RTN","SAMIHOM4",3,0)
 ;;18.12
"RTN","SAMIHOM4",4,0)
 ;
"RTN","SAMIHOM4",5,0)
 ; SAMIHOM4 contains web services & other subroutines for producing
"RTN","SAMIHOM4",6,0)
 ; the ELCAP Home Page.
"RTN","SAMIHOM4",7,0)
 ;
"RTN","SAMIHOM4",8,0)
 quit  ; no entry from top
"RTN","SAMIHOM4",9,0)
 ;
"RTN","SAMIHOM4",10,0)
 ;
"RTN","SAMIHOM4",11,0)
 ;
"RTN","SAMIHOM4",12,0)
 ;@section 0 primary development
"RTN","SAMIHOM4",13,0)
 ;
"RTN","SAMIHOM4",14,0)
 ;
"RTN","SAMIHOM4",15,0)
 ;
"RTN","SAMIHOM4",16,0)
 ;@license see routine SAMIUL
"RTN","SAMIHOM4",17,0)
 ;@documentation see SAMIHUL
"RTN","SAMIHOM4",18,0)
 ;@contents
"RTN","SAMIHOM4",19,0)
 ;
"RTN","SAMIHOM4",20,0)
 ;  web service get vapals & related subroutines
"RTN","SAMIHOM4",21,0)
 ;
"RTN","SAMIHOM4",22,0)
 ; WSHOME code for wsi WSHOME^SAMIHOM3
"RTN","SAMIHOM4",23,0)
 ;    get vapals (vapals-elcap homepage)
"RTN","SAMIHOM4",24,0)
 ; DEVHOME code for wpi DEVHOME^SAMIHOM3
"RTN","SAMIHOM4",25,0)
 ;    development home page
"RTN","SAMIHOM4",26,0)
 ; GETHOME code for wpi GETHOME^SAMIHOM3
"RTN","SAMIHOM4",27,0)
 ;    get homepage (not subsequent visit)
"RTN","SAMIHOM4",28,0)
 ;
"RTN","SAMIHOM4",29,0)
 ;  web service post vapals & related subroutines
"RTN","SAMIHOM4",30,0)
 ;
"RTN","SAMIHOM4",31,0)
 ; WSVAPALS code for wsi WSVAPALS^SAMIHOM3
"RTN","SAMIHOM4",32,0)
 ;    post vapals (main gateway)
"RTN","SAMIHOM4",33,0)
 ;
"RTN","SAMIHOM4",34,0)
 ;  other
"RTN","SAMIHOM4",35,0)
 ;
"RTN","SAMIHOM4",36,0)
 ; REG manual registration
"RTN","SAMIHOM4",37,0)
 ; MKPTLK creates patient-lookup record
"RTN","SAMIHOM4",38,0)
 ; UPDTFRMS update demographics in all forms for patient
"RTN","SAMIHOM4",39,0)
 ; MERGE merge participant records
"RTN","SAMIHOM4",40,0)
 ; ADDUNMAT adds unmatched report web service to system
"RTN","SAMIHOM4",41,0)
 ; DELUNMAT deletes unmatched web service
"RTN","SAMIHOM4",42,0)
 ; WSUNMAT navigates to unmatched report
"RTN","SAMIHOM4",43,0)
 ; $$DUPSSN true if duplicate ssn
"RTN","SAMIHOM4",44,0)
 ; $$DUPICN true if duplicate icn
"RTN","SAMIHOM4",45,0)
 ; $$BADICN true if ICN checkdigits are wrong
"RTN","SAMIHOM4",46,0)
 ; SAVE save patient-lookup record after edit
"RTN","SAMIHOM4",47,0)
 ; $$REMATCH possible match ien
"RTN","SAMIHOM4",48,0)
 ; SETINFO set information message text
"RTN","SAMIHOM4",49,0)
 ; SETWARN set warning message text
"RTN","SAMIHOM4",50,0)
 ; RTNERR redisplay page w/error message
"RTN","SAMIHOM4",51,0)
 ; RTNPAGE display page
"RTN","SAMIHOM4",52,0)
 ; REINDXPL reindex patient lookup
"RTN","SAMIHOM4",53,0)
 ; INDXPTLK generate index entries in patient-lookup graph
"RTN","SAMIHOM4",54,0)
 ; UNINDXPT remove index entries from patient-lookup graph
"RTN","SAMIHOM4",55,0)
 ; $$UCASE uppercase
"RTN","SAMIHOM4",56,0)
 ; WSNEWCAS code for wr newcase (creates new case)
"RTN","SAMIHOM4",57,0)
 ;
"RTN","SAMIHOM4",58,0)
 ;@to-do
"RTN","SAMIHOM4",59,0)
 ; Add label comments
"RTN","SAMIHOM4",60,0)
 ;
"RTN","SAMIHOM4",61,0)
 ;
"RTN","SAMIHOM4",62,0)
 ;
"RTN","SAMIHOM4",63,0)
 ;@section 1 web service get vapals & related subroutines
"RTN","SAMIHOM4",64,0)
 ;
"RTN","SAMIHOM4",65,0)
 ;
"RTN","SAMIHOM4",66,0)
 ;
"RTN","SAMIHOM4",67,0)
 ;@wsi-code WSHOME^SAMIHOM3
"RTN","SAMIHOM4",68,0)
WSHOME ; get vapals (vapals-elcap homepage)
"RTN","SAMIHOM4",69,0)
 ;
"RTN","SAMIHOM4",70,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM4",71,0)
 ;
"RTN","SAMIHOM4",72,0)
 ;ven/gpl;wsi;procedure;clean;silent;sac;tests
"RTN","SAMIHOM4",73,0)
 ;@signature
"RTN","SAMIHOM4",74,0)
 ; do WSHOME^SAMIHOM3(SAMIRTN,SAMIFILTER)
"RTN","SAMIHOM4",75,0)
 ;@branches-from
"RTN","SAMIHOM4",76,0)
 ; WSHOME^SAMIHOM3
"RTN","SAMIHOM4",77,0)
 ;@wsi-called-by
"RTN","SAMIHOM4",78,0)
 ; web service get vapals
"RTN","SAMIHOM4",79,0)
 ; WSVAPALS^SAMIHOM4
"RTN","SAMIHOM4",80,0)
 ; LOGIN^SAMISITE
"RTN","SAMIHOM4",81,0)
 ;@called-by none
"RTN","SAMIHOM4",82,0)
 ;@calls
"RTN","SAMIHOM4",83,0)
 ; DEVHOME^SAMIHOM3
"RTN","SAMIHOM4",84,0)
 ; WSVAPALS^SAMIHOM3
"RTN","SAMIHOM4",85,0)
 ; GETHOME^SAMIHOM3
"RTN","SAMIHOM4",86,0)
 ;@input
"RTN","SAMIHOM4",87,0)
 ; SAMIFILTER (no parameters required)
"RTN","SAMIHOM4",88,0)
 ;@output
"RTN","SAMIHOM4",89,0)
 ; .SAMIRTN
"RTN","SAMIHOM4",90,0)
 ;@examples [tbd]
"RTN","SAMIHOM4",91,0)
 ;@tests
"RTN","SAMIHOM4",92,0)
 ; UTWSHM^SAMIUTH3
"RTN","SAMIHOM4",93,0)
 ; UTWSHM1^SAMIUTH3
"RTN","SAMIHOM4",94,0)
 ; UTWSHM2^SAMIUTH3
"RTN","SAMIHOM4",95,0)
 ;
"RTN","SAMIHOM4",96,0)
 ;
"RTN","SAMIHOM4",97,0)
 ;@stanza 2 route to appropriate homepage or bypass to other webpage
"RTN","SAMIHOM4",98,0)
 ;
"RTN","SAMIHOM4",99,0)
 ; present development homepage for testing
"RTN","SAMIHOM4",100,0)
 if $get(SAMIFILTER("test"))=1 do  quit
"RTN","SAMIHOM4",101,0)
 . do DEVHOME^SAMIHOM3(.SAMIRTN,.SAMIFILTER)
"RTN","SAMIHOM4",102,0)
 . quit
"RTN","SAMIHOM4",103,0)
 ;
"RTN","SAMIHOM4",104,0)
 ; bypass for get access to pages
"RTN","SAMIHOM4",105,0)
 if $g(SAMIFILTER("samiroute"))'="" do  quit
"RTN","SAMIHOM4",106,0)
 . new SAMIBODY set SAMIBODY(1)=""
"RTN","SAMIHOM4",107,0)
 . do WSVAPALS^SAMIHOM3(.SAMIFILTER,.SAMIBODY,.SAMIRTN)
"RTN","SAMIHOM4",108,0)
 . quit
"RTN","SAMIHOM4",109,0)
 ;
"RTN","SAMIHOM4",110,0)
 ; V4W/DLW - bypass for get access from CPRS
"RTN","SAMIHOM4",111,0)
 if $get(SAMIFILTER("dfn"))'="" do  quit
"RTN","SAMIHOM4",112,0)
 . new dfn set dfn=$get(SAMIFILTER("dfn"))
"RTN","SAMIHOM4",113,0)
 . new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM4",114,0)
 . new studyid set studyid=$get(@root@(dfn,"samistudyid"))
"RTN","SAMIHOM4",115,0)
 . new SAMIBODY
"RTN","SAMIHOM4",116,0)
 . if studyid'="" do
"RTN","SAMIHOM4",117,0)
 . . set SAMIBODY(1)="samiroute=casereview&dfn="_dfn_"&studyid="_studyid
"RTN","SAMIHOM4",118,0)
 . . quit
"RTN","SAMIHOM4",119,0)
 . else  do
"RTN","SAMIHOM4",120,0)
 . . set SAMIBODY(1)="samiroute=lookup&dfn="_dfn_"&studyid="_studyid
"RTN","SAMIHOM4",121,0)
 . . quit
"RTN","SAMIHOM4",122,0)
 . do WSVAPALS^SAMIHOM3(.SAMIFILTER,.SAMIBODY,.SAMIRTN)
"RTN","SAMIHOM4",123,0)
 . quit
"RTN","SAMIHOM4",124,0)
 ;
"RTN","SAMIHOM4",125,0)
 ; default to VAPALS homepage
"RTN","SAMIHOM4",126,0)
 do GETHOME^SAMIHOM3(.SAMIRTN,.SAMIFILTER)
"RTN","SAMIHOM4",127,0)
 ;
"RTN","SAMIHOM4",128,0)
 ;
"RTN","SAMIHOM4",129,0)
 ;@stanza 3 termination
"RTN","SAMIHOM4",130,0)
 ;
"RTN","SAMIHOM4",131,0)
 quit  ; end of wsi WSHOME^SAMIHOM3
"RTN","SAMIHOM4",132,0)
 ;
"RTN","SAMIHOM4",133,0)
 ;
"RTN","SAMIHOM4",134,0)
 ;
"RTN","SAMIHOM4",135,0)
 ;@wpi-code DEVHOME^SAMIHOM3
"RTN","SAMIHOM4",136,0)
DEVHOME ; development home page
"RTN","SAMIHOM4",137,0)
 ;
"RTN","SAMIHOM4",138,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM4",139,0)
 ;
"RTN","SAMIHOM4",140,0)
 ;ven/gpl;wpi;procedure;clean;silent;sac;tests
"RTN","SAMIHOM4",141,0)
 ;@signature
"RTN","SAMIHOM4",142,0)
 ; do DEVHOME^SAMIHOM3(SAMIRTN,SAMIFILTER)
"RTN","SAMIHOM4",143,0)
 ;@branches-from
"RTN","SAMIHOM4",144,0)
 ; DEVHOME^SAMIHOM3
"RTN","SAMIHOM4",145,0)
 ;@wpi-called-by
"RTN","SAMIHOM4",146,0)
 ; wsi WSHOME^SAMIHOM3 [web service get vapals]
"RTN","SAMIHOM4",147,0)
 ;@called-by none
"RTN","SAMIHOM4",148,0)
 ;@calls
"RTN","SAMIHOM4",149,0)
 ; htmltb2^%yottaweb
"RTN","SAMIHOM4",150,0)
 ; PATLIST^SAMIHOM3
"RTN","SAMIHOM4",151,0)
 ; genhtml^%yottautl
"RTN","SAMIHOM4",152,0)
 ; addary^%yottautl
"RTN","SAMIHOM4",153,0)
 ;@input
"RTN","SAMIHOM4",154,0)
 ; SAMIFILTER =
"RTN","SAMIHOM4",155,0)
 ;@output
"RTN","SAMIHOM4",156,0)
 ;.SAMIRTN =
"RTN","SAMIHOM4",157,0)
 ;@examples [tbd]
"RTN","SAMIHOM4",158,0)
 ;@tests [tbd]
"RTN","SAMIHOM4",159,0)
 ;
"RTN","SAMIHOM4",160,0)
 ;
"RTN","SAMIHOM4",161,0)
 ;@stanza 2 present development homepage
"RTN","SAMIHOM4",162,0)
 ;
"RTN","SAMIHOM4",163,0)
 new gtop,gbot
"RTN","SAMIHOM4",164,0)
 do htmltb2^%yottaweb(.gtop,.gbot,"SAMI Test Patients")
"RTN","SAMIHOM4",165,0)
 ;
"RTN","SAMIHOM4",166,0)
 new html,ary,hpat
"RTN","SAMIHOM4",167,0)
 do PATLIST^SAMIHOM3("hpat")
"RTN","SAMIHOM4",168,0)
 quit:'$data(hpat)
"RTN","SAMIHOM4",169,0)
 ;
"RTN","SAMIHOM4",170,0)
 set ary("title")="SAMI Test Patients on this system"
"RTN","SAMIHOM4",171,0)
 set ary("header",1)="StudyId"
"RTN","SAMIHOM4",172,0)
 set ary("header",2)="Name"
"RTN","SAMIHOM4",173,0)
 ;
"RTN","SAMIHOM4",174,0)
 new cnt set cnt=0
"RTN","SAMIHOM4",175,0)
 new zi set zi=""
"RTN","SAMIHOM4",176,0)
 for  do  quit:zi=""
"RTN","SAMIHOM4",177,0)
 . set zi=$order(hpat(zi))
"RTN","SAMIHOM4",178,0)
 . quit:zi=""
"RTN","SAMIHOM4",179,0)
 . ;
"RTN","SAMIHOM4",180,0)
 . set cnt=cnt+1
"RTN","SAMIHOM4",181,0)
 . new url set url="<a href=""/cform.cgi?studyId="_zi_""">"_zi_"</a>"
"RTN","SAMIHOM4",182,0)
 . set ary(cnt,1)=url
"RTN","SAMIHOM4",183,0)
 . set ary(cnt,2)=""
"RTN","SAMIHOM4",184,0)
 . quit
"RTN","SAMIHOM4",185,0)
 ;
"RTN","SAMIHOM4",186,0)
 do genhtml^%yottautl("html","ary")
"RTN","SAMIHOM4",187,0)
 ;
"RTN","SAMIHOM4",188,0)
 do addary^%yottautl("SAMIRTN","gtop")
"RTN","SAMIHOM4",189,0)
 do addary^%yottautl("SAMIRTN","html")
"RTN","SAMIHOM4",190,0)
 set SAMIRTN($order(SAMIRTN(""),-1)+1)=gbot
"RTN","SAMIHOM4",191,0)
 kill SAMIRTN(0)
"RTN","SAMIHOM4",192,0)
 ;
"RTN","SAMIHOM4",193,0)
 set HTTPRSP("mime")="text/html"
"RTN","SAMIHOM4",194,0)
 ;
"RTN","SAMIHOM4",195,0)
 ;
"RTN","SAMIHOM4",196,0)
 ;@stanza 3 termination
"RTN","SAMIHOM4",197,0)
 ;
"RTN","SAMIHOM4",198,0)
 quit  ; end of wpi DEVHOME^SAMIHOM3
"RTN","SAMIHOM4",199,0)
 ;
"RTN","SAMIHOM4",200,0)
 ;
"RTN","SAMIHOM4",201,0)
 ;
"RTN","SAMIHOM4",202,0)
 ;@wpi-code GETHOME^SAMIHOM3
"RTN","SAMIHOM4",203,0)
GETHOME ; get homepage (not subsequent visit)
"RTN","SAMIHOM4",204,0)
 ;
"RTN","SAMIHOM4",205,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM4",206,0)
 ;
"RTN","SAMIHOM4",207,0)
 ;ven/gpl;wpi;procedure;clean;silent;sac;tests
"RTN","SAMIHOM4",208,0)
 ;@signature
"RTN","SAMIHOM4",209,0)
 ; do GETHOME^SAMIHOM3(SAMIRTN,SAMIFILTER)
"RTN","SAMIHOM4",210,0)
 ;@branches-from
"RTN","SAMIHOM4",211,0)
 ; GETHOME^SAMIHOM3
"RTN","SAMIHOM4",212,0)
 ;@wpi-called-by
"RTN","SAMIHOM4",213,0)
 ; WSHOME
"RTN","SAMIHOM4",214,0)
 ; WSVAPALS
"RTN","SAMIHOM4",215,0)
 ; SAVE
"RTN","SAMIHOM4",216,0)
 ;  WSNEWCAS [commented out]
"RTN","SAMIHOM4",217,0)
 ; WSNFPOST^SAMICAS3
"RTN","SAMIHOM4",218,0)
 ; WSLOOKUP^SAMISRC2
"RTN","SAMIHOM4",219,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIHOM4",220,0)
 ; WSREPORT^SAMIUR1
"RTN","SAMIHOM4",221,0)
 ;@called-by none
"RTN","SAMIHOM4",222,0)
 ;@calls
"RTN","SAMIHOM4",223,0)
 ; $$FINDSITE^SAMISITE
"RTN","SAMIHOM4",224,0)
 ; GETTMPL^SAMICASE
"RTN","SAMIHOM4",225,0)
 ; MERGEHTM^%wf
"RTN","SAMIHOM4",226,0)
 ; ADDCRLF^VPRJRUT
"RTN","SAMIHOM4",227,0)
 ;@input
"RTN","SAMIHOM4",228,0)
 ; SAMIFILTER
"RTN","SAMIHOM4",229,0)
 ;@output
"RTN","SAMIHOM4",230,0)
 ; .SAMIRTN
"RTN","SAMIHOM4",231,0)
 ;@examples [tbd]
"RTN","SAMIHOM4",232,0)
 ;@tests
"RTN","SAMIHOM4",233,0)
 ; UTGETHM^SAMIUTH3
"RTN","SAMIHOM4",234,0)
 ; UTSCAN4^SAMIUTH3
"RTN","SAMIHOM4",235,0)
 ;
"RTN","SAMIHOM4",236,0)
 ;
"RTN","SAMIHOM4",237,0)
 ;@stanza 2 get template for homepage
"RTN","SAMIHOM4",238,0)
 ;
"RTN","SAMIHOM4",239,0)
 ; Processing for multi-tenancy
"RTN","SAMIHOM4",240,0)
 ;
"RTN","SAMIHOM4",241,0)
 if $get(SAMIFILTER("siteid"))="" if '$$FINDSITE^SAMISITE(.SAMIRTN,.SAMIFILTER) quit 0
"RTN","SAMIHOM4",242,0)
 new SAMISITE,SAMITITL
"RTN","SAMIHOM4",243,0)
 set SAMISITE=$get(SAMIFILTER("siteid"))
"RTN","SAMIHOM4",244,0)
 set SAMITITL=$get(SAMIFILTER("sitetitle"))
"RTN","SAMIHOM4",245,0)
 ;
"RTN","SAMIHOM4",246,0)
 new temp,tout,form
"RTN","SAMIHOM4",247,0)
 set form="vapals:home"
"RTN","SAMIHOM4",248,0)
 do GETTMPL^SAMICASE("temp",form)
"RTN","SAMIHOM4",249,0)
 quit:'$data(temp)
"RTN","SAMIHOM4",250,0)
 ;
"RTN","SAMIHOM4",251,0)
 ;
"RTN","SAMIHOM4",252,0)
 ;@stanza 3 process homepage template
"RTN","SAMIHOM4",253,0)
 ;
"RTN","SAMIHOM4",254,0)
 new err
"RTN","SAMIHOM4",255,0)
 do MERGEHTM^%wf(.temp,.SAMIFILTER,.err)
"RTN","SAMIHOM4",256,0)
 ;
"RTN","SAMIHOM4",257,0)
 do ADDCRLF^VPRJRUT(.temp)
"RTN","SAMIHOM4",258,0)
 merge SAMIRTN=temp
"RTN","SAMIHOM4",259,0)
 ;
"RTN","SAMIHOM4",260,0)
 ;
"RTN","SAMIHOM4",261,0)
 ;@stanza 4 termination
"RTN","SAMIHOM4",262,0)
 ;
"RTN","SAMIHOM4",263,0)
 quit  ; end of wpi GETHOME^SAMIHOM3
"RTN","SAMIHOM4",264,0)
 ;
"RTN","SAMIHOM4",265,0)
 ;
"RTN","SAMIHOM4",266,0)
 ;
"RTN","SAMIHOM4",267,0)
 ; below is redacted from GETHOME^SAMIHOM3
"RTN","SAMIHOM4",268,0)
 ;
"RTN","SAMIHOM4",269,0)
 ;@old-calls
"RTN","SAMIHOM4",270,0)
 ; FIXHREF^SAMIFORM
"RTN","SAMIHOM4",271,0)
 ; FIXSRC^SAMIFORM
"RTN","SAMIHOM4",272,0)
 ; $$GET^XPAR
"RTN","SAMIHOM4",273,0)
 ; findReplace^%ts
"RTN","SAMIHOM4",274,0)
 ; ADDCRLF^VPRJRUT
"RTN","SAMIHOM4",275,0)
 ;
"RTN","SAMIHOM4",276,0)
 new cnt set cnt=0
"RTN","SAMIHOM4",277,0)
 new zi set zi=0
"RTN","SAMIHOM4",278,0)
 for  set zi=$order(temp(zi)) quit:+zi=0  do  ;
"RTN","SAMIHOM4",279,0)
 . ;
"RTN","SAMIHOM4",280,0)
 . n ln s ln=temp(zi)
"RTN","SAMIHOM4",281,0)
 . n touched s touched=0
"RTN","SAMIHOM4",282,0)
 . ;
"RTN","SAMIHOM4",283,0)
 . i ln["href" i 'touched d  ;
"RTN","SAMIHOM4",284,0)
 . . d FIXHREF^SAMIFORM(.ln)
"RTN","SAMIHOM4",285,0)
 . . s temp(zi)=ln
"RTN","SAMIHOM4",286,0)
 . ;
"RTN","SAMIHOM4",287,0)
 . i ln["src" d  ;
"RTN","SAMIHOM4",288,0)
 . . d FIXSRC^SAMIFORM(.ln)
"RTN","SAMIHOM4",289,0)
 . . s temp(zi)=ln
"RTN","SAMIHOM4",290,0)
 . ;
"RTN","SAMIHOM4",291,0)
 . i ln["id" i ln["studyIdMenu" d  ;
"RTN","SAMIHOM4",292,0)
 . . s zi=zi+4
"RTN","SAMIHOM4",293,0)
 . ;
"RTN","SAMIHOM4",294,0)
 . if ln["@@MANUALREGISTRATION@@" do  ; turn off manual registration
"RTN","SAMIHOM4",295,0)
 . . n setman,setparm
"RTN","SAMIHOM4",296,0)
 . . s setman="true"
"RTN","SAMIHOM4",297,0)
 . . s setparm=$$GET^XPAR("SYS","SAMI ALLOW MANUAL ENTRY",,"Q")
"RTN","SAMIHOM4",298,0)
 . . i setparm=0 s setman="false"
"RTN","SAMIHOM4",299,0)
 . . do findReplace^%ts(.ln,"@@MANUALREGISTRATION@@",setman)
"RTN","SAMIHOM4",300,0)
 . . s temp(zi)=ln
"RTN","SAMIHOM4",301,0)
 . . quit 
"RTN","SAMIHOM4",302,0)
 . set cnt=cnt+1
"RTN","SAMIHOM4",303,0)
 . set tout(cnt)=temp(zi)
"RTN","SAMIHOM4",304,0)
 . quit
"RTN","SAMIHOM4",305,0)
 ;
"RTN","SAMIHOM4",306,0)
 ;
"RTN","SAMIHOM4",307,0)
 ;@old-stanza 4 add cr/lf & save to return array
"RTN","SAMIHOM4",308,0)
 ;
"RTN","SAMIHOM4",309,0)
 do ADDCRLF^VPRJRUT(.tout)
"RTN","SAMIHOM4",310,0)
 merge SAMIRTN=tout
"RTN","SAMIHOM4",311,0)
 ;
"RTN","SAMIHOM4",312,0)
 ;
"RTN","SAMIHOM4",313,0)
 ;@old-stanza 5 termination
"RTN","SAMIHOM4",314,0)
 ;
"RTN","SAMIHOM4",315,0)
 quit  ; old end of wpi GETHOME^SAMIHOM3
"RTN","SAMIHOM4",316,0)
 ;
"RTN","SAMIHOM4",317,0)
 ;
"RTN","SAMIHOM4",318,0)
 ;
"RTN","SAMIHOM4",319,0)
 ;@section 2 web service post vapals & related subroutines
"RTN","SAMIHOM4",320,0)
 ;
"RTN","SAMIHOM4",321,0)
 ;
"RTN","SAMIHOM4",322,0)
 ;
"RTN","SAMIHOM4",323,0)
 ;@wsi-code WSVAPALS^SAMIHOM3
"RTN","SAMIHOM4",324,0)
WSVAPALS ; post vapals (main gateway)
"RTN","SAMIHOM4",325,0)
 ;
"RTN","SAMIHOM4",326,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM4",327,0)
 ;
"RTN","SAMIHOM4",328,0)
 ;ven/gpl;wsi;procedure;clean;silent;sac;tests
"RTN","SAMIHOM4",329,0)
 ;@signature
"RTN","SAMIHOM4",330,0)
 ; do WSVAPALS^SAMIHOM3(SAMIARG,SAMIBODY,SAMIRESULT)
"RTN","SAMIHOM4",331,0)
 ;@branches-from
"RTN","SAMIHOM4",332,0)
 ; WSVAPALS^SAMIHOM3
"RTN","SAMIHOM4",333,0)
 ;@wsi-called-by
"RTN","SAMIHOM4",334,0)
 ;@called-by
"RTN","SAMIHOM4",335,0)
 ;@calls
"RTN","SAMIHOM4",336,0)
 ;@input [tbd]
"RTN","SAMIHOM4",337,0)
 ;@output [tbd]
"RTN","SAMIHOM4",338,0)
 ;@examples [tbd]
"RTN","SAMIHOM4",339,0)
 ;@tests [tbd]
"RTN","SAMIHOM4",340,0)
 ;
"RTN","SAMIHOM4",341,0)
 ; all calls come through this gateway
"RTN","SAMIHOM4",342,0)
 ;
"RTN","SAMIHOM4",343,0)
 k ^SAMIUL("vapals")
"RTN","SAMIHOM4",344,0)
 m ^SAMIUL("vapals")=SAMIARG
"RTN","SAMIHOM4",345,0)
 m ^SAMIUL("vapals","BODY")=SAMIBODY
"RTN","SAMIHOM4",346,0)
 ;
"RTN","SAMIHOM4",347,0)
 new vars,SAMIBDY
"RTN","SAMIHOM4",348,0)
 set SAMIBDY=$get(SAMIBODY(1))
"RTN","SAMIHOM4",349,0)
 do parseBody^%wf("vars",.SAMIBDY)
"RTN","SAMIHOM4",350,0)
 m vars=SAMIARG
"RTN","SAMIHOM4",351,0)
 i $g(vars("siteid"))'="" d  ;
"RTN","SAMIHOM4",352,0)
 . i $g(vars("site"))'=$g(vars("siteid")) s vars("site")=$g(vars("siteid"))
"RTN","SAMIHOM4",353,0)
 m SAMIARG=vars
"RTN","SAMIHOM4",354,0)
 m SAMIARG=SAMIBODY
"RTN","SAMIHOM4",355,0)
 ;
"RTN","SAMIHOM4",356,0)
 ; Processing for multi-tenancy
"RTN","SAMIHOM4",357,0)
 ;
"RTN","SAMIHOM4",358,0)
 if '$d(vars("siteid")) d  ;
"RTN","SAMIHOM4",359,0)
 . if $g(vars("studyid"))="" q
"RTN","SAMIHOM4",360,0)
 . n sym s sym=$e(vars("studyid"),1,3) ; first 3 chars in studyid
"RTN","SAMIHOM4",361,0)
 . i $$SITENM2^SAMISITE(sym)=-1 q
"RTN","SAMIHOM4",362,0)
 . s vars("siteid")=sym
"RTN","SAMIHOM4",363,0)
 . s vars("site")=sym
"RTN","SAMIHOM4",364,0)
 ;
"RTN","SAMIHOM4",365,0)
 if $G(vars("site"))'="" d  ;
"RTN","SAMIHOM4",366,0)
 . n siteid s siteid=vars("site")
"RTN","SAMIHOM4",367,0)
 . s SAMIARG("siteid")=siteid
"RTN","SAMIHOM4",368,0)
 . s SAMIARG("sitetitle")=$$SITENM2^SAMISITE(siteid)_" - "_siteid
"RTN","SAMIHOM4",369,0)
 k ^gpl("siteselect")
"RTN","SAMIHOM4",370,0)
 m ^gpl("siteselect")=SAMIARG
"RTN","SAMIHOM4",371,0)
 m ^gpl("siteselect","vars")=vars
"RTN","SAMIHOM4",372,0)
 if $G(SAMIARG("siteid"))="" if '$$FINDSITE^SAMISITE(.SAMIRESULT,.SAMIARG) Q 0
"RTN","SAMIHOM4",373,0)
 new SAMISITE,SAMITITL
"RTN","SAMIHOM4",374,0)
 s SAMISITE=$G(SAMIARG("siteid"))
"RTN","SAMIHOM4",375,0)
 i $G(SAMIARG("sitetitle"))="" d  ;
"RTN","SAMIHOM4",376,0)
 . s SAMIARG("sitetitle")=$$SITENM2^SAMISITE(SAMISITE)_" - "_SAMISITE
"RTN","SAMIHOM4",377,0)
 s SAMITITL=$G(SAMIARG("sitetitle"))
"RTN","SAMIHOM4",378,0)
 m vars=SAMIARG
"RTN","SAMIHOM4",379,0)
 ;
"RTN","SAMIHOM4",380,0)
 k ^SAMIUL("vapals","vars")
"RTN","SAMIHOM4",381,0)
 merge ^SAMIUL("vapals","vars")=vars
"RTN","SAMIHOM4",382,0)
 merge ^SAMIUL("vapals","vars")=SAMIBODY
"RTN","SAMIHOM4",383,0)
 ;
"RTN","SAMIHOM4",384,0)
 n route s route=$g(vars("samiroute"))
"RTN","SAMIHOM4",385,0)
 i route=""  d GETHOME^SAMIHOM3(.SAMIRESULT,.SAMIARG) ; on error go home
"RTN","SAMIHOM4",386,0)
 ;
"RTN","SAMIHOM4",387,0)
 i route="lookup" d  q 0
"RTN","SAMIHOM4",388,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",389,0)
 . d WSLOOKUP^SAMISRC2(.SAMIARG,.SAMIBODY,.SAMIRESULT)
"RTN","SAMIHOM4",390,0)
 ;
"RTN","SAMIHOM4",391,0)
 i route="login" d  q 0
"RTN","SAMIHOM4",392,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",393,0)
 . d LOGIN^SAMISITE(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",394,0)
 ;
"RTN","SAMIHOM4",395,0)
 i route="home" d  q 0
"RTN","SAMIHOM4",396,0)
 . k ^gpl("home")
"RTN","SAMIHOM4",397,0)
 . m ^gpl("home")=SAMIARG
"RTN","SAMIHOM4",398,0)
 . s SAMIARG("samiroute")=""
"RTN","SAMIHOM4",399,0)
 . d WSHOME^SAMIHOM3(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",400,0)
 ;
"RTN","SAMIHOM4",401,0)
 i route="logout" d  q 0
"RTN","SAMIHOM4",402,0)
 . ;s SAMIARG("samiroute")="home"
"RTN","SAMIHOM4",403,0)
 . ;do WSVAPALS^SAMIHOM3(.SAMIFILTER,.SAMIARG,.SAMIRESULT)
"RTN","SAMIHOM4",404,0)
 . ;Q
"RTN","SAMIHOM4",405,0)
 . s SAMIARG("sitetitle")="Unknown Site"
"RTN","SAMIHOM4",406,0)
 . s SAMIARG("siteid")=""
"RTN","SAMIHOM4",407,0)
 . s SAMIARG("errorMessage")=""
"RTN","SAMIHOM4",408,0)
 . d RTNERR^SAMIHOM4(.SAMIRESULT,"vapals:login",.SAMIARG)
"RTN","SAMIHOM4",409,0)
 ;
"RTN","SAMIHOM4",410,0)
 i route="newcase" d  q 0
"RTN","SAMIHOM4",411,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",412,0)
 . d WSNEWCAS^SAMIHOM3(.SAMIARG,.SAMIBODY,.SAMIRESULT)
"RTN","SAMIHOM4",413,0)
 ;
"RTN","SAMIHOM4",414,0)
 i route="casereview" d  q 0
"RTN","SAMIHOM4",415,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",416,0)
 . d WSCASE^SAMICASE(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",417,0)
 ;
"RTN","SAMIHOM4",418,0)
 i route="nuform" d  q 0
"RTN","SAMIHOM4",419,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",420,0)
 . d WSNUFORM^SAMICASE(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",421,0)
 ;
"RTN","SAMIHOM4",422,0)
 i route="addform" d  q 0
"RTN","SAMIHOM4",423,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",424,0)
 . d WSNFPOST^SAMICASE(.SAMIARG,.SAMIBODY,.SAMIRESULT)
"RTN","SAMIHOM4",425,0)
 ;
"RTN","SAMIHOM4",426,0)
 i route="form" d  q 0
"RTN","SAMIHOM4",427,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",428,0)
 . d wsGetForm^%wf(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",429,0)
 ;
"RTN","SAMIHOM4",430,0)
 i route="postform" d  q 0
"RTN","SAMIHOM4",431,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",432,0)
 . d wsPostForm^%wf(.SAMIARG,.SAMIBODY,.SAMIRESULT)
"RTN","SAMIHOM4",433,0)
 . i $g(SAMIARG("form"))["siform" d  ;
"RTN","SAMIHOM4",434,0)
 . . n notr s notr=0 ; note return 0 if failure, 1 or greater if success
"RTN","SAMIHOM4",435,0)
 . . ; returns the ien of the note that was created and should be sent
"RTN","SAMIHOM4",436,0)
 . . s notr=$$NOTE^SAMINOT1(.SAMIARG)
"RTN","SAMIHOM4",437,0)
 . . if +notr>0 d  ;
"RTN","SAMIHOM4",438,0)
 . . . n SAMIFILTER
"RTN","SAMIHOM4",439,0)
 . . . s SAMIFILTER("sid")=$G(SAMIARG("studyid"))
"RTN","SAMIHOM4",440,0)
 . . . s SAMIFILTER("key")=$g(SAMIARG("form")) ;
"RTN","SAMIHOM4",441,0)
 . . . n tiuien
"RTN","SAMIHOM4",442,0)
 . . . s tiuien=+notr
"RTN","SAMIHOM4",443,0)
 . . . s SAMIFILTER("notenmbr")=tiuien
"RTN","SAMIHOM4",444,0)
 . . . n sendrslt
"RTN","SAMIHOM4",445,0)
 . . . ;s sendrslt="1^MSG9239010"
"RTN","SAMIHOM4",446,0)
 . . . s sendrslt=$$EN^SAMIORU(.SAMIFILTER) ; send the note to VistA
"RTN","SAMIHOM4",447,0)
 . . . i +sendrslt>0 d  ; success
"RTN","SAMIHOM4",448,0)
 . . . . n rtnid s rtnid=$p(sendrslt,"^",2) ; return id from HL7
"RTN","SAMIHOM4",449,0)
 . . . . ; post the id to the graph here
"RTN","SAMIHOM4",450,0)
 . . . . n sid s sid=$G(SAMIARG("studyid"))
"RTN","SAMIHOM4",451,0)
 . . . . n form s form=$G(SAMIARG("form"))
"RTN","SAMIHOM4",452,0)
 . . . . n nien s nien=$$NTIEN^SAMINOT1(sid,form) ; latest note ien
"RTN","SAMIHOM4",453,0)
 . . . . n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM4",454,0)
 . . . . s @root@("graph",sid,form,"notes",nien,"hl7id")=rtnid
"RTN","SAMIHOM4",455,0)
 . . . . s SAMIARG("errorMessage")="Note successfully sent to VistA ID: "_rtnid
"RTN","SAMIHOM4",456,0)
 . . . else  d  ;
"RTN","SAMIHOM4",457,0)
 . . . . n rtnmsg s rtnmsg=$p(sendrslt,"^",2)
"RTN","SAMIHOM4",458,0)
 . . . . s SAMIARG("errorMessage")=rtnmsg
"RTN","SAMIHOM4",459,0)
 . . . d WSCASE^SAMICASE(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",460,0)
 . i $g(SAMIARG("form"))["fuform" d  ;
"RTN","SAMIHOM4",461,0)
 . . n notr s notr=0 ; note return 0 if failure, 1 or greater if success
"RTN","SAMIHOM4",462,0)
 . . ; returns the ien of the note that was created and should be sent
"RTN","SAMIHOM4",463,0)
 . . s notr=$$NOTE^SAMINOT2(.SAMIARG)
"RTN","SAMIHOM4",464,0)
 . . if +notr>0 d  ;
"RTN","SAMIHOM4",465,0)
 . . . n SAMIFILTER
"RTN","SAMIHOM4",466,0)
 . . . s SAMIFILTER("sid")=$G(SAMIARG("studyid"))
"RTN","SAMIHOM4",467,0)
 . . . s SAMIFILTER("key")=$g(SAMIARG("form")) ;
"RTN","SAMIHOM4",468,0)
 . . . n tiuien
"RTN","SAMIHOM4",469,0)
 . . . s tiuien=+notr
"RTN","SAMIHOM4",470,0)
 . . . s SAMIFILTER("notenmbr")=tiuien
"RTN","SAMIHOM4",471,0)
 . . . n sendrslt
"RTN","SAMIHOM4",472,0)
 . . . ;s sendrslt="0^Missing ORM Message"
"RTN","SAMIHOM4",473,0)
 . . . s sendrslt=$$EN^SAMIORU(.SAMIFILTER) ; send the note to VistA
"RTN","SAMIHOM4",474,0)
 . . . i +sendrslt>0 d  ; success
"RTN","SAMIHOM4",475,0)
 . . . . n rtnid s rtnid=$p(sendrslt,"^",2) ; return id from HL7
"RTN","SAMIHOM4",476,0)
 . . . . ; post the id to the graph here
"RTN","SAMIHOM4",477,0)
 . . . . n sid s sid=$G(SAMIARG("studyid"))
"RTN","SAMIHOM4",478,0)
 . . . . n form s form=$G(SAMIARG("form"))
"RTN","SAMIHOM4",479,0)
 . . . . n nien s nien=$$NTIEN^SAMINOT1(sid,form) ; latest note ien
"RTN","SAMIHOM4",480,0)
 . . . . n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM4",481,0)
 . . . . s @root@("graph",sid,form,"notes",nien,"hl7id")=rtnid
"RTN","SAMIHOM4",482,0)
 . . . . s SAMIARG("errorMessage")="Note successfully sent to VistA ID: "_rtnid
"RTN","SAMIHOM4",483,0)
 . . . else  d  ;
"RTN","SAMIHOM4",484,0)
 . . . . n rtnmsg s rtnmsg=$p(sendrslt,"^",2)
"RTN","SAMIHOM4",485,0)
 . . . . i $g(SAMIARG("errorMessage"))="" d  ;
"RTN","SAMIHOM4",486,0)
 . . . . . s SAMIARG("errorMessage")=rtnmsg
"RTN","SAMIHOM4",487,0)
 . . . d WSCASE^SAMICASE(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",488,0)
 . . e  d WSCASE^SAMICASE(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",489,0)
 . e  d WSCASE^SAMICASE(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",490,0)
 ;
"RTN","SAMIHOM4",491,0)
 i route="deleteform" d  q 0
"RTN","SAMIHOM4",492,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",493,0)
 . d DELFORM^SAMICASE(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",494,0)
 ;
"RTN","SAMIHOM4",495,0)
 i route="ctreport" d  q 0
"RTN","SAMIHOM4",496,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",497,0)
 . n format s format="html"
"RTN","SAMIHOM4",498,0)
 . s format="text"
"RTN","SAMIHOM4",499,0)
 . i format="text" d WSNOTE^SAMINOT3(.SAMIRESULT,.SAMIARG) q  ;
"RTN","SAMIHOM4",500,0)
 . i format="html" d WSREPORT^SAMICTR0(.SAMIRESULT,.SAMIARG) q  ;
"RTN","SAMIHOM4",501,0)
 . ;d wsReport^SAMICTRT(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",502,0)
 ;
"RTN","SAMIHOM4",503,0)
 i route="note" d  q 0
"RTN","SAMIHOM4",504,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",505,0)
 . d WSNOTE^SAMINOT1(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",506,0)
 ;
"RTN","SAMIHOM4",507,0)
 i route="report" d  q 0
"RTN","SAMIHOM4",508,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",509,0)
 . d WSREPORT^SAMIUR(.SAMIRESULT,.vars)
"RTN","SAMIHOM4",510,0)
 ;
"RTN","SAMIHOM4",511,0)
 i route="addperson" d  q 0
"RTN","SAMIHOM4",512,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",513,0)
 . n form
"RTN","SAMIHOM4",514,0)
 . s form="vapals:addperson"
"RTN","SAMIHOM4",515,0)
 . d RTNPAGE^SAMIHOM4(.SAMIRESULT,form,.SAMIARG) q  ;
"RTN","SAMIHOM4",516,0)
 ;
"RTN","SAMIHOM4",517,0)
 i route="editperson" d  q 0
"RTN","SAMIHOM4",518,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",519,0)
 . n dfn s dfn=$g(vars("dfn")) ; must have a dfn
"RTN","SAMIHOM4",520,0)
 . i dfn="" d  q  ;
"RTN","SAMIHOM4",521,0)
 . . d GETHOME^SAMIHOM3(.SAMIRESULT,.SAMIARG) ; on error go home
"RTN","SAMIHOM4",522,0)
 . n root s root=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",523,0)
 . n sien s sien=$o(@root@("dfn",dfn,""))
"RTN","SAMIHOM4",524,0)
 . i sien="" d  q  ;
"RTN","SAMIHOM4",525,0)
 . . d GETHOME^SAMIHOM3(.SAMIRESULT,.SAMIARG) ; on error go home
"RTN","SAMIHOM4",526,0)
 . s vars("name")=$g(@root@(sien,"saminame"))
"RTN","SAMIHOM4",527,0)
 . s tdob=$g(@root@(sien,"dob"))
"RTN","SAMIHOM4",528,0)
 . s vars("dob")=$p(tdob,"-",2)_"/"_$p(tdob,"-",3)_"/"_$p(tdob,"-",1)
"RTN","SAMIHOM4",529,0)
 . s vars("sbdob")=$g(@root@(sien,"dob"))
"RTN","SAMIHOM4",530,0)
 . s vars("gender")=$g(@root@(sien,"sex"))
"RTN","SAMIHOM4",531,0)
 . ; s vars("icn")=$g(@root@(sien,"icn"))
"RTN","SAMIHOM4",532,0)
 . n tssn s tssn=$g(@root@(sien,"ssn"))
"RTN","SAMIHOM4",533,0)
 . s vars("ssn")=$e(tssn,1,3)_"-"_$e(tssn,4,5)_"-"_$e(tssn,6,9)
"RTN","SAMIHOM4",534,0)
 . s vars("last5")=$g(@root@(sien,"last5"))
"RTN","SAMIHOM4",535,0)
 . s vars("dfn")=$g(@root@(sien,"dfn"))
"RTN","SAMIHOM4",536,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",537,0)
 . n form,err,zhtml
"RTN","SAMIHOM4",538,0)
 . s form="vapals:editparticipant"
"RTN","SAMIHOM4",539,0)
 . d RTNPAGE^SAMIHOM4(.SAMIRESULT,form,.SAMIARG) q  ;
"RTN","SAMIHOM4",540,0)
 ;
"RTN","SAMIHOM4",541,0)
 i route="register" d  q 0
"RTN","SAMIHOM4",542,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",543,0)
 . d REG^SAMIHOM4(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",544,0)
 ; 
"RTN","SAMIHOM4",545,0)
 i route="editsave" d  q 0
"RTN","SAMIHOM4",546,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",547,0)
 . d SAVE^SAMIHOM4(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",548,0)
 ;
"RTN","SAMIHOM4",549,0)
 i route="merge" d  q 0
"RTN","SAMIHOM4",550,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",551,0)
 . d MERGE^SAMIHOM4(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",552,0)
 ;
"RTN","SAMIHOM4",553,0)
 quit 0  ; end of wsi WSVAPALS^SAMIHOM3
"RTN","SAMIHOM4",554,0)
 ;
"RTN","SAMIHOM4",555,0)
 ;
"RTN","SAMIHOM4",556,0)
 ;
"RTN","SAMIHOM4",557,0)
 ;@section 3 other
"RTN","SAMIHOM4",558,0)
 ;
"RTN","SAMIHOM4",559,0)
 ;
"RTN","SAMIHOM4",560,0)
 ;
"RTN","SAMIHOM4",561,0)
REG(SAMIRTN,SAMIARG) ; manual registration
"RTN","SAMIHOM4",562,0)
 ;
"RTN","SAMIHOM4",563,0)
 n name s name=$g(SAMIARG("name"))
"RTN","SAMIHOM4",564,0)
 ;
"RTN","SAMIHOM4",565,0)
 m ^gpl("reg")=SAMIARG
"RTN","SAMIHOM4",566,0)
 n ssn s ssn=SAMIARG("ssn")
"RTN","SAMIHOM4",567,0)
 s ssn=$tr(ssn,"-")
"RTN","SAMIHOM4",568,0)
 s SAMIARG("errorMessage")=""
"RTN","SAMIHOM4",569,0)
 s SAMIARG("errorField")=""
"RTN","SAMIHOM4",570,0)
 ; test for duplicate ssn
"RTN","SAMIHOM4",571,0)
 ;
"RTN","SAMIHOM4",572,0)
 ;i $$DUPSSN(ssn) d  ;
"RTN","SAMIHOM4",573,0)
 ;. ;s SAMIARG("errorMessage")=SAMIARG("errorMessage")_" Duplicate SSN."
"RTN","SAMIHOM4",574,0)
 ;. s SAMIARG("errorMessage")=SAMIARG("errorMessage")_" Duplicate SSN error. A person with that SSN is already entered in the system."
"RTN","SAMIHOM4",575,0)
 ;. s SAMIARG("errorField")="ssn"
"RTN","SAMIHOM4",576,0)
 ;
"RTN","SAMIHOM4",577,0)
 ; test for duplicate icn
"RTN","SAMIHOM4",578,0)
 ;
"RTN","SAMIHOM4",579,0)
 ;n icn s icn=$g(SAMIARG("icn"))
"RTN","SAMIHOM4",580,0)
 ;i icn'="" i $$DUPICN(icn) d  ;
"RTN","SAMIHOM4",581,0)
 ;. s SAMIARG("errorMessage")=SAMIARG("errorMessage")_" Duplicate ICN error. A person with that ICN is already entered in the system."
"RTN","SAMIHOM4",582,0)
 ;. s SAMIARG("errorField")="icn"
"RTN","SAMIHOM4",583,0)
 ;;
"RTN","SAMIHOM4",584,0)
 ;; test for wellformed ICN
"RTN","SAMIHOM4",585,0)
 ;;
"RTN","SAMIHOM4",586,0)
 ;i icn'="" i $$BADICN(icn) d  ;
"RTN","SAMIHOM4",587,0)
 ;. s SAMIARG("errorMessage")=SAMIARG("errorMessage")_" Invalid ICN error. The check digits in the ICN do not match"
"RTN","SAMIHOM4",588,0)
 ;. s SAMIARG("errorField")="icn"
"RTN","SAMIHOM4",589,0)
 ;;
"RTN","SAMIHOM4",590,0)
 ; if there is an error, send back to edit with error message
"RTN","SAMIHOM4",591,0)
 i $g(SAMIARG("errorMessage"))'="" d  q  ;
"RTN","SAMIHOM4",592,0)
 . n form
"RTN","SAMIHOM4",593,0)
 . s form="vapals:addperson"
"RTN","SAMIHOM4",594,0)
 . d RTNERR(.SAMIRESULT,form,.SAMIARG)
"RTN","SAMIHOM4",595,0)
 ;
"RTN","SAMIHOM4",596,0)
 n root s root=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",597,0)
 n proot s proot=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM4",598,0)
 n ptlkien s ptlkien=""
"RTN","SAMIHOM4",599,0)
 n dfn s dfn=""
"RTN","SAMIHOM4",600,0)
 n sien s sien=""
"RTN","SAMIHOM4",601,0)
 i ptlkien="" s ptlkien=$o(@root@("AAAAAA"),-1)+1
"RTN","SAMIHOM4",602,0)
 n zm
"RTN","SAMIHOM4",603,0)
 k SAMIARG("MATCHLOG")
"RTN","SAMIHOM4",604,0)
 s zm=$$REMATCH(sien,.SAMIARG)
"RTN","SAMIHOM4",605,0)
 i zm>0 d  ;
"RTN","SAMIHOM4",606,0)
 . s SAMIARG("MATCHLOG")=zm
"RTN","SAMIHOM4",607,0)
 d MKPTLK(ptlkien,.SAMIARG) ; make the patient-lookup record
"RTN","SAMIHOM4",608,0)
 ;
"RTN","SAMIHOM4",609,0)
 s dfn=$o(@root@("dfn"," "),-1)+1
"RTN","SAMIHOM4",610,0)
 n pdfn
"RTN","SAMIHOM4",611,0)
 s pdfn=$o(@proot@("dfn"," "),-1)+1
"RTN","SAMIHOM4",612,0)
 i pdfn>dfn s dfn=pdfn ; need a dfn that has not been used
"RTN","SAMIHOM4",613,0)
 i dfn<9000001 s dfn=9000001
"RTN","SAMIHOM4",614,0)
 s @root@(ptlkien,"dfn")=dfn
"RTN","SAMIHOM4",615,0)
 d INDXPTLK(ptlkien)
"RTN","SAMIHOM4",616,0)
 s SAMIFILTER("samiroute")="addperson"
"RTN","SAMIHOM4",617,0)
 s SAMIFILTER("siteid")=$G(SAMIARG("siteid"))
"RTN","SAMIHOM4",618,0)
 s SAMIFILTER("sitetitle")=$G(SAMIARG("sitetitle"))
"RTN","SAMIHOM4",619,0)
 k SAMIARG ; return to a blank manual registration form
"RTN","SAMIHOM4",620,0)
 s SAMIARG("siteid")=$G(SAMIFILTER("siteid"))
"RTN","SAMIHOM4",621,0)
 s SAMIARG("sitetitle")=$G(SAMIFILTER("sitetitle"))
"RTN","SAMIHOM4",622,0)
 d SETINFO(.SAMIFILTER,name_" was successfully entered")
"RTN","SAMIHOM4",623,0)
 ;d SETWARN(.SAMIFILTER,"We might want to give you a warning")
"RTN","SAMIHOM4",624,0)
 do WSVAPALS^SAMIHOM3(.SAMIFILTER,.SAMIARG,.SAMIRESULT)
"RTN","SAMIHOM4",625,0)
 ;
"RTN","SAMIHOM4",626,0)
 quit  ; end of REG
"RTN","SAMIHOM4",627,0)
 ;
"RTN","SAMIHOM4",628,0)
 ;
"RTN","SAMIHOM4",629,0)
 ;
"RTN","SAMIHOM4",630,0)
MKPTLK(ptlkien,SAMIARG) ; creates patient-lookup record
"RTN","SAMIHOM4",631,0)
 ;
"RTN","SAMIHOM4",632,0)
 n ssn s ssn=SAMIARG("ssn")
"RTN","SAMIHOM4",633,0)
 s ssn=$tr(ssn,"-")
"RTN","SAMIHOM4",634,0)
 n name s name=$g(SAMIARG("name"))
"RTN","SAMIHOM4",635,0)
 n sinamef,sinamel
"RTN","SAMIHOM4",636,0)
 s sinamel=$p(name,","),sinamel=$$TRIM^XLFSTR(sinamel,"LR")
"RTN","SAMIHOM4",637,0)
 s sinamef=$p(name,",",2),sinamef=$$TRIM^XLFSTR(sinamef,"LR")
"RTN","SAMIHOM4",638,0)
 s name=sinamel_","_sinamef
"RTN","SAMIHOM4",639,0)
 n siteid s siteid=$g(SAMIARG("siteid"))
"RTN","SAMIHOM4",640,0)
 i siteid="" s siteid=$g(SAMIARG("site"))
"RTN","SAMIHOM4",641,0)
 ;
"RTN","SAMIHOM4",642,0)
 s @root@(ptlkien,"siteid")=siteid
"RTN","SAMIHOM4",643,0)
 s @root@(ptlkien,"saminame")=name
"RTN","SAMIHOM4",644,0)
 s @root@(ptlkien,"sinamef")=sinamef
"RTN","SAMIHOM4",645,0)
 s @root@(ptlkien,"sinamel")=sinamel
"RTN","SAMIHOM4",646,0)
 n fmdob s fmdob=$$FMDT^SAMIUR2(SAMIARG("dob"))
"RTN","SAMIHOM4",647,0)
 n ptlkdob s ptlkdob=$$FMTE^XLFDT(fmdob,7)
"RTN","SAMIHOM4",648,0)
 s ptlkdob=$TR(ptlkdob,"/","-")
"RTN","SAMIHOM4",649,0)
 s @root@(ptlkien,"dob")=ptlkdob
"RTN","SAMIHOM4",650,0)
 s @root@(ptlkien,"sbdob")=ptlkdob
"RTN","SAMIHOM4",651,0)
 n gender s gender=SAMIARG("gender")
"RTN","SAMIHOM4",652,0)
 s @root@(ptlkien,"gender")=$s(gender="M":"M^MALE",1:"F^FEMALE")
"RTN","SAMIHOM4",653,0)
 s @root@(ptlkien,"sex")=SAMIARG("gender")
"RTN","SAMIHOM4",654,0)
 ; s @root@(ptlkien,"icn")=SAMIARG("icn")
"RTN","SAMIHOM4",655,0)
 s @root@(ptlkien,"ssn")=ssn
"RTN","SAMIHOM4",656,0)
 n last5 s last5=$$UCASE($e(name,1))_$e(ssn,6,9)
"RTN","SAMIHOM4",657,0)
 s @root@(ptlkien,"last5")=last5
"RTN","SAMIHOM4",658,0)
 n mymatch s mymatch=$g(SAMIARG("MATCHLOG"))
"RTN","SAMIHOM4",659,0)
 i mymatch'="" s @root@(ptlkien,"MATCHLOG")=mymatch
"RTN","SAMIHOM4",660,0)
 ;
"RTN","SAMIHOM4",661,0)
 quit  ; end of MKPTLK
"RTN","SAMIHOM4",662,0)
 ;
"RTN","SAMIHOM4",663,0)
 ;
"RTN","SAMIHOM4",664,0)
 ;
"RTN","SAMIHOM4",665,0)
UPDTFRMS(dfn) ; update demographics in all forms for patient
"RTN","SAMIHOM4",666,0)
 ;
"RTN","SAMIHOM4",667,0)
 n lroot s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",668,0)
 n proot s proot=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM4",669,0)
 n lien s lien=$o(@lroot@("dfn",dfn,""))
"RTN","SAMIHOM4",670,0)
 q:lien=""
"RTN","SAMIHOM4",671,0)
 n pien s pien=$o(@proot@("dfn",dfn,""))
"RTN","SAMIHOM4",672,0)
 q:pien=""
"RTN","SAMIHOM4",673,0)
 ; this patient has forms
"RTN","SAMIHOM4",674,0)
 m @proot@(pien)=@lroot@(lien) ; refresh the demos in the patient record
"RTN","SAMIHOM4",675,0)
 n ssn s ssn=$g(@proot@(pien,"ssn"))
"RTN","SAMIHOM4",676,0)
 s @proot@(pien,"sissn")=$e(ssn,1,3)_"-"_$e(ssn,4,5)_"-"_$e(ssn,6,9)
"RTN","SAMIHOM4",677,0)
 n sid s sid=$g(@proot@("sisid")) ; studyid 
"RTN","SAMIHOM4",678,0)
 q:sid=""  ; no studyid
"RTN","SAMIHOM4",679,0)
 n zi s zi=""
"RTN","SAMIHOM4",680,0)
 f  s zi=$o(@proot@("graph",sid,zi)) q:zi=""  d  ; for each form
"RTN","SAMIHOM4",681,0)
 . m @proot@("graph",sid,zi)=@proot@(pien) ; stamp each form with new demos
"RTN","SAMIHOM4",682,0)
 ;
"RTN","SAMIHOM4",683,0)
 quit  ; end of UPDTFRMS
"RTN","SAMIHOM4",684,0)
 ;
"RTN","SAMIHOM4",685,0)
 ;
"RTN","SAMIHOM4",686,0)
 ;
"RTN","SAMIHOM4",687,0)
MERGE(SAMIRESULT,SAMIARGS) ; merge participant records
"RTN","SAMIHOM4",688,0)
 ;
"RTN","SAMIHOM4",689,0)
 ; called from pressing the merge button on the unmatched report
"RTN","SAMIHOM4",690,0)
 ;
"RTN","SAMIHOM4",691,0)
 n toien s toien=$g(SAMIARGS("toien"))
"RTN","SAMIHOM4",692,0)
 i toien="" d  q  ;
"RTN","SAMIHOM4",693,0)
 . d WSUNMAT(.SAMIRESULT,.SAMIARGS)
"RTN","SAMIHOM4",694,0)
 n lroot s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",695,0)
 n fromien s fromien=$g(@lroot@(toien,"MATCHLOG"))
"RTN","SAMIHOM4",696,0)
 i fromien="" d  q  ;
"RTN","SAMIHOM4",697,0)
 . d WSUNMAT(.SAMIRESULT,.SAMIARGS)
"RTN","SAMIHOM4",698,0)
 ;
"RTN","SAMIHOM4",699,0)
 ; test for remotedfn in from record - not valid if absent
"RTN","SAMIHOM4",700,0)
 ;
"RTN","SAMIHOM4",701,0)
 i $g(@lroot@(fromien,"remotedfn"))="" d  q  ;
"RTN","SAMIHOM4",702,0)
 . d WSUNMAT(.SAMIRESULT,.SAMIARGS)
"RTN","SAMIHOM4",703,0)
 ;
"RTN","SAMIHOM4",704,0)
 ; remove index entries for from and to records
"RTN","SAMIHOM4",705,0)
 ;
"RTN","SAMIHOM4",706,0)
 d UNINDXPT(fromien) ; delete index entries
"RTN","SAMIHOM4",707,0)
 d UNINDXPT(toien)
"RTN","SAMIHOM4",708,0)
 ;
"RTN","SAMIHOM4",709,0)
 ; create changelog entry in to record - contains from record
"RTN","SAMIHOM4",710,0)
 ;
"RTN","SAMIHOM4",711,0)
 m @lroot@(toien,"changelog",$$FMTE^XLFDT($$NOW^XLFDT,5))=@lroot@(fromien)
"RTN","SAMIHOM4",712,0)
 ;
"RTN","SAMIHOM4",713,0)
 ; change the dfn in the from record to the to record dfn for merging
"RTN","SAMIHOM4",714,0)
 ;
"RTN","SAMIHOM4",715,0)
 s @lroot@(fromien,"dfn")=@lroot@(toien,"dfn")
"RTN","SAMIHOM4",716,0)
 n dfn s dfn=@lroot@(toien,"dfn") ; for use in updating forms
"RTN","SAMIHOM4",717,0)
 ;
"RTN","SAMIHOM4",718,0)
 ; merge the from record to the to record
"RTN","SAMIHOM4",719,0)
 ;
"RTN","SAMIHOM4",720,0)
 m @lroot@(toien)=@lroot@(fromien)
"RTN","SAMIHOM4",721,0)
 ;
"RTN","SAMIHOM4",722,0)
 ; delete the from record
"RTN","SAMIHOM4",723,0)
 ;
"RTN","SAMIHOM4",724,0)
 k @lroot@(fromien)
"RTN","SAMIHOM4",725,0)
 ;
"RTN","SAMIHOM4",726,0)
 ; reindex the to record
"RTN","SAMIHOM4",727,0)
 ;
"RTN","SAMIHOM4",728,0)
 d INDXPTLK(toien)
"RTN","SAMIHOM4",729,0)
 ;
"RTN","SAMIHOM4",730,0)
 ; propagate the updated from record to every form
"RTN","SAMIHOM4",731,0)
 ;
"RTN","SAMIHOM4",732,0)
 d UPDTFRMS(dfn) ; updates the patient in the vapals-patient graph
"RTN","SAMIHOM4",733,0)
 ;
"RTN","SAMIHOM4",734,0)
 ; leave and return to the unmatched report
"RTN","SAMIHOM4",735,0)
 ;   note that the form and to records will no longer be in the report
"RTN","SAMIHOM4",736,0)
 ;
"RTN","SAMIHOM4",737,0)
 d WSUNMAT(.SAMIRESULT,.SAMIARGS)
"RTN","SAMIHOM4",738,0)
 ;
"RTN","SAMIHOM4",739,0)
 quit  ; end of MERGE
"RTN","SAMIHOM4",740,0)
 ;
"RTN","SAMIHOM4",741,0)
 ;
"RTN","SAMIHOM4",742,0)
 ;
"RTN","SAMIHOM4",743,0)
ADDUNMAT ; adds unmatched report web service to system
"RTN","SAMIHOM4",744,0)
 ;
"RTN","SAMIHOM4",745,0)
 d addService^%webutils("GET","unmatched","WSUNMAT^SAMIHOM4")
"RTN","SAMIHOM4",746,0)
 ;
"RTN","SAMIHOM4",747,0)
 quit  ; end of ADDUNMAT
"RTN","SAMIHOM4",748,0)
 ;
"RTN","SAMIHOM4",749,0)
 ;
"RTN","SAMIHOM4",750,0)
 ;
"RTN","SAMIHOM4",751,0)
DELUNMAT ; deletes unmatched web service
"RTN","SAMIHOM4",752,0)
 ;
"RTN","SAMIHOM4",753,0)
 d deleteService^%webutils("GET","unmatched")
"RTN","SAMIHOM4",754,0)
 ;
"RTN","SAMIHOM4",755,0)
 quit  ; end of DELUNMAT
"RTN","SAMIHOM4",756,0)
 ;
"RTN","SAMIHOM4",757,0)
 ;
"RTN","SAMIHOM4",758,0)
 ;
"RTN","SAMIHOM4",759,0)
WSUNMAT(SAMIRESULT,SAMIARGS) ; navigates to unmatched report
"RTN","SAMIHOM4",760,0)
 ; 
"RTN","SAMIHOM4",761,0)
 n filter,bdy
"RTN","SAMIHOM4",762,0)
 s bdy=""
"RTN","SAMIHOM4",763,0)
 ;s filter("siteid")="PHX"
"RTN","SAMIHOM4",764,0)
 s filter("samiroute")="report"
"RTN","SAMIHOM4",765,0)
 s filter("samireporttype")="unmatched"
"RTN","SAMIHOM4",766,0)
 d WSVAPALS^SAMIHOM3(.filter,.bdy,.SAMIRESULT) ; back to the unmatched report
"RTN","SAMIHOM4",767,0)
 ;
"RTN","SAMIHOM4",768,0)
 quit  ; end of WSUNMAT
"RTN","SAMIHOM4",769,0)
 ;
"RTN","SAMIHOM4",770,0)
 ;
"RTN","SAMIHOM4",771,0)
 ;
"RTN","SAMIHOM4",772,0)
DUPSSN(ssn) ; extrinsic returns true if duplicate ssn
"RTN","SAMIHOM4",773,0)
 ;
"RTN","SAMIHOM4",774,0)
 n proot s proot=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",775,0)
 i $d(@proot@("ssn",ssn)) q 1
"RTN","SAMIHOM4",776,0)
 ;
"RTN","SAMIHOM4",777,0)
 quit 0 ; end of $$DUPSSN
"RTN","SAMIHOM4",778,0)
 ;
"RTN","SAMIHOM4",779,0)
 ;
"RTN","SAMIHOM4",780,0)
 ;
"RTN","SAMIHOM4",781,0)
DUPICN(icn) ; extrinsic returns true if duplicate icn
"RTN","SAMIHOM4",782,0)
 ;
"RTN","SAMIHOM4",783,0)
 n proot s proot=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",784,0)
 n tmpicn s tmpicn=$p(icn,"V",1)
"RTN","SAMIHOM4",785,0)
 i $d(@proot@("icn",icn)) q 1
"RTN","SAMIHOM4",786,0)
 i $d(@proot@("icn",tmpicn)) q 1
"RTN","SAMIHOM4",787,0)
 ;
"RTN","SAMIHOM4",788,0)
 quit 0 ; end of $$DUPICN
"RTN","SAMIHOM4",789,0)
 ;
"RTN","SAMIHOM4",790,0)
 ;
"RTN","SAMIHOM4",791,0)
 ;
"RTN","SAMIHOM4",792,0)
BADICN(icn) ; extrinsic returns true if ICN checkdigits are wrong
"RTN","SAMIHOM4",793,0)
 ;
"RTN","SAMIHOM4",794,0)
 n zchk s zchk=$p(icn,"V",2)
"RTN","SAMIHOM4",795,0)
 n zicn s zicn=$p(icn,"V",1)
"RTN","SAMIHOM4",796,0)
 q:zchk="" 1
"RTN","SAMIHOM4",797,0)
 i zchk'=$$CHECKDG^MPIFSPC(zicn) q 1
"RTN","SAMIHOM4",798,0)
 ;
"RTN","SAMIHOM4",799,0)
 quit 0
"RTN","SAMIHOM4",800,0)
 ;
"RTN","SAMIHOM4",801,0)
 ;
"RTN","SAMIHOM4",802,0)
 ;
"RTN","SAMIHOM4",803,0)
SAVE(SAMIRESULT,SAMIARG) ; save patient-lookup record after edit
"RTN","SAMIHOM4",804,0)
 ;
"RTN","SAMIHOM4",805,0)
 n dfn s dfn=$g(vars("dfn")) ; must have a dfn
"RTN","SAMIHOM4",806,0)
 i dfn="" d  q  ;
"RTN","SAMIHOM4",807,0)
 . d GETHOME^SAMIHOM3(.SAMIRESULT,.SAMIARG) ; on error go home 
"RTN","SAMIHOM4",808,0)
 n root s root=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",809,0)
 n sien s sien=$o(@root@("dfn",dfn,""))
"RTN","SAMIHOM4",810,0)
 i sien="" d  q  ;
"RTN","SAMIHOM4",811,0)
 . d GETHOME^SAMIHOM3(.SAMIRESULT,.SAMIARG) ; on error go home 
"RTN","SAMIHOM4",812,0)
 d UNINDXPT(sien) ; remove old index entries
"RTN","SAMIHOM4",813,0)
 n zm
"RTN","SAMIHOM4",814,0)
 k SAMIARG("MATCHLOG")
"RTN","SAMIHOM4",815,0)
 s zm=$$REMATCH(sien,.SAMIARG)
"RTN","SAMIHOM4",816,0)
 i zm>0 d  ;
"RTN","SAMIHOM4",817,0)
 . s SAMIARG("MATCHLOG")=zm
"RTN","SAMIHOM4",818,0)
 d MKPTLK(sien,.SAMIARG) ; add the updated fields
"RTN","SAMIHOM4",819,0)
 d INDXPTLK(sien) ; create new index entries
"RTN","SAMIHOM4",820,0)
 d UPDTFRMS(dfn) ; update demographic info in all forms
"RTN","SAMIHOM4",821,0)
 n filter,bdy
"RTN","SAMIHOM4",822,0)
 s bdy=""
"RTN","SAMIHOM4",823,0)
 m filter=SAMIARG
"RTN","SAMIHOM4",824,0)
 s filter("samiroute")="report"
"RTN","SAMIHOM4",825,0)
 s filter("samireporttype")="unmatched"
"RTN","SAMIHOM4",826,0)
 d WSVAPALS^SAMIHOM3(.filter,.bdy,.SAMIRESULT) ; back to the unmatched report
"RTN","SAMIHOM4",827,0)
 ;
"RTN","SAMIHOM4",828,0)
 quit  ; end of SAVE
"RTN","SAMIHOM4",829,0)
 ;
"RTN","SAMIHOM4",830,0)
 ;
"RTN","SAMIHOM4",831,0)
 ;
"RTN","SAMIHOM4",832,0)
REMATCH(sien,SAMIARG) ; extrinsic returns possible match ien
"RTN","SAMIHOM4",833,0)
 ;
"RTN","SAMIHOM4",834,0)
 ; else zero
"RTN","SAMIHOM4",835,0)
 ;
"RTN","SAMIHOM4",836,0)
 n lroot s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",837,0)
 n ssn,name,icn,x,y
"RTN","SAMIHOM4",838,0)
 s ssn=$g(SAMIARG("ssn"))
"RTN","SAMIHOM4",839,0)
 i ssn["-" s ssn=$tr(ssn,"-")
"RTN","SAMIHOM4",840,0)
 s name=$g(SAMIARG("saminame"))
"RTN","SAMIHOM4",841,0)
 i name="" s name=$g(SAMIARG("name"))
"RTN","SAMIHOM4",842,0)
 s name=$$UCASE(name)
"RTN","SAMIHOM4",843,0)
 ; s icn=$g(SAMIARG("icn"))
"RTN","SAMIHOM4",844,0)
 s x=0
"RTN","SAMIHOM4",845,0)
 i ssn'="" s x=$o(@lroot@("ssn",ssn,""))
"RTN","SAMIHOM4",846,0)
 i x=sien s x=$o(@lroot@("ssn",ssn,x))
"RTN","SAMIHOM4",847,0)
 i +x'=0 d  ;
"RTN","SAMIHOM4",848,0)
 . s y=$g(@lroot@(x,"dfn"))
"RTN","SAMIHOM4",849,0)
 . ;i y>9000000 s x=0
"RTN","SAMIHOM4",850,0)
 i x>0 q x
"RTN","SAMIHOM4",851,0)
 i name'="" s x=$o(@lroot@("name",name,""))
"RTN","SAMIHOM4",852,0)
 i x=sien s x=$o(@lroot@("name",name,x))
"RTN","SAMIHOM4",853,0)
 i +x'=0 d  ;
"RTN","SAMIHOM4",854,0)
 . s y=$g(@lroot@(x,"dfn"))
"RTN","SAMIHOM4",855,0)
 . ;i y>9000000 s x=0
"RTN","SAMIHOM4",856,0)
 i x>0 q x
"RTN","SAMIHOM4",857,0)
 ;i icn'="" s x=$o(@lroot@("icn",icn,""))
"RTN","SAMIHOM4",858,0)
 ;i x=sien s x=$o(@lroot@("icn",icn,x))
"RTN","SAMIHOM4",859,0)
 ;i +x'=0 d  ;
"RTN","SAMIHOM4",860,0)
 ;. s y=$g(@lroot@(x,"dfn"))
"RTN","SAMIHOM4",861,0)
 ;. i y>9000000 s x=0
"RTN","SAMIHOM4",862,0)
 ;i x>0 q x
"RTN","SAMIHOM4",863,0)
 ;
"RTN","SAMIHOM4",864,0)
 quit 0 ; end of $$REMATCH
"RTN","SAMIHOM4",865,0)
 ;
"RTN","SAMIHOM4",866,0)
 ;
"RTN","SAMIHOM4",867,0)
 ;
"RTN","SAMIHOM4",868,0)
SETINFO(vars,msg) ; set information message text
"RTN","SAMIHOM4",869,0)
 ;
"RTN","SAMIHOM4",870,0)
 ; vars are the screen variables passed by reference
"RTN","SAMIHOM4",871,0)
 ;
"RTN","SAMIHOM4",872,0)
 s vars("infoMessage")=msg
"RTN","SAMIHOM4",873,0)
 ;
"RTN","SAMIHOM4",874,0)
 quit  ; end of SETINFO
"RTN","SAMIHOM4",875,0)
 ;
"RTN","SAMIHOM4",876,0)
 ;
"RTN","SAMIHOM4",877,0)
 ;
"RTN","SAMIHOM4",878,0)
SETWARN(vars,msg) ; set warning message text
"RTN","SAMIHOM4",879,0)
 ;
"RTN","SAMIHOM4",880,0)
 ; vars are the screen variables passed by reference
"RTN","SAMIHOM4",881,0)
 ;
"RTN","SAMIHOM4",882,0)
 s vars("warnMessage")=msg
"RTN","SAMIHOM4",883,0)
 ;
"RTN","SAMIHOM4",884,0)
 quit  ; end of SETWARN
"RTN","SAMIHOM4",885,0)
 ;
"RTN","SAMIHOM4",886,0)
 ;
"RTN","SAMIHOM4",887,0)
 ; 
"RTN","SAMIHOM4",888,0)
RTNERR(rtn,form,vals,msg,fld) ; redisplay page w/error message
"RTN","SAMIHOM4",889,0)
 ;
"RTN","SAMIHOM4",890,0)
 ; rtn is the return array
"RTN","SAMIHOM4",891,0)
 ; form is the form the page requires
"RTN","SAMIHOM4",892,0)
 ; vals are the values for the page. passed by reference
"RTN","SAMIHOM4",893,0)
 ; msg is the error message to be displayed
"RTN","SAMIHOM4",894,0)
 ; fld is the name of the field where the cursor should be put
"RTN","SAMIHOM4",895,0)
 ;
"RTN","SAMIHOM4",896,0)
 n zhtml ; work area for the tempate
"RTN","SAMIHOM4",897,0)
 d SAMIHTM^%wf(.zhtml,form,.err)
"RTN","SAMIHOM4",898,0)
 d MERGEHTM^%wf(.zhtml,.vals,.err)
"RTN","SAMIHOM4",899,0)
 m rtn=zhtml
"RTN","SAMIHOM4",900,0)
 set HTTPRSP("mime")="text/html" ; set mime type
"RTN","SAMIHOM4",901,0)
 ;
"RTN","SAMIHOM4",902,0)
 quit  ; end of RTNERR
"RTN","SAMIHOM4",903,0)
 ;
"RTN","SAMIHOM4",904,0)
 ;
"RTN","SAMIHOM4",905,0)
 ;
"RTN","SAMIHOM4",906,0)
RTNPAGE(rtn,form,vals) ; display page
"RTN","SAMIHOM4",907,0)
 ;
"RTN","SAMIHOM4",908,0)
 ; rtn is the return array
"RTN","SAMIHOM4",909,0)
 ; form is the form the page requires
"RTN","SAMIHOM4",910,0)
 ; vals are the values for the page. passed by reference
"RTN","SAMIHOM4",911,0)
 ;
"RTN","SAMIHOM4",912,0)
 n err
"RTN","SAMIHOM4",913,0)
 n zhtml ; work area for the tempate
"RTN","SAMIHOM4",914,0)
 d SAMIHTM^%wf(.zhtml,form,.err)
"RTN","SAMIHOM4",915,0)
 d MERGEHTM^%wf(.zhtml,.vals,.err)
"RTN","SAMIHOM4",916,0)
 m SAMIRESULT=zhtml
"RTN","SAMIHOM4",917,0)
 set HTTPRSP("mime")="text/html" ; set mime type
"RTN","SAMIHOM4",918,0)
 ;
"RTN","SAMIHOM4",919,0)
 quit  ; end of RTNPAGE
"RTN","SAMIHOM4",920,0)
 ;
"RTN","SAMIHOM4",921,0)
 ;
"RTN","SAMIHOM4",922,0)
 ;
"RTN","SAMIHOM4",923,0)
REINDXPL ; reindex patient lookup
"RTN","SAMIHOM4",924,0)
 ;
"RTN","SAMIHOM4",925,0)
 n root s root=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",926,0)
 n zi s zi=0
"RTN","SAMIHOM4",927,0)
 k @root@("ssn")
"RTN","SAMIHOM4",928,0)
 k @root@("name")
"RTN","SAMIHOM4",929,0)
 k @root@("last5")
"RTN","SAMIHOM4",930,0)
 k @root@("sinamef")
"RTN","SAMIHOM4",931,0)
 k @root@("sinamel")
"RTN","SAMIHOM4",932,0)
 ; k @root@("icn")
"RTN","SAMIHOM4",933,0)
 f  s zi=$o(@root@(zi)) q:+zi=0  d  ;
"RTN","SAMIHOM4",934,0)
 . d INDXPTLK(zi)
"RTN","SAMIHOM4",935,0)
 ;
"RTN","SAMIHOM4",936,0)
 quit  ; end of REINDXPL
"RTN","SAMIHOM4",937,0)
 ;
"RTN","SAMIHOM4",938,0)
 ;
"RTN","SAMIHOM4",939,0)
 ;
"RTN","SAMIHOM4",940,0)
INDXPTLK(ien) ; generate index entries in patient-lookup graph
"RTN","SAMIHOM4",941,0)
 ;
"RTN","SAMIHOM4",942,0)
 ; for entry ien
"RTN","SAMIHOM4",943,0)
 ;
"RTN","SAMIHOM4",944,0)
 n proot set proot=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",945,0)
 n name s name=$g(@proot@(ien,"saminame"))
"RTN","SAMIHOM4",946,0)
 s @proot@("name",name,ien)=""
"RTN","SAMIHOM4",947,0)
 n ucname s ucname=$$UCASE(name)
"RTN","SAMIHOM4",948,0)
 s @proot@("name",ucname,ien)=""
"RTN","SAMIHOM4",949,0)
 n x
"RTN","SAMIHOM4",950,0)
 s x=$g(@proot@(ien,"dfn")) ;w !,x
"RTN","SAMIHOM4",951,0)
 s:x'="" @proot@("dfn",x,ien)=""
"RTN","SAMIHOM4",952,0)
 s x=$g(@proot@(ien,"last5")) ;w !,x
"RTN","SAMIHOM4",953,0)
 s:x'="" @proot@("last5",x,ien)=""
"RTN","SAMIHOM4",954,0)
 ;
"RTN","SAMIHOM4",955,0)
 ; s x=$g(@proot@(ien,"icn")) ;w !,x
"RTN","SAMIHOM4",956,0)
 ; i x'["V" d  ;
"RTN","SAMIHOM4",957,0)
 ; . i x="" q
"RTN","SAMIHOM4",958,0)
 ; . n chk s chk=$$CHECKDG^MPIFSPC(x)
"RTN","SAMIHOM4",959,0)
 ; . s @proot@(ien,"icn")=x_"V"_chk
"RTN","SAMIHOM4",960,0)
 ; . s x=x_"V"_chk
"RTN","SAMIHOM4",961,0)
 ; s:x'="" @proot@("icn",x,ien)=""
"RTN","SAMIHOM4",962,0)
 ;
"RTN","SAMIHOM4",963,0)
 s x=$g(@proot@(ien,"ssn")) ;w !,x
"RTN","SAMIHOM4",964,0)
 s:x'="" @proot@("ssn",x,ien)=""
"RTN","SAMIHOM4",965,0)
 s x=$g(@proot@(ien,"sinamef")) ;w !,x
"RTN","SAMIHOM4",966,0)
 s:x'="" @proot@("sinamef",x,ien)=""
"RTN","SAMIHOM4",967,0)
 s x=$g(@proot@(ien,"sinamel")) w !,x
"RTN","SAMIHOM4",968,0)
 s:x'="" @proot@("sinamel",x,ien)=""
"RTN","SAMIHOM4",969,0)
 set @proot@("Date Last Updated")=$$HTE^XLFDT($horolog)
"RTN","SAMIHOM4",970,0)
 ;
"RTN","SAMIHOM4",971,0)
 quit  ; end of INDXPTLK
"RTN","SAMIHOM4",972,0)
 ;
"RTN","SAMIHOM4",973,0)
 ;
"RTN","SAMIHOM4",974,0)
 ;
"RTN","SAMIHOM4",975,0)
UNINDXPT(ien) ; remove index entries from patient-lookup graph
"RTN","SAMIHOM4",976,0)
 ;
"RTN","SAMIHOM4",977,0)
 ; for entry ien
"RTN","SAMIHOM4",978,0)
 ;
"RTN","SAMIHOM4",979,0)
 n proot set proot=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",980,0)
 n name s name=$g(@proot@(ien,"saminame"))
"RTN","SAMIHOM4",981,0)
 k @proot@("name",name,ien)
"RTN","SAMIHOM4",982,0)
 n ucname s ucname=$$UCASE(name)
"RTN","SAMIHOM4",983,0)
 k @proot@("name",ucname,ien)
"RTN","SAMIHOM4",984,0)
 n x
"RTN","SAMIHOM4",985,0)
 s x=$g(@proot@(ien,"dfn")) ;w !,x
"RTN","SAMIHOM4",986,0)
 k:x'="" @proot@("dfn",x,ien)
"RTN","SAMIHOM4",987,0)
 s x=$g(@proot@(ien,"last5")) ;w !,x
"RTN","SAMIHOM4",988,0)
 k:x'="" @proot@("last5",x,ien)
"RTN","SAMIHOM4",989,0)
 ;
"RTN","SAMIHOM4",990,0)
 ; s x=$g(@proot@(ien,"icn")) ;w !,x
"RTN","SAMIHOM4",991,0)
 ; i x'["V" d  ;
"RTN","SAMIHOM4",992,0)
 ; . i x="" q
"RTN","SAMIHOM4",993,0)
 ; . n chk s chk=$$CHECKDG^MPIFSPC(x)
"RTN","SAMIHOM4",994,0)
 ; . s @proot@(ien,"icn")=x_"V"_chk
"RTN","SAMIHOM4",995,0)
 ; . s x=x_"V"_chk
"RTN","SAMIHOM4",996,0)
 ; k:x'="" @proot@("icn",x,ien)
"RTN","SAMIHOM4",997,0)
 ;
"RTN","SAMIHOM4",998,0)
 s x=$g(@proot@(ien,"ssn")) ;w !,x
"RTN","SAMIHOM4",999,0)
 k:x'="" @proot@("ssn",x,ien)
"RTN","SAMIHOM4",1000,0)
 s x=$g(@proot@(ien,"sinamef")) ;w !,x
"RTN","SAMIHOM4",1001,0)
 k:x'="" @proot@("sinamef",x,ien)
"RTN","SAMIHOM4",1002,0)
 s x=$g(@proot@(ien,"sinamel")) w !,x
"RTN","SAMIHOM4",1003,0)
 k:x'="" @proot@("sinamel",x,ien)
"RTN","SAMIHOM4",1004,0)
 set @proot@("Date Last Updated")=$$HTE^XLFDT($horolog)
"RTN","SAMIHOM4",1005,0)
 ;
"RTN","SAMIHOM4",1006,0)
 quit  ; end of UNINDXPT
"RTN","SAMIHOM4",1007,0)
 ;
"RTN","SAMIHOM4",1008,0)
 ;
"RTN","SAMIHOM4",1009,0)
 ;
"RTN","SAMIHOM4",1010,0)
UCASE(STR) ; extrinsic returns uppercase of STR
"RTN","SAMIHOM4",1011,0)
 ;
"RTN","SAMIHOM4",1012,0)
 N X,Y
"RTN","SAMIHOM4",1013,0)
 S X=STR
"RTN","SAMIHOM4",1014,0)
 X ^%ZOSF("UPPERCASE")
"RTN","SAMIHOM4",1015,0)
 ;
"RTN","SAMIHOM4",1016,0)
 quit Y ; end of $$UCASE
"RTN","SAMIHOM4",1017,0)
 ;
"RTN","SAMIHOM4",1018,0)
 ;
"RTN","SAMIHOM4",1019,0)
 ;
"RTN","SAMIHOM4",1020,0)
 ;@wri-code WSNEWCAS^SAMIHOM3
"RTN","SAMIHOM4",1021,0)
WSNEWCAS ; web route newcase (creates new case)
"RTN","SAMIHOM4",1022,0)
 ;
"RTN","SAMIHOM4",1023,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM4",1024,0)
 ;
"RTN","SAMIHOM4",1025,0)
 ;ven/gpl;wri;procedure;
"RTN","SAMIHOM4",1026,0)
 ;@signature
"RTN","SAMIHOM4",1027,0)
 ; do WSNEWCAS^SAMIHOM3(SAMIARGS,SAMIBODY,SAMIRESULT)
"RTN","SAMIHOM4",1028,0)
 ;@branches-from
"RTN","SAMIHOM4",1029,0)
 ; wri WSNEWCAS^SAMIHOM3 [wr newcase]
"RTN","SAMIHOM4",1030,0)
 ;@wri-called-by
"RTN","SAMIHOM4",1031,0)
 ; wsi WSVAPALS^SAMIHOM3 [ws post vapals]
"RTN","SAMIHOM4",1032,0)
 ;@called-by none
"RTN","SAMIHOM4",1033,0)
 ;@calls
"RTN","SAMIHOM4",1034,0)
 ; parseBody^%wf
"RTN","SAMIHOM4",1035,0)
 ; $$setroot^%wd
"RTN","SAMIHOM4",1036,0)
 ;  $$VALDTNM [commented out]
"RTN","SAMIHOM4",1037,0)
 ;  GETHOME [commented out]
"RTN","SAMIHOM4",1038,0)
 ;  $$NEXTNUM [commented out]
"RTN","SAMIHOM4",1039,0)
 ; $$GENSTDID^SAMIHOM3
"RTN","SAMIHOM4",1040,0)
 ; $$NOW^XLFDT
"RTN","SAMIHOM4",1041,0)
 ; $$KEYDATE^SAMIHOM3
"RTN","SAMIHOM4",1042,0)
 ; PREFILL^SAMIHOM3
"RTN","SAMIHOM4",1043,0)
 ;  makeSbform [commented out]
"RTN","SAMIHOM4",1044,0)
 ; $$MKSIFORM^SAMIHOM3
"RTN","SAMIHOM4",1045,0)
 ; wsGetForm^%wf
"RTN","SAMIHOM4",1046,0)
 ;  WSCASE^SAMICASE [commented out]
"RTN","SAMIHOM4",1047,0)
 ;@input
"RTN","SAMIHOM4",1048,0)
 ;.ARGS =
"RTN","SAMIHOM4",1049,0)
 ; BODY =
"RTN","SAMIHOM4",1050,0)
 ;.RESULT =
"RTN","SAMIHOM4",1051,0)
 ;@output: ?
"RTN","SAMIHOM4",1052,0)
 ;@examples [tbd]
"RTN","SAMIHOM4",1053,0)
 ;@tests [tbd]
"RTN","SAMIHOM4",1054,0)
 ;
"RTN","SAMIHOM4",1055,0)
 ;
"RTN","SAMIHOM4",1056,0)
 ;@stanza 2 create new case
"RTN","SAMIHOM4",1057,0)
 ;
"RTN","SAMIHOM4",1058,0)
 merge ^SAMIUL("newCase","ARGS")=SAMIARGS
"RTN","SAMIHOM4",1059,0)
 merge ^SAMIUL("newCase","BODY")=SAMIBODY
"RTN","SAMIHOM4",1060,0)
 ;
"RTN","SAMIHOM4",1061,0)
 new vars,bdy
"RTN","SAMIHOM4",1062,0)
 set SAMIBDY=$get(SAMIBODY(1))
"RTN","SAMIHOM4",1063,0)
 do parseBody^%wf("vars",.SAMIBDY)
"RTN","SAMIHOM4",1064,0)
 merge ^SAMIUL("newCase","vars")=vars
"RTN","SAMIHOM4",1065,0)
 ;
"RTN","SAMIHOM4",1066,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM4",1067,0)
 ;
"RTN","SAMIHOM4",1068,0)
 new saminame set saminame=$get(vars("name"))
"RTN","SAMIHOM4",1069,0)
 if saminame="" s saminame=$get(vars("saminame"))
"RTN","SAMIHOM4",1070,0)
 ;if $$VALDTNM(saminame,.ARGS)=-1 do  quit  ;
"RTN","SAMIHOM4",1071,0)
 ;. new r1
"RTN","SAMIHOM4",1072,0)
 ;. do GETHOME(.r1,.ARGS) ; home page to redisplay
"RTN","SAMIHOM4",1073,0)
 ;. merge RESULT=r1
"RTN","SAMIHOM4",1074,0)
 ;. quit
"RTN","SAMIHOM4",1075,0)
 ;
"RTN","SAMIHOM4",1076,0)
 new dfn s dfn=$get(vars("dfn"))
"RTN","SAMIHOM4",1077,0)
 ;if dfn="" do  quit  ;
"RTN","SAMIHOM4",1078,0)
 ;. new r1
"RTN","SAMIHOM4",1079,0)
 ;. do GETHOME(.r1,.ARGS) ; home page to redisplay
"RTN","SAMIHOM4",1080,0)
 ;. merge RESULT=r1
"RTN","SAMIHOM4",1081,0)
 ;. quit
"RTN","SAMIHOM4",1082,0)
 ;
"RTN","SAMIHOM4",1083,0)
 ; new gien set gien=$$NEXTNUM
"RTN","SAMIHOM4",1084,0)
 new gien set gien=dfn
"RTN","SAMIHOM4",1085,0)
 ;
"RTN","SAMIHOM4",1086,0)
 merge ^SAMIUL("newCase","G1")=root
"RTN","SAMIHOM4",1087,0)
 ; create dfn index
"RTN","SAMIHOM4",1088,0)
 set @root@("dfn",dfn,gien)=""
"RTN","SAMIHOM4",1089,0)
 ;
"RTN","SAMIHOM4",1090,0)
 set @root@(gien,"saminum")=gien
"RTN","SAMIHOM4",1091,0)
 set @root@(gien,"saminame")=saminame
"RTN","SAMIHOM4",1092,0)
 ;
"RTN","SAMIHOM4",1093,0)
 new studyid set studyid=$$GENSTDID^SAMIHOM3(gien,.SAMIARGS)
"RTN","SAMIHOM4",1094,0)
 set @root@(gien,"samistudyid")=studyid
"RTN","SAMIHOM4",1095,0)
 set @root@("sid",studyid,gien)=""
"RTN","SAMIHOM4",1096,0)
 ;
"RTN","SAMIHOM4",1097,0)
 new datekey set datekey=$$KEYDATE^SAMIHOM3($$NOW^XLFDT)
"RTN","SAMIHOM4",1098,0)
 set @root@(gien,"samicreatedate")=datekey
"RTN","SAMIHOM4",1099,0)
 ;
"RTN","SAMIHOM4",1100,0)
 merge ^SAMIUL("newCase",gien)=@root@(gien)
"RTN","SAMIHOM4",1101,0)
 ;
"RTN","SAMIHOM4",1102,0)
 ;
"RTN","SAMIHOM4",1103,0)
 do PREFILL^SAMIHOM3(dfn) ; prefills from the "patient-lookup" graph
"RTN","SAMIHOM4",1104,0)
 ;
"RTN","SAMIHOM4",1105,0)
 new siformkey
"RTN","SAMIHOM4",1106,0)
 ; do makeSbform(gien) ; create background form for new patient
"RTN","SAMIHOM4",1107,0)
 set siformkey=$$MKSIFORM^SAMIHOM3(gien) ; create intake for new patient
"RTN","SAMIHOM4",1108,0)
 ;
"RTN","SAMIHOM4",1109,0)
 set SAMIARGS("studyid")=studyid
"RTN","SAMIHOM4",1110,0)
 set SAMIARGS("form")="vapals:"_siformkey
"RTN","SAMIHOM4",1111,0)
 do wsGetForm^%wf(.SAMIRESULT,.SAMIARGS)
"RTN","SAMIHOM4",1112,0)
 ; do WSCASE^SAMICASE(.SAMIRESULT,.SAMIARGS) ; navigate to case review page
"RTN","SAMIHOM4",1113,0)
 ;
"RTN","SAMIHOM4",1114,0)
 ;
"RTN","SAMIHOM4",1115,0)
 ;@stanza 3 termination
"RTN","SAMIHOM4",1116,0)
 ;
"RTN","SAMIHOM4",1117,0)
 quit  ; end of wri WSNEWCAS^SAMIHOM3
"RTN","SAMIHOM4",1118,0)
 ;
"RTN","SAMIHOM4",1119,0)
 ;
"RTN","SAMIHOM4",1120,0)
 ;
"RTN","SAMIHOM4",1121,0)
EOR ; end of routine SAMIHOM4
"RTN","SAMIHUL")
0^35^B111466
"RTN","SAMIHUL",1,0)
SAMIHUL ;ven/gpl - ielcap: home page log ;2021-08-09t10:11z
"RTN","SAMIHUL",2,0)
 ;;18.0;SAMI;**9,12**;;Build 1
"RTN","SAMIHUL",3,0)
 ;;18.12
"RTN","SAMIHUL",4,0)
 ;
"RTN","SAMIHUL",5,0)
 ; SAMIHOME contains subroutines for producing the ELCAP Home Page.
"RTN","SAMIHUL",6,0)
 ; SAMIHUL contains the development log for the SAMIHOM* routines.
"RTN","SAMIHUL",7,0)
 ; It contains no executable code.
"RTN","SAMIHUL",8,0)
 ;
"RTN","SAMIHUL",9,0)
 quit  ; no entry from top
"RTN","SAMIHUL",10,0)
 ;
"RTN","SAMIHUL",11,0)
 ;
"RTN","SAMIHUL",12,0)
 ;
"RTN","SAMIHUL",13,0)
 ;@section 0 primary development
"RTN","SAMIHUL",14,0)
 ;
"RTN","SAMIHUL",15,0)
 ;
"RTN","SAMIHUL",16,0)
 ;
"RTN","SAMIHUL",17,0)
 ;@routine-credits
"RTN","SAMIHUL",18,0)
 ;@dev-main George P. Lilly (gpl)
"RTN","SAMIHUL",19,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIHUL",20,0)
 ;@dev-org-main Vista Expertise Network (ven)
"RTN","SAMIHUL",21,0)
 ; http://vistaexpertise.net
"RTN","SAMIHUL",22,0)
 ;@copyright 2017/2021, gpl, all rights reserved
"RTN","SAMIHUL",23,0)
 ;@license see routine SAMIUL
"RTN","SAMIHUL",24,0)
 ;
"RTN","SAMIHUL",25,0)
 ;@last-update 2021-08-09t10:11z
"RTN","SAMIHUL",26,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMIHUL",27,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMIHUL",28,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMIHUL",29,0)
 ;@version 18.12
"RTN","SAMIHUL",30,0)
 ;@release-date 2020-01
"RTN","SAMIHUL",31,0)
 ;@patch-list **9,12**
"RTN","SAMIHUL",32,0)
 ;
"RTN","SAMIHUL",33,0)
 ;@dev-add Frederick D. S. Marshall (toad)
"RTN","SAMIHUL",34,0)
 ; toad@vistaexpertise.net
"RTN","SAMIHUL",35,0)
 ;@dev-add Kenneth W. McGlothlen (mcglk)
"RTN","SAMIHUL",36,0)
 ; mcglk@vistaexpertise.net
"RTN","SAMIHUL",37,0)
 ;@dev-add Linda M. R. Yaw (lmry)
"RTN","SAMIHUL",38,0)
 ; linda.yaw@vistaexpertise.net
"RTN","SAMIHUL",39,0)
 ;@dev-add Larry G. Carlson (lgc)
"RTN","SAMIHUL",40,0)
 ; larry.g.carlson@gmail.com
"RTN","SAMIHUL",41,0)
 ;@dev-add Alexis R. Carlson (arc)
"RTN","SAMIHUL",42,0)
 ; whatisthehumanspirit@gmail.com
"RTN","SAMIHUL",43,0)
 ;@dev-add Domenick DiNatale (ddn)
"RTN","SAMIHUL",44,0)
 ; domenic@intellitechinnovations.com
"RTN","SAMIHUL",45,0)
 ;
"RTN","SAMIHUL",46,0)
 ;@module-credits
"RTN","SAMIHUL",47,0)
 ;@project VA Partnership to Increase Access to Lung Screening
"RTN","SAMIHUL",48,0)
 ; (VA-PALS)
"RTN","SAMIHUL",49,0)
 ; http://va-pals.org/
"RTN","SAMIHUL",50,0)
 ;@funding 2017/2021, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMIHUL",51,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMIHUL",52,0)
 ;@partner-org Veterans Affairs Office of Rural health
"RTN","SAMIHUL",53,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMIHUL",54,0)
 ;@partner-org International Early Lung Cancer Action Program (I-ELCAP)
"RTN","SAMIHUL",55,0)
 ; http://ielcap.com/
"RTN","SAMIHUL",56,0)
 ;@partner-org Paraxial Technologies (par)
"RTN","SAMIHUL",57,0)
 ; http://paraxialtech.com/
"RTN","SAMIHUL",58,0)
 ;@partner-org Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMIHUL",59,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMIHUL",60,0)
 ;
"RTN","SAMIHUL",61,0)
 ;@module-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMIHUL",62,0)
 ;
"RTN","SAMIHUL",63,0)
 ; 2018-01-13 ven/gpl 18.0-t4
"RTN","SAMIHUL",64,0)
 ;  SAMIHOM3 create routine from SAMIFRM to implement ELCAP Home Page.
"RTN","SAMIHUL",65,0)
 ;
"RTN","SAMIHUL",66,0)
 ; 2018-02-05 ven/toad 18.0-t4
"RTN","SAMIHUL",67,0)
 ;  SAMIHOM3 update license & attribution & hdr comments, add white
"RTN","SAMIHUL",68,0)
 ; space & do-dot quits, spell out language elements.
"RTN","SAMIHUL",69,0)
 ;
"RTN","SAMIHUL",70,0)
 ; 2018-02-27 ven/gpl 18.0-t4
"RTN","SAMIHUL",71,0)
 ;  SAMIHOM3 new subroutines PREFIX,GETHOME,SCANFOR,WSNEWCAS,PREFILL,
"RTN","SAMIHUL",72,0)
 ; MKSBFORM,MKSIFORM,VALDTNM,SID2NUM,KEYDATE,GENSTDID,NEXTNUM to
"RTN","SAMIHUL",73,0)
 ; support creation of new cases.
"RTN","SAMIHUL",74,0)
 ;
"RTN","SAMIHUL",75,0)
 ; 2018-03-01 ven/toad 18.0-t4
"RTN","SAMIHUL",76,0)
 ;  SAMIHOM3 refactor & reorganize new code, add hdr comments,
"RTN","SAMIHUL",77,0)
 ; r/findReplaceAll^%wf w/findReplace^%ts.
"RTN","SAMIHUL",78,0)
 ;
"RTN","SAMIHUL",79,0)
 ; 2018-03-06 ven/gpl 18.0-t4
"RTN","SAMIHUL",80,0)
 ;  SAMIHOM3 ?
"RTN","SAMIHUL",81,0)
 ;
"RTN","SAMIHUL",82,0)
 ; 2018-03-07 ven/toad 18.0-t4
"RTN","SAMIHUL",83,0)
 ;  SAMIHOM3 in $$SID2NUM add WSNUFORM^SAMICASE to called-by; in
"RTN","SAMIHUL",84,0)
 ; keyDate,GETHOME update called-by.
"RTN","SAMIHUL",85,0)
 ;
"RTN","SAMIHUL",86,0)
 ; 2018-05-18/25 ven/lgc&arc 18.0-t4 76020fd,81b1048,65afd99
"RTN","SAMIHUL",87,0)
 ;  SAMIHOM3 new SAMIHOM3 for new patient search page, chg submit
"RTN","SAMIHUL",88,0)
 ; processing on forms, fix bug in postform.
"RTN","SAMIHUL",89,0)
 ;
"RTN","SAMIHUL",90,0)
 ; 2018-06-14/07-10 ven/lgc&arc 18.0-t4 d71f4fe,8b0a432,ce345db,
"RTN","SAMIHUL",91,0)
 ; 402b6a8,14f991d,2e9662b
"RTN","SAMIHUL",92,0)
 ;  SAMIHOM3 make background form optional; 1st version of CT Eval
"RTN","SAMIHUL",93,0)
 ; Report; reorg ctreport routines & 1st crack at impressions &
"RTN","SAMIHUL",94,0)
 ; recommendations; note produced for intake form on submit; add
"RTN","SAMIHUL",95,0)
 ; support for routing by patient in CPRS Tools Menu, modify
"RTN","SAMIHUL",96,0)
 ; wsHOME^SAMIHOM3 to properly route VA-PALS web app when launced via
"RTN","SAMIHUL",97,0)
 ; CPRS Tools Menu; repair SAMIHOM3 & redact report link.
"RTN","SAMIHUL",98,0)
 ;
"RTN","SAMIHUL",99,0)
 ; 2018-08-22 ven/gpl 18.0-t4 6e696a9
"RTN","SAMIHUL",100,0)
 ;  SAMIHOM3 add PTINFO call to vista to pull ssn.
"RTN","SAMIHUL",101,0)
 ;
"RTN","SAMIHUL",102,0)
 ; 2018-09-30/11-01 ven/lgc&arc 18.0-t4 d93c640,482f522,a8e4226,
"RTN","SAMIHUL",103,0)
 ; ee5e8a1
"RTN","SAMIHUL",104,0)
 ;  SAMIHOM3 hdr & prefill of intake; new input form features, report
"RTN","SAMIHUL",105,0)
 ; menu fix; set urban/rural status at siform setup; handle zip code
"RTN","SAMIHUL",106,0)
 ; unknown.
"RTN","SAMIHUL",107,0)
 ;
"RTN","SAMIHUL",108,0)
 ; 2018-11-09/2019-01-22 ven/lgc&arc&lmry 18.0-t4 bac4f73,5400035,
"RTN","SAMIHUL",109,0)
 ; dd341e0,a953946,e2a44e6,2356c2b,3ceb74b,3088307,4271b46,7a5d340,
"RTN","SAMIHUL",110,0)
 ; dfbb0bc,fd1bcee,8dd6f34,51eb163,dbdb5a4,0880027,ccba017,5368121
"RTN","SAMIHUL",111,0)
 ;  SAMIHOM3 unit tests, annotation, sac compliance, XINDEX bugs, fix
"RTN","SAMIHUL",112,0)
 ; accidental reversions, add license info.
"RTN","SAMIHUL",113,0)
 ;
"RTN","SAMIHUL",114,0)
 ; 2018-12-18/20 ven/arc 18.0-t4 3088307f,4271b46b,dfbb0bca,
"RTN","SAMIHUL",115,0)
 ;  b8ff6da9,fd1bceee
"RTN","SAMIHUL",116,0)
 ;  SAMIHOM4 va sac compliance & variable namespacing.
"RTN","SAMIHUL",117,0)
 ;
"RTN","SAMIHUL",118,0)
 ; 2019-01-01/02-18 ven/lgc 18.0-t4 0880027c,18aa0fec,fcd635c1,
"RTN","SAMIHUL",119,0)
 ;  53681219,76874314
"RTN","SAMIHUL",120,0)
 ;  SAMIHOM3 update w/ recent changes.
"RTN","SAMIHUL",121,0)
 ;  SAMIHOM4 updates for va sac & code coverage, add license info.
"RTN","SAMIHUL",122,0)
 ;
"RTN","SAMIHUL",123,0)
 ; 2019-04-15 ven/gpl 18.0-t4 b403bf01
"RTN","SAMIHUL",124,0)
 ;  SAMIHOM4 support for new intake notes.
"RTN","SAMIHUL",125,0)
 ;
"RTN","SAMIHUL",126,0)
 ; 2019-04-16 ven/lgc 18.0-t4 e54b76d1
"RTN","SAMIHUL",127,0)
 ;  SAMIHOM4 update for SAMIFORM project.
"RTN","SAMIHUL",128,0)
 ;
"RTN","SAMIHUL",129,0)
 ; 2019-04-17 ven/gpl 18.0-t4 7d1f86db
"RTN","SAMIHUL",130,0)
 ;  SAMIHOM3 prefill date on intake prelim discussion section.
"RTN","SAMIHUL",131,0)
 ;
"RTN","SAMIHUL",132,0)
 ; 2019-06-18 ven/arc 18.0-t4 91022482
"RTN","SAMIHUL",133,0)
 ;  SAMIHOM4 switch fr/global ^SAMIGPL to/^SAMIUL.
"RTN","SAMIHUL",134,0)
 ;
"RTN","SAMIHUL",135,0)
 ; 2019-08-05 ven/gpl 18.0-t4 9c0c2ed3
"RTN","SAMIHUL",136,0)
 ;  SAMIHOM3 add GETPRFX to get right prefix at registration.
"RTN","SAMIHUL",137,0)
 ;
"RTN","SAMIHUL",138,0)
 ; 2019-08-07 ven/lgc&arc 18.0-t4 603194b9,37967fc5
"RTN","SAMIHUL",139,0)
 ;  SAMIHOM3 consolidate calls to retrieve facility prefix.
"RTN","SAMIHUL",140,0)
 ;
"RTN","SAMIHUL",141,0)
 ; 2019-11-22 par/ddn 18.0-t4 b2cc389d vap-458
"RTN","SAMIHUL",142,0)
 ;  SAMIHOM4 manual registration.
"RTN","SAMIHUL",143,0)
 ;
"RTN","SAMIHUL",144,0)
 ; 2020-01-01/05 ven/lgc 18.0-t4 c169f4b1,5928064a,62e3200f
"RTN","SAMIHUL",145,0)
 ;  SAMIHOM4 support for unmatched patient processing, more changes
"RTN","SAMIHUL",146,0)
 ; for participant matching, unmatched participant processing ready
"RTN","SAMIHUL",147,0)
 ; for testing.
"RTN","SAMIHUL",148,0)
 ;
"RTN","SAMIHUL",149,0)
 ; 2020-01-08/10 ven/gpl 18.0 a002f850,47dfe3cd
"RTN","SAMIHUL",150,0)
 ;  SAMIHOM4 bug fix for unmatched processing, turn off & on manual
"RTN","SAMIHUL",151,0)
 ; registration link on home page.
"RTN","SAMIHUL",152,0)
 ;
"RTN","SAMIHUL",153,0)
 ; 2020-01-10 ven/gpl 18.0 4c8e6ebc,76b465cb
"RTN","SAMIHUL",154,0)
 ;  SAMIHOM4 3 quits with returns for cache.
"RTN","SAMIHUL",155,0)
 ;
"RTN","SAMIHUL",156,0)
 ; 2020-01-16 ven/lgc 18.0 0a2af965
"RTN","SAMIHUL",157,0)
 ;  SAMIHOM4 bulk commit due to switch to cache.
"RTN","SAMIHUL",158,0)
 ;
"RTN","SAMIHUL",159,0)
 ; 2020-01-17/20 ven/lgc 18.1 8557207f,dc5f618c
"RTN","SAMIHUL",160,0)
 ;  SAMIHOM4 followup note, limit to one note per followup form.
"RTN","SAMIHUL",161,0)
 ;
"RTN","SAMIHUL",162,0)
 ; 2020-02-01/02 ven/lgc 18.4 3065146d,36ae0ed1
"RTN","SAMIHUL",163,0)
 ;  SAMIHOM4 set options for text based ctreport, switch default
"RTN","SAMIHUL",164,0)
 ; ctreport to text.
"RTN","SAMIHUL",165,0)
 ;
"RTN","SAMIHUL",166,0)
 ; 2020-04-02/11 ven/gpl 18.5 d36b7cad,36607664,befde317,56bfaed6,
"RTN","SAMIHUL",167,0)
 ; 666f5b91,2f2c29c1
"RTN","SAMIHUL",168,0)
 ;  SAMIHOM3 multitenancy; in GENSTDID add ARG param, determin prefix
"RTN","SAMIHUL",169,0)
 ; from site or siteid (ARG) instead of calling $$GETPRFX^SAMIFORM.
"RTN","SAMIHUL",170,0)
 ;  SAMIHOM4 multitenancy + fix bug in WSVAPALS.
"RTN","SAMIHUL",171,0)
 ;
"RTN","SAMIHUL",172,0)
 ; 2020-04-18/05-07 ven/gpl 18.5 29d7dba7,d55de214,521e0bdc,d018f52e,
"RTN","SAMIHUL",173,0)
 ; 476b2ff4,61c7d208
"RTN","SAMIHUL",174,0)
 ;  SAMIHOM4 fix bug & weird error in manual registration, fix bug in
"RTN","SAMIHUL",175,0)
 ; logout, logout working, superuser site selection, worklist
"RTN","SAMIHUL",176,0)
 ; functionality.
"RTN","SAMIHUL",177,0)
 ;
"RTN","SAMIHUL",178,0)
 ; 2020-08-06 ven/gpl 18.6 781744c3
"RTN","SAMIHUL",179,0)
 ;  SAMIHOM4 changes to support hl7 transmission of notes.
"RTN","SAMIHUL",180,0)
 ;
"RTN","SAMIHUL",181,0)
 ; 2020-09-22 ven/gpl 18.9 06459eda
"RTN","SAMIHUL",182,0)
 ;  SAMIHOM4 correct to match kids file.
"RTN","SAMIHUL",183,0)
 ;
"RTN","SAMIHUL",184,0)
 ; 2021-03-02 ven/gpl 18.9 479dc041
"RTN","SAMIHUL",185,0)
 ;  SAMIHOM4 return error message if no ct eval form exists when
"RTN","SAMIHUL",186,0)
 ; generating a fu note.
"RTN","SAMIHUL",187,0)
 ;
"RTN","SAMIHUL",188,0)
 ; 2021-03-11 ven/toad 18.9 a46a2cc1
"RTN","SAMIHUL",189,0)
 ;  SAMIHUL create routine.
"RTN","SAMIHUL",190,0)
 ;  SAMIHOM4 bump date & patch list, add contents, lt refactor.
"RTN","SAMIHUL",191,0)
 ;
"RTN","SAMIHUL",192,0)
 ; 2021-03-17 ven/toad 18.9
"RTN","SAMIHUL",193,0)
 ;  SAMIHOM4 remove blank from end of 1 line.
"RTN","SAMIHUL",194,0)
 ;
"RTN","SAMIHUL",195,0)
 ; 2021-05-29 ven/gpl 18.12-t2 59ea0811
"RTN","SAMIHUL",196,0)
 ;  SAMIHOM3 in SID2NUM look up by pien instead of relying on sid
"RTN","SAMIHUL",197,0)
 ; containing pien.
"RTN","SAMIHUL",198,0)
 ;
"RTN","SAMIHUL",199,0)
 ; 2021-06-15 ven/gpl 18.12-t2 e247ea59
"RTN","SAMIHUL",200,0)
 ;  SAMIHOM4 eliminate icn.
"RTN","SAMIHUL",201,0)
 ;
"RTN","SAMIHUL",202,0)
 ; 2021-06-15/16 ven/mcglk&toad 18.12-t2 cbf7e46b,fa794d60
"RTN","SAMIHUL",203,0)
 ;  SAMIHOM3 move log to SAMIHUL, bump dates & versions, annotate,
"RTN","SAMIHUL",204,0)
 ; reorg, lt refactor.
"RTN","SAMIHUL",205,0)
 ;  SAMIHOM4 bump dates & versions; begin annotate, reorg, lt refactor
"RTN","SAMIHUL",206,0)
 ; but interrupted by addition of critical fix to patch & bronchitis,
"RTN","SAMIHUL",207,0)
 ; so leave refactor unfinished (but stable as far as it went).
"RTN","SAMIHUL",208,0)
 ;  SAMIUTH3 bump dates & versions, lt refactor, add COVER, in UTSCAN4
"RTN","SAMIHUL",209,0)
 ; fix $random bug, but after discovering the SAMI test suite is so
"RTN","SAMIHUL",210,0)
 ; far out of date that it fails catastrophically with thousands of
"RTN","SAMIHUL",211,0)
 ; errors, back out changes and leave as it was.
"RTN","SAMIHUL",212,0)
 ;
"RTN","SAMIHUL",213,0)
 ; 2021-08-01 ven/gpl 18.12 5bd7c627
"RTN","SAMIHUL",214,0)
 ;  SAMIHOM3 set intake form to incomplete on creation: in MKSIFORM
"RTN","SAMIHUL",215,0)
 ; r/complete w/incomplete.
"RTN","SAMIHUL",216,0)
 ;
"RTN","SAMIHUL",217,0)
 ;@contents
"RTN","SAMIHUL",218,0)
 ; SAMIHOM3 homepage interface library
"RTN","SAMIHUL",219,0)
 ; SAMIHOM4 homepage subroutines
"RTN","SAMIHUL",220,0)
 ; SAMIHUL homepage development log
"RTN","SAMIHUL",221,0)
 ; SAMIUTH3 tests for SAMIHOM3
"RTN","SAMIHUL",222,0)
 ; SAMIUTH4 tests for SAMIHOM4
"RTN","SAMIHUL",223,0)
 ;
"RTN","SAMIHUL",224,0)
 ;
"RTN","SAMIHUL",225,0)
 ;
"RTN","SAMIHUL",226,0)
EOR ; end of routine SAMIHUL
"RTN","SAMIJS1")
0^36^B33789646
"RTN","SAMIJS1",1,0)
SAMIJS1 ;ven/gpl - json archive export ;2021-07-01t16:58z
"RTN","SAMIJS1",2,0)
 ;;18.0;SAMI;**8,12**;2020-01;Build 1
"RTN","SAMIJS1",3,0)
 ;;18.12
"RTN","SAMIJS1",4,0)
 ;
"RTN","SAMIJS1",5,0)
 ; Routine SAMIJS1 contains subroutines for exporting VAPALS-ELCAP
"RTN","SAMIJS1",6,0)
 ; JSON archives, which are used for import, export, & migration of
"RTN","SAMIJS1",7,0)
 ; SAMI data.
"RTN","SAMIJS1",8,0)
 ;
"RTN","SAMIJS1",9,0)
 quit  ; no entry from top
"RTN","SAMIJS1",10,0)
 ;
"RTN","SAMIJS1",11,0)
 ;
"RTN","SAMIJS1",12,0)
 ;
"RTN","SAMIJS1",13,0)
 ;@section 0 primary development
"RTN","SAMIJS1",14,0)
 ;
"RTN","SAMIJS1",15,0)
 ;
"RTN","SAMIJS1",16,0)
 ;
"RTN","SAMIJS1",17,0)
 ;@routine-credits
"RTN","SAMIJS1",18,0)
 ;@dev-main George P. Lilly (gpl)
"RTN","SAMIJS1",19,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIJS1",20,0)
 ;@dev-org-main Vista Expertise Network (ven)
"RTN","SAMIJS1",21,0)
 ; http://vistaexpertise.net
"RTN","SAMIJS1",22,0)
 ;@copyright 2017/2021, gpl, all rights reserved
"RTN","SAMIJS1",23,0)
 ;@license see routine SAMIUL
"RTN","SAMIJS1",24,0)
 ;
"RTN","SAMIJS1",25,0)
 ;@last-update 2021-07-01t16:58z
"RTN","SAMIJS1",26,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMIJS1",27,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMIJS1",28,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMIJS1",29,0)
 ;@version 18.12
"RTN","SAMIJS1",30,0)
 ;@release-date 2020-01
"RTN","SAMIJS1",31,0)
 ;@patch-list **8,12**
"RTN","SAMIJS1",32,0)
 ;
"RTN","SAMIJS1",33,0)
 ;@dev-add Frederick D. S. Marshall (toad)
"RTN","SAMIJS1",34,0)
 ; toad@vistaexpertise.net
"RTN","SAMIJS1",35,0)
 ;@dev-add Kenneth W. McGlothlen (mcglk)
"RTN","SAMIJS1",36,0)
 ; mcglk@vistaexpertise.net
"RTN","SAMIJS1",37,0)
 ;
"RTN","SAMIJS1",38,0)
 ;@routine-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMIJS1",39,0)
 ; 2020-12-11 ven/gpl 18.8 0c73272b,92138cdb
"RTN","SAMIJS1",40,0)
 ;  SAMIJS1 initial data migration export, add DETAIL^SAMIJS1 for
"RTN","SAMIJS1",41,0)
 ; debugging.
"RTN","SAMIJS1",42,0)
 ;
"RTN","SAMIJS1",43,0)
 ; 2021-05-29 ven/gpl 18.12-t2 0a3b184f
"RTN","SAMIJS1",44,0)
 ;  SAMIJS1,SAMIJS2 update data migration routines; new SAMIJS2.
"RTN","SAMIJS1",45,0)
 ;
"RTN","SAMIJS1",46,0)
 ; 2021-07-01 ven/mcglk&toad 18.12-t2 cbf7e46b
"RTN","SAMIJS1",47,0)
 ;  SAMIJS1,SAMIJS2 bump version & dates, add hdr comments & dev log.
"RTN","SAMIJS1",48,0)
 ;
"RTN","SAMIJS1",49,0)
 ;@contents
"RTN","SAMIJS1",50,0)
 ; EN ???
"RTN","SAMIJS1",51,0)
 ; EXSITE ???
"RTN","SAMIJS1",52,0)
 ; $$dfn2lien lookup ien of patient dfn
"RTN","SAMIJS1",53,0)
 ; $$dfn2pien patient graph ien of patient dfn
"RTN","SAMIJS1",54,0)
 ; $$getaien ien for patient dfn in vapals-archive
"RTN","SAMIJS1",55,0)
 ; mkarch create archive record for patient dfn
"RTN","SAMIJS1",56,0)
 ; outarch write archive record to external file
"RTN","SAMIJS1",57,0)
 ; DETAIL display archive record for patient
"RTN","SAMIJS1",58,0)
 ; 
"RTN","SAMIJS1",59,0)
 ;
"RTN","SAMIJS1",60,0)
 ;
"RTN","SAMIJS1",61,0)
 ;@section 1 subroutines
"RTN","SAMIJS1",62,0)
 ;
"RTN","SAMIJS1",63,0)
 ;
"RTN","SAMIJS1",64,0)
 ;
"RTN","SAMIJS1",65,0)
EN ;
"RTN","SAMIJS1",66,0)
 n site,dfn,pat
"RTN","SAMIJS1",67,0)
 s site=$$PICSITE^SAMIMOV()
"RTN","SAMIJS1",68,0)
 q:site="^"
"RTN","SAMIJS1",69,0)
 d PICPAT^SAMIMOV(.pat,site)
"RTN","SAMIJS1",70,0)
 w "   ",$g(pat("name"))
"RTN","SAMIJS1",71,0)
 s dfn=$g(pat("dfn"))
"RTN","SAMIJS1",72,0)
 w !,"dfn=",dfn
"RTN","SAMIJS1",73,0)
 d mkarch(dfn)
"RTN","SAMIJS1",74,0)
 d outarch(dfn)
"RTN","SAMIJS1",75,0)
 q
"RTN","SAMIJS1",76,0)
 ;
"RTN","SAMIJS1",77,0)
 ;
"RTN","SAMIJS1",78,0)
 ;
"RTN","SAMIJS1",79,0)
EXSITE ;
"RTN","SAMIJS1",80,0)
 n site,dfn,pat
"RTN","SAMIJS1",81,0)
 s site=$$PICSITE^SAMIMOV()
"RTN","SAMIJS1",82,0)
 q:site="^"
"RTN","SAMIJS1",83,0)
 n lroot,proot,aroot
"RTN","SAMIJS1",84,0)
 s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIJS1",85,0)
 s proot=$$setroot^%wd("vapals-patients")
"RTN","SAMIJS1",86,0)
 s aroot=$$setroot^%wd("vapals-archive")
"RTN","SAMIJS1",87,0)
 n dfn,lien s dfn=""
"RTN","SAMIJS1",88,0)
 f  s dfn=$o(@lroot@("dfn",dfn)) q:+dfn=0  d  ;
"RTN","SAMIJS1",89,0)
 . s lien=$o(@lroot@("dfn",dfn,""))
"RTN","SAMIJS1",90,0)
 . i $g(@lroot@(lien,"siteid"))'=site q  ;
"RTN","SAMIJS1",91,0)
 . d mkarch(dfn)
"RTN","SAMIJS1",92,0)
 . d outarch(dfn)
"RTN","SAMIJS1",93,0)
 q
"RTN","SAMIJS1",94,0)
 ;
"RTN","SAMIJS1",95,0)
 ;
"RTN","SAMIJS1",96,0)
 ;
"RTN","SAMIJS1",97,0)
dfn2lien(dfn) ; extrinsic return the lookup ien of patient dfn
"RTN","SAMIJS1",98,0)
 n lroot,lien
"RTN","SAMIJS1",99,0)
 s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIJS1",100,0)
 s lien=$o(@lroot@("dfn",dfn,""))
"RTN","SAMIJS1",101,0)
 q lien
"RTN","SAMIJS1",102,0)
 ;
"RTN","SAMIJS1",103,0)
 ;
"RTN","SAMIJS1",104,0)
 ;
"RTN","SAMIJS1",105,0)
dfn2pien(dfn) ; extrinsic return the patient graph ien of patient dfn
"RTN","SAMIJS1",106,0)
 n proot,pien
"RTN","SAMIJS1",107,0)
 s proot=$$setroot^%wd("vapals-patients")
"RTN","SAMIJS1",108,0)
 s pien=$o(@proot@("dfn",dfn,""))
"RTN","SAMIJS1",109,0)
 q pien
"RTN","SAMIJS1",110,0)
 ;
"RTN","SAMIJS1",111,0)
 ;
"RTN","SAMIJS1",112,0)
 ;
"RTN","SAMIJS1",113,0)
getaien(dfn) ; returns the ien for patient dfn in vapals-archive
"RTN","SAMIJS1",114,0)
 ; is laygo
"RTN","SAMIJS1",115,0)
 n aroot s aroot=$$setroot^%wd("vapals-archive")
"RTN","SAMIJS1",116,0)
 n aien
"RTN","SAMIJS1",117,0)
 s aien=$o(@aroot@(" "),-1)+1
"RTN","SAMIJS1",118,0)
 q aien
"RTN","SAMIJS1",119,0)
 ;
"RTN","SAMIJS1",120,0)
 ;
"RTN","SAMIJS1",121,0)
 ;
"RTN","SAMIJS1",122,0)
mkarch(dfn) ; create an archive record for patient dfn
"RTN","SAMIJS1",123,0)
 n lroot,proot,aroot
"RTN","SAMIJS1",124,0)
 n lien,pien,aien
"RTN","SAMIJS1",125,0)
 s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIJS1",126,0)
 w !,"patient-lookup: ",lroot
"RTN","SAMIJS1",127,0)
 s proot=$$setroot^%wd("vapals-patients")
"RTN","SAMIJS1",128,0)
 w !,"vapals-patients: ",proot
"RTN","SAMIJS1",129,0)
 s aroot=$$setroot^%wd("vapals-archive")
"RTN","SAMIJS1",130,0)
 w !,"vapals-archive: ",aroot
"RTN","SAMIJS1",131,0)
 ;
"RTN","SAMIJS1",132,0)
 s lien=$$dfn2lien(dfn)
"RTN","SAMIJS1",133,0)
 w !,"lien=",lien
"RTN","SAMIJS1",134,0)
 s pien=$$dfn2pien(dfn)
"RTN","SAMIJS1",135,0)
 w !,"pien=",pien
"RTN","SAMIJS1",136,0)
 ;
"RTN","SAMIJS1",137,0)
 i lien="" d  q  ;
"RTN","SAMIJS1",138,0)
 . w !,"error, lookup ien not found for patient dfn=",dfn
"RTN","SAMIJS1",139,0)
 ;
"RTN","SAMIJS1",140,0)
 s aien=$o(@aroot@("dfn",dfn,""))
"RTN","SAMIJS1",141,0)
 i aien'="" d  ;
"RTN","SAMIJS1",142,0)
 . k @aroot@(aien)
"RTN","SAMIJS1",143,0)
 i aien="" s aien=$$getaien(dfn)
"RTN","SAMIJS1",144,0)
 w !,"aien=",aien
"RTN","SAMIJS1",145,0)
 ;
"RTN","SAMIJS1",146,0)
 m @aroot@(aien,"patient","lookup")=@lroot@(lien)
"RTN","SAMIJS1",147,0)
 s @aroot@("dfn",dfn,aien)=""
"RTN","SAMIJS1",148,0)
 ;
"RTN","SAMIJS1",149,0)
 n sid s sid=""
"RTN","SAMIJS1",150,0)
 d:pien'=""
"RTN","SAMIJS1",151,0)
 . m @aroot@(aien,"patient","demos")=@proot@(pien)
"RTN","SAMIJS1",152,0)
 . s sid=$g(@proot@(pien,"samistudyid"))
"RTN","SAMIJS1",153,0)
 . i sid="" s sid=$g(@proot@(pien,"sisid"))
"RTN","SAMIJS1",154,0)
 . q:sid=""
"RTN","SAMIJS1",155,0)
 . m @aroot@(aien,"patient","graph")=@proot@("graph",sid)
"RTN","SAMIJS1",156,0)
 ;
"RTN","SAMIJS1",157,0)
 q
"RTN","SAMIJS1",158,0)
 ;
"RTN","SAMIJS1",159,0)
 ;
"RTN","SAMIJS1",160,0)
 ;
"RTN","SAMIJS1",161,0)
outarch(dfn) ; write out an archive record to an external file
"RTN","SAMIJS1",162,0)
 n aroot s aroot=$$setroot^%wd("vapals-archive")
"RTN","SAMIJS1",163,0)
 n aien s aien=$o(@aroot@("dfn",dfn,""),-1)
"RTN","SAMIJS1",164,0)
 q:aien=""
"RTN","SAMIJS1",165,0)
 ;
"RTN","SAMIJS1",166,0)
 n sid s sid=$g(@aroot@(aien,"patient","demos","samistudyid"))
"RTN","SAMIJS1",167,0)
 n tmpout s tmpout=$na(^TMP("VAPALS-ARCH",$J))
"RTN","SAMIJS1",168,0)
 k @tmpout
"RTN","SAMIJS1",169,0)
 n arec s arec=$na(@aroot@(aien))
"RTN","SAMIJS1",170,0)
 d encode^%webjson(arec,tmpout)
"RTN","SAMIJS1",171,0)
 ;
"RTN","SAMIJS1",172,0)
 n adir,fname
"RTN","SAMIJS1",173,0)
 s adir="/home/osehra/www/archive"
"RTN","SAMIJS1",174,0)
 s fname="vapals-"_sid_"-"_dfn_"-"_DT_".json"
"RTN","SAMIJS1",175,0)
 i $$GTF^%ZISH($NA(@tmpout@(1)),3,adir,fname) d  ;
"RTN","SAMIJS1",176,0)
 . w !,"file "_fname_" written to "_adir
"RTN","SAMIJS1",177,0)
 ;
"RTN","SAMIJS1",178,0)
 q
"RTN","SAMIJS1",179,0)
 ;
"RTN","SAMIJS1",180,0)
 ;
"RTN","SAMIJS1",181,0)
 ;
"RTN","SAMIJS1",182,0)
DETAIL() ; displays the archive record for a patient
"RTN","SAMIJS1",183,0)
 ;
"RTN","SAMIJS1",184,0)
 n site,dfn,pat
"RTN","SAMIJS1",185,0)
 s site=$$PICSITE^SAMIMOV()
"RTN","SAMIJS1",186,0)
 q:site="^"
"RTN","SAMIJS1",187,0)
 d PICPAT^SAMIMOV(.pat,site)
"RTN","SAMIJS1",188,0)
 w "   ",$g(pat("name"))
"RTN","SAMIJS1",189,0)
 s dfn=$g(pat("dfn"))
"RTN","SAMIJS1",190,0)
 w !,"dfn=",dfn
"RTN","SAMIJS1",191,0)
 q:dfn=""
"RTN","SAMIJS1",192,0)
 n aroot ; archive root
"RTN","SAMIJS1",193,0)
 s aroot=$$setroot^%wd("vapals-archive")
"RTN","SAMIJS1",194,0)
 d mkarch(dfn)
"RTN","SAMIJS1",195,0)
 n aien
"RTN","SAMIJS1",196,0)
 s aien=$o(@aroot@("dfn",dfn,""))
"RTN","SAMIJS1",197,0)
 i aien="" d  q  ;
"RTN","SAMIJS1",198,0)
 . w !,"patient not found in archive"
"RTN","SAMIJS1",199,0)
 n groot
"RTN","SAMIJS1",200,0)
 s groot=$na(@aroot@(aien))
"RTN","SAMIJS1",201,0)
 n OUT s OUT=$na(^TMP("SAMIOUT",$J))
"RTN","SAMIJS1",202,0)
 k @OUT
"RTN","SAMIJS1",203,0)
 D GTREE^SYNVPR(groot,9,,,OUT)
"RTN","SAMIJS1",204,0)
 D BROWSE^DDBR(OUT,"N","Patient")
"RTN","SAMIJS1",205,0)
 k @OUT
"RTN","SAMIJS1",206,0)
 q
"RTN","SAMIJS1",207,0)
 ;
"RTN","SAMIJS1",208,0)
 ;
"RTN","SAMIJS1",209,0)
 ;
"RTN","SAMIJS1",210,0)
EOR ; end of routine SAMIJS1
"RTN","SAMIJS2")
0^37^B50752409
"RTN","SAMIJS2",1,0)
SAMIJS2 ;ven/gpl - json archive import ;2021-07-01t17:08z
"RTN","SAMIJS2",2,0)
 ;;18.0;SAMI;**12**;2020-01;Build 1
"RTN","SAMIJS2",3,0)
 ;;18.12
"RTN","SAMIJS2",4,0)
 ;
"RTN","SAMIJS2",5,0)
 ; Routine SAMIJS2 contains more subroutines for importing VAPALS-
"RTN","SAMIJS2",6,0)
 ; ELCAP JSON archives, which are used for import, export, & migration
"RTN","SAMIJS2",7,0)
 ; of SAMI data.
"RTN","SAMIJS2",8,0)
 ;
"RTN","SAMIJS2",9,0)
 quit  ; no entry from top
"RTN","SAMIJS2",10,0)
 ;
"RTN","SAMIJS2",11,0)
 ;
"RTN","SAMIJS2",12,0)
 ;
"RTN","SAMIJS2",13,0)
 ;@section 0 primary development
"RTN","SAMIJS2",14,0)
 ;
"RTN","SAMIJS2",15,0)
 ;
"RTN","SAMIJS2",16,0)
 ;
"RTN","SAMIJS2",17,0)
 ;@routine-credits
"RTN","SAMIJS2",18,0)
 ;@dev-main George P. Lilly (gpl)
"RTN","SAMIJS2",19,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIJS2",20,0)
 ;@dev-org-main Vista Expertise Network (ven)
"RTN","SAMIJS2",21,0)
 ; http://vistaexpertise.net
"RTN","SAMIJS2",22,0)
 ;@copyright 2017/2021, gpl, all rights reserved
"RTN","SAMIJS2",23,0)
 ;@license see routine SAMIUL
"RTN","SAMIJS2",24,0)
 ;
"RTN","SAMIJS2",25,0)
 ;@last-update 2021-07-01t17:08z
"RTN","SAMIJS2",26,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMIJS2",27,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMIJS2",28,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMIJS2",29,0)
 ;@version 18.12
"RTN","SAMIJS2",30,0)
 ;@release-date 2020-01
"RTN","SAMIJS2",31,0)
 ;@patch-list **12**
"RTN","SAMIJS2",32,0)
 ;
"RTN","SAMIJS2",33,0)
 ;@dev-add Frederick D. S. Marshall (toad)
"RTN","SAMIJS2",34,0)
 ; toad@vistaexpertise.net
"RTN","SAMIJS2",35,0)
 ;@dev-add Kenneth W. McGlothlen (mcglk)
"RTN","SAMIJS2",36,0)
 ; mcglk@vistaexpertise.net
"RTN","SAMIJS2",37,0)
 ;
"RTN","SAMIJS2",38,0)
 ;@routine-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMIJS2",39,0)
 ; see routine SAMIJS1 for dev log.
"RTN","SAMIJS2",40,0)
 ;
"RTN","SAMIJS2",41,0)
 ;@contents
"RTN","SAMIJS2",42,0)
 ; FILE load files from file system
"RTN","SAMIJS2",43,0)
 ; wsPostSAMI accept incoming SAMI record in VAPALS
"RTN","SAMIJS2",44,0)
 ; $$loaded is filename already loaded?
"RTN","SAMIJS2",45,0)
 ; 
"RTN","SAMIJS2",46,0)
 ;
"RTN","SAMIJS2",47,0)
 ;
"RTN","SAMIJS2",48,0)
 ;@section 1 subroutines
"RTN","SAMIJS2",49,0)
 ;
"RTN","SAMIJS2",50,0)
 ;
"RTN","SAMIJS2",51,0)
 ;
"RTN","SAMIJS2",52,0)
FILE(directory) ; [Public] Load files from the file system; OPT: SAMI LOAD FILES
"RTN","SAMIJS2",53,0)
 ;
"RTN","SAMIJS2",54,0)
 if '$data(directory) do
"RTN","SAMIJS2",55,0)
 . N DIR,X,Y,DA,DIRUT,DTOUT,DUOUT,DIROUT
"RTN","SAMIJS2",56,0)
 . S DIR(0)="F^0:1024"
"RTN","SAMIJS2",57,0)
 . S DIR("A")="Enter directory from which to load Patients"
"RTN","SAMIJS2",58,0)
 . D ^DIR
"RTN","SAMIJS2",59,0)
 . W !
"RTN","SAMIJS2",60,0)
 . if '$data(DIRUT) set directory=Y
"RTN","SAMIJS2",61,0)
 quit:'$data(directory)
"RTN","SAMIJS2",62,0)
 ;
"RTN","SAMIJS2",63,0)
 ; Load files from directory
"RTN","SAMIJS2",64,0)
 new samifiles
"RTN","SAMIJS2",65,0)
 new samimask set samimask("*.json")=""
"RTN","SAMIJS2",66,0)
 new % set %=$$LIST^%ZISH(directory,$na(samimask),$na(samifiles))
"RTN","SAMIJS2",67,0)
 if '% write "Failed to read any files. Check directory.",! quit
"RTN","SAMIJS2",68,0)
 ;
"RTN","SAMIJS2",69,0)
 new file set file=""
"RTN","SAMIJS2",70,0)
 for  set file=$order(samifiles(file)) q:file=""  do
"RTN","SAMIJS2",71,0)
 . if file["Information" quit  ; We don't process information files yet...
"RTN","SAMIJS2",72,0)
 . ;
"RTN","SAMIJS2",73,0)
 . write "Loading ",file,"...",!
"RTN","SAMIJS2",74,0)
 . if $$loaded(file) d  q  ;
"RTN","SAMIJS2",75,0)
 .. w "already loaded, skipping "_file,!
"RTN","SAMIJS2",76,0)
 . ;
"RTN","SAMIJS2",77,0)
 . kill ^TMP("SAMIFILE",$J)
"RTN","SAMIJS2",78,0)
 . new % set %=$$FTG^%ZISH(directory,file,$name(^TMP("SAMIFILE",$J,1)),3)
"RTN","SAMIJS2",79,0)
 . i '% write "Failed to read the file. Please debug me.",! quit
"RTN","SAMIJS2",80,0)
 . ;
"RTN","SAMIJS2",81,0)
 . ; Normalize overflow nodes (and hope for the best that we don't go over 32k)
"RTN","SAMIJS2",82,0)
 . new i,j set (i,j)=""
"RTN","SAMIJS2",83,0)
 . for  set i=$order(^TMP("SAMIFILE",$J,i)) quit:'i  for  set j=$order(^TMP("SAMIFILE",$J,i,"OVF",j)) quit:'j  do
"RTN","SAMIJS2",84,0)
 .. set ^TMP("SAMIFILE",$J,i)=^TMP("SAMIFILE",$J,i)_^TMP("SAMIFILE",$J,i,"OVF",j)  ; ** NOT TESTED **
"RTN","SAMIJS2",85,0)
 . ;
"RTN","SAMIJS2",86,0)
 . ; Now load the file into Vapals
"RTN","SAMIJS2",87,0)
 . write "Ingesting ",file,"...",!
"RTN","SAMIJS2",88,0)
 . ;
"RTN","SAMIJS2",89,0)
 . do
"RTN","SAMIJS2",90,0)
 .. new samifiles,file,directory
"RTN","SAMIJS2",91,0)
 .. do KILL^XUSCLEAN ; VistA leaks like hell
"RTN","SAMIJS2",92,0)
 . ;
"RTN","SAMIJS2",93,0)
 . new root set root=$$setroot^%wd("vapals-intake")
"RTN","SAMIJS2",94,0)
 . new ien set ien=$order(@root@(" "),-1)+1
"RTN","SAMIJS2",95,0)
 . new gr set gr=$name(@root@(ien,"json"))
"RTN","SAMIJS2",96,0)
 . do decode^%webjson($na(^TMP("SAMIFILE",$J)),gr)
"RTN","SAMIJS2",97,0)
 . set @root@("file",file,ien)=""
"RTN","SAMIJS2",98,0)
 . new args,samijsonreturn
"RTN","SAMIJS2",99,0)
 . new % set %=$$wsPostSAMI(.args,,.samijsonreturn,ien) ; ignore % which always comes out at 1
"RTN","SAMIJS2",100,0)
 . ;
"RTN","SAMIJS2",101,0)
 . ; Get the status back from JSON
"RTN","SAMIJS2",102,0)
 . new samireturn,samijsonerror
"RTN","SAMIJS2",103,0)
 . do decode^%webjson($na(samijsonreturn),$na(samireturn),$na(samijsonerror))
"RTN","SAMIJS2",104,0)
 . if $data(samijsonerror) write "There is an error decoding the return. Debug me." quit
"RTN","SAMIJS2",105,0)
 . ;
"RTN","SAMIJS2",106,0)
 . q:'$d(samireturn)
"RTN","SAMIJS2",107,0)
 . if $get(samireturn("loadMessage"))["Duplicate" write "Patient Already Loaded",! quit
"RTN","SAMIJS2",108,0)
 . n errmsg s errmsg=$get(samireturn("loadMessage"))
"RTN","SAMIJS2",109,0)
 . if errmsg["Error" d  q  ;
"RTN","SAMIJS2",110,0)
 . . write errmsg,!
"RTN","SAMIJS2",111,0)
 . write " ",errmsg,!
"RTN","SAMIJS2",112,0)
 . ;
"RTN","SAMIJS2",113,0)
 . write " Loaded with following data: ",!
"RTN","SAMIJS2",114,0)
 . write "DFN: ",$g(samireturn("dfn")),?15,"STUDYID: ",$g(samireturn("sid")),?25," LIEN: ",$g(samireturn("ien")),?50,"Name: ",$g(samireturn("name")),!
"RTN","SAMIJS2",115,0)
 . write "--------------------------------------------------------------------------",!
"RTN","SAMIJS2",116,0)
 . ;b
"RTN","SAMIJS2",117,0)
 q
"RTN","SAMIJS2",118,0)
 ;
"RTN","SAMIJS2",119,0)
 ;
"RTN","SAMIJS2",120,0)
 ;
"RTN","SAMIJS2",121,0)
wsPostSAMI(args,body,return,ien) ; accept incoming SAMI record in VAPALS
"RTN","SAMIJS2",122,0)
 ;
"RTN","SAMIJS2",123,0)
 n rtn
"RTN","SAMIJS2",124,0)
 n lroot,proot,iroot
"RTN","SAMIJS2",125,0)
 s iroot=$$setroot^%wd("vapals-intake")
"RTN","SAMIJS2",126,0)
 s proot=$$setroot^%wd("vapals-patients")
"RTN","SAMIJS2",127,0)
 s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIJS2",128,0)
 n lien,pien,grloaded,dfn,sid
"RTN","SAMIJS2",129,0)
 s (lien,pien,grloaded)=0
"RTN","SAMIJS2",130,0)
 i '$d(@iroot@(ien,"json","patient","lookup")) d  q  ;
"RTN","SAMIJS2",131,0)
 . s rtn("loadMessage")="Error, patient lookup missing"
"RTN","SAMIJS2",132,0)
 . d encode^%webjson("rtn","return","zerr")
"RTN","SAMIJS2",133,0)
 ; so, what is the dfn.. it is the number for this patient on this system
"RTN","SAMIJS2",134,0)
 ;s dfn=$g(@iroot@(ien,"json","patient","lookup","dfn"))
"RTN","SAMIJS2",135,0)
 ;i dfn="" d  q  ;
"RTN","SAMIJS2",136,0)
 ;. s rtn("loadMessage")="Error, dfn missing"
"RTN","SAMIJS2",137,0)
 ;. d encode^%webjson("rtn","return","zerr")
"RTN","SAMIJS2",138,0)
 ;n newdfn s newdfn=0
"RTN","SAMIJS2",139,0)
 ;i $d(@lroot@("dfn",dfn)) d  ; oops need a new dfn for this system
"RTN","SAMIJS2",140,0)
 ;. s dfn=$o(@lroot@("dfn"," "),-1)+1
"RTN","SAMIJS2",141,0)
 ;. s newdfn=1 ; remember to propogate the new dfn
"RTN","SAMIJS2",142,0)
 s dfn=$o(@lroot@("dfn"," "),-1)+1
"RTN","SAMIJS2",143,0)
 i $o(@proot@("dfn"," "),-1)+1>dfn s dfn=$o(@proot@("dfn"," "),-1)+1
"RTN","SAMIJS2",144,0)
 s rtn("dfn")=dfn
"RTN","SAMIJS2",145,0)
 i '$d(@lroot@(dfn)) s lien=dfn
"RTN","SAMIJS2",146,0)
 e  s lien=$o(@lroot@(" "),-1)+1
"RTN","SAMIJS2",147,0)
 s rtn("ien")=lien
"RTN","SAMIJS2",148,0)
 ;i newdfn=1 s @lroot@(lien,"dfn")=dfn
"RTN","SAMIJS2",149,0)
 n name s name=$g(@iroot@(ien,"json","patient","lookup","saminame"))
"RTN","SAMIJS2",150,0)
 i name="" d  q  ;
"RTN","SAMIJS2",151,0)
 . s rtn("loadMessage")="Error, name missing"
"RTN","SAMIJS2",152,0)
 . d encode^%webjson("rtn","return","zerr")
"RTN","SAMIJS2",153,0)
 s rtn("name")=name
"RTN","SAMIJS2",154,0)
 m @lroot@(lien)=@iroot@(ien,"json","patient","lookup")
"RTN","SAMIJS2",155,0)
 s @lroot@(lien,"dfn")=dfn
"RTN","SAMIJS2",156,0)
 d INDXPTLK^SAMIHOM4(lien)
"RTN","SAMIJS2",157,0)
 ;
"RTN","SAMIJS2",158,0)
 ; detect if enrolled
"RTN","SAMIJS2",159,0)
 ;
"RTN","SAMIJS2",160,0)
 i '$d(@iroot@(ien,"json","patient","demos")) d  q  ;
"RTN","SAMIJS2",161,0)
 . s rtn("loadMessage")="Load sucessful, not enrolled"
"RTN","SAMIJS2",162,0)
 . d encode^%webjson("rtn","return","zerr")
"RTN","SAMIJS2",163,0)
 ; 
"RTN","SAMIJS2",164,0)
 ; determine pien in vapals-patients
"RTN","SAMIJS2",165,0)
 ;
"RTN","SAMIJS2",166,0)
 ;i '$d(@proot@(dfn)) s pien=dfn
"RTN","SAMIJS2",167,0)
 ;e  s pien=$$NEXTNUM^SAMIHOM3()
"RTN","SAMIJS2",168,0)
 s pien=$$NEXTNUM^SAMIHOM3()
"RTN","SAMIJS2",169,0)
 m @proot@(pien)=@iroot@(ien,"json","patient","demos")
"RTN","SAMIJS2",170,0)
 s @proot@("dfn",dfn,pien)=""
"RTN","SAMIJS2",171,0)
 ;i newdfn s @proot@(pien,"dfn")=dfn
"RTN","SAMIJS2",172,0)
 s @proot@(pien,"dfn")=dfn
"RTN","SAMIJS2",173,0)
 ;
"RTN","SAMIJS2",174,0)
 ; determine studyid (sid)
"RTN","SAMIJS2",175,0)
 ;
"RTN","SAMIJS2",176,0)
 n sid s sid=$g(@proot@(pien,"samistudyid"))
"RTN","SAMIJS2",177,0)
 i sid="" d  q  ;
"RTN","SAMIJS2",178,0)
 . s rtn("loadMessage")="Error, studyid missing"
"RTN","SAMIJS2",179,0)
 . d encode^%webjson("rtn","return","zerr")
"RTN","SAMIJS2",180,0)
 i $d(@proot@("sid",sid)) d  q  ; opps we need a new sid for this system
"RTN","SAMIJS2",181,0)
 . s rtn("loadMessage")="Error, studyid is not unique"
"RTN","SAMIJS2",182,0)
 . d encode^%webjson("rtn","return","zerr")
"RTN","SAMIJS2",183,0)
 s rtn("sid")=sid
"RTN","SAMIJS2",184,0)
 s @proot@("sid",sid,pien)=""
"RTN","SAMIJS2",185,0)
 ;
"RTN","SAMIJS2",186,0)
 ; merge in all the forms
"RTN","SAMIJS2",187,0)
 ;
"RTN","SAMIJS2",188,0)
 m @proot@("graph",sid)=@iroot@(ien,"json","patient","graph")
"RTN","SAMIJS2",189,0)
 ;
"RTN","SAMIJS2",190,0)
 ; encode the successful return
"RTN","SAMIJS2",191,0)
 ;
"RTN","SAMIJS2",192,0)
 s rtn("loadMessage")="Load successful, enrolled"
"RTN","SAMIJS2",193,0)
 d encode^%webjson("rtn","return","zerr")
"RTN","SAMIJS2",194,0)
 q
"RTN","SAMIJS2",195,0)
 ;
"RTN","SAMIJS2",196,0)
 ;
"RTN","SAMIJS2",197,0)
 ;
"RTN","SAMIJS2",198,0)
loaded(filenm,graph) ;extrinsic returns 1 if the filename is already loaded
"RTN","SAMIJS2",199,0)
 ; in the graph default for graph is vapals-intake
"RTN","SAMIJS2",200,0)
 if $g(graph)="" s graph="vapals-intake"
"RTN","SAMIJS2",201,0)
 n tmproot s tmproot=$$setroot^%wd(graph)
"RTN","SAMIJS2",202,0)
 i $d(@tmproot@("file",filenm)) q 1
"RTN","SAMIJS2",203,0)
 q 0
"RTN","SAMIJS2",204,0)
 ;
"RTN","SAMIJS2",205,0)
 ;
"RTN","SAMIJS2",206,0)
 ;
"RTN","SAMIJS2",207,0)
EOR ; end of routine SAMIJS2
"RTN","SAMIKIDP")
0^38^B16095269
"RTN","SAMIKIDP",1,0)
SAMIKIDP ;ven/lgc - SAMI KIDS POST INSTALL ;Dec 09, 2019@13:55
"RTN","SAMIKIDP",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIKIDP",3,0)
 ;
"RTN","SAMIKIDP",4,0)
 quit  ; no entry from top
"RTN","SAMIKIDP",5,0)
 ;
"RTN","SAMIKIDP",6,0)
 ; 
"RTN","SAMIKIDP",7,0)
 ; In order to simplify pulling the graphs in the VAPALS
"RTN","SAMIKIDP",8,0)
 ;   graph file into a KIDS, load everything from the
"RTN","SAMIKIDP",9,0)
 ;   ^%wd global [graph file] into a conventional single
"RTN","SAMIKIDP",10,0)
 ;   field file.  A post install routine will pull the
"RTN","SAMIKIDP",11,0)
 ;   information out and rebuild the ^%wd global
"RTN","SAMIKIDP",12,0)
BLDKBAP ; Fill entries in ^KBAP(11312013 with all entries in ^%wd global
"RTN","SAMIKIDP",13,0)
 ;@input
"RTN","SAMIKIDP",14,0)
 ; KBAP SAMI KIDS [#11312013] file exists in environment
"RTN","SAMIKIDP",15,0)
 ; graph [#17.040801] file graphs exist in environment
"RTN","SAMIKIDP",16,0)
 ;@output
"RTN","SAMIKIDP",17,0)
 ; KBAP SAMI KIDS loaded with all entries from
"RTN","SAMIKIDP",18,0)
 ;   the graph file
"RTN","SAMIKIDP",19,0)
 ;
"RTN","SAMIKIDP",20,0)
 ; empty receiving file
"RTN","SAMIKIDP",21,0)
 new I set I=$O(^KBAP(11312013,"A"),-1)
"RTN","SAMIKIDP",22,0)
 new DIK,DA
"RTN","SAMIKIDP",23,0)
 S DIK="^KBAP(11312013," F DA=I:-1:1 D ^DIK
"RTN","SAMIKIDP",24,0)
 ;
"RTN","SAMIKIDP",25,0)
 ; Run down every node in the ^%wd graph global and
"RTN","SAMIKIDP",26,0)
 ;   save in KBAP SAMI KIDS
"RTN","SAMIKIDP",27,0)
 ; NOTE: do not save data in the "fhir-intake" graph
"RTN","SAMIKIDP",28,0)
 ;   but just save the zero node. 
"RTN","SAMIKIDP",29,0)
 n node,snode,cnt,stop
"RTN","SAMIKIDP",30,0)
 s stop=0
"RTN","SAMIKIDP",31,0)
 set node=$na(^%wd(17.040801)),snode=$piece(node,")")
"RTN","SAMIKIDP",32,0)
 for  set node=$Q(@node) do  q:stop
"RTN","SAMIKIDP",33,0)
 . if node'[snode s stop=1
"RTN","SAMIKIDP",34,0)
 . quit:stop
"RTN","SAMIKIDP",35,0)
 . if ($qs(node,2)=69) do
"RTN","SAMIKIDP",36,0)
 .. set cnt=$g(cnt)+1
"RTN","SAMIKIDP",37,0)
 .. set ^KBAP(11312013,cnt,0)=node
"RTN","SAMIKIDP",38,0)
 .. set ^KBAP(11312013,cnt,1)=@node
"RTN","SAMIKIDP",39,0)
 quit
"RTN","SAMIKIDP",40,0)
 ;
"RTN","SAMIKIDP",41,0)
 ;
"RTN","SAMIKIDP",42,0)
 ; Build the VAPALS graphs into ^%wd(17.040801 from
"RTN","SAMIKIDP",43,0)
 ;  the entries in the KBAP SAMI KIDS file
"RTN","SAMIKIDP",44,0)
 ; Once successfully completed the KBAP SAMI KIDS 
"RTN","SAMIKIDP",45,0)
 ;  file may be deleted.
"RTN","SAMIKIDP",46,0)
BLDWDG ; Build ^%wd graphs from KBAP SAMI KIDS
"RTN","SAMIKIDP",47,0)
 ;@input
"RTN","SAMIKIDP",48,0)
 ;   KBAP SAMI KIDS file [^KBAP(11312013] loaded
"RTN","SAMIKIDP",49,0)
 ;     with all nodes from the graph [#17.040801] file
"RTN","SAMIKIDP",50,0)
 ;@output
"RTN","SAMIKIDP",51,0)
 ;   graph [#17.040801] built in ^%wd
"RTN","SAMIKIDP",52,0)
 ;
"RTN","SAMIKIDP",53,0)
 ; save existing ^%wd(17.040801 global in case it
"RTN","SAMIKIDP",54,0)
 ;  is necessary to back out this rebuild
"RTN","SAMIKIDP",55,0)
 kill ^KBAP("graph")
"RTN","SAMIKIDP",56,0)
 merge ^KBAP("graph")=^%wd(17.040801)
"RTN","SAMIKIDP",57,0)
 ;
"RTN","SAMIKIDP",58,0)
 new node,snode,glb,data
"RTN","SAMIKIDP",59,0)
 set node=$na(^KBAP(11312013)),snode=$piece(node,")")
"RTN","SAMIKIDP",60,0)
 set node=$Q(@node)
"RTN","SAMIKIDP",61,0)
 for  set node=$Q(@node) q:(node'[snode)  do 
"RTN","SAMIKIDP",62,0)
 . if ($qs(node,3)=0) s glb=@node quit
"RTN","SAMIKIDP",63,0)
 . if ($qs(node,3)=1) s data=@node do
"RTN","SAMIKIDP",64,0)
 .. s @glb=data
"RTN","SAMIKIDP",65,0)
 ;
"RTN","SAMIKIDP",66,0)
 ; now rebuild "B" cross reference
"RTN","SAMIKIDP",67,0)
 set DIK="^%wd(17.040801,"
"RTN","SAMIKIDP",68,0)
 do IXALL2^DIK  ; delete all cross-references ("B")
"RTN","SAMIKIDP",69,0)
 do IXALL^DIK  ; set all cross-references ("B")
"RTN","SAMIKIDP",70,0)
 quit
"RTN","SAMIKIDP",71,0)
 ;
"RTN","SAMIKIDP",72,0)
 ;
"RTN","SAMIKIDP",73,0)
 ; MASH routines reside in the % namespace which, is not
"RTN","SAMIKIDP",74,0)
 ;   allowed in a KIDS build. Thus we need to pull the 
"RTN","SAMIKIDP",75,0)
 ;   MASH routines used by VAPALS into conventionally
"RTN","SAMIKIDP",76,0)
 ;   named routines so they may be transfered in a KIDS
"RTN","SAMIKIDP",77,0)
 ; A post install routine will copy these out into the
"RTN","SAMIKIDP",78,0)
 ;   % routines expected by VAPALS following successful
"RTN","SAMIKIDP",79,0)
 ;   installation of the KIDS.
"RTN","SAMIKIDP",80,0)
BLDRTNS ; Build new routines from MASH so they can pass through KIDS
"RTN","SAMIKIDP",81,0)
 ;@input
"RTN","SAMIKIDP",82,0)
 ;  listing of MASH routines to be converted to ^KBAPZ*
"RTN","SAMIKIDP",83,0)
 ;    routines (see linetag PRCNTR below)
"RTN","SAMIKIDP",84,0)
 ;@output
"RTN","SAMIKIDP",85,0)
 ;  new routines KBAPZ0,KBAPZ1 ... KBAPZn
"RTN","SAMIKIDP",86,0)
 ;
"RTN","SAMIKIDP",87,0)
 new cnt,file,path,rtnln,rtnarr,line
"RTN","SAMIKIDP",88,0)
 s path="/home/osehra/run/routines/"
"RTN","SAMIKIDP",89,0)
 s cnt=-1
"RTN","SAMIKIDP",90,0)
 f  s cnt=($get(cnt)+1),file=$piece($text(PRCNTR+cnt^SAMIKIDP),";;",2) quit:(file["***END***")  do
"RTN","SAMIKIDP",91,0)
 . write !,file
"RTN","SAMIKIDP",92,0)
 .;
"RTN","SAMIKIDP",93,0)
 .; open file for reading
"RTN","SAMIKIDP",94,0)
 . kill rtnarr
"RTN","SAMIKIDP",95,0)
 . set rtnln=0
"RTN","SAMIKIDP",96,0)
 . do OPEN^%ZISH("FILE",path,file,"R")
"RTN","SAMIKIDP",97,0)
 . for  use IO read line:1 quit:$$STATUS^%ZISH  do
"RTN","SAMIKIDP",98,0)
 .. set rtnln=rtnln+1,rtnarr(rtnln)=line
"RTN","SAMIKIDP",99,0)
 . do CLOSE^%ZISH
"RTN","SAMIKIDP",100,0)
 .;
"RTN","SAMIKIDP",101,0)
DEBUG . write !,! zwr rtnarr
"RTN","SAMIKIDP",102,0)
 .;
"RTN","SAMIKIDP",103,0)
 .; Open file for writing
"RTN","SAMIKIDP",104,0)
 . set file="SAMIZ"_cnt_".m"
"RTN","SAMIKIDP",105,0)
 . do OPEN^%ZISH("FILE",path,file,"W")
"RTN","SAMIKIDP",106,0)
 . set rtnln=0
"RTN","SAMIKIDP",107,0)
 . for  set rtnln=$o(rtnarr(rtnln)) q:'rtnln  d
"RTN","SAMIKIDP",108,0)
 .. set line=rtnarr(rtnln)
"RTN","SAMIKIDP",109,0)
 .. use IO write line,!
"RTN","SAMIKIDP",110,0)
 . do CLOSE^%ZISH
"RTN","SAMIKIDP",111,0)
 .;
"RTN","SAMIKIDP",112,0)
 .; Now add to ROUTINE file so KIDS can load
"RTN","SAMIKIDP",113,0)
 . new RTN set RTN=$piece(file,".")
"RTN","SAMIKIDP",114,0)
 . do LOAD^XINDEX
"RTN","SAMIKIDP",115,0)
 . set ^UTILITY($J,1,RTN,0)=RTN
"RTN","SAMIKIDP",116,0)
 .; Load into ROUTINE file
"RTN","SAMIKIDP",117,0)
 . do ^XINDX53
"RTN","SAMIKIDP",118,0)
 .; and unload ^UTILITY
"RTN","SAMIKIDP",119,0)
 . kill ^UTILITY($J,1,RTN)
"RTN","SAMIKIDP",120,0)
 ;
"RTN","SAMIKIDP",121,0)
 quit
"RTN","SAMIKIDP",122,0)
 ;
"RTN","SAMIKIDP",123,0)
 ; To rebuild the MASH routines
"RTN","SAMIKIDP",124,0)
 ;   Manually - just open each file and see what
"RTN","SAMIKIDP",125,0)
 ;      the name of the file should be and, then,
"RTN","SAMIKIDP",126,0)
 ;      rename the routine appropriately.
"RTN","SAMIKIDP",127,0)
 ;      It may be first necessary to find out where
"RTN","SAMIKIDP",128,0)
 ;      to store routines whose names start with %
"RTN","SAMIKIDP",129,0)
 ;   Automated - 
"RTN","SAMIKIDP",130,0)
 ;      run down all KBAPZn files 
"RTN","SAMIKIDP",131,0)
 ;      read the first line of the file (may have
"RTN","SAMIKIDP",132,0)
 ;       to open the file and read line 1)
"RTN","SAMIKIDP",133,0)
 ;      Grab the MASH name for the file from line 1
"RTN","SAMIKIDP",134,0)
 ;      build cmd string that copies the file
"RTN","SAMIKIDP",135,0)
 ;       to where it belongs under the new name
"RTN","SAMIKIDP",136,0)
 ;      e.g.
"RTN","SAMIKIDP",137,0)
 ;      cmd="cp KBAPZ1.m ~/special directory/%MASHname.m
"RTN","SAMIKIDP",138,0)
 ;
"RTN","SAMIKIDP",139,0)
PRCNTR ;;_wd.m
"RTN","SAMIKIDP",140,0)
 ;;_wf.m
"RTN","SAMIKIDP",141,0)
 ;;_webhome.m
"RTN","SAMIKIDP",142,0)
 ;;_wfhform.m
"RTN","SAMIKIDP",143,0)
 ;;_webutils.m
"RTN","SAMIKIDP",144,0)
 ;;_thage.m
"RTN","SAMIKIDP",145,0)
 ;;_th.m
"RTN","SAMIKIDP",146,0)
 ;;_ts.m
"RTN","SAMIKIDP",147,0)
 ;;***END***
"RTN","SAMIKIDP",148,0)
 ;;
"RTN","SAMIKIDP",149,0)
 ;
"RTN","SAMIKIDP",150,0)
TEST ;
"RTN","SAMIKIDP",151,0)
 ;
"RTN","SAMIKIDP",152,0)
 ; Open file for writing
"RTN","SAMIKIDP",153,0)
 set path="/home/osehra-cache/tmp"
"RTN","SAMIKIDP",154,0)
 set file="UTGRAPH.GBL"
"RTN","SAMIKIDP",155,0)
 do OPEN^%ZISH("FILE",path,file,"W")
"RTN","SAMIKIDP",156,0)
 for  use IO read line:1 quit:$$STATUS^%ZISH  do
"RTN","SAMIKIDP",157,0)
 . U IO(0) W !,line
"RTN","SAMIKIDP",158,0)
 do CLOSE^%ZISH
"RTN","SAMIKIDP",159,0)
 quit
"RTN","SAMIKIDP",160,0)
EOR ;End of routine SAMIKIDP
"RTN","SAMILOG")
0^39^B11755502
"RTN","SAMILOG",1,0)
SAMILOG ;ven/lgc - APIs to toggle password identification ;Jan 10, 2020@12:15
"RTN","SAMILOG",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMILOG",3,0)
 ;
"RTN","SAMILOG",4,0)
 ; @section 0 primary development
"RTN","SAMILOG",5,0)
 ;
"RTN","SAMILOG",6,0)
 ; @routine-credits
"RTN","SAMILOG",7,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMILOG",8,0)
 ;  larry@fiscientific.com
"RTN","SAMILOG",9,0)
 ; @additional-dev: Linda M. R. Yaw (lmry)
"RTN","SAMILOG",10,0)
 ;  linda.yaw@vistaexpertise.net
"RTN","SAMILOG",11,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMILOG",12,0)
 ;  http://vistaexpertise.net
"RTN","SAMILOG",13,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMILOG",14,0)
 ; @license: see routine SAMIUL
"RTN","SAMILOG",15,0)
 ;
"RTN","SAMILOG",16,0)
 ; @application: SAMI
"RTN","SAMILOG",17,0)
 ; @version: 18.0
"RTN","SAMILOG",18,0)
 ; @patch-list: none yet
"RTN","SAMILOG",19,0)
 ;
"RTN","SAMILOG",20,0)
 ; @to-do
"RTN","SAMILOG",21,0)
 ;
"RTN","SAMILOG",22,0)
 ; @section 1 code
"RTN","SAMILOG",23,0)
 ;
"RTN","SAMILOG",24,0)
 ;
"RTN","SAMILOG",25,0)
STONOFF ;
"RTN","SAMILOG",26,0)
 new ienget,ienpost,DIR,X,Y,%,DTOUT,DUOUT,ONOFF
"RTN","SAMILOG",27,0)
 new root s root=$na(^%web(17.6001))
"RTN","SAMILOG",28,0)
 set ienget=$order(@root@("B","GET","vapals","WSHOME^SAMIHOM3",0))
"RTN","SAMILOG",29,0)
 set ienpost=$order(@root@("B","POST","vapals","WSVAPALS^SAMIHOM3",0))
"RTN","SAMILOG",30,0)
 if $get(@root@(ienget,"AUTH")) do
"RTN","SAMILOG",31,0)
 . write !,"VAPALS password ID is presently ON",!
"RTN","SAMILOG",32,0)
 . write !," would you like to turn *** OFF *** VAPALS password ID."
"RTN","SAMILOG",33,0)
 . set ONOFF="ON"
"RTN","SAMILOG",34,0)
 else  do
"RTN","SAMILOG",35,0)
 . write !,"VAPALS password ID is presently OFF",!
"RTN","SAMILOG",36,0)
 . write !," would you like to turn *** ON *** VAPALS password ID."
"RTN","SAMILOG",37,0)
 . set ONOFF="OFF"
"RTN","SAMILOG",38,0)
 ;
"RTN","SAMILOG",39,0)
 write !
"RTN","SAMILOG",40,0)
 ; check if running unit test on this routine
"RTN","SAMILOG",41,0)
 if $data(%ut) goto STONOFF1
"RTN","SAMILOG",42,0)
 ;
"RTN","SAMILOG",43,0)
 set %=2 do YN^DICN quit:$data(DTOUT)  quit:$data(DUOUT)  quit:%=2
"RTN","SAMILOG",44,0)
 ;
"RTN","SAMILOG",45,0)
STONOFF1 if ONOFF="OFF" do TOGON write !,"VAPALS password ID is now turned ON",!,! quit
"RTN","SAMILOG",46,0)
 if ONOFF="ON" do TOGOFF write !,"VAPALS password ID is now turned OFF",!,!
"RTN","SAMILOG",47,0)
 quit
"RTN","SAMILOG",48,0)
 ;
"RTN","SAMILOG",49,0)
 ; Toggle password identification OFF
"RTN","SAMILOG",50,0)
TOGOFF new DIERR,FDA,ienget,ienpost,IENS,root
"RTN","SAMILOG",51,0)
 n root s root=$na(^%web(17.6001))
"RTN","SAMILOG",52,0)
 set ienget=$order(@root@("B","GET","vapals","WSHOME^SAMIHOM3",0))
"RTN","SAMILOG",53,0)
 set ienpost=$order(@root@("B","POST","vapals","WSVAPALS^SAMIHOM3",0))
"RTN","SAMILOG",54,0)
 quit:'ienget  quit:'ienpost
"RTN","SAMILOG",55,0)
 set IENS=ienget_","
"RTN","SAMILOG",56,0)
 set FDA(3,17.6001,IENS,11)=0
"RTN","SAMILOG",57,0)
 do UPDATE^DIE("","FDA(3)")
"RTN","SAMILOG",58,0)
 set IENS=ienpost_","
"RTN","SAMILOG",59,0)
 set FDA(3,17.6001,IENS,11)=0
"RTN","SAMILOG",60,0)
 do UPDATE^DIE("","FDA(3)")
"RTN","SAMILOG",61,0)
 ;
"RTN","SAMILOG",62,0)
 quit
"RTN","SAMILOG",63,0)
 ;
"RTN","SAMILOG",64,0)
 ; Toggle password identification ON
"RTN","SAMILOG",65,0)
TOGON new DIERR,FDA,ienget,ienpost,IENS
"RTN","SAMILOG",66,0)
 n root s root=$na(^%web(17.6001))
"RTN","SAMILOG",67,0)
 set ienget=$order(@root@("B","GET","vapals","WSHOME^SAMIHOM3",0))
"RTN","SAMILOG",68,0)
 set ienpost=$order(@root@("B","POST","vapals","WSVAPALS^SAMIHOM3",0))
"RTN","SAMILOG",69,0)
 quit:'ienget  quit:'ienpost
"RTN","SAMILOG",70,0)
 set IENS=ienget_","
"RTN","SAMILOG",71,0)
 set FDA(3,17.6001,IENS,11)=1
"RTN","SAMILOG",72,0)
 do UPDATE^DIE("","FDA(3)")
"RTN","SAMILOG",73,0)
 set IENS=ienpost_","
"RTN","SAMILOG",74,0)
 set FDA(3,17.6001,IENS,11)=1
"RTN","SAMILOG",75,0)
 do UPDATE^DIE("","FDA(3)")
"RTN","SAMILOG",76,0)
 ;
"RTN","SAMILOG",77,0)
 quit
"RTN","SAMILOG",78,0)
 ;
"RTN","SAMILOG",79,0)
 ;
"RTN","SAMILOG",80,0)
MEOFF ;
"RTN","SAMILOG",81,0)
 D EN^XPAR("SYS","SAMI ALLOW MANUAL ENTRY",1,0)
"RTN","SAMILOG",82,0)
 new onoff set onoff=$$GET^XPAR("SYS","SAMI ALLOW MANUAL ENTRY",,"Q")
"RTN","SAMILOG",83,0)
 if 'onoff w !,"*** VAPALS MANUAL ENTRY NOW NOT ALLOWED ***",!
"RTN","SAMILOG",84,0)
 quit
"RTN","SAMILOG",85,0)
 ;
"RTN","SAMILOG",86,0)
MEON D EN^XPAR("SYS","SAMI ALLOW MANUAL ENTRY",1,1)
"RTN","SAMILOG",87,0)
 new onoff set onoff=$$GET^XPAR("SYS","SAMI ALLOW MANUAL ENTRY",,"Q")
"RTN","SAMILOG",88,0)
 if onoff w !,"*** VAPALS MANUAL ENTRY NOW ALLOWED ***",!
"RTN","SAMILOG",89,0)
 quit
"RTN","SAMILOG",90,0)
 ;
"RTN","SAMILOG",91,0)
 ;
"RTN","SAMILOG",92,0)
EOR ;End of routine SAMILOG
"RTN","SAMIM2M")
0^40^B13645650
"RTN","SAMIM2M",1,0)
SAMIM2M ;ven/lgc/smh - M2M WITH SAM HABIEL'S KBANSCAU BROKER ; 6/21/19 9:15am
"RTN","SAMIM2M",2,0)
 ;;18.0;SAM;;;Build 1
"RTN","SAMIM2M",3,0)
 ;
"RTN","SAMIM2M",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIM2M",5,0)
 ;
"RTN","SAMIM2M",6,0)
 ;SAM'S INDUSTRIAL CONGLOMERATES
"RTN","SAMIM2M",7,0)
 ;
"RTN","SAMIM2M",8,0)
 ; Provide standardized entrance into XWBCLRPC (KBANSCAU)
"RTN","SAMIM2M",9,0)
 ;  M2M broker for VA-PALS
"RTN","SAMIM2M",10,0)
 ;
"RTN","SAMIM2M",11,0)
 ;
"RTN","SAMIM2M",12,0)
 ;@routine-credits
"RTN","SAMIM2M",13,0)
 ;@primary development organization: Vista Expertise Network
"RTN","SAMIM2M",14,0)
 ;@primary-dev: Larry G. Carlson (lgc)
"RTN","SAMIM2M",15,0)
 ;@primary development organization: SAM'S INDUSTRIAL CONGLOMERATES
"RTN","SAMIM2M",16,0)
 ;@primary-dev: Sam Habiel (smh)
"RTN","SAMIM2M",17,0)
 ;@copyright:
"RTN","SAMIM2M",18,0)
 ;@license: Apache 2.0
"RTN","SAMIM2M",19,0)
 ; https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIM2M",20,0)
 ;
"RTN","SAMIM2M",21,0)
 ;@last-updated: 2018-09-26
"RTN","SAMIM2M",22,0)
 ;@application: VA-PALS
"RTN","SAMIM2M",23,0)
 ;@version: 1.0
"RTN","SAMIM2M",24,0)
 ;
"RTN","SAMIM2M",25,0)
 ;
"RTN","SAMIM2M",26,0)
 Q  ; Cannot call from top
"RTN","SAMIM2M",27,0)
 ;
"RTN","SAMIM2M",28,0)
 ; Enter
"RTN","SAMIM2M",29,0)
 ;   XDATA     = variable by reference for results
"RTN","SAMIM2M",30,0)
 ;   CNTXT     = Broker Context Menu
"RTN","SAMIM2M",31,0)
 ;   RMPRC     = Remote Procedure
"RTN","SAMIM2M",32,0)
 ;   CONSOLE   = Display steps to console toggle
"RTN","SAMIM2M",33,0)
 ;               0 [default] = no, 1 = yes
"RTN","SAMIM2M",34,0)
 ;   CNTNOPEN  = Leave connection open toggle
"RTN","SAMIM2M",35,0)
 ;               0 [default] = no, 1 = yes
"RTN","SAMIM2M",36,0)
 ;   XARRAY    = Array by reference of data for RPC call
"RTN","SAMIM2M",37,0)
 ; Exit
"RTN","SAMIM2M",38,0)
 ;   XDATA     = results of broker call (-1 call failed)
"RTN","SAMIM2M",39,0)
 ;               with error message e.g. -1^error message
"RTN","SAMIM2M",40,0)
M2M(XDATA,CNTXT,RMPRC,CONSOLE,CNTNOPEN,XARRAY) ;
"RTN","SAMIM2M",41,0)
 ;
"RTN","SAMIM2M",42,0)
 N X
"RTN","SAMIM2M",43,0)
 K XDATA S XDATA=-1
"RTN","SAMIM2M",44,0)
 S CONSOLE=+$G(CONSOLE)
"RTN","SAMIM2M",45,0)
 S CNTNOPEN=+$G(CNTNOPEN)
"RTN","SAMIM2M",46,0)
 N HOST,PORT,AV
"RTN","SAMIM2M",47,0)
 S PORT=$$GET^XPAR("SYS","SAMI PORT",,"Q")
"RTN","SAMIM2M",48,0)
 S HOST=$$GET^XPAR("SYS","SAMI IP ADDRESS",,"Q")
"RTN","SAMIM2M",49,0)
 S:($G(HOST)="") HOST="127.0.0.1"
"RTN","SAMIM2M",50,0)
 ; *** NOTE: for UNIT TESTS use local host
"RTN","SAMIM2M",51,0)
 n forxindex s forxindex="%ut"
"RTN","SAMIM2M",52,0)
 S:$D(@forxindex) HOST="127.0.0.1"
"RTN","SAMIM2M",53,0)
 I $G(HOST)="" Q
"RTN","SAMIM2M",54,0)
 I $G(PORT)="" Q
"RTN","SAMIM2M",55,0)
 S AV=$$GET^XPAR("SYS","SAMI ACCVER",,"Q")
"RTN","SAMIM2M",56,0)
 I $G(AV)="" Q
"RTN","SAMIM2M",57,0)
 I '($L($G(AV),";")=2) Q
"RTN","SAMIM2M",58,0)
 ;
"RTN","SAMIM2M",59,0)
 N SIO M SIO=IO ; Save IO state
"RTN","SAMIM2M",60,0)
 ;
"RTN","SAMIM2M",61,0)
 ; Below pulled from XWBTEST^XWBCLRPC
"RTN","SAMIM2M",62,0)
 ; 1. Open Socket to remote system, check POP, use IO
"RTN","SAMIM2M",63,0)
 N POP D CALL^%ZISTCP(HOST,PORT,5)
"RTN","SAMIM2M",64,0)
 I $G(POP) QUIT
"RTN","SAMIM2M",65,0)
 U IO
"RTN","SAMIM2M",66,0)
 ;
"RTN","SAMIM2M",67,0)
 D:CONSOLE CONSOLE^XWBCLRPC("")
"RTN","SAMIM2M",68,0)
 D:CONSOLE CONSOLE^XWBCLRPC($$NOW^XLFDT)
"RTN","SAMIM2M",69,0)
 ;
"RTN","SAMIM2M",70,0)
 ; 2. Write TCP Connect
"RTN","SAMIM2M",71,0)
 D WRITE^XWBCLRPC($$TCPCON^XWBCLRPC()),WBF^XWBCLRPC
"RTN","SAMIM2M",72,0)
 S X=$$READ^XWBCLRPC()
"RTN","SAMIM2M",73,0)
 D:CONSOLE CONSOLE^XWBCLRPC(X)
"RTN","SAMIM2M",74,0)
 D:CONSOLE CONSOLE^XWBCLRPC($$NOW^XLFDT)
"RTN","SAMIM2M",75,0)
 ;
"RTN","SAMIM2M",76,0)
 ; 3. Get Intro Message
"RTN","SAMIM2M",77,0)
 ;    Note: Don't need intro message /Sam Habiel
"RTN","SAMIM2M",78,0)
 ; D WRITE^XWBCLRPC($$RPC^XWBCLRPC("XUS INTRO MSG")),WBF^XWBCLRPC
"RTN","SAMIM2M",79,0)
 ; S X=$$READ^XWBCLRPC()
"RTN","SAMIM2M",80,0)
 ; D:CONSOLE CONSOLE^XWBCLRPC(X)
"RTN","SAMIM2M",81,0)
 ; D:CONSOLE CONSOLE^XWBCLRPC($$NOW^XLFDT)
"RTN","SAMIM2M",82,0)
 ;
"RTN","SAMIM2M",83,0)
 ; 4. Setup for Sign-on (can do CAPRI/auto signon here)
"RTN","SAMIM2M",84,0)
 D WRITE^XWBCLRPC($$RPC^XWBCLRPC("XUS SIGNON SETUP")),WBF^XWBCLRPC
"RTN","SAMIM2M",85,0)
 S X=$$READ^XWBCLRPC()
"RTN","SAMIM2M",86,0)
 D:CONSOLE CONSOLE^XWBCLRPC(X)
"RTN","SAMIM2M",87,0)
 D:CONSOLE CONSOLE^XWBCLRPC($$NOW^XLFDT)
"RTN","SAMIM2M",88,0)
 ;
"RTN","SAMIM2M",89,0)
 ; 5. Log-in
"RTN","SAMIM2M",90,0)
 D WRITE^XWBCLRPC($$RPC^XWBCLRPC("XUS AV CODE",$$ENCRYP^XUSRB1(AV))),WBF^XWBCLRPC
"RTN","SAMIM2M",91,0)
 S X=$$READ^XWBCLRPC()
"RTN","SAMIM2M",92,0)
 D:CONSOLE CONSOLE^XWBCLRPC(X)
"RTN","SAMIM2M",93,0)
 D:CONSOLE CONSOLE^XWBCLRPC($$NOW^XLFDT)
"RTN","SAMIM2M",94,0)
 ;
"RTN","SAMIM2M",95,0)
 ; 6. Get/Set division (set not shown)
"RTN","SAMIM2M",96,0)
 ;    Note: Don't really need to set division /Sam Habiel
"RTN","SAMIM2M",97,0)
 ; D WRITE^XWBCLRPC($$RPC^XWBCLRPC("XUS DIVISION GET")),WBF^XWBCLRPC
"RTN","SAMIM2M",98,0)
 ; S X=$$READ^XWBCLRPC()
"RTN","SAMIM2M",99,0)
 ; D:CONSOLE CONSOLE^XWBCLRPC(X)
"RTN","SAMIM2M",100,0)
 ; D:CONSOLE CONSOLE^XWBCLRPC($$NOW^XLFDT)
"RTN","SAMIM2M",101,0)
 ;
"RTN","SAMIM2M",102,0)
 ; 7. Create the context
"RTN","SAMIM2M",103,0)
 D WRITE^XWBCLRPC($$RPC^XWBCLRPC("XWB CREATE CONTEXT",$$ENCRYP^XUSRB1(CNTXT))),WBF^XWBCLRPC
"RTN","SAMIM2M",104,0)
 S X=$$READ^XWBCLRPC()
"RTN","SAMIM2M",105,0)
 D:CONSOLE CONSOLE^XWBCLRPC(X)
"RTN","SAMIM2M",106,0)
 D:CONSOLE CONSOLE^XWBCLRPC($$NOW^XLFDT)
"RTN","SAMIM2M",107,0)
 ;
"RTN","SAMIM2M",108,0)
 ; 8. Run RPC using data in XARRAY
"RTN","SAMIM2M",109,0)
 D WRITE^XWBCLRPC($$RPC^XWBCLRPC(RMPRC,.XARRAY)),WBF^XWBCLRPC
"RTN","SAMIM2M",110,0)
 S X=$$READ^XWBCLRPC()
"RTN","SAMIM2M",111,0)
 D:CONSOLE CONSOLE^XWBCLRPC(X)
"RTN","SAMIM2M",112,0)
 D:CONSOLE CONSOLE^XWBCLRPC($$NOW^XLFDT)
"RTN","SAMIM2M",113,0)
 M XDATA=X
"RTN","SAMIM2M",114,0)
 ;
"RTN","SAMIM2M",115,0)
 I CNTNOPEN Q
"RTN","SAMIM2M",116,0)
 ;
"RTN","SAMIM2M",117,0)
 ; Close connection and clean temporary variables
"RTN","SAMIM2M",118,0)
CLSCLN ; 10. Logout
"RTN","SAMIM2M",119,0)
 D WRITE^XWBCLRPC($$BYE^XWBCLRPC()),WBF^XWBCLRPC
"RTN","SAMIM2M",120,0)
 S X=$$READ^XWBCLRPC()
"RTN","SAMIM2M",121,0)
 D:CONSOLE CONSOLE^XWBCLRPC(X)
"RTN","SAMIM2M",122,0)
 D:CONSOLE CONSOLE^XWBCLRPC($$NOW^XLFDT)
"RTN","SAMIM2M",123,0)
 ;
"RTN","SAMIM2M",124,0)
 ; 11. Close connection
"RTN","SAMIM2M",125,0)
 ;
"RTN","SAMIM2M",126,0)
 ; We do not call CLOSE^%ZISTCP b/c it calls HOME^%ZIS which issues
"RTN","SAMIM2M",127,0)
 ; a new line to slave devices. GTM makes 0 the principal device for
"RTN","SAMIM2M",128,0)
 ; background jobs by default./Sam Habiel
"RTN","SAMIM2M",129,0)
 ;N NIO S NIO=IO,IO=$S($G(IO(0))]"":IO(0),1:$P)
"RTN","SAMIM2M",130,0)
 ;I NIO]"" C NIO K IO(1,NIO) S IO("CLOSE")=NIO
"RTN","SAMIM2M",131,0)
 do CLOSEM2M^%ZISC(IO)
"RTN","SAMIM2M",132,0)
 ;
"RTN","SAMIM2M",133,0)
 K IO S IO=$IO ; Clean up IO and set it up for the CONSOLE call
"RTN","SAMIM2M",134,0)
 D:CONSOLE CONSOLE^XWBCLRPC($$NOW^XLFDT)
"RTN","SAMIM2M",135,0)
 K IO M IO=SIO ; Clean up IO and reset it to its initial state
"RTN","SAMIM2M",136,0)
 ;
"RTN","SAMIM2M",137,0)
 ; 12. Clean temporary variables
"RTN","SAMIM2M",138,0)
 D CLEAN^XWBCLRPC
"RTN","SAMIM2M",139,0)
 ;
"RTN","SAMIM2M",140,0)
 Q
"RTN","SAMIM2M",141,0)
 ;
"RTN","SAMIM2M",142,0)
 ;
"RTN","SAMIM2M",143,0)
EOR ;End of routine SAMIM2M
"RTN","SAMIMOV")
0^41^B15330427
"RTN","SAMIMOV",1,0)
SAMIMOV ;ven/gpl - VAPALS CHANGE PATIENT SITE ; 8/15/20 4:48pm
"RTN","SAMIMOV",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIMOV",3,0)
 ;
"RTN","SAMIMOV",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIMOV",5,0)
 ;
"RTN","SAMIMOV",6,0)
 ; allow fallthrough
"RTN","SAMIMOV",7,0)
 ;
"RTN","SAMIMOV",8,0)
EN ; entry point to change a patient's site
"RTN","SAMIMOV",9,0)
 ;
"RTN","SAMIMOV",10,0)
 n FROM,TO,PAT
"RTN","SAMIMOV",11,0)
 W !,"Pick the FROM Site -"
"RTN","SAMIMOV",12,0)
 S FROM=$$PICSITE()
"RTN","SAMIMOV",13,0)
 IF FROM="^" Q  ;
"RTN","SAMIMOV",14,0)
 ;
"RTN","SAMIMOV",15,0)
 W !,"Pick the TO Site -"
"RTN","SAMIMOV",16,0)
 S TO=$$PICSITE()
"RTN","SAMIMOV",17,0)
 IF TO="^" Q  ;
"RTN","SAMIMOV",18,0)
 ;
"RTN","SAMIMOV",19,0)
 D PICPAT(.PAT,FROM)
"RTN","SAMIMOV",20,0)
 I $G(PAT("name"))="" D  Q  ;
"RTN","SAMIMOV",21,0)
 . W !,"No patient selected, canceling"
"RTN","SAMIMOV",22,0)
 K DIR
"RTN","SAMIMOV",23,0)
 S DIR("A")="Confirm change site of patient "_PAT("name")_" from "_FROM_" to "_TO
"RTN","SAMIMOV",24,0)
 S DIR(0)="Y"
"RTN","SAMIMOV",25,0)
 D ^DIR
"RTN","SAMIMOV",26,0)
 ;
"RTN","SAMIMOV",27,0)
 I Y'=1 D  Q  ;
"RTN","SAMIMOV",28,0)
 . W !,"Cancel, no change made"
"RTN","SAMIMOV",29,0)
 ;
"RTN","SAMIMOV",30,0)
 do MOV(.PAT,FROM,TO)
"RTN","SAMIMOV",31,0)
 q
"RTN","SAMIMOV",32,0)
 ;
"RTN","SAMIMOV",33,0)
MOV(PAT,FROM,TO) ; change patient PAT from site FROM to site TO
"RTN","SAMIMOV",34,0)
 ;
"RTN","SAMIMOV",35,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIMOV",36,0)
 n lroot s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIMOV",37,0)
 n dfn s dfn=$g(PAT("dfn"))
"RTN","SAMIMOV",38,0)
 i dfn="" d  q  ;
"RTN","SAMIMOV",39,0)
 . w !,"Error, patient not valid"
"RTN","SAMIMOV",40,0)
 n lien
"RTN","SAMIMOV",41,0)
 s lien=$o(@lroot@("dfn",dfn,""))
"RTN","SAMIMOV",42,0)
 i $g(@lroot@(lien,"siteid"))'=FROM d  q  ;
"RTN","SAMIMOV",43,0)
 . w !,"Error, from site not valid for patient"
"RTN","SAMIMOV",44,0)
 ;
"RTN","SAMIMOV",45,0)
 n pien s pien=$o(@root@("dfn",dfn,""))
"RTN","SAMIMOV",46,0)
 i pien="" d  q  ;
"RTN","SAMIMOV",47,0)
 . w !,"Patient has no forms"
"RTN","SAMIMOV",48,0)
 . s @lroot@(lien,"siteid")=TO
"RTN","SAMIMOV",49,0)
 . w !,"Change successful"
"RTN","SAMIMOV",50,0)
 ;
"RTN","SAMIMOV",51,0)
 n oldsid s oldsid=$g(@root@(pien,"studyid"))
"RTN","SAMIMOV",52,0)
 i oldsid="" s oldsid=$g(@root@(pien,"samistudyid"))
"RTN","SAMIMOV",53,0)
 w !,"oldsid=",oldsid
"RTN","SAMIMOV",54,0)
 i oldsid="" d  q  ;
"RTN","SAMIMOV",55,0)
 . w !,"Error studyid not found"
"RTN","SAMIMOV",56,0)
 ;b
"RTN","SAMIMOV",57,0)
 s @lroot@(lien,"siteid")=TO
"RTN","SAMIMOV",58,0)
 s PAT("siteid")=TO
"RTN","SAMIMOV",59,0)
 k @root@("sid",oldsid,pien) ; remove sid index
"RTN","SAMIMOV",60,0)
 ;
"RTN","SAMIMOV",61,0)
 n newsid s newsid=$$GENSTDID^SAMIHOM3(dfn,.PAT)
"RTN","SAMIMOV",62,0)
 s @lroot@(lien,"studyid")=newsid
"RTN","SAMIMOV",63,0)
 s @root@(pien,"studyid")=newsid
"RTN","SAMIMOV",64,0)
 s @root@(pien,"sisid")=newsid
"RTN","SAMIMOV",65,0)
 s @root@(pien,"samistudyid")=newsid
"RTN","SAMIMOV",66,0)
 s @root@("sid",newsid,pien)=""
"RTN","SAMIMOV",67,0)
 ;
"RTN","SAMIMOV",68,0)
 w !,"New studyid = "_newsid
"RTN","SAMIMOV",69,0)
 m @root@("graph",newsid)=@root@("graph",oldsid)
"RTN","SAMIMOV",70,0)
 d SETSID(newsid) ;propogate the new sid to all forms
"RTN","SAMIMOV",71,0)
 k @root@("graph",oldsid)
"RTN","SAMIMOV",72,0)
 w !,"Change successful"
"RTN","SAMIMOV",73,0)
 ;
"RTN","SAMIMOV",74,0)
 q
"RTN","SAMIMOV",75,0)
 ;
"RTN","SAMIMOV",76,0)
SETSID(newsid) ; propogate the new sid to all forms
"RTN","SAMIMOV",77,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIMOV",78,0)
 n zi s zi=""
"RTN","SAMIMOV",79,0)
 f  s zi=$o(@root@("graph",newsid,zi)) q:zi=""  d  ;
"RTN","SAMIMOV",80,0)
 . s @root@("graph",newsid,zi,"samistudyid")=newsid
"RTN","SAMIMOV",81,0)
 . s @root@("graph",newsid,zi,"studyid")=newsid
"RTN","SAMIMOV",82,0)
 . s @root@("graph",newsid,zi,"sisid")=newsid
"RTN","SAMIMOV",83,0)
 q
"RTN","SAMIMOV",84,0)
 ;
"RTN","SAMIMOV",85,0)
PICPAT(PATRTN,SITE) ; pick a patient in site SITE
"RTN","SAMIMOV",86,0)
 ;
"RTN","SAMIMOV",87,0)
 N FILTER,LIST,X,Y
"RTN","SAMIMOV",88,0)
 S FILTER("site")=SITE
"RTN","SAMIMOV",89,0)
 S FILTER("format")="array"
"RTN","SAMIMOV",90,0)
 ;
"RTN","SAMIMOV",91,0)
 new DIR set DIR(0)="F^1:120" ; free text
"RTN","SAMIMOV",92,0)
 set DIR("A")="Patient name: " ; prompt
"RTN","SAMIMOV",93,0)
 set DIR("B")="""" ; default
"RTN","SAMIMOV",94,0)
 ;
"RTN","SAMIMOV",95,0)
 d ^DIR
"RTN","SAMIMOV",96,0)
 ;
"RTN","SAMIMOV",97,0)
 S FILTER("search")=Y
"RTN","SAMIMOV",98,0)
 D WSPTLKUP^SAMIPTLK(.LIST,.FILTER)
"RTN","SAMIMOV",99,0)
 ;ZWR LIST(:,:,"name")
"RTN","SAMIMOV",100,0)
 ;
"RTN","SAMIMOV",101,0)
 N LCNT S LCNT=$O(LIST("result",""),-1)
"RTN","SAMIMOV",102,0)
 Q:+LCNT=0
"RTN","SAMIMOV",103,0)
 S Y=1
"RTN","SAMIMOV",104,0)
 I LCNT>1 D  ; more than one in the list
"RTN","SAMIMOV",105,0)
 . K DIR
"RTN","SAMIMOV",106,0)
 . N ZI S ZI=0
"RTN","SAMIMOV",107,0)
 . S DIR("A")="Select the patient"
"RTN","SAMIMOV",108,0)
 . F  S ZI=$O(LIST("result",ZI)) Q:+ZI=0  D  ;
"RTN","SAMIMOV",109,0)
 . . S DIR("A",ZI)=ZI_" "_LIST("result",ZI,"name")_" "_LIST("result",ZI,"last5")
"RTN","SAMIMOV",110,0)
 . S DIR(0)="N^1:"_LCNT_":0"
"RTN","SAMIMOV",111,0)
 . D ^DIR
"RTN","SAMIMOV",112,0)
 . ;W !,"Y=",Y
"RTN","SAMIMOV",113,0)
 I +Y>0 M PATRTN=LIST("result",Y)
"RTN","SAMIMOV",114,0)
 q
"RTN","SAMIMOV",115,0)
 ;
"RTN","SAMIMOV",116,0)
PICSITE()
"RTN","SAMIMOV",117,0)
 ;
"RTN","SAMIMOV",118,0)
 ; pick a site
"RTN","SAMIMOV",119,0)
 N X,Y,DIC,SITEIEN,SITEID
"RTN","SAMIMOV",120,0)
 S DIC=311.12
"RTN","SAMIMOV",121,0)
 S DIC(0)="AEMQ"
"RTN","SAMIMOV",122,0)
 D ^DIC
"RTN","SAMIMOV",123,0)
 I Y<1 Q  ; EXIT
"RTN","SAMIMOV",124,0)
 S SITENUM=$P(Y,"^",2)
"RTN","SAMIMOV",125,0)
 S SITEID=$$SITEID^SAMISITE(SITENUM)
"RTN","SAMIMOV",126,0)
 Q SITEID
"RTN","SAMIMOV",127,0)
 ;
"RTN","SAMIMOV",128,0)
AUDIT() ;
"RTN","SAMIMOV",129,0)
 ;
"RTN","SAMIMOV",130,0)
 n proot s proot=$$setroot^%wd("vapals-patients")
"RTN","SAMIMOV",131,0)
 n lroot s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIMOV",132,0)
 n rpt s rpt=$na(^TMP("SAMIAUDIT",$J))
"RTN","SAMIMOV",133,0)
 k @rpt
"RTN","SAMIMOV",134,0)
 d outaudit(rpt,"cdate NAME  lien  dfn site  PNAME  pien  pdfn sid")
"RTN","SAMIMOV",135,0)
 n ln,lname,lien,cdate,pname,pien,ldfn,pdfn,site,sid
"RTN","SAMIMOV",136,0)
 s (ln,lname,lien,site,cdate,pname,pien,ldfn,pdfn,sid)=""
"RTN","SAMIMOV",137,0)
 n zi s zi=" "
"RTN","SAMIMOV",138,0)
 f  s zi=$o(@lroot@(zi),-1) q:+zi=0  d  ;
"RTN","SAMIMOV",139,0)
 . s lien=zi
"RTN","SAMIMOV",140,0)
 . s site=$g(@lroot@(zi,"siteid"))
"RTN","SAMIMOV",141,0)
 . s lname=$g(@lroot@(zi,"saminame"))
"RTN","SAMIMOV",142,0)
 . s ldfn=$g(@lroot@(zi,"dfn"))
"RTN","SAMIMOV",143,0)
 . i $o(@lroot@("dfn",ldfn,""))'=lien d  ;
"RTN","SAMIMOV",144,0)
 . . w !,"error in dfn index dfn="_ldfn_" lien="_lien
"RTN","SAMIMOV",145,0)
 . s pien=$o(@proot@("dfn",ldfn,""))
"RTN","SAMIMOV",146,0)
 . i +pien'=0 d  ;
"RTN","SAMIMOV",147,0)
 . . s cdate=$g(@proot@(pien,"samicreatedate"))
"RTN","SAMIMOV",148,0)
 . . s pname=$g(@proot@(pien,"saminame"))
"RTN","SAMIMOV",149,0)
 . . s pdfn=$g(@proot@(pien,"dfn"))
"RTN","SAMIMOV",150,0)
 . . s sid=$g(@proot@(pien,"samistudyid"))
"RTN","SAMIMOV",151,0)
 . s ln=ln_$g(cdate)_" "
"RTN","SAMIMOV",152,0)
 . s ln=ln_$e(lname,1,20)_"  "
"RTN","SAMIMOV",153,0)
 . s ln=ln_$J(lien,5)
"RTN","SAMIMOV",154,0)
 . s ln=ln_$j(ldfn,8)
"RTN","SAMIMOV",155,0)
 . s ln=ln_" "_site_" "
"RTN","SAMIMOV",156,0)
 . s ln=ln_" "_$e(pname,1,20)_" "
"RTN","SAMIMOV",157,0)
 . s ln=ln_$j(pien,5)
"RTN","SAMIMOV",158,0)
 . i pien="" s ln=ln_"Not Enrolled"
"RTN","SAMIMOV",159,0)
 . s ln=ln_$j(pdfn,8)
"RTN","SAMIMOV",160,0)
 . s ln=ln_" "_sid
"RTN","SAMIMOV",161,0)
 . d outaudit(rpt,ln)
"RTN","SAMIMOV",162,0)
 . s (ln,lname,lien,site,cdate,pname,pien,ldfn,pdfn,sid)=""
"RTN","SAMIMOV",163,0)
 D BROWSE^DDBR(rpt,"N","audit")
"RTN","SAMIMOV",164,0)
 ;
"RTN","SAMIMOV",165,0)
 q
"RTN","SAMIMOV",166,0)
 ;
"RTN","SAMIMOV",167,0)
outaudit(rpt,ln) ;
"RTN","SAMIMOV",168,0)
 s @rpt@($o(@rpt@(" "),-1)+1)=$g(ln)
"RTN","SAMIMOV",169,0)
 ;w !,ln
"RTN","SAMIMOV",170,0)
 q
"RTN","SAMIMOV",171,0)
 ;
"RTN","SAMINOT1")
0^42^B476861921
"RTN","SAMINOT1",1,0)
SAMINOT1 ;ven/gpl - text notes ;2021-07-01t17:21z
"RTN","SAMINOT1",2,0)
 ;;18.0;SAMI;**2,6,8,10,11,12**;2020-01;Build 1
"RTN","SAMINOT1",3,0)
 ;;18.12
"RTN","SAMINOT1",4,0)
 ;
"RTN","SAMINOT1",5,0)
 ; SAMINOT1 contains a web service & associated subroutines to produce
"RTN","SAMINOT1",6,0)
 ; VAPALS-ELCAP text notes.
"RTN","SAMINOT1",7,0)
 ;
"RTN","SAMINOT1",8,0)
 quit  ; no entry from top
"RTN","SAMINOT1",9,0)
 ;
"RTN","SAMINOT1",10,0)
 ;
"RTN","SAMINOT1",11,0)
 ;
"RTN","SAMINOT1",12,0)
 ;@section 0 primary development
"RTN","SAMINOT1",13,0)
 ;
"RTN","SAMINOT1",14,0)
 ;
"RTN","SAMINOT1",15,0)
 ;
"RTN","SAMINOT1",16,0)
 ;@routine-credits
"RTN","SAMINOT1",17,0)
 ;@dev-main George P. Lilly (gpl)
"RTN","SAMINOT1",18,0)
 ; gpl@vistaexpertise.net
"RTN","SAMINOT1",19,0)
 ;@dev-org-main Vista Expertise Network (ven)
"RTN","SAMINOT1",20,0)
 ; http://vistaexpertise.net
"RTN","SAMINOT1",21,0)
 ;@copyright 2017/2021, gpl, all rights reserved
"RTN","SAMINOT1",22,0)
 ;@license see routine SAMIUL
"RTN","SAMINOT1",23,0)
 ;
"RTN","SAMINOT1",24,0)
 ;@last-update 2021-07-01t17:21z
"RTN","SAMINOT1",25,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMINOT1",26,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMINOT1",27,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMINOT1",28,0)
 ;@version 18.12
"RTN","SAMINOT1",29,0)
 ;@release-date 2020-01
"RTN","SAMINOT1",30,0)
 ;@patch-list **2,6,8,10,11,12**
"RTN","SAMINOT1",31,0)
 ;
"RTN","SAMINOT1",32,0)
 ;@dev-add Frederick D. S. Marshall (toad)
"RTN","SAMINOT1",33,0)
 ; toad@vistaexpertise.net
"RTN","SAMINOT1",34,0)
 ;@dev-add Larry G. Carlson (lgc)
"RTN","SAMINOT1",35,0)
 ; larry.g.carlson@gmail.com
"RTN","SAMINOT1",36,0)
 ;@dev-add Linda M. R. Yaw (lmry)
"RTN","SAMINOT1",37,0)
 ; linda.yaw@vistaexpertise.net
"RTN","SAMINOT1",38,0)
 ;@dev-add Alexis R. Carlson (arc)
"RTN","SAMINOT1",39,0)
 ; whatisthehumanspirit@gmail.com
"RTN","SAMINOT1",40,0)
 ;@dev-add Domenic DiNatale (dom)
"RTN","SAMINOT1",41,0)
 ; domenic.dinatale@paraxialtech.com
"RTN","SAMINOT1",42,0)
 ;
"RTN","SAMINOT1",43,0)
 ;@module-credits
"RTN","SAMINOT1",44,0)
 ;@project VA Partnership to Increase Access to Lung Screening
"RTN","SAMINOT1",45,0)
 ; (VA-PALS)
"RTN","SAMINOT1",46,0)
 ; http://va-pals.org/
"RTN","SAMINOT1",47,0)
 ;@funding 2017/2021, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMINOT1",48,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMINOT1",49,0)
 ;@partner-org Veterans Affairs Office of Rural health
"RTN","SAMINOT1",50,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMINOT1",51,0)
 ;@partner-org International Early Lung Cancer Action Program (I-ELCAP)
"RTN","SAMINOT1",52,0)
 ; http://ielcap.com/
"RTN","SAMINOT1",53,0)
 ;@partner-org Paraxial Technologies (par)
"RTN","SAMINOT1",54,0)
 ; http://paraxialtech.com/
"RTN","SAMINOT1",55,0)
 ;@partner-org Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMINOT1",56,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMINOT1",57,0)
 ;
"RTN","SAMINOT1",58,0)
 ;@module-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMINOT1",59,0)
 ; see routine SAMINUL
"RTN","SAMINOT1",60,0)
 ;
"RTN","SAMINOT1",61,0)
 ;@contents
"RTN","SAMINOT1",62,0)
 ; $$EXISTCE does chart eligibility note exist?
"RTN","SAMINOT1",63,0)
 ; $$EXISTPRE does pre-enrollment note exist?
"RTN","SAMINOT1",64,0)
 ; $$EXISTINT does intake note exist?
"RTN","SAMINOT1",65,0)
 ; WSNOTE web service: text note
"RTN","SAMINOT1",66,0)
 ; NOTE create note
"RTN","SAMINOT1",67,0)
 ; $$HASINNT is intake note present?
"RTN","SAMINOT1",68,0)
 ; MKEL make eligibility note
"RTN","SAMINOT1",69,0)
 ; MKPRE make pre-enrollment note
"RTN","SAMINOT1",70,0)
 ; MKIN make intake note
"RTN","SAMINOT1",71,0)
 ; $$MKNT make note
"RTN","SAMINOT1",72,0)
 ; $$MKNTLOC location for note
"RTN","SAMINOT1",73,0)
 ; $$NTDTTM date & time in note format
"RTN","SAMINOT1",74,0)
 ; $$NTLOCN location of nth note
"RTN","SAMINOT1",75,0)
 ; $$NTLAST location of latest note
"RTN","SAMINOT1",76,0)
 ; $$NTIEN latest note for this form
"RTN","SAMINOT1",77,0)
 ; $$NTLIST note list
"RTN","SAMINOT1",78,0)
 ; TLST ???
"RTN","SAMINOT1",79,0)
 ; ELNOTE eligibility note text
"RTN","SAMINOT1",80,0)
 ; PRENOTE pre-enrollment note
"RTN","SAMINOT1",81,0)
 ; SUBRSLT translation of discussion result
"RTN","SAMINOT1",82,0)
 ; INNOTE intake note
"RTN","SAMINOT1",83,0)
 ; SDM add shared decision making text to array
"RTN","SAMINOT1",84,0)
 ; GLOUT glob out, 1st wrap ln, then put in dest
"RTN","SAMINOT1",85,0)
 ; OUT ???
"RTN","SAMINOT1",86,0)
 ; $$XVAL patient value for variable
"RTN","SAMINOT1",87,0)
 ;
"RTN","SAMINOT1",88,0)
 ;
"RTN","SAMINOT1",89,0)
 ;
"RTN","SAMINOT1",90,0)
 ;@section 1 wsi WSNOTE^SAMINOT1 & related subroutines
"RTN","SAMINOT1",91,0)
 ;
"RTN","SAMINOT1",92,0)
 ;
"RTN","SAMINOT1",93,0)
 ;
"RTN","SAMINOT1",94,0)
EXISTCE(SID,FORM) ; extrinsic returns "true" or "false"
"RTN","SAMINOT1",95,0)
 ;
"RTN","SAMINOT1",96,0)
 ; if a Chart Eligibility Note exists
"RTN","SAMINOT1",97,0)
 ;
"RTN","SAMINOT1",98,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT1",99,0)
 n gvals s gvals=$na(@root@("graph",SID,FORM))
"RTN","SAMINOT1",100,0)
 ;i $g(@root@("graph",SID,FORM,"sicechrt"))="y" q "true"
"RTN","SAMINOT1",101,0)
 i $g(@gvals@("chart-eligibility-complete"))="true" q "true"
"RTN","SAMINOT1",102,0)
 ;
"RTN","SAMINOT1",103,0)
 quit "false" ; end of $$EXISTCE
"RTN","SAMINOT1",104,0)
 ;
"RTN","SAMINOT1",105,0)
 ;
"RTN","SAMINOT1",106,0)
 ;
"RTN","SAMINOT1",107,0)
EXISTPRE(SID,FORM) ; extrinsic returns "true" or "false"
"RTN","SAMINOT1",108,0)
 ;
"RTN","SAMINOT1",109,0)
 ; if a Pre-enrollment Note exists
"RTN","SAMINOT1",110,0)
 ;
"RTN","SAMINOT1",111,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT1",112,0)
 n gvals s gvals=$na(@root@("graph",SID,FORM))
"RTN","SAMINOT1",113,0)
 ;i $g(@root@("graph",SID,FORM,"sipedisc"))="y" q "true"
"RTN","SAMINOT1",114,0)
 ;i $g(@gvals@("pre-note-complete"))="true" i $g(@gvals@("siperslt"))="y" q "true"
"RTN","SAMINOT1",115,0)
 i $g(@gvals@("pre-note-complete"))="true" q "true"
"RTN","SAMINOT1",116,0)
 ;
"RTN","SAMINOT1",117,0)
 quit "false" ; end of $$EXISTPRE
"RTN","SAMINOT1",118,0)
 ;
"RTN","SAMINOT1",119,0)
 ;
"RTN","SAMINOT1",120,0)
 ;
"RTN","SAMINOT1",121,0)
EXISTINT(SID,FORM) ; extrinsic returns "true" or "false"
"RTN","SAMINOT1",122,0)
 ;
"RTN","SAMINOT1",123,0)
 ; if an Intake Note exists
"RTN","SAMINOT1",124,0)
 ;
"RTN","SAMINOT1",125,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT1",126,0)
 i $g(@root@("graph",SID,FORM,"sistatus"))="y" q "true"
"RTN","SAMINOT1",127,0)
 ;
"RTN","SAMINOT1",128,0)
 quit "false" ; end of $$EXISTINT
"RTN","SAMINOT1",129,0)
 ;
"RTN","SAMINOT1",130,0)
 ;
"RTN","SAMINOT1",131,0)
 ;
"RTN","SAMINOT1",132,0)
WSNOTE(return,filter) ; web service which returns a text note
"RTN","SAMINOT1",133,0)
 ;
"RTN","SAMINOT1",134,0)
 n debug s debug=0
"RTN","SAMINOT1",135,0)
 i $g(filter("debug"))=1 s debug=1
"RTN","SAMINOT1",136,0)
 ;
"RTN","SAMINOT1",137,0)
 k return
"RTN","SAMINOT1",138,0)
 s HTTPRSP("mime")="text/html"
"RTN","SAMINOT1",139,0)
 ;
"RTN","SAMINOT1",140,0)
 n si
"RTN","SAMINOT1",141,0)
 s si=$g(filter("studyid"))
"RTN","SAMINOT1",142,0)
 i si="" d  ;
"RTN","SAMINOT1",143,0)
 . s si="XXX00333"
"RTN","SAMINOT1",144,0)
 q:si=""
"RTN","SAMINOT1",145,0)
 ;
"RTN","SAMINOT1",146,0)
 n samikey
"RTN","SAMINOT1",147,0)
 s samikey=$g(filter("form"))
"RTN","SAMINOT1",148,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT1",149,0)
 i samikey="" d  ;
"RTN","SAMINOT1",150,0)
 . s samikey=$o(@root@("graph",si,"siform"))
"RTN","SAMINOT1",151,0)
 . ;w !,samikey
"RTN","SAMINOT1",152,0)
 . ;b
"RTN","SAMINOT1",153,0)
 ;
"RTN","SAMINOT1",154,0)
 n vals
"RTN","SAMINOT1",155,0)
 m vals=@root@("graph",si,samikey)
"RTN","SAMINOT1",156,0)
 ;
"RTN","SAMINOT1",157,0)
 n note,nien,ntype
"RTN","SAMINOT1",158,0)
 s ntype=""
"RTN","SAMINOT1",159,0)
 s note=""
"RTN","SAMINOT1",160,0)
 s nien=$g(filter("nien"))
"RTN","SAMINOT1",161,0)
 i nien="" d
"RTN","SAMINOT1",162,0)
 . s:$g(vals("samistatus"))="complete" ntype="intake"
"RTN","SAMINOT1",163,0)
 . s:$g(vals("samistatus"))="chart-eligibility" ntype="eligibility"
"RTN","SAMINOT1",164,0)
 . s:$g(vals("samistatus"))="pre-enrollment-discussion" ntype="pre-note"
"RTN","SAMINOT1",165,0)
 . q:ntype=""
"RTN","SAMINOT1",166,0)
 . ;d nien=$$NTTYPE add code to pull the latest note by type
"RTN","SAMINOT1",167,0)
 q:nien=""
"RTN","SAMINOT1",168,0)
 n notebase
"RTN","SAMINOT1",169,0)
 s notebase=$$NTLOCN(si,samikey,nien) ; global location for the note
"RTN","SAMINOT1",170,0)
 s note=$na(@notebase@("text"))
"RTN","SAMINOT1",171,0)
 i '$d(@note) q
"RTN","SAMINOT1",172,0)
 ;
"RTN","SAMINOT1",173,0)
 new temp,tout
"RTN","SAMINOT1",174,0)
 do GETTMPL^SAMICASE("temp","vapals:note")
"RTN","SAMINOT1",175,0)
 quit:'$data(temp)
"RTN","SAMINOT1",176,0)
 ;
"RTN","SAMINOT1",177,0)
 n cnt s cnt=0
"RTN","SAMINOT1",178,0)
 n zi s zi=""
"RTN","SAMINOT1",179,0)
 ;
"RTN","SAMINOT1",180,0)
 f  s zi=$o(temp(zi)) q:zi=""  d  ;
"RTN","SAMINOT1",181,0)
 . ;
"RTN","SAMINOT1",182,0)
 . n line s line=temp(zi)
"RTN","SAMINOT1",183,0)
 . D LOAD^SAMIFORM(.line,samikey,si,.filter,.vals)
"RTN","SAMINOT1",184,0)
 . s temp(zi)=line
"RTN","SAMINOT1",185,0)
 . ;
"RTN","SAMINOT1",186,0)
 . s cnt=cnt+1
"RTN","SAMINOT1",187,0)
 . s tout(cnt)=temp(zi)
"RTN","SAMINOT1",188,0)
 . ;
"RTN","SAMINOT1",189,0)
 . i temp(zi)["report-text" d  ;
"RTN","SAMINOT1",190,0)
 . . i temp(zi)["#" q  ;
"RTN","SAMINOT1",191,0)
 . . n zj s zj=""
"RTN","SAMINOT1",192,0)
 . . f  s zj=$o(@note@(zj)) q:zj=""  d  ;
"RTN","SAMINOT1",193,0)
 . . . s cnt=cnt+1
"RTN","SAMINOT1",194,0)
 . . . ;s tout(cnt)=@note@(zj)_"<br>"
"RTN","SAMINOT1",195,0)
 . . . s tout(cnt)=@note@(zj)_$char(13,10)
"RTN","SAMINOT1",196,0)
 m return=tout
"RTN","SAMINOT1",197,0)
 ;
"RTN","SAMINOT1",198,0)
 quit  ; end of WSNOTE
"RTN","SAMINOT1",199,0)
 ;
"RTN","SAMINOT1",200,0)
 ;
"RTN","SAMINOT1",201,0)
 ;
"RTN","SAMINOT1",202,0)
NOTE(filter) ; extrnisic which creates a note
"RTN","SAMINOT1",203,0)
 ;
"RTN","SAMINOT1",204,0)
 ; returns 1 if successful, 0 if not
"RTN","SAMINOT1",205,0)
 ;
"RTN","SAMINOT1",206,0)
 ; set up patient values
"RTN","SAMINOT1",207,0)
 ;
"RTN","SAMINOT1",208,0)
 n vals
"RTN","SAMINOT1",209,0)
 ;
"RTN","SAMINOT1",210,0)
 n si
"RTN","SAMINOT1",211,0)
 s si=$g(filter("studyid"))
"RTN","SAMINOT1",212,0)
 i si="" d  ;
"RTN","SAMINOT1",213,0)
 . s si="XXX00333"
"RTN","SAMINOT1",214,0)
 q:si=""
"RTN","SAMINOT1",215,0)
 ;
"RTN","SAMINOT1",216,0)
 n samikey
"RTN","SAMINOT1",217,0)
 s samikey=$g(filter("form"))
"RTN","SAMINOT1",218,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT1",219,0)
 i samikey="" d  ;
"RTN","SAMINOT1",220,0)
 . s samikey=$o(@root@("graph",si,"siform"))
"RTN","SAMINOT1",221,0)
 . ;w !,samikey
"RTN","SAMINOT1",222,0)
 . ;b
"RTN","SAMINOT1",223,0)
 ;
"RTN","SAMINOT1",224,0)
 s vals=$na(@root@("graph",si,samikey))
"RTN","SAMINOT1",225,0)
 ;
"RTN","SAMINOT1",226,0)
 i '$d(@vals) d  q 0 ;
"RTN","SAMINOT1",227,0)
 . ;w !,"error, patient values not found"
"RTN","SAMINOT1",228,0)
 ;zwr @vals@(*)
"RTN","SAMINOT1",229,0)
 ;
"RTN","SAMINOT1",230,0)
 k ^SAMIUL("NOTE")
"RTN","SAMINOT1",231,0)
 m ^SAMIUL("NOTE","vals")=@vals
"RTN","SAMINOT1",232,0)
 m ^SAMIUL("NOTE","filter")=filter
"RTN","SAMINOT1",233,0)
 ;
"RTN","SAMINOT1",234,0)
 n didnote s didnote=0
"RTN","SAMINOT1",235,0)
 ;
"RTN","SAMINOT1",236,0)
 i $g(@vals@("samistatus"))="chart-eligibility" d  ;
"RTN","SAMINOT1",237,0)
 . q:$g(@vals@("chart-eligibility-complete"))="true"
"RTN","SAMINOT1",238,0)
 . d MKEL(si,samikey,vals,.filter) ;
"RTN","SAMINOT1",239,0)
 . s didnote=1
"RTN","SAMINOT1",240,0)
 ;
"RTN","SAMINOT1",241,0)
 i $g(@vals@("samistatus"))="pre-enrollment-discussion" d  ;
"RTN","SAMINOT1",242,0)
 . q:$g(@vals@("pre-note-complete"))="true"
"RTN","SAMINOT1",243,0)
 . d MKPRE(si,samikey,vals,.filter) ;
"RTN","SAMINOT1",244,0)
 . s didnote=1
"RTN","SAMINOT1",245,0)
 ;
"RTN","SAMINOT1",246,0)
 i $g(@vals@("samistatus"))="complete" d  ;
"RTN","SAMINOT1",247,0)
 . q:$$HASINNT(vals)
"RTN","SAMINOT1",248,0)
 . d MKIN(si,samikey,vals,.filter) ;
"RTN","SAMINOT1",249,0)
 . s didnote=1
"RTN","SAMINOT1",250,0)
 ;
"RTN","SAMINOT1",251,0)
 n nien s nien=0
"RTN","SAMINOT1",252,0)
 i didnote=1 s nien=$$NTIEN(si,samikey)
"RTN","SAMINOT1",253,0)
 ;
"RTN","SAMINOT1",254,0)
 quit nien ; end of $$NOTE
"RTN","SAMINOT1",255,0)
 ;
"RTN","SAMINOT1",256,0)
 ;
"RTN","SAMINOT1",257,0)
 ;
"RTN","SAMINOT1",258,0)
HASINNT(vals) ; extrinsic returns 1 if intake note is present
"RTN","SAMINOT1",259,0)
 ;
"RTN","SAMINOT1",260,0)
 ; else returns 0
"RTN","SAMINOT1",261,0)
 ;
"RTN","SAMINOT1",262,0)
 n zzi,zzrtn s (zzi,zzrtn)=0
"RTN","SAMINOT1",263,0)
 q:'$d(@vals)
"RTN","SAMINOT1",264,0)
 f  s zzi=$o(@vals@("notes",zzi)) q:+zzi=0  d  ;
"RTN","SAMINOT1",265,0)
 . i $g(@vals@("notes",zzi,"name"))["Intake" s zzrtn=1
"RTN","SAMINOT1",266,0)
 ;
"RTN","SAMINOT1",267,0)
 quit zzrtn ; end of $$HASINNT
"RTN","SAMINOT1",268,0)
 ;
"RTN","SAMINOT1",269,0)
 ;
"RTN","SAMINOT1",270,0)
 ;
"RTN","SAMINOT1",271,0)
MKEL(sid,form,vals,filter) ;
"RTN","SAMINOT1",272,0)
 ;
"RTN","SAMINOT1",273,0)
 n cnt s cnt=0
"RTN","SAMINOT1",274,0)
 ;n dest s dest=$na(@vals@("eligibility-note"))
"RTN","SAMINOT1",275,0)
 n dest s dest=$$MKNT(vals,"Eligibility Note","eligibility",.filter)
"RTN","SAMINOT1",276,0)
 k @dest
"RTN","SAMINOT1",277,0)
 d OUT("Lung Screening Program Chart Eligibility Note")
"RTN","SAMINOT1",278,0)
 d OUT("")
"RTN","SAMINOT1",279,0)
 d ELNOTE(vals,dest,cnt)
"RTN","SAMINOT1",280,0)
 ;
"RTN","SAMINOT1",281,0)
 quit  ; end of MKEL
"RTN","SAMINOT1",282,0)
 ;
"RTN","SAMINOT1",283,0)
 ;
"RTN","SAMINOT1",284,0)
 ;
"RTN","SAMINOT1",285,0)
MKPRE(sid,form,vals,filter) ;
"RTN","SAMINOT1",286,0)
 ;
"RTN","SAMINOT1",287,0)
 n cnt s cnt=0
"RTN","SAMINOT1",288,0)
 ;n dest s dest=$na(@vals@("pre-note"))
"RTN","SAMINOT1",289,0)
 n dest s dest=$$MKNT(vals,"Pre-enrollment Discussion Note","prenote",.filter)
"RTN","SAMINOT1",290,0)
 k @dest
"RTN","SAMINOT1",291,0)
 i $g(@vals@("chart-eligibility-complete"))'="true" d  ;
"RTN","SAMINOT1",292,0)
 . d OUT("Lung Screening Program Chart Eligibility and Pre-enrollment Discussion Note")
"RTN","SAMINOT1",293,0)
 . d OUT("")
"RTN","SAMINOT1",294,0)
 . d ELNOTE(vals,dest,cnt)
"RTN","SAMINOT1",295,0)
 i $g(@vals@("chart-eligibility-complete"))="true" d  ;
"RTN","SAMINOT1",296,0)
 . d OUT("Lung Screening Program Pre-enrollment Discussion Note")
"RTN","SAMINOT1",297,0)
 . d OUT("")
"RTN","SAMINOT1",298,0)
 d PRENOTE(vals,dest,cnt)
"RTN","SAMINOT1",299,0)
 ;
"RTN","SAMINOT1",300,0)
 quit  ; end of MKPRE
"RTN","SAMINOT1",301,0)
 ;
"RTN","SAMINOT1",302,0)
 ;
"RTN","SAMINOT1",303,0)
 ;
"RTN","SAMINOT1",304,0)
MKIN(sid,form,vals,filter) ;
"RTN","SAMINOT1",305,0)
 ;
"RTN","SAMINOT1",306,0)
 n cnt s cnt=0
"RTN","SAMINOT1",307,0)
 ;n dest s dest=$na(@vals@("intake-note"))
"RTN","SAMINOT1",308,0)
 n dest s dest=$$MKNT(vals,"Intake Note","intake",.filter)
"RTN","SAMINOT1",309,0)
 k @dest
"RTN","SAMINOT1",310,0)
 d OUT("Lung Screening Program Intake Note")
"RTN","SAMINOT1",311,0)
 d OUT("")
"RTN","SAMINOT1",312,0)
 i $g(@vals@("chart-eligibility-complete"))'="true" d  ;
"RTN","SAMINOT1",313,0)
 . d ELNOTE(vals,dest,cnt)
"RTN","SAMINOT1",314,0)
 i $g(@vals@("pre-note-complete"))'="true" d  ;
"RTN","SAMINOT1",315,0)
 . d PRENOTE(vals,dest,cnt)
"RTN","SAMINOT1",316,0)
 d INNOTE(vals,dest,cnt)
"RTN","SAMINOT1",317,0)
 ;
"RTN","SAMINOT1",318,0)
 quit  ; end of MKIN
"RTN","SAMINOT1",319,0)
 ;
"RTN","SAMINOT1",320,0)
 ;
"RTN","SAMINOT1",321,0)
 ;
"RTN","SAMINOT1",322,0)
MKNT(vals,title,ntype,filter) ; extrinsic makes a note date=now returns 
"RTN","SAMINOT1",323,0)
 ;
"RTN","SAMINOT1",324,0)
 ; global addr. filter must be passed by reference
"RTN","SAMINOT1",325,0)
 ;
"RTN","SAMINOT1",326,0)
 n ntdt s ntdt=$$NTDTTM($$NOW^XLFDT)
"RTN","SAMINOT1",327,0)
 n ntptr
"RTN","SAMINOT1",328,0)
 s ntptr=$$MKNTLOC(vals,title,ntdt,$g(ntype),.filter)
"RTN","SAMINOT1",329,0)
 ;
"RTN","SAMINOT1",330,0)
 quit ntptr ; end of $$MKNT
"RTN","SAMINOT1",331,0)
 ;
"RTN","SAMINOT1",332,0)
 ;
"RTN","SAMINOT1",333,0)
 ;
"RTN","SAMINOT1",334,0)
MKNTLOC(vals,title,ndate,ntype,filter) ; extrinsic returns the 
"RTN","SAMINOT1",335,0)
 ;
"RTN","SAMINOT1",336,0)
 ;location for the note
"RTN","SAMINOT1",337,0)
 ;
"RTN","SAMINOT1",338,0)
 n nien
"RTN","SAMINOT1",339,0)
 s nien=$o(@vals@("notes",""),-1)+1
"RTN","SAMINOT1",340,0)
 s filter("nien")=nien
"RTN","SAMINOT1",341,0)
 n nloc s nloc=$na(@vals@("notes",nien))
"RTN","SAMINOT1",342,0)
 s @nloc@("name")=title_" "_$g(ndate)
"RTN","SAMINOT1",343,0)
 s @nloc@("date")=$g(ndate)
"RTN","SAMINOT1",344,0)
 s @nloc@("type")=$g(ntype)
"RTN","SAMINOT1",345,0)
 ;
"RTN","SAMINOT1",346,0)
 quit $name(@nloc@("text")) ; end of $$MKNTLOC
"RTN","SAMINOT1",347,0)
 ;
"RTN","SAMINOT1",348,0)
 ;
"RTN","SAMINOT1",349,0)
 ;
"RTN","SAMINOT1",350,0)
NTDTTM(ZFMDT) ; extrinsic returns the date and time in Note format
"RTN","SAMINOT1",351,0)
 ;
"RTN","SAMINOT1",352,0)
 ; ZFMDT is the fileman date/time to translate
"RTN","SAMINOT1",353,0)
 ;
"RTN","SAMINOT1",354,0)
 quit $$FMTE^XLFDT(ZFMDT,"5") ; end of $$NTDTTM
"RTN","SAMINOT1",355,0)
 ;
"RTN","SAMINOT1",356,0)
 ;
"RTN","SAMINOT1",357,0)
 ;
"RTN","SAMINOT1",358,0)
NTLOCN(sid,form,nien) ; extrinsic returns the location of the Nth note
"RTN","SAMINOT1",359,0)
 ;
"RTN","SAMINOT1",360,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT1",361,0)
 ;
"RTN","SAMINOT1",362,0)
 quit $name(@root@("graph",sid,form,"notes",nien)) ; end of $$NTLOCN
"RTN","SAMINOT1",363,0)
 ;
"RTN","SAMINOT1",364,0)
 ;
"RTN","SAMINOT1",365,0)
 ;
"RTN","SAMINOT1",366,0)
NTLAST(sid,form,ntype) ; extrinsic returns the location of the latest note
"RTN","SAMINOT1",367,0)
 ;
"RTN","SAMINOT1",368,0)
 ; of the type ntype
"RTN","SAMINOT1",369,0)
 ;
"RTN","SAMINOT1",370,0)
 quit  ; end of NTLAST
"RTN","SAMINOT1",371,0)
 ;
"RTN","SAMINOT1",372,0)
 ;
"RTN","SAMINOT1",373,0)
 ;
"RTN","SAMINOT1",374,0)
NTIEN(sid,form) ; extrinsic which returns the latest note for this form
"RTN","SAMINOT1",375,0)
 ;
"RTN","SAMINOT1",376,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT1",377,0)
 n rtn s rtn=$o(@root@("graph",sid,form,"notes"," "),-1)
"RTN","SAMINOT1",378,0)
 ;
"RTN","SAMINOT1",379,0)
 quit rtn ; end of $$NTIEN
"RTN","SAMINOT1",380,0)
 ;
"RTN","SAMINOT1",381,0)
 ;
"RTN","SAMINOT1",382,0)
 ;
"RTN","SAMINOT1",383,0)
NTLIST(nlist,sid,form) ; returns the note list in nlist, passed by ref
"RTN","SAMINOT1",384,0)
 ;
"RTN","SAMINOT1",385,0)
 n zn,root,gn
"RTN","SAMINOT1",386,0)
 s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT1",387,0)
 s zn=0
"RTN","SAMINOT1",388,0)
 s gn=$na(@root@("graph",sid,form,"notes"))
"RTN","SAMINOT1",389,0)
 q:'$d(@gn)
"RTN","SAMINOT1",390,0)
 f  s zn=$o(@gn@(zn)) q:+zn=0  d  ;
"RTN","SAMINOT1",391,0)
 . s @nlist@(zn,"name")=@gn@(zn,"name")
"RTN","SAMINOT1",392,0)
 . s @nlist@(zn,"nien")=zn
"RTN","SAMINOT1",393,0)
 ;
"RTN","SAMINOT1",394,0)
 quit  ; end of NTLIST
"RTN","SAMINOT1",395,0)
 ;
"RTN","SAMINOT1",396,0)
 ;
"RTN","SAMINOT1",397,0)
 ;
"RTN","SAMINOT1",398,0)
TLST ;
"RTN","SAMINOT1",399,0)
 ;
"RTN","SAMINOT1",400,0)
 set SID="XXX00677"
"RTN","SAMINOT1",401,0)
 set FORM="siform-2019-04-23"
"RTN","SAMINOT1",402,0)
 do NTLIST("G",SID,FORM)
"RTN","SAMINOT1",403,0)
 ;ZWR G
"RTN","SAMINOT1",404,0)
 ;
"RTN","SAMINOT1",405,0)
 quit  ; end of TLST
"RTN","SAMINOT1",406,0)
 ;
"RTN","SAMINOT1",407,0)
 ;
"RTN","SAMINOT1",408,0)
 ;
"RTN","SAMINOT1",409,0)
ELNOTE(vals,dest,cnt) ; eligibility NOTE TEXT
"RTN","SAMINOT1",410,0)
 ;
"RTN","SAMINOT1",411,0)
 D OUT("")
"RTN","SAMINOT1",412,0)
 D OUT("Date of chart review: "_$$XVAL("sidc",vals))
"RTN","SAMINOT1",413,0)
 D GLOUT("The participant was identified as a potential lung screening candidate by: ")
"RTN","SAMINOT1",414,0)
 D GLOUT($$XVAL("siceiden",vals),4)
"RTN","SAMINOT1",415,0)
 if $$XVAL("siceiden",vals)="referral" d  ;
"RTN","SAMINOT1",416,0)
 . D OUT("Date of Referral: "_$$XVAL("sicerfdt",vals))
"RTN","SAMINOT1",417,0)
 . n spec s spec=""
"RTN","SAMINOT1",418,0)
 . s:$$XVAL("sicerfpc",vals)="y" spec=spec_" Primary Care"
"RTN","SAMINOT1",419,0)
 . s:$$XVAL("sicerfwh",vals)="y" spec=spec_" Women's Health"
"RTN","SAMINOT1",420,0)
 . s:$$XVAL("sicerfge",vals)="y" spec=spec_" Geriatrics"
"RTN","SAMINOT1",421,0)
 . s:$$XVAL("sicerfpu",vals)="y" spec=spec_" Pulmonology"
"RTN","SAMINOT1",422,0)
 . s:$$XVAL("sicerfon",vals)="y" spec=spec_" Oncology"
"RTN","SAMINOT1",423,0)
 . s:$$XVAL("sicerfsc",vals)="y" spec=spec_" Smoking Cessation"
"RTN","SAMINOT1",424,0)
 . s:$$XVAL("sicerfot",vals)="y" spec=spec_" "_$$XVAL("sicerfoo",vals)
"RTN","SAMINOT1",425,0)
 . D GLOUT("Specialty of referring provider: ")
"RTN","SAMINOT1",426,0)
 . D GLOUT(spec,4)
"RTN","SAMINOT1",427,0)
 n elig
"RTN","SAMINOT1",428,0)
 s elig=$$XVAL("sicechrt",vals)
"RTN","SAMINOT1",429,0)
 D OUT("The participant is eligible based on chart review: "_$s(elig="y":"Yes",1:"no"))
"RTN","SAMINOT1",430,0)
 D OUT("")
"RTN","SAMINOT1",431,0)
 s @vals@("chart-eligibility-complete")="true"
"RTN","SAMINOT1",432,0)
 ;
"RTN","SAMINOT1",433,0)
 quit  ; end of ELNOTE
"RTN","SAMINOT1",434,0)
 ;
"RTN","SAMINOT1",435,0)
 ;
"RTN","SAMINOT1",436,0)
 ;
"RTN","SAMINOT1",437,0)
PRENOTE(vals,dest,cnt) ;
"RTN","SAMINOT1",438,0)
 ;
"RTN","SAMINOT1",439,0)
 i $g(@vals@("sipedisc"))'="y" q  ; no prelim discussion
"RTN","SAMINOT1",440,0)
 D OUT("")
"RTN","SAMINOT1",441,0)
 ;d OUT("A pre-enrollment discussion was held.")
"RTN","SAMINOT1",442,0)
 ;[If Yes is selected then add the following 5 lines]
"RTN","SAMINOT1",443,0)
 D OUT("The program attempted to reach the Veteran to discuss lung screening.")
"RTN","SAMINOT1",444,0)
 D OUT("Date of pre-enrollment discussion: "_$$XVAL("sipedc",vals))
"RTN","SAMINOT1",445,0)
 n via s via=""
"RTN","SAMINOT1",446,0)
 s:$$XVAL("sipecnip",vals)="1" via=via_" In person"
"RTN","SAMINOT1",447,0)
 s:$$XVAL("sipecnte",vals)="1" via=via_" Telephone"
"RTN","SAMINOT1",448,0)
 s:$$XVAL("sipecnth",vals)="1" via=via_" TeleHealth"
"RTN","SAMINOT1",449,0)
 s:$$XVAL("sipecnml",vals)="1" via=via_" Mailed Letter"
"RTN","SAMINOT1",450,0)
 s:$$XVAL("sipecnpp",vals)="1" via=via_" Message in patient portal"
"RTN","SAMINOT1",451,0)
 s:$$XVAL("sipecnvd",vals)="1" via=via_" Video-on-Demand (VOD)"
"RTN","SAMINOT1",452,0)
 s:$$XVAL("sipecnot",vals)="1" via=via_" "_$$XVAL("sipecnoo",vals)
"RTN","SAMINOT1",453,0)
 ;D OUT("The lung screening program reached the potential candidate or was contacted via:"_via)
"RTN","SAMINOT1",454,0)
 D GLOUT("The lung screening program reached the potential candidate or was contacted via:")
"RTN","SAMINOT1",455,0)
 D GLOUT(via,4)
"RTN","SAMINOT1",456,0)
 ;D OUT("The pre-enrollment discussion with the participant resulted in: "_$$SUBRSLT($$XVAL("siperslt",vals)))
"RTN","SAMINOT1",457,0)
 D OUT("The pre-enrollment discussion with the participant resulted in: ")
"RTN","SAMINOT1",458,0)
 D GLOUT($$SUBRSLT($$XVAL("siperslt",vals)),4)
"RTN","SAMINOT1",459,0)
 D OUT("Comments: ")
"RTN","SAMINOT1",460,0)
 D GLOUT($$XVAL("sipecmnt",vals),4)
"RTN","SAMINOT1",461,0)
 ;
"RTN","SAMINOT1",462,0)
 s @vals@("pre-note-complete")="true"
"RTN","SAMINOT1",463,0)
 ;
"RTN","SAMINOT1",464,0)
 quit  ; end of PRENOTE
"RTN","SAMINOT1",465,0)
 ;
"RTN","SAMINOT1",466,0)
 ;
"RTN","SAMINOT1",467,0)
 ;
"RTN","SAMINOT1",468,0)
SUBRSLT(XVAL) ; translation of discussion result
"RTN","SAMINOT1",469,0)
 ;
"RTN","SAMINOT1",470,0)
 q:XVAL="y" "Participant is interested in discussing lung screening. The program will proceed with enrollment process."
"RTN","SAMINOT1",471,0)
 q:XVAL="u" "Participant is unsure of lung screening. Ok to contact in the future."
"RTN","SAMINOT1",472,0)
 q:XVAL="nn" "Participant is not interested in discussing lung screening at this time. Ok to contact in the future."
"RTN","SAMINOT1",473,0)
 q:XVAL="nf" "Participant is not interested in discussing lung screening in the future."
"RTN","SAMINOT1",474,0)
 q:XVAL="na" "Unable to reach participant at this time"
"RTN","SAMINOT1",475,0)
 ;
"RTN","SAMINOT1",476,0)
 quit "" ; end of $$SUBRSLT
"RTN","SAMINOT1",477,0)
 ;
"RTN","SAMINOT1",478,0)
 ;
"RTN","SAMINOT1",479,0)
 ;
"RTN","SAMINOT1",480,0)
INNOTE(vals,dest,cnt) ;
"RTN","SAMINOT1",481,0)
 ;
"RTN","SAMINOT1",482,0)
 ;Lung Screening Program Intake Note
"RTN","SAMINOT1",483,0)
 ;
"RTN","SAMINOT1",484,0)
 ;Date of intake discussion contact:       [Date]
"RTN","SAMINOT1",485,0)
 ;How did you learn about the Lung Screening Program?:  [Selection]
"RTN","SAMINOT1",486,0)
 ;Primary address verified:                 [Yes/No]
"RTN","SAMINOT1",487,0)
 ;Rural status:                                        [Urban/Rural/Unknown]
"RTN","SAMINOT1",488,0)
 ;Preferred address and contact number:
"RTN","SAMINOT1",489,0)
 ;     [Address 1]
"RTN","SAMINOT1",490,0)
 ;           [Address 2]
"RTN","SAMINOT1",491,0)
 ;              [Address]
"RTN","SAMINOT1",492,0)
 ;
"RTN","SAMINOT1",493,0)
 ;Ever smoked?:            [Ever Smoked Text]
"RTN","SAMINOT1",494,0)
 ;Smoking Status:          [Never Smoked/Past/Current/Willing to Quit]
"RTN","SAMINOT1",495,0)
 ;CIGs per day:               [Input Number]
"RTN","SAMINOT1",496,0)
 ;PPD:                              [Computed Number]
"RTN","SAMINOT1",497,0)
 ;# of years:                    [Input Number]
"RTN","SAMINOT1",498,0)
 ;Pack Years:                   [Computed Number]
"RTN","SAMINOT1",499,0)
 ;
"RTN","SAMINOT1",500,0)
 ;[If a Quit Date is entered add the following line]
"RTN","SAMINOT1",501,0)
 ;Quit smoking on:         [Date]
"RTN","SAMINOT1",502,0)
 ;
"RTN","SAMINOT1",503,0)
 ;[If Smoking Cessation education text is entered add the following line]
"RTN","SAMINOT1",504,0)
 ;Smoking cessation education provided: [Show Input Text]
"RTN","SAMINOT1",505,0)
 ;
"RTN","SAMINOT1",506,0)
 ;[If a Lung Cancer Dx date is entered show the following 1 to 2 lines]
"RTN","SAMINOT1",507,0)
 ;Prior lung cancer diagnosis date: [Date]
"RTN","SAMINOT1",508,0)
 ;[If a location not in the VA is specified show the next line]
"RTN","SAMINOT1",509,0)
 ;Location where prior lung cancer diagnosis was made: [Location Text]
"RTN","SAMINOT1",510,0)
 ;
"RTN","SAMINOT1",511,0)
 ;[If Any Prior CT Date is entered show the following 1 to 2 lines]
"RTN","SAMINOT1",512,0)
 ;Prior CT:                   [Date]
"RTN","SAMINOT1",513,0)
 ;[If a location not in the VA is specified show the next line]
"RTN","SAMINOT1",514,0)
 ;Location where prior lung cancer diagnosis was made: [Location Text]
"RTN","SAMINOT1",515,0)
 ;
"RTN","SAMINOT1",516,0)
 ;Shared Decision Making:
"RTN","SAMINOT1",517,0)
 ;
"RTN","SAMINOT1",518,0)
 d OUT(" ")
"RTN","SAMINOT1",519,0)
 d OUT("   "_"Date of intake discussion contact: "_$$XVAL("sidc",vals))
"RTN","SAMINOT1",520,0)
 n learn s learn=""
"RTN","SAMINOT1",521,0)
 s:$$XVAL("silnip",vals) learn=learn_" In person"
"RTN","SAMINOT1",522,0)
 s:$$XVAL("silnph",vals) learn=learn_" Telephone"
"RTN","SAMINOT1",523,0)
 s:$$XVAL("silnth",vals) learn=learn_" TeleHealth"
"RTN","SAMINOT1",524,0)
 s:$$XVAL("silnml",vals) learn=learn_" Mailed letter"
"RTN","SAMINOT1",525,0)
 s:$$XVAL("silnpp",vals) learn=learn_" Message in patient portal"
"RTN","SAMINOT1",526,0)
 s:$$XVAL("silnvd",vals) learn=learn_" Video-on-Demand (VOD)"
"RTN","SAMINOT1",527,0)
 s:$$XVAL("silnot",vals) learn=learn_" "_$$XVAL("silnoo",vals)
"RTN","SAMINOT1",528,0)
 ;d GLOUT("   "_"How did you learn about the Lung Screening Program?: "_learn,4)
"RTN","SAMINOT1",529,0)
 d GLOUT("How did you learn about the Lung Screening Program?: ",4)
"RTN","SAMINOT1",530,0)
 d GLOUT(learn,6)
"RTN","SAMINOT1",531,0)
 n verified s verified=""
"RTN","SAMINOT1",532,0)
 s:$$XVAL("sipav",vals)="y" verified="Yes"
"RTN","SAMINOT1",533,0)
 s:$$XVAL("sipav",vals)="n" verified="No"
"RTN","SAMINOT1",534,0)
 d OUT("   "_"Primary address verified: "_verified)
"RTN","SAMINOT1",535,0)
 n rural s rural=""
"RTN","SAMINOT1",536,0)
 s:$$XVAL("sirs",vals)="r" rural="rural"
"RTN","SAMINOT1",537,0)
 s:$$XVAL("sirs",vals)="u" rural="urban"
"RTN","SAMINOT1",538,0)
 d OUT("   "_""_"Rural status: "_rural)
"RTN","SAMINOT1",539,0)
 d OUT("   "_"Preferred address and contact number: ")
"RTN","SAMINOT1",540,0)
 n pa s pa=""
"RTN","SAMINOT1",541,0)
 i $$XVAL("sipsa",vals)'="" d  ;
"RTN","SAMINOT1",542,0)
 . d OUT("      "_$$XVAL("sipsa",vals))
"RTN","SAMINOT1",543,0)
 . n csz s csz=""
"RTN","SAMINOT1",544,0)
 . s:$$XVAL("sipc",vals)'="" csz=$$XVAL("sipc",vals)
"RTN","SAMINOT1",545,0)
 . s:$$XVAL("sips",vals)'="" csz=csz_", "_$$XVAL("sips",vals)
"RTN","SAMINOT1",546,0)
 . s:$$XVAL("sipz",vals)'="" csz=csz_" "_$$XVAL("sipz",vals)
"RTN","SAMINOT1",547,0)
 . d OUT("      "_csz)
"RTN","SAMINOT1",548,0)
 d:$$XVAL("sippn",vals)'="" OUT("      "_$$XVAL("sippn",vals))
"RTN","SAMINOT1",549,0)
 d OUT("   "_"Ever smoked?: ")
"RTN","SAMINOT1",550,0)
 d GLOUT($$XVAL("sies",vals),6)
"RTN","SAMINOT1",551,0)
 n sstatus s sstatus=""
"RTN","SAMINOT1",552,0)
 s:$$XVAL("siesm",vals)="n" sstatus=sstatus_" Never smoked"
"RTN","SAMINOT1",553,0)
 s:$$XVAL("siesm",vals)="p" sstatus=sstatus_" Past"
"RTN","SAMINOT1",554,0)
 s:$$XVAL("siesm",vals)="c" sstatus=sstatus_" Current"
"RTN","SAMINOT1",555,0)
 s:$$XVAL("siesq",vals)=1 sstatus=sstatus_" Willing to quit"
"RTN","SAMINOT1",556,0)
 d OUT("   Smoking Status: "_sstatus)
"RTN","SAMINOT1",557,0)
 d OUT("   "_"CIGs per day: ")
"RTN","SAMINOT1",558,0)
 d OUT("      "_$$XVAL("sicpd",vals))
"RTN","SAMINOT1",559,0)
 d OUT("   "_"PPD: ")
"RTN","SAMINOT1",560,0)
 d OUT("      "_$$XVAL("sippd",vals))
"RTN","SAMINOT1",561,0)
 d OUT("   "_"# of years: ")
"RTN","SAMINOT1",562,0)
 d OUT("      "_$$XVAL("sisny",vals))
"RTN","SAMINOT1",563,0)
 d OUT("   "_"PPY: ")
"RTN","SAMINOT1",564,0)
 d OUT("      "_$$XVAL("sippy",vals))
"RTN","SAMINOT1",565,0)
 d OUT("")
"RTN","SAMINOT1",566,0)
 i $$XVAL("siq",vals)'="" d  ;
"RTN","SAMINOT1",567,0)
 . d OUT("Quit smoking on: "_$$XVAL("siq",vals))
"RTN","SAMINOT1",568,0)
 . d OUT("")
"RTN","SAMINOT1",569,0)
 i $$XVAL("sicep",vals)'="" d  ;
"RTN","SAMINOT1",570,0)
 . d OUT("Smoking cessation education provided:")
"RTN","SAMINOT1",571,0)
 . d GLOUT("    "_$$XVAL("sicep",vals),4)
"RTN","SAMINOT1",572,0)
 i $$XVAL("sicadx",vals)'="" d
"RTN","SAMINOT1",573,0)
 . d OUT("Prior lung cancer diagnosis date: "_$$XVAL("sicadx",vals))
"RTN","SAMINOT1",574,0)
 . i $$XVAL("sicadxl",vals)'="" d  ;
"RTN","SAMINOT1",575,0)
 . . d OUT("Location where prior lung cancer diagnosis was made:")
"RTN","SAMINOT1",576,0)
 . . d GLOUT("    "_$$XVAL("sicadxl",vals),4)
"RTN","SAMINOT1",577,0)
 i $$XVAL("siptct",vals)'="" d
"RTN","SAMINOT1",578,0)
 . d OUT("Prior CT: "_$$XVAL("siptct",vals))
"RTN","SAMINOT1",579,0)
 . i $$XVAL("siptctl",vals)'="" d  ;
"RTN","SAMINOT1",580,0)
 . . d OUT("Location where prior CT was made:")
"RTN","SAMINOT1",581,0)
 . . d GLOUT("    "_$$XVAL("siptctl",vals),4)
"RTN","SAMINOT1",582,0)
 d OUT(" ")
"RTN","SAMINOT1",583,0)
 d OUT("Shared Decision Making: ")
"RTN","SAMINOT1",584,0)
 d OUT(" ")
"RTN","SAMINOT1",585,0)
 n shareddm
"RTN","SAMINOT1",586,0)
 s shareddm=+$$XVAL("siidmdc",vals)
"RTN","SAMINOT1",587,0)
 i shareddm=1 d SDM(dest)
"RTN","SAMINOT1",588,0)
 e  d OUT("Shared decision making was not applicable")
"RTN","SAMINOT1",589,0)
 d OUT(" ")
"RTN","SAMINOT1",590,0)
 n ldct s ldct=""
"RTN","SAMINOT1",591,0)
 s:$$XVAL("sildct",vals)="n" ldct="No"
"RTN","SAMINOT1",592,0)
 s:$$XVAL("sildct",vals)="l" ldct="No"
"RTN","SAMINOT1",593,0)
 s:$$XVAL("sildct",vals)="y" ldct="Yes"
"RTN","SAMINOT1",594,0)
 d GLOUT("The veteran has decided to enroll in the Lung Screening Program: "_ldct)
"RTN","SAMINOT1",595,0)
 i $$XVAL("sildct",vals)="l" d  ;
"RTN","SAMINOT1",596,0)
 . d GLOUT("The veteran has indicated it is okay to contact in the future to discuss enrolling in the Lung Screening Program.",4)
"RTN","SAMINOT1",597,0)
 i ldct="Yes" d  ;
"RTN","SAMINOT1",598,0)
 . d OUT("LDCT ordered: "_ldct)
"RTN","SAMINOT1",599,0)
 . d OUT("    "_"Veteran enrolled in the LSS program. Results and coordination of care ")
"RTN","SAMINOT1",600,0)
 . d OUT("    "_"will be made by the LSS team.  ")
"RTN","SAMINOT1",601,0)
 . i $$XVAL("siclin",vals)'="" d  ;
"RTN","SAMINOT1",602,0)
 . . quit
"RTN","SAMINOT1",603,0)
 . quit
"RTN","SAMINOT1",604,0)
 n tmpclin s tmpclin=$$XVAL("siclin",vals)
"RTN","SAMINOT1",605,0)
 i tmpclin'="" d  ;
"RTN","SAMINOT1",606,0)
 . d OUT("Clinical Indications for Initial Screening CT:")
"RTN","SAMINOT1",607,0)
 . d GLOUT("    "_tmpclin,4)
"RTN","SAMINOT1",608,0)
 ;
"RTN","SAMINOT1",609,0)
 ;The veteran has decided to enroll in the Lung Screening Program: [Yes/No]
"RTN","SAMINOT1",610,0)
 ;
"RTN","SAMINOT1",611,0)
 ;[If Not enroll at this time but okay to contact in the future, add the following line]
"RTN","SAMINOT1",612,0)
 ;The veteran has indicated it is okay to contact in the future to discuss enrolling in the Lung Screening Program.
"RTN","SAMINOT1",613,0)
 ;
"RTN","SAMINOT1",614,0)
 ;[If Yes is answered for enrollment add the following two lines]
"RTN","SAMINOT1",615,0)
 ;LDCT ordered:                Yes
"RTN","SAMINOT1",616,0)
 ;Veteran enrolled in the Lung Screening Program. Results and coordination of care will be made by the Lung Screening Program team.
"RTN","SAMINOT1",617,0)
 ;
"RTN","SAMINOT1",618,0)
 ;[If Clinical Indication text is provided add them to the note]
"RTN","SAMINOT1",619,0)
 ;Clinical Indications:          [Show Input Text]
"RTN","SAMINOT1",620,0)
 ;
"RTN","SAMINOT1",621,0)
 ;
"RTN","SAMINOT1",622,0)
 quit  ; end of INNOTE
"RTN","SAMINOT1",623,0)
 ;
"RTN","SAMINOT1",624,0)
 ;
"RTN","SAMINOT1",625,0)
 ;
"RTN","SAMINOT1",626,0)
SDM(ary) ; adds Shared Decision Making text to array ary, passed by name
"RTN","SAMINOT1",627,0)
 ;
"RTN","SAMINOT1",628,0)
 n ii s ii=$o(@ary@(" "),-1)
"RTN","SAMINOT1",629,0)
 s ii=ii+1
"RTN","SAMINOT1",630,0)
 s @ary@(ii)="Veteran of age and exposure to cigarette smoke as described above, and "
"RTN","SAMINOT1",631,0)
 s ii=ii+1
"RTN","SAMINOT1",632,0)
 s @ary@(ii)="without a current diagnosis or obvious symptoms suggestive of lung cancer, "
"RTN","SAMINOT1",633,0)
 s ii=ii+1
"RTN","SAMINOT1",634,0)
 s @ary@(ii)="has been educated today about the estimated risk for lung cancer, the "
"RTN","SAMINOT1",635,0)
 s ii=ii+1
"RTN","SAMINOT1",636,0)
 s @ary@(ii)="possibility of cure or life prolonging if an early lung cancer were to be "
"RTN","SAMINOT1",637,0)
 s ii=ii+1
"RTN","SAMINOT1",638,0)
 s @ary@(ii)="found during screening, the possibility of imaging abnormalities not being "
"RTN","SAMINOT1",639,0)
 s ii=ii+1
"RTN","SAMINOT1",640,0)
 s @ary@(ii)="lung cancer, the possibility of complications from additional diagnostic "
"RTN","SAMINOT1",641,0)
 s ii=ii+1
"RTN","SAMINOT1",642,0)
 s @ary@(ii)="procedures, and the approximate amount of radiation exposure associated "
"RTN","SAMINOT1",643,0)
 s ii=ii+1
"RTN","SAMINOT1",644,0)
 s @ary@(ii)="with each screening procedure. In addition, the Veteran has been educated "
"RTN","SAMINOT1",645,0)
 s ii=ii+1
"RTN","SAMINOT1",646,0)
 s @ary@(ii)="today about the importance of adhering to annual lung screening, the "
"RTN","SAMINOT1",647,0)
 s ii=ii+1
"RTN","SAMINOT1",648,0)
 s @ary@(ii)="possible impact of other medical conditions on the overall health status, "
"RTN","SAMINOT1",649,0)
 s ii=ii+1
"RTN","SAMINOT1",650,0)
 s @ary@(ii)="the importance of avoiding exposure to cigarette smoke, available tobacco "
"RTN","SAMINOT1",651,0)
 s ii=ii+1
"RTN","SAMINOT1",652,0)
 s @ary@(ii)="cessation programs and available lung screening services at this site. "
"RTN","SAMINOT1",653,0)
 s ii=ii+1
"RTN","SAMINOT1",654,0)
 s @ary@(ii)="Education material was provided to the veteran. "
"RTN","SAMINOT1",655,0)
 s ii=ii+1
"RTN","SAMINOT1",656,0)
 ;s @ary@(ii)="Based on this information, the Veteran has opted for "
"RTN","SAMINOT1",657,0)
 ;
"RTN","SAMINOT1",658,0)
 quit  ; end of SDM
"RTN","SAMINOT1",659,0)
 ;
"RTN","SAMINOT1",660,0)
 ;
"RTN","SAMINOT1",661,0)
 ;
"RTN","SAMINOT1",662,0)
GLOUT(ln,indent) ; glob out first wrap ln then put it in dest
"RTN","SAMINOT1",663,0)
 ;
"RTN","SAMINOT1",664,0)
 i $$CRWRAP^SAMITTW(ln,dest,.cnt,80) q  ;
"RTN","SAMINOT1",665,0)
 n arytmp
"RTN","SAMINOT1",666,0)
 s arytmp(1)=ln
"RTN","SAMINOT1",667,0)
 i $g(indent)="" s indent=1
"RTN","SAMINOT1",668,0)
 d wrap^%tt("arytmp",indent_":80")
"RTN","SAMINOT1",669,0)
 n ii s ii=""
"RTN","SAMINOT1",670,0)
 f  s ii=$o(arytmp(ii)) q:ii=""  d  ;
"RTN","SAMINOT1",671,0)
 . d OUT(arytmp(ii))
"RTN","SAMINOT1",672,0)
 ;
"RTN","SAMINOT1",673,0)
 quit  ; end of GLOUT
"RTN","SAMINOT1",674,0)
 ;
"RTN","SAMINOT1",675,0)
 ;
"RTN","SAMINOT1",676,0)
 ;
"RTN","SAMINOT1",677,0)
OUT(ln) ;
"RTN","SAMINOT1",678,0)
 ;
"RTN","SAMINOT1",679,0)
 i $$CRWRAP^SAMITTW(ln,dest,.cnt,80) q  ;
"RTN","SAMINOT1",680,0)
 ;
"RTN","SAMINOT1",681,0)
 s cnt=cnt+1
"RTN","SAMINOT1",682,0)
 n lnn
"RTN","SAMINOT1",683,0)
 ;s debug=1
"RTN","SAMINOT1",684,0)
 s lnn=$o(@dest@(" "),-1)+1
"RTN","SAMINOT1",685,0)
 s @dest@(lnn)=ln
"RTN","SAMINOT1",686,0)
 ;
"RTN","SAMINOT1",687,0)
 ;i $g(debug)=1 d  ;
"RTN","SAMINOT1",688,0)
 ;. i ln["<" q  ; no markup
"RTN","SAMINOT1",689,0)
 ;. n zs s zs=$STACK
"RTN","SAMINOT1",690,0)
 ;. n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMINOT1",691,0)
 ;. s @dest@(lnn)=zp_":"_ln
"RTN","SAMINOT1",692,0)
 ;
"RTN","SAMINOT1",693,0)
 quit  ; end of OUT
"RTN","SAMINOT1",694,0)
 ;
"RTN","SAMINOT1",695,0)
 ;
"RTN","SAMINOT1",696,0)
 ;
"RTN","SAMINOT1",697,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMINOT1",698,0)
 ;
"RTN","SAMINOT1",699,0)
 ; vals is passed by name
"RTN","SAMINOT1",700,0)
 ;
"RTN","SAMINOT1",701,0)
 n zr
"RTN","SAMINOT1",702,0)
 s zr=$g(@vals@(var))
"RTN","SAMINOT1",703,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMINOT1",704,0)
 ;
"RTN","SAMINOT1",705,0)
 quit zr ; end of $$XVAL
"RTN","SAMINOT1",706,0)
 ;
"RTN","SAMINOT1",707,0)
 ;
"RTN","SAMINOT1",708,0)
 ;
"RTN","SAMINOT1",709,0)
EOR ; end of routine SAMINOT1
"RTN","SAMINOT2")
0^43^B473975400
"RTN","SAMINOT2",1,0)
SAMINOT2 ;ven/gpl - followup form notes ;2021-07-01t17:21z
"RTN","SAMINOT2",2,0)
 ;;18.0;SAMI;**1,9,12**;2020-01;Build 1
"RTN","SAMINOT2",3,0)
 ;;18.12
"RTN","SAMINOT2",4,0)
 ;
"RTN","SAMINOT2",5,0)
 ; SAMINOT2 contains web services & other subroutines for producing
"RTN","SAMINOT2",6,0)
 ; the ELCAP Followup Form Notes.
"RTN","SAMINOT2",7,0)
 ;
"RTN","SAMINOT2",8,0)
 quit  ; no entry from top
"RTN","SAMINOT2",9,0)
 ;
"RTN","SAMINOT2",10,0)
 ;
"RTN","SAMINOT2",11,0)
 ;
"RTN","SAMINOT2",12,0)
 ;@section 0 primary development
"RTN","SAMINOT2",13,0)
 ;
"RTN","SAMINOT2",14,0)
 ;
"RTN","SAMINOT2",15,0)
 ;
"RTN","SAMINOT2",16,0)
 ;@license see routine SAMIUL
"RTN","SAMINOT2",17,0)
 ;@documentation see SAMINUL
"RTN","SAMINOT2",18,0)
 ;@contents
"RTN","SAMINOT2",19,0)
 ; WSNOTE web service to return text note
"RTN","SAMINOT2",20,0)
 ; $$NOTE create note
"RTN","SAMINOT2",21,0)
 ; $$HASINNT is intake note present?
"RTN","SAMINOT2",22,0)
 ; $$HASVCNT is communication note present?
"RTN","SAMINOT2",23,0)
 ; $$HASLCSNT is lung cancer screening note present?
"RTN","SAMINOT2",24,0)
 ; MKVC make communication note
"RTN","SAMINOT2",25,0)
 ; MKLCS make lung cancer screening note
"RTN","SAMINOT2",26,0)
 ; $$MKNT make note w/date=now
"RTN","SAMINOT2",27,0)
 ; $$MKNTLOC make note
"RTN","SAMINOT2",28,0)
 ; $$NTDTTM convert date/time fr/fm to/note format
"RTN","SAMINOT2",29,0)
 ; $$NTLOCN location of nth note
"RTN","SAMINOT2",30,0)
 ; $$NTLAST location of latest note of a type
"RTN","SAMINOT2",31,0)
 ; NTLIST return note list
"RTN","SAMINOT2",32,0)
 ; TLST test NTLIST
"RTN","SAMINOT2",33,0)
 ; VCNOTE veteran communication note
"RTN","SAMINOT2",34,0)
 ; SSTATUS smoking status
"RTN","SAMINOT2",35,0)
 ; LCSNOTE lung cancer screening note
"RTN","SAMINOT2",36,0)
 ; OUT output new line to note
"RTN","SAMINOT2",37,0)
 ; $$XVAL value of form variable
"RTN","SAMINOT2",38,0)
 ; $$PREVCT key to previous ct eval form
"RTN","SAMINOT2",39,0)
 ; CTINFO extracts from latest ct eval form
"RTN","SAMINOT2",40,0)
 ; IMPRESS impressions from ct eval report
"RTN","SAMINOT2",41,0)
 ; $$XSUB dictionary value for variable
"RTN","SAMINOT2",42,0)
 ;
"RTN","SAMINOT2",43,0)
 ;
"RTN","SAMINOT2",44,0)
 ;
"RTN","SAMINOT2",45,0)
 ;@section 1 wsi WSNOTE & related subroutines
"RTN","SAMINOT2",46,0)
 ;
"RTN","SAMINOT2",47,0)
 ;
"RTN","SAMINOT2",48,0)
 ;
"RTN","SAMINOT2",49,0)
 ;@wsi WSNOTE^SAMINOT2, vapals-elcap followup note
"RTN","SAMINOT2",50,0)
WSNOTE(return,filter) ; web service to return text note
"RTN","SAMINOT2",51,0)
 ;
"RTN","SAMINOT2",52,0)
 ;ven/gpl;web service;procedure;
"RTN","SAMINOT2",53,0)
 ;
"RTN","SAMINOT2",54,0)
 n debug s debug=0
"RTN","SAMINOT2",55,0)
 i $g(filter("debug"))=1 s debug=1
"RTN","SAMINOT2",56,0)
 ;
"RTN","SAMINOT2",57,0)
 k return
"RTN","SAMINOT2",58,0)
 s HTTPRSP("mime")="text/html"
"RTN","SAMINOT2",59,0)
 ;
"RTN","SAMINOT2",60,0)
 n si
"RTN","SAMINOT2",61,0)
 s si=$g(filter("studyid"))
"RTN","SAMINOT2",62,0)
 i si="" d  ;
"RTN","SAMINOT2",63,0)
 . s si="XXX00333"
"RTN","SAMINOT2",64,0)
 q:si=""
"RTN","SAMINOT2",65,0)
 ;
"RTN","SAMINOT2",66,0)
 n samikey
"RTN","SAMINOT2",67,0)
 s samikey=$g(filter("form"))
"RTN","SAMINOT2",68,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT2",69,0)
 i samikey="" d  ;
"RTN","SAMINOT2",70,0)
 . s samikey=$o(@root@("graph",si,"siform"))
"RTN","SAMINOT2",71,0)
 . ;w !,samikey
"RTN","SAMINOT2",72,0)
 . ;b
"RTN","SAMINOT2",73,0)
 ;
"RTN","SAMINOT2",74,0)
 n vals
"RTN","SAMINOT2",75,0)
 m vals=@root@("graph",si,samikey)
"RTN","SAMINOT2",76,0)
 ;
"RTN","SAMINOT2",77,0)
 n note,nien,ntype
"RTN","SAMINOT2",78,0)
 s ntype=""
"RTN","SAMINOT2",79,0)
 s note=""
"RTN","SAMINOT2",80,0)
 s nien=$g(filter("nien"))
"RTN","SAMINOT2",81,0)
 i nien="" d
"RTN","SAMINOT2",82,0)
 . s:$g(vals("samistatus"))="complete" ntype="intake"
"RTN","SAMINOT2",83,0)
 . s:$g(vals("samistatus"))="chart-eligibility" ntype="eligibility"
"RTN","SAMINOT2",84,0)
 . s:$g(vals("samistatus"))="pre-enrollment-discussion" ntype="pre-note"
"RTN","SAMINOT2",85,0)
 . q:ntype=""
"RTN","SAMINOT2",86,0)
 . ;d nien=$$NTTYPE add code to pull the latest note by type
"RTN","SAMINOT2",87,0)
 q:nien=""
"RTN","SAMINOT2",88,0)
 n notebase
"RTN","SAMINOT2",89,0)
 s notebase=$$NTLOCN(si,samikey,nien) ; global location for the note
"RTN","SAMINOT2",90,0)
 s note=$na(@notebase@("text"))
"RTN","SAMINOT2",91,0)
 i '$d(@note) q
"RTN","SAMINOT2",92,0)
 ;
"RTN","SAMINOT2",93,0)
 new temp,tout
"RTN","SAMINOT2",94,0)
 do GETTMPL^SAMICASE("temp","vapals:note")
"RTN","SAMINOT2",95,0)
 quit:'$data(temp)
"RTN","SAMINOT2",96,0)
 ;
"RTN","SAMINOT2",97,0)
 n cnt s cnt=0
"RTN","SAMINOT2",98,0)
 n zi s zi=""
"RTN","SAMINOT2",99,0)
 ;
"RTN","SAMINOT2",100,0)
 f  s zi=$o(temp(zi)) q:zi=""  d  ;
"RTN","SAMINOT2",101,0)
 . ;
"RTN","SAMINOT2",102,0)
 . n line s line=temp(zi)
"RTN","SAMINOT2",103,0)
 . D LOAD^SAMIFORM(.line,samikey,si,.filter,.vals)
"RTN","SAMINOT2",104,0)
 . s temp(zi)=line
"RTN","SAMINOT2",105,0)
 . ;
"RTN","SAMINOT2",106,0)
 . s cnt=cnt+1
"RTN","SAMINOT2",107,0)
 . s tout(cnt)=temp(zi)
"RTN","SAMINOT2",108,0)
 . ;
"RTN","SAMINOT2",109,0)
 . i temp(zi)["report-text" d  ;
"RTN","SAMINOT2",110,0)
 . . i temp(zi)["#" q  ;
"RTN","SAMINOT2",111,0)
 . . n zj s zj=""
"RTN","SAMINOT2",112,0)
 . . f  s zj=$o(@note@(zj)) q:zj=""  d  ;
"RTN","SAMINOT2",113,0)
 . . . s cnt=cnt+1
"RTN","SAMINOT2",114,0)
 . . . ;s tout(cnt)=@note@(zj)_"<br>"
"RTN","SAMINOT2",115,0)
 . . . s tout(cnt)=@note@(zj)_$char(13,10)
"RTN","SAMINOT2",116,0)
 m return=tout
"RTN","SAMINOT2",117,0)
 ;
"RTN","SAMINOT2",118,0)
 quit  ; end of wsi WSNOTE^SAMINOT2
"RTN","SAMINOT2",119,0)
 ;
"RTN","SAMINOT2",120,0)
 ;
"RTN","SAMINOT2",121,0)
 ;
"RTN","SAMINOT2",122,0)
NOTE(filter) ; extrnisic to create note
"RTN","SAMINOT2",123,0)
 ;
"RTN","SAMINOT2",124,0)
 ;ven/gpl;private;function;
"RTN","SAMINOT2",125,0)
 ;@output = 1 if successful, 0 if not
"RTN","SAMINOT2",126,0)
 ;
"RTN","SAMINOT2",127,0)
 k ^gpl("funote")
"RTN","SAMINOT2",128,0)
 m ^gpl("funote")=filter
"RTN","SAMINOT2",129,0)
 ;q 0  ; while we are developing
"RTN","SAMINOT2",130,0)
 ;
"RTN","SAMINOT2",131,0)
 ; set up patient values
"RTN","SAMINOT2",132,0)
 ;
"RTN","SAMINOT2",133,0)
 n vals
"RTN","SAMINOT2",134,0)
 ;
"RTN","SAMINOT2",135,0)
 n si
"RTN","SAMINOT2",136,0)
 s si=$g(filter("studyid"))
"RTN","SAMINOT2",137,0)
 q:si="" 0
"RTN","SAMINOT2",138,0)
 ;
"RTN","SAMINOT2",139,0)
 n samikey
"RTN","SAMINOT2",140,0)
 s samikey=$g(filter("form"))
"RTN","SAMINOT2",141,0)
 q:samikey="" 0
"RTN","SAMINOT2",142,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT2",143,0)
 ;
"RTN","SAMINOT2",144,0)
 s vals=$na(@root@("graph",si,samikey))
"RTN","SAMINOT2",145,0)
 ;
"RTN","SAMINOT2",146,0)
 i '$d(@vals) d  q 0 ;
"RTN","SAMINOT2",147,0)
 . ;w !,"error, patient values not found"
"RTN","SAMINOT2",148,0)
 ;zwr @vals@(*)
"RTN","SAMINOT2",149,0)
 ;
"RTN","SAMINOT2",150,0)
 k ^SAMIUL("NOTE")
"RTN","SAMINOT2",151,0)
 m ^SAMIUL("NOTE","vals")=@vals
"RTN","SAMINOT2",152,0)
 m ^SAMIUL("NOTE","filter")=filter
"RTN","SAMINOT2",153,0)
 ;
"RTN","SAMINOT2",154,0)
 n didnote s didnote=0
"RTN","SAMINOT2",155,0)
 ;
"RTN","SAMINOT2",156,0)
 i $d(@vals@("notes")) d  q didnote ;
"RTN","SAMINOT2",157,0)
 . s filter("errorMessage")="Note already exists for this form."
"RTN","SAMINOT2",158,0)
 ;
"RTN","SAMINOT2",159,0)
 i $g(@vals@("futype"))="other" d  ;
"RTN","SAMINOT2",160,0)
 . i $g(@vals@("samistatus"))'="complete" q  ;
"RTN","SAMINOT2",161,0)
 . ;q:$$HASVCNT(vals)
"RTN","SAMINOT2",162,0)
 . d MKVC(si,samikey,vals,.filter) ;
"RTN","SAMINOT2",163,0)
 . s didnote=1
"RTN","SAMINOT2",164,0)
 ;
"RTN","SAMINOT2",165,0)
 i $g(@vals@("futype"))="ct" d  ;
"RTN","SAMINOT2",166,0)
 . i $g(@vals@("samistatus"))'="complete" q  ;
"RTN","SAMINOT2",167,0)
 . ;q:$$HASLCSNT(vals)
"RTN","SAMINOT2",168,0)
 . n ctdt,ctkey
"RTN","SAMINOT2",169,0)
 . s ctdt=$$LASTCMP^SAMICAS3(si,.ctkey)
"RTN","SAMINOT2",170,0)
 . i ctdt=-1 d  q  ;
"RTN","SAMINOT2",171,0)
 . . s filter("errorMessage")="No CT Eval form exists, followup note not created."
"RTN","SAMINOT2",172,0)
 . d MKLCS(si,samikey,vals,.filter) ;
"RTN","SAMINOT2",173,0)
 . s didnote=1
"RTN","SAMINOT2",174,0)
 ;
"RTN","SAMINOT2",175,0)
 ;i $g(@vals@("samistatus"))="complete" d  ;
"RTN","SAMINOT2",176,0)
 ;. q:$$HASVCNT(vals)
"RTN","SAMINOT2",177,0)
 ;. d MKVC(si,samikey,vals,.filter) ;
"RTN","SAMINOT2",178,0)
 ;. s didnote=1
"RTN","SAMINOT2",179,0)
 ;
"RTN","SAMINOT2",180,0)
 quit didnote ; end of $$NOTE
"RTN","SAMINOT2",181,0)
 ;
"RTN","SAMINOT2",182,0)
 ;
"RTN","SAMINOT2",183,0)
 ;
"RTN","SAMINOT2",184,0)
HASINNT(vals) ; is intake note present?
"RTN","SAMINOT2",185,0)
 ;
"RTN","SAMINOT2",186,0)
 ;ven/gpl;private;function;
"RTN","SAMINOT2",187,0)
 ;@output = 1 if intake note is present, 0 if not
"RTN","SAMINOT2",188,0)
 ;
"RTN","SAMINOT2",189,0)
 n zzi,zzrtn s (zzi,zzrtn)=0
"RTN","SAMINOT2",190,0)
 q:'$d(@vals)
"RTN","SAMINOT2",191,0)
 f  s zzi=$o(@vals@("notes",zzi)) q:+zzi=0  d  ;
"RTN","SAMINOT2",192,0)
 . i $g(@vals@("notes",zzi,"name"))["Intake" s zzrtn=1
"RTN","SAMINOT2",193,0)
 ;
"RTN","SAMINOT2",194,0)
 quit zzrtn ; end of $$HASINNT
"RTN","SAMINOT2",195,0)
 ;
"RTN","SAMINOT2",196,0)
 ;
"RTN","SAMINOT2",197,0)
 ;
"RTN","SAMINOT2",198,0)
HASVCNT(vals) ; is communication note present?
"RTN","SAMINOT2",199,0)
 ;
"RTN","SAMINOT2",200,0)
 ;ven/gpl;private;function;
"RTN","SAMINOT2",201,0)
 ;@output = 1 if communication note is present, 0 if not
"RTN","SAMINOT2",202,0)
 ;
"RTN","SAMINOT2",203,0)
 n zzi,zzrtn s (zzi,zzrtn)=0
"RTN","SAMINOT2",204,0)
 q:'$d(@vals)
"RTN","SAMINOT2",205,0)
 f  s zzi=$o(@vals@("notes",zzi)) q:+zzi=0  d  ;
"RTN","SAMINOT2",206,0)
 . i $g(@vals@("notes",zzi,"name"))["Communication" s zzrtn=1
"RTN","SAMINOT2",207,0)
 ;
"RTN","SAMINOT2",208,0)
 quit zzrtn ; end of $$HASVCNT
"RTN","SAMINOT2",209,0)
 ;
"RTN","SAMINOT2",210,0)
 ;
"RTN","SAMINOT2",211,0)
 ;
"RTN","SAMINOT2",212,0)
HASLCSNT(vals) ; is lung cancer screening note present?
"RTN","SAMINOT2",213,0)
 ;
"RTN","SAMINOT2",214,0)
 ;ven/gpl;private;function;
"RTN","SAMINOT2",215,0)
 ;@output = 1 if communication note is present, 0 if not
"RTN","SAMINOT2",216,0)
 ;
"RTN","SAMINOT2",217,0)
 n zzi,zzrtn s (zzi,zzrtn)=0
"RTN","SAMINOT2",218,0)
 q:'$d(@vals)
"RTN","SAMINOT2",219,0)
 f  s zzi=$o(@vals@("notes",zzi)) q:+zzi=0  d  ;
"RTN","SAMINOT2",220,0)
 . i $g(@vals@("notes",zzi,"name"))["Lung" s zzrtn=1
"RTN","SAMINOT2",221,0)
 ;
"RTN","SAMINOT2",222,0)
 quit zzrtn ; end of $$HASLCSNT
"RTN","SAMINOT2",223,0)
 ;
"RTN","SAMINOT2",224,0)
 ;
"RTN","SAMINOT2",225,0)
 ;
"RTN","SAMINOT2",226,0)
MKVC(sid,form,vals,filter) ; make communication note
"RTN","SAMINOT2",227,0)
 ;
"RTN","SAMINOT2",228,0)
 ;ven/gpl;private;procedure;
"RTN","SAMINOT2",229,0)
 ;
"RTN","SAMINOT2",230,0)
 n cnt s cnt=0
"RTN","SAMINOT2",231,0)
 ;n dest s dest=$na(@vals@("communication-note"))
"RTN","SAMINOT2",232,0)
 n dest s dest=$$MKNT(vals,"Communication Note","communication",.filter)
"RTN","SAMINOT2",233,0)
 k @dest
"RTN","SAMINOT2",234,0)
 d OUT("Veteran Communication Note")
"RTN","SAMINOT2",235,0)
 d OUT("")
"RTN","SAMINOT2",236,0)
 d VCNOTE(vals,dest,cnt)
"RTN","SAMINOT2",237,0)
 ;
"RTN","SAMINOT2",238,0)
 quit  ; end of MKVC
"RTN","SAMINOT2",239,0)
 ;
"RTN","SAMINOT2",240,0)
 ;
"RTN","SAMINOT2",241,0)
 ;
"RTN","SAMINOT2",242,0)
MKLCS(sid,form,vals,filter) ; make lung cancer screening note
"RTN","SAMINOT2",243,0)
 ;
"RTN","SAMINOT2",244,0)
 ;ven/gpl;private;procedure;
"RTN","SAMINOT2",245,0)
 ;
"RTN","SAMINOT2",246,0)
 n cnt s cnt=0
"RTN","SAMINOT2",247,0)
 ;n dest s dest=$na(@vals@("lcs-note"))
"RTN","SAMINOT2",248,0)
 n dest s dest=$$MKNT(vals,"Lung Cancer Screening Note","lcs",.filter)
"RTN","SAMINOT2",249,0)
 k @dest
"RTN","SAMINOT2",250,0)
 d OUT("Lung Screening and Surveillance Follow up Note")
"RTN","SAMINOT2",251,0)
 d OUT("")
"RTN","SAMINOT2",252,0)
 d LCSNOTE(vals,dest,cnt)
"RTN","SAMINOT2",253,0)
 ;
"RTN","SAMINOT2",254,0)
 quit  ; end of MKLCS
"RTN","SAMINOT2",255,0)
 ;
"RTN","SAMINOT2",256,0)
 ;
"RTN","SAMINOT2",257,0)
 ;
"RTN","SAMINOT2",258,0)
MKNT(vals,title,ntype,filter) ; make note w/date=now
"RTN","SAMINOT2",259,0)
 ;
"RTN","SAMINOT2",260,0)
 ;ven/gpl;private;pseudo-function;
"RTN","SAMINOT2",261,0)
 ;@input
"RTN","SAMINOT2",262,0)
 ; .filter (passed by reference)
"RTN","SAMINOT2",263,0)
 ;@output = global address
"RTN","SAMINOT2",264,0)
 ;
"RTN","SAMINOT2",265,0)
 n ntdt s ntdt=$$NTDTTM($$NOW^XLFDT)
"RTN","SAMINOT2",266,0)
 n ntptr
"RTN","SAMINOT2",267,0)
 s ntptr=$$MKNTLOC(vals,title,ntdt,$g(ntype),.filter)
"RTN","SAMINOT2",268,0)
 ;
"RTN","SAMINOT2",269,0)
 quit ntptr ; end of $$MKNT
"RTN","SAMINOT2",270,0)
 ;
"RTN","SAMINOT2",271,0)
 ;
"RTN","SAMINOT2",272,0)
 ;
"RTN","SAMINOT2",273,0)
MKNTLOC(vals,title,ndate,ntype,filter) ; make note
"RTN","SAMINOT2",274,0)
 ;
"RTN","SAMINOT2",275,0)
 ;ven/gpl;private;pseudo-function;
"RTN","SAMINOT2",276,0)
 ;@output = note location (global address)
"RTN","SAMINOT2",277,0)
 ;
"RTN","SAMINOT2",278,0)
 n nien
"RTN","SAMINOT2",279,0)
 s nien=$o(@vals@("notes",""),-1)+1
"RTN","SAMINOT2",280,0)
 s filter("nien")=nien
"RTN","SAMINOT2",281,0)
 n nloc s nloc=$na(@vals@("notes",nien))
"RTN","SAMINOT2",282,0)
 s @nloc@("name")=title_" "_$g(ndate)
"RTN","SAMINOT2",283,0)
 s @nloc@("date")=$g(ndate)
"RTN","SAMINOT2",284,0)
 s @nloc@("type")=$g(ntype)
"RTN","SAMINOT2",285,0)
 ;
"RTN","SAMINOT2",286,0)
 quit $na(@nloc@("text"))
"RTN","SAMINOT2",287,0)
 ;
"RTN","SAMINOT2",288,0)
 ;
"RTN","SAMINOT2",289,0)
 ;
"RTN","SAMINOT2",290,0)
NTDTTM(ZFMDT) ; convert date/time fr/fm to/note format
"RTN","SAMINOT2",291,0)
 ;
"RTN","SAMINOT2",292,0)
 ;ven/gpl;private;function;
"RTN","SAMINOT2",293,0)
 ;@input
"RTN","SAMINOT2",294,0)
 ; ZFMDT = fileman date/time to translate
"RTN","SAMINOT2",295,0)
 ;@output = date/time in note format
"RTN","SAMINOT2",296,0)
 ;
"RTN","SAMINOT2",297,0)
 quit $$FMTE^XLFDT(ZFMDT,"5") ; end of $$NTDTTM
"RTN","SAMINOT2",298,0)
 ;
"RTN","SAMINOT2",299,0)
 ;
"RTN","SAMINOT2",300,0)
 ;
"RTN","SAMINOT2",301,0)
NTLOCN(sid,form,nien) ; location of nth note
"RTN","SAMINOT2",302,0)
 ;
"RTN","SAMINOT2",303,0)
 ;ven/gpl;private;function;
"RTN","SAMINOT2",304,0)
 ;@output = global location of Nth note
"RTN","SAMINOT2",305,0)
 ;
"RTN","SAMINOT2",306,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT2",307,0)
 ;
"RTN","SAMINOT2",308,0)
 quit $na(@root@("graph",sid,form,"notes",nien)) ; end of $$NTLOCN
"RTN","SAMINOT2",309,0)
 ;
"RTN","SAMINOT2",310,0)
 ;
"RTN","SAMINOT2",311,0)
 ;
"RTN","SAMINOT2",312,0)
NTLAST(sid,form,ntype) ; location of latest note of a type
"RTN","SAMINOT2",313,0)
 ;
"RTN","SAMINOT2",314,0)
 ;ven/gpl;private;function;
"RTN","SAMINOT2",315,0)
 ;@input
"RTN","SAMINOT2",316,0)
 ; ntype = type of note
"RTN","SAMINOT2",317,0)
 ;@output = global location of latest note of type ntype
"RTN","SAMINOT2",318,0)
 ;
"RTN","SAMINOT2",319,0)
 ; not yet written
"RTN","SAMINOT2",320,0)
 ;
"RTN","SAMINOT2",321,0)
 quit  ; end of $$NTLAST
"RTN","SAMINOT2",322,0)
 ;
"RTN","SAMINOT2",323,0)
 ;
"RTN","SAMINOT2",324,0)
 ;
"RTN","SAMINOT2",325,0)
NTLIST(nlist,sid,form) ; return note list
"RTN","SAMINOT2",326,0)
 ;
"RTN","SAMINOT2",327,0)
 ;ven/gpl;private;procedure;
"RTN","SAMINOT2",328,0)
 ;@output
"RTN","SAMINOT2",329,0)
 ; .nlist = note list [pass by reference]
"RTN","SAMINOT2",330,0)
 ;
"RTN","SAMINOT2",331,0)
 n zn,root,gn
"RTN","SAMINOT2",332,0)
 s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT2",333,0)
 s zn=0
"RTN","SAMINOT2",334,0)
 s gn=$na(@root@("graph",sid,form,"notes"))
"RTN","SAMINOT2",335,0)
 q:'$d(@gn)
"RTN","SAMINOT2",336,0)
 f  s zn=$o(@gn@(zn)) q:+zn=0  d  ;
"RTN","SAMINOT2",337,0)
 . s @nlist@(zn,"name")=@gn@(zn,"name")
"RTN","SAMINOT2",338,0)
 . s @nlist@(zn,"nien")=zn
"RTN","SAMINOT2",339,0)
 ;
"RTN","SAMINOT2",340,0)
 quit  ; end of NTLIST
"RTN","SAMINOT2",341,0)
 ;
"RTN","SAMINOT2",342,0)
 ;
"RTN","SAMINOT2",343,0)
 ;
"RTN","SAMINOT2",344,0)
TLST ; test NTLIST
"RTN","SAMINOT2",345,0)
 ;
"RTN","SAMINOT2",346,0)
 ;ven/gpl;test;procedure;
"RTN","SAMINOT2",347,0)
 ;
"RTN","SAMINOT2",348,0)
 set SID="XXX00677"
"RTN","SAMINOT2",349,0)
 set FORM="siform-2019-04-23"
"RTN","SAMINOT2",350,0)
 do NTLIST("G",SID,FORM)
"RTN","SAMINOT2",351,0)
 ;
"RTN","SAMINOT2",352,0)
 ; zwrite G
"RTN","SAMINOT2",353,0)
 ;
"RTN","SAMINOT2",354,0)
 quit  ; end of TLST
"RTN","SAMINOT2",355,0)
 ;
"RTN","SAMINOT2",356,0)
 ;
"RTN","SAMINOT2",357,0)
 ;
"RTN","SAMINOT2",358,0)
VCNOTE(vals,dest,cnt) ; veteran communication note
"RTN","SAMINOT2",359,0)
 ;
"RTN","SAMINOT2",360,0)
 ;ven/gpl;private;procedure;
"RTN","SAMINOT2",361,0)
 ;
"RTN","SAMINOT2",362,0)
 ; do OUT("")
"RTN","SAMINOT2",363,0)
 ;
"RTN","SAMINOT2",364,0)
 d OUT("Veteran was contacted via:")
"RTN","SAMINOT2",365,0)
 n sp1 s sp1="    "
"RTN","SAMINOT2",366,0)
 d:$$XVAL("fucmotip",vals) OUT(sp1_"In person")
"RTN","SAMINOT2",367,0)
 d:$$XVAL("fucmotte",vals) OUT(sp1_"Telephone")
"RTN","SAMINOT2",368,0)
 d:$$XVAL("fucmotth",vals) OUT(sp1_"TeleHealth")
"RTN","SAMINOT2",369,0)
 d:$$XVAL("fucmotml",vals) OUT(sp1_"Mailed Letter")
"RTN","SAMINOT2",370,0)
 d:$$XVAL("fucmotpp",vals) OUT(sp1_"Message in patient portal")
"RTN","SAMINOT2",371,0)
 d:$$XVAL("fucmotvd",vals) OUT(sp1_"Video-on-demand (VOD)")
"RTN","SAMINOT2",372,0)
 d:$$XVAL("fucmotot",vals) OUT(sp1_"Other: "_$$XVAL("fucmotoo",vals))
"RTN","SAMINOT2",373,0)
 d OUT("")
"RTN","SAMINOT2",374,0)
 ;
"RTN","SAMINOT2",375,0)
 d:$$XVAL("fucmotde",vals)'=""
"RTN","SAMINOT2",376,0)
 . d OUT("Communication details:")
"RTN","SAMINOT2",377,0)
 . d OUT(sp1_$$XVAL("fucmotde",vals))
"RTN","SAMINOT2",378,0)
 ;
"RTN","SAMINOT2",379,0)
 d SSTATUS(vals) ; insert smoking status section
"RTN","SAMINOT2",380,0)
 ;
"RTN","SAMINOT2",381,0)
 quit  ; end of VCNOTE
"RTN","SAMINOT2",382,0)
 ;
"RTN","SAMINOT2",383,0)
 ;
"RTN","SAMINOT2",384,0)
 ;
"RTN","SAMINOT2",385,0)
SSTATUS(vals) ; smoking status
"RTN","SAMINOT2",386,0)
 ;
"RTN","SAMINOT2",387,0)
 ;ven/gpl;private;procedure;
"RTN","SAMINOT2",388,0)
 ;
"RTN","SAMINOT2",389,0)
 n sstat s sstat=""
"RTN","SAMINOT2",390,0)
 i $$XVAL("sisa",vals)="y" d  ; 
"RTN","SAMINOT2",391,0)
 . s sstat="Current"
"RTN","SAMINOT2",392,0)
 . d OUT("Smoking status: "_sstat)
"RTN","SAMINOT2",393,0)
 . d OUT(sp1_"Current cigarette smoker (patient advised that active tobacco use")
"RTN","SAMINOT2",394,0)
 . d OUT(sp1_"increases risk of future lung cancer, heart disease and stroke,")
"RTN","SAMINOT2",395,0)
 . d OUT(sp1_"advised stability now does not guarantee will not develop future")
"RTN","SAMINOT2",396,0)
 . d OUT(sp1_"lung cancer or risks of premature death from tobacco related heart")
"RTN","SAMINOT2",397,0)
 . d OUT(sp1_"disease and stroke)")
"RTN","SAMINOT2",398,0)
 i $$XVAL("sisa",vals)="n" d  ;
"RTN","SAMINOT2",399,0)
 . s sstat="Former"
"RTN","SAMINOT2",400,0)
 . d OUT("Smoking status: "_sstat)
"RTN","SAMINOT2",401,0)
 . n qdate s qdate=""
"RTN","SAMINOT2",402,0)
 . s qdate=$$XVAL("siq",vals)
"RTN","SAMINOT2",403,0)
 . i qdate'="" d OUT(sp1_"Former cigarette smoker. Quit date: "_qdate)
"RTN","SAMINOT2",404,0)
 . e  d OUT(sp1_"Former cigarette smoker.")
"RTN","SAMINOT2",405,0)
 i $$XVAL("sisa",vals)="o" d  ;
"RTN","SAMINOT2",406,0)
 . s sstat="Never"
"RTN","SAMINOT2",407,0)
 . d OUT("Smoking status: "_sstat)
"RTN","SAMINOT2",408,0)
 . d OUT(sp1_"Never cigarette smoker")
"RTN","SAMINOT2",409,0)
 ;
"RTN","SAMINOT2",410,0)
 n cumary
"RTN","SAMINOT2",411,0)
 d CUMPY^SAMIUR2("cumary",sid,form)
"RTN","SAMINOT2",412,0)
 k ^gpl("funote","cumary")
"RTN","SAMINOT2",413,0)
 m ^gpl("funote","cumary")=cumary
"RTN","SAMINOT2",414,0)
 n cur s cur=$g(cumary("current"))
"RTN","SAMINOT2",415,0)
 n newcum s newcum=$g(cumary("rpt",cur,4)) ; new cumulative pack years
"RTN","SAMINOT2",416,0)
 ;
"RTN","SAMINOT2",417,0)
 i $$XVAL("sisa",vals)="y" d  ;  
"RTN","SAMINOT2",418,0)
 . d OUT("Smoking history (since last visit):")
"RTN","SAMINOT2",419,0)
 . d OUT(sp1_"Cigarettes/day: "_$$XVAL("sicpd",vals))
"RTN","SAMINOT2",420,0)
 . d OUT(sp1_"PPD: "_$$XVAL("sippd",vals))
"RTN","SAMINOT2",421,0)
 . d OUT(sp1_"Current cumulative pack years: "_newcum)
"RTN","SAMINOT2",422,0)
 i $$XVAL("sisa",vals)'="y" d  ;  
"RTN","SAMINOT2",423,0)
 . d OUT("Smoking History")
"RTN","SAMINOT2",424,0)
 n zi
"RTN","SAMINOT2",425,0)
 f zi=1:1:cur d  ;
"RTN","SAMINOT2",426,0)
 . d OUT(sp1_cumary("rpt",zi,1)_" "_cumary("rpt",zi,2))
"RTN","SAMINOT2",427,0)
 . d OUT(sp1_sp1_"Pack Years: "_cumary("rpt",zi,3))
"RTN","SAMINOT2",428,0)
 . d OUT(sp1_sp1_"Cumulative: "_cumary("rpt",zi,4))
"RTN","SAMINOT2",429,0)
 ;
"RTN","SAMINOT2",430,0)
 n tried s tried=$$XVAL("sittq",vals)
"RTN","SAMINOT2",431,0)
 n ptried s ptried=$s(tried="y":"Yes",tried="n":"No",tried="o":"Not applicable",1:"")
"RTN","SAMINOT2",432,0)
 i ptried'="" d OUT("Since your prior CT scan have you ever tried to quit smoking? "_ptried)
"RTN","SAMINOT2",433,0)
 ;
"RTN","SAMINOT2",434,0)
 n tryary,cnt
"RTN","SAMINOT2",435,0)
 s cnt=0
"RTN","SAMINOT2",436,0)
 i $$XVAL("sisca",vals)'="" s cnt=cnt+1 s tryary(cnt)="Have not tried to quit"
"RTN","SAMINOT2",437,0)
 i $$XVAL("siscb",vals)'="" s cnt=cnt+1 s tryary(cnt)="""Cold Turkey"" by completely stopping on your own with no other assistance"
"RTN","SAMINOT2",438,0)
 i $$XVAL("siscc",vals)'="" s cnt=cnt+1 s tryary(cnt)="Tapering or reducing number of cigarettes smoked per day"
"RTN","SAMINOT2",439,0)
 i $$XVAL("siscd",vals)'="" s cnt=cnt+1 s tryary(cnt)="Self-help material (e.g., brochure, cessation website)"
"RTN","SAMINOT2",440,0)
 i $$XVAL("sisce",vals)'="" s cnt=cnt+1 s tryary(cnt)="Individual consultation or cessation counseling"
"RTN","SAMINOT2",441,0)
 i $$XVAL("siscf",vals)'="" s cnt=cnt+1 s tryary(cnt)="Telephone cessation counseling hotline (e.g., 1-855-QUIT-VET, 1-800-QUIT-NOW)"
"RTN","SAMINOT2",442,0)
 i $$XVAL("siscg",vals)'="" s cnt=cnt+1 s tryary(cnt)="Peer support (e.g., Nicotine Anonymous)"
"RTN","SAMINOT2",443,0)
 i $$XVAL("sisch",vals)'="" s cnt=cnt+1 s tryary(cnt)="Nicotine replacement therapy (e.g., patch, gum, inhaler, nasal spray, lozenge)"
"RTN","SAMINOT2",444,0)
 i $$XVAL("sisci",vals)'="" s cnt=cnt+1 s tryary(cnt)="Zyban"
"RTN","SAMINOT2",445,0)
 i $$XVAL("siscj",vals)'="" s cnt=cnt+1 s tryary(cnt)="Hypnosis"
"RTN","SAMINOT2",446,0)
 i $$XVAL("sisck",vals)'="" s cnt=cnt+1 s tryary(cnt)="Acupuncture / acupressure"
"RTN","SAMINOT2",447,0)
 n tryot s tryot=""
"RTN","SAMINOT2",448,0)
 i $$XVAL("siscl",vals)'="" d  ;
"RTN","SAMINOT2",449,0)
 . s cnt=cnt+1 s tryary(cnt)="Other (specify)"
"RTN","SAMINOT2",450,0)
 . s tryot=$$XVAL("siscos",vals)
"RTN","SAMINOT2",451,0)
 ;
"RTN","SAMINOT2",452,0)
 i cnt>0 d  ;
"RTN","SAMINOT2",453,0)
 .  i ptried="" d OUT("Since your prior CT scan have you ever tried to quit smoking? ")
"RTN","SAMINOT2",454,0)
 . n zi s zi=""
"RTN","SAMINOT2",455,0)
 . f  s zi=$o(tryary(zi)) q:zi=""  d  ;
"RTN","SAMINOT2",456,0)
 . . d OUT(sp1_tryary(zi))
"RTN","SAMINOT2",457,0)
 . i tryot'="" d OUT(sp1_sp1_tryot)
"RTN","SAMINOT2",458,0)
 ;
"RTN","SAMINOT2",459,0)
 n cess,cess2 s cess="" s cess2=""
"RTN","SAMINOT2",460,0)
 i $$XVAL("siscmd",vals)="d" s cess="Declined"
"RTN","SAMINOT2",461,0)
 i $$XVAL("siscmd",vals)="a" s cess="Advised to quit smoking; VA resources provided"
"RTN","SAMINOT2",462,0)
 i $$XVAL("siscmd",vals)="i" d  ;
"RTN","SAMINOT2",463,0)
 . s cess="Interested in VA tobacco cessation medication. Encouraged Veteran"
"RTN","SAMINOT2",464,0)
 . s cess2="to talk to provider or pharmacist about which medication option is best for you."
"RTN","SAMINOT2",465,0)
 i cess'="" d  ;
"RTN","SAMINOT2",466,0)
 . d OUT("Tobacco cessation provided:")
"RTN","SAMINOT2",467,0)
 . d OUT(sp1_cess)
"RTN","SAMINOT2",468,0)
 . i cess2'="" d OUT(sp1_cess2)
"RTN","SAMINOT2",469,0)
 ;
"RTN","SAMINOT2",470,0)
 quit  ; end of SSTATUS
"RTN","SAMINOT2",471,0)
 ;
"RTN","SAMINOT2",472,0)
 ;
"RTN","SAMINOT2",473,0)
 ;
"RTN","SAMINOT2",474,0)
LCSNOTE(vals,dest,cnt) ; lung cancer screening note
"RTN","SAMINOT2",475,0)
 ;
"RTN","SAMINOT2",476,0)
 ;ven/gpl;private;procedure;
"RTN","SAMINOT2",477,0)
 ;
"RTN","SAMINOT2",478,0)
 ; do OUT("")
"RTN","SAMINOT2",479,0)
 ;
"RTN","SAMINOT2",480,0)
 n sp1 s sp1="    "
"RTN","SAMINOT2",481,0)
 d OUT("Initial LDCT/Baseline: "_$$XVAL("sidoe",vals))
"RTN","SAMINOT2",482,0)
 d OUT("Date of most recent CT/LDCT: "_$$XVAL("fulctdt",vals))
"RTN","SAMINOT2",483,0)
 d OUT(sp1_"Notification of Results: "_$$XVAL("sidof",vals))
"RTN","SAMINOT2",484,0)
 n addcmt s addcmt=$$XVAL("fucmctde",vals)
"RTN","SAMINOT2",485,0)
 i addcmt'="" d  ;
"RTN","SAMINOT2",486,0)
 . d OUT("Additional comments:")
"RTN","SAMINOT2",487,0)
 . d OUT(sp1_addcmt)
"RTN","SAMINOT2",488,0)
 n impress s impress=""
"RTN","SAMINOT2",489,0)
 n ctary
"RTN","SAMINOT2",490,0)
 d CTINFO("ctary",sid,form)
"RTN","SAMINOT2",491,0)
 s impress=$g(ctary("impression"))
"RTN","SAMINOT2",492,0)
 ; get impression from lastest CT Eval here
"RTN","SAMINOT2",493,0)
 d IMPRESS("ctary",sid)
"RTN","SAMINOT2",494,0)
 ;i impress'="" d  ;
"RTN","SAMINOT2",495,0)
 ;. d OUT("Impression:")
"RTN","SAMINOT2",496,0)
 ;. d OUT(sp1_impress)
"RTN","SAMINOT2",497,0)
 ; smoking status follows
"RTN","SAMINOT2",498,0)
 d SSTATUS(vals)
"RTN","SAMINOT2",499,0)
 ;d OUT("Veteran was contacted via:")
"RTN","SAMINOT2",500,0)
 ;n sp1 s sp1="    "
"RTN","SAMINOT2",501,0)
 ;d:$$XVAL("fucmctip",vals) OUT(sp1_"In person")
"RTN","SAMINOT2",502,0)
 ;d:$$XVAL("fucmctte",vals) OUT(sp1_"Telephone")
"RTN","SAMINOT2",503,0)
 ;d:$$XVAL("fucmctth",vals) OUT(sp1_"TeleHealth")
"RTN","SAMINOT2",504,0)
 ;d:$$XVAL("fucmctml",vals) OUT(sp1_"Mailed Letter")
"RTN","SAMINOT2",505,0)
 ;d:$$XVAL("fucmctpp",vals) OUT(sp1_"Message in patient portal")
"RTN","SAMINOT2",506,0)
 ;d:$$XVAL("fucmctvd",vals) OUT(sp1_"Video-on-demand (VOD)")
"RTN","SAMINOT2",507,0)
 ;d:$$XVAL("fucmctot",vals) OUT(sp1_"Other: "_$$XVAL("fucmctoo",vals))
"RTN","SAMINOT2",508,0)
 ;d OUT("")
"RTN","SAMINOT2",509,0)
 ;
"RTN","SAMINOT2",510,0)
 ;d:$$XVAL("fucmctde",vals)'=""
"RTN","SAMINOT2",511,0)
 ;. d OUT("Communication details:")
"RTN","SAMINOT2",512,0)
 ;. d OUT(sp1_$$XVAL("fucmctde",vals))
"RTN","SAMINOT2",513,0)
 n recom s recom=""
"RTN","SAMINOT2",514,0)
 ; get recommendations from CT eval form here
"RTN","SAMINOT2",515,0)
 s recom=$g(ctary("followup"))
"RTN","SAMINOT2",516,0)
 i recom'="" d  ;
"RTN","SAMINOT2",517,0)
 . d OUT("Recommendations:")
"RTN","SAMINOT2",518,0)
 . d OUT(sp1_recom)
"RTN","SAMINOT2",519,0)
 . i $g(ctary("followup2"))'="" d  ;
"RTN","SAMINOT2",520,0)
 . . d OUT(sp1_ctary("followup2"))
"RTN","SAMINOT2",521,0)
 . i $g(ctary("followup3"))'="" d  ;
"RTN","SAMINOT2",522,0)
 . . d OUT(sp1_ctary("followup3"))
"RTN","SAMINOT2",523,0)
 n ordered s ordered=$$XVAL("funewct",vals)
"RTN","SAMINOT2",524,0)
 i ordered'="" d  ;
"RTN","SAMINOT2",525,0)
 . s ordered=$s(ordered="y":"Yes",ordered="n":"No",1:"")
"RTN","SAMINOT2",526,0)
 . d OUT("CT/LDCT ordered: "_ordered)
"RTN","SAMINOT2",527,0)
 n pulmon s pulmon=$$XVAL("fucompul",vals)
"RTN","SAMINOT2",528,0)
 i pulmon'="" d  ;
"RTN","SAMINOT2",529,0)
 . s pulmon=$s(pulmon="y":"Yes",pulmon="n":"No",1:"")
"RTN","SAMINOT2",530,0)
 . d OUT("Communicated to Pulmonary: "_pulmon)
"RTN","SAMINOT2",531,0)
 ;
"RTN","SAMINOT2",532,0)
 quit  ; end of LCSNOTE
"RTN","SAMINOT2",533,0)
 ;
"RTN","SAMINOT2",534,0)
 ;
"RTN","SAMINOT2",535,0)
TOUT(sid) ;
"RTN","SAMINOT2",536,0)
 s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT2",537,0)
 s groot=$na(@root@("graph",sid))
"RTN","SAMINOT2",538,0)
 s g=""
"RTN","SAMINOT2",539,0)
 f  s g=$o(@groot@(g)) q:g=""  d  ;
"RTN","SAMINOT2",540,0)
 . w !,g
"RTN","SAMINOT2",541,0)
 quit
"RTN","SAMINOT2",542,0)
 ;
"RTN","SAMINOT2",543,0)
OUT(ln) ; output new line to note
"RTN","SAMINOT2",544,0)
 ;
"RTN","SAMINOT2",545,0)
 ;ven/gpl;private;procedure;
"RTN","SAMINOT2",546,0)
 ;
"RTN","SAMINOT2",547,0)
 i $$CRWRAP^SAMITTW(ln,dest,.cnt,80) q  ;
"RTN","SAMINOT2",548,0)
 ;
"RTN","SAMINOT2",549,0)
 s cnt=cnt+1
"RTN","SAMINOT2",550,0)
 n lnn
"RTN","SAMINOT2",551,0)
 ;s debug=1
"RTN","SAMINOT2",552,0)
 s lnn=$o(@dest@(" "),-1)+1
"RTN","SAMINOT2",553,0)
 s @dest@(lnn)=ln
"RTN","SAMINOT2",554,0)
 ;
"RTN","SAMINOT2",555,0)
 ;i $g(debug)=1 d  ;
"RTN","SAMINOT2",556,0)
 ;. i ln["<" q  ; no markup
"RTN","SAMINOT2",557,0)
 ;. n zs s zs=$STACK
"RTN","SAMINOT2",558,0)
 ;. n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMINOT2",559,0)
 ;. s @dest@(lnn)=zp_":"_ln
"RTN","SAMINOT2",560,0)
 ;
"RTN","SAMINOT2",561,0)
 quit  ; end of OUT
"RTN","SAMINOT2",562,0)
 ;
"RTN","SAMINOT2",563,0)
 ;
"RTN","SAMINOT2",564,0)
 ;
"RTN","SAMINOT2",565,0)
XVAL(var,vals) ; value of form variable
"RTN","SAMINOT2",566,0)
 ;
"RTN","SAMINOT2",567,0)
 ;ven/gpl;private;function;
"RTN","SAMINOT2",568,0)
 ;@input
"RTN","SAMINOT2",569,0)
 ; var = name of form variable
"RTN","SAMINOT2",570,0)
 ; vals = global root of form variable array
"RTN","SAMINOT2",571,0)
 ; @vals = form variable array [pass by name]
"RTN","SAMINOT2",572,0)
 ;@output = value of form variable
"RTN","SAMINOT2",573,0)
 ;
"RTN","SAMINOT2",574,0)
 new zr
"RTN","SAMINOT2",575,0)
 set zr=$get(@vals@(var))
"RTN","SAMINOT2",576,0)
 ;
"RTN","SAMINOT2",577,0)
 ; i zr="" s zr="["_var_"]"
"RTN","SAMINOT2",578,0)
 ;
"RTN","SAMINOT2",579,0)
 quit zr ; end of $$XVAL
"RTN","SAMINOT2",580,0)
 ;
"RTN","SAMINOT2",581,0)
 ;
"RTN","SAMINOT2",582,0)
 ;
"RTN","SAMINOT2",583,0)
PREVCT(SID,FORM) ; key to previous ct eval form
"RTN","SAMINOT2",584,0)
 ;
"RTN","SAMINOT2",585,0)
 ;ven/gpl;private;function;
"RTN","SAMINOT2",586,0)
 ;@input
"RTN","SAMINOT2",587,0)
 ; FORM = [not yet implemented, always treated as if FORM=""]
"RTN","SAMINOT2",588,0)
 ;@output = form key of CT Eval form previous to FORM
"RTN","SAMINOT2",589,0)
 ;
"RTN","SAMINOT2",590,0)
 ; $$PREVCT returns the form key to the CT Eval form previous to
"RTN","SAMINOT2",591,0)
 ; FORM. If FORM is null, the latest CT Eval form key is returned.
"RTN","SAMINOT2",592,0)
 ;
"RTN","SAMINOT2",593,0)
 new gn set gn=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT2",594,0)
 new prev set prev=$order(@gn@("graph",SID,"ceform-30"),-1)
"RTN","SAMINOT2",595,0)
 ;
"RTN","SAMINOT2",596,0)
 quit prev ; end of $$PREVCT
"RTN","SAMINOT2",597,0)
 ;
"RTN","SAMINOT2",598,0)
 ;
"RTN","SAMINOT2",599,0)
 ;
"RTN","SAMINOT2",600,0)
CTINFO(ARY,SID,FORM) ; extracts from latest CT Eval form
"RTN","SAMINOT2",601,0)
 ;
"RTN","SAMINOT2",602,0)
 ;ven/gpl;private;procedure;
"RTN","SAMINOT2",603,0)
 ;@input
"RTN","SAMINOT2",604,0)
 ; ARY = name of output array
"RTN","SAMINOT2",605,0)
 ; SID
"RTN","SAMINOT2",606,0)
 ; FORM
"RTN","SAMINOT2",607,0)
 ;@output
"RTN","SAMINOT2",608,0)
 ; @ARY = extract from latest ct eval form [passed by name]
"RTN","SAMINOT2",609,0)
 ;
"RTN","SAMINOT2",610,0)
 n ctkey s ctkey=$$PREVCT(SID,$G(FORM))
"RTN","SAMINOT2",611,0)
 q:ctkey=""
"RTN","SAMINOT2",612,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT2",613,0)
 n ctroot s ctroot=$na(@root@("graph",SID,ctkey))
"RTN","SAMINOT2",614,0)
 ;
"RTN","SAMINOT2",615,0)
 s @ARY@("ctform")=ctkey
"RTN","SAMINOT2",616,0)
 s @ARY@("impression")=$g(@ctroot@("ceimre"))
"RTN","SAMINOT2",617,0)
 n futext
"RTN","SAMINOT2",618,0)
 s futext=$g(@ctroot@("cefuw"))
"RTN","SAMINOT2",619,0)
 n futbl
"RTN","SAMINOT2",620,0)
 s futbl("1y")="Annual repeat"
"RTN","SAMINOT2",621,0)
 s futbl("nw")="Now"
"RTN","SAMINOT2",622,0)
 s futbl("1m")="1 month"
"RTN","SAMINOT2",623,0)
 s futbl("3m")="3 months"
"RTN","SAMINOT2",624,0)
 s futbl("6m")="6 months"
"RTN","SAMINOT2",625,0)
 s futbl("os")="other"
"RTN","SAMINOT2",626,0)
 i futext'="" s futext=$g(futbl(futext))
"RTN","SAMINOT2",627,0)
 n fudate s fudate=$g(@ctroot@("cefud"))
"RTN","SAMINOT2",628,0)
 ; #Other followup
"RTN","SAMINOT2",629,0)
 n zfu,ofu,tofu,comma
"RTN","SAMINOT2",630,0)
 n vals s vals=ctroot
"RTN","SAMINOT2",631,0)
 s comma=0,tofu=""
"RTN","SAMINOT2",632,0)
 s ofu=""
"RTN","SAMINOT2",633,0)
 f zfu="cefuaf","cefucc","cefupe","cefufn","cefubr","cefupc","cefutb" d  ;
"RTN","SAMINOT2",634,0)
 . i $$XVAL(zfu,vals)="y" s ofu=ofu_zfu
"RTN","SAMINOT2",635,0)
 i $$XVAL("cefuo",vals)'="" s ofu=ofu_"cefuo"
"RTN","SAMINOT2",636,0)
 i ofu'="" d  ;
"RTN","SAMINOT2",637,0)
 . s tofu="Other followup: "
"RTN","SAMINOT2",638,0)
 . i ofu["cefuaf" s tofu=tofu_"Antibiotics" s comma=1
"RTN","SAMINOT2",639,0)
 . i ofu["cefucc" s tofu=tofu_$s(comma:", ",1:"")_"Diagnostic CT" s comma=1
"RTN","SAMINOT2",640,0)
 . i ofu["cefupe" s tofu=tofu_$s(comma:", ",1:"")_"PET" s comma=1
"RTN","SAMINOT2",641,0)
 . i ofu["cefufn" s tofu=tofu_$s(comma:", ",1:"")_"Percutaneous biopsy" s comma=1
"RTN","SAMINOT2",642,0)
 . i ofu["cefubr" s tofu=tofu_$s(comma:", ",1:"")_"Bronchoscopy" s comma=1
"RTN","SAMINOT2",643,0)
 . i ofu["cefupc" s tofu=tofu_$s(comma:", ",1:"")_"Pulmonary consultation" s comma=1
"RTN","SAMINOT2",644,0)
 . i ofu["cefutb" s tofu=tofu_$s(comma:", ",1:"")_"Refer to tumor board" s comma=1
"RTN","SAMINOT2",645,0)
 . i ofu["cefuo" s tofu=tofu_$s(comma:", ",1:"")_"Other:" s comma=1
"RTN","SAMINOT2",646,0)
 s @ARY@("followup")=futext_" "_fudate
"RTN","SAMINOT2",647,0)
 s @ARY@("followup2")=tofu
"RTN","SAMINOT2",648,0)
 s @ARY@("followup3")=$$XVAL("cefuoo",vals)
"RTN","SAMINOT2",649,0)
 ;
"RTN","SAMINOT2",650,0)
 quit  ; end of CTINFO
"RTN","SAMINOT2",651,0)
 ;
"RTN","SAMINOT2",652,0)
 ;
"RTN","SAMINOT2",653,0)
 ; 
"RTN","SAMINOT2",654,0)
IMPRESS(ARY,SID) ; impressions from ct eval report
"RTN","SAMINOT2",655,0)
 ;
"RTN","SAMINOT2",656,0)
 ;ven/gpl;private;procedure;
"RTN","SAMINOT2",657,0)
 ;@input
"RTN","SAMINOT2",658,0)
 ; ARY = name of output array
"RTN","SAMINOT2",659,0)
 ; SID
"RTN","SAMINOT2",660,0)
 ;@output
"RTN","SAMINOT2",661,0)
 ; @ARY = impressions from ct eval report [passed by name]
"RTN","SAMINOT2",662,0)
 ;
"RTN","SAMINOT2",663,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT2",664,0)
 n ctkey s ctkey=$g(@ARY@("ctform"))
"RTN","SAMINOT2",665,0)
 n vals s vals=$na(@root@("graph",SID,ctkey))
"RTN","SAMINOT2",666,0)
 n dict s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMINOT2",667,0)
 s dict=$na(@dict@("cteval-dict"))
"RTN","SAMINOT2",668,0)
 n para s para=""
"RTN","SAMINOT2",669,0)
 n sp1 s sp1="    "
"RTN","SAMINOT2",670,0)
 ; 
"RTN","SAMINOT2",671,0)
 d OUT("Impression:")
"RTN","SAMINOT2",672,0)
 d OUT(sp1_$$XSUB("ceimn",vals,dict)_para)
"RTN","SAMINOT2",673,0)
 ;
"RTN","SAMINOT2",674,0)
 ;# Report CAC Score and Extent of Emphysema
"RTN","SAMINOT2",675,0)
 s cacval=0
"RTN","SAMINOT2",676,0)
 d  ;if $$XVAL("ceccv",vals)'="e" d  ;
"RTN","SAMINOT2",677,0)
 . set vcac=$$XVAL("cecccac",vals)
"RTN","SAMINOT2",678,0)
 . if vcac'="" d  ;
"RTN","SAMINOT2",679,0)
 . . s cacrec=""
"RTN","SAMINOT2",680,0)
 . . s cac="The Visual Coronary Artery Calcium (CAC) Score is "_vcac_". "
"RTN","SAMINOT2",681,0)
 . . s cacval=vcac
"RTN","SAMINOT2",682,0)
 . . i cacval>3 s cacrec=$g(@dict@("CAC_recommendation"))_para
"RTN","SAMINOT2",683,0)
 ;
"RTN","SAMINOT2",684,0)
 i cacval>0 d  ;
"RTN","SAMINOT2",685,0)
 . d OUT(sp1_cac_" "_cacrec_" "_para)
"RTN","SAMINOT2",686,0)
 . d  ;if $$XVAL("ceemv",vals)="e" d  ;
"RTN","SAMINOT2",687,0)
 . . if $$XVAL("ceem",vals)'="no" d  ;
"RTN","SAMINOT2",688,0)
 . . . if $$XVAL("ceem",vals)="nv" q  ;
"RTN","SAMINOT2",689,0)
 . . . d OUT(sp1_"Emphysema: "_$$XSUB("ceem",vals,dict)_"."_para)
"RTN","SAMINOT2",690,0)
 ;
"RTN","SAMINOT2",691,0)
 i $$XVAL("ceclini",vals)="y" d  ;
"RTN","SAMINOT2",692,0)
 . d OUT(sp1_$$XVAL("ceclin",vals)_"."_para)
"RTN","SAMINOT2",693,0)
 ;
"RTN","SAMINOT2",694,0)
 i $$XVAL("ceoppai",vals)="y" d  ;
"RTN","SAMINOT2",695,0)
 . d OUT(sp1_$$XVAL("ceoppa",vals)_"."_para)
"RTN","SAMINOT2",696,0)
 ;
"RTN","SAMINOT2",697,0)
 i $$XVAL("ceoppabi",vals)="y" d  ;
"RTN","SAMINOT2",698,0)
 . d OUT(sp1_$$XVAL("ceoppab",vals)_"."_para)
"RTN","SAMINOT2",699,0)
 ;
"RTN","SAMINOT2",700,0)
 i $$XVAL("cecommcai",vals)="y" d  ;
"RTN","SAMINOT2",701,0)
 . d OUT(sp1_$$XVAL("cecommca",vals)_"."_para)
"RTN","SAMINOT2",702,0)
 ;
"RTN","SAMINOT2",703,0)
 i $$XVAL("ceotabnmi",vals)="y" d  ;
"RTN","SAMINOT2",704,0)
 . d OUT(sp1_$$XVAL("ceotabnm",vals)_"."_para)
"RTN","SAMINOT2",705,0)
 ;
"RTN","SAMINOT2",706,0)
 i $$XVAL("ceobrci",vals)="y" d  ;
"RTN","SAMINOT2",707,0)
 . d OUT(sp1_$$XVAL("ceobrc",vals)_"."_para)
"RTN","SAMINOT2",708,0)
 ;
"RTN","SAMINOT2",709,0)
 i $$XVAL("ceaoabbi",vals)="y" d  ;
"RTN","SAMINOT2",710,0)
 . d OUT(sp1_$$XVAL("ceaoabb",vals)_"."_para)
"RTN","SAMINOT2",711,0)
 ;
"RTN","SAMINOT2",712,0)
 i $$XVAL("ceaoabi",vals)="y" d  ;
"RTN","SAMINOT2",713,0)
 . d OUT(sp1_$$XVAL("ceaoab",vals)_"."_para)
"RTN","SAMINOT2",714,0)
 ;
"RTN","SAMINOT2",715,0)
 ;# Impression Remarks
"RTN","SAMINOT2",716,0)
 i $$XVAL("ceimre",vals)'="" d  ;
"RTN","SAMINOT2",717,0)
 . d OUT(sp1_$$XVAL("ceimre",vals)_"."_para)
"RTN","SAMINOT2",718,0)
 ;
"RTN","SAMINOT2",719,0)
 quit  ; end of IMPRESS
"RTN","SAMINOT2",720,0)
 ;
"RTN","SAMINOT2",721,0)
 ;
"RTN","SAMINOT2",722,0)
 ;
"RTN","SAMINOT2",723,0)
XSUB(var,vals,dict,valdx) ; dictionary value for variable
"RTN","SAMINOT2",724,0)
 ;
"RTN","SAMINOT2",725,0)
 ;ven/gpl;private;function;
"RTN","SAMINOT2",726,0)
 ;@input
"RTN","SAMINOT2",727,0)
 ; var = name of dictionary value
"RTN","SAMINOT2",728,0)
 ; vals = name of variables array
"RTN","SAMINOT2",729,0)
 ; @vals = variables array [passed by name]
"RTN","SAMINOT2",730,0)
 ; dict = name of dictionary array
"RTN","SAMINOT2",731,0)
 ; @dict = dictionary array [passed by name]
"RTN","SAMINOT2",732,0)
 ; valdx = used for nodules ala cect2co with nodule # included
"RTN","SAMINOT2",733,0)
 ;@output = dictionary value for variable
"RTN","SAMINOT2",734,0)
 ;
"RTN","SAMINOT2",735,0)
 ; new dict set dict=$$setroot^%wd("cteval-dict")
"RTN","SAMINOT2",736,0)
 ;
"RTN","SAMINOT2",737,0)
 n zr,zv,zdx
"RTN","SAMINOT2",738,0)
 s zdx=$g(valdx)
"RTN","SAMINOT2",739,0)
 i zdx="" s zdx=var
"RTN","SAMINOT2",740,0)
 s zv=$g(@vals@(zdx))
"RTN","SAMINOT2",741,0)
 ;i zv="" s zr="["_var_"]" q zr
"RTN","SAMINOT2",742,0)
 i zv="" s zr="" q zr
"RTN","SAMINOT2",743,0)
 s zr=$g(@dict@(var,zv))
"RTN","SAMINOT2",744,0)
 ;i zr="" s zr="["_var_","_zv_"]"
"RTN","SAMINOT2",745,0)
 ;
"RTN","SAMINOT2",746,0)
 quit zr ; end of $$XSUB
"RTN","SAMINOT2",747,0)
 ;
"RTN","SAMINOT2",748,0)
 ;
"RTN","SAMINOT2",749,0)
 ;
"RTN","SAMINOT2",750,0)
EOR ; end of routine SAMINOT2
"RTN","SAMINOT3")
0^44^B48541042
"RTN","SAMINOT3",1,0)
SAMINOT3 ;ven/gpl - CTeval report plain text ; 5/7/19 4:48pm
"RTN","SAMINOT3",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMINOT3",3,0)
 ;
"RTN","SAMINOT3",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMINOT3",5,0)
 ;
"RTN","SAMINOT3",6,0)
 quit  ; no entry from top
"RTN","SAMINOT3",7,0)
 ;
"RTN","SAMINOT3",8,0)
WSNOTE(return,filter) ; web service which returns a text note
"RTN","SAMINOT3",9,0)
 ;
"RTN","SAMINOT3",10,0)
 n debug s debug=0
"RTN","SAMINOT3",11,0)
 i $g(filter("debug"))=1 s debug=1
"RTN","SAMINOT3",12,0)
 ;
"RTN","SAMINOT3",13,0)
 k return
"RTN","SAMINOT3",14,0)
 s HTTPRSP("mime")="text/html"
"RTN","SAMINOT3",15,0)
 ;
"RTN","SAMINOT3",16,0)
 n si
"RTN","SAMINOT3",17,0)
 s si=$g(filter("studyid"))
"RTN","SAMINOT3",18,0)
 i si="" d  ;
"RTN","SAMINOT3",19,0)
 . s si="XXX00333"
"RTN","SAMINOT3",20,0)
 q:si=""
"RTN","SAMINOT3",21,0)
 ;
"RTN","SAMINOT3",22,0)
 n samikey
"RTN","SAMINOT3",23,0)
 s samikey=$g(filter("form"))
"RTN","SAMINOT3",24,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT3",25,0)
 ;
"RTN","SAMINOT3",26,0)
 n vals
"RTN","SAMINOT3",27,0)
 m vals=@root@("graph",si,samikey)
"RTN","SAMINOT3",28,0)
 ;
"RTN","SAMINOT3",29,0)
 n notebase
"RTN","SAMINOT3",30,0)
 d WSREPORT^SAMICTT0(.notebase,.filter)
"RTN","SAMINOT3",31,0)
 s note="notebase"
"RTN","SAMINOT3",32,0)
 i '$d(@note) q
"RTN","SAMINOT3",33,0)
 ;
"RTN","SAMINOT3",34,0)
 new temp,tout
"RTN","SAMINOT3",35,0)
 do GETTMPL^SAMICASE("temp","vapals:note")
"RTN","SAMINOT3",36,0)
 quit:'$data(temp)
"RTN","SAMINOT3",37,0)
 ;
"RTN","SAMINOT3",38,0)
 n cnt s cnt=0
"RTN","SAMINOT3",39,0)
 n zi s zi=""
"RTN","SAMINOT3",40,0)
 ;
"RTN","SAMINOT3",41,0)
 f  s zi=$o(temp(zi)) q:zi=""  d  ;
"RTN","SAMINOT3",42,0)
 . ;
"RTN","SAMINOT3",43,0)
 . n line s line=temp(zi)
"RTN","SAMINOT3",44,0)
 . D LOAD^SAMIFORM(.line,samikey,si,.filter,.vals)
"RTN","SAMINOT3",45,0)
 . s temp(zi)=line
"RTN","SAMINOT3",46,0)
 . ;
"RTN","SAMINOT3",47,0)
 . s cnt=cnt+1
"RTN","SAMINOT3",48,0)
 . s tout(cnt)=temp(zi)
"RTN","SAMINOT3",49,0)
 . ;
"RTN","SAMINOT3",50,0)
 . i temp(zi)["report-text" d  ;
"RTN","SAMINOT3",51,0)
 . . i temp(zi)["#" q  ;
"RTN","SAMINOT3",52,0)
 . . n zj s zj=""
"RTN","SAMINOT3",53,0)
 . . f  s zj=$o(@note@(zj)) q:zj=""  d  ;
"RTN","SAMINOT3",54,0)
 . . . s cnt=cnt+1
"RTN","SAMINOT3",55,0)
 . . . ;s tout(cnt)=@note@(zj)_"<br>"
"RTN","SAMINOT3",56,0)
 . . . s tout(cnt)=@note@(zj)_$char(13,10)
"RTN","SAMINOT3",57,0)
 m return=tout
"RTN","SAMINOT3",58,0)
 q
"RTN","SAMINOT3",59,0)
 ;
"RTN","SAMINOT3",60,0)
NOTE(filter) ; extrnisic which creates a note
"RTN","SAMINOT3",61,0)
 ; returns 1 if successful, 0 if not
"RTN","SAMINOT3",62,0)
 ;
"RTN","SAMINOT3",63,0)
 ;
"RTN","SAMINOT3",64,0)
 k ^gpl("funote")
"RTN","SAMINOT3",65,0)
 m ^gpl("funote")=filter
"RTN","SAMINOT3",66,0)
 ;q 0  ; while we are developing
"RTN","SAMINOT3",67,0)
 ;
"RTN","SAMINOT3",68,0)
 ; set up patient values
"RTN","SAMINOT3",69,0)
 ;
"RTN","SAMINOT3",70,0)
 n vals
"RTN","SAMINOT3",71,0)
 ;
"RTN","SAMINOT3",72,0)
 n si
"RTN","SAMINOT3",73,0)
 s si=$g(filter("studyid"))
"RTN","SAMINOT3",74,0)
 q:si="" 0
"RTN","SAMINOT3",75,0)
 ;
"RTN","SAMINOT3",76,0)
 n samikey
"RTN","SAMINOT3",77,0)
 s samikey=$g(filter("form"))
"RTN","SAMINOT3",78,0)
 q:samikey="" 0
"RTN","SAMINOT3",79,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT3",80,0)
 ;
"RTN","SAMINOT3",81,0)
 s vals=$na(@root@("graph",si,samikey))
"RTN","SAMINOT3",82,0)
 ;
"RTN","SAMINOT3",83,0)
 i '$d(@vals) d  q 0 ;
"RTN","SAMINOT3",84,0)
 . ;w !,"error, patient values not found"
"RTN","SAMINOT3",85,0)
 ;zwr @vals@(*)
"RTN","SAMINOT3",86,0)
 ;
"RTN","SAMINOT3",87,0)
 k ^SAMIUL("NOTE")
"RTN","SAMINOT3",88,0)
 m ^SAMIUL("NOTE","vals")=@vals
"RTN","SAMINOT3",89,0)
 m ^SAMIUL("NOTE","filter")=filter
"RTN","SAMINOT3",90,0)
 ;
"RTN","SAMINOT3",91,0)
 n didnote s didnote=0
"RTN","SAMINOT3",92,0)
 ;
"RTN","SAMINOT3",93,0)
 i $d(@vals@("notes")) d  q didnote ;
"RTN","SAMINOT3",94,0)
 . s filter("errorMessage")="Note already exists for this form."
"RTN","SAMINOT3",95,0)
 ;
"RTN","SAMINOT3",96,0)
 i $g(@vals@("futype"))="other" d  ;
"RTN","SAMINOT3",97,0)
 . i $g(@vals@("samistatus"))'="complete" q  ;
"RTN","SAMINOT3",98,0)
 . ;q:$$HASVCNT(vals)
"RTN","SAMINOT3",99,0)
 . d MKVC(si,samikey,vals,.filter) ;
"RTN","SAMINOT3",100,0)
 . s didnote=1
"RTN","SAMINOT3",101,0)
 ;
"RTN","SAMINOT3",102,0)
 i $g(@vals@("futype"))="ct" d  ;
"RTN","SAMINOT3",103,0)
 . i $g(@vals@("samistatus"))'="complete" q  ;
"RTN","SAMINOT3",104,0)
 . ;q:$$HASLCSNT(vals)
"RTN","SAMINOT3",105,0)
 . d MKLCS(si,samikey,vals,.filter) ;
"RTN","SAMINOT3",106,0)
 . s didnote=1
"RTN","SAMINOT3",107,0)
 ;
"RTN","SAMINOT3",108,0)
 ;i $g(@vals@("samistatus"))="complete" d  ;
"RTN","SAMINOT3",109,0)
 ;. q:$$HASVCNT(vals)
"RTN","SAMINOT3",110,0)
 ;. d MKVC(si,samikey,vals,.filter) ;
"RTN","SAMINOT3",111,0)
 ;. s didnote=1
"RTN","SAMINOT3",112,0)
 ;
"RTN","SAMINOT3",113,0)
 q didnote
"RTN","SAMINOT3",114,0)
 ;
"RTN","SAMINOT3",115,0)
HASINNT(vals) ; extrinsic returns 1 if intake note is present
"RTN","SAMINOT3",116,0)
 ; else returns 0
"RTN","SAMINOT3",117,0)
 n zzi,zzrtn s (zzi,zzrtn)=0
"RTN","SAMINOT3",118,0)
 q:'$d(@vals)
"RTN","SAMINOT3",119,0)
 f  s zzi=$o(@vals@("notes",zzi)) q:+zzi=0  d  ;
"RTN","SAMINOT3",120,0)
 . i $g(@vals@("notes",zzi,"name"))["Intake" s zzrtn=1
"RTN","SAMINOT3",121,0)
 q zzrtn
"RTN","SAMINOT3",122,0)
 ;
"RTN","SAMINOT3",123,0)
HASVCNT(vals) ; extrinsic returns 1 if communication note is present
"RTN","SAMINOT3",124,0)
 ; else returns 0
"RTN","SAMINOT3",125,0)
 n zzi,zzrtn s (zzi,zzrtn)=0
"RTN","SAMINOT3",126,0)
 q:'$d(@vals)
"RTN","SAMINOT3",127,0)
 f  s zzi=$o(@vals@("notes",zzi)) q:+zzi=0  d  ;
"RTN","SAMINOT3",128,0)
 . i $g(@vals@("notes",zzi,"name"))["Communication" s zzrtn=1
"RTN","SAMINOT3",129,0)
 q zzrtn
"RTN","SAMINOT3",130,0)
 ;
"RTN","SAMINOT3",131,0)
HASLCSNT(vals) ; extrinsic returns 1 if communication note is present
"RTN","SAMINOT3",132,0)
 ; else returns 0
"RTN","SAMINOT3",133,0)
 n zzi,zzrtn s (zzi,zzrtn)=0
"RTN","SAMINOT3",134,0)
 q:'$d(@vals)
"RTN","SAMINOT3",135,0)
 f  s zzi=$o(@vals@("notes",zzi)) q:+zzi=0  d  ;
"RTN","SAMINOT3",136,0)
 . i $g(@vals@("notes",zzi,"name"))["Lung" s zzrtn=1
"RTN","SAMINOT3",137,0)
 q zzrtn
"RTN","SAMINOT3",138,0)
 ;
"RTN","SAMINOT3",139,0)
MKVC(sid,form,vals,filter) ;
"RTN","SAMINOT3",140,0)
 n cnt s cnt=0
"RTN","SAMINOT3",141,0)
 ;n dest s dest=$na(@vals@("communication-note"))
"RTN","SAMINOT3",142,0)
 n dest s dest=$$MKNT(vals,"Communication Note","communication",.filter)
"RTN","SAMINOT3",143,0)
 k @dest
"RTN","SAMINOT3",144,0)
 d OUT("Veteran Communication Note")
"RTN","SAMINOT3",145,0)
 d OUT("")
"RTN","SAMINOT3",146,0)
 d VCNOTE(vals,dest,cnt)
"RTN","SAMINOT3",147,0)
 q
"RTN","SAMINOT3",148,0)
 ;
"RTN","SAMINOT3",149,0)
MKLCS(sid,form,vals,filter) ;
"RTN","SAMINOT3",150,0)
 n cnt s cnt=0
"RTN","SAMINOT3",151,0)
 ;n dest s dest=$na(@vals@("lcs-note"))
"RTN","SAMINOT3",152,0)
 n dest s dest=$$MKNT(vals,"Lung Cancer Screening Note","lcs",.filter)
"RTN","SAMINOT3",153,0)
 k @dest
"RTN","SAMINOT3",154,0)
 d OUT("Lung Screening and Surveillance Follow up Note")
"RTN","SAMINOT3",155,0)
 d OUT("")
"RTN","SAMINOT3",156,0)
 d LCSNOTE(vals,dest,cnt)
"RTN","SAMINOT3",157,0)
 q
"RTN","SAMINOT3",158,0)
 ;
"RTN","SAMINOT3",159,0)
MKNT(vals,title,ntype,filter) ; extrinsic makes a note date=now returns 
"RTN","SAMINOT3",160,0)
 ; global addr. filter must be passed by reference
"RTN","SAMINOT3",161,0)
 n ntdt s ntdt=$$NTDTTM($$NOW^XLFDT)
"RTN","SAMINOT3",162,0)
 n ntptr
"RTN","SAMINOT3",163,0)
 s ntptr=$$MKNTLOC(vals,title,ntdt,$g(ntype),.filter)
"RTN","SAMINOT3",164,0)
 q ntptr
"RTN","SAMINOT3",165,0)
 ;
"RTN","SAMINOT3",166,0)
MKNTLOC(vals,title,ndate,ntype,filter) ; extrinsic returns the 
"RTN","SAMINOT3",167,0)
 ;location for the note
"RTN","SAMINOT3",168,0)
 n nien
"RTN","SAMINOT3",169,0)
 s nien=$o(@vals@("notes",""),-1)+1
"RTN","SAMINOT3",170,0)
 s filter("nien")=nien
"RTN","SAMINOT3",171,0)
 n nloc s nloc=$na(@vals@("notes",nien))
"RTN","SAMINOT3",172,0)
 s @nloc@("name")=title_" "_$g(ndate)
"RTN","SAMINOT3",173,0)
 s @nloc@("date")=$g(ndate)
"RTN","SAMINOT3",174,0)
 s @nloc@("type")=$g(ntype)
"RTN","SAMINOT3",175,0)
 q $na(@nloc@("text"))
"RTN","SAMINOT3",176,0)
 ;
"RTN","SAMINOT3",177,0)
NTDTTM(ZFMDT) ; extrinsic returns the date and time in Note format
"RTN","SAMINOT3",178,0)
 ; ZFMDT is the fileman date/time to translate
"RTN","SAMINOT3",179,0)
 q $$FMTE^XLFDT(ZFMDT,"5")
"RTN","SAMINOT3",180,0)
 ;
"RTN","SAMINOT3",181,0)
NTLOCN(sid,form,nien) ; extrinsic returns the location of the Nth note
"RTN","SAMINOT3",182,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT3",183,0)
 q $na(@root@("graph",sid,form,"notes",nien))
"RTN","SAMINOT3",184,0)
 ;
"RTN","SAMINOT3",185,0)
NTLAST(sid,form,ntype) ; extrinsic returns the location of the latest note
"RTN","SAMINOT3",186,0)
 ; of the type ntype
"RTN","SAMINOT3",187,0)
 q
"RTN","SAMINOT3",188,0)
 ;
"RTN","SAMINOT3",189,0)
NTLIST(nlist,sid,form) ; returns the note list in nlist, passed by ref
"RTN","SAMINOT3",190,0)
 ;
"RTN","SAMINOT3",191,0)
 n zn,root,gn
"RTN","SAMINOT3",192,0)
 s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT3",193,0)
 s zn=0
"RTN","SAMINOT3",194,0)
 s gn=$na(@root@("graph",sid,form,"notes"))
"RTN","SAMINOT3",195,0)
 q:'$d(@gn)
"RTN","SAMINOT3",196,0)
 f  s zn=$o(@gn@(zn)) q:+zn=0  d  ;
"RTN","SAMINOT3",197,0)
 . s @nlist@(zn,"name")=@gn@(zn,"name")
"RTN","SAMINOT3",198,0)
 . s @nlist@(zn,"nien")=zn
"RTN","SAMINOT3",199,0)
 ;
"RTN","SAMINOT3",200,0)
 q
"RTN","SAMINOT3",201,0)
 ;
"RTN","SAMINOT3",202,0)
TLST ;
"RTN","SAMINOT3",203,0)
 S SID="XXX00677"
"RTN","SAMINOT3",204,0)
 S FORM="siform-2019-04-23"
"RTN","SAMINOT3",205,0)
 D NTLIST("G",SID,FORM)
"RTN","SAMINOT3",206,0)
 ;ZWR G
"RTN","SAMINOT3",207,0)
 Q
"RTN","SAMINOT3",208,0)
 ;
"RTN","SAMINOT3",209,0)
VCNOTE(vals,dest,cnt) ; Veteran Communication Note
"RTN","SAMINOT3",210,0)
 ;d OUT("")
"RTN","SAMINOT3",211,0)
 d OUT("Veteran was contacted via:")
"RTN","SAMINOT3",212,0)
 n sp1 s sp1="    "
"RTN","SAMINOT3",213,0)
 d:$$XVAL("fucmotip",vals) OUT(sp1_"In person")
"RTN","SAMINOT3",214,0)
 d:$$XVAL("fucmotte",vals) OUT(sp1_"Telephone")
"RTN","SAMINOT3",215,0)
 d:$$XVAL("fucmotth",vals) OUT(sp1_"TeleHealth")
"RTN","SAMINOT3",216,0)
 d:$$XVAL("fucmotml",vals) OUT(sp1_"Mailed Letter")
"RTN","SAMINOT3",217,0)
 d:$$XVAL("fucmotpp",vals) OUT(sp1_"Message in patient portal")
"RTN","SAMINOT3",218,0)
 d:$$XVAL("fucmotvd",vals) OUT(sp1_"Video-on-demand (VOD)")
"RTN","SAMINOT3",219,0)
 d:$$XVAL("fucmotot",vals) OUT(sp1_"Other: "_$$XVAL("fucmotoo",vals))
"RTN","SAMINOT3",220,0)
 d OUT("")
"RTN","SAMINOT3",221,0)
 ;
"RTN","SAMINOT3",222,0)
 d:$$XVAL("fucmotde",vals)'=""
"RTN","SAMINOT3",223,0)
 . d OUT("Communication details:")
"RTN","SAMINOT3",224,0)
 . d OUT(sp1_$$XVAL("fucmotde",vals))
"RTN","SAMINOT3",225,0)
 ;
"RTN","SAMINOT3",226,0)
 d SSTATUS(vals) ; insert smoking status section
"RTN","SAMINOT3",227,0)
 q
"RTN","SAMINOT3",228,0)
 ;
"RTN","SAMINOT3",229,0)
SSTATUS(vals)
"RTN","SAMINOT3",230,0)
 n sstat s sstat=""
"RTN","SAMINOT3",231,0)
 i $$XVAL("sisa",vals)="y" d  ; 
"RTN","SAMINOT3",232,0)
 . s sstat="Current"
"RTN","SAMINOT3",233,0)
 . d OUT("Smoking status: "_sstat)
"RTN","SAMINOT3",234,0)
 . d OUT(sp1_"Current cigarette smoker (patient advised that active tobacco use")
"RTN","SAMINOT3",235,0)
 . d OUT(sp1_"increases risk of future lung cancer, heart disease and stroke,")
"RTN","SAMINOT3",236,0)
 . d OUT(sp1_"advised stability now does not guarantee will not develop future")
"RTN","SAMINOT3",237,0)
 . d OUT(sp1_"lung cancer or risks of premature death from tobacco related heart")
"RTN","SAMINOT3",238,0)
 . d OUT(sp1_"disease and stroke)")
"RTN","SAMINOT3",239,0)
 i $$XVAL("sisa",vals)="n" d  ;
"RTN","SAMINOT3",240,0)
 . s sstat="Former"
"RTN","SAMINOT3",241,0)
 . d OUT("Smoking status: "_sstat)
"RTN","SAMINOT3",242,0)
 . n qdate s qdate=""
"RTN","SAMINOT3",243,0)
 . s qdate=$$XVAL("siq",vals)
"RTN","SAMINOT3",244,0)
 . i qdate'="" d OUT(sp1_"Former cigarette smoker. Quit date: "_qdate)
"RTN","SAMINOT3",245,0)
 . e  d OUT(sp1_"Former cigarette smoker.")
"RTN","SAMINOT3",246,0)
 i $$XVAL("sisa",vals)="o" d  ;
"RTN","SAMINOT3",247,0)
 . s sstat="Never"
"RTN","SAMINOT3",248,0)
 . d OUT("Smoking status: "_sstat)
"RTN","SAMINOT3",249,0)
 . d OUT(sp1_"Never cigarette smoker")
"RTN","SAMINOT3",250,0)
 ;
"RTN","SAMINOT3",251,0)
 n cumary
"RTN","SAMINOT3",252,0)
 d CUMPY^SAMIUR2("cumary",sid,form)
"RTN","SAMINOT3",253,0)
 k ^gpl("funote","cumary")
"RTN","SAMINOT3",254,0)
 m ^gpl("funote","cumary")=cumary
"RTN","SAMINOT3",255,0)
 n cur s cur=$g(cumary("current"))
"RTN","SAMINOT3",256,0)
 n newcum s newcum=$g(cumary("rpt",cur,4)) ; new cumulative pack years
"RTN","SAMINOT3",257,0)
 ;
"RTN","SAMINOT3",258,0)
 i $$XVAL("sisa",vals)="y" d  ;  
"RTN","SAMINOT3",259,0)
 . d OUT("Smoking history (since last visit):")
"RTN","SAMINOT3",260,0)
 . d OUT(sp1_"Cigarettes/day: "_$$XVAL("sicpd",vals))
"RTN","SAMINOT3",261,0)
 . d OUT(sp1_"PPD: "_$$XVAL("sippd",vals))
"RTN","SAMINOT3",262,0)
 . d OUT(sp1_"Current cumulative pack years: "_newcum)
"RTN","SAMINOT3",263,0)
 i $$XVAL("sisa",vals)'="y" d  ;  
"RTN","SAMINOT3",264,0)
 . d OUT("Smoking History") 
"RTN","SAMINOT3",265,0)
 n zi
"RTN","SAMINOT3",266,0)
 f zi=1:1:cur d  ;
"RTN","SAMINOT3",267,0)
 . d OUT(sp1_cumary("rpt",zi,1)_" "_cumary("rpt",zi,2))
"RTN","SAMINOT3",268,0)
 . d OUT(sp1_sp1_"Pack Years: "_cumary("rpt",zi,3))
"RTN","SAMINOT3",269,0)
 . d OUT(sp1_sp1_"Cumulative: "_cumary("rpt",zi,4))
"RTN","SAMINOT3",270,0)
 ;
"RTN","SAMINOT3",271,0)
 n tried s tried=$$XVAL("sittq",vals)
"RTN","SAMINOT3",272,0)
 n ptried s ptried=$s(tried="y":"Yes",tried="n":"No",tried="o":"Not applicable",1:"")
"RTN","SAMINOT3",273,0)
 i ptried'="" d OUT("Since your prior CT scan have you ever tried to quit smoking? "_ptried)
"RTN","SAMINOT3",274,0)
 ;
"RTN","SAMINOT3",275,0)
 n tryary,cnt
"RTN","SAMINOT3",276,0)
 s cnt=0
"RTN","SAMINOT3",277,0)
 i $$XVAL("sisca",vals)'="" s cnt=cnt+1 s tryary(cnt)="Have not tried to quit"
"RTN","SAMINOT3",278,0)
 i $$XVAL("siscb",vals)'="" s cnt=cnt+1 s tryary(cnt)="""Cold Turkey"" by completely stopping on your own with no other assistance"
"RTN","SAMINOT3",279,0)
 i $$XVAL("siscc",vals)'="" s cnt=cnt+1 s tryary(cnt)="Tapering or reducing number of cigarettes smoked per day"
"RTN","SAMINOT3",280,0)
 i $$XVAL("siscd",vals)'="" s cnt=cnt+1 s tryary(cnt)="Self-help material (e.g., brochure, cessation website)"
"RTN","SAMINOT3",281,0)
 i $$XVAL("sisce",vals)'="" s cnt=cnt+1 s tryary(cnt)="Individual consultation or cessation counseling"
"RTN","SAMINOT3",282,0)
 i $$XVAL("siscf",vals)'="" s cnt=cnt+1 s tryary(cnt)="Telephone cessation counseling hotline (e.g., 1-855-QUIT-VET, 1-800-QUIT-NOW)"
"RTN","SAMINOT3",283,0)
 i $$XVAL("siscg",vals)'="" s cnt=cnt+1 s tryary(cnt)="Peer support (e.g., Nicotine Anonymous)"
"RTN","SAMINOT3",284,0)
 i $$XVAL("sisch",vals)'="" s cnt=cnt+1 s tryary(cnt)="Nicotine replacement therapy (e.g., patch, gum, inhaler, nasal spray, lozenge)"
"RTN","SAMINOT3",285,0)
 i $$XVAL("sisci",vals)'="" s cnt=cnt+1 s tryary(cnt)="Zyban"
"RTN","SAMINOT3",286,0)
 i $$XVAL("siscj",vals)'="" s cnt=cnt+1 s tryary(cnt)="Hypnosis"
"RTN","SAMINOT3",287,0)
 i $$XVAL("sisck",vals)'="" s cnt=cnt+1 s tryary(cnt)="Acupuncture / acupressure"
"RTN","SAMINOT3",288,0)
 n tryot s tryot=""
"RTN","SAMINOT3",289,0)
 i $$XVAL("siscl",vals)'="" d  ;
"RTN","SAMINOT3",290,0)
 . s cnt=cnt+1 s tryary(cnt)="Other (specify)"
"RTN","SAMINOT3",291,0)
 . s tryot=$$XVAL("siscos",vals)
"RTN","SAMINOT3",292,0)
 ;
"RTN","SAMINOT3",293,0)
 i cnt>0 d  ;
"RTN","SAMINOT3",294,0)
 .  i ptried="" d OUT("Since your prior CT scan have you ever tried to quit smoking? ")
"RTN","SAMINOT3",295,0)
 . n zi s zi=""
"RTN","SAMINOT3",296,0)
 . f  s zi=$o(tryary(zi)) q:zi=""  d  ;
"RTN","SAMINOT3",297,0)
 . . d OUT(sp1_tryary(zi))
"RTN","SAMINOT3",298,0)
 . i tryot'="" d OUT(sp1_sp1_tryot)
"RTN","SAMINOT3",299,0)
 ;
"RTN","SAMINOT3",300,0)
 n cess,cess2 s cess="" s cess2=""
"RTN","SAMINOT3",301,0)
 i $$XVAL("siscmd",vals)="d" s cess="Declined"
"RTN","SAMINOT3",302,0)
 i $$XVAL("siscmd",vals)="a" s cess="Advised to quit smoking; VA resources provided"
"RTN","SAMINOT3",303,0)
 i $$XVAL("siscmd",vals)="i" d  ;
"RTN","SAMINOT3",304,0)
 . s cess="Interested in VA tobacco cessation medication. Encouraged Veteran"
"RTN","SAMINOT3",305,0)
 . s cess2="to talk to provider or pharmacist about which medication option is best for you."
"RTN","SAMINOT3",306,0)
 i cess'="" d  ;
"RTN","SAMINOT3",307,0)
 . d OUT("Tobacco cessation provided:")
"RTN","SAMINOT3",308,0)
 . d OUT(sp1_cess)
"RTN","SAMINOT3",309,0)
 . i cess2'="" d OUT(sp1_cess2)
"RTN","SAMINOT3",310,0)
 q
"RTN","SAMINOT3",311,0)
 ;
"RTN","SAMINOT3",312,0)
LCSNOTE(vals,dest,cnt) ; Lung Screening Note
"RTN","SAMINOT3",313,0)
 ;d OUT("")
"RTN","SAMINOT3",314,0)
 n sp1 s sp1="    "
"RTN","SAMINOT3",315,0)
 d OUT("Initial LDCT/Baseline: "_$$XVAL("sidoe",vals))
"RTN","SAMINOT3",316,0)
 d OUT("Date of most recent CT/LDCT: "_$$XVAL("fulctdt",vals))
"RTN","SAMINOT3",317,0)
 d OUT(sp1_"Notification of Results: "_$$XVAL("sidof",vals))
"RTN","SAMINOT3",318,0)
 n addcmt s addcmt=$$XVAL("fucmctde",vals)
"RTN","SAMINOT3",319,0)
 i addcmt'="" d  ;
"RTN","SAMINOT3",320,0)
 . d OUT("Additional comments:")
"RTN","SAMINOT3",321,0)
 . d OUT(sp1_addcmt)
"RTN","SAMINOT3",322,0)
 n impress s impress=""
"RTN","SAMINOT3",323,0)
 n ctary
"RTN","SAMINOT3",324,0)
 d CTINFO("ctary",sid,form)
"RTN","SAMINOT3",325,0)
 s impress=$g(ctary("impression"))
"RTN","SAMINOT3",326,0)
 ; get impression from lastest CT Eval here
"RTN","SAMINOT3",327,0)
 d IMPRESS("ctary",sid)
"RTN","SAMINOT3",328,0)
 ;i impress'="" d  ;
"RTN","SAMINOT3",329,0)
 ;. d OUT("Impression:")
"RTN","SAMINOT3",330,0)
 ;. d OUT(sp1_impress)
"RTN","SAMINOT3",331,0)
 ; smoking status follows
"RTN","SAMINOT3",332,0)
 d SSTATUS(vals)
"RTN","SAMINOT3",333,0)
 ;d OUT("Veteran was contacted via:")
"RTN","SAMINOT3",334,0)
 ;n sp1 s sp1="    "
"RTN","SAMINOT3",335,0)
 ;d:$$XVAL("fucmctip",vals) OUT(sp1_"In person")
"RTN","SAMINOT3",336,0)
 ;d:$$XVAL("fucmctte",vals) OUT(sp1_"Telephone")
"RTN","SAMINOT3",337,0)
 ;d:$$XVAL("fucmctth",vals) OUT(sp1_"TeleHealth")
"RTN","SAMINOT3",338,0)
 ;d:$$XVAL("fucmctml",vals) OUT(sp1_"Mailed Letter")
"RTN","SAMINOT3",339,0)
 ;d:$$XVAL("fucmctpp",vals) OUT(sp1_"Message in patient portal")
"RTN","SAMINOT3",340,0)
 ;d:$$XVAL("fucmctvd",vals) OUT(sp1_"Video-on-demand (VOD)")
"RTN","SAMINOT3",341,0)
 ;d:$$XVAL("fucmctot",vals) OUT(sp1_"Other: "_$$XVAL("fucmctoo",vals))
"RTN","SAMINOT3",342,0)
 ;d OUT("")
"RTN","SAMINOT3",343,0)
 ;
"RTN","SAMINOT3",344,0)
 ;d:$$XVAL("fucmctde",vals)'=""
"RTN","SAMINOT3",345,0)
 ;. d OUT("Communication details:")
"RTN","SAMINOT3",346,0)
 ;. d OUT(sp1_$$XVAL("fucmctde",vals))
"RTN","SAMINOT3",347,0)
 n recom s recom=""
"RTN","SAMINOT3",348,0)
 ; get recommendations from CT eval form here
"RTN","SAMINOT3",349,0)
 s recom=$g(ctary("followup"))
"RTN","SAMINOT3",350,0)
 i recom'="" d  ;
"RTN","SAMINOT3",351,0)
 . d OUT("Recommendations:")
"RTN","SAMINOT3",352,0)
 . d OUT(sp1_recom)
"RTN","SAMINOT3",353,0)
 . i $g(ctary("followup2"))'="" d  ;
"RTN","SAMINOT3",354,0)
 . . d OUT(sp1_ctary("followup2"))
"RTN","SAMINOT3",355,0)
 . i $g(ctary("followup3"))'="" d  ;
"RTN","SAMINOT3",356,0)
 . . d OUT(sp1_ctary("followup3"))
"RTN","SAMINOT3",357,0)
 n ordered s ordered=$$XVAL("funewct",vals)
"RTN","SAMINOT3",358,0)
 i ordered'="" d  ;
"RTN","SAMINOT3",359,0)
 . s ordered=$s(ordered="y":"Yes",ordered="n":"No",1:"")
"RTN","SAMINOT3",360,0)
 . d OUT("CT/LDCT ordered: "_ordered)
"RTN","SAMINOT3",361,0)
 n pulmon s pulmon=$$XVAL("fucompul",vals)
"RTN","SAMINOT3",362,0)
 i pulmon'="" d  ;
"RTN","SAMINOT3",363,0)
 . s pulmon=$s(pulmon="y":"Yes",pulmon="n":"No",1:"")
"RTN","SAMINOT3",364,0)
 . d OUT("Communicated to Pulmonary: "_pulmon)
"RTN","SAMINOT3",365,0)
 q
"RTN","SAMINOT3",366,0)
 ;
"RTN","SAMINOT3",367,0)
OUT(ln) ;
"RTN","SAMINOT3",368,0)
 s cnt=cnt+1
"RTN","SAMINOT3",369,0)
 n lnn
"RTN","SAMINOT3",370,0)
 ;s debug=1
"RTN","SAMINOT3",371,0)
 s lnn=$o(@dest@(" "),-1)+1
"RTN","SAMINOT3",372,0)
 s @dest@(lnn)=ln
"RTN","SAMINOT3",373,0)
 ;i $g(debug)=1 d  ;
"RTN","SAMINOT3",374,0)
 ;. i ln["<" q  ; no markup
"RTN","SAMINOT3",375,0)
 ;. n zs s zs=$STACK
"RTN","SAMINOT3",376,0)
 ;. n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMINOT3",377,0)
 ;. s @dest@(lnn)=zp_":"_ln
"RTN","SAMINOT3",378,0)
 q
"RTN","SAMINOT3",379,0)
 ;
"RTN","SAMINOT3",380,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMINOT3",381,0)
 ; vals is passed by name
"RTN","SAMINOT3",382,0)
 n zr
"RTN","SAMINOT3",383,0)
 s zr=$g(@vals@(var))
"RTN","SAMINOT3",384,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMINOT3",385,0)
 q zr
"RTN","SAMINOT3",386,0)
 ;
"RTN","SAMINOT3",387,0)
PREVCT(SID,FORM) ; extrinic returns the form key to the CT Eval form
"RTN","SAMINOT3",388,0)
 ; previous to FORM. If FORM is null, the latest CT Eval form key is returned
"RTN","SAMINOT3",389,0)
 ; FORM sensitivity is tbd.. always returns latest CTEval
"RTN","SAMINOT3",390,0)
 n gn s gn=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT3",391,0)
 n prev s prev=$o(@gn@("graph",SID,"ceform-30"),-1)
"RTN","SAMINOT3",392,0)
 q prev
"RTN","SAMINOT3",393,0)
 ;
"RTN","SAMINOT3",394,0)
CTINFO(ARY,SID,FORM) ; returns extracts from latest CT Eval form
"RTN","SAMINOT3",395,0)
 ; ARY passed by name
"RTN","SAMINOT3",396,0)
 ;
"RTN","SAMINOT3",397,0)
 n ctkey s ctkey=$$PREVCT(SID,$G(FORM))
"RTN","SAMINOT3",398,0)
 q:ctkey=""
"RTN","SAMINOT3",399,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT3",400,0)
 n ctroot s ctroot=$na(@root@("graph",SID,ctkey))
"RTN","SAMINOT3",401,0)
 ;
"RTN","SAMINOT3",402,0)
 s @ARY@("ctform")=ctkey
"RTN","SAMINOT3",403,0)
 s @ARY@("impression")=$g(@ctroot@("ceimre"))
"RTN","SAMINOT3",404,0)
 n futext
"RTN","SAMINOT3",405,0)
 s futext=$g(@ctroot@("cefuw"))
"RTN","SAMINOT3",406,0)
 n futbl
"RTN","SAMINOT3",407,0)
 s futbl("1y")="Annual repeat"
"RTN","SAMINOT3",408,0)
 s futbl("nw")="Now"
"RTN","SAMINOT3",409,0)
 s futbl("1m")="1 month"
"RTN","SAMINOT3",410,0)
 s futbl("3m")="3 months"
"RTN","SAMINOT3",411,0)
 s futbl("6m")="6 months"
"RTN","SAMINOT3",412,0)
 s futbl("os")="other"
"RTN","SAMINOT3",413,0)
 i futext'="" s futext=$g(futbl(futext))
"RTN","SAMINOT3",414,0)
 n fudate s fudate=$g(@ctroot@("cefud"))
"RTN","SAMINOT3",415,0)
; #Other followup
"RTN","SAMINOT3",416,0)
 n zfu,ofu,tofu,comma
"RTN","SAMINOT3",417,0)
 n vals s vals=ctroot
"RTN","SAMINOT3",418,0)
 s comma=0,tofu=""
"RTN","SAMINOT3",419,0)
 s ofu=""
"RTN","SAMINOT3",420,0)
 f zfu="cefuaf","cefucc","cefupe","cefufn","cefubr","cefupc","cefutb" d  ;
"RTN","SAMINOT3",421,0)
 . i $$XVAL(zfu,vals)="y" s ofu=ofu_zfu
"RTN","SAMINOT3",422,0)
 i $$XVAL("cefuo",vals)'="" s ofu=ofu_"cefuo"
"RTN","SAMINOT3",423,0)
 i ofu'="" d  ;
"RTN","SAMINOT3",424,0)
 . s tofu="Other followup: "
"RTN","SAMINOT3",425,0)
 . i ofu["cefuaf" s tofu=tofu_"Antibiotics" s comma=1
"RTN","SAMINOT3",426,0)
 . i ofu["cefucc" s tofu=tofu_$s(comma:", ",1:"")_"Diagnostic CT" s comma=1
"RTN","SAMINOT3",427,0)
 . i ofu["cefupe" s tofu=tofu_$s(comma:", ",1:"")_"PET" s comma=1
"RTN","SAMINOT3",428,0)
 . i ofu["cefufn" s tofu=tofu_$s(comma:", ",1:"")_"Percutaneous biopsy" s comma=1
"RTN","SAMINOT3",429,0)
 . i ofu["cefubr" s tofu=tofu_$s(comma:", ",1:"")_"Bronchoscopy" s comma=1
"RTN","SAMINOT3",430,0)
 . i ofu["cefupc" s tofu=tofu_$s(comma:", ",1:"")_"Pulmonary consultation" s comma=1
"RTN","SAMINOT3",431,0)
 . i ofu["cefutb" s tofu=tofu_$s(comma:", ",1:"")_"Refer to tumor board" s comma=1
"RTN","SAMINOT3",432,0)
 . i ofu["cefuo" s tofu=tofu_$s(comma:", ",1:"")_"Other:" s comma=1
"RTN","SAMINOT3",433,0)
 s @ARY@("followup")=futext_" "_fudate
"RTN","SAMINOT3",434,0)
 s @ARY@("followup2")=tofu
"RTN","SAMINOT3",435,0)
 s @ARY@("followup3")=$$XVAL("cefuoo",vals)
"RTN","SAMINOT3",436,0)
 ;
"RTN","SAMINOT3",437,0)
 q
"RTN","SAMINOT3",438,0)
 ; 
"RTN","SAMINOT3",439,0)
IMPRESS(ARY,SID) ; impressions from CTEval report
"RTN","SAMINOT3",440,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOT3",441,0)
 n ctkey s ctkey=$g(@ARY@("ctform"))
"RTN","SAMINOT3",442,0)
 n vals s vals=$na(@root@("graph",SID,ctkey))
"RTN","SAMINOT3",443,0)
 n dict s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMINOT3",444,0)
 s dict=$na(@dict@("cteval-dict"))
"RTN","SAMINOT3",445,0)
 n para s para=""
"RTN","SAMINOT3",446,0)
 n sp1 s sp1="    "
"RTN","SAMINOT3",447,0)
 ; 
"RTN","SAMINOT3",448,0)
 d OUT("Impression:")
"RTN","SAMINOT3",449,0)
 d OUT(sp1_$$XSUB("ceimn",vals,dict)_para)
"RTN","SAMINOT3",450,0)
 ;
"RTN","SAMINOT3",451,0)
 ;# Report CAC Score and Extent of Emphysema
"RTN","SAMINOT3",452,0)
 s cacval=0
"RTN","SAMINOT3",453,0)
 d  ;if $$XVAL("ceccv",vals)'="e" d  ;
"RTN","SAMINOT3",454,0)
 . set vcac=$$XVAL("cecccac",vals)
"RTN","SAMINOT3",455,0)
 . if vcac'="" d  ;
"RTN","SAMINOT3",456,0)
 . . s cacrec=""
"RTN","SAMINOT3",457,0)
 . . s cac="The Visual Coronary Artery Calcium (CAC) Score is "_vcac_". "
"RTN","SAMINOT3",458,0)
 . . s cacval=vcac
"RTN","SAMINOT3",459,0)
 . . i cacval>3 s cacrec=$g(@dict@("CAC_recommendation"))_para
"RTN","SAMINOT3",460,0)
 ;
"RTN","SAMINOT3",461,0)
 i cacval>0 d  ;
"RTN","SAMINOT3",462,0)
 . d OUT(sp1_cac_" "_cacrec_" "_para)
"RTN","SAMINOT3",463,0)
 . d  ;if $$XVAL("ceemv",vals)="e" d  ;
"RTN","SAMINOT3",464,0)
 . . if $$XVAL("ceem",vals)'="no" d  ;
"RTN","SAMINOT3",465,0)
 . . . if $$XVAL("ceem",vals)="nv" q  ;
"RTN","SAMINOT3",466,0)
 . . . d OUT(sp1_"Emphysema: "_$$XSUB("ceem",vals,dict)_"."_para)
"RTN","SAMINOT3",467,0)
 ;
"RTN","SAMINOT3",468,0)
 i $$XVAL("ceclini",vals)="y" d  ;
"RTN","SAMINOT3",469,0)
 . d OUT(sp1_$$XVAL("ceclin",vals)_"."_para)
"RTN","SAMINOT3",470,0)
 ;
"RTN","SAMINOT3",471,0)
 i $$XVAL("ceoppai",vals)="y" d  ;
"RTN","SAMINOT3",472,0)
 . d OUT(sp1_$$XVAL("ceoppa",vals)_"."_para)
"RTN","SAMINOT3",473,0)
 ;
"RTN","SAMINOT3",474,0)
 i $$XVAL("ceoppabi",vals)="y" d  ;
"RTN","SAMINOT3",475,0)
 . d OUT(sp1_$$XVAL("ceoppab",vals)_"."_para)
"RTN","SAMINOT3",476,0)
 ;
"RTN","SAMINOT3",477,0)
 i $$XVAL("cecommcai",vals)="y" d  ;
"RTN","SAMINOT3",478,0)
 . d OUT(sp1_$$XVAL("cecommca",vals)_"."_para)
"RTN","SAMINOT3",479,0)
 ;
"RTN","SAMINOT3",480,0)
 i $$XVAL("ceotabnmi",vals)="y" d  ;
"RTN","SAMINOT3",481,0)
 . d OUT(sp1_$$XVAL("ceotabnm",vals)_"."_para)
"RTN","SAMINOT3",482,0)
 ;
"RTN","SAMINOT3",483,0)
 i $$XVAL("ceobrci",vals)="y" d  ;
"RTN","SAMINOT3",484,0)
 . d OUT(sp1_$$XVAL("ceobrc",vals)_"."_para)
"RTN","SAMINOT3",485,0)
 ;
"RTN","SAMINOT3",486,0)
 i $$XVAL("ceaoabbi",vals)="y" d  ;
"RTN","SAMINOT3",487,0)
 . d OUT(sp1_$$XVAL("ceaoabb",vals)_"."_para)
"RTN","SAMINOT3",488,0)
 ;
"RTN","SAMINOT3",489,0)
 i $$XVAL("ceaoabi",vals)="y" d  ;
"RTN","SAMINOT3",490,0)
 . d OUT(sp1_$$XVAL("ceaoab",vals)_"."_para)
"RTN","SAMINOT3",491,0)
 ;
"RTN","SAMINOT3",492,0)
 ;# Impression Remarks
"RTN","SAMINOT3",493,0)
 i $$XVAL("ceimre",vals)'="" d  ;
"RTN","SAMINOT3",494,0)
 . d OUT(sp1_$$XVAL("ceimre",vals)_"."_para)
"RTN","SAMINOT3",495,0)
 q
"RTN","SAMINOT3",496,0)
 ;
"RTN","SAMINOT3",497,0)
XSUB(var,vals,dict,valdx) ; extrinsic which returns the dictionary value defined by var
"RTN","SAMINOT3",498,0)
 ; vals and dict are passed by name
"RTN","SAMINOT3",499,0)
 ; valdx is used for nodules ala cect2co with the nodule number included
"RTN","SAMINOT3",500,0)
 ;n dict s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMINOT3",501,0)
 n zr,zv,zdx
"RTN","SAMINOT3",502,0)
 s zdx=$g(valdx)
"RTN","SAMINOT3",503,0)
 i zdx="" s zdx=var
"RTN","SAMINOT3",504,0)
 s zv=$g(@vals@(zdx))
"RTN","SAMINOT3",505,0)
 ;i zv="" s zr="["_var_"]" q zr
"RTN","SAMINOT3",506,0)
 i zv="" s zr="" q zr
"RTN","SAMINOT3",507,0)
 s zr=$g(@dict@(var,zv))
"RTN","SAMINOT3",508,0)
 ;i zr="" s zr="["_var_","_zv_"]"
"RTN","SAMINOT3",509,0)
 q zr
"RTN","SAMINOT3",510,0)
 ;
"RTN","SAMINOTI")
0^45^B58865926
"RTN","SAMINOTI",1,0)
SAMINOTI ;ven/gpl - ielcap: forms ; 4/23/19 10:05am
"RTN","SAMINOTI",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMINOTI",3,0)
 ;
"RTN","SAMINOTI",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMINOTI",5,0)
 ;
"RTN","SAMINOTI",6,0)
 quit  ; no entry from top
"RTN","SAMINOTI",7,0)
 ;
"RTN","SAMINOTI",8,0)
WSNOTE(return,filter) ; web service which returns a text note
"RTN","SAMINOTI",9,0)
 ;
"RTN","SAMINOTI",10,0)
 n debug s debug=0
"RTN","SAMINOTI",11,0)
 i $g(filter("debug"))=1 s debug=1
"RTN","SAMINOTI",12,0)
 ;
"RTN","SAMINOTI",13,0)
 k return
"RTN","SAMINOTI",14,0)
 s HTTPRSP("mime")="text/html"
"RTN","SAMINOTI",15,0)
 ;
"RTN","SAMINOTI",16,0)
 n si
"RTN","SAMINOTI",17,0)
 s si=$g(filter("studyid"))
"RTN","SAMINOTI",18,0)
 i si="" d  ;
"RTN","SAMINOTI",19,0)
 . s si="XXX00333"
"RTN","SAMINOTI",20,0)
 q:si=""
"RTN","SAMINOTI",21,0)
 ;
"RTN","SAMINOTI",22,0)
 n samikey
"RTN","SAMINOTI",23,0)
 s samikey=$g(filter("form"))
"RTN","SAMINOTI",24,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOTI",25,0)
 i samikey="" d  ;
"RTN","SAMINOTI",26,0)
 . s samikey=$o(@root@("graph",si,"siform"))
"RTN","SAMINOTI",27,0)
 . ;w !,samikey
"RTN","SAMINOTI",28,0)
 . ;b
"RTN","SAMINOTI",29,0)
 ;
"RTN","SAMINOTI",30,0)
 n vals
"RTN","SAMINOTI",31,0)
 m vals=@root@("graph",si,samikey)
"RTN","SAMINOTI",32,0)
 ;
"RTN","SAMINOTI",33,0)
 new temp,tout
"RTN","SAMINOTI",34,0)
 do GETTMPL^SAMICASE("temp","vapals:note")
"RTN","SAMINOTI",35,0)
 quit:'$data(temp)
"RTN","SAMINOTI",36,0)
 ;
"RTN","SAMINOTI",37,0)
 n cnt s cnt=0
"RTN","SAMINOTI",38,0)
 n zi s zi=""
"RTN","SAMINOTI",39,0)
 ;
"RTN","SAMINOTI",40,0)
 f  s zi=$o(temp(zi)) q:zi=""  d  ;
"RTN","SAMINOTI",41,0)
 . ;
"RTN","SAMINOTI",42,0)
 . n line s line=temp(zi)
"RTN","SAMINOTI",43,0)
 . D LOAD^SAMIFORM(.line,samikey,si,.filter,.vals)
"RTN","SAMINOTI",44,0)
 . s temp(zi)=line
"RTN","SAMINOTI",45,0)
 . ;
"RTN","SAMINOTI",46,0)
 . s cnt=cnt+1
"RTN","SAMINOTI",47,0)
 . s tout(cnt)=temp(zi)
"RTN","SAMINOTI",48,0)
 . ;
"RTN","SAMINOTI",49,0)
 . i temp(zi)["report-text" d  ;
"RTN","SAMINOTI",50,0)
 . . i temp(zi)["#" q  ;
"RTN","SAMINOTI",51,0)
 . . n zj s zj=""
"RTN","SAMINOTI",52,0)
 . . n note s note=$na(@root@("graph",si,samikey,"note"))
"RTN","SAMINOTI",53,0)
 . . i '$d(@note) q
"RTN","SAMINOTI",54,0)
 . . f  s zj=$o(@note@(zj)) q:zj=""  d  ;
"RTN","SAMINOTI",55,0)
 . . . s cnt=cnt+1
"RTN","SAMINOTI",56,0)
 . . . ;s tout(cnt)=@note@(zj)_"<br>"
"RTN","SAMINOTI",57,0)
 . . . s tout(cnt)=@note@(zj)_$char(13,10)
"RTN","SAMINOTI",58,0)
 m return=tout
"RTN","SAMINOTI",59,0)
 q
"RTN","SAMINOTI",60,0)
 ;
"RTN","SAMINOTI",61,0)
NOTE(filter) ; extrnisic which creates a note
"RTN","SAMINOTI",62,0)
 ; returns 1 if successful, 0 if not
"RTN","SAMINOTI",63,0)
 ;
"RTN","SAMINOTI",64,0)
 n cnt s cnt=0 ; line number
"RTN","SAMINOTI",65,0)
 ;
"RTN","SAMINOTI",66,0)
 ; set up patient values
"RTN","SAMINOTI",67,0)
 ;
"RTN","SAMINOTI",68,0)
 n vals
"RTN","SAMINOTI",69,0)
 ;
"RTN","SAMINOTI",70,0)
 n si
"RTN","SAMINOTI",71,0)
 s si=$g(filter("studyid"))
"RTN","SAMINOTI",72,0)
 i si="" d  ;
"RTN","SAMINOTI",73,0)
 . s si="XXX00333"
"RTN","SAMINOTI",74,0)
 q:si=""
"RTN","SAMINOTI",75,0)
 ;
"RTN","SAMINOTI",76,0)
 n samikey
"RTN","SAMINOTI",77,0)
 s samikey=$g(filter("form"))
"RTN","SAMINOTI",78,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMINOTI",79,0)
 i samikey="" d  ;
"RTN","SAMINOTI",80,0)
 . s samikey=$o(@root@("graph",si,"siform"))
"RTN","SAMINOTI",81,0)
 . ;w !,samikey
"RTN","SAMINOTI",82,0)
 . ;b
"RTN","SAMINOTI",83,0)
 ;
"RTN","SAMINOTI",84,0)
 s vals=$na(@root@("graph",si,samikey))
"RTN","SAMINOTI",85,0)
 ;
"RTN","SAMINOTI",86,0)
 i '$d(@vals) d  q 0 ;
"RTN","SAMINOTI",87,0)
 . ;w !,"error, patient values not found"
"RTN","SAMINOTI",88,0)
 ;zwr @vals@(*)
"RTN","SAMINOTI",89,0)
 n dest s dest=$na(@vals@("note"))
"RTN","SAMINOTI",90,0)
 k @dest
"RTN","SAMINOTI",91,0)
 ;
"RTN","SAMINOTI",92,0)
 ;
"RTN","SAMINOTI",93,0)
 d OUT("Lung Screening and Surveillance (LSS) Outreach and Intake Encounter Note ")
"RTN","SAMINOTI",94,0)
 d OUT(" ")
"RTN","SAMINOTI",95,0)
 d OUT("   "_"Date of contact: "_$$XVAL("sidc",vals))
"RTN","SAMINOTI",96,0)
 n learn s learn=""
"RTN","SAMINOTI",97,0)
 s:$$XVAL("silnph",vals) learn=learn_" Phone"
"RTN","SAMINOTI",98,0)
 s:$$XVAL("silnls",vals) learn=learn_" Letter"
"RTN","SAMINOTI",99,0)
 s:$$XVAL("silnpu",vals) learn=learn_" Pulmonary"
"RTN","SAMINOTI",100,0)
 s:$$XVAL("silnpc",vals) learn=learn_" PCP"
"RTN","SAMINOTI",101,0)
 d OUT("   "_"How did you learn about LSS?: "_learn)
"RTN","SAMINOTI",102,0)
 n verified s verified=""
"RTN","SAMINOTI",103,0)
 s:$$XVAL("sipav",vals)="y" verified="Yes"
"RTN","SAMINOTI",104,0)
 s:$$XVAL("sipav",vals)="n" verified="No"
"RTN","SAMINOTI",105,0)
 d OUT("   "_"Primary address verified: "_verified)
"RTN","SAMINOTI",106,0)
 n rural s rural=""
"RTN","SAMINOTI",107,0)
 s:$$XVAL("sirs",vals)="r" rural="rural"
"RTN","SAMINOTI",108,0)
 s:$$XVAL("sirs",vals)="u" rural="urban"
"RTN","SAMINOTI",109,0)
 d OUT("   "_""_"Rural status: "_rural)
"RTN","SAMINOTI",110,0)
 d OUT("   "_"Preferred address and contact number: ")
"RTN","SAMINOTI",111,0)
 n pa s pa=""
"RTN","SAMINOTI",112,0)
 i $$XVAL("sipsa",vals)'="" d  ;
"RTN","SAMINOTI",113,0)
 . d OUT("      "_$$XVAL("sipsa",vals))
"RTN","SAMINOTI",114,0)
 . n csz s csz=""
"RTN","SAMINOTI",115,0)
 . s:$$XVAL("sipc",vals)'="" csz=$$XVAL("sipc",vals)
"RTN","SAMINOTI",116,0)
 . s:$$XVAL("sips",vals)'="" csz=csz_", "_$$XVAL("sips",vals)
"RTN","SAMINOTI",117,0)
 . s:$$XVAL("sipz",vals)'="" csz=csz_" "_$$XVAL("sipz",vals)
"RTN","SAMINOTI",118,0)
 . d OUT("      "_csz)
"RTN","SAMINOTI",119,0)
 d:$$XVAL("sippn",vals)'="" OUT("      "_$$XVAL("sippn",vals))
"RTN","SAMINOTI",120,0)
 d OUT("   "_"Ever smoked?: ")
"RTN","SAMINOTI",121,0)
 d OUT("      "_$$XVAL("sies",vals))
"RTN","SAMINOTI",122,0)
 n sstatus s sstatus=""
"RTN","SAMINOTI",123,0)
 s:$$XVAL("siesn",vals) sstatus=sstatus_" Never smoked"
"RTN","SAMINOTI",124,0)
 s:$$XVAL("siesp",vals) sstatus=sstatus_" Past"
"RTN","SAMINOTI",125,0)
 s:$$XVAL("siesc",vals) sstatus=sstatus_" Current"
"RTN","SAMINOTI",126,0)
 s:$$XVAL("siesq",vals) sstatus=sstatus_" Willing to quit"
"RTN","SAMINOTI",127,0)
 d OUT("    Smoking Status: "_sstatus)
"RTN","SAMINOTI",128,0)
 d OUT("   "_"CIGs per day: ")
"RTN","SAMINOTI",129,0)
 d OUT("      "_$$XVAL("sicpd",vals))
"RTN","SAMINOTI",130,0)
 d OUT("   "_"PPD: ")
"RTN","SAMINOTI",131,0)
 d OUT("      "_$$XVAL("sippd",vals))
"RTN","SAMINOTI",132,0)
 d OUT("   "_"# of years: ")
"RTN","SAMINOTI",133,0)
 d OUT("      "_$$XVAL("sisny",vals))
"RTN","SAMINOTI",134,0)
 d OUT("   "_"PPY: ")
"RTN","SAMINOTI",135,0)
 d OUT("      "_$$XVAL("sippy",vals))
"RTN","SAMINOTI",136,0)
 d OUT("   "_"Quit smoking on: "_$$XVAL("siq",vals))
"RTN","SAMINOTI",137,0)
 d OUT("   "_"Prior LDCT: ")
"RTN","SAMINOTI",138,0)
 n prior s prior=""
"RTN","SAMINOTI",139,0)
 s:$$XVAL("sicadx",vals)'="" prior=prior_$$XVAL("sicadx",vals)
"RTN","SAMINOTI",140,0)
 s:$$XVAL("sicadxl",vals)'="" prior=prior_" at "_$$XVAL("sicadxl",vals)
"RTN","SAMINOTI",141,0)
 d OUT("      "_prior)
"RTN","SAMINOTI",142,0)
 d OUT(" ")
"RTN","SAMINOTI",143,0)
 d OUT("Shared Decision Making: ")
"RTN","SAMINOTI",144,0)
 d OUT(" ")
"RTN","SAMINOTI",145,0)
 d OUT("Veteran of age and exposure to cigarette smoke as described above, and without")
"RTN","SAMINOTI",146,0)
 d OUT("a current diagnosis or obvious symptoms suggestive of lung cancer, has been")
"RTN","SAMINOTI",147,0)
 d OUT("educated today about the estimated risk for lung cancer, the possibility of")
"RTN","SAMINOTI",148,0)
 d OUT("cure or life prolonging if an early lung cancer were to be found during")
"RTN","SAMINOTI",149,0)
 d OUT("screening, the possibility of imaging abnormalities not being lung cancer, the")
"RTN","SAMINOTI",150,0)
 d OUT("possibility of complications from additional diagnostic procedures, and the")
"RTN","SAMINOTI",151,0)
 d OUT("approximate amount of radiation exposure associated with each screening")
"RTN","SAMINOTI",152,0)
 d OUT("procedure.  In addition, the veteran has been educated today about the")
"RTN","SAMINOTI",153,0)
 d OUT("importance of adhering to annual lung screening, the possible impact of other")
"RTN","SAMINOTI",154,0)
 d OUT("medical conditions on the overall health status, the importance of avoiding")
"RTN","SAMINOTI",155,0)
 d OUT("exposure to cigarette smoke, available tobacco cessation programs and")
"RTN","SAMINOTI",156,0)
 d OUT("available lung screening services at the Phoenix VA.  Education material was")
"RTN","SAMINOTI",157,0)
 d OUT("provided to the veteran.  Based on this information, the veteran has opted")
"RTN","SAMINOTI",158,0)
 d OUT("for: ")
"RTN","SAMINOTI",159,0)
 d OUT(" ")
"RTN","SAMINOTI",160,0)
 d OUT("LDCT ordered: ")
"RTN","SAMINOTI",161,0)
 n ldct s ldct=""
"RTN","SAMINOTI",162,0)
 s:$$XVAL("sildct",vals)="n" ldct=ldct_" No"
"RTN","SAMINOTI",163,0)
 s:$$XVAL("sildct",vals)="l" ldct=ldct_" Not at this time, okay to contact in the future"
"RTN","SAMINOTI",164,0)
 s:$$XVAL("sildct",vals)="y" ldct=ldct_" Yes"
"RTN","SAMINOTI",165,0)
 d OUT("    "_ldct)
"RTN","SAMINOTI",166,0)
 i $$XVAL("sildct",vals)="y" d  ;
"RTN","SAMINOTI",167,0)
 . d OUT("    "_"Veteran enrolled in the LSS program. Results and coordination of care ")
"RTN","SAMINOTI",168,0)
 . d OUT("    "_"will be made by the LSS team.  ")
"RTN","SAMINOTI",169,0)
 ;d OUT("    "_"Scheduled by the LSS Coordinator:  ")
"RTN","SAMINOTI",170,0)
 ;d OUT("    "_"Best time and day:  ")
"RTN","SAMINOTI",171,0)
 ;d OUT("    "_"Best contact number:  ")
"RTN","SAMINOTI",172,0)
 ;d OUT(" ")
"RTN","SAMINOTI",173,0)
 ;d OUT(" ")
"RTN","SAMINOTI",174,0)
 ; clinical indication text
"RTN","SAMINOTI",175,0)
 i $$XVAL("siclin",vals)'="" d  ; there is some text
"RTN","SAMINOTI",176,0)
 . d OUT("Clinical Indications for Initial Screening CT:")
"RTN","SAMINOTI",177,0)
 . d OUT(" "_$$XVAL("siclin",vals))
"RTN","SAMINOTI",178,0)
 ;
"RTN","SAMINOTI",179,0)
 q 1
"RTN","SAMINOTI",180,0)
 ;
"RTN","SAMINOTI",181,0)
OUT(ln) ;
"RTN","SAMINOTI",182,0)
 s cnt=cnt+1
"RTN","SAMINOTI",183,0)
 n lnn
"RTN","SAMINOTI",184,0)
 ;s debug=1
"RTN","SAMINOTI",185,0)
 s lnn=$o(@dest@(" "),-1)+1
"RTN","SAMINOTI",186,0)
 s @dest@(lnn)=ln
"RTN","SAMINOTI",187,0)
 ;i $g(debug)=1 d  ;
"RTN","SAMINOTI",188,0)
 ;. i ln["<" q  ; no markup
"RTN","SAMINOTI",189,0)
 ;. n zs s zs=$STACK
"RTN","SAMINOTI",190,0)
 ;. n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMINOTI",191,0)
 ;. s @dest@(lnn)=zp_":"_ln
"RTN","SAMINOTI",192,0)
 q
"RTN","SAMINOTI",193,0)
 ;
"RTN","SAMINOTI",194,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMINOTI",195,0)
 ; vals is passed by name
"RTN","SAMINOTI",196,0)
 n zr
"RTN","SAMINOTI",197,0)
 s zr=$g(@vals@(var))
"RTN","SAMINOTI",198,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMINOTI",199,0)
 q zr
"RTN","SAMINOTI",200,0)
 ;
"RTN","SAMINOTI",201,0)
 ;
"RTN","SAMINUL")
0^46^B97012
"RTN","SAMINUL",1,0)
SAMINUL ;ven/gpl - ielcap: note log ;2021-07-01t17:41z
"RTN","SAMINUL",2,0)
 ;;18.0;SAMI;**9,10,11,12**;2020-01;Build 1
"RTN","SAMINUL",3,0)
 ;;18.12
"RTN","SAMINUL",4,0)
 ;
"RTN","SAMINUL",5,0)
 ; SAMINOTE contains subroutines for producing the ELCAP Note Pages.
"RTN","SAMINUL",6,0)
 ; SAMINUL contains the development log for the SAMINOT* routines.
"RTN","SAMINUL",7,0)
 ; It contains no executable code.
"RTN","SAMINUL",8,0)
 ;
"RTN","SAMINUL",9,0)
 quit  ; no entry from top
"RTN","SAMINUL",10,0)
 ;
"RTN","SAMINUL",11,0)
 ;
"RTN","SAMINUL",12,0)
 ;
"RTN","SAMINUL",13,0)
 ;@section 0 primary development
"RTN","SAMINUL",14,0)
 ;
"RTN","SAMINUL",15,0)
 ;
"RTN","SAMINUL",16,0)
 ;
"RTN","SAMINUL",17,0)
 ;@routine-credits
"RTN","SAMINUL",18,0)
 ;@dev-main George P. Lilly (gpl)
"RTN","SAMINUL",19,0)
 ; gpl@vistaexpertise.net
"RTN","SAMINUL",20,0)
 ;@dev-org-main Vista Expertise Network (ven)
"RTN","SAMINUL",21,0)
 ; http://vistaexpertise.net
"RTN","SAMINUL",22,0)
 ;@copyright 2017/2021, gpl, all rights reserved
"RTN","SAMINUL",23,0)
 ;@license see routine SAMIUL
"RTN","SAMINUL",24,0)
 ;
"RTN","SAMINUL",25,0)
 ;@last-update 2021-07-01t17:41z
"RTN","SAMINUL",26,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMINUL",27,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMINUL",28,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMINUL",29,0)
 ;@version 18.12
"RTN","SAMINUL",30,0)
 ;@release-date 2020-01
"RTN","SAMINUL",31,0)
 ;@patch-list **9,10,11,12**
"RTN","SAMINUL",32,0)
 ;
"RTN","SAMINUL",33,0)
 ;@dev-add Frederick D. S. Marshall (toad)
"RTN","SAMINUL",34,0)
 ; toad@vistaexpertise.net
"RTN","SAMINUL",35,0)
 ;@dev-add Larry G. Carlson (lgc)
"RTN","SAMINUL",36,0)
 ; larry.g.carlson@gmail.com
"RTN","SAMINUL",37,0)
 ;@dev-add Linda M. R. Yaw (lmry)
"RTN","SAMINUL",38,0)
 ; linda.yaw@vistaexpertise.net
"RTN","SAMINUL",39,0)
 ;@dev-add Alexis R. Carlson (arc)
"RTN","SAMINUL",40,0)
 ; whatisthehumanspirit@gmail.com
"RTN","SAMINUL",41,0)
 ;@dev-add Domenic DiNatale (dom)
"RTN","SAMINUL",42,0)
 ; domenic.dinatale@paraxialtech.com
"RTN","SAMINUL",43,0)
 ;@dev-add Kenneth W. McGlothlen (mcglk)
"RTN","SAMINUL",44,0)
 ; mcglk@vistaexpertise.net
"RTN","SAMINUL",45,0)
 ;
"RTN","SAMINUL",46,0)
 ;@module-credits
"RTN","SAMINUL",47,0)
 ;@project VA Partnership to Increase Access to Lung Screening
"RTN","SAMINUL",48,0)
 ; (VA-PALS)
"RTN","SAMINUL",49,0)
 ; http://va-pals.org/
"RTN","SAMINUL",50,0)
 ;@funding 2017/2021, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMINUL",51,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMINUL",52,0)
 ;@partner-org Veterans Affairs Office of Rural health
"RTN","SAMINUL",53,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMINUL",54,0)
 ;@partner-org International Early Lung Cancer Action Program (I-ELCAP)
"RTN","SAMINUL",55,0)
 ; http://ielcap.com/
"RTN","SAMINUL",56,0)
 ;@partner-org Paraxial Technologies (par)
"RTN","SAMINUL",57,0)
 ; http://paraxialtech.com/
"RTN","SAMINUL",58,0)
 ;@partner-org Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMINUL",59,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMINUL",60,0)
 ;
"RTN","SAMINUL",61,0)
 ;@module-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMINUL",62,0)
 ;
"RTN","SAMINUL",63,0)
 ; 2019-04-04/18 ven/gpl 18.0-t4 c0bb7dbf,f7b48936,9d1f2cdc,ba5f366d,
"RTN","SAMINUL",64,0)
 ; 5b2e32dc,ce322911
"RTN","SAMINUL",65,0)
 ;  SAMINOT1 flags for intake form, fix crash on intake form, initial
"RTN","SAMINUL",66,0)
 ; version of new intake notes, revise text for pre-enrollment
"RTN","SAMINUL",67,0)
 ; discusstion note, complete new intake notes, add intake notes to
"RTN","SAMINUL",68,0)
 ; case review page.
"RTN","SAMINUL",69,0)
 ;
"RTN","SAMINUL",70,0)
 ; 2019-04-16/23 ven/lgc 18.0-t4 e54b76d1,21388d8a,f0505e51,
"RTN","SAMINUL",71,0)
 ;  89bffd3b
"RTN","SAMINUL",72,0)
 ;  SAMINOT1 SAMIFRM2 > SAMIFORM, remove spaces at end of lines,
"RTN","SAMINUL",73,0)
 ; control characters, SAMISUB2 > LOAD.
"RTN","SAMINUL",74,0)
 ;
"RTN","SAMINUL",75,0)
 ; 2019-04-23 ven/toad 18.0-t4 423a3946
"RTN","SAMINUL",76,0)
 ;  SAMINOT1 resolve gpl/lgc collision, restore SAMISUB2 > LOAD.
"RTN","SAMINUL",77,0)
 ;
"RTN","SAMINUL",78,0)
 ; 2019-04-30 ven/gpl 18.0-t4 cf73510c
"RTN","SAMINUL",79,0)
 ;  SAMINOT1 additions to intake note for prior scans & format.
"RTN","SAMINUL",80,0)
 ;
"RTN","SAMINUL",81,0)
 ; 2019-05-07 ven/lmry 18.0-t4 4a8ead45
"RTN","SAMINUL",82,0)
 ;  SAMINOT1 edit SAMINOT1 for XINDEX.
"RTN","SAMINUL",83,0)
 ;
"RTN","SAMINUL",84,0)
 ; 2019-05-07 ven/lgc 18.0-t4 f63ef57c
"RTN","SAMINUL",85,0)
 ;  SAMINOT1 cleanup for XINDEX.
"RTN","SAMINUL",86,0)
 ;
"RTN","SAMINUL",87,0)
 ; 2019-06-18 ven/arc 18.0-t4 91022482
"RTN","SAMINUL",88,0)
 ;  SAMINOT1 ^SAMIGPL > ^SAMIUL.
"RTN","SAMINUL",89,0)
 ;
"RTN","SAMINUL",90,0)
 ; 2019-07-01 ven/gpl 18.0-t4 72868e60
"RTN","SAMINUL",91,0)
 ;  SAMINOT1 update shared decision making text in intake note.
"RTN","SAMINUL",92,0)
 ;
"RTN","SAMINUL",93,0)
 ; 2019-08-03/14 ven/gpl 18.0-t4 bea65f7b,578f61d4
"RTN","SAMINUL",94,0)
 ;  SAMINOT1 fix bugs in Have you ever smoked processing in changelog
"RTN","SAMINUL",95,0)
 ; & intake note, restored ever smoked comment field to intake note.
"RTN","SAMINUL",96,0)
 ;
"RTN","SAMINUL",97,0)
 ; 2019-09-06 par/dom 18.0-t4 2ff47189 VAP-452
"RTN","SAMINUL",98,0)
 ;  SAMINOT1 patient > participant.
"RTN","SAMINUL",99,0)
 ;
"RTN","SAMINUL",100,0)
 ; 2019-09-26 ven/gpl 18.0-t4 92b12324 VAP-420
"RTN","SAMINUL",101,0)
 ;  SAMINOT1 smoking history.
"RTN","SAMINUL",102,0)
 ;
"RTN","SAMINUL",103,0)
 ; 2019-10-01 par/dom 18.0-t4 37c418a1,4caf1a98 VAP-457,344
"RTN","SAMINUL",104,0)
 ;  SAMINOT1 remove thorax, capitalization consistency.
"RTN","SAMINUL",105,0)
 ;
"RTN","SAMINUL",106,0)
 ; 2020-01-17/20 ven/lgc 18.1 8557207f,d7d24834,0301ad95,659f2526,
"RTN","SAMINUL",107,0)
 ; 0ff2b83f,49615242,5bf7c398,dc5f618c
"RTN","SAMINUL",108,0)
 ;  SAMINOT2 followup note, fixed typos in VC note, followup LCS note
"RTN","SAMINUL",109,0)
 ; minus CT Eval pulls, LCS note with CT Eval extracts, fixed bug in
"RTN","SAMINUL",110,0)
 ; LSC CT eval extract, include entire impression section of CT Eval
"RTN","SAMINUL",111,0)
 ; report in LCS Note, improved import of impressions, limit to one
"RTN","SAMINUL",112,0)
 ; note per followup form.
"RTN","SAMINUL",113,0)
 ;
"RTN","SAMINUL",114,0)
 ; 2020-01-23 ven/arc 18.2 9a24242a
"RTN","SAMINUL",115,0)
 ;  SAMINOT1 fix word wrap on intake note & typos in ct
"RTN","SAMINUL",116,0)
 ; eval report.
"RTN","SAMINUL",117,0)
 ;
"RTN","SAMINUL",118,0)
 ; 2020-08-12 ven/gpl 18.6 781744c3
"RTN","SAMINUL",119,0)
 ;  SAMINOT1 chg to support hl7 transmission of notes.
"RTN","SAMINUL",120,0)
 ;
"RTN","SAMINUL",121,0)
 ; 2020-09-22 ven/gpl 18.6 06459eda
"RTN","SAMINUL",122,0)
 ;  SAMINOT1 fix to match kids file.
"RTN","SAMINUL",123,0)
 ;
"RTN","SAMINUL",124,0)
 ; 2021-02-01/24 ven/gpl 18.8 8e4ec441,cde71a55
"RTN","SAMINUL",125,0)
 ;  SAMINOT1 fix intake note format, fix error that sent note twice
"RTN","SAMINUL",126,0)
 ; to VistA.
"RTN","SAMINUL",127,0)
 ;
"RTN","SAMINUL",128,0)
 ; 2021-03-02 ven/gpl 18.9 479dc041
"RTN","SAMINUL",129,0)
 ;  SAMINOT2 return error message if no ct eval form exists when
"RTN","SAMINUL",130,0)
 ; generating a fu note.
"RTN","SAMINUL",131,0)
 ;
"RTN","SAMINUL",132,0)
 ; 2021-03-15/16 ven/toad 18.9 a46a2cc1
"RTN","SAMINUL",133,0)
 ;  SAMINUL create routine.
"RTN","SAMINUL",134,0)
 ;  SAMINOT2 bump date & patch list, add contents, lt refactor.
"RTN","SAMINUL",135,0)
 ;
"RTN","SAMINUL",136,0)
 ; 2021-03-17 ven/toad 18.9 62da30b4
"RTN","SAMINUL",137,0)
 ; SAMINOT2 remove blank from end of 1 line.
"RTN","SAMINUL",138,0)
 ;
"RTN","SAMINUL",139,0)
 ; 2021-03-22 ven/gpl 18.10 6319a1eb
"RTN","SAMINUL",140,0)
 ;  SAMINOT1 fix logic bug in detecting pre-enrollment existing.
"RTN","SAMINUL",141,0)
 ;
"RTN","SAMINUL",142,0)
 ; 2021-03-23 ven/toad 18.10 96f461d0
"RTN","SAMINUL",143,0)
 ;  SAMINOT1 bump date & patch list, lt refactor.
"RTN","SAMINUL",144,0)
 ;
"RTN","SAMINUL",145,0)
 ; 2021-03-29 ven/gpl 18.11 6cd83445 VAP-483
"RTN","SAMINUL",146,0)
 ;  SAMINOT1 allow N/A for shared decision making on intake form:
"RTN","SAMINUL",147,0)
 ; in INNOTE new & set shareddm & use to call SDM or report n/a, based
"RTN","SAMINUL",148,0)
 ; on siidmdc.
"RTN","SAMINUL",149,0)
 ;
"RTN","SAMINUL",150,0)
 ; 2021-03-30/05-21 ven/mcglk&toad 18.11 7b14bb2,
"RTN","SAMINUL",151,0)
 ;  SAMINOT1 bump version, date, log, add quit to stop block mismatch
"RTN","SAMINUL",152,0)
 ; complaint from XINDEX.
"RTN","SAMINUL",153,0)
 ;
"RTN","SAMINUL",154,0)
 ; 2021-06-29 ven/gpl 18.12-t2 a5bbd37a,d865b0dc
"RTN","SAMINUL",155,0)
 ;  SAMINOT1,2 text box formatting for intake & followup notes, new
"RTN","SAMINUL",156,0)
 ; text processing utils; restrict follow forms to one generated note.
"RTN","SAMINUL",157,0)
 ;
"RTN","SAMINUL",158,0)
 ; 2021-07-01 ven/mcglk&toad 18.12-t2 cbf7e46b
"RTN","SAMINUL",159,0)
 ;  SAMINOT1,2 bump dates & versions, update dev log, update contents.
"RTN","SAMINUL",160,0)
 ;
"RTN","SAMINUL",161,0)
 ;
"RTN","SAMINUL",162,0)
 ;
"RTN","SAMINUL",163,0)
EOR ; end of routine SAMINUL
"RTN","SAMIORM")
0^47^B175893845
"RTN","SAMIORM",1,0)
SAMIORM ;ven/lgc&arc - HL7: ORM > patient-lookup ;2021-06-08t20:07z
"RTN","SAMIORM",2,0)
 ;;18.0;SAMI;**11,12**;2020-01;Build 1
"RTN","SAMIORM",3,0)
 ;;18.12
"RTN","SAMIORM",4,0)
 ;
"RTN","SAMIORM",5,0)
 ; SAMIORM parses an incoming Order (ORM) message into the fields
"RTN","SAMIORM",6,0)
 ; array, then calls SAMIHL7 to use the array to update the patient-
"RTN","SAMIORM",7,0)
 ; lookup graph.
"RTN","SAMIORM",8,0)
 ;
"RTN","SAMIORM",9,0)
 ; SAMIOUL contains the development log for the SAMIHL7 & SAMIOR*
"RTN","SAMIORM",10,0)
 ; routines.
"RTN","SAMIORM",11,0)
 ;
"RTN","SAMIORM",12,0)
 quit  ; no entry from top
"RTN","SAMIORM",13,0)
 ;
"RTN","SAMIORM",14,0)
 ;
"RTN","SAMIORM",15,0)
 ;
"RTN","SAMIORM",16,0)
 ;@section 0 primary development
"RTN","SAMIORM",17,0)
 ;
"RTN","SAMIORM",18,0)
 ;
"RTN","SAMIORM",19,0)
 ;
"RTN","SAMIORM",20,0)
 ;@routine-credits
"RTN","SAMIORM",21,0)
 ;@dev-main Larry G. Carlson (lgc)
"RTN","SAMIORM",22,0)
 ; larry@fiscientific.com
"RTN","SAMIORM",23,0)
 ;@dev-org-main Vista Expertise Network (ven)
"RTN","SAMIORM",24,0)
 ; http://vistaexpertise.net
"RTN","SAMIORM",25,0)
 ;@copyright 2020/2021, lgc, all rights reserved
"RTN","SAMIORM",26,0)
 ;@license see routine SAMIUL
"RTN","SAMIORM",27,0)
 ;
"RTN","SAMIORM",28,0)
 ;@last-updated 2021-06-08t20:07z
"RTN","SAMIORM",29,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMIORM",30,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMIORM",31,0)
 ;@submodule HL7 interface - SAMIHL* & SAMIOR*
"RTN","SAMIORM",32,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMIORM",33,0)
 ;@version 18.12
"RTN","SAMIORM",34,0)
 ;@release-date 2020-01
"RTN","SAMIORM",35,0)
 ;@patch-list **11,12**
"RTN","SAMIORM",36,0)
 ;
"RTN","SAMIORM",37,0)
 ;@dev-add Alexis R. Carlson (arc)
"RTN","SAMIORM",38,0)
 ; arc@vistaexpertise.net
"RTN","SAMIORM",39,0)
 ;@dev-add George P. Lilly (gpl)
"RTN","SAMIORM",40,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIORM",41,0)
 ;@dev-add Frederick D. S. Marshall (toad)
"RTN","SAMIORM",42,0)
 ; toad@vistaexpertise.net
"RTN","SAMIORM",43,0)
 ;@dev-add Kenneth McGlothlen (mcglk)
"RTN","SAMIORM",44,0)
 ; mcglk@vistaexpertise.net
"RTN","SAMIORM",45,0)
 ;
"RTN","SAMIORM",46,0)
 ;@routine-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMIORM",47,0)
 ; see routine SAMIOUL
"RTN","SAMIORM",48,0)
 ;@contents
"RTN","SAMIORM",49,0)
 ; EN-BLDARR-PMSG-UPDTPTL parse ORM msg > patient-lookup graph
"RTN","SAMIORM",50,0)
 ;
"RTN","SAMIORM",51,0)
 ; PARSEMSG get patient data f/ORM msg
"RTN","SAMIORM",52,0)
 ; PID-ORMADDR get patient data from PID segment
"RTN","SAMIORM",53,0)
 ; PV1 get patient data from PV1 segment
"RTN","SAMIORM",54,0)
 ; ORC get patient data from ORC segment
"RTN","SAMIORM",55,0)
 ; OBR get patient data from OBR segment
"RTN","SAMIORM",56,0)
 ;
"RTN","SAMIORM",57,0)
 ; TEST test hli EN^SAMIORM
"RTN","SAMIORM",58,0)
 ;
"RTN","SAMIORM",59,0)
 ;
"RTN","SAMIORM",60,0)
 ;
"RTN","SAMIORM",61,0)
 ;@section 1 hl7 applications & protocols that call hli EN^SAMIORM
"RTN","SAMIORM",62,0)
 ;
"RTN","SAMIORM",63,0)
 ;
"RTN","SAMIORM",64,0)
 ;
"RTN","SAMIORM",65,0)
 ; SAMI HL logical links
"RTN","SAMIORM",66,0)
 ;
"RTN","SAMIORM",67,0)
 ; NODE: LISTENER                          INSTITUTION: VISTA HEALTH CARE
"RTN","SAMIORM",68,0)
 ;   LLP TYPE: TCP                         DEVICE TYPE: Multi-threaded Server
"RTN","SAMIORM",69,0)
 ;   STATE: 7757 server                    AUTOSTART: Enabled
"RTN","SAMIORM",70,0)
 ;   MAILMAN DOMAIN: VAPALS.ELCAP.ORG      SHUTDOWN LLP ?: NO
"RTN","SAMIORM",71,0)
 ;   QUEUE SIZE: 10                        DO NOT PING: NO
"RTN","SAMIORM",72,0)
 ;   RE-TRANSMISSION ATTEMPTS: 5           READ TIMEOUT: 600
"RTN","SAMIORM",73,0)
 ;   ACK TIMEOUT: 600                      EXCEED RE-TRANSMIT ACTION: ignore
"RTN","SAMIORM",74,0)
 ;   TCP/IP PORT: 5000                     TCP/IP SERVICE TYPE: MULTI LISTENER
"RTN","SAMIORM",75,0)
 ;   PERSISTENT: YES                       STARTUP NODE: USER:VAPALS
"RTN","SAMIORM",76,0)
 ;   IN QUEUE BACK POINTER: 117            IN QUEUE FRONT POINTER: 105
"RTN","SAMIORM",77,0)
 ;   OUT QUEUE BACK POINTER: 76            OUT QUEUE FRONT POINTER: 76
"RTN","SAMIORM",78,0)
 ;
"RTN","SAMIORM",79,0)
 ;
"RTN","SAMIORM",80,0)
 ;
"RTN","SAMIORM",81,0)
 ; SAMI HL7 applications
"RTN","SAMIORM",82,0)
 ;
"RTN","SAMIORM",83,0)
 ; NAME: MCAR-INST                         ACTIVE/INACTIVE: ACTIVE
"RTN","SAMIORM",84,0)
 ;   FACILITY NAME: VISTA                  COUNTRY CODE: USA
"RTN","SAMIORM",85,0)
 ;   HL7 ENCODING CHARACTERS: ^~\&         HL7 FIELD SEPARATOR: |
"RTN","SAMIORM",86,0)
 ;
"RTN","SAMIORM",87,0)
 ;
"RTN","SAMIORM",88,0)
 ; NAME: INST-MCAR                         ACTIVE/INACTIVE: ACTIVE
"RTN","SAMIORM",89,0)
 ;   FACILITY NAME: VAPALS                 COUNTRY CODE: USA
"RTN","SAMIORM",90,0)
 ;   HL7 ENCODING CHARACTERS: ^~\&         HL7 FIELD SEPARATOR: |
"RTN","SAMIORM",91,0)
 ;
"RTN","SAMIORM",92,0)
 ;
"RTN","SAMIORM",93,0)
 ;
"RTN","SAMIORM",94,0)
 ; SAMI HL7 ORM protocols
"RTN","SAMIORM",95,0)
 ;
"RTN","SAMIORM",96,0)
 ; NAME: MCAR ORM SERVER
"RTN","SAMIORM",97,0)
 ;   ITEM TEXT: Clinical Procedures ORM Protocol Server
"RTN","SAMIORM",98,0)
 ;   TYPE: event driver                    CREATOR: LABTECH,FORTYEIGHT
"RTN","SAMIORM",99,0)
 ;   TIMESTAMP: 59921,33274                SENDING APPLICATION: MCAR-INST
"RTN","SAMIORM",100,0)
 ;   TRANSACTION MESSAGE TYPE: ORM         EVENT TYPE: O01
"RTN","SAMIORM",101,0)
 ;   VERSION ID: 2.3
"RTN","SAMIORM",102,0)
 ; SUBSCRIBERS: PHX ENROLL ORM
"RTN","SAMIORM",103,0)
 ;
"RTN","SAMIORM",104,0)
 ;
"RTN","SAMIORM",105,0)
 ; NAME: PHX ENROLL ORM EVN                TYPE: event driver
"RTN","SAMIORM",106,0)
 ;   CREATOR: CARLSON,LARRY G              SENDING APPLICATION: MCAR-INST
"RTN","SAMIORM",107,0)
 ;   TRANSACTION MESSAGE TYPE: ORM         EVENT TYPE: O01
"RTN","SAMIORM",108,0)
 ;   ACCEPT ACK CODE: AL                   APPLICATION ACK TYPE: NE
"RTN","SAMIORM",109,0)
 ;   VERSION ID: 2.3
"RTN","SAMIORM",110,0)
 ; SUBSCRIBERS: PHX ENROLL ORM
"RTN","SAMIORM",111,0)
 ;
"RTN","SAMIORM",112,0)
 ;
"RTN","SAMIORM",113,0)
 ; NAME: PHX ENROLL ORM                    TYPE: subscriber
"RTN","SAMIORM",114,0)
 ;   CREATOR: CARLSON,LARRY G              RECEIVING APPLICATION: INST-MCAR
"RTN","SAMIORM",115,0)
 ;   EVENT TYPE: O01                       RESPONSE MESSAGE TYPE: ACK
"RTN","SAMIORM",116,0)
 ;   PROCESSING ROUTINE: D EN^SAMIORM      SENDING FACILITY REQUIRED?: YES
"RTN","SAMIORM",117,0)
 ; 
"RTN","SAMIORM",118,0)
 ; RECEIVING FACILITY REQUIRED?: YES
"RTN","SAMIORM",119,0)
 ;
"RTN","SAMIORM",120,0)
 ;
"RTN","SAMIORM",121,0)
 ;
"RTN","SAMIORM",122,0)
 ;@section 2 main hli EN^SAMIORM
"RTN","SAMIORM",123,0)
 ;
"RTN","SAMIORM",124,0)
 ;
"RTN","SAMIORM",125,0)
 ;
"RTN","SAMIORM",126,0)
 ;@hli EN^SAMIORM
"RTN","SAMIORM",127,0)
EN ; parse ORM message into patient-lookup graph
"RTN","SAMIORM",128,0)
 ;
"RTN","SAMIORM",129,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORM",130,0)
 ;
"RTN","SAMIORM",131,0)
 ;;hli;procedure;clean;silent;sac
"RTN","SAMIORM",132,0)
 ;@falls-thru-to
"RTN","SAMIORM",133,0)
 ; BLDARR-PMSG-UPDTPTL
"RTN","SAMIORM",134,0)
 ;@called-by [see section 1]
"RTN","SAMIORM",135,0)
 ;@calls
"RTN","SAMIORM",136,0)
 ; $$HTFM^XLFDT
"RTN","SAMIORM",137,0)
 ; ACK^SAMIHL7
"RTN","SAMIORM",138,0)
 ;@input [tbd]
"RTN","SAMIORM",139,0)
 ; ]HLNEXT = executable code that sets HLNODE to next line of hl7 msg
"RTN","SAMIORM",140,0)
 ; ]HL("ECH")
"RTN","SAMIORM",141,0)
 ; ]HL("FS")
"RTN","SAMIORM",142,0)
 ; ]HLREC("MID")
"RTN","SAMIORM",143,0)
 ;@output [tbd]
"RTN","SAMIORM",144,0)
 ; patient-lookup graph updated for patient
"RTN","SAMIORM",145,0)
 ; ^KBAP = debug array
"RTN","SAMIORM",146,0)
 ; hl7 ACK msg sent
"RTN","SAMIORM",147,0)
 ;
"RTN","SAMIORM",148,0)
 ;
"RTN","SAMIORM",149,0)
 ;@stanza 2 setup
"RTN","SAMIORM",150,0)
 ;
"RTN","SAMIORM",151,0)
 kill ^KBAP("SAMIORM")
"RTN","SAMIORM",152,0)
 set ^KBAP("SAMIORM","EN")=$$HTFM^XLFDT($horolog)_" TEST"
"RTN","SAMIORM",153,0)
 ;
"RTN","SAMIORM",154,0)
 ; immediately return COMM ACK  ***** TMP TURNED OFF
"RTN","SAMIORM",155,0)
 do ACK^SAMIHL7
"RTN","SAMIORM",156,0)
 ;
"RTN","SAMIORM",157,0)
 ;
"RTN","SAMIORM",158,0)
BLDARR ;@stanza 3 pull out message into samihl7 array
"RTN","SAMIORM",159,0)
 ;
"RTN","SAMIORM",160,0)
 ;@falls-thru-from
"RTN","SAMIORM",161,0)
 ; EN
"RTN","SAMIORM",162,0)
 ;@falls-thru-to
"RTN","SAMIORM",163,0)
 ; PMSG-UPDTPTL
"RTN","SAMIORM",164,0)
 ;@called-by none
"RTN","SAMIORM",165,0)
 ;@calls
"RTN","SAMIORM",166,0)
 ; $$HTFM^XLFDT
"RTN","SAMIORM",167,0)
 ;
"RTN","SAMIORM",168,0)
 new invdt set invdt=9999999.9999-$$HTFM^XLFDT($horolog)
"RTN","SAMIORM",169,0)
 ;
"RTN","SAMIORM",170,0)
 new HLARR ; hl7 msg array fetched by xecuting HLNEXT
"RTN","SAMIORM",171,0)
 new samihl7 ; ditto
"RTN","SAMIORM",172,0)
 new cnt set cnt=0 ; line count
"RTN","SAMIORM",173,0)
 for  do  quit:$get(HLNODE)=""
"RTN","SAMIORM",174,0)
 . xecute HLNEXT ; get next line of hl7 msg
"RTN","SAMIORM",175,0)
 . quit:$get(HLNODE)=""  ; done when out of lines
"RTN","SAMIORM",176,0)
 . set cnt=cnt+1 ; count line
"RTN","SAMIORM",177,0)
 . set HLARR(cnt)=HLNODE ; save line
"RTN","SAMIORM",178,0)
 . set samihl7(cnt)=HLNODE ; ditto
"RTN","SAMIORM",179,0)
 . quit
"RTN","SAMIORM",180,0)
 ;
"RTN","SAMIORM",181,0)
 kill ^KBAP("SAMIORM","BLDARR")
"RTN","SAMIORM",182,0)
 merge ^KBAP("SAMIORM","BLDARR","HLARR")=HLARR
"RTN","SAMIORM",183,0)
 ;
"RTN","SAMIORM",184,0)
 new INFS set INFS=$get(HL("FS"))
"RTN","SAMIORM",185,0)
 new INCC set INCC=$extract($get(HL("ECH")))
"RTN","SAMIORM",186,0)
 ;
"RTN","SAMIORM",187,0)
 ;
"RTN","SAMIORM",188,0)
PMSG ;@stanza 4 pull patient data in ORM message > fields array
"RTN","SAMIORM",189,0)
 ;
"RTN","SAMIORM",190,0)
 ;@falls-thru-from
"RTN","SAMIORM",191,0)
 ; EN-BLDARR
"RTN","SAMIORM",192,0)
 ;@falls-thru-to
"RTN","SAMIORM",193,0)
 ; UPDTPTL
"RTN","SAMIORM",194,0)
 ;@called-by none
"RTN","SAMIORM",195,0)
 ;@calls
"RTN","SAMIORM",196,0)
 ; PARSEMSG
"RTN","SAMIORM",197,0)
 ;
"RTN","SAMIORM",198,0)
 new fields set fields("ORM",invdt,"msgid")=$get(HLREC("MID"))
"RTN","SAMIORM",199,0)
 do PARSEMSG(.HLARR,.fields) ; get patient data f/ORM msg
"RTN","SAMIORM",200,0)
 ;
"RTN","SAMIORM",201,0)
 merge ^KBAP("SAMIORM","samihl7")=samihl7
"RTN","SAMIORM",202,0)
 merge ^KBAP("SAMIORM","fields")=fields
"RTN","SAMIORM",203,0)
 ;
"RTN","SAMIORM",204,0)
 ;
"RTN","SAMIORM",205,0)
UPDTPTL ;@stanza 5 update patient-lookup graph using fields array
"RTN","SAMIORM",206,0)
 ;
"RTN","SAMIORM",207,0)
 ;@falls-thru-from
"RTN","SAMIORM",208,0)
 ; EN-BLDARR-PMSG
"RTN","SAMIORM",209,0)
 ;@called-by none
"RTN","SAMIORM",210,0)
 ;@calls
"RTN","SAMIORM",211,0)
 ; UPDTPTL^SAMIHL7
"RTN","SAMIORM",212,0)
 ; $$setroot^%wd
"RTN","SAMIORM",213,0)
 ;
"RTN","SAMIORM",214,0)
 do UPDTPTL^SAMIHL7(.fields) ; update patient-lookup w/pat-flds array
"RTN","SAMIORM",215,0)
 ;
"RTN","SAMIORM",216,0)
 merge ^KBAP("SAMIORM","fields")=fields
"RTN","SAMIORM",217,0)
 ;
"RTN","SAMIORM",218,0)
 ;
"RTN","SAMIORM",219,0)
 ;@stanza 6 file hl7 msg in patient-lookup graph
"RTN","SAMIORM",220,0)
 ;
"RTN","SAMIORM",221,0)
 ; At this point the fields have been filed in the patient with ptien
"RTN","SAMIORM",222,0)
 ; into the patient lookup graph. I have the ptien in fields("ptien")
"RTN","SAMIORM",223,0)
 ; and I have the HL7 message segments in samihl7. Time to file the
"RTN","SAMIORM",224,0)
 ; actual hl7 message into patient lookup. 
"RTN","SAMIORM",225,0)
 ; NOTE: @rootpl@(ptien,"hl7 counter") was updated in UPDTPTL^SAMIHL7.
"RTN","SAMIORM",226,0)
 ;
"RTN","SAMIORM",227,0)
 new ptien set ptien=$get(fields("ptien"))
"RTN","SAMIORM",228,0)
 quit:'ptien
"RTN","SAMIORM",229,0)
 ;
"RTN","SAMIORM",230,0)
 new rootpl set rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIORM",231,0)
 new hl7cnt set hl7cnt=$get(@rootpl@(ptien,"hl7 counter"))
"RTN","SAMIORM",232,0)
 set fields("ORM",hl7cnt,"msgid")=$get(HLREC("MID"))
"RTN","SAMIORM",233,0)
 ;
"RTN","SAMIORM",234,0)
 new cnt set cnt=0
"RTN","SAMIORM",235,0)
 for  set cnt=$order(samihl7(cnt)) quit:'cnt  do
"RTN","SAMIORM",236,0)
 . new seg set seg=$extract(samihl7(cnt),1,3)
"RTN","SAMIORM",237,0)
 . set @rootpl@(ptien,"hl7",hl7cnt,seg)=samihl7(cnt)
"RTN","SAMIORM",238,0)
 . quit
"RTN","SAMIORM",239,0)
 ;
"RTN","SAMIORM",240,0)
 ;
"RTN","SAMIORM",241,0)
 ;@stanza 7 termination
"RTN","SAMIORM",242,0)
 ;
"RTN","SAMIORM",243,0)
 quit  ; end of hli EN^SAMIORM
"RTN","SAMIORM",244,0)
 ;
"RTN","SAMIORM",245,0)
 ;
"RTN","SAMIORM",246,0)
 ;
"RTN","SAMIORM",247,0)
 ;@section 3 PARSEMSG subroutines
"RTN","SAMIORM",248,0)
 ;
"RTN","SAMIORM",249,0)
 ;
"RTN","SAMIORM",250,0)
 ;
"RTN","SAMIORM",251,0)
PARSEMSG(HLARR,fields) ; get patient data f/ORM msg
"RTN","SAMIORM",252,0)
 ;
"RTN","SAMIORM",253,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORM",254,0)
 ;
"RTN","SAMIORM",255,0)
 ;;private;procedure;clean;silent;sac
"RTN","SAMIORM",256,0)
 ;@called-by
"RTN","SAMIORM",257,0)
 ; hli EN^SAMIORM
"RTN","SAMIORM",258,0)
 ;@calls
"RTN","SAMIORM",259,0)
 ; PID
"RTN","SAMIORM",260,0)
 ; PV1
"RTN","SAMIORM",261,0)
 ; ORC
"RTN","SAMIORM",262,0)
 ; OBR
"RTN","SAMIORM",263,0)
 ;@input [tbd]
"RTN","SAMIORM",264,0)
 ; .HLARR = hl7 msg array
"RTN","SAMIORM",265,0)
 ; ]INFS = field separator
"RTN","SAMIORM",266,0)
 ; ]INCC = subfield separator
"RTN","SAMIORM",267,0)
 ; ]HL("FS") = field separator
"RTN","SAMIORM",268,0)
 ;@output [tbd]
"RTN","SAMIORM",269,0)
 ; .fields = fields array
"RTN","SAMIORM",270,0)
 ; ^KBAP = debug array
"RTN","SAMIORM",271,0)
 ;
"RTN","SAMIORM",272,0)
 ;
"RTN","SAMIORM",273,0)
 ;@stanza 2 get patient data
"RTN","SAMIORM",274,0)
 ;
"RTN","SAMIORM",275,0)
 set ^KBAP("SAMIORM","PARSEMSG","INFS")=$get(INFS)
"RTN","SAMIORM",276,0)
 set ^KBAP("SAMIORM","PARSEMSG","INCC")=$get(INCC)
"RTN","SAMIORM",277,0)
 ;
"RTN","SAMIORM",278,0)
 ; get patient data from ORM message
"RTN","SAMIORM",279,0)
 new cnt set cnt=0
"RTN","SAMIORM",280,0)
 for  do  quit:'cnt
"RTN","SAMIORM",281,0)
 . set cnt=$order(HLARR(cnt))
"RTN","SAMIORM",282,0)
 . quit:'cnt
"RTN","SAMIORM",283,0)
 . ;
"RTN","SAMIORM",284,0)
 . new segment set segment=HLARR(cnt)
"RTN","SAMIORM",285,0)
 . new SEG set SEG=$piece(HLARR(cnt),HL("FS"))
"RTN","SAMIORM",286,0)
 . if SEG="PID" do PID(segment,.fields)
"RTN","SAMIORM",287,0)
 . if SEG="PV1" do PV1(segment,.fields)
"RTN","SAMIORM",288,0)
 . if SEG="ORC" do ORC(segment,.fields)
"RTN","SAMIORM",289,0)
 . if SEG="OBR" do OBR(segment,.fields)
"RTN","SAMIORM",290,0)
 . quit
"RTN","SAMIORM",291,0)
 ;
"RTN","SAMIORM",292,0)
 merge ^KBAP("SAMIORM","fields")=fields
"RTN","SAMIORM",293,0)
 ;
"RTN","SAMIORM",294,0)
 ;
"RTN","SAMIORM",295,0)
 ;@stanza 3 termination
"RTN","SAMIORM",296,0)
 ;
"RTN","SAMIORM",297,0)
 quit  ; end of PARSEMSG
"RTN","SAMIORM",298,0)
 ;
"RTN","SAMIORM",299,0)
 ;
"RTN","SAMIORM",300,0)
 ;
"RTN","SAMIORM",301,0)
PID(segment,fields) ; get patient data from PID segment
"RTN","SAMIORM",302,0)
 ;
"RTN","SAMIORM",303,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORM",304,0)
 ;
"RTN","SAMIORM",305,0)
 ;;private;procedure;clean;silent;sac
"RTN","SAMIORM",306,0)
 ;@falls-thru-to
"RTN","SAMIORM",307,0)
 ; ORMADDR
"RTN","SAMIORM",308,0)
 ;@called-by
"RTN","SAMIORM",309,0)
 ; PARSEMSG
"RTN","SAMIORM",310,0)
 ;@calls
"RTN","SAMIORM",311,0)
 ; $$UP^XLFSTR
"RTN","SAMIORM",312,0)
 ;@input
"RTN","SAMIORM",313,0)
 ; .segment = PID segment of hl7 message
"RTN","SAMIORM",314,0)
 ; ]INFS = field separator
"RTN","SAMIORM",315,0)
 ; ]INCC = subfield separator
"RTN","SAMIORM",316,0)
 ;@output
"RTN","SAMIORM",317,0)
 ; .fields = fields array
"RTN","SAMIORM",318,0)
 ; ^KBAP = debug array
"RTN","SAMIORM",319,0)
 ;
"RTN","SAMIORM",320,0)
 ;
"RTN","SAMIORM",321,0)
 ;@stanza 2 get patient id #s
"RTN","SAMIORM",322,0)
 ;
"RTN","SAMIORM",323,0)
 set ^KBAP("SAMIORM","fields","PID","segment")=segment
"RTN","SAMIORM",324,0)
 ;
"RTN","SAMIORM",325,0)
 set fields("icn")="" ; not currently using integration control #
"RTN","SAMIORM",326,0)
 set fields("ssn")=$piece($piece(segment,INFS,4),INCC)
"RTN","SAMIORM",327,0)
 ;
"RTN","SAMIORM",328,0)
 ;
"RTN","SAMIORM",329,0)
 ;@stanza 3 get patient name
"RTN","SAMIORM",330,0)
 ;
"RTN","SAMIORM",331,0)
 new name set name=$$UP^XLFSTR($piece(segment,INFS,6)) ; full upper
"RTN","SAMIORM",332,0)
 new lname set lname=$piece(name,INCC) ; last
"RTN","SAMIORM",333,0)
 new fname set fname=$piece(name,INCC,2) ; first
"RTN","SAMIORM",334,0)
 ;
"RTN","SAMIORM",335,0)
 new mname set mname="" ; middle
"RTN","SAMIORM",336,0)
 if $length(name,INCC)>2 set mname=$piece(name,INCC,3)
"RTN","SAMIORM",337,0)
 ;
"RTN","SAMIORM",338,0)
 new suffix set suffix="" ; suffix, e.g., JR, 3RD, etc.
"RTN","SAMIORM",339,0)
 if $length(name,INCC)>3 set suffix=$piece(name,INCC,4)
"RTN","SAMIORM",340,0)
 ;
"RTN","SAMIORM",341,0)
 if $length(mname) set fname=fname_" "_mname
"RTN","SAMIORM",342,0)
 if $length(suffix) set lname=lname_" "_suffix
"RTN","SAMIORM",343,0)
 set name=lname_","_fname ; replace full
"RTN","SAMIORM",344,0)
 ;
"RTN","SAMIORM",345,0)
 set fields("saminame")=name
"RTN","SAMIORM",346,0)
 set fields("sinamef")=fname
"RTN","SAMIORM",347,0)
 set fields("sinamel")=lname
"RTN","SAMIORM",348,0)
 ;
"RTN","SAMIORM",349,0)
 ;
"RTN","SAMIORM",350,0)
 ;@stanza 4 get other patient demographics
"RTN","SAMIORM",351,0)
 ;
"RTN","SAMIORM",352,0)
 if $length(fields("ssn")),$length(fields("saminame")) do
"RTN","SAMIORM",353,0)
 . set fields("last5")=$extract(fields("saminame"))_$extract(fields("ssn"),6,9)
"RTN","SAMIORM",354,0)
 . set ^KBAP("SAMIORM","MadeLast5")=$get(fields("last5"))
"RTN","SAMIORM",355,0)
 . quit
"RTN","SAMIORM",356,0)
 ;
"RTN","SAMIORM",357,0)
 set fields("sbdob")=$piece(segment,INFS,8)
"RTN","SAMIORM",358,0)
 set fields("sex")=$piece(segment,INFS,9)
"RTN","SAMIORM",359,0)
 ;
"RTN","SAMIORM",360,0)
 ;
"RTN","SAMIORM",361,0)
ORMADDR ;@stanza 5 get address
"RTN","SAMIORM",362,0)
 ;
"RTN","SAMIORM",363,0)
 ;@falls-thru-from
"RTN","SAMIORM",364,0)
 ; PID
"RTN","SAMIORM",365,0)
 ;@called-by none
"RTN","SAMIORM",366,0)
 ;@calls none
"RTN","SAMIORM",367,0)
 ;
"RTN","SAMIORM",368,0)
 set fields("ORM",invdt,"fulladdress")=$piece(segment,INFS,12)
"RTN","SAMIORM",369,0)
 ;
"RTN","SAMIORM",370,0)
 set fields("address1")=$piece($piece(segment,INFS,12),INCC)
"RTN","SAMIORM",371,0)
 set fields("city")=$piece($piece(segment,INFS,12),INCC,3)
"RTN","SAMIORM",372,0)
 set fields("state")=$piece($piece(segment,INFS,12),INCC,4)
"RTN","SAMIORM",373,0)
 set fields("zip")=$piece($piece(segment,INFS,12),INCC,5)
"RTN","SAMIORM",374,0)
 set fields("phone")=$piece(segment,INFS,14)
"RTN","SAMIORM",375,0)
 ; set fields("ssn")=$piece(segment,INFS,20)
"RTN","SAMIORM",376,0)
 ;
"RTN","SAMIORM",377,0)
 ;
"RTN","SAMIORM",378,0)
 ;@stanza 6 termination
"RTN","SAMIORM",379,0)
 ;
"RTN","SAMIORM",380,0)
 quit  ; end of PID-ORMADDR
"RTN","SAMIORM",381,0)
 ;
"RTN","SAMIORM",382,0)
 ;
"RTN","SAMIORM",383,0)
 ;
"RTN","SAMIORM",384,0)
PV1(segment,fields) ; get patient data from PV1 segment
"RTN","SAMIORM",385,0)
 ;
"RTN","SAMIORM",386,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORM",387,0)
 ;
"RTN","SAMIORM",388,0)
 ;;private;procedure;clean;silent;sac
"RTN","SAMIORM",389,0)
 ;@called-by
"RTN","SAMIORM",390,0)
 ; PARSEMSG
"RTN","SAMIORM",391,0)
 ;@calls none
"RTN","SAMIORM",392,0)
 ;@input [tbd]
"RTN","SAMIORM",393,0)
 ; .segment = PV1 segment of hl7 message
"RTN","SAMIORM",394,0)
 ; ]INFS = field separator
"RTN","SAMIORM",395,0)
 ; ]INCC = subfield separator
"RTN","SAMIORM",396,0)
 ;@output [tbd]
"RTN","SAMIORM",397,0)
 ; .fields = fields array
"RTN","SAMIORM",398,0)
 ; ^KBAP = debug array
"RTN","SAMIORM",399,0)
 ;
"RTN","SAMIORM",400,0)
 ;
"RTN","SAMIORM",401,0)
 ;@stanza 2 get patient data
"RTN","SAMIORM",402,0)
 ;
"RTN","SAMIORM",403,0)
 set ^KBAP("SAMIORM","fields","PIV","segment")=segment
"RTN","SAMIORM",404,0)
 ;
"RTN","SAMIORM",405,0)
 set fields("ORM",invdt,"patientclass")=$piece(segment,INFS,3)
"RTN","SAMIORM",406,0)
 set fields("ORM",invdt,"assignedlocation")=$piece(segment,INFS,4)
"RTN","SAMIORM",407,0)
 set fields("ORM",invdt,"providerien")=$piece($piece(segment,INFS,9),INCC)
"RTN","SAMIORM",408,0)
 set fields("ORM",invdt,"providernm")=$translate($piece($piece(segment,INFS,9),INCC,2,4),"^",",")
"RTN","SAMIORM",409,0)
 ;
"RTN","SAMIORM",410,0)
 ;
"RTN","SAMIORM",411,0)
 ;@stanza 3 termination
"RTN","SAMIORM",412,0)
 ;
"RTN","SAMIORM",413,0)
 quit  ; end of PV1
"RTN","SAMIORM",414,0)
 ;
"RTN","SAMIORM",415,0)
 ;
"RTN","SAMIORM",416,0)
 ;
"RTN","SAMIORM",417,0)
ORC(segment,fields) ; get patient data from ORC segment
"RTN","SAMIORM",418,0)
 ;
"RTN","SAMIORM",419,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORM",420,0)
 ;
"RTN","SAMIORM",421,0)
 ;;private;procedure;clean;silent;sac
"RTN","SAMIORM",422,0)
 ;@called-by
"RTN","SAMIORM",423,0)
 ; PARSEMSG
"RTN","SAMIORM",424,0)
 ;@calls none
"RTN","SAMIORM",425,0)
 ;@input [tbd]
"RTN","SAMIORM",426,0)
 ; .segment = ORC segment of hl7 message
"RTN","SAMIORM",427,0)
 ; ]INFS = field separator
"RTN","SAMIORM",428,0)
 ;@output [tbd]
"RTN","SAMIORM",429,0)
 ; .fields = fields array
"RTN","SAMIORM",430,0)
 ; ^KBAP = debug array
"RTN","SAMIORM",431,0)
 ;
"RTN","SAMIORM",432,0)
 ;
"RTN","SAMIORM",433,0)
 ;@stanza 2 get patient data
"RTN","SAMIORM",434,0)
 ;
"RTN","SAMIORM",435,0)
 set ^KBAP("SAMIORM","fields","ORC","segment")=segment
"RTN","SAMIORM",436,0)
 ;
"RTN","SAMIORM",437,0)
 set fields("ORM",invdt,"ordercontrol")=$piece(segment,INFS,2)
"RTN","SAMIORM",438,0)
 set fields("ORM",invdt,"ordernumber")=$piece(segment,INFS,3)
"RTN","SAMIORM",439,0)
 set fields("ORM",invdt,"orderstatus")=$piece(segment,INFS,6)
"RTN","SAMIORM",440,0)
 set fields("ORM",invdt,"transactiondt")=$piece(segment,INFS,10)
"RTN","SAMIORM",441,0)
 set fields("ORM",invdt,"ordereffectivedt")=$piece(segment,INFS,16)
"RTN","SAMIORM",442,0)
 ;
"RTN","SAMIORM",443,0)
 ;
"RTN","SAMIORM",444,0)
 ;@stanza 3 termination
"RTN","SAMIORM",445,0)
 ;
"RTN","SAMIORM",446,0)
 quit  ; end of ORC
"RTN","SAMIORM",447,0)
 ;
"RTN","SAMIORM",448,0)
 ;
"RTN","SAMIORM",449,0)
 ;
"RTN","SAMIORM",450,0)
OBR(segment,fields) ; get patient data from OBR segment
"RTN","SAMIORM",451,0)
 ;
"RTN","SAMIORM",452,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORM",453,0)
 ;
"RTN","SAMIORM",454,0)
 ;;private;procedure;clean;silent;sac
"RTN","SAMIORM",455,0)
 ;@called-by
"RTN","SAMIORM",456,0)
 ; PARSEMSG
"RTN","SAMIORM",457,0)
 ;@calls none
"RTN","SAMIORM",458,0)
 ;@input [tbd]
"RTN","SAMIORM",459,0)
 ; .segment = OBR segment of hl7 message
"RTN","SAMIORM",460,0)
 ; ]INFS = field separator
"RTN","SAMIORM",461,0)
 ; ]INCC = subfield separator
"RTN","SAMIORM",462,0)
 ;@output [tbd]
"RTN","SAMIORM",463,0)
 ; .fields = fields array
"RTN","SAMIORM",464,0)
 ; ^KBAP = debug array
"RTN","SAMIORM",465,0)
 ;
"RTN","SAMIORM",466,0)
 ;
"RTN","SAMIORM",467,0)
 ;@stanza 2 get patient data
"RTN","SAMIORM",468,0)
 ;
"RTN","SAMIORM",469,0)
 set ^KBAP("SAMIORM","fields","OBR","segment")=segment
"RTN","SAMIORM",470,0)
 ;
"RTN","SAMIORM",471,0)
 set fields("ORM",invdt,"order")=$piece($piece(segment,INFS,5),INCC)
"RTN","SAMIORM",472,0)
 ;
"RTN","SAMIORM",473,0)
 set fields("ORM",invdt,"siteid")=$piece($piece($piece(segment,INFS,5),INCC),"_")
"RTN","SAMIORM",474,0)
 set fields("siteid")=$piece($piece($piece(segment,INFS,5),INCC),"_")
"RTN","SAMIORM",475,0)
 ;
"RTN","SAMIORM",476,0)
 set fields("ORM",invdt,"order2")=$piece($piece(segment,INFS,5),INCC,2)
"RTN","SAMIORM",477,0)
 ;
"RTN","SAMIORM",478,0)
 ;
"RTN","SAMIORM",479,0)
 ;@stanza 3 termination
"RTN","SAMIORM",480,0)
 ;
"RTN","SAMIORM",481,0)
 quit  ; end of OBR
"RTN","SAMIORM",482,0)
 ;
"RTN","SAMIORM",483,0)
 ;
"RTN","SAMIORM",484,0)
 ;
"RTN","SAMIORM",485,0)
CAMELCAS(str) ; convert string to camel case
"RTN","SAMIORM",486,0)
 ;
"RTN","SAMIORM",487,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORM",488,0)
 ;
"RTN","SAMIORM",489,0)
 ;;private;function;clean;silent;sac
"RTN","SAMIORM",490,0)
 ;@called-by
"RTN","SAMIORM",491,0)
 ; PID
"RTN","SAMIORM",492,0)
 ;@calls
"RTN","SAMIORM",493,0)
 ; $$LOW^XLFSTR
"RTN","SAMIORM",494,0)
 ; $$UP^XLFSTR
"RTN","SAMIORM",495,0)
 ;@input [tbd]
"RTN","SAMIORM",496,0)
 ; str = string to convert
"RTN","SAMIORM",497,0)
 ;@output = string in camel case
"RTN","SAMIORM",498,0)
 ;
"RTN","SAMIORM",499,0)
 ;
"RTN","SAMIORM",500,0)
 ;@stanza 2 convert string
"RTN","SAMIORM",501,0)
 ;
"RTN","SAMIORM",502,0)
 if $get(str)="" quit str
"RTN","SAMIORM",503,0)
 set str=$$LOW^XLFSTR(str)
"RTN","SAMIORM",504,0)
 set str=$$UP^XLFSTR($extract(str,1))_$extract(str,2,$length(str))
"RTN","SAMIORM",505,0)
 ;
"RTN","SAMIORM",506,0)
 ;
"RTN","SAMIORM",507,0)
 ;@stanza 3 termination
"RTN","SAMIORM",508,0)
 ;
"RTN","SAMIORM",509,0)
 quit str ; end of $$CAMELCAS
"RTN","SAMIORM",510,0)
 ;
"RTN","SAMIORM",511,0)
 ;
"RTN","SAMIORM",512,0)
 ;
"RTN","SAMIORM",513,0)
 ;@section 4 test subroutine
"RTN","SAMIORM",514,0)
 ;
"RTN","SAMIORM",515,0)
 ;
"RTN","SAMIORM",516,0)
 ;
"RTN","SAMIORM",517,0)
TEST ; test hli EN^SAMIORM
"RTN","SAMIORM",518,0)
 ;
"RTN","SAMIORM",519,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORM",520,0)
 ;
"RTN","SAMIORM",521,0)
 ;;dmi-test;procedure;clean;silent;sac
"RTN","SAMIORM",522,0)
 ;@called-by
"RTN","SAMIORM",523,0)
 ; PID
"RTN","SAMIORM",524,0)
 ;@calls
"RTN","SAMIORM",525,0)
 ; $$LOW^XLFSTR
"RTN","SAMIORM",526,0)
 ; $$UP^XLFSTR
"RTN","SAMIORM",527,0)
 ;@input [tbd]
"RTN","SAMIORM",528,0)
 ; str = string to convert
"RTN","SAMIORM",529,0)
 ;@output = string in camel case
"RTN","SAMIORM",530,0)
 ;
"RTN","SAMIORM",531,0)
 ;
"RTN","SAMIORM",532,0)
 ;@stanza 2 convert string
"RTN","SAMIORM",533,0)
 ;
"RTN","SAMIORM",534,0)
 kill HLARR ; hl7 test orm msg
"RTN","SAMIORM",535,0)
 set HLARR(1)="MSH|^~\&|MCAR-INST|VISTA|INST-MCAR|VAPALS|20200616135751-0700||ORM^O01|6442288610689|P|2.3|||||USA"
"RTN","SAMIORM",536,0)
 set HLARR(2)="PID|1||000002341||ZZTEST^MACHO^^^^^L||19271106000000|M|||7726 W ORCHID ST^^PHOENIX^AZ^85017||||||||000002341|"
"RTN","SAMIORM",537,0)
 set HLARR(3)="PV1||O|PHX-PULM RN LSS PHONE|||||244088^GARCIA^DANIEL^P"
"RTN","SAMIORM",538,0)
 set HLARR(4)="ORC|NW|3200616135751|||NW||||20200616135751||||||20200616135751"
"RTN","SAMIORM",539,0)
 set HLARR(5)="OBR||||PHO_LUNG^LUNG|"
"RTN","SAMIORM",540,0)
 ;
"RTN","SAMIORM",541,0)
 do HLENV^SAMIORU("MCAR ORM SERVER") ; set hl7 variables for testing
"RTN","SAMIORM",542,0)
 ;
"RTN","SAMIORM",543,0)
 set HLNEXT="D HLNEXT^HLCSUTL" ; get-next-line qwik
"RTN","SAMIORM",544,0)
 set HLQUIT=0 ; curent ien of "IN" wp field in msg array in file 771
"RTN","SAMIORM",545,0)
 ;
"RTN","SAMIORM",546,0)
 do EN ; parse ORM msg > patient-lookup graph
"RTN","SAMIORM",547,0)
 ;
"RTN","SAMIORM",548,0)
 ;
"RTN","SAMIORM",549,0)
 ;@stanza 3 termination
"RTN","SAMIORM",550,0)
 ;
"RTN","SAMIORM",551,0)
 quit  ; end of TEST
"RTN","SAMIORM",552,0)
 ;
"RTN","SAMIORM",553,0)
 ;
"RTN","SAMIORM",554,0)
 ;
"RTN","SAMIORM",555,0)
EOR ; end of routine SAMIORM
"RTN","SAMIORR")
0^48^B365219423
"RTN","SAMIORR",1,0)
SAMIORR ;ven/lgc&arc - hl7: ORR enrollment respons ;2021-06-04T13:56Z
"RTN","SAMIORR",2,0)
 ;;18.0;SAMI;**11**;2020-01;Build 1
"RTN","SAMIORR",3,0)
 ;;1.18.0.11+i11
"RTN","SAMIORR",4,0)
 ;
"RTN","SAMIORR",5,0)
 ; SAMIORR builds and sends an outgoing Order Acknowledgment (ORR)
"RTN","SAMIORR",6,0)
 ; response message to the Vista production system.
"RTN","SAMIORR",7,0)
 ; SAMIHL7 contains the development log for the SAMIOR* routines.
"RTN","SAMIORR",8,0)
 ;
"RTN","SAMIORR",9,0)
 quit  ; no entry from top
"RTN","SAMIORR",10,0)
 ;
"RTN","SAMIORR",11,0)
 ;
"RTN","SAMIORR",12,0)
 ;
"RTN","SAMIORR",13,0)
 ;@section 0 primary development
"RTN","SAMIORR",14,0)
 ;
"RTN","SAMIORR",15,0)
 ;
"RTN","SAMIORR",16,0)
 ;
"RTN","SAMIORR",17,0)
 ;@routine-credits
"RTN","SAMIORR",18,0)
 ;@primary-dev Larry G. Carlson (lgc)
"RTN","SAMIORR",19,0)
 ; larry@fiscientific.com
"RTN","SAMIORR",20,0)
 ;@primary-dev-org Vista Expertise Network (ven)
"RTN","SAMIORR",21,0)
 ; http://vistaexpertise.net
"RTN","SAMIORR",22,0)
 ;@copyright 2020/2021, lgc, all rights reserved
"RTN","SAMIORR",23,0)
 ;@license see routine SAMIUL
"RTN","SAMIORR",24,0)
 ;
"RTN","SAMIORR",25,0)
 ;@last-updated 2021-06-04T13:56Z
"RTN","SAMIORR",26,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMIORR",27,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMIORR",28,0)
 ;@submodule HL7 interface - SAMIHL* & SAMIOR*
"RTN","SAMIORR",29,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMIORR",30,0)
 ;@version 1.18.0.11+i11
"RTN","SAMIORR",31,0)
 ;@release-date 2020-01
"RTN","SAMIORR",32,0)
 ;@patch-list **11**
"RTN","SAMIORR",33,0)
 ;
"RTN","SAMIORR",34,0)
 ;@additional-dev Alexis R. Carlson (arc)
"RTN","SAMIORR",35,0)
 ; arc@vistaexpertise.net
"RTN","SAMIORR",36,0)
 ;@additional-dev Frederick D. S. Marshall (toad)
"RTN","SAMIORR",37,0)
 ; toad@vistaexpertise.net
"RTN","SAMIORR",38,0)
 ;
"RTN","SAMIORR",39,0)
 ;@routine-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMIORR",40,0)
 ; see routine SAMIHL7
"RTN","SAMIORR",41,0)
 ;
"RTN","SAMIORR",42,0)
 ;@contents
"RTN","SAMIORR",43,0)
 ; $$EN-DFN-MSGTYPE-BUILD build & send ORR enrollment response
"RTN","SAMIORR",44,0)
 ;
"RTN","SAMIORR",45,0)
 ; MSGTYP table of readable message types
"RTN","SAMIORR",46,0)
 ; HLENV set HL7 variables
"RTN","SAMIORR",47,0)
 ; $$SENDHL7 send HL7 message
"RTN","SAMIORR",48,0)
 ;
"RTN","SAMIORR",49,0)
 ; PID build PID segment for ORR msg
"RTN","SAMIORR",50,0)
 ; ORC build ORC segment for ORR msg
"RTN","SAMIORR",51,0)
 ; OBR build OBR segment for ORR msg
"RTN","SAMIORR",52,0)
 ; OBXPRC build OBX procedure segment for ORR msg
"RTN","SAMIORR",53,0)
 ; OBXMOD build OBX modifier segment for ORR msg
"RTN","SAMIORR",54,0)
 ; NTE build NTE segments for ORR msg
"RTN","SAMIORR",55,0)
 ; ADD2MSG add segment to OUTHL array
"RTN","SAMIORR",56,0)
 ;
"RTN","SAMIORR",57,0)
 ; TSTHL test generating NTE
"RTN","SAMIORR",58,0)
 ; TESTPID test generating PID
"RTN","SAMIORR",59,0)
 ; TEST test hli $$EN^SAMIORR
"RTN","SAMIORR",60,0)
 ; TEST1 build test message
"RTN","SAMIORR",61,0)
 ;
"RTN","SAMIORR",62,0)
 ;
"RTN","SAMIORR",63,0)
 ;
"RTN","SAMIORR",64,0)
 ;@section 1 hl7 protocol & applications that hli $$EN^SAMIORR calls
"RTN","SAMIORR",65,0)
 ;
"RTN","SAMIORR",66,0)
 ;
"RTN","SAMIORR",67,0)
 ;
"RTN","SAMIORR",68,0)
 ; SAMI HL7 ORR protocols
"RTN","SAMIORR",69,0)
 ;
"RTN","SAMIORR",70,0)
 ; NAME: LSS ENROLL ORR                 TYPE: event driver
"RTN","SAMIORR",71,0)
 ;   CREATOR: CARLSON,LARRY G              SENDING APPLICATION: VAPALS-ELCAP APP
"RTN","SAMIORR",72,0)
 ;   TRANSACTION MESSAGE TYPE: ORR         EVENT TYPE: O02
"RTN","SAMIORR",73,0)
 ;   ACCEPT ACK CODE: AL                   APPLICATION ACK TYPE: NE
"RTN","SAMIORR",74,0)
 ;   VERSION ID: 2.4
"RTN","SAMIORR",75,0)
 ; SUBSCRIBERS: LSS ENROLL ORR SUB
"RTN","SAMIORR",76,0)
 ; 
"RTN","SAMIORR",77,0)
 ; 
"RTN","SAMIORR",78,0)
 ; NAME: LSS ENROLL ORR SUB                TYPE: subscriber
"RTN","SAMIORR",79,0)
 ;   CREATOR: CARLSON,LARRY G              RECEIVING APPLICATION: VISTA-SVR
"RTN","SAMIORR",80,0)
 ;   EVENT TYPE: O01                       LOGICAL LINK: VA-EL-SRV1
"RTN","SAMIORR",81,0)
 ;   RESPONSE MESSAGE TYPE: ACK            SENDING FACILITY REQUIRED?: YES
"RTN","SAMIORR",82,0)
 ;   RECEIVING FACILITY REQUIRED?: YES     SECURITY REQUIRED?: NO
"RTN","SAMIORR",83,0)
 ;
"RTN","SAMIORR",84,0)
 ;
"RTN","SAMIORR",85,0)
 ;
"RTN","SAMIORR",86,0)
 ; SAMI HL7 ORR applications
"RTN","SAMIORR",87,0)
 ;
"RTN","SAMIORR",88,0)
 ; NAME: VAPALS-ELCAP APP               ACTIVE/INACTIVE: ACTIVE
"RTN","SAMIORR",89,0)
 ;   FACILITY NAME: VISTA HEALTH CARE      MAIL GROUP: SAMI ORM ORR
"RTN","SAMIORR",90,0)
 ;   COUNTRY CODE: USA                     HL7 ENCODING CHARACTERS: ~&|\
"RTN","SAMIORR",91,0)
 ;   HL7 FIELD SEPARATOR: ^
"RTN","SAMIORR",92,0)
 ; 
"RTN","SAMIORR",93,0)
 ; 
"RTN","SAMIORR",94,0)
 ; NAME: VISTA-SVR                         ACTIVE/INACTIVE: ACTIVE
"RTN","SAMIORR",95,0)
 ;   FACILITY NAME: PHOENIX                MAIL GROUP: SAMI ORM ORR
"RTN","SAMIORR",96,0)
 ;   COUNTRY CODE: USA                     HL7 ENCODING CHARACTERS: ~&|\
"RTN","SAMIORR",97,0)
 ;   HL7 FIELD SEPARATOR: ^
"RTN","SAMIORR",98,0)
 ;
"RTN","SAMIORR",99,0)
 ;
"RTN","SAMIORR",100,0)
 ;
"RTN","SAMIORR",101,0)
 ; SAMI HL logical link [hmm, cf PHX ORU]
"RTN","SAMIORR",102,0)
 ;
"RTN","SAMIORR",103,0)
 ; NODE: VA-EL-SRV1                        LLP TYPE: TCP
"RTN","SAMIORR",104,0)
 ;   DEVICE TYPE: Single-threaded Server   STATE: Halting
"RTN","SAMIORR",105,0)
 ;   AUTOSTART: Enabled                    TIME STOPPED: MAY 11, 2020@14:16:29
"RTN","SAMIORR",106,0)
 ;   SHUTDOWN LLP ?: YES                   QUEUE SIZE: 10
"RTN","SAMIORR",107,0)
 ;  DESCRIPTION:   Listener for ORM messages
"RTN","SAMIORR",108,0)
 ;   RE-TRANSMISSION ATTEMPTS: 3           READ TIMEOUT: 120
"RTN","SAMIORR",109,0)
 ;   ACK TIMEOUT: 120                      EXCEED RE-TRANSMIT ACTION: ignore
"RTN","SAMIORR",110,0)
 ;   TCP/IP PORT: 5500                     TCP/IP SERVICE TYPE: SINGLE LISTENER
"RTN","SAMIORR",111,0)
 ;   PERSISTENT: NO                        IN QUEUE BACK POINTER: 18
"RTN","SAMIORR",112,0)
 ;   IN QUEUE FRONT POINTER: 18            OUT QUEUE BACK POINTER: 20
"RTN","SAMIORR",113,0)
 ;   OUT QUEUE FRONT POINTER: 18
"RTN","SAMIORR",114,0)
 ;
"RTN","SAMIORR",115,0)
 ;
"RTN","SAMIORR",116,0)
 ;
"RTN","SAMIORR",117,0)
 ;@section 2 main hli $$EN^SAMIORR
"RTN","SAMIORR",118,0)
 ;
"RTN","SAMIORR",119,0)
 ;
"RTN","SAMIORR",120,0)
 ;
"RTN","SAMIORR",121,0)
 ;@hli $$EN^SAMIORR
"RTN","SAMIORR",122,0)
EN(SNDPROT,filter,notenbr,msgid) ; build & send ORR enrollment response
"RTN","SAMIORR",123,0)
 ;
"RTN","SAMIORR",124,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORR",125,0)
 ;
"RTN","SAMIORR",126,0)
 ;;hli;function;clean;silent;sac;0% tests
"RTN","SAMIORR",127,0)
 ;@called-by
"RTN","SAMIORR",128,0)
 ; none: not currently active, latent SAMi feature
"RTN","SAMIORR",129,0)
 ;@calls
"RTN","SAMIORR",130,0)
 ; $$setroot^%wd
"RTN","SAMIORR",131,0)
 ; HLENV
"RTN","SAMIORR",132,0)
 ; PID
"RTN","SAMIORR",133,0)
 ; ORC
"RTN","SAMIORR",134,0)
 ; OBR
"RTN","SAMIORR",135,0)
 ; OBXPRC
"RTN","SAMIORR",136,0)
 ; OBXMOD
"RTN","SAMIORR",137,0)
 ; NTE
"RTN","SAMIORR",138,0)
 ; $$SENDHL7
"RTN","SAMIORR",139,0)
 ;@input
"RTN","SAMIORR",140,0)
 ; SNDPROT = name of sending protocol, e.g. LSS ENROLL ORR
"RTN","SAMIORR",141,0)
 ; notenmbr = note # in vapals-patients graph
"RTN","SAMIORR",142,0)
 ;@thruput
"RTN","SAMIORR",143,0)
 ; .filter = array by reference
"RTN","SAMIORR",144,0)
 ;  filter("sid") = sid, e.g. XXX00034
"RTN","SAMIORR",145,0)
 ;  filter("key") = sid, e.g. siform-2019-03-05"
"RTN","SAMIORR",146,0)
 ;  filter("notenmbr") = note # (Cache instance)
"RTN","SAMIORR",147,0)
 ;@output = HL7 msg id, or -1 = error
"RTN","SAMIORR",148,0)
 ; HL7 ORR message built & sent
"RTN","SAMIORR",149,0)
 ; .msgid = HL7 message ID [no longer works]
"RTN","SAMIORR",150,0)
 ;@other
"RTN","SAMIORR",151,0)
 ; *** not in use right now
"RTN","SAMIORR",152,0)
 ; msgtype = 1 = LSS enrollment response
"RTN","SAMIORR",153,0)
 ;           2 = LSS pre-enrollment discussion
"RTN","SAMIORR",154,0)
 ;           3 = LSS intake
"RTN","SAMIORR",155,0)
 ;           4 = LSS CT results follow-up
"RTN","SAMIORR",156,0)
 ;           5 = LSS communication with veteran
"RTN","SAMIORR",157,0)
 ;
"RTN","SAMIORR",158,0)
 ;
"RTN","SAMIORR",159,0)
 ;@stanza 2 setup
"RTN","SAMIORR",160,0)
 ;
"RTN","SAMIORR",161,0)
 if $get(SNDPROT)="" set SNDPROT="LSS ENROLL ORR"
"RTN","SAMIORR",162,0)
 if '$data(^ORD(101,"B",SNDPROT)) quit -1
"RTN","SAMIORR",163,0)
 ;
"RTN","SAMIORR",164,0)
 new rootpl set rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIORR",165,0)
 set filter("rootpl")=rootpl
"RTN","SAMIORR",166,0)
 ;
"RTN","SAMIORR",167,0)
 new rootvp set rootvp=$$setroot^%wd("vapals-patients")
"RTN","SAMIORR",168,0)
 set filter("rootvp")=rootvp
"RTN","SAMIORR",169,0)
 ;
"RTN","SAMIORR",170,0)
 if $get(filter("sid"))="" quit -1
"RTN","SAMIORR",171,0)
 set sid=$get(filter("sid"))
"RTN","SAMIORR",172,0)
 if '$data(@rootvp@("graph",sid)) quit -1
"RTN","SAMIORR",173,0)
 ;
"RTN","SAMIORR",174,0)
 if $get(filter("key"))="" quit -1
"RTN","SAMIORR",175,0)
 set key=$get(filter("key"))
"RTN","SAMIORR",176,0)
 if '$data(@rootvp@("graph",sid,key)) quit -1
"RTN","SAMIORR",177,0)
 ;
"RTN","SAMIORR",178,0)
 ;
"RTN","SAMIORR",179,0)
DFN ;@stanza 3 find vpien & plien from sid
"RTN","SAMIORR",180,0)
 ;
"RTN","SAMIORR",181,0)
 new vpien,plien
"RTN","SAMIORR",182,0)
 ; in Cache have to rmove XXX9 for manual entries
"RTN","SAMIORR",183,0)
 ;
"RTN","SAMIORR",184,0)
 ; set vpien=+$extract(sid,5,$length(sid))
"RTN","SAMIORR",185,0)
 ; set filter("vpien")=vpien
"RTN","SAMIORR",186,0)
 ;
"RTN","SAMIORR",187,0)
 set vpien=+$extract(sid,4,$length(sid))
"RTN","SAMIORR",188,0)
 set filter("vpien")=vpien
"RTN","SAMIORR",189,0)
 if 'vpien quit -1
"RTN","SAMIORR",190,0)
 ;
"RTN","SAMIORR",191,0)
 set plien=$order(@rootpl@("dfn",vpien,0))
"RTN","SAMIORR",192,0)
 set filter("plien")=plien
"RTN","SAMIORR",193,0)
 if 'plien quit -1
"RTN","SAMIORR",194,0)
 ;
"RTN","SAMIORR",195,0)
 ;
"RTN","SAMIORR",196,0)
MSGTYPE ;@stanza 4 translate message type to readable string
"RTN","SAMIORR",197,0)
 ;
"RTN","SAMIORR",198,0)
 set msgtype=+$piece($get(msgtype),".")
"RTN","SAMIORR",199,0)
 if msgtype<1!(msgtype>5) set msgtype=1
"RTN","SAMIORR",200,0)
 set msgtype=$piece($text(MSGTYP+msgtype),";;",2)
"RTN","SAMIORR",201,0)
 ;
"RTN","SAMIORR",202,0)
 ;
"RTN","SAMIORR",203,0)
BUILD ;@stanza 5 build & send hl7 msg
"RTN","SAMIORR",204,0)
 ;
"RTN","SAMIORR",205,0)
 ; get HL7 vars & escape sequences to build msg
"RTN","SAMIORR",206,0)
 new HL,HLA,HLECH,HLQ,OUTHL,HLFS,HLCC ; set by HLENV
"RTN","SAMIORR",207,0)
 do HLENV(SNDPROT)
"RTN","SAMIORR",208,0)
 ;
"RTN","SAMIORR",209,0)
 ; build segments in OUTHL
"RTN","SAMIORR",210,0)
 do PID(.filter,.OUTHL)
"RTN","SAMIORR",211,0)
 do ORC(.filter,.OUTHL)
"RTN","SAMIORR",212,0)
 do OBR(.filter,.OUTHL)
"RTN","SAMIORR",213,0)
 do OBXPRC(.filter,.OUTHL)
"RTN","SAMIORR",214,0)
 do OBXMOD(.filter,.OUTHL)
"RTN","SAMIORR",215,0)
 do NTE(.filter,.OUTHL)
"RTN","SAMIORR",216,0)
 ;
"RTN","SAMIORR",217,0)
 ; send msg
"RTN","SAMIORR",218,0)
 new msgid set msgid=$$SENDHL7(.OUTHL)
"RTN","SAMIORR",219,0)
 ;
"RTN","SAMIORR",220,0)
 ;
"RTN","SAMIORR",221,0)
 ;@stanza 6 termination
"RTN","SAMIORR",222,0)
 ;
"RTN","SAMIORR",223,0)
 quit msgid ; end of hli $$EN^SAMIORR
"RTN","SAMIORR",224,0)
 ;
"RTN","SAMIORR",225,0)
 ;
"RTN","SAMIORR",226,0)
 ;
"RTN","SAMIORR",227,0)
 ;@section 3 init & hl7 subroutines
"RTN","SAMIORR",228,0)
 ;
"RTN","SAMIORR",229,0)
 ;
"RTN","SAMIORR",230,0)
 ;
"RTN","SAMIORR",231,0)
MSGTYP ;; table of readable message types [see MSGTYPE above]
"RTN","SAMIORR",232,0)
 ;;LSS enrollment response
"RTN","SAMIORR",233,0)
 ;;LSS pre-enrollment discussion
"RTN","SAMIORR",234,0)
 ;;LSS intake
"RTN","SAMIORR",235,0)
 ;;LSS CT results follow-up
"RTN","SAMIORR",236,0)
 ;;LSS communication with veteran
"RTN","SAMIORR",237,0)
 ;;
"RTN","SAMIORR",238,0)
 ;; ***END***
"RTN","SAMIORR",239,0)
 ;
"RTN","SAMIORR",240,0)
 ;
"RTN","SAMIORR",241,0)
 ;
"RTN","SAMIORR",242,0)
HLENV(SNDPROT) ; set HL7 variables
"RTN","SAMIORR",243,0)
 ;
"RTN","SAMIORR",244,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORR",245,0)
 ;
"RTN","SAMIORR",246,0)
 ;;private;procedure;clean;silent;sac;0% tests
"RTN","SAMIORR",247,0)
 ;@called-by
"RTN","SAMIORR",248,0)
 ; hli $$EN^SAMIORR
"RTN","SAMIORR",249,0)
 ;@calls
"RTN","SAMIORR",250,0)
 ; INIT^HLFNC2
"RTN","SAMIORR",251,0)
 ;@input
"RTN","SAMIORR",252,0)
 ; SNDPROT = name of sending protocol (file #101)
"RTN","SAMIORR",253,0)
 ;  e.g. SNDPROT="PHX ENROLL ORM EVN"
"RTN","SAMIORR",254,0)
 ;@output
"RTN","SAMIORR",255,0)
 ; ]HL
"RTN","SAMIORR",256,0)
 ; ]HLA
"RTN","SAMIORR",257,0)
 ; ]HLECH
"RTN","SAMIORR",258,0)
 ; ]HLQ
"RTN","SAMIORR",259,0)
 ; ]HLFS
"RTN","SAMIORR",260,0)
 ; ]HLCC
"RTN","SAMIORR",261,0)
 ;
"RTN","SAMIORR",262,0)
 ; sets all necessary HL variables for building a message; caller is
"RTN","SAMIORR",263,0)
 ; responsible for newing all output variables
"RTN","SAMIORR",264,0)
 ;
"RTN","SAMIORR",265,0)
 ;
"RTN","SAMIORR",266,0)
 ;@stanza 2 init hl7 variables
"RTN","SAMIORR",267,0)
 ;
"RTN","SAMIORR",268,0)
 new PIEN set PIEN=$order(^ORD(101,"B",SNDPROT,0))
"RTN","SAMIORR",269,0)
 set HL="HLS(""HLS"")"
"RTN","SAMIORR",270,0)
 new INT set INT=1
"RTN","SAMIORR",271,0)
 ;
"RTN","SAMIORR",272,0)
 do INIT^HLFNC2(PIEN,.HL,INT) ; init vars in HL array to build msg
"RTN","SAMIORR",273,0)
 ;
"RTN","SAMIORR",274,0)
 set HLFS=$get(HL("FS"))
"RTN","SAMIORR",275,0)
 set HLECH=$get(HL("ECH"))
"RTN","SAMIORR",276,0)
 set HLCC=$extract(HLECH)
"RTN","SAMIORR",277,0)
 ;
"RTN","SAMIORR",278,0)
 ;
"RTN","SAMIORR",279,0)
 ;@stanza 3 termination
"RTN","SAMIORR",280,0)
 ;
"RTN","SAMIORR",281,0)
 quit  ; end of HLENV
"RTN","SAMIORR",282,0)
 ;
"RTN","SAMIORR",283,0)
 ;
"RTN","SAMIORR",284,0)
 ;
"RTN","SAMIORR",285,0)
SENDHL7(OUTHL) ; send HL7 message
"RTN","SAMIORR",286,0)
 ;
"RTN","SAMIORR",287,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORR",288,0)
 ;
"RTN","SAMIORR",289,0)
 ;;private;function;clean;silent;sac;0% tests
"RTN","SAMIORR",290,0)
 ;@called-by
"RTN","SAMIORR",291,0)
 ; hli $$EN^SAMIORR
"RTN","SAMIORR",292,0)
 ;@calls
"RTN","SAMIORR",293,0)
 ; GENERATE^HLMA
"RTN","SAMIORR",294,0)
 ; ^ZTER
"RTN","SAMIORR",295,0)
 ;@input
"RTN","SAMIORR",296,0)
 ; .OUTHL = array containing message to send
"RTN","SAMIORR",297,0)
 ; ^ORD(101,"B",SNDPROT,*) = protocol ien
"RTN","SAMIORR",298,0)
 ;@output = message ID
"RTN","SAMIORR",299,0)
 ;
"RTN","SAMIORR",300,0)
 ;
"RTN","SAMIORR",301,0)
 ;@stanza 2 call hl7 & send msg
"RTN","SAMIORR",302,0)
 ;
"RTN","SAMIORR",303,0)
 kill HLA("HLS")
"RTN","SAMIORR",304,0)
 merge HLA("HLS")=OUTHL
"RTN","SAMIORR",305,0)
 ;
"RTN","SAMIORR",306,0)
 new HLRESLT
"RTN","SAMIORR",307,0)
 if $data(HLA("HLS")) do
"RTN","SAMIORR",308,0)
 . set HL("MTN")="ORR"
"RTN","SAMIORR",309,0)
 . new HLEID set HLEID=$order(^ORD(101,"B","LSS ENROLL ORR",0))
"RTN","SAMIORR",310,0)
 . new HLARYTYPE set HLARYTYP="LM"
"RTN","SAMIORR",311,0)
 . new HLFORMAT set HLFORMAT=1
"RTN","SAMIORR",312,0)
 . new HLMTIEN set HLMTIEN=""
"RTN","SAMIORR",313,0)
 . new HLP set HLP("PRIORITY")=1
"RTN","SAMIORR",314,0)
 . ;
"RTN","SAMIORR",315,0)
 . do GENERATE^HLMA(HLEID,HLARYTYP,HLFORMAT,.HLRESLT) ; send hl7 msg
"RTN","SAMIORR",316,0)
 . quit
"RTN","SAMIORR",317,0)
 ;
"RTN","SAMIORR",318,0)
 do ^ZTER ; log in vista error log
"RTN","SAMIORR",319,0)
 set msgid=HLRESLT
"RTN","SAMIORR",320,0)
 ;
"RTN","SAMIORR",321,0)
 ;
"RTN","SAMIORR",322,0)
 ;@stanza 3 termination
"RTN","SAMIORR",323,0)
 ;
"RTN","SAMIORR",324,0)
 quit msgid ; end of $$SENDHL7
"RTN","SAMIORR",325,0)
 ;
"RTN","SAMIORR",326,0)
 ;
"RTN","SAMIORR",327,0)
 ;
"RTN","SAMIORR",328,0)
 ;@section 4 hl7 segment subroutines
"RTN","SAMIORR",329,0)
 ;
"RTN","SAMIORR",330,0)
 ;
"RTN","SAMIORR",331,0)
 ;
"RTN","SAMIORR",332,0)
PID(filter,OUTHL) ; build PID segment for ORR msg
"RTN","SAMIORR",333,0)
 ;
"RTN","SAMIORR",334,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORR",335,0)
 ;
"RTN","SAMIORR",336,0)
 ;;private;procedure;clean;silent;sac;0% tests
"RTN","SAMIORR",337,0)
 ;@called-by
"RTN","SAMIORR",338,0)
 ; hli $$EN^SAMIORR
"RTN","SAMIORR",339,0)
 ;@calls
"RTN","SAMIORR",340,0)
 ; $$UP^XLFSTR
"RTN","SAMIORR",341,0)
 ; ADD2MSG
"RTN","SAMIORR",342,0)
 ;@input
"RTN","SAMIORR",343,0)
 ; .filter = fields array
"RTN","SAMIORR",344,0)
 ; ]HLFS = field separator
"RTN","SAMIORR",345,0)
 ; ]HLCC = subfield separator
"RTN","SAMIORR",346,0)
 ; [patient data from patient-lookup graph]
"RTN","SAMIORR",347,0)
 ;@thruput
"RTN","SAMIORR",348,0)
 ; .OUTHL = output hl7 msg array
"RTN","SAMIORR",349,0)
 ;
"RTN","SAMIORR",350,0)
 ; The Patient Identifier segment (PID) is built from fields pulled
"RTN","SAMIORR",351,0)
 ; from initiating ORM message, recorded in vapals-patients graph.
"RTN","SAMIORR",352,0)
 ;
"RTN","SAMIORR",353,0)
 ;
"RTN","SAMIORR",354,0)
 ;@stanza 2 get graph root & subscript
"RTN","SAMIORR",355,0)
 new rootvp set rootvp=$get(filter("rootvp"))
"RTN","SAMIORR",356,0)
 new rootpl set rootpl=$get(filter("rootpl"))
"RTN","SAMIORR",357,0)
 new vpien set vpien=$get(filter("vpien"))
"RTN","SAMIORR",358,0)
 new plien set plien=$get(filter("plien"))
"RTN","SAMIORR",359,0)
 ;
"RTN","SAMIORR",360,0)
 ;@stanza 3 PID-2 patient id - external id
"RTN","SAMIORR",361,0)
 new pid set $piece(pid,HLFS,2)=$get(@rootpl@(plien,"icn"))
"RTN","SAMIORR",362,0)
 ;
"RTN","SAMIORR",363,0)
 ;@stanza 4 PID-3 patient id - internal id
"RTN","SAMIORR",364,0)
 set $piece(pid,HLFS,3)=$get(@rootpl@(plien,"dfn"))_HLCC_"8"_HLCC_"M10"
"RTN","SAMIORR",365,0)
 ;
"RTN","SAMIORR",366,0)
 ;@stanza 5 PID-5 patient name, last^first^middle^suffix^prefix
"RTN","SAMIORR",367,0)
 new name set name=$get(@rootpl@(plien,"saminame"))
"RTN","SAMIORR",368,0)
 set name=$$UP^XLFSTR(name)
"RTN","SAMIORR",369,0)
 set $piece(pid,HLFS,5)=$translate(name,",",HLCC)
"RTN","SAMIORR",370,0)
 ;
"RTN","SAMIORR",371,0)
 ;@stanza 6 PID-7 date & time of birth
"RTN","SAMIORR",372,0)
 set $piece(pid,HLFS,7)=$get(@rootpl@(plien,"sbdob"))
"RTN","SAMIORR",373,0)
 ;
"RTN","SAMIORR",374,0)
 ;@stanza 7 PID-8 sex
"RTN","SAMIORR",375,0)
 set $piece(pid,HLFS,8)=$get(@rootpl@(plien,"sex"))
"RTN","SAMIORR",376,0)
 ;
"RTN","SAMIORR",377,0)
 ;@stanza 8 PID-11 patient address, line1^line2^city^state^zip^country
"RTN","SAMIORR",378,0)
 new address1,address2,address3
"RTN","SAMIORR",379,0)
 new city,state,zip,str
"RTN","SAMIORR",380,0)
 set address1=$get(@rootpl@(plien,"address1"))
"RTN","SAMIORR",381,0)
 set address2=$get(@rootpl@(plien,"address2"))
"RTN","SAMIORR",382,0)
 set address3=$get(@rootpl@(plien,"address3"))
"RTN","SAMIORR",383,0)
 set city=$get(@rootpl@(plien,"city"))
"RTN","SAMIORR",384,0)
 set state=$get(@rootpl@(plien,"state"))
"RTN","SAMIORR",385,0)
 set zip=$get(@rootpl@(plien,"zip"))
"RTN","SAMIORR",386,0)
 set str=address1_HLCC_address2_address3_HLCC_city_HLCC_state_HLCC_zip
"RTN","SAMIORR",387,0)
 set $piece(pid,HLFS,11)=str
"RTN","SAMIORR",388,0)
 ;
"RTN","SAMIORR",389,0)
 ;@stanza 9 PID-13 phone number - home
"RTN","SAMIORR",390,0)
 set $piece(pid,HLFS,13)=$get(@rootpl@(plien,"phone"))
"RTN","SAMIORR",391,0)
 ;
"RTN","SAMIORR",392,0)
 ;@stanza 10 PID-19 social security #
"RTN","SAMIORR",393,0)
 set $piece(pid,HLFS,19)=$get(@rootpl@(plien,"ssn"))
"RTN","SAMIORR",394,0)
 ;
"RTN","SAMIORR",395,0)
 ;@stanza 11 add PID segment to draft ORR msg
"RTN","SAMIORR",396,0)
 set pid="PID"_HLFS_pid
"RTN","SAMIORR",397,0)
 do ADD2MSG(pid)
"RTN","SAMIORR",398,0)
 ;
"RTN","SAMIORR",399,0)
 ;
"RTN","SAMIORR",400,0)
 ;@stanza 12 termination
"RTN","SAMIORR",401,0)
 ;
"RTN","SAMIORR",402,0)
 quit  ; end of PID
"RTN","SAMIORR",403,0)
 ;
"RTN","SAMIORR",404,0)
 ;
"RTN","SAMIORR",405,0)
 ;
"RTN","SAMIORR",406,0)
ORC(filter,OUTHL) ; build ORC segment for ORR msg
"RTN","SAMIORR",407,0)
 ;
"RTN","SAMIORR",408,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORR",409,0)
 ;
"RTN","SAMIORR",410,0)
 ;;private;procedure;clean;silent;sac;0% tests
"RTN","SAMIORR",411,0)
 ;@called-by
"RTN","SAMIORR",412,0)
 ; hli $$EN^SAMIORR
"RTN","SAMIORR",413,0)
 ;@calls
"RTN","SAMIORR",414,0)
 ; $$HTFM^XLFDT
"RTN","SAMIORR",415,0)
 ; $$FMTHL7^XLFDT
"RTN","SAMIORR",416,0)
 ; ADD2MSG
"RTN","SAMIORR",417,0)
 ;@input
"RTN","SAMIORR",418,0)
 ; .filter = fields array
"RTN","SAMIORR",419,0)
 ; ]HLFS = field separator
"RTN","SAMIORR",420,0)
 ; [patient data from patient-lookup graph]
"RTN","SAMIORR",421,0)
 ;@thruput
"RTN","SAMIORR",422,0)
 ; .OUTHL = output hl7 msg array
"RTN","SAMIORR",423,0)
 ;
"RTN","SAMIORR",424,0)
 ; The Common Order segment (ORC) is built from fields pulled from
"RTN","SAMIORR",425,0)
 ; initiating ORM message, recorded in vapals-patients graph.
"RTN","SAMIORR",426,0)
 ;
"RTN","SAMIORR",427,0)
 ;
"RTN","SAMIORR",428,0)
 ;@stanza 2 get graph root & subscript
"RTN","SAMIORR",429,0)
 new sid set sid=$get(filter("sid"))
"RTN","SAMIORR",430,0)
 new key set key=$get(filter("key"))
"RTN","SAMIORR",431,0)
 new rootvp set rootvp=$get(filter("rootvp"))
"RTN","SAMIORR",432,0)
 new rootpl set rootpl=$get(filter("rootpl"))
"RTN","SAMIORR",433,0)
 new vpien set vpien=$get(filter("vpien"))
"RTN","SAMIORR",434,0)
 new plien set plien=$get(filter("plien"))
"RTN","SAMIORR",435,0)
 ;
"RTN","SAMIORR",436,0)
 ;@stanza 3 ORC-1 order control
"RTN","SAMIORR",437,0)
 new orc set $piece(orc,HLFS,1)="NW"
"RTN","SAMIORR",438,0)
 ;
"RTN","SAMIORR",439,0)
 ;@stanza 4 ORC-9 date/time of transaction
"RTN","SAMIORR",440,0)
 set $piece(orc,HLFS,9)=$$FMTHL7^XLFDT($$HTFM^XLFDT($H))
"RTN","SAMIORR",441,0)
 ;
"RTN","SAMIORR",442,0)
 ;@stanza 5 ORC-14 call back phone #
"RTN","SAMIORR",443,0)
 set $piece(orc,HLFS,14)="206-123-1234"
"RTN","SAMIORR",444,0)
 ;
"RTN","SAMIORR",445,0)
 ;@stanza 6 add ORC segment to draft ORR msg
"RTN","SAMIORR",446,0)
 set orc="ORC"_HLFS_orc
"RTN","SAMIORR",447,0)
 do ADD2MSG(orc)
"RTN","SAMIORR",448,0)
 ;
"RTN","SAMIORR",449,0)
 ;
"RTN","SAMIORR",450,0)
 ;@stanza 7 termination
"RTN","SAMIORR",451,0)
 ;
"RTN","SAMIORR",452,0)
 quit  ; end of ORC
"RTN","SAMIORR",453,0)
 ;
"RTN","SAMIORR",454,0)
 ;
"RTN","SAMIORR",455,0)
 ;
"RTN","SAMIORR",456,0)
OBR(filter,OUTHL) ; build OBR segment for ORR msg
"RTN","SAMIORR",457,0)
 ;
"RTN","SAMIORR",458,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORR",459,0)
 ;
"RTN","SAMIORR",460,0)
 ;;private;procedure;clean;silent;sac;0% tests
"RTN","SAMIORR",461,0)
 ;@called-by
"RTN","SAMIORR",462,0)
 ; hli $$EN^SAMIORR
"RTN","SAMIORR",463,0)
 ;@calls
"RTN","SAMIORR",464,0)
 ; $$HTFM^XLFDT
"RTN","SAMIORR",465,0)
 ; $$FMTHL7^XLFDT
"RTN","SAMIORR",466,0)
 ; ADD2MSG
"RTN","SAMIORR",467,0)
 ;@input
"RTN","SAMIORR",468,0)
 ; .filter = fields array
"RTN","SAMIORR",469,0)
 ; ]HLFS = field separator
"RTN","SAMIORR",470,0)
 ; ]HLCC = subfield separator
"RTN","SAMIORR",471,0)
 ; [patient data from patient-lookup graph]
"RTN","SAMIORR",472,0)
 ;@thruput
"RTN","SAMIORR",473,0)
 ; .OUTHL = output hl7 msg array
"RTN","SAMIORR",474,0)
 ;
"RTN","SAMIORR",475,0)
 ; The Observation Request segment (OBR) is built from fields pulled
"RTN","SAMIORR",476,0)
 ; from initiating ORM message, recorded in vapals-patients graph.
"RTN","SAMIORR",477,0)
 ;
"RTN","SAMIORR",478,0)
 ;
"RTN","SAMIORR",479,0)
 ;@stanza 2 set up
"RTN","SAMIORR",480,0)
 ;
"RTN","SAMIORR",481,0)
 new sid set sid=$get(filter("sid"))
"RTN","SAMIORR",482,0)
 new key set key=$get(filter("key"))
"RTN","SAMIORR",483,0)
 new rootvp set rootvp=$get(filter("rootvp"))
"RTN","SAMIORR",484,0)
 new rootpl set rootpl=$get(filter("rootpl"))
"RTN","SAMIORR",485,0)
 new vpien set vpien=$get(filter("vpien"))
"RTN","SAMIORR",486,0)
 new plien set plien=$get(filter("plien"))
"RTN","SAMIORR",487,0)
 ;
"RTN","SAMIORR",488,0)
 ;@stanza 3 OBR-4 universal service id
"RTN","SAMIORR",489,0)
 new unvid set unvid="7089898.8453-1"_HLCC_"040391-6"_HLCC_"L"
"RTN","SAMIORR",490,0)
 new obr set $piece(obr,HLFS,4)=unvid
"RTN","SAMIORR",491,0)
 ;
"RTN","SAMIORR",492,0)
 ;@stanza 4 OBR-7 observation date/time
"RTN","SAMIORR",493,0)
 set $piece(obr,HLFS,7)=$$FMTHL7^XLFDT($$HTFM^XLFDT($horolog))
"RTN","SAMIORR",494,0)
 ;
"RTN","SAMIORR",495,0)
 ;@stanza 5 OBR-8 observation end date/time
"RTN","SAMIORR",496,0)
 set $piece(obr,HLFS,8)=""
"RTN","SAMIORR",497,0)
 ;
"RTN","SAMIORR",498,0)
 ;@stanza 6 OBR-9 collection volume
"RTN","SAMIORR",499,0)
 set $piece(obr,HLFS,9)=""
"RTN","SAMIORR",500,0)
 ;
"RTN","SAMIORR",501,0)
 ;@stanza 7 OBR-14 specimen received date/time
"RTN","SAMIORR",502,0)
 set $piece(obr,HLFS,14)=""
"RTN","SAMIORR",503,0)
 ;
"RTN","SAMIORR",504,0)
 ;@stanza 8 OBR-16 ordering provider
"RTN","SAMIORR",505,0)
 set $piece(obr,HLFS,16)="3232~HL7Doctor~One"
"RTN","SAMIORR",506,0)
 ;
"RTN","SAMIORR",507,0)
 ;@stanza 9 OBR-18 placers field #1 (ward/clinic)
"RTN","SAMIORR",508,0)
 set $piece(obr,HLFS,18)="MEDICINE"
"RTN","SAMIORR",509,0)
 ;
"RTN","SAMIORR",510,0)
 ;@stanza 10 OBR-20 fillers field #1 (ward/clinic)
"RTN","SAMIORR",511,0)
 set $piece(obr,HLFS,20)=""
"RTN","SAMIORR",512,0)
 ;
"RTN","SAMIORR",513,0)
 ;@stanza 11 OBR-22 results rpt/status chng-date/time
"RTN","SAMIORR",514,0)
 set $piece(obr,HLFS,22)=$$FMTHL7^XLFDT($$HTFM^XLFDT($horolog))
"RTN","SAMIORR",515,0)
 ;
"RTN","SAMIORR",516,0)
 ;@stanza 12 add OBR segment to draft ORR msg
"RTN","SAMIORR",517,0)
 set obr="OBR"_HLFS_obr
"RTN","SAMIORR",518,0)
 do ADD2MSG(obr)
"RTN","SAMIORR",519,0)
 ;
"RTN","SAMIORR",520,0)
 ;
"RTN","SAMIORR",521,0)
 ;@stanza 13 termination
"RTN","SAMIORR",522,0)
 ;
"RTN","SAMIORR",523,0)
 quit  ; end of OBR
"RTN","SAMIORR",524,0)
 ;
"RTN","SAMIORR",525,0)
 ;
"RTN","SAMIORR",526,0)
 ;
"RTN","SAMIORR",527,0)
OBXPRC(filter,OUTHL) ; build OBX procedure segment for ORR msg
"RTN","SAMIORR",528,0)
 ;
"RTN","SAMIORR",529,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORR",530,0)
 ;
"RTN","SAMIORR",531,0)
 ;;private;procedure;clean;silent;sac;0% tests
"RTN","SAMIORR",532,0)
 ;@called-by
"RTN","SAMIORR",533,0)
 ; hli $$EN^SAMIORR
"RTN","SAMIORR",534,0)
 ;@calls
"RTN","SAMIORR",535,0)
 ; ADD2MSG
"RTN","SAMIORR",536,0)
 ;@input
"RTN","SAMIORR",537,0)
 ; .filter = fields array
"RTN","SAMIORR",538,0)
 ; ]HLFS = field separator
"RTN","SAMIORR",539,0)
 ; ]HLCC = subfield separator
"RTN","SAMIORR",540,0)
 ; [patient data from patient-lookup graph]
"RTN","SAMIORR",541,0)
 ;@thruput
"RTN","SAMIORR",542,0)
 ; .OUTHL = output hl7 msg array
"RTN","SAMIORR",543,0)
 ;
"RTN","SAMIORR",544,0)
 ; The Observation Result procedure segment (OBX) is built from fields
"RTN","SAMIORR",545,0)
 ; pulled from initiating ORM message, recorded in vapals-patients
"RTN","SAMIORR",546,0)
 ; graph.
"RTN","SAMIORR",547,0)
 ;
"RTN","SAMIORR",548,0)
 ;
"RTN","SAMIORR",549,0)
 ;@stanza 2 set up
"RTN","SAMIORR",550,0)
 ;
"RTN","SAMIORR",551,0)
 new sid set sid=$get(filter("sid"))
"RTN","SAMIORR",552,0)
 new key set key=$get(filter("key"))
"RTN","SAMIORR",553,0)
 new rootvp set rootvp=$get(filter("rootvp"))
"RTN","SAMIORR",554,0)
 new rootpl set rootpl=$get(filter("rootpl"))
"RTN","SAMIORR",555,0)
 new vpien set vpien=$get(filter("vpien"))
"RTN","SAMIORR",556,0)
 new plien set plien=$get(filter("plien"))
"RTN","SAMIORR",557,0)
 ;
"RTN","SAMIORR",558,0)
 ;@stanza 3 OBX-2 value type
"RTN","SAMIORR",559,0)
 new obx set $piece(obx,HLFS,2)="CE"
"RTN","SAMIORR",560,0)
 ;
"RTN","SAMIORR",561,0)
 ;@stanza 4 OBX-3 observation identifier
"RTN","SAMIORR",562,0)
 set $piece(obx,HLFS,3)="P"_HLCC_"PROCEDURE"_HLCC_"L"
"RTN","SAMIORR",563,0)
 ;
"RTN","SAMIORR",564,0)
 ;@stanza 5 OBX-5 observation results
"RTN","SAMIORR",565,0)
 set $piece(obx,HLFS,5)="100"_HLCC_"CHEST PA & LAT"_HLCC_"L"
"RTN","SAMIORR",566,0)
 ;
"RTN","SAMIORR",567,0)
 ;@stanza 6 add OBX procedure segment to draft ORR msg
"RTN","SAMIORR",568,0)
 set obx="OBX"_HLFS_obx
"RTN","SAMIORR",569,0)
 do ADD2MSG(obx)
"RTN","SAMIORR",570,0)
 ;
"RTN","SAMIORR",571,0)
 ;
"RTN","SAMIORR",572,0)
 ;@stanza 7 termination
"RTN","SAMIORR",573,0)
 ;
"RTN","SAMIORR",574,0)
 quit  ; end of OBXPRC
"RTN","SAMIORR",575,0)
 ;
"RTN","SAMIORR",576,0)
 ;
"RTN","SAMIORR",577,0)
 ;
"RTN","SAMIORR",578,0)
OBXMOD(filter,OUTHL) ; build OBX modifier segment for ORR msg
"RTN","SAMIORR",579,0)
 ;
"RTN","SAMIORR",580,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORR",581,0)
 ;
"RTN","SAMIORR",582,0)
 ;;private;procedure;clean;silent;sac;0% tests
"RTN","SAMIORR",583,0)
 ;@called-by
"RTN","SAMIORR",584,0)
 ; hli $$EN^SAMIORR
"RTN","SAMIORR",585,0)
 ;@calls
"RTN","SAMIORR",586,0)
 ; ADD2MSG
"RTN","SAMIORR",587,0)
 ;@input
"RTN","SAMIORR",588,0)
 ; .filter = fields array
"RTN","SAMIORR",589,0)
 ; ]HLFS = field separator
"RTN","SAMIORR",590,0)
 ; ]HLCC = subfield separator
"RTN","SAMIORR",591,0)
 ; [patient data from patient-lookup graph]
"RTN","SAMIORR",592,0)
 ;@thruput
"RTN","SAMIORR",593,0)
 ; .OUTHL = output hl7 msg array
"RTN","SAMIORR",594,0)
 ;
"RTN","SAMIORR",595,0)
 ; The Observation Result procedure segment (OBX) is built from fields
"RTN","SAMIORR",596,0)
 ; pulled from initiating ORM message, recorded in vapals-patients
"RTN","SAMIORR",597,0)
 ; graph.
"RTN","SAMIORR",598,0)
 ;
"RTN","SAMIORR",599,0)
 ;
"RTN","SAMIORR",600,0)
 ;@stanza 2 set up
"RTN","SAMIORR",601,0)
 ;
"RTN","SAMIORR",602,0)
 new sid set sid=$get(filter("sid"))
"RTN","SAMIORR",603,0)
 new key set key=$get(filter("key"))
"RTN","SAMIORR",604,0)
 new rootvp set rootvp=$get(filter("rootvp"))
"RTN","SAMIORR",605,0)
 new rootpl set rootpl=$get(filter("rootpl"))
"RTN","SAMIORR",606,0)
 new vpien set vpien=$get(filter("vpien"))
"RTN","SAMIORR",607,0)
 new plien set plien=$get(filter("plien"))
"RTN","SAMIORR",608,0)
 ;
"RTN","SAMIORR",609,0)
 ;@stanza 3 OBX-2 value type
"RTN","SAMIORR",610,0)
 new obx set $piece(obx,HLFS,2)="TX"
"RTN","SAMIORR",611,0)
 ;
"RTN","SAMIORR",612,0)
 ;@stanza 4 OBX-3 observation identifier
"RTN","SAMIORR",613,0)
 set $piece(obx,HLFS,3)="M"_HLCC_"MODIFIERS"_HLCC_"L"
"RTN","SAMIORR",614,0)
 ;
"RTN","SAMIORR",615,0)
 ;@stanza 5 OBX-5 observation results
"RTN","SAMIORR",616,0)
 set $piece(obx,HLFS,5)="RIGHT, PORTABLE"
"RTN","SAMIORR",617,0)
 ;
"RTN","SAMIORR",618,0)
 ;@stanza 6 add OBX procedure segment to draft ORR msg
"RTN","SAMIORR",619,0)
 set obx="OBX"_HLFS_obx
"RTN","SAMIORR",620,0)
 do ADD2MSG(obx)
"RTN","SAMIORR",621,0)
 ;
"RTN","SAMIORR",622,0)
 ;
"RTN","SAMIORR",623,0)
 ;@stanza 7 termination
"RTN","SAMIORR",624,0)
 ;
"RTN","SAMIORR",625,0)
 quit  ; end of OBXMOD
"RTN","SAMIORR",626,0)
 ;
"RTN","SAMIORR",627,0)
 ;
"RTN","SAMIORR",628,0)
 ;
"RTN","SAMIORR",629,0)
NTE(filter,OUTHL) ; build NTE segments for ORR msg
"RTN","SAMIORR",630,0)
 ;
"RTN","SAMIORR",631,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORR",632,0)
 ;
"RTN","SAMIORR",633,0)
 ;;private;procedure;clean;silent;sac;0% tests
"RTN","SAMIORR",634,0)
 ;@called-by
"RTN","SAMIORR",635,0)
 ; hli $$EN^SAMIORR
"RTN","SAMIORR",636,0)
 ;@calls
"RTN","SAMIORR",637,0)
 ; ADD2MSG
"RTN","SAMIORR",638,0)
 ;@input
"RTN","SAMIORR",639,0)
 ; .filter = fields array
"RTN","SAMIORR",640,0)
 ; ]HLFS = field separator
"RTN","SAMIORR",641,0)
 ; [patient data from patient-lookup graph]
"RTN","SAMIORR",642,0)
 ;@thruput
"RTN","SAMIORR",643,0)
 ; .OUTHL = output hl7 msg array
"RTN","SAMIORR",644,0)
 ;
"RTN","SAMIORR",645,0)
 ; The Note segment (NTE) is built from fields recorded in
"RTN","SAMIORR",646,0)
 ; vapals-patients graph.
"RTN","SAMIORR",647,0)
 ;
"RTN","SAMIORR",648,0)
 ;
"RTN","SAMIORR",649,0)
 ;@stanza 2 set up
"RTN","SAMIORR",650,0)
 ;
"RTN","SAMIORR",651,0)
 new sid set sid=$get(filter("sid"))
"RTN","SAMIORR",652,0)
 new key set key=$get(filter("key"))
"RTN","SAMIORR",653,0)
 new rootvp set rootvp=$get(filter("rootvp"))
"RTN","SAMIORR",654,0)
 new node set node=$name(@rootvp@("graph",sid,key,"note"))
"RTN","SAMIORR",655,0)
 new snode set snode=$piece(node,")")
"RTN","SAMIORR",656,0)
 ;
"RTN","SAMIORR",657,0)
 ; *** in Cache use
"RTN","SAMIORR",658,0)
 ; new node set node=$name(@rootvp@("graph",sid,key,"notes",notenmbr))
"RTN","SAMIORR",659,0)
 ; new snode set snode=$piece(node,")")
"RTN","SAMIORR",660,0)
 ;
"RTN","SAMIORR",661,0)
 ; note: *** in vapals
"RTN","SAMIORR",662,0)
 ; ^%wd(17.040801,23,"graph","XXX00955","siform-2019-04-12","note"
"RTN","SAMIORR",663,0)
 ;
"RTN","SAMIORR",664,0)
 ; note: *** in Cache
"RTN","SAMIORR",665,0)
 ;^%wd(17.040801,66,"graph","XXX9000076","siform-2020-01-21","notes",1,"date")
"RTN","SAMIORR",666,0)
 ;^%wd(17.040801,66,"graph","XXX9000076","siform-2020-01-21","notes",1,"name")
"RTN","SAMIORR",667,0)
 ;^%wd(17.040801,66,"graph","XXX9000076","siform-2020-01-21","notes",1,"text",1)
"RTN","SAMIORR",668,0)
 ;
"RTN","SAMIORR",669,0)
 ;
"RTN","SAMIORR",670,0)
 ;@stanza 3 get note nodes
"RTN","SAMIORR",671,0)
 ;
"RTN","SAMIORR",672,0)
 new exit set exit=0
"RTN","SAMIORR",673,0)
 for  do  quit:exit
"RTN","SAMIORR",674,0)
 . set node=$query(@node)
"RTN","SAMIORR",675,0)
 . set exit=node'[snode
"RTN","SAMIORR",676,0)
 . quit:exit
"RTN","SAMIORR",677,0)
 . ;
"RTN","SAMIORR",678,0)
 . new cnt set cnt=$qsubscript(node,7)
"RTN","SAMIORR",679,0)
 . quit:'cnt
"RTN","SAMIORR",680,0)
 . ;
"RTN","SAMIORR",681,0)
 . new segment set segment="NTE"_HLFS_cnt_HLFS_"L"_HLFS_@node
"RTN","SAMIORR",682,0)
 . do ADD2MSG(segment)
"RTN","SAMIORR",683,0)
 . quit
"RTN","SAMIORR",684,0)
 ;
"RTN","SAMIORR",685,0)
 ;
"RTN","SAMIORR",686,0)
 ;@stanza 4 termination
"RTN","SAMIORR",687,0)
 ;
"RTN","SAMIORR",688,0)
 quit  ; end of NTE
"RTN","SAMIORR",689,0)
 ;
"RTN","SAMIORR",690,0)
 ;
"RTN","SAMIORR",691,0)
 ;
"RTN","SAMIORR",692,0)
ADD2MSG(segment) ; add segment to OUTHL array
"RTN","SAMIORR",693,0)
 ;
"RTN","SAMIORR",694,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORR",695,0)
 ;
"RTN","SAMIORR",696,0)
 ;;private;procedure;clean;silent;sac;0% tests
"RTN","SAMIORR",697,0)
 ;@called-by
"RTN","SAMIORR",698,0)
 ; PID
"RTN","SAMIORR",699,0)
 ; ORC
"RTN","SAMIORR",700,0)
 ; OBR
"RTN","SAMIORR",701,0)
 ; OBXPRC
"RTN","SAMIORR",702,0)
 ; OBXMOD
"RTN","SAMIORR",703,0)
 ; NTE
"RTN","SAMIORR",704,0)
 ;@calls none
"RTN","SAMIORR",705,0)
 ;@input
"RTN","SAMIORR",706,0)
 ; segment = segment to add
"RTN","SAMIORR",707,0)
 ;@thruput
"RTN","SAMIORR",708,0)
 ; ]OUTHL = segment added to OUTHL array
"RTN","SAMIORR",709,0)
 ; ]OUTHL("A") = most recently added segment
"RTN","SAMIORR",710,0)
 ;
"RTN","SAMIORR",711,0)
 ;
"RTN","SAMIORR",712,0)
 ;@stanza 2 add segment
"RTN","SAMIORR",713,0)
 ;
"RTN","SAMIORR",714,0)
 new outcnt set outcnt=$order(OUTHL("A"),-1)
"RTN","SAMIORR",715,0)
 set outcnt=$get(outcnt)+1
"RTN","SAMIORR",716,0)
 set OUTHL(outcnt)=segment
"RTN","SAMIORR",717,0)
 ;
"RTN","SAMIORR",718,0)
 ;
"RTN","SAMIORR",719,0)
 ;@stanza 3 termination
"RTN","SAMIORR",720,0)
 ;
"RTN","SAMIORR",721,0)
 quit  ; end of ADD2MSG
"RTN","SAMIORR",722,0)
 ;
"RTN","SAMIORR",723,0)
 ;
"RTN","SAMIORR",724,0)
 ;
"RTN","SAMIORR",725,0)
 ;@section 5 test subroutines
"RTN","SAMIORR",726,0)
 ;
"RTN","SAMIORR",727,0)
 ;
"RTN","SAMIORR",728,0)
 ;
"RTN","SAMIORR",729,0)
TSTHL ; test generating NTE
"RTN","SAMIORR",730,0)
 ;
"RTN","SAMIORR",731,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORR",732,0)
 ;
"RTN","SAMIORR",733,0)
 ;;dmi-test;procedure;clean;silent;sac
"RTN","SAMIORR",734,0)
 ;@called-by none
"RTN","SAMIORR",735,0)
 ;@calls
"RTN","SAMIORR",736,0)
 ; $$setroot^%wd
"RTN","SAMIORR",737,0)
 ; HLENV^SAMIORR
"RTN","SAMIORR",738,0)
 ; NTE^SAMIORR
"RTN","SAMIORR",739,0)
 ;@input
"RTN","SAMIORR",740,0)
 ; patient-lookup graph
"RTN","SAMIORR",741,0)
 ; vapals-patients graph
"RTN","SAMIORR",742,0)
 ; patient XXX00955 in graph
"RTN","SAMIORR",743,0)
 ; form siform-2019-04-12 in graph
"RTN","SAMIORR",744,0)
 ; protocol LSS ENROLL ORR
"RTN","SAMIORR",745,0)
 ;@output
"RTN","SAMIORR",746,0)
 ; ]HL
"RTN","SAMIORR",747,0)
 ; ]HLA
"RTN","SAMIORR",748,0)
 ; ]HLECH
"RTN","SAMIORR",749,0)
 ; ]HLQ
"RTN","SAMIORR",750,0)
 ; ]HLFS
"RTN","SAMIORR",751,0)
 ; ]HLCC
"RTN","SAMIORR",752,0)
 ; ]OUTHL = message output array
"RTN","SAMIORR",753,0)
 ;
"RTN","SAMIORR",754,0)
 ;
"RTN","SAMIORR",755,0)
 ;@stanza 2 test PID
"RTN","SAMIORR",756,0)
 ;
"RTN","SAMIORR",757,0)
 kill OUTHL,SNDPROT
"RTN","SAMIORR",758,0)
 ;
"RTN","SAMIORR",759,0)
 new rootpl set rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIORR",760,0)
 set filter("rootpl")=rootpl
"RTN","SAMIORR",761,0)
 ;
"RTN","SAMIORR",762,0)
 new rootvp set rootvp=$$setroot^%wd("vapals-patients")
"RTN","SAMIORR",763,0)
 set filter("rootvp")=rootvp
"RTN","SAMIORR",764,0)
 ;
"RTN","SAMIORR",765,0)
 set filter("sid")="XXX00955"
"RTN","SAMIORR",766,0)
 set filter("key")="siform-2019-04-12"
"RTN","SAMIORR",767,0)
 ;
"RTN","SAMIORR",768,0)
 set SNDPROT="LSS ENROLL ORR"
"RTN","SAMIORR",769,0)
 do HLENV^SAMIORR(SNDPROT) ; set up HL variables
"RTN","SAMIORR",770,0)
 ;
"RTN","SAMIORR",771,0)
 do NTE^SAMIORR(.filter,.OUTHL) ; build NTE segments
"RTN","SAMIORR",772,0)
 ;
"RTN","SAMIORR",773,0)
 ;
"RTN","SAMIORR",774,0)
 ;@stanza 3 termination
"RTN","SAMIORR",775,0)
 ;
"RTN","SAMIORR",776,0)
 quit  ; end of TSTHL
"RTN","SAMIORR",777,0)
 ;
"RTN","SAMIORR",778,0)
 ;
"RTN","SAMIORR",779,0)
 ;
"RTN","SAMIORR",780,0)
TESTPID ; test generating PID
"RTN","SAMIORR",781,0)
 ;
"RTN","SAMIORR",782,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORR",783,0)
 ;
"RTN","SAMIORR",784,0)
 ;;dmi-test;procedure;clean;silent;sac
"RTN","SAMIORR",785,0)
 ;@called-by none
"RTN","SAMIORR",786,0)
 ;@calls
"RTN","SAMIORR",787,0)
 ; $$setroot^%wd
"RTN","SAMIORR",788,0)
 ; HLENV^SAMIORR
"RTN","SAMIORR",789,0)
 ; PID^SAMIORR
"RTN","SAMIORR",790,0)
 ;@input
"RTN","SAMIORR",791,0)
 ; patient-lookup graph
"RTN","SAMIORR",792,0)
 ; vapals-patients graph
"RTN","SAMIORR",793,0)
 ; patient XXX00955 in graph
"RTN","SAMIORR",794,0)
 ; form siform-2019-04-12 in graph
"RTN","SAMIORR",795,0)
 ; protocol LSS ENROLL ORR
"RTN","SAMIORR",796,0)
 ;@output
"RTN","SAMIORR",797,0)
 ; ]HL
"RTN","SAMIORR",798,0)
 ; ]HLA
"RTN","SAMIORR",799,0)
 ; ]HLECH
"RTN","SAMIORR",800,0)
 ; ]HLQ
"RTN","SAMIORR",801,0)
 ; ]HLFS
"RTN","SAMIORR",802,0)
 ; ]HLCC
"RTN","SAMIORR",803,0)
 ; ]OUTHL = message output array
"RTN","SAMIORR",804,0)
 ;
"RTN","SAMIORR",805,0)
 ;
"RTN","SAMIORR",806,0)
 ;@stanza 2 test PID
"RTN","SAMIORR",807,0)
 ;
"RTN","SAMIORR",808,0)
 new rootpl set rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIORR",809,0)
 set filter("rootpl")=rootpl
"RTN","SAMIORR",810,0)
 ;
"RTN","SAMIORR",811,0)
 new rootvp set rootvp=$$setroot^%wd("vapals-patients")
"RTN","SAMIORR",812,0)
 set filter("rootvp")=rootvp
"RTN","SAMIORR",813,0)
 ;
"RTN","SAMIORR",814,0)
 new sid set sid="XXX00955"
"RTN","SAMIORR",815,0)
 set filter("sid")=sid
"RTN","SAMIORR",816,0)
 ;
"RTN","SAMIORR",817,0)
 new key set key="siform-2019-04-12"
"RTN","SAMIORR",818,0)
 set filter("key")=key
"RTN","SAMIORR",819,0)
 ;
"RTN","SAMIORR",820,0)
 set SNDPROT="LSS ENROLL ORR"
"RTN","SAMIORR",821,0)
 do HLENV^SAMIORR(SNDPROT) ; set up HL variables
"RTN","SAMIORR",822,0)
 ;
"RTN","SAMIORR",823,0)
 new vpien set vpien=+$extract(sid,4,$length(sid))
"RTN","SAMIORR",824,0)
 set filter("vpien")=vpien
"RTN","SAMIORR",825,0)
 ;
"RTN","SAMIORR",826,0)
 new plien set plien=$order(@rootpl@("dfn",vpien,0))
"RTN","SAMIORR",827,0)
 set filter("plien")=plien
"RTN","SAMIORR",828,0)
 ;
"RTN","SAMIORR",829,0)
 do PID^SAMIORR(.filter,.OUTHL) ; build PID segment
"RTN","SAMIORR",830,0)
 ;
"RTN","SAMIORR",831,0)
 ;
"RTN","SAMIORR",832,0)
 ;@stanza 3 termination
"RTN","SAMIORR",833,0)
 ;
"RTN","SAMIORR",834,0)
 quit  ; end of TESTPID
"RTN","SAMIORR",835,0)
 ;
"RTN","SAMIORR",836,0)
 ;
"RTN","SAMIORR",837,0)
 ;
"RTN","SAMIORR",838,0)
TEST ; test hli $$EN^SAMIORR
"RTN","SAMIORR",839,0)
 ;
"RTN","SAMIORR",840,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORR",841,0)
 ;
"RTN","SAMIORR",842,0)
 ;;dmi-test;procedure;clean;report;sac;
"RTN","SAMIORR",843,0)
 ;@called-by none
"RTN","SAMIORR",844,0)
 ;@calls
"RTN","SAMIORR",845,0)
 ; $$EN^SAMIORR
"RTN","SAMIORR",846,0)
 ;@input
"RTN","SAMIORR",847,0)
 ; patient XXX01017 in graphstore
"RTN","SAMIORR",848,0)
 ; form siform-2019-03-05 in graphstore
"RTN","SAMIORR",849,0)
 ;@output
"RTN","SAMIORR",850,0)
 ; build & send hl7 message
"RTN","SAMIORR",851,0)
 ;
"RTN","SAMIORR",852,0)
 ;
"RTN","SAMIORR",853,0)
 ;@stanza 2 test hli $$EN^SAMIORR
"RTN","SAMIORR",854,0)
 ;
"RTN","SAMIORR",855,0)
 new SNDPROT set SNDPROT="LSS ENROLL ORR"
"RTN","SAMIORR",856,0)
 new filter set filter("sid")="XXX01017"
"RTN","SAMIORR",857,0)
 set filter("key")="siform-2019-03-05"
"RTN","SAMIORR",858,0)
 new notenbr set notenbr=1
"RTN","SAMIORR",859,0)
 new msgid
"RTN","SAMIORR",860,0)
 ;
"RTN","SAMIORR",861,0)
 write $$EN^SAMIORR(SNDPROT,.filter,notenbr,.msgid) ; build & send ORR
"RTN","SAMIORR",862,0)
 ;
"RTN","SAMIORR",863,0)
 ;
"RTN","SAMIORR",864,0)
 ;@stanza 3 termination
"RTN","SAMIORR",865,0)
 ;
"RTN","SAMIORR",866,0)
 quit  ; end of TEST
"RTN","SAMIORR",867,0)
 ;
"RTN","SAMIORR",868,0)
 ;
"RTN","SAMIORR",869,0)
 ;
"RTN","SAMIORR",870,0)
TEST1 ; build test message
"RTN","SAMIORR",871,0)
 ;
"RTN","SAMIORR",872,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORR",873,0)
 ;
"RTN","SAMIORR",874,0)
 ;;private;procedure;clean;silent;sac;
"RTN","SAMIORR",875,0)
 ;@called-by none
"RTN","SAMIORR",876,0)
 ;@calls none
"RTN","SAMIORR",877,0)
 ;@input none
"RTN","SAMIORR",878,0)
 ;@output
"RTN","SAMIORR",879,0)
 ; ]OUTHL = hl7 msg array containing sample ORR msg
"RTN","SAMIORR",880,0)
 ;
"RTN","SAMIORR",881,0)
 ;
"RTN","SAMIORR",882,0)
 ;@stanza 2 build sample ORR msg
"RTN","SAMIORR",883,0)
 ;
"RTN","SAMIORR",884,0)
 kill OUTHL
"RTN","SAMIORR",885,0)
 set OUTHL(1)="PID^^50001000V910386^1~8~M10^^FOURTEEN~PATIENT~N^^19560708^M^^7^10834 DIXIN DR SOUTH~~SEATTLE~WA~98178^53033^(206)772-2059^^^^29^^444678924^^^^BostonMASSACHUSETTS"
"RTN","SAMIORR",886,0)
 set OUTHL(2)="ORC^NW^^^^^^^^199104301000"
"RTN","SAMIORR",887,0)
 set OUTHL(3)="OBR^^^^7089898.8453-1~040391-66~L^^^199104301200^^^^^^^^^3232~HL7Doctor~One^^MEDICINE^^^^199104301000"
"RTN","SAMIORR",888,0)
 set OUTHL(4)="OBX^^CE^P~PROCEDURE~L^^100~CHEST PA & LAT~L"
"RTN","SAMIORR",889,0)
 set OUTHL(5)="OBX^^TX^M~MODIFIERS~L^^RIGHT, PORTABLE"
"RTN","SAMIORR",890,0)
 set OUTHL(6)="OBX^^TX^H~HISTORY~L^^None"
"RTN","SAMIORR",891,0)
 set OUTHL(7)="OBX^^TX^A~ALLERGIES~L^^BEE STINGS"
"RTN","SAMIORR",892,0)
 ;
"RTN","SAMIORR",893,0)
 ;
"RTN","SAMIORR",894,0)
 ;@stanza 3 termination
"RTN","SAMIORR",895,0)
 ;
"RTN","SAMIORR",896,0)
 quit  ; end of TEST1
"RTN","SAMIORR",897,0)
 ;
"RTN","SAMIORR",898,0)
 ;
"RTN","SAMIORR",899,0)
 ;
"RTN","SAMIORR",900,0)
EOR ; end of SAMIORR
"RTN","SAMIORU")
0^49^B377186470
"RTN","SAMIORU",1,0)
SAMIORU ;ven/lgc&arc - hl7: ORU enrollment reponse ;2021-06-04T13:12Z
"RTN","SAMIORU",2,0)
 ;;18.0;SAMI;**8,11**;2020-01;Build 1
"RTN","SAMIORU",3,0)
 ;;1.18.0.11+i11
"RTN","SAMIORU",4,0)
 ;
"RTN","SAMIORU",5,0)
 ; SAMIORU builds and sends an outgoing Observation Reporting (ORU)
"RTN","SAMIORU",6,0)
 ; response message to the Vista production system.
"RTN","SAMIORU",7,0)
 ; SAMIHL7 contains the development log for the SAMIOR* routines.
"RTN","SAMIORU",8,0)
 ;
"RTN","SAMIORU",9,0)
 quit  ; no entry from top
"RTN","SAMIORU",10,0)
 ;
"RTN","SAMIORU",11,0)
 ;
"RTN","SAMIORU",12,0)
 ;
"RTN","SAMIORU",13,0)
 ;@section 0 primary development
"RTN","SAMIORU",14,0)
 ;
"RTN","SAMIORU",15,0)
 ;
"RTN","SAMIORU",16,0)
 ;
"RTN","SAMIORU",17,0)
 ;@routine-credits
"RTN","SAMIORU",18,0)
 ;@primary-dev Larry G. Carlson (lgc)
"RTN","SAMIORU",19,0)
 ; larry@fiscientific.com
"RTN","SAMIORU",20,0)
 ;@primary-dev-org Vista Expertise Network (ven)
"RTN","SAMIORU",21,0)
 ; http://vistaexpertise.net
"RTN","SAMIORU",22,0)
 ;@copyright 2020/2021, lgc, all rights reserved
"RTN","SAMIORU",23,0)
 ;@license see routine SAMIUL
"RTN","SAMIORU",24,0)
 ;
"RTN","SAMIORU",25,0)
 ;@last-updated 2021-06-04T13:12Z
"RTN","SAMIORU",26,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMIORU",27,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMIORU",28,0)
 ;@submodule HL7 interface - SAMIHL* & SAMIOR*
"RTN","SAMIORU",29,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMIORU",30,0)
 ;@version 1.18.0.11+i11
"RTN","SAMIORU",31,0)
 ;@release-date 2020-01
"RTN","SAMIORU",32,0)
 ;@patch-list **8,11**
"RTN","SAMIORU",33,0)
 ;
"RTN","SAMIORU",34,0)
 ;@additional-dev Alexis R. Carlson (arc)
"RTN","SAMIORU",35,0)
 ; arc@vistaexpertise.net
"RTN","SAMIORU",36,0)
 ;@additional-dev George P. Lilly (gpl)
"RTN","SAMIORU",37,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIORU",38,0)
 ;@additional-dev Frederick D. S. Marshall (toad)
"RTN","SAMIORU",39,0)
 ; toad@vistaexpertise.net
"RTN","SAMIORU",40,0)
 ;@additional-dev Kenneth McGlothlen (mcglk)
"RTN","SAMIORU",41,0)
 ; mcglk@vistaexpertise.net
"RTN","SAMIORU",42,0)
 ;
"RTN","SAMIORU",43,0)
 ;@routine-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMIORU",44,0)
 ; see routine SAMIHL7
"RTN","SAMIORU",45,0)
 ;
"RTN","SAMIORU",46,0)
 ;@contents
"RTN","SAMIORU",47,0)
 ; $$EN-DFN-FINDORM-HL7VARS build & send ORU enrollment response
"RTN","SAMIORU",48,0)
 ;
"RTN","SAMIORU",49,0)
 ; ORMVARS get vars fr/patient's most recent ORM
"RTN","SAMIORU",50,0)
 ; HLENV set HL7 variables
"RTN","SAMIORU",51,0)
 ; $$SENDHL7 send HL7 message
"RTN","SAMIORU",52,0)
 ;
"RTN","SAMIORU",53,0)
 ; PID build PID segment for ORU msg
"RTN","SAMIORU",54,0)
 ; OBR build OBR segment for ORU msg
"RTN","SAMIORU",55,0)
 ; OBX build OBX segment for ORU msg
"RTN","SAMIORU",56,0)
 ; ADD2MSG add segment to OUTHL array
"RTN","SAMIORU",57,0)
 ;
"RTN","SAMIORU",58,0)
 ; TESTPID test generating PID
"RTN","SAMIORU",59,0)
 ; TESTOBR test generating OBR
"RTN","SAMIORU",60,0)
 ; TESTOBXV test generating OBX in vapalsyotta
"RTN","SAMIORU",61,0)
 ; TESTOBXC test generating OBX in Cache
"RTN","SAMIORU",62,0)
 ; TESTALL test hli $$EN^SAMIORU
"RTN","SAMIORU",63,0)
 ;
"RTN","SAMIORU",64,0)
 ;
"RTN","SAMIORU",65,0)
 ;
"RTN","SAMIORU",66,0)
 ;@section 1 hl7 protocol & applications that hli $$EN^SAMIORU calls
"RTN","SAMIORU",67,0)
 ;
"RTN","SAMIORU",68,0)
 ;
"RTN","SAMIORU",69,0)
 ;
"RTN","SAMIORU",70,0)
 ; SAMI HL7 ORU protocols
"RTN","SAMIORU",71,0)
 ;
"RTN","SAMIORU",72,0)
 ; NAME: PHX ENROLL ORU EVN                TYPE: event driver
"RTN","SAMIORU",73,0)
 ;   CREATOR: CARLSON,LARRY G              SENDING APPLICATION: PHX ORU SEND
"RTN","SAMIORU",74,0)
 ;   TRANSACTION MESSAGE TYPE: ORU         EVENT TYPE: R01
"RTN","SAMIORU",75,0)
 ;   ACCEPT ACK CODE: AL                   APPLICATION ACK TYPE: NE
"RTN","SAMIORU",76,0)
 ;   VERSION ID: 2.3
"RTN","SAMIORU",77,0)
 ; SUBSCRIBERS: PHX ENROLL ORU RECV
"RTN","SAMIORU",78,0)
 ;
"RTN","SAMIORU",79,0)
 ;
"RTN","SAMIORU",80,0)
 ; NAME: PHX ENROLL ORU RECV               TYPE: subscriber
"RTN","SAMIORU",81,0)
 ;   CREATOR: CARLSON,LARRY G              RECEIVING APPLICATION: PHX ORU RECV
"RTN","SAMIORU",82,0)
 ;   EVENT TYPE: R01                       LOGICAL LINK: PHX ORU
"RTN","SAMIORU",83,0)
 ;   RESPONSE MESSAGE TYPE: ACK            SENDING FACILITY REQUIRED?: YES
"RTN","SAMIORU",84,0)
 ;   RECEIVING FACILITY REQUIRED?: YES
"RTN","SAMIORU",85,0)
 ;
"RTN","SAMIORU",86,0)
 ;
"RTN","SAMIORU",87,0)
 ;
"RTN","SAMIORU",88,0)
 ; SAMI HL7 ORU applications
"RTN","SAMIORU",89,0)
 ;
"RTN","SAMIORU",90,0)
 ; NAME: PHX ORU SEND                      ACTIVE/INACTIVE: ACTIVE
"RTN","SAMIORU",91,0)
 ;   FACILITY NAME: VAPALS                 COUNTRY CODE: USA
"RTN","SAMIORU",92,0)
 ;   HL7 ENCODING CHARACTERS: ^~\&         HL7 FIELD SEPARATOR: |
"RTN","SAMIORU",93,0)
 ;
"RTN","SAMIORU",94,0)
 ;
"RTN","SAMIORU",95,0)
 ; NAME: PHX ORU RECV                      ACTIVE/INACTIVE: ACTIVE
"RTN","SAMIORU",96,0)
 ;   FACILITY NAME: VISTA                  COUNTRY CODE: USA
"RTN","SAMIORU",97,0)
 ;   HL7 ENCODING CHARACTERS: ^~\&         HL7 FIELD SEPARATOR: |
"RTN","SAMIORU",98,0)
 ;
"RTN","SAMIORU",99,0)
 ;
"RTN","SAMIORU",100,0)
 ;
"RTN","SAMIORU",101,0)
 ; SAMI HL logical link
"RTN","SAMIORU",102,0)
 ;
"RTN","SAMIORU",103,0)
 ; NODE: PHX ORU                           INSTITUTION: PHOENIX
"RTN","SAMIORU",104,0)
 ;   LLP TYPE: TCP                         DEVICE TYPE: Non-Persistent Client
"RTN","SAMIORU",105,0)
 ;   STATE: Inactive                       AUTOSTART: Enabled
"RTN","SAMIORU",106,0)
 ;   TIME STARTED: AUG 17,2020@00:15:48    SHUTDOWN LLP ?: NO
"RTN","SAMIORU",107,0)
 ;   QUEUE SIZE: 10                        RE-TRANSMISSION ATTEMPTS: 3
"RTN","SAMIORU",108,0)
 ;   READ TIMEOUT: 120                     ACK TIMEOUT: 120
"RTN","SAMIORU",109,0)
 ;   EXCEED RE-TRANSMIT ACTION: ignore     TCP/IP ADDRESS: ---.---.---.---
"RTN","SAMIORU",110,0)
 ;   TCP/IP PORT: 5000                     TCP/IP SERVICE TYPE: CLIENT (SENDER)
"RTN","SAMIORU",111,0)
 ;   PERSISTENT: NO                        IN QUEUE BACK POINTER: 16
"RTN","SAMIORU",112,0)
 ;   IN QUEUE FRONT POINTER: 16            OUT QUEUE BACK POINTER: 16
"RTN","SAMIORU",113,0)
 ;   OUT QUEUE FRONT POINTER: 16
"RTN","SAMIORU",114,0)
 ;
"RTN","SAMIORU",115,0)
 ;
"RTN","SAMIORU",116,0)
 ;
"RTN","SAMIORU",117,0)
 ;@section 2 main hli $$EN^SAMIORU
"RTN","SAMIORU",118,0)
 ;
"RTN","SAMIORU",119,0)
 ;
"RTN","SAMIORU",120,0)
 ;
"RTN","SAMIORU",121,0)
 ;@hli $$EN^SAMIORU
"RTN","SAMIORU",122,0)
EN(filter) ; build & send ORU enrollment response
"RTN","SAMIORU",123,0)
 ;
"RTN","SAMIORU",124,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORU",125,0)
 ;
"RTN","SAMIORU",126,0)
 ;;hli;function/procedure;clean;silent;sac;0% tests
"RTN","SAMIORU",127,0)
 ;@called-by
"RTN","SAMIORU",128,0)
 ; wsi WSVAPALS^SAMIHOM3
"RTN","SAMIORU",129,0)
 ;@calls
"RTN","SAMIORU",130,0)
 ; $$setroot^%wd
"RTN","SAMIORU",131,0)
 ; ORMVARS^SAMIORU
"RTN","SAMIORU",132,0)
 ; HLENV
"RTN","SAMIORU",133,0)
 ; PID
"RTN","SAMIORU",134,0)
 ; OBR
"RTN","SAMIORU",135,0)
 ; OBX
"RTN","SAMIORU",136,0)
 ; $$SENDHL7
"RTN","SAMIORU",137,0)
 ;@input
"RTN","SAMIORU",138,0)
 ; .filter = array by reference
"RTN","SAMIORU",139,0)
 ;  filter("sendprotocol") = defaults to Phoenix
"RTN","SAMIORU",140,0)
 ;  filter("sid") = sid, e.g. PHO00015
"RTN","SAMIORU",141,0)
 ;  filter("key") = sid, e.g. siform-2020-07-30
"RTN","SAMIORU",142,0)
 ;  filter("notenmbr") = note # in vapals-patients graph, e.g. 2
"RTN","SAMIORU",143,0)
 ;  filter("climit") = max #chars/line for text to display in CPRS
"RTN","SAMIORU",144,0)
 ;   defaults to 66
"RTN","SAMIORU",145,0)
 ; [patient data from patient-lookup graph]
"RTN","SAMIORU",146,0)
 ;@output = msgid - message generated or 0 - error, if function call
"RTN","SAMIORU",147,0)
 ; filter("rslt") = output if procedure call
"RTN","SAMIORU",148,0)
 ; HL7 ORU msg is built & sent
"RTN","SAMIORU",149,0)
 ;
"RTN","SAMIORU",150,0)
 ; NOTE: We will only be sending ORU messages out for patients for
"RTN","SAMIORU",151,0)
 ; whom at least one ORM has been received. Thus, we can trust the
"RTN","SAMIORU",152,0)
 ; info stored in the patient-lookup graph through an incoming ORM to
"RTN","SAMIORU",153,0)
 ; fill in fields of any ORU generated messages.
"RTN","SAMIORU",154,0)
 ;
"RTN","SAMIORU",155,0)
 ;
"RTN","SAMIORU",156,0)
 ;@stanza 2 setup
"RTN","SAMIORU",157,0)
 ;
"RTN","SAMIORU",158,0)
 ; debug
"RTN","SAMIORU",159,0)
 ; kill ^KBAP("SAMIORU")
"RTN","SAMIORU",160,0)
 ; merge ^KBAP("SAMIORU","filter")=filter
"RTN","SAMIORU",161,0)
 ;
"RTN","SAMIORU",162,0)
 set filter("rslt")=0
"RTN","SAMIORU",163,0)
 ;
"RTN","SAMIORU",164,0)
 new rootpl set rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIORU",165,0)
 set filter("rootpl")=rootpl
"RTN","SAMIORU",166,0)
 ;
"RTN","SAMIORU",167,0)
 new rootvp set rootvp=$$setroot^%wd("vapals-patients")
"RTN","SAMIORU",168,0)
 set filter("rootvp")=rootvp
"RTN","SAMIORU",169,0)
 ;
"RTN","SAMIORU",170,0)
 new sid set sid=$get(filter("sid"))
"RTN","SAMIORU",171,0)
 if sid="" do  quit:$quit filter("rslt")  quit
"RTN","SAMIORU",172,0)
 . set filter("rlst")="0^no sid provided"
"RTN","SAMIORU",173,0)
 . quit
"RTN","SAMIORU",174,0)
 ;
"RTN","SAMIORU",175,0)
 new key set key=$get(filter("key"))
"RTN","SAMIORU",176,0)
 if key="" do  quit:$quit filter("rslt")  quit
"RTN","SAMIORU",177,0)
 . set filter("rslt")="0^no key provided"
"RTN","SAMIORU",178,0)
 . quit
"RTN","SAMIORU",179,0)
 ;
"RTN","SAMIORU",180,0)
 new SNDPROT set SNDPROT=$get(filter("sendprotocol"))
"RTN","SAMIORU",181,0)
 if SNDPROT="" do
"RTN","SAMIORU",182,0)
 . set (SNDPROT,filter("sendprotocol"))="PHX ENROLL ORU EVN"
"RTN","SAMIORU",183,0)
 . quit
"RTN","SAMIORU",184,0)
 ;
"RTN","SAMIORU",185,0)
 new notenmbr set notenmbr=+$get(filter("notenmbr"))
"RTN","SAMIORU",186,0)
 if notenmbr=0 do  quit:$quit filter("rslt")  quit
"RTN","SAMIORU",187,0)
 . set filter("rslt")="0^no note number provided"
"RTN","SAMIORU",188,0)
 . quit
"RTN","SAMIORU",189,0)
 ;
"RTN","SAMIORU",190,0)
 ; merge ^KBAP("SAMIORU","filter2")=filter
"RTN","SAMIORU",191,0)
 ;
"RTN","SAMIORU",192,0)
 ;
"RTN","SAMIORU",193,0)
DFN ;@stanza 3 find vpien & plien from sid
"RTN","SAMIORU",194,0)
 ;
"RTN","SAMIORU",195,0)
 new dfn set dfn=@rootvp@("graph",sid,key,"dfn")
"RTN","SAMIORU",196,0)
 set filter("dfn")=dfn
"RTN","SAMIORU",197,0)
 ;
"RTN","SAMIORU",198,0)
 new vpien set vpien=dfn
"RTN","SAMIORU",199,0)
 set filter("vpien")=vpien
"RTN","SAMIORU",200,0)
 ;
"RTN","SAMIORU",201,0)
 new plien set plien=$order(@rootpl@("dfn",vpien,0))
"RTN","SAMIORU",202,0)
 set filter("plien")=plien
"RTN","SAMIORU",203,0)
 ;
"RTN","SAMIORU",204,0)
 ; get data from entry in patient-lookup graph
"RTN","SAMIORU",205,0)
 merge filter=@rootpl@(plien)
"RTN","SAMIORU",206,0)
 ;
"RTN","SAMIORU",207,0)
 ;
"RTN","SAMIORU",208,0)
FINDORM ;@stanza 4 return error if no ORM found
"RTN","SAMIORU",209,0)
 ;
"RTN","SAMIORU",210,0)
 if '$data(filter("ORM")) do  quit:$quit filter("rslt")  quit
"RTN","SAMIORU",211,0)
 . set filter("rslt")="0^Patient does not have previous ORM"
"RTN","SAMIORU",212,0)
 . quit
"RTN","SAMIORU",213,0)
 ;
"RTN","SAMIORU",214,0)
 kill filter("ORM")
"RTN","SAMIORU",215,0)
 do ORMVARS^SAMIORU(plien,.filter)
"RTN","SAMIORU",216,0)
 ;
"RTN","SAMIORU",217,0)
 ; merge ^KBAP("SAMIORU","filter","ORM")=filter
"RTN","SAMIORU",218,0)
 ;
"RTN","SAMIORU",219,0)
 ;
"RTN","SAMIORU",220,0)
HL7VARS ;@stanza 5 build & send hl7 msg
"RTN","SAMIORU",221,0)
 ;
"RTN","SAMIORU",222,0)
 ; get HL7 vars & escape sequences to build msg
"RTN","SAMIORU",223,0)
 new HL,HLA,HLECH,HLQ,OUTHL,HLFS,HLCC ; set by HLENV
"RTN","SAMIORU",224,0)
 do HLENV(SNDPROT)
"RTN","SAMIORU",225,0)
 ;
"RTN","SAMIORU",226,0)
 ; build segments in OUTHL
"RTN","SAMIORU",227,0)
 do PID(HLFS,HLCC,.filter,.OUTHL)
"RTN","SAMIORU",228,0)
 do OBR(HLFS,HLCC,.filter,.OUTHL)
"RTN","SAMIORU",229,0)
 do OBX(HLFS,HLCC,.filter,.OUTHL)
"RTN","SAMIORU",230,0)
 ;
"RTN","SAMIORU",231,0)
 ; send msg
"RTN","SAMIORU",232,0)
 new msgid set msgid=$$SENDHL7(SNDPROT,.OUTHL)
"RTN","SAMIORU",233,0)
 set filter("rslt")=msgid
"RTN","SAMIORU",234,0)
 ;
"RTN","SAMIORU",235,0)
 ; if a message id is returned, preface it with 1^
"RTN","SAMIORU",236,0)
 set:+$get(filter("rslt")) filter("rslt")=1_"^"_filter("rslt")
"RTN","SAMIORU",237,0)
 ;
"RTN","SAMIORU",238,0)
 ;
"RTN","SAMIORU",239,0)
 ;@stanza 6 termination
"RTN","SAMIORU",240,0)
 ;
"RTN","SAMIORU",241,0)
 quit:$quit $get(filter("rslt")) ; if called as function
"RTN","SAMIORU",242,0)
 quit  ; end of hli $$EN^SAMIORU
"RTN","SAMIORU",243,0)
 ;
"RTN","SAMIORU",244,0)
 ;
"RTN","SAMIORU",245,0)
 ;
"RTN","SAMIORU",246,0)
 ;@section 3 init & hl7 subroutines
"RTN","SAMIORU",247,0)
 ;
"RTN","SAMIORU",248,0)
 ;
"RTN","SAMIORU",249,0)
 ;
"RTN","SAMIORU",250,0)
ORMVARS(plien,filter) ; get vars fr/patient's most recent ORM
"RTN","SAMIORU",251,0)
 ;
"RTN","SAMIORU",252,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORU",253,0)
 ;
"RTN","SAMIORU",254,0)
 ;;private;procedure;clean;silent;sac;0% tests
"RTN","SAMIORU",255,0)
 ;@called-by
"RTN","SAMIORU",256,0)
 ; hli $$EN^SAMIORU
"RTN","SAMIORU",257,0)
 ;@calls
"RTN","SAMIORU",258,0)
 ; $$setroot^%wd
"RTN","SAMIORU",259,0)
 ;@input
"RTN","SAMIORU",260,0)
 ; plien
"RTN","SAMIORU",261,0)
 ; [patient data from patient-lookup graph]
"RTN","SAMIORU",262,0)
 ;@output
"RTN","SAMIORU",263,0)
 ; .filter
"RTN","SAMIORU",264,0)
 ;  filter("assignedlocation")="PHX-PULM RN LSS PHONE"
"RTN","SAMIORU",265,0)
 ;  filter("fulladdress")="7726 W ORCHID ST^^PHOENIX^AZ^85017"
"RTN","SAMIORU",266,0)
 ;  filter("msgid")="99000031ORM"
"RTN","SAMIORU",267,0)
 ;  filter("order")="PHO_LUNG"
"RTN","SAMIORU",268,0)
 ;  filter("order2")="LUNG"
"RTN","SAMIORU",269,0)
 ;  filter("ordercontrol")="NW"
"RTN","SAMIORU",270,0)
 ;  filter("ordereffectivedt")=20200616135751
"RTN","SAMIORU",271,0)
 ;  filter("ordernumber")=3200616135751
"RTN","SAMIORU",272,0)
 ;  filter("orderstatus")="NW"
"RTN","SAMIORU",273,0)
 ;  filter("patientclass")="O"
"RTN","SAMIORU",274,0)
 ;  filter("providerien")=244088
"RTN","SAMIORU",275,0)
 ;  filter("providernm")="GARCIA,DANIEL,P"
"RTN","SAMIORU",276,0)
 ;  filter("siteid")="PHO"
"RTN","SAMIORU",277,0)
 ;  filter("transactiondt")=20200616135751
"RTN","SAMIORU",278,0)
 ;
"RTN","SAMIORU",279,0)
 ; get variables from most recent ORM on this patient; builds extra
"RTN","SAMIORU",280,0)
 ; filter vars from the most recent ORM array found in the patient's
"RTN","SAMIORU",281,0)
 ; patient-lookup graph:
"RTN","SAMIORU",282,0)
 ;
"RTN","SAMIORU",283,0)
 ;@stanza 2 get variables from patient-lookup graph
"RTN","SAMIORU",284,0)
 ;
"RTN","SAMIORU",285,0)
 new rootpl set rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIORU",286,0)
 ;
"RTN","SAMIORU",287,0)
 new exit set exit=0
"RTN","SAMIORU",288,0)
 new node set node=$name(@rootpl@(plien,"ORM"))
"RTN","SAMIORU",289,0)
 new snode set snode=$piece(node,")")
"RTN","SAMIORU",290,0)
 new invdt set invdt=$qsubscript($query(@node),5)
"RTN","SAMIORU",291,0)
 for  do  quit:exit
"RTN","SAMIORU",292,0)
 . set node=$query(@node)
"RTN","SAMIORU",293,0)
 . set exit=node'[snode!(node'[invdt)
"RTN","SAMIORU",294,0)
 . quit:exit
"RTN","SAMIORU",295,0)
 . ;
"RTN","SAMIORU",296,0)
 . new var set var=$qsubscript(node,6)
"RTN","SAMIORU",297,0)
 . set filter(var)=@node
"RTN","SAMIORU",298,0)
 . quit
"RTN","SAMIORU",299,0)
 ;
"RTN","SAMIORU",300,0)
 ; don't confuse ORM message id with ORU message id
"RTN","SAMIORU",301,0)
 if $data(filter("msgid")) do
"RTN","SAMIORU",302,0)
 . set filter("ormmsgid")=filter("msgid")
"RTN","SAMIORU",303,0)
 . kill filter("msgid")
"RTN","SAMIORU",304,0)
 . quit
"RTN","SAMIORU",305,0)
 ;
"RTN","SAMIORU",306,0)
 ;
"RTN","SAMIORU",307,0)
 ;@stanza 3 termination
"RTN","SAMIORU",308,0)
 ;
"RTN","SAMIORU",309,0)
 quit  ; end of ORMVARS
"RTN","SAMIORU",310,0)
 ;
"RTN","SAMIORU",311,0)
 ;
"RTN","SAMIORU",312,0)
 ;
"RTN","SAMIORU",313,0)
HLENV(SNDPROT) ; set HL7 variables
"RTN","SAMIORU",314,0)
 ;
"RTN","SAMIORU",315,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORU",316,0)
 ;
"RTN","SAMIORU",317,0)
 ;;private;procedure;clean;silent;sac;0% tests
"RTN","SAMIORU",318,0)
 ;@called-by
"RTN","SAMIORU",319,0)
 ; hli $$EN^SAMIORU
"RTN","SAMIORU",320,0)
 ;@calls
"RTN","SAMIORU",321,0)
 ; INIT^HLFNC2
"RTN","SAMIORU",322,0)
 ;@input
"RTN","SAMIORU",323,0)
 ; SNDPROT = name of sending protocol (file #101)
"RTN","SAMIORU",324,0)
 ;  e.g. SNDPROT="PHX ENROLL ORM EVN"
"RTN","SAMIORU",325,0)
 ;@output
"RTN","SAMIORU",326,0)
 ; ]HL
"RTN","SAMIORU",327,0)
 ; ]HLA
"RTN","SAMIORU",328,0)
 ; ]HLECH
"RTN","SAMIORU",329,0)
 ; ]HLQ
"RTN","SAMIORU",330,0)
 ; ]HLFS
"RTN","SAMIORU",331,0)
 ; ]HLCC
"RTN","SAMIORU",332,0)
 ;
"RTN","SAMIORU",333,0)
 ; sets all necessary HL variables for building a message; caller is
"RTN","SAMIORU",334,0)
 ; responsible for newing all output variables
"RTN","SAMIORU",335,0)
 ;
"RTN","SAMIORU",336,0)
 ;
"RTN","SAMIORU",337,0)
 ;@stanza 2 init hl7 variables
"RTN","SAMIORU",338,0)
 ;
"RTN","SAMIORU",339,0)
 new PIEN set PIEN=$order(^ORD(101,"B",SNDPROT,0))
"RTN","SAMIORU",340,0)
 set HL="HLS(""HLS"")"
"RTN","SAMIORU",341,0)
 new INT set INT=1
"RTN","SAMIORU",342,0)
 ;
"RTN","SAMIORU",343,0)
 do INIT^HLFNC2(PIEN,.HL,INT) ; init vars in HL array to build msg
"RTN","SAMIORU",344,0)
 ;
"RTN","SAMIORU",345,0)
 set HLFS=$get(HL("FS"))
"RTN","SAMIORU",346,0)
 set HLECH=$get(HL("ECH"))
"RTN","SAMIORU",347,0)
 set HLCC=$extract(HLECH)
"RTN","SAMIORU",348,0)
 ;
"RTN","SAMIORU",349,0)
 ;
"RTN","SAMIORU",350,0)
 ;@stanza 3 termination
"RTN","SAMIORU",351,0)
 ;
"RTN","SAMIORU",352,0)
 quit  ; end of HLENV
"RTN","SAMIORU",353,0)
 ;
"RTN","SAMIORU",354,0)
 ;
"RTN","SAMIORU",355,0)
 ;
"RTN","SAMIORU",356,0)
SENDHL7(SNDPROT,OUTHL) ; send HL7 message
"RTN","SAMIORU",357,0)
 ;
"RTN","SAMIORU",358,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORU",359,0)
 ;
"RTN","SAMIORU",360,0)
 ;;private;function;clean;silent;sac;0% tests
"RTN","SAMIORU",361,0)
 ;@called-by
"RTN","SAMIORU",362,0)
 ; hli $$EN^SAMIORU
"RTN","SAMIORU",363,0)
 ;@calls
"RTN","SAMIORU",364,0)
 ; GENERATE^HLMA
"RTN","SAMIORU",365,0)
 ;@input
"RTN","SAMIORU",366,0)
 ; SNDPROT = name of the sending protocol
"RTN","SAMIORU",367,0)
 ; .OUTHL = array containing message to send
"RTN","SAMIORU",368,0)
 ; ^ORD(101,"B",SNDPROT,*) = protocol ien
"RTN","SAMIORU",369,0)
 ;@output = message ID
"RTN","SAMIORU",370,0)
 ;
"RTN","SAMIORU",371,0)
 ;
"RTN","SAMIORU",372,0)
 ;@stanza 2 call hl7 & send msg
"RTN","SAMIORU",373,0)
 ;
"RTN","SAMIORU",374,0)
 kill HLA("HLS")
"RTN","SAMIORU",375,0)
 merge HLA("HLS")=OUTHL
"RTN","SAMIORU",376,0)
 ;
"RTN","SAMIORU",377,0)
 ; zwrite HLA("HLS")
"RTN","SAMIORU",378,0)
 ;
"RTN","SAMIORU",379,0)
 new HLRESLT
"RTN","SAMIORU",380,0)
 if $data(HLA("HLS")) do
"RTN","SAMIORU",381,0)
 . ; write !,"GOT TO HERE"
"RTN","SAMIORU",382,0)
 . set HL("MTN")="ORU"
"RTN","SAMIORU",383,0)
 . new HLEID set HLEID=$order(^ORD(101,"B",SNDPROT,0))
"RTN","SAMIORU",384,0)
 . new HLARYTYP set HLARYTYP="LM"
"RTN","SAMIORU",385,0)
 . new HLFORMAT set HLFORMAT=1
"RTN","SAMIORU",386,0)
 . new HLMTIEN set HLMTIEN=""
"RTN","SAMIORU",387,0)
 . new HLP set HLP("PRIORITY")=1
"RTN","SAMIORU",388,0)
 . ;
"RTN","SAMIORU",389,0)
 . do GENERATE^HLMA(HLEID,HLARYTYP,HLFORMAT,.HLRESLT) ; send hl7 msg
"RTN","SAMIORU",390,0)
 . ;
"RTN","SAMIORU",391,0)
 . ; write !,"HLRESLT=",$get(HLRESLT),!
"RTN","SAMIORU",392,0)
 . quit
"RTN","SAMIORU",393,0)
 ;
"RTN","SAMIORU",394,0)
 set msgid=$get(HLRESLT)
"RTN","SAMIORU",395,0)
 ;
"RTN","SAMIORU",396,0)
 ;
"RTN","SAMIORU",397,0)
 ;@stanza 3 termination
"RTN","SAMIORU",398,0)
 ;
"RTN","SAMIORU",399,0)
 quit msgid ; end of $$SENDHL7
"RTN","SAMIORU",400,0)
 ;
"RTN","SAMIORU",401,0)
 ;
"RTN","SAMIORU",402,0)
 ;
"RTN","SAMIORU",403,0)
 ;@section 4 hl7 segment subroutines
"RTN","SAMIORU",404,0)
 ;
"RTN","SAMIORU",405,0)
 ;
"RTN","SAMIORU",406,0)
 ;
"RTN","SAMIORU",407,0)
PID(HLFS,HLCC,filter,OUTHL) ; build PID segment for ORU msg
"RTN","SAMIORU",408,0)
 ;
"RTN","SAMIORU",409,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORU",410,0)
 ;
"RTN","SAMIORU",411,0)
 ;;private;procedure;clean;silent;sac;0% tests
"RTN","SAMIORU",412,0)
 ;@called-by
"RTN","SAMIORU",413,0)
 ; hli $$EN^SAMIORU
"RTN","SAMIORU",414,0)
 ;@calls
"RTN","SAMIORU",415,0)
 ; $$UP^XLFSTR
"RTN","SAMIORU",416,0)
 ; ADD2MSG
"RTN","SAMIORU",417,0)
 ;@input
"RTN","SAMIORU",418,0)
 ; HLFS = field separator
"RTN","SAMIORU",419,0)
 ; HLCC = subfield separator
"RTN","SAMIORU",420,0)
 ; .filter = fields array
"RTN","SAMIORU",421,0)
 ; [patient data from patient-lookup graph]
"RTN","SAMIORU",422,0)
 ;@thruput
"RTN","SAMIORU",423,0)
 ; .OUTHL = output hl7 msg array
"RTN","SAMIORU",424,0)
 ;
"RTN","SAMIORU",425,0)
 ; The Patient Identifier segment (PID) is built from fields pulled
"RTN","SAMIORU",426,0)
 ; from initiating ORM message, recorded in vapals-patients graph.
"RTN","SAMIORU",427,0)
 ;
"RTN","SAMIORU",428,0)
 ;
"RTN","SAMIORU",429,0)
 ;@stanza 2 get graph root & subscript
"RTN","SAMIORU",430,0)
 new rootpl set rootpl=$get(filter("rootpl"))
"RTN","SAMIORU",431,0)
 new plien set plien=$get(filter("plien"))
"RTN","SAMIORU",432,0)
 ;
"RTN","SAMIORU",433,0)
 ;@stanza 3 PID-1 set id - patient id
"RTN","SAMIORU",434,0)
 new pid set $piece(pid,HLFS,1)=1
"RTN","SAMIORU",435,0)
 ;
"RTN","SAMIORU",436,0)
 ;@stanza 4 PID-3 patient id - internal id
"RTN","SAMIORU",437,0)
 new ssn set ssn=$get(@rootpl@(plien,"ssn"))
"RTN","SAMIORU",438,0)
 set $piece(pid,HLFS,3)=$get(ssn)
"RTN","SAMIORU",439,0)
 ;
"RTN","SAMIORU",440,0)
 ;@stanza 5 PID-5 patient name, last^first^middle^suffix^prefix
"RTN","SAMIORU",441,0)
 new name set name=$get(@rootpl@(plien,"saminame"))
"RTN","SAMIORU",442,0)
 set name=$translate($$UP^XLFSTR(name),",",HLCC)
"RTN","SAMIORU",443,0)
 set $piece(name,HLCC,7)="L"
"RTN","SAMIORU",444,0)
 set $piece(pid,HLFS,5)=$get(name)
"RTN","SAMIORU",445,0)
 ;
"RTN","SAMIORU",446,0)
 ;@stanza 6 PID-7 date & time of birth
"RTN","SAMIORU",447,0)
 new dob set dob=$get(filter("sbdob"))
"RTN","SAMIORU",448,0)
 set $piece(pid,HLFS,7)=$get(dob)
"RTN","SAMIORU",449,0)
 ;
"RTN","SAMIORU",450,0)
 ;@stanza 7 PID-8 sex
"RTN","SAMIORU",451,0)
 new sex set sex=$get(filter("sex"))
"RTN","SAMIORU",452,0)
 set $piece(pid,HLFS,8)=$get(sex)
"RTN","SAMIORU",453,0)
 ;
"RTN","SAMIORU",454,0)
 ;@stanza 8 PID-11 patient address, line1^line2^city^state^zip^country
"RTN","SAMIORU",455,0)
 new fulladdress set fulladdress=$get(filter("fulladdress"))
"RTN","SAMIORU",456,0)
 set $piece(pid,HLFS,11)=$get(fulladdress)
"RTN","SAMIORU",457,0)
 ;
"RTN","SAMIORU",458,0)
 ;@stanza 9 PID-18 patient account #
"RTN","SAMIORU",459,0)
 set $piece(pid,HLFS,13)=""
"RTN","SAMIORU",460,0)
 ;
"RTN","SAMIORU",461,0)
 ;@stanza 10 social security #
"RTN","SAMIORU",462,0)
 set $piece(pid,HLFS,19)=$get(@rootpl@(plien,"ssn"))
"RTN","SAMIORU",463,0)
 ;
"RTN","SAMIORU",464,0)
 ;@stanza 11 add PID segment to draft ORU msg
"RTN","SAMIORU",465,0)
 set pid="PID"_HLFS_pid
"RTN","SAMIORU",466,0)
 do ADD2MSG(pid)
"RTN","SAMIORU",467,0)
 ;
"RTN","SAMIORU",468,0)
 ;
"RTN","SAMIORU",469,0)
 ;@stanza 12 termination
"RTN","SAMIORU",470,0)
 ;
"RTN","SAMIORU",471,0)
 quit  ; end of PID
"RTN","SAMIORU",472,0)
 ;
"RTN","SAMIORU",473,0)
 ;
"RTN","SAMIORU",474,0)
 ;
"RTN","SAMIORU",475,0)
OBR(HLFS,HLCC,filter,OUTHL) ; build OBR segment for ORU msg
"RTN","SAMIORU",476,0)
 ;
"RTN","SAMIORU",477,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORU",478,0)
 ;
"RTN","SAMIORU",479,0)
 ;;private;procedure;clean;silent;sac;0% tests
"RTN","SAMIORU",480,0)
 ;@called-by
"RTN","SAMIORU",481,0)
 ; hli $$EN^SAMIORU
"RTN","SAMIORU",482,0)
 ;@calls
"RTN","SAMIORU",483,0)
 ; $$HTFM^XLFDT
"RTN","SAMIORU",484,0)
 ; $$FMTHL7^XLFDT
"RTN","SAMIORU",485,0)
 ; ADD2MSG
"RTN","SAMIORU",486,0)
 ;@input
"RTN","SAMIORU",487,0)
 ; HLFS = field separator
"RTN","SAMIORU",488,0)
 ; HLCC = subfield separator
"RTN","SAMIORU",489,0)
 ; .filter = fields array
"RTN","SAMIORU",490,0)
 ;@thruput
"RTN","SAMIORU",491,0)
 ; .OUTHL = output hl7 msg array
"RTN","SAMIORU",492,0)
 ;
"RTN","SAMIORU",493,0)
 ; The Observation Request segment (OBR) is built from fields pulled
"RTN","SAMIORU",494,0)
 ; from initiating ORM message, recorded in vapals-patients graph.
"RTN","SAMIORU",495,0)
 ;
"RTN","SAMIORU",496,0)
 ;
"RTN","SAMIORU",497,0)
 ;@stanza 2 OBR-1 set id
"RTN","SAMIORU",498,0)
 new obr set $piece(obr,HLFS,1)=1
"RTN","SAMIORU",499,0)
 ;
"RTN","SAMIORU",500,0)
 ;@stanza 3 OBR-3 filler order #
"RTN","SAMIORU",501,0)
 set $piece(obr,HLFS,3)=$get(filter("ordernumber")) ; universal id
"RTN","SAMIORU",502,0)
 ;
"RTN","SAMIORU",503,0)
 ;@stanza 4 OBR-4 universal service id
"RTN","SAMIORU",504,0)
 set $piece(obr,HLFS,4)=$get(filter("order"))_HLCC_$get(filter("order2"))
"RTN","SAMIORU",505,0)
 ;
"RTN","SAMIORU",506,0)
 ;@stanza 5 OBR-7 observation date & time
"RTN","SAMIORU",507,0)
 set $piece(obr,HLFS,7)=$$FMTHL7^XLFDT($$HTFM^XLFDT($horolog))
"RTN","SAMIORU",508,0)
 ;
"RTN","SAMIORU",509,0)
 ;@stanza 6 OBR-16 ordering provider
"RTN","SAMIORU",510,0)
 new ordpvd set ordpvd=$get(filter("providerien"))_HLCC_$get(filter("providernm"))
"RTN","SAMIORU",511,0)
 set ordpvd=$translate(ordpvd,",",HLCC)
"RTN","SAMIORU",512,0)
 set $piece(obr,HLFS,16)=ordpvd
"RTN","SAMIORU",513,0)
 ;
"RTN","SAMIORU",514,0)
 ;@stanza 7 OBR-25 result status
"RTN","SAMIORU",515,0)
 set $piece(obr,HLFS,25)="F" ; final
"RTN","SAMIORU",516,0)
 ;
"RTN","SAMIORU",517,0)
 ;@stanza 8 add OBR segment to draft ORU msg
"RTN","SAMIORU",518,0)
 set obr="OBR"_HLFS_obr
"RTN","SAMIORU",519,0)
 do ADD2MSG(obr)
"RTN","SAMIORU",520,0)
 ;
"RTN","SAMIORU",521,0)
 ;
"RTN","SAMIORU",522,0)
 ;@stanza 9 termination
"RTN","SAMIORU",523,0)
 ;
"RTN","SAMIORU",524,0)
 quit  ; end of OBR
"RTN","SAMIORU",525,0)
 ;
"RTN","SAMIORU",526,0)
 ;
"RTN","SAMIORU",527,0)
 ;
"RTN","SAMIORU",528,0)
OBX(HLFS,HLCC,filter,OUTHL) ; build OBX segment for ORU msg
"RTN","SAMIORU",529,0)
 ;
"RTN","SAMIORU",530,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORU",531,0)
 ;
"RTN","SAMIORU",532,0)
 ;;private;procedure;clean;silent;sac;0% tests
"RTN","SAMIORU",533,0)
 ;@called-by
"RTN","SAMIORU",534,0)
 ; hli $$EN^SAMIORU
"RTN","SAMIORU",535,0)
 ;@calls
"RTN","SAMIORU",536,0)
 ; ADD2MSG
"RTN","SAMIORU",537,0)
 ;@input
"RTN","SAMIORU",538,0)
 ; HLFS = field separator
"RTN","SAMIORU",539,0)
 ; HLCC = subfield separator
"RTN","SAMIORU",540,0)
 ; .filter = fields array
"RTN","SAMIORU",541,0)
 ; [patient data from patient-lookup graph]
"RTN","SAMIORU",542,0)
 ;@thruput
"RTN","SAMIORU",543,0)
 ; .OUTHL = output hl7 msg array
"RTN","SAMIORU",544,0)
 ;
"RTN","SAMIORU",545,0)
 ; The Observation Result segment (OBX) is built from fields pulled
"RTN","SAMIORU",546,0)
 ; from initiating ORM message, recorded in vapals-patients graph.
"RTN","SAMIORU",547,0)
 ;
"RTN","SAMIORU",548,0)
 ;
"RTN","SAMIORU",549,0)
 ;@stanza 2 set up
"RTN","SAMIORU",550,0)
 ;
"RTN","SAMIORU",551,0)
 new rootpl set rootpl=$get(filter("rootpl"))
"RTN","SAMIORU",552,0)
 new plien set plien=$get(filter("plien"))
"RTN","SAMIORU",553,0)
 ; build string used in each ORU OBX node
"RTN","SAMIORU",554,0)
 new str set str="TX"_HLFS_HLFS_"I1"_HLCC_"Intake Note"
"RTN","SAMIORU",555,0)
 ;
"RTN","SAMIORU",556,0)
 ;
"RTN","SAMIORU",557,0)
 ;@stanza 3 build & add OBX segment 1
"RTN","SAMIORU",558,0)
 ;
"RTN","SAMIORU",559,0)
 new name set name=$get(@rootpl@(plien,"saminame"))
"RTN","SAMIORU",560,0)
 new sex set sex=$get(@rootpl@(plien,"sex"))
"RTN","SAMIORU",561,0)
 new line1 set line1="Patient name : "_name_" "_HLFS_" "_sex
"RTN","SAMIORU",562,0)
 new segment set segment="OBX"_HLFS_1_HLFS_str_HLFS_line1_HLFS
"RTN","SAMIORU",563,0)
 do ADD2MSG(segment)
"RTN","SAMIORU",564,0)
 ;
"RTN","SAMIORU",565,0)
 ;
"RTN","SAMIORU",566,0)
 ;@stanza 4 build & add OBX segment 2
"RTN","SAMIORU",567,0)
 ;
"RTN","SAMIORU",568,0)
 new ssn set ssn=$get(@rootpl@(plien,"ssn"))
"RTN","SAMIORU",569,0)
 new line2 set line2="Record Number : "_ssn
"RTN","SAMIORU",570,0)
 set segment="OBX"_HLFS_2_HLFS_str_HLFS_line2_HLFS
"RTN","SAMIORU",571,0)
 do ADD2MSG(segment)
"RTN","SAMIORU",572,0)
 ;
"RTN","SAMIORU",573,0)
 ;
"RTN","SAMIORU",574,0)
 ;@stanza 5 build & add rest of OBX segments
"RTN","SAMIORU",575,0)
 ;
"RTN","SAMIORU",576,0)
 new sid set sid=$get(filter("sid"))
"RTN","SAMIORU",577,0)
 new key set key=$get(filter("key"))
"RTN","SAMIORU",578,0)
 new rootvp set rootvp=$get(filter("rootvp"))
"RTN","SAMIORU",579,0)
 new notenumber set notenmbr=$get(filter("notenmbr"))
"RTN","SAMIORU",580,0)
 new node set node=$name(@rootvp@("graph",sid,key,"notes",notenmbr,"text"))
"RTN","SAMIORU",581,0)
 ;
"RTN","SAMIORU",582,0)
 new exit set exit=0
"RTN","SAMIORU",583,0)
 new snode set snode=$piece(node,")")
"RTN","SAMIORU",584,0)
 new cnt set cnt=2
"RTN","SAMIORU",585,0)
 for  do  quit:exit
"RTN","SAMIORU",586,0)
 . set node=$query(@node)
"RTN","SAMIORU",587,0)
 . set exit=node'[snode
"RTN","SAMIORU",588,0)
 . quit:exit
"RTN","SAMIORU",589,0)
 . ;
"RTN","SAMIORU",590,0)
 . new vpcnt set vpcnt=$qsubscript(node,7)
"RTN","SAMIORU",591,0)
 . quit:'vpcnt
"RTN","SAMIORU",592,0)
 . ;
"RTN","SAMIORU",593,0)
 . set cnt=$get(cnt)+1
"RTN","SAMIORU",594,0)
 . set segment="OBX"_HLFS_cnt_HLFS_str_HLFS_@node_HLFS
"RTN","SAMIORU",595,0)
 . do ADD2MSG(segment)
"RTN","SAMIORU",596,0)
 . quit
"RTN","SAMIORU",597,0)
 ;
"RTN","SAMIORU",598,0)
 ;
"RTN","SAMIORU",599,0)
 ;@stanza 6 termination
"RTN","SAMIORU",600,0)
 ;
"RTN","SAMIORU",601,0)
 quit  ; end of OBX
"RTN","SAMIORU",602,0)
 ;
"RTN","SAMIORU",603,0)
 ;
"RTN","SAMIORU",604,0)
 ;
"RTN","SAMIORU",605,0)
ADD2MSG(segment) ; add segment to OUTHL array
"RTN","SAMIORU",606,0)
 ;
"RTN","SAMIORU",607,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORU",608,0)
 ;
"RTN","SAMIORU",609,0)
 ;;private;procedure;clean;silent;sac;0% tests
"RTN","SAMIORU",610,0)
 ;@called-by
"RTN","SAMIORU",611,0)
 ; PID
"RTN","SAMIORU",612,0)
 ; OBR
"RTN","SAMIORU",613,0)
 ; OBX
"RTN","SAMIORU",614,0)
 ;@calls none
"RTN","SAMIORU",615,0)
 ;@input
"RTN","SAMIORU",616,0)
 ; segment = segment to add
"RTN","SAMIORU",617,0)
 ;@thruput
"RTN","SAMIORU",618,0)
 ; ]OUTHL = segment added to OUTHL array
"RTN","SAMIORU",619,0)
 ; ]OUTHL("A") = most recently added segment
"RTN","SAMIORU",620,0)
 ;
"RTN","SAMIORU",621,0)
 ;
"RTN","SAMIORU",622,0)
 ;@stanza 2 add segment
"RTN","SAMIORU",623,0)
 ;
"RTN","SAMIORU",624,0)
 new outcnt set outcnt=$order(OUTHL("A"),-1)
"RTN","SAMIORU",625,0)
 set outcnt=$get(outcnt)+1
"RTN","SAMIORU",626,0)
 set OUTHL(outcnt)=segment
"RTN","SAMIORU",627,0)
 ;
"RTN","SAMIORU",628,0)
 ;
"RTN","SAMIORU",629,0)
 ;@stanza 3 termination
"RTN","SAMIORU",630,0)
 ;
"RTN","SAMIORU",631,0)
 quit  ; end of ADD2MSG
"RTN","SAMIORU",632,0)
 ;
"RTN","SAMIORU",633,0)
 ;
"RTN","SAMIORU",634,0)
 ;
"RTN","SAMIORU",635,0)
 ;@section 5 test subroutines
"RTN","SAMIORU",636,0)
 ;
"RTN","SAMIORU",637,0)
 ;
"RTN","SAMIORU",638,0)
 ;
"RTN","SAMIORU",639,0)
TESTPID(plien) ; test generating PID
"RTN","SAMIORU",640,0)
 ;
"RTN","SAMIORU",641,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORU",642,0)
 ;
"RTN","SAMIORU",643,0)
 ;;dmi-test;procedure;clean;silent;sac
"RTN","SAMIORU",644,0)
 ;@called-by none
"RTN","SAMIORU",645,0)
 ;@calls
"RTN","SAMIORU",646,0)
 ; $$setroot^%wd
"RTN","SAMIORU",647,0)
 ; HLENV^SAMIORU
"RTN","SAMIORU",648,0)
 ; ORMVARS^SAMIORU
"RTN","SAMIORU",649,0)
 ; PID^SAMIORU
"RTN","SAMIORU",650,0)
 ;@input
"RTN","SAMIORU",651,0)
 ; plien = patient-lookup graph subscript
"RTN","SAMIORU",652,0)
 ;@output
"RTN","SAMIORU",653,0)
 ; ]HL
"RTN","SAMIORU",654,0)
 ; ]HLA
"RTN","SAMIORU",655,0)
 ; ]HLECH
"RTN","SAMIORU",656,0)
 ; ]HLQ
"RTN","SAMIORU",657,0)
 ; ]HLFS
"RTN","SAMIORU",658,0)
 ; ]HLCC
"RTN","SAMIORU",659,0)
 ; ]OUTHL = message output array
"RTN","SAMIORU",660,0)
 ;
"RTN","SAMIORU",661,0)
 ;
"RTN","SAMIORU",662,0)
 ;@stanza 2 test PID
"RTN","SAMIORU",663,0)
 ;
"RTN","SAMIORU",664,0)
 new filter set filter("plien")=$get(plien)
"RTN","SAMIORU",665,0)
 ;
"RTN","SAMIORU",666,0)
 new rootpl set rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIORU",667,0)
 set filter("rootpl")=rootpl
"RTN","SAMIORU",668,0)
 ;
"RTN","SAMIORU",669,0)
 new SNDPROT set SNDPROT="PHX ENROLL ORU EVN"
"RTN","SAMIORU",670,0)
 do HLENV^SAMIORU(SNDPROT) ; set up HL variables
"RTN","SAMIORU",671,0)
 ;
"RTN","SAMIORU",672,0)
 merge filter=@rootpl@(plien)
"RTN","SAMIORU",673,0)
 kill filter("ORM")
"RTN","SAMIORU",674,0)
 do ORMVARS^SAMIORU(plien,.filter) ; get patient variables from graph
"RTN","SAMIORU",675,0)
 ;
"RTN","SAMIORU",676,0)
 do PID^SAMIORU(HLFS,HLCC,.filter,.OUTHL) ; build PID segment
"RTN","SAMIORU",677,0)
 ;
"RTN","SAMIORU",678,0)
 ;
"RTN","SAMIORU",679,0)
 ;@stanza 3 termination
"RTN","SAMIORU",680,0)
 ;
"RTN","SAMIORU",681,0)
 quit  ; end of TESTPID
"RTN","SAMIORU",682,0)
 ;
"RTN","SAMIORU",683,0)
 ;
"RTN","SAMIORU",684,0)
 ;
"RTN","SAMIORU",685,0)
TESTOBR(plien) ; test generating OBR
"RTN","SAMIORU",686,0)
 ;
"RTN","SAMIORU",687,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORU",688,0)
 ;
"RTN","SAMIORU",689,0)
 ;;dmi-test;procedure;clean;silent;sac
"RTN","SAMIORU",690,0)
 ;@called-by none
"RTN","SAMIORU",691,0)
 ;@calls
"RTN","SAMIORU",692,0)
 ; $$setroot^%wd
"RTN","SAMIORU",693,0)
 ; HLENV^SAMIORU
"RTN","SAMIORU",694,0)
 ; ORMVARS^SAMIORU
"RTN","SAMIORU",695,0)
 ; OBR^SAMIORU
"RTN","SAMIORU",696,0)
 ;@input
"RTN","SAMIORU",697,0)
 ; plien = patient-lookup graph subscript
"RTN","SAMIORU",698,0)
 ;@output
"RTN","SAMIORU",699,0)
 ; ]HL
"RTN","SAMIORU",700,0)
 ; ]HLA
"RTN","SAMIORU",701,0)
 ; ]HLECH
"RTN","SAMIORU",702,0)
 ; ]HLQ
"RTN","SAMIORU",703,0)
 ; ]HLFS
"RTN","SAMIORU",704,0)
 ; ]HLCC
"RTN","SAMIORU",705,0)
 ; ]OUTHL = message output array
"RTN","SAMIORU",706,0)
 ;
"RTN","SAMIORU",707,0)
 ;
"RTN","SAMIORU",708,0)
 ;@stanza 2 test OBR
"RTN","SAMIORU",709,0)
 ;
"RTN","SAMIORU",710,0)
 new filter set filter("plien")=$get(plien)
"RTN","SAMIORU",711,0)
 ;
"RTN","SAMIORU",712,0)
 new rootpl set rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIORU",713,0)
 set filter("rootpl")=rootpl
"RTN","SAMIORU",714,0)
 ;
"RTN","SAMIORU",715,0)
 new SNDPROT set SNDPROT="PHX ENROLL ORU EVN"
"RTN","SAMIORU",716,0)
 do HLENV^SAMIORU(SNDPROT) ; set up HL variables
"RTN","SAMIORU",717,0)
 ;
"RTN","SAMIORU",718,0)
 merge filter=@rootpl@(plien)
"RTN","SAMIORU",719,0)
 kill filter("ORM")
"RTN","SAMIORU",720,0)
 do ORMVARS^SAMIORU(plien,.filter) ; get patient variables from graph
"RTN","SAMIORU",721,0)
 ;
"RTN","SAMIORU",722,0)
 do OBR^SAMIORU(HLFS,HLCC,.filter,.OUTHL) ; build OBR segment
"RTN","SAMIORU",723,0)
 ;
"RTN","SAMIORU",724,0)
 ;
"RTN","SAMIORU",725,0)
 ;@stanza 3 termination
"RTN","SAMIORU",726,0)
 ;
"RTN","SAMIORU",727,0)
 quit  ; end of TESTOBR
"RTN","SAMIORU",728,0)
 ;
"RTN","SAMIORU",729,0)
 ;
"RTN","SAMIORU",730,0)
 ;
"RTN","SAMIORU",731,0)
TESTOBXV ; test generating OBX in vapalsyotta
"RTN","SAMIORU",732,0)
 ;
"RTN","SAMIORU",733,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORU",734,0)
 ;
"RTN","SAMIORU",735,0)
 ;;dmi-test;procedure;clean;silent;sac
"RTN","SAMIORU",736,0)
 ;@called-by none
"RTN","SAMIORU",737,0)
 ;@calls
"RTN","SAMIORU",738,0)
 ; $$setroot^%wd
"RTN","SAMIORU",739,0)
 ; HLENV^SAMIORU
"RTN","SAMIORU",740,0)
 ; ORMVARS^SAMIORU
"RTN","SAMIORU",741,0)
 ; OBX^SAMIORU
"RTN","SAMIORU",742,0)
 ;@input
"RTN","SAMIORU",743,0)
 ; patient-lookup graph
"RTN","SAMIORU",744,0)
 ; vapals-patients graph
"RTN","SAMIORU",745,0)
 ; protocol PHX ENROLL ORU EVN
"RTN","SAMIORU",746,0)
 ;@output
"RTN","SAMIORU",747,0)
 ; ]HL
"RTN","SAMIORU",748,0)
 ; ]HLA
"RTN","SAMIORU",749,0)
 ; ]HLECH
"RTN","SAMIORU",750,0)
 ; ]HLQ
"RTN","SAMIORU",751,0)
 ; ]HLFS
"RTN","SAMIORU",752,0)
 ; ]HLCC
"RTN","SAMIORU",753,0)
 ; ]OUTHL = message output array
"RTN","SAMIORU",754,0)
 ;
"RTN","SAMIORU",755,0)
 ;
"RTN","SAMIORU",756,0)
 ;@stanza 2 test OBX
"RTN","SAMIORU",757,0)
 ;
"RTN","SAMIORU",758,0)
 new rootpl set rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIORU",759,0)
 new filter set filter("rootpl")=rootpl
"RTN","SAMIORU",760,0)
 ;
"RTN","SAMIORU",761,0)
 new rootvp set rootvp=$$setroot^%wd("vapals-patients")
"RTN","SAMIORU",762,0)
 set filter("rootvp")=rootvp
"RTN","SAMIORU",763,0)
 ;
"RTN","SAMIORU",764,0)
 new SNDPROT set SNDPROT="PHX ENROLL ORU EVN"
"RTN","SAMIORU",765,0)
 do HLENV^SAMIORU(SNDPROT) ; set up HL variables
"RTN","SAMIORU",766,0)
 ;
"RTN","SAMIORU",767,0)
 new sid set sid="PHO00015"
"RTN","SAMIORU",768,0)
 set filter("sid")=sid
"RTN","SAMIORU",769,0)
 ;
"RTN","SAMIORU",770,0)
 new key set key="siform-2020-07-30"
"RTN","SAMIORU",771,0)
 set filter("key")=key
"RTN","SAMIORU",772,0)
 ;
"RTN","SAMIORU",773,0)
 set plien=@rootvp@("graph",sid,key,"dfn")
"RTN","SAMIORU",774,0)
 set filter("plien")=plien
"RTN","SAMIORU",775,0)
 ;
"RTN","SAMIORU",776,0)
 merge filter=@rootpl@(plien)
"RTN","SAMIORU",777,0)
 kill filter("ORM")
"RTN","SAMIORU",778,0)
 do ORMVARS^SAMIORU(plien,.filter) ; get patient variables from graph
"RTN","SAMIORU",779,0)
 ;
"RTN","SAMIORU",780,0)
 set filter("climit")=66
"RTN","SAMIORU",781,0)
 set filter("notenmbr")=1
"RTN","SAMIORU",782,0)
 do OBX^SAMIORU(HLFS,HLCC,.filter,.OUTHL) ; build OBX segment
"RTN","SAMIORU",783,0)
 ;
"RTN","SAMIORU",784,0)
 ;
"RTN","SAMIORU",785,0)
 ;@stanza 3 termination
"RTN","SAMIORU",786,0)
 ;
"RTN","SAMIORU",787,0)
 quit  ; end of TESTOBXV
"RTN","SAMIORU",788,0)
 ;
"RTN","SAMIORU",789,0)
 ;
"RTN","SAMIORU",790,0)
 ;
"RTN","SAMIORU",791,0)
TESTOBXC ; test generating OBX in Cache
"RTN","SAMIORU",792,0)
 ;
"RTN","SAMIORU",793,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORU",794,0)
 ;
"RTN","SAMIORU",795,0)
 ;;dmi-test;procedure;clean;silent;**SAC**
"RTN","SAMIORU",796,0)
 ;@called-by none
"RTN","SAMIORU",797,0)
 ;@calls
"RTN","SAMIORU",798,0)
 ; $$setroot^%wd
"RTN","SAMIORU",799,0)
 ; HLENV^SAMIORU
"RTN","SAMIORU",800,0)
 ; ORMVARS^SAMIORU
"RTN","SAMIORU",801,0)
 ; OBX^SAMIORU
"RTN","SAMIORU",802,0)
 ;@input
"RTN","SAMIORU",803,0)
 ; patient-lookup graph
"RTN","SAMIORU",804,0)
 ; vapals-patients graph
"RTN","SAMIORU",805,0)
 ; protocol PHX ENROLL ORU EVN
"RTN","SAMIORU",806,0)
 ;@output
"RTN","SAMIORU",807,0)
 ; ]HL
"RTN","SAMIORU",808,0)
 ; ]HLA
"RTN","SAMIORU",809,0)
 ; ]HLECH
"RTN","SAMIORU",810,0)
 ; ]HLQ
"RTN","SAMIORU",811,0)
 ; ]HLFS
"RTN","SAMIORU",812,0)
 ; ]HLCC
"RTN","SAMIORU",813,0)
 ; ]OUTHL = message output array
"RTN","SAMIORU",814,0)
 ;@sac-violation
"RTN","SAMIORU",815,0)
 ; 1. $zversion
"RTN","SAMIORU",816,0)
 ;
"RTN","SAMIORU",817,0)
 ;
"RTN","SAMIORU",818,0)
 ;@stanza 2 test OBX
"RTN","SAMIORU",819,0)
 ;
"RTN","SAMIORU",820,0)
 new rootpl set rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIORU",821,0)
 new filter set filter("rootpl")=rootpl
"RTN","SAMIORU",822,0)
 ;
"RTN","SAMIORU",823,0)
 new rootvp set rootvp=$$setroot^%wd("vapals-patients")
"RTN","SAMIORU",824,0)
 set filter("rootvp")=rootvp
"RTN","SAMIORU",825,0)
 ;
"RTN","SAMIORU",826,0)
 new SNDPROT set SNDPROT="PHX ENROLL ORU EVN"
"RTN","SAMIORU",827,0)
 do HLENV^SAMIORU(SNDPROT) ; set up HL variables
"RTN","SAMIORU",828,0)
 ;
"RTN","SAMIORU",829,0)
 new sid set sid="PHO00015"
"RTN","SAMIORU",830,0)
 set filter("sid")=sid
"RTN","SAMIORU",831,0)
 ;
"RTN","SAMIORU",832,0)
 new key set key="siform-2020-07-30"
"RTN","SAMIORU",833,0)
 set filter("key")=key
"RTN","SAMIORU",834,0)
 ;
"RTN","SAMIORU",835,0)
 set plien=@rootvp@("graph",sid,key,"dfn")
"RTN","SAMIORU",836,0)
 set filter("plien")=plien
"RTN","SAMIORU",837,0)
 ;
"RTN","SAMIORU",838,0)
 merge filter=@rootpl@(plien)
"RTN","SAMIORU",839,0)
 kill filter("ORM")
"RTN","SAMIORU",840,0)
 do ORMVARS^SAMIORU(plien,.filter) ; get patient variables from graph
"RTN","SAMIORU",841,0)
 ;
"RTN","SAMIORU",842,0)
 set filter("climit")=66
"RTN","SAMIORU",843,0)
 set filter("notenmbr")=2
"RTN","SAMIORU",844,0)
 set filter("Cache")=$zversion["Cache"
"RTN","SAMIORU",845,0)
 do OBX^SAMIORU(HLFS,HLCC,.filter,.OUTHL)
"RTN","SAMIORU",846,0)
 ;
"RTN","SAMIORU",847,0)
 ;
"RTN","SAMIORU",848,0)
 ;@stanza 3 termination
"RTN","SAMIORU",849,0)
 ;
"RTN","SAMIORU",850,0)
 quit  ; test of TESTOBXC
"RTN","SAMIORU",851,0)
 ;
"RTN","SAMIORU",852,0)
 ;
"RTN","SAMIORU",853,0)
 ;
"RTN","SAMIORU",854,0)
TESTALL ; test hli $$EN^SAMIORU
"RTN","SAMIORU",855,0)
 ;
"RTN","SAMIORU",856,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIORU",857,0)
 ;
"RTN","SAMIORU",858,0)
 ;;dmi-test;procedure;clean;silent;sac
"RTN","SAMIORU",859,0)
 ;@called-by none
"RTN","SAMIORU",860,0)
 ;@calls
"RTN","SAMIORU",861,0)
 ; $$EN^SAMIORU
"RTN","SAMIORU",862,0)
 ;@input
"RTN","SAMIORU",863,0)
 ; patient PHO00008 in graphstore
"RTN","SAMIORU",864,0)
 ; form siform-2021-03-12 in graphstore
"RTN","SAMIORU",865,0)
 ;@output
"RTN","SAMIORU",866,0)
 ; build & send hl7 message
"RTN","SAMIORU",867,0)
 ; ]filter (killed & returned)
"RTN","SAMIORU",868,0)
 ; ]OUTHL (killed but not returned)
"RTN","SAMIORU",869,0)
 ;
"RTN","SAMIORU",870,0)
 ;
"RTN","SAMIORU",871,0)
 ;@stanza 2 test hli $$EN^SAMIORU
"RTN","SAMIORU",872,0)
 ;
"RTN","SAMIORU",873,0)
 kill filter
"RTN","SAMIORU",874,0)
 kill OUTHL
"RTN","SAMIORU",875,0)
 ; set filter("sendprotocol")="PHX ENROLL ORU EVN"
"RTN","SAMIORU",876,0)
 set filter("sid")="PHO00008"
"RTN","SAMIORU",877,0)
 set filter("key")="siform-2021-03-12"
"RTN","SAMIORU",878,0)
 set filter("notenmbr")=1
"RTN","SAMIORU",879,0)
 ;
"RTN","SAMIORU",880,0)
 new poopoo set poopoo=$$EN^SAMIORU(.filter) ; build & send ORU msg
"RTN","SAMIORU",881,0)
 ;
"RTN","SAMIORU",882,0)
 ;
"RTN","SAMIORU",883,0)
 ;@stanza 3 termination
"RTN","SAMIORU",884,0)
 ;
"RTN","SAMIORU",885,0)
 quit  ; end of TESTALL
"RTN","SAMIORU",886,0)
 ;
"RTN","SAMIORU",887,0)
 ;
"RTN","SAMIORU",888,0)
 ;
"RTN","SAMIORU",889,0)
EOR ; end of routine SAMIORU
"RTN","SAMIOUL")
0^50^B92656
"RTN","SAMIOUL",1,0)
SAMIOUL ;ven/toad - HL7 development log ;2021-06-08t19:27z
"RTN","SAMIOUL",2,0)
 ;;18.0;SAMI;**12**;2020-01;Build 1
"RTN","SAMIOUL",3,0)
 ;;18.12
"RTN","SAMIOUL",4,0)
 ;
"RTN","SAMIOUL",5,0)
 ; SAMIOUL is the development log for the SAMIHL7 & SAMIOR* routines,
"RTN","SAMIOUL",6,0)
 ; which support VAPALS-ELCAP HL7 processing.
"RTN","SAMIOUL",7,0)
 ;
"RTN","SAMIOUL",8,0)
 quit  ; no entry from top
"RTN","SAMIOUL",9,0)
 ;
"RTN","SAMIOUL",10,0)
 ;
"RTN","SAMIOUL",11,0)
 ;
"RTN","SAMIOUL",12,0)
 ;@section 0 primary development
"RTN","SAMIOUL",13,0)
 ;
"RTN","SAMIOUL",14,0)
 ;
"RTN","SAMIOUL",15,0)
 ;
"RTN","SAMIOUL",16,0)
 ;@routine-credits
"RTN","SAMIOUL",17,0)
 ;@dev-main Larry G. Carlson (lgc)
"RTN","SAMIOUL",18,0)
 ; lgc@vistaexpertise.net
"RTN","SAMIOUL",19,0)
 ;@dev-org-main Vista Expertise Network (ven)
"RTN","SAMIOUL",20,0)
 ; http://vistaexpertise.net
"RTN","SAMIOUL",21,0)
 ;@copyright 2017/2021, lgc, all rights reserved
"RTN","SAMIOUL",22,0)
 ;@license see routine SAMIUL
"RTN","SAMIOUL",23,0)
 ;
"RTN","SAMIOUL",24,0)
 ;@last-update 2021-06-08t19:27z
"RTN","SAMIOUL",25,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMIOUL",26,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMIOUL",27,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMIOUL",28,0)
 ;@version 18.12
"RTN","SAMIOUL",29,0)
 ;@release-date 2020-01
"RTN","SAMIOUL",30,0)
 ;@patch-list **12**
"RTN","SAMIOUL",31,0)
 ;
"RTN","SAMIOUL",32,0)
 ;@dev-add Alexis R. Carlson (arc)
"RTN","SAMIOUL",33,0)
 ; arc@vistaexpertise.net
"RTN","SAMIOUL",34,0)
 ;@dev-add George P. Lilly (gpl)
"RTN","SAMIOUL",35,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIOUL",36,0)
 ;@dev-add Frederick D. S. Marshall (toad)
"RTN","SAMIOUL",37,0)
 ; toad@vistaexpertise.net
"RTN","SAMIOUL",38,0)
 ;@dev-add Kenneth W. McGlothlen (mcglk)
"RTN","SAMIOUL",39,0)
 ; mcglk@vistaexpertise.net
"RTN","SAMIOUL",40,0)
 ;
"RTN","SAMIOUL",41,0)
 ;@module-credits
"RTN","SAMIOUL",42,0)
 ;@project VA Partnership to Increase Access to Lung Screening
"RTN","SAMIOUL",43,0)
 ; (VA-PALS)
"RTN","SAMIOUL",44,0)
 ; http://va-pals.org/
"RTN","SAMIOUL",45,0)
 ;@funding 2017/2021, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMIOUL",46,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMIOUL",47,0)
 ;@partner-org Veterans Affairs Office of Rural health
"RTN","SAMIOUL",48,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMIOUL",49,0)
 ;@partner-org International Early Lung Cancer Action Program (I-ELCAP)
"RTN","SAMIOUL",50,0)
 ; http://ielcap.com/
"RTN","SAMIOUL",51,0)
 ;@partner-org Paraxial Technologies (par)
"RTN","SAMIOUL",52,0)
 ; http://paraxialtech.com/
"RTN","SAMIOUL",53,0)
 ;@partner-org Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMIOUL",54,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMIOUL",55,0)
 ;
"RTN","SAMIOUL",56,0)
 ;@module-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMIOUL",57,0)
 ;
"RTN","SAMIOUL",58,0)
 ; 2019-10-03/28 ven/lgc 18.0 d01fd10,ff6cea0,3670fb3,613e8ff,
"RTN","SAMIOUL",59,0)
 ; 82979cc
"RTN","SAMIOUL",60,0)
 ;  SAMIHL7 HL7 routines to populate & update patient-lookup graph,
"RTN","SAMIOUL",61,0)
 ; reorganize HL7 routines & work on unit tests, change how gender is
"RTN","SAMIOUL",62,0)
 ; handled, update unit test routines for dfn 1, further updates to
"RTN","SAMIOUL",63,0)
 ; SAMI unit tests.
"RTN","SAMIOUL",64,0)
 ;
"RTN","SAMIOUL",65,0)
 ; 2020-01-15 ven/lgc 18.0 0a2af96
"RTN","SAMIOUL",66,0)
 ;  SAMIHL7 bulk commit due to switch to cache, major overhaul:
"RTN","SAMIOUL",67,0)
 ; update capture of array structure; in UPDTPTL add UPDTPTL1,MATCHLOG
"RTN","SAMIOUL",68,0)
 ; & update indices; r/root w/rootpl; annotate; cut DELPTL & 2 lines,
"RTN","SAMIOUL",69,0)
 ; leaving rest of subroutine orphaned.
"RTN","SAMIOUL",70,0)
 ;
"RTN","SAMIOUL",71,0)
 ; 2020-01-16 ven/lgc 18.0 [no repo commit]
"RTN","SAMIOUL",72,0)
 ;  SAMIHL7 in MATCHLOG unbreak line MATCHLOG+13.
"RTN","SAMIOUL",73,0)
 ;
"RTN","SAMIOUL",74,0)
 ; 2020-02-04/12 ven/lgc 18.11 ee53d8a
"RTN","SAMIOUL",75,0)
 ;  SAMIORM,SAMIORR ORM HL7 routines.
"RTN","SAMIOUL",76,0)
 ;
"RTN","SAMIOUL",77,0)
 ; 2020-07-24/28 ven/lgc 18.8/11 c08b051
"RTN","SAMIOUL",78,0)
 ;  SAMIHL7,SAMIORM,SAMIORU update for ORU messaging.
"RTN","SAMIOUL",79,0)
 ;  SAMIHL7 in top update incoming fields array example; passim
"RTN","SAMIOUL",80,0)
 ; checkpoint into ^KBAP; in UPDTPTL1 add block to if new patient get
"RTN","SAMIOUL",81,0)
 ; next ptien to use & set dfn; in MATCHLOG r/MATCHLOG w/HL7MATCHLOG,
"RTN","SAMIOUL",82,0)
 ; if new patient load ORM msg data later, fix undef error, as didn't
"RTN","SAMIOUL",83,0)
 ; get dfn from va vista server (only ssn) do not try to set remotedfn
"RTN","SAMIOUL",84,0)
 ; field, build saminame index, call CAPTORM to save all ORM flds in
"RTN","SAMIOUL",85,0)
 ; patient-lookup; add CAPTORM; in ACK clear & set HLA("HLA").
"RTN","SAMIOUL",86,0)
 ;  SAMIORM passim annotate, checkpoint into ^KBAP; in BLDAR get
"RTN","SAMIOUL",87,0)
 ; inverse date, put HL7 nodes in samihl7; in DEBUG save msg id; add
"RTN","SAMIOUL",88,0)
 ; PMSG; in PARSEMSG call PV1,ORC; in PID r/dfn w/ssn, get name flds,
"RTN","SAMIOUL",89,0)
 ; get last5; add tag ORMADDR; add PV1,ORC to handle those segments;
"RTN","SAMIOUL",90,0)
 ; in OBR reorg fields array; add CAMELCAS; update TEST.
"RTN","SAMIOUL",91,0)
 ;  SAMIORU new routine?
"RTN","SAMIOUL",92,0)
 ;
"RTN","SAMIOUL",93,0)
 ; 2020-08-17/09-04 ven/lgc 18.11 f3d7b38
"RTN","SAMIOUL",94,0)
 ;  SAMIORU update to remove gtm mod: extensive chgs passim, incl add
"RTN","SAMIOUL",95,0)
 ; TESTALL,TESTOBXC TESTOBX > TESTOBXV; PID2 > PID1; in DFN pull data
"RTN","SAMIOUL",96,0)
 ; from entry in patient-lookup graph; in HL7VARS if msg id returned,
"RTN","SAMIOUL",97,0)
 ; preface it with 1^; in ORMVARS don't confuse ORM msg id w/ORU msg
"RTN","SAMIOUL",98,0)
 ; id; etc.
"RTN","SAMIOUL",99,0)
 ;
"RTN","SAMIOUL",100,0)
 ; 2021-02-03 ven/gpl 18.8 54a0c2e
"RTN","SAMIOUL",101,0)
 ;  SAMIORU in EN chg line length limit (climit) to 81.
"RTN","SAMIOUL",102,0)
 ;
"RTN","SAMIOUL",103,0)
 ; 2021-03-12/13 ven/lgc 18.8 6093b45
"RTN","SAMIOUL",104,0)
 ;  SAMIORU larry's latest version of hl7 message building to
"RTN","SAMIOUL",105,0)
 ; preserve note formatting: in TESTALL cut dead code, chg patient &
"RTN","SAMIOUL",106,0)
 ; form, call EN&SAMIORU as function; in EN add debug code, cut climit
"RTN","SAMIOUL",107,0)
 ; lines & cache filter; in DFN add tag FINDORM; in OBX cut climit
"RTN","SAMIOUL",108,0)
 ; lines & dead code & BLDTXT.
"RTN","SAMIOUL",109,0)
 ;
"RTN","SAMIOUL",110,0)
 ; 2021-04-14/20 ven/gpl 18.11 3a5756a,d7182d7
"RTN","SAMIOUL",111,0)
 ;  SAMIHL7 fix for duplicate patients fr/HL7, fix for updating 
"RTN","SAMIOUL",112,0)
 ; patient-lookup graph on receipt of 2nd order: in UPDTPTL1 uppercase
"RTN","SAMIOUL",113,0)
 ; names; in MATCHLOG prevent undef error.
"RTN","SAMIOUL",114,0)
 ;
"RTN","SAMIOUL",115,0)
 ; 2021-05-11 ven/lgc 18.11 [no repo commit]
"RTN","SAMIOUL",116,0)
 ;  SAMIORM in UPDTPTL stop updating hl7 counter node, because it was
"RTN","SAMIOUL",117,0)
 ; updated earlier, just set hl7cnt; in OBR set fields("siteid").
"RTN","SAMIOUL",118,0)
 ;
"RTN","SAMIOUL",119,0)
 ; 2021-05-20/21 ven/mcglk&toad 18.11 43a4557,70fc6ba,129e96b
"RTN","SAMIOUL",120,0)
 ;  SAMIHL7 passim build hdr comments & dev log, lt refactor, bump
"RTN","SAMIOUL",121,0)
 ; version.
"RTN","SAMIOUL",122,0)
 ;
"RTN","SAMIOUL",123,0)
 ; 2021-05-27 ven/lgc 18.11 2093bf0,a51e714
"RTN","SAMIOUL",124,0)
 ;  SAMIHL7,SAMIORM new fixes for saving ORM & HL7 in patient-lookup
"RTN","SAMIOUL",125,0)
 ;  SAMIHL7 in section 1 update sample array; in MATCHLOG
"RTN","SAMIOUL",126,0)
 ; r/fields(field)'="" w/'(field=""); in CAPTORM annotate, r/invdt
"RTN","SAMIOUL",127,0)
 ; algo w/hl7cnt algo to align array structures of SAMIHL7 & SAMIORM,
"RTN","SAMIOUL",128,0)
 ; to use counters for subscripts instead of inverse dates.
"RTN","SAMIOUL",129,0)
 ;  SAMIORM in BLDARR, new hl7cnt, cut tag DEBUG, move inits of INFS,
"RTN","SAMIOUL",130,0)
 ; INCC up to where DEBUG tag was; in PMSG fix KBaP typo, annotate,
"RTN","SAMIOUL",131,0)
 ; refactor block, get msgid; in PID get suffix.
"RTN","SAMIOUL",132,0)
 ;
"RTN","SAMIOUL",133,0)
 ; 2021-06-01/04 ven/mcglk&toad 18.11 7dd9410c
"RTN","SAMIOUL",134,0)
 ;  SAMIHL7 update log, add SAMIORM,ORR,ORU to log.
"RTN","SAMIOUL",135,0)
 ;  SAMIORM,ORR,ORU: annotate, document hl7 call structure, refactor,
"RTN","SAMIOUL",136,0)
 ; bump version & dates.
"RTN","SAMIOUL",137,0)
 ;
"RTN","SAMIOUL",138,0)
 ; 2021-06-08 ven/toad 18.12-t1 91baf32e,ba8c9192
"RTN","SAMIOUL",139,0)
 ;  SAMIORM in BLDARR fix new cnt, bug introduced in 06-04 refactor,
"RTN","SAMIOUL",140,0)
 ; bump version; in PID uppercase patient name; cut CAMELCAS.
"RTN","SAMIOUL",141,0)
 ;  SAMIOUL < SAMIHL7 create routine from existing dev log.
"RTN","SAMIOUL",142,0)
 ;
"RTN","SAMIOUL",143,0)
 ;
"RTN","SAMIOUL",144,0)
 ;
"RTN","SAMIOUL",145,0)
 ;@contents
"RTN","SAMIOUL",146,0)
 ; SAMIHL7 HL7 utilities
"RTN","SAMIOUL",147,0)
 ; SAMIORM HL7 ORM > patient-lookup
"RTN","SAMIOUL",148,0)
 ; SAMIORR HL7 ORR enrollment response
"RTN","SAMIOUL",149,0)
 ; SAMIORU HL7 ORU enrollment response
"RTN","SAMIOUL",150,0)
 ; SAMIOUL HL7 development log
"RTN","SAMIOUL",151,0)
 ;
"RTN","SAMIOUL",152,0)
 ;
"RTN","SAMIOUL",153,0)
 ;
"RTN","SAMIOUL",154,0)
EOR ; end of routine SAMIOUL
"RTN","SAMIPARM")
0^51^B7340153
"RTN","SAMIPARM",1,0)
SAMIPARM ;ven/gpl - get params web service ;2021-07-01t17:45z
"RTN","SAMIPARM",2,0)
 ;;18.0;SAMI;**12**;2020-01;Build 1
"RTN","SAMIPARM",3,0)
 ;;18.12
"RTN","SAMIPARM",4,0)
 ;
"RTN","SAMIPARM",5,0)
 ; Routine SAMIPARM contains subroutines for implementing the VAPALS-
"RTN","SAMIPARM",6,0)
 ; ELCAP get params web service.
"RTN","SAMIPARM",7,0)
 ;
"RTN","SAMIPARM",8,0)
 quit  ; no entry from top
"RTN","SAMIPARM",9,0)
 ;
"RTN","SAMIPARM",10,0)
 ;
"RTN","SAMIPARM",11,0)
 ;
"RTN","SAMIPARM",12,0)
 ;@section 0 primary development
"RTN","SAMIPARM",13,0)
 ;
"RTN","SAMIPARM",14,0)
 ;
"RTN","SAMIPARM",15,0)
 ;
"RTN","SAMIPARM",16,0)
 ;@routine-credits
"RTN","SAMIPARM",17,0)
 ;@dev-main George P. Lilly (gpl)
"RTN","SAMIPARM",18,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIPARM",19,0)
 ;@dev-org-main Vista Expertise Network (ven)
"RTN","SAMIPARM",20,0)
 ; http://vistaexpertise.net
"RTN","SAMIPARM",21,0)
 ;@copyright 2021, gpl, all rights reserved
"RTN","SAMIPARM",22,0)
 ;@license see routine SAMIUL
"RTN","SAMIPARM",23,0)
 ;
"RTN","SAMIPARM",24,0)
 ;@last-update 2021-07-01t17:45z
"RTN","SAMIPARM",25,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMIPARM",26,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMIPARM",27,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMIPARM",28,0)
 ;@version 18.12
"RTN","SAMIPARM",29,0)
 ;@release-date 2020-01
"RTN","SAMIPARM",30,0)
 ;@patch-list **12**
"RTN","SAMIPARM",31,0)
 ;
"RTN","SAMIPARM",32,0)
 ;@dev-add Frederick D. S. Marshall (toad)
"RTN","SAMIPARM",33,0)
 ; toad@vistaexpertise.net
"RTN","SAMIPARM",34,0)
 ;@dev-add Kenneth W. McGlothlen (mcglk)
"RTN","SAMIPARM",35,0)
 ; mcglk@vistaexpertise.net
"RTN","SAMIPARM",36,0)
 ;
"RTN","SAMIPARM",37,0)
 ;@routine-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMIPARM",38,0)
 ; 2021-05-29/06-05 ven/gpl 18.12-t2 46bab765,223b5900
"RTN","SAMIPARM",39,0)
 ;  SAMIPARM new routine to implement new web service get params,
"RTN","SAMIPARM",40,0)
 ; update for ssn in report, also, matching report; upgrade PARM with
"RTN","SAMIPARM",41,0)
 ; SYS overrides, add systemDemoOnly & systemDemoUseDUZ.
"RTN","SAMIPARM",42,0)
 ;
"RTN","SAMIPARM",43,0)
 ; 2021-07-01 ven/mcglk&toad 18.12-t2 cbf7e46b
"RTN","SAMIPARM",44,0)
 ;  SAMIPARM bump version & dates, add hdr comments & dev log.
"RTN","SAMIPARM",45,0)
 ;
"RTN","SAMIPARM",46,0)
 ;@contents
"RTN","SAMIPARM",47,0)
 ; WSPARAMS web service WSPARAMS^SAMIPARM, site paramters
"RTN","SAMIPARM",48,0)
 ; $$GET1PARM value of one parameter for site
"RTN","SAMIPARM",49,0)
 ; GETARY return parameter array
"RTN","SAMIPARM",50,0)
 ; ADDSVC init to install get params web service
"RTN","SAMIPARM",51,0)
 ;
"RTN","SAMIPARM",52,0)
 ;
"RTN","SAMIPARM",53,0)
 ;
"RTN","SAMIPARM",54,0)
 ;@section 1 subroutines
"RTN","SAMIPARM",55,0)
 ;
"RTN","SAMIPARM",56,0)
 ;
"RTN","SAMIPARM",57,0)
 ;
"RTN","SAMIPARM",58,0)
WSPARAMS(parmsjson,filter) ; web service that returns the paramters to use
"RTN","SAMIPARM",59,0)
 ; for the site, passed in as fliter("site"), as json
"RTN","SAMIPARM",60,0)
 d  ;
"RTN","SAMIPARM",61,0)
 . n site
"RTN","SAMIPARM",62,0)
 . s site=$g(filter("site"))
"RTN","SAMIPARM",63,0)
 . i site="" s site=$g(filter("siteid"))
"RTN","SAMIPARM",64,0)
 . q:site=""
"RTN","SAMIPARM",65,0)
 . n parms
"RTN","SAMIPARM",66,0)
 . d GETARY(.parms,site)
"RTN","SAMIPARM",67,0)
 . ;s parms("socialSecurityNumber")="Patient ID"
"RTN","SAMIPARM",68,0)
 . ;s parms("socialSecurityNumber.short")="PID"
"RTN","SAMIPARM",69,0)
 . ;s parms("socialSecurityNumber.mask")=""
"RTN","SAMIPARM",70,0)
 . ;s parms("socialSecurityNumber.regex")=""
"RTN","SAMIPARM",71,0)
 . ; and so on
"RTN","SAMIPARM",72,0)
 . ;n parmsjson
"RTN","SAMIPARM",73,0)
 . d ENCODE^%webjson("parms","parmsjson")
"RTN","SAMIPARM",74,0)
 . set HTTPRSP("mime")="application/json"
"RTN","SAMIPARM",75,0)
 q
"RTN","SAMIPARM",76,0)
 ;
"RTN","SAMIPARM",77,0)
 ;
"RTN","SAMIPARM",78,0)
 ;
"RTN","SAMIPARM",79,0)
GET1PARM(PARM,SITE) ; extrinsic returns the vale of PARM for site SITE
"RTN","SAMIPARM",80,0)
 ; both passed by value
"RTN","SAMIPARM",81,0)
 i '$d(SITE) S SITE=""
"RTN","SAMIPARM",82,0)
 n ary
"RTN","SAMIPARM",83,0)
 d GETARY(.ary,SITE)
"RTN","SAMIPARM",84,0)
 ;ZWR ary
"RTN","SAMIPARM",85,0)
 Q:'$D(ary) ""
"RTN","SAMIPARM",86,0)
 q $g(ary(PARM))
"RTN","SAMIPARM",87,0)
 ;
"RTN","SAMIPARM",88,0)
 ;
"RTN","SAMIPARM",89,0)
 ;
"RTN","SAMIPARM",90,0)
GETARY(ARY,SITE) ; return the parameter array ART, passed by reference
"RTN","SAMIPARM",91,0)
 ;
"RTN","SAMIPARM",92,0)
 N SITEIEN S SITEIEN=""
"RTN","SAMIPARM",93,0)
 I SITE'="" S SITEIEN=$O(^SAMI(311.12,"SYM",SITE,""))
"RTN","SAMIPARM",94,0)
 N DEFREC ; default record in SAMI PARAMETER DEFAULT 311.14
"RTN","SAMIPARM",95,0)
 I SITEIEN'="" S DEFREC=$$GET1^DIQ(311.12,SITEIEN_",",.04,"E")
"RTN","SAMIPARM",96,0)
 I $G(DEFREC)="" S DEFREC="VHA"
"RTN","SAMIPARM",97,0)
 M ARY=^SAMI(311.14,"D",DEFREC)
"RTN","SAMIPARM",98,0)
 I SITE'="" M ARY=^SAMI(311.12,"D",SITE)
"RTN","SAMIPARM",99,0)
 Q:'$D(^SAMI(311.14,"D","SYS"))
"RTN","SAMIPARM",100,0)
 M ARY=^SAMI(311.14,"D","SYS")
"RTN","SAMIPARM",101,0)
 Q
"RTN","SAMIPARM",102,0)
 ;
"RTN","SAMIPARM",103,0)
 ;
"RTN","SAMIPARM",104,0)
 ;
"RTN","SAMIPARM",105,0)
ADDSVC() ; add the params webservice to the system
"RTN","SAMIPARM",106,0)
 d addService^%webutils("GET","params","WSPARAMS^SAMIPARM")
"RTN","SAMIPARM",107,0)
 Q
"RTN","SAMIPARM",108,0)
 ;
"RTN","SAMIPARM",109,0)
 ;
"RTN","SAMIPARM",110,0)
 ;
"RTN","SAMIPARM",111,0)
EOR ; end of routine SAMIPARM
"RTN","SAMIPAT")
0^52^B761477
"RTN","SAMIPAT",1,0)
SAMIPAT ;ven/toad - init subroutines ;2021-08-11t21:03z
"RTN","SAMIPAT",2,0)
 ;;18.0;SAMI;**12**;2020-01;Build 1
"RTN","SAMIPAT",3,0)
 ;;18.12
"RTN","SAMIPAT",4,0)
 ;
"RTN","SAMIPAT",5,0)
 ; Routine SAMIPAT contains VAPALS-ELCAP initialization subroutines
"RTN","SAMIPAT",6,0)
 ; to use as KIDS pre- & post-installs & environment checks.
"RTN","SAMIPAT",7,0)
 ;
"RTN","SAMIPAT",8,0)
 quit  ; no entry from top
"RTN","SAMIPAT",9,0)
 ;
"RTN","SAMIPAT",10,0)
 ;
"RTN","SAMIPAT",11,0)
 ;
"RTN","SAMIPAT",12,0)
 ;@section 0 primary development
"RTN","SAMIPAT",13,0)
 ;
"RTN","SAMIPAT",14,0)
 ;
"RTN","SAMIPAT",15,0)
 ;
"RTN","SAMIPAT",16,0)
 ;@routine-credits
"RTN","SAMIPAT",17,0)
 ;@dev-main Frederick D. S. Marshall (toad)
"RTN","SAMIPAT",18,0)
 ; toad@vistaexpertise.net
"RTN","SAMIPAT",19,0)
 ;@dev-org-main Vista Expertise Network (ven)
"RTN","SAMIPAT",20,0)
 ; http://vistaexpertise.net
"RTN","SAMIPAT",21,0)
 ;@copyright 2021, toad, all rights reserved
"RTN","SAMIPAT",22,0)
 ;@license see routine SAMIUL
"RTN","SAMIPAT",23,0)
 ;
"RTN","SAMIPAT",24,0)
 ;@last-update 2021-08-11t21:03z
"RTN","SAMIPAT",25,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMIPAT",26,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMIPAT",27,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMIPAT",28,0)
 ;@version 18.12
"RTN","SAMIPAT",29,0)
 ;@release-date 2020-01
"RTN","SAMIPAT",30,0)
 ;@patch-list **12**
"RTN","SAMIPAT",31,0)
 ;
"RTN","SAMIPAT",32,0)
 ;@dev-add Kenneth W. McGlothlen (mcglk)
"RTN","SAMIPAT",33,0)
 ; mcglk@vistaexpertise.net
"RTN","SAMIPAT",34,0)
 ;@dev-add George P. Lilly (gpl)
"RTN","SAMIPAT",35,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIPAT",36,0)
 ;
"RTN","SAMIPAT",37,0)
 ;@routine-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMIPAT",38,0)
 ; 2021-07-01 ven/mcglk&toad 18.12-t2 cbf7e46b
"RTN","SAMIPAT",39,0)
 ;  SAMIPAT new routine, new POS1812 post-install for patch 12.
"RTN","SAMIPAT",40,0)
 ;
"RTN","SAMIPAT",41,0)
 ; 2021-07-22/23 ven/toad 18.12
"RTN","SAMIPAT",42,0)
 ;  SAMIPAT add PRE1812 pre-install.
"RTN","SAMIPAT",43,0)
 ;
"RTN","SAMIPAT",44,0)
 ; 2021-08-11 ven/mcglk&toad 18.12
"RTN","SAMIPAT",45,0)
 ;  SAMIPAT rip out PRE1812.
"RTN","SAMIPAT",46,0)
 ;
"RTN","SAMIPAT",47,0)
 ;@contents
"RTN","SAMIPAT",48,0)
 ; POS1812 kids post-install for sami 18.12
"RTN","SAMIPAT",49,0)
 ;
"RTN","SAMIPAT",50,0)
 ;
"RTN","SAMIPAT",51,0)
 ;
"RTN","SAMIPAT",52,0)
 ;@section 1 subroutines for SAMI 18.12
"RTN","SAMIPAT",53,0)
 ;
"RTN","SAMIPAT",54,0)
 ;
"RTN","SAMIPAT",55,0)
 ;
"RTN","SAMIPAT",56,0)
 ;@kids-post POST1812^SAMIPAT
"RTN","SAMIPAT",57,0)
POS1812 ; kids post-install for sami 18.12
"RTN","SAMIPAT",58,0)
 ;
"RTN","SAMIPAT",59,0)
 do ADDSVC^SAMIPARM ; install get params web service
"RTN","SAMIPAT",60,0)
 ;
"RTN","SAMIPAT",61,0)
 ; in honor of Tchaikovsky's overture: boom
"RTN","SAMIPAT",62,0)
 ;
"RTN","SAMIPAT",63,0)
 quit  ; end of kids-post POS1812^SAMIPAT
"RTN","SAMIPAT",64,0)
 ;
"RTN","SAMIPAT",65,0)
 ;
"RTN","SAMIPAT",66,0)
 ;
"RTN","SAMIPAT",67,0)
 ;@section 2 subroutines for future versions...
"RTN","SAMIPAT",68,0)
 ;
"RTN","SAMIPAT",69,0)
 ;
"RTN","SAMIPAT",70,0)
 ;
"RTN","SAMIPAT",71,0)
EOR ; end of routine SAMIPAT
"RTN","SAMIPTLK")
0^53^B11168340
"RTN","SAMIPTLK",1,0)
SAMIPTLK ;ven/gpl - SAMI patient lookup routines ;Dec 17, 2019@09:44
"RTN","SAMIPTLK",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIPTLK",3,0)
 ;
"RTN","SAMIPTLK",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIPTLK",5,0)
 ;
"RTN","SAMIPTLK",6,0)
 ; Authored by George P. Lilly 2018
"RTN","SAMIPTLK",7,0)
 ;
"RTN","SAMIPTLK",8,0)
 Q
"RTN","SAMIPTLK",9,0)
WSPTLOOK(rtn,filter) ; patient lookup - calls HMPPTRPC
"RTN","SAMIPTLK",10,0)
 ;
"RTN","SAMIPTLK",11,0)
 n search s search=$g(filter("search"))
"RTN","SAMIPTLK",12,0)
 n rslt
"RTN","SAMIPTLK",13,0)
 d SELECT^HMPPTRPC(.rslt,"NAME",search)
"RTN","SAMIPTLK",14,0)
 i $d(rslt) d  ;
"RTN","SAMIPTLK",15,0)
 . D ENCODE^VPRJSON("rslt","rtn")
"RTN","SAMIPTLK",16,0)
 q
"RTN","SAMIPTLK",17,0)
 ;
"RTN","SAMIPTLK",18,0)
WSPTLKUP(rtn,filter) ; patient lookup from patient-lookup cache
"RTN","SAMIPTLK",19,0)
 ;
"RTN","SAMIPTLK",20,0)
 n root s root=$$setroot^%wd("patient-lookup")
"RTN","SAMIPTLK",21,0)
 n search s search=$g(filter("search"))
"RTN","SAMIPTLK",22,0)
 n limit s limit=$g(filter("limit"))
"RTN","SAMIPTLK",23,0)
 n site s site=$g(filter("site"))
"RTN","SAMIPTLK",24,0)
 ;m ^gpl("ptlkup")=filter ;
"RTN","SAMIPTLK",25,0)
 q:site=""
"RTN","SAMIPTLK",26,0)
 i limit="" s limit=1000
"RTN","SAMIPTLK",27,0)
 s search=$$UPCASE^XLFMSMT(search)
"RTN","SAMIPTLK",28,0)
 n rslt
"RTN","SAMIPTLK",29,0)
 n cnt s cnt=0
"RTN","SAMIPTLK",30,0)
 n gn s gn=$na(@root@("name"))
"RTN","SAMIPTLK",31,0)
 n p1,p2
"RTN","SAMIPTLK",32,0)
 s p1=$p(search,",",1)
"RTN","SAMIPTLK",33,0)
 s p2=$p(search,",",2)
"RTN","SAMIPTLK",34,0)
 i $l(search)=5 i +$e(search,2,5)>0 d  q  ; using last5
"RTN","SAMIPTLK",35,0)
 . n gn2 s gn2=$na(@root@("last5"))
"RTN","SAMIPTLK",36,0)
 . n ii s ii=""
"RTN","SAMIPTLK",37,0)
 . f  s ii=$o(@gn2@(search,ii)) q:ii=""  q:cnt=limit  d  ;
"RTN","SAMIPTLK",38,0)
 . . i $g(@root@(ii,"siteid"))'=site q
"RTN","SAMIPTLK",39,0)
 . . s cnt=cnt+1
"RTN","SAMIPTLK",40,0)
 . . s rslt(cnt,ii)=""
"RTN","SAMIPTLK",41,0)
 . i cnt>0 d  ;
"RTN","SAMIPTLK",42,0)
 . . d BUILDRTN(.rtn,.rslt,$g(filter("format")))
"RTN","SAMIPTLK",43,0)
 ; 
"RTN","SAMIPTLK",44,0)
 n have s have=""
"RTN","SAMIPTLK",45,0)
 n q1 s q1=$na(@gn@(p1))
"RTN","SAMIPTLK",46,0)
 n q1x s q1x=$e(q1,1,$l(q1)-2) ; removes the ")
"RTN","SAMIPTLK",47,0)
 n qx s qx=q1
"RTN","SAMIPTLK",48,0)
 f  s qx=$q(@qx) q:$p(qx,q1x,2)=""  q:cnt=limit  d  ;
"RTN","SAMIPTLK",49,0)
 . n exit s exit=0
"RTN","SAMIPTLK",50,0)
 . i p2'="" d  ;
"RTN","SAMIPTLK",51,0)
 . . i p2'=$e($p(qx,",",5),1,$l(p2)) s exit=1
"RTN","SAMIPTLK",52,0)
 . q:exit
"RTN","SAMIPTLK",53,0)
 . n qx2 s qx2=+$p(qx,",",6)
"RTN","SAMIPTLK",54,0)
 . i $g(@root@(qx2,"siteid"))'=site q  ;
"RTN","SAMIPTLK",55,0)
 . i $d(have(qx2)) q  ; already go this one
"RTN","SAMIPTLK",56,0)
 . s cnt=cnt+1
"RTN","SAMIPTLK",57,0)
 . s have(qx2)=""
"RTN","SAMIPTLK",58,0)
 . s rslt(cnt,qx2)="" ; the ien
"RTN","SAMIPTLK",59,0)
 . ;w !,qx," ien=",$o(rslt(cnt,""))
"RTN","SAMIPTLK",60,0)
 i cnt>0 d BUILDRTN(.rtn,.rslt,$g(filter("format")))
"RTN","SAMIPTLK",61,0)
 q
"RTN","SAMIPTLK",62,0)
 ;
"RTN","SAMIPTLK",63,0)
BUILDRTN(rtn,ary,format) ; build the return json unless format=array
"RTN","SAMIPTLK",64,0)
 ; then return a mumps array
"RTN","SAMIPTLK",65,0)
 ;
"RTN","SAMIPTLK",66,0)
 ;d ^ZTER
"RTN","SAMIPTLK",67,0)
 n root s root=$$setroot^%wd("patient-lookup")
"RTN","SAMIPTLK",68,0)
 n groot s groot=$$setroot^%wd("vapals-patients")
"RTN","SAMIPTLK",69,0)
 n zi s zi=""
"RTN","SAMIPTLK",70,0)
 n r1 s r1=""
"RTN","SAMIPTLK",71,0)
 f  s zi=$o(ary(zi)) q:zi=""  d  ;
"RTN","SAMIPTLK",72,0)
 . n rx s rx=$o(ary(zi,""))
"RTN","SAMIPTLK",73,0)
 . s r1("result",zi,"name")=$g(@root@(rx,"saminame"))
"RTN","SAMIPTLK",74,0)
 . s r1("result",zi,"dfn")=$g(@root@(rx,"dfn"))
"RTN","SAMIPTLK",75,0)
 . s r1("result",zi,"last5")=$g(@root@(rx,"last5"))
"RTN","SAMIPTLK",76,0)
 . s r1("result",zi,"gender")=$g(@root@(rx,"gender"))
"RTN","SAMIPTLK",77,0)
 . s r1("result",zi,"dob")=$g(@root@(rx,"sbdob"))
"RTN","SAMIPTLK",78,0)
 . s r1("result",zi,"vapals")=0
"RTN","SAMIPTLK",79,0)
 . n dfn s dfn=$g(@root@(rx,"dfn"))
"RTN","SAMIPTLK",80,0)
 . i $o(@groot@("dfn",dfn,""))'="" d  ;
"RTN","SAMIPTLK",81,0)
 . . s r1("result",zi,"vapals")=1
"RTN","SAMIPTLK",82,0)
 . . s r1("result",zi,"studyid")=$g(@groot@(dfn,"samistudyid"))
"RTN","SAMIPTLK",83,0)
 ;.;
"RTN","SAMIPTLK",84,0)
 ;.; ven/lgc 2019-12-17 missing forms
"RTN","SAMIPTLK",85,0)
 ;.;
"RTN","SAMIPTLK",86,0)
 ;. i '($data(@groot@("graph",@groot@(dfn,"samistudyid")))) d  ;
"RTN","SAMIPTLK",87,0)
 ;. . s r1("result",zi,"vapals")=0
"RTN","SAMIPTLK",88,0)
 ;
"RTN","SAMIPTLK",89,0)
 ;q:'$d(r1)
"RTN","SAMIPTLK",90,0)
 i format="array" m rtn=r1 q  ; return a mumps array
"RTN","SAMIPTLK",91,0)
 d ENCODE^VPRJSON("r1","rtn")
"RTN","SAMIPTLK",92,0)
 q
"RTN","SAMIPTLK",93,0)
 ;
"RTN","SAMIRU")
0^54^B5105701
"RTN","SAMIRU",1,0)
SAMIRU ;ven/gpl - sami user reports ; 4/19/19 10:47am
"RTN","SAMIRU",2,0)
 ;;18.0;SAM;;;Build 1
"RTN","SAMIRU",3,0)
 ;
"RTN","SAMIRU",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIRU",5,0)
 ;
"RTN","SAMIRU",6,0)
 ; SAMIRU contains the routines to handle rural/urban status
"RTN","SAMIRU",7,0)
 ; It is currently untested & in progress.
"RTN","SAMIRU",8,0)
 ;
"RTN","SAMIRU",9,0)
 quit  ; no entry from top
"RTN","SAMIRU",10,0)
 ;
"RTN","SAMIRU",11,0)
 ; sirs = rural status r,u,n
"RTN","SAMIRU",12,0)
 ; sipsa = preferred address
"RTN","SAMIRU",13,0)
 ;
"RTN","SAMIRU",14,0)
 ; $$URBRUR^SAMIVSTA(zipcode) returns r u
"RTN","SAMIRU",15,0)
 ;
"RTN","SAMIRU",16,0)
 ; NCHS Urban-Rural graph for zip code table
"RTN","SAMIRU",17,0)
 ;
"RTN","SAMIRU",18,0)
INDEX ; create the zip index in the zip graph
"RTN","SAMIRU",19,0)
 n root
"RTN","SAMIRU",20,0)
 s root=$$setroot^%wd("NCHS Urban-Rural")
"RTN","SAMIRU",21,0)
 k @root@("zip")
"RTN","SAMIRU",22,0)
 n zi s zi=0
"RTN","SAMIRU",23,0)
 f  s zi=$o(@root@(zi)) q:+zi=0  d  ;
"RTN","SAMIRU",24,0)
 . n ruca30
"RTN","SAMIRU",25,0)
 . s ruca30=$g(@root@(zi,"ruca30"))
"RTN","SAMIRU",26,0)
 . q:ruca30=""
"RTN","SAMIRU",27,0)
 . s zipcoden=$g(@root@(zi,"zipcoden"))
"RTN","SAMIRU",28,0)
 . q:zipcoden=""
"RTN","SAMIRU",29,0)
 . s @root@("zip",zipcoden)=ruca30
"RTN","SAMIRU",30,0)
 q
"RTN","SAMIRU",31,0)
 ;
"RTN","SAMIRU",32,0)
WSGETRU(rtn,filter) ; web service to return counts for rural and urban
"RTN","SAMIRU",33,0)
 ;
"RTN","SAMIRU",34,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIRU",35,0)
 n rural,urban,unknown
"RTN","SAMIRU",36,0)
 s (rural,urban,unknown)=0
"RTN","SAMIRU",37,0)
 n zi s zi=0
"RTN","SAMIRU",38,0)
 f  s zi=$o(@root@(zi)) q:+zi=0  d  ;
"RTN","SAMIRU",39,0)
 . n sid s sid=$g(@root@(zi,"sisid"))
"RTN","SAMIRU",40,0)
 . q:sid=""
"RTN","SAMIRU",41,0)
 . n gr s gr=$na(@root@("graph",sid))
"RTN","SAMIRU",42,0)
 . n siform
"RTN","SAMIRU",43,0)
 . s siform=$o(@gr@("siform-"))
"RTN","SAMIRU",44,0)
 . q:siform=""
"RTN","SAMIRU",45,0)
 . i $g(@gr@(siform,"sirs"))="u" s urban=urban+1
"RTN","SAMIRU",46,0)
 . i $g(@gr@(siform,"sirs"))="r" s rural=rural+1
"RTN","SAMIRU",47,0)
 . i $g(@gr@(siform,"sirs"))="n" s unknown=unknown+1
"RTN","SAMIRU",48,0)
 n rslt
"RTN","SAMIRU",49,0)
 s rslt("result","urban")=urban
"RTN","SAMIRU",50,0)
 s rslt("result","rural")=rural
"RTN","SAMIRU",51,0)
 s rslt("result","unknown")=unknown
"RTN","SAMIRU",52,0)
 s rslt("result","site")="VA-PALS Test"
"RTN","SAMIRU",53,0)
 d ENCODE^VPRJSON("rslt","rtn")
"RTN","SAMIRU",54,0)
 q
"RTN","SAMIRU",55,0)
 ;
"RTN","SAMIRU",56,0)
WSZIPRU(rtn,filter) ;
"RTN","SAMIRU",57,0)
 n zzip s zzip=$g(filter("zip"))
"RTN","SAMIRU",58,0)
 n rslt,ru
"RTN","SAMIRU",59,0)
 s ru=$$URBRUR^SAMIVSTA(zzip)
"RTN","SAMIRU",60,0)
 if (ru'="u")&(ru'="r") s ru="n"
"RTN","SAMIRU",61,0)
 s rslt("result")=ru
"RTN","SAMIRU",62,0)
 d ENCODE^VPRJSON("rslt","rtn")
"RTN","SAMIRU",63,0)
 q
"RTN","SAMIRU",64,0)
 ;
"RTN","SAMISAV")
0^55^B121113964
"RTN","SAMISAV",1,0)
SAMISAV ;ven/gpl - SAMI save routines ;2021-05-21T20:47Z
"RTN","SAMISAV",2,0)
 ;;18.0;SAMI;**5,11**;2020-01;Build 1
"RTN","SAMISAV",3,0)
 ;;1.18.0.11+i11
"RTN","SAMISAV",4,0)
 ;
"RTN","SAMISAV",5,0)
 ; SAMISAV contains subroutines for saving forms.
"RTN","SAMISAV",6,0)
 ;
"RTN","SAMISAV",7,0)
 quit  ; no entry from top
"RTN","SAMISAV",8,0)
 ;
"RTN","SAMISAV",9,0)
 ;
"RTN","SAMISAV",10,0)
 ;
"RTN","SAMISAV",11,0)
 ;@section 0 primary development
"RTN","SAMISAV",12,0)
 ;
"RTN","SAMISAV",13,0)
 ;
"RTN","SAMISAV",14,0)
 ;
"RTN","SAMISAV",15,0)
 ;@routine-credits
"RTN","SAMISAV",16,0)
 ;@primary-dev George P. Lilly (gpl)
"RTN","SAMISAV",17,0)
 ; gpl@vistaexpertise.net
"RTN","SAMISAV",18,0)
 ;@primary-dev-org Vista Expertise Network (ven)
"RTN","SAMISAV",19,0)
 ; http://vistaexpertise.net
"RTN","SAMISAV",20,0)
 ;@copyright 2017/2021, gpl, all rights reserved
"RTN","SAMISAV",21,0)
 ;@license see routine SAMIUL
"RTN","SAMISAV",22,0)
 ;
"RTN","SAMISAV",23,0)
 ;@last-updated 2021-05-21T20:47Z
"RTN","SAMISAV",24,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMISAV",25,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMISAV",26,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMISAV",27,0)
 ;@version 1.18.0.11+i11
"RTN","SAMISAV",28,0)
 ;@release-date 2020-01
"RTN","SAMISAV",29,0)
 ;@patch-list **5,11**
"RTN","SAMISAV",30,0)
 ;
"RTN","SAMISAV",31,0)
 ;@additional-dev Larry G. Carlson (lgc)
"RTN","SAMISAV",32,0)
 ; lgc@vistaexpertise.net
"RTN","SAMISAV",33,0)
 ;@additional-dev Alexis R. Carlson (arc)
"RTN","SAMISAV",34,0)
 ; arc@vistaexpertise.net
"RTN","SAMISAV",35,0)
 ;@additional-dev Frederick D. S. Marshall (toad)
"RTN","SAMISAV",36,0)
 ; toad@vistaexpertise.net
"RTN","SAMISAV",37,0)
 ;@additional-dev Kenneth McGlothlen (mcglk)
"RTN","SAMISAV",38,0)
 ; mcglk@vistaexpertise.net
"RTN","SAMISAV",39,0)
 ;
"RTN","SAMISAV",40,0)
 ;@module-credits
"RTN","SAMISAV",41,0)
 ;@project VA Partnership to Increase Access to Lung Screening
"RTN","SAMISAV",42,0)
 ; (VA-PALS)
"RTN","SAMISAV",43,0)
 ; http://va-pals.org/
"RTN","SAMISAV",44,0)
 ;@funding 2017/2021, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMISAV",45,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMISAV",46,0)
 ;@partner-org Veterans Affairs Office of Rural health
"RTN","SAMISAV",47,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMISAV",48,0)
 ;@partner-org International Early Lung Cancer Action Program (I-ELCAP)
"RTN","SAMISAV",49,0)
 ; http://ielcap.com/
"RTN","SAMISAV",50,0)
 ;@partner-org Paraxial Technologies (par)
"RTN","SAMISAV",51,0)
 ; http://paraxialtech.com/
"RTN","SAMISAV",52,0)
 ;@partner-org Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMISAV",53,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMISAV",54,0)
 ;
"RTN","SAMISAV",55,0)
 ;@module-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMISAV",56,0)
 ;
"RTN","SAMISAV",57,0)
 ; 2018-10-29/11-09 ven/lgc&arc 1.18.0 3d36564,482f522,949f150
"RTN","SAMISAV",58,0)
 ;  SAMISAV: followup report, new input form features, report menu
"RTN","SAMISAV",59,0)
 ; fix, fixed submit save bug.
"RTN","SAMISAV",60,0)
 ;
"RTN","SAMISAV",61,0)
 ; 2018-12-11/27 ven/lgc&arc 1.18.0 3ceb74b,a14554c,8dd6f34,51eb163,
"RTN","SAMISAV",62,0)
 ; f2738f8
"RTN","SAMISAV",63,0)
 ;  SAMISAV: update routines for sac compliance, r/^gpl w/^SAMIGPL,
"RTN","SAMISAV",64,0)
 ; update routines for sac compliance, fix accidental reversions.
"RTN","SAMISAV",65,0)
 ;
"RTN","SAMISAV",66,0)
 ; 2019-01-22 ven/lgc 1.18.0 5368121
"RTN","SAMISAV",67,0)
 ;  SAMISAV: add license info.
"RTN","SAMISAV",68,0)
 ;
"RTN","SAMISAV",69,0)
 ; 2019-02-18 ven/lgc 1.18.0 7687431
"RTN","SAMISAV",70,0)
 ;  SAMISAV: update recently edited routines
"RTN","SAMISAV",71,0)
 ;
"RTN","SAMISAV",72,0)
 ; 2019-06-18 ven/arc 1.18.0 9102248
"RTN","SAMISAV",73,0)
 ;  SAMISAV: r/^SAMIGPL w/^SAMIUL.
"RTN","SAMISAV",74,0)
 ;
"RTN","SAMISAV",75,0)
 ; 2019-08-14 ven/gpl 1.18.0 d73fec6 VAP-417
"RTN","SAMISAV",76,0)
 ;  SAMISAV: add communications log to intake form.
"RTN","SAMISAV",77,0)
 ;
"RTN","SAMISAV",78,0)
 ; 2019-09-26 ven/gpl 1.18.0 92b1232
"RTN","SAMISAV",79,0)
 ;  SAMISAV: mods for smoking history.
"RTN","SAMISAV",80,0)
 ;
"RTN","SAMISAV",81,0)
 ; 2020-04-10 ven/gpl 1.18.0.5+i5 56bfaed
"RTN","SAMISAV",82,0)
 ;  SAMISAV: multi-tenancy change.
"RTN","SAMISAV",83,0)
 ;
"RTN","SAMISAV",84,0)
 ; 2021-05-13 ven/gpl 1.18.0.11+i11 1c03fd6
"RTN","SAMISAV",85,0)
 ;  SAMISAV: fix date save on intervention, pet, & biopsy forms.
"RTN","SAMISAV",86,0)
 ;
"RTN","SAMISAV",87,0)
 ; 2021-05-20/21 ven/mcglk&toad 1.18.0.11+i11
"RTN","SAMISAV",88,0)
 ;  SAMIHL7: build hdr comments & dev log, lt refactor, bump version.
"RTN","SAMISAV",89,0)
 ;
"RTN","SAMISAV",90,0)
 ;@contents
"RTN","SAMISAV",91,0)
 ; $$SAVFILTR saves form & returns key
"RTN","SAMISAV",92,0)
 ; COMLOG add to communications log
"RTN","SAMISAV",93,0)
 ;
"RTN","SAMISAV",94,0)
 ;
"RTN","SAMISAV",95,0)
 ;
"RTN","SAMISAV",96,0)
 ;@section 1 subroutines
"RTN","SAMISAV",97,0)
 ;
"RTN","SAMISAV",98,0)
 ;
"RTN","SAMISAV",99,0)
 ;
"RTN","SAMISAV",100,0)
SAVFILTR(sid,form,vars) ; saves form & returns key
"RTN","SAMISAV",101,0)
 ;
"RTN","SAMISAV",102,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMISAV",103,0)
 ;
"RTN","SAMISAV",104,0)
 ;;private;function;clean;silent;sac
"RTN","SAMISAV",105,0)
 ;@called-by
"RTN","SAMISAV",106,0)
 ;@calls
"RTN","SAMISAV",107,0)
 ; $$SITENM2^SAMISITE
"RTN","SAMISAV",108,0)
 ; $$setroot^%wd
"RTN","SAMISAV",109,0)
 ; $$KEY2FM^SAMICASE
"RTN","SAMISAV",110,0)
 ;@input
"RTN","SAMISAV",111,0)
 ;@output = form key to use for saving
"RTN","SAMISAV",112,0)
 ; It will relocate the graph for the form if required based on dates
"RTN","SAMISAV",113,0)
 ;  entered on the form.
"RTN","SAMISAV",114,0)
 ; processing for multi-tenancy: if siteid not provided, but studyid
"RTN","SAMISAV",115,0)
 ;  is, look up & set siteid.
"RTN","SAMISAV",116,0)
 ;@thruput
"RTN","SAMISAV",117,0)
 ; sid = study id
"RTN","SAMISAV",118,0)
 ; form = form key
"RTN","SAMISAV",119,0)
 ; vars = form variables
"RTN","SAMISAV",120,0)
 ;
"RTN","SAMISAV",121,0)
 ;
"RTN","SAMISAV",122,0)
 ;@stanza 2 setup
"RTN","SAMISAV",123,0)
 ;
"RTN","SAMISAV",124,0)
 if '$data(vars("siteid")) do  ;
"RTN","SAMISAV",125,0)
 . quit:$get(sid)=""
"RTN","SAMISAV",126,0)
 . new sym set sym=$extract(sid,1,3) ; first 3 chars in studyid
"RTN","SAMISAV",127,0)
 . quit:$$SITENM2^SAMISITE(sym)=-1
"RTN","SAMISAV",128,0)
 . set vars("siteid")=sym
"RTN","SAMISAV",129,0)
 . set vars("site")=sym
"RTN","SAMISAV",130,0)
 . quit
"RTN","SAMISAV",131,0)
 ;
"RTN","SAMISAV",132,0)
 new useform set useform=form ; by default, form unchanged
"RTN","SAMISAV",133,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMISAV",134,0)
 new type set type=$piece(form,"-",1)
"RTN","SAMISAV",135,0)
 ;
"RTN","SAMISAV",136,0)
 ;
"RTN","SAMISAV",137,0)
 ;@stanza 3 ct evaluation form
"RTN","SAMISAV",138,0)
 ;
"RTN","SAMISAV",139,0)
 if type="ceform" do
"RTN","SAMISAV",140,0)
 . merge ^SAMIUL("samisav","vals")=vars
"RTN","SAMISAV",141,0)
 . new formdate set formdate=$get(vars("cedos")) ; ct scan date f/form
"RTN","SAMISAV",142,0)
 . quit:formdate=""
"RTN","SAMISAV",143,0)
 . new fdate set fdate=$$KEY2FM^SAMICASE(formdate) ; cnvt to fm date
"RTN","SAMISAV",144,0)
 . quit:fdate=""
"RTN","SAMISAV",145,0)
 . quit:fdate<0
"RTN","SAMISAV",146,0)
 . new fmcurrent set fmcurrent=$$KEY2FM^SAMICASE(form) ; key,fm format
"RTN","SAMISAV",147,0)
 . if fdate'=fmcurrent do  ;
"RTN","SAMISAV",148,0)
 . . new moveto set moveto="ceform-"_$$KEYDATE^SAMIHOM3(fdate)
"RTN","SAMISAV",149,0)
 . . ; w !,"old: ",fmcurrent," new: ",fdate," ... date must be changed
"RTN","SAMISAV",150,0)
 . . kill ^SAMIUL("samisav")
"RTN","SAMISAV",151,0)
 . . set ^SAMIUL("samisav","current")=form_"^"_fmcurrent
"RTN","SAMISAV",152,0)
 . . set ^SAMIUL("samisav","incoming")=formdate_"^"_fdate
"RTN","SAMISAV",153,0)
 . . set ^SAMIUL("samisav","conclusion")="graph must be moved to: "_moveto
"RTN","SAMISAV",154,0)
 . . merge ^SAMIUL("samisav","vals")=vars
"RTN","SAMISAV",155,0)
 . . merge @root@("graph",sid,moveto)=@root@("graph",sid,form)
"RTN","SAMISAV",156,0)
 . . kill @root@("graph",sid,form)
"RTN","SAMISAV",157,0)
 . . set useform=moveto
"RTN","SAMISAV",158,0)
 . . quit
"RTN","SAMISAV",159,0)
 . quit
"RTN","SAMISAV",160,0)
 ;
"RTN","SAMISAV",161,0)
 ;
"RTN","SAMISAV",162,0)
 ;@stanza 4 followup form
"RTN","SAMISAV",163,0)
 ;
"RTN","SAMISAV",164,0)
 if type="fuform" do
"RTN","SAMISAV",165,0)
 . merge ^SAMIUL("samisav","vals")=vars
"RTN","SAMISAV",166,0)
 . new formdate set formdate=$get(vars("sidof")) ; CT scan date f/form
"RTN","SAMISAV",167,0)
 . quit:formdate=""
"RTN","SAMISAV",168,0)
 . new fdate set fdate=$$KEY2FM^SAMICASE(formdate) ; cnvt to fm date
"RTN","SAMISAV",169,0)
 . quit:fdate=""
"RTN","SAMISAV",170,0)
 . quit:fdate<0
"RTN","SAMISAV",171,0)
 . new fmcurrent set fmcurrent=$$KEY2FM^SAMICASE(form) ; key,fm format
"RTN","SAMISAV",172,0)
 . if fdate'=fmcurrent do  ;
"RTN","SAMISAV",173,0)
 . . new moveto set moveto="fuform-"_$$KEYDATE^SAMIHOM3(fdate)
"RTN","SAMISAV",174,0)
 . . ; w !,"old: ",fmcurrent," new: ",fdate," ... date must be changed
"RTN","SAMISAV",175,0)
 . . kill ^SAMIUL("samisav")
"RTN","SAMISAV",176,0)
 . . set ^SAMIUL("samisav","current")=form_"^"_fmcurrent
"RTN","SAMISAV",177,0)
 . . set ^SAMIUL("samisav","incoming")=formdate_"^"_fdate
"RTN","SAMISAV",178,0)
 . . set ^SAMIUL("samisav","conclusion")="graph must be moved to: "_moveto
"RTN","SAMISAV",179,0)
 . . merge ^SAMIUL("samisav","vals")=vars
"RTN","SAMISAV",180,0)
 . . merge @root@("graph",sid,moveto)=@root@("graph",sid,form)
"RTN","SAMISAV",181,0)
 . . kill @root@("graph",sid,form)
"RTN","SAMISAV",182,0)
 . . set useform=moveto
"RTN","SAMISAV",183,0)
 . . quit
"RTN","SAMISAV",184,0)
 . quit
"RTN","SAMISAV",185,0)
 ;
"RTN","SAMISAV",186,0)
 ;
"RTN","SAMISAV",187,0)
 ;@stanza 5 intake form
"RTN","SAMISAV",188,0)
 ;
"RTN","SAMISAV",189,0)
 if type="siform" do
"RTN","SAMISAV",190,0)
 . set vars("samifirsttime")="false"
"RTN","SAMISAV",191,0)
 . do COMLOG(.sid,.form,.vars) ; add to communication log
"RTN","SAMISAV",192,0)
 . new formdate set formdate=$get(vars("sidc")) ; CT scan date f/form
"RTN","SAMISAV",193,0)
 . quit:formdate=""
"RTN","SAMISAV",194,0)
 . new fdate set fdate=$$KEY2FM^SAMICASE(formdate) ; cnvt to fm date
"RTN","SAMISAV",195,0)
 . quit:fdate=""
"RTN","SAMISAV",196,0)
 . quit:fdate<0
"RTN","SAMISAV",197,0)
 . new fmcurrent set fmcurrent=$$KEY2FM^SAMICASE(form) ; key,fm format
"RTN","SAMISAV",198,0)
 . if fdate'=fmcurrent do  ;
"RTN","SAMISAV",199,0)
 . . new moveto set moveto="siform-"_$$KEYDATE^SAMIHOM3(fdate)
"RTN","SAMISAV",200,0)
 . . ; w !,"old: ",fmcurrent," new: ",fdate," ... date must be changed
"RTN","SAMISAV",201,0)
 . . kill ^SAMIUL("samisav")
"RTN","SAMISAV",202,0)
 . . set ^SAMIUL("samisav","current")=form_"^"_fmcurrent
"RTN","SAMISAV",203,0)
 . . set ^SAMIUL("samisav","incoming")=formdate_"^"_fdate
"RTN","SAMISAV",204,0)
 . . set ^SAMIUL("samisav","conclusion")="graph must be moved to: "_moveto
"RTN","SAMISAV",205,0)
 . . merge @root@("graph",sid,moveto)=@root@("graph",sid,form)
"RTN","SAMISAV",206,0)
 . . kill @root@("graph",sid,form)
"RTN","SAMISAV",207,0)
 . . set useform=moveto
"RTN","SAMISAV",208,0)
 . . quit
"RTN","SAMISAV",209,0)
 . quit
"RTN","SAMISAV",210,0)
 ;
"RTN","SAMISAV",211,0)
 ;
"RTN","SAMISAV",212,0)
 ;@stanza 6 biopsy form
"RTN","SAMISAV",213,0)
 ;
"RTN","SAMISAV",214,0)
 if type="bxform" do
"RTN","SAMISAV",215,0)
 . new formdate set formdate=$get(vars("bxdos")) ; biopsy date f/form
"RTN","SAMISAV",216,0)
 . if formdate="" set formdate=$get(vars("rbmed")) ; mediastinoscopy d
"RTN","SAMISAV",217,0)
 . quit:formdate=""
"RTN","SAMISAV",218,0)
 . new fdate set fdate=$$KEY2FM^SAMICASE(formdate) ; cnvt to fm date
"RTN","SAMISAV",219,0)
 . quit:fdate=""
"RTN","SAMISAV",220,0)
 . quit:fdate<0
"RTN","SAMISAV",221,0)
 . new fmcurrent set fmcurrent=$$KEY2FM^SAMICASE(form) ; key,fm format
"RTN","SAMISAV",222,0)
 . if fdate'=fmcurrent do  ;
"RTN","SAMISAV",223,0)
 . . new moveto set moveto="bxform-"_$$KEYDATE^SAMIHOM3(fdate)
"RTN","SAMISAV",224,0)
 . . ; w !,"old: ",fmcurrent," new: ",fdate," ... date must be changed
"RTN","SAMISAV",225,0)
 . . kill ^SAMIUL("samisav")
"RTN","SAMISAV",226,0)
 . . set ^SAMIUL("samisav","current")=form_"^"_fmcurrent
"RTN","SAMISAV",227,0)
 . . set ^SAMIUL("samisav","incoming")=formdate_"^"_fdate
"RTN","SAMISAV",228,0)
 . . set ^SAMIUL("samisav","conclusion")="graph must be moved to: "_moveto
"RTN","SAMISAV",229,0)
 . . merge @root@("graph",sid,moveto)=@root@("graph",sid,form)
"RTN","SAMISAV",230,0)
 . . kill @root@("graph",sid,form)
"RTN","SAMISAV",231,0)
 . . set useform=moveto
"RTN","SAMISAV",232,0)
 . . quit
"RTN","SAMISAV",233,0)
 . quit
"RTN","SAMISAV",234,0)
 ;
"RTN","SAMISAV",235,0)
 ;
"RTN","SAMISAV",236,0)
 ;@stanza 7 intervention form
"RTN","SAMISAV",237,0)
 ;
"RTN","SAMISAV",238,0)
 if type="itform" do
"RTN","SAMISAV",239,0)
 . new formdate set formdate=$get(vars("rbsud")) ; treatment date
"RTN","SAMISAV",240,0)
 . if formdate="" set formdate=$get(vars("rbdos")) ;1st intervention d
"RTN","SAMISAV",241,0)
 . if formdate="" set formdate=$get(vars("rbdmr")) ; last intervention
"RTN","SAMISAV",242,0)
 . quit:formdate=""
"RTN","SAMISAV",243,0)
 . new fdate set fdate=$$KEY2FM^SAMICASE(formdate) ; cnvt to fm date
"RTN","SAMISAV",244,0)
 . quit:fdate=""
"RTN","SAMISAV",245,0)
 . quit:fdate<0
"RTN","SAMISAV",246,0)
 . new fmcurrent set fmcurrent=$$KEY2FM^SAMICASE(form) ; key,fm format
"RTN","SAMISAV",247,0)
 . if fdate'=fmcurrent do  ;
"RTN","SAMISAV",248,0)
 . . new moveto set moveto="itform-"_$$KEYDATE^SAMIHOM3(fdate)
"RTN","SAMISAV",249,0)
 . . ; w !,"old: ",fmcurrent," new: ",fdate," ... date must be changed
"RTN","SAMISAV",250,0)
 . . kill ^SAMIUL("samisav")
"RTN","SAMISAV",251,0)
 . . set ^SAMIUL("samisav","current")=form_"^"_fmcurrent
"RTN","SAMISAV",252,0)
 . . set ^SAMIUL("samisav","incoming")=formdate_"^"_fdate
"RTN","SAMISAV",253,0)
 . . set ^SAMIUL("samisav","conclusion")="graph must be moved to: "_moveto
"RTN","SAMISAV",254,0)
 . . merge @root@("graph",sid,moveto)=@root@("graph",sid,form)
"RTN","SAMISAV",255,0)
 . . kill @root@("graph",sid,form)
"RTN","SAMISAV",256,0)
 . . set useform=moveto
"RTN","SAMISAV",257,0)
 . . quit
"RTN","SAMISAV",258,0)
 . quit
"RTN","SAMISAV",259,0)
 ;
"RTN","SAMISAV",260,0)
 ;
"RTN","SAMISAV",261,0)
 ;@stanza 8 pet evaluation form
"RTN","SAMISAV",262,0)
 ;
"RTN","SAMISAV",263,0)
 if type="ptform" do
"RTN","SAMISAV",264,0)
 . new formdate set formdate=$get(vars("ptdos")) ; treatment date
"RTN","SAMISAV",265,0)
 . quit:formdate=""
"RTN","SAMISAV",266,0)
 . new fdate set fdate=$$KEY2FM^SAMICASE(formdate) ; cnvt to fm date
"RTN","SAMISAV",267,0)
 . quit:fdate=""
"RTN","SAMISAV",268,0)
 . quit:fdate<0
"RTN","SAMISAV",269,0)
 . new fmcurrent set fmcurrent=$$KEY2FM^SAMICASE(form) ; key,fm format
"RTN","SAMISAV",270,0)
 . if fdate'=fmcurrent do  ;
"RTN","SAMISAV",271,0)
 . . new moveto set moveto="ptform-"_$$KEYDATE^SAMIHOM3(fdate)
"RTN","SAMISAV",272,0)
 . . ; w !,"old: ",fmcurrent," new: ",fdate," ... date must be changed
"RTN","SAMISAV",273,0)
 . . kill ^SAMIUL("samisav")
"RTN","SAMISAV",274,0)
 . . set ^SAMIUL("samisav","current")=form_"^"_fmcurrent
"RTN","SAMISAV",275,0)
 . . set ^SAMIUL("samisav","incoming")=formdate_"^"_fdate
"RTN","SAMISAV",276,0)
 . . set ^SAMIUL("samisav","conclusion")="graph must be moved to: "_moveto
"RTN","SAMISAV",277,0)
 . . merge @root@("graph",sid,moveto)=@root@("graph",sid,form)
"RTN","SAMISAV",278,0)
 . . kill @root@("graph",sid,form)
"RTN","SAMISAV",279,0)
 . . set useform=moveto
"RTN","SAMISAV",280,0)
 . . quit
"RTN","SAMISAV",281,0)
 . quit
"RTN","SAMISAV",282,0)
 ;
"RTN","SAMISAV",283,0)
 ;
"RTN","SAMISAV",284,0)
 ;@stanza 9 termination
"RTN","SAMISAV",285,0)
 ;
"RTN","SAMISAV",286,0)
 quit useform ; return form key ; end of $$SAVFILTR
"RTN","SAMISAV",287,0)
 ;
"RTN","SAMISAV",288,0)
 ;
"RTN","SAMISAV",289,0)
 ;
"RTN","SAMISAV",290,0)
COMLOG(sid,form,vars) ; add to communications log
"RTN","SAMISAV",291,0)
 ;
"RTN","SAMISAV",292,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMISAV",293,0)
 ;
"RTN","SAMISAV",294,0)
 ;;private;procedure;clean;silent;sac
"RTN","SAMISAV",295,0)
 ;@called-by
"RTN","SAMISAV",296,0)
 ; SAVFILTR
"RTN","SAMISAV",297,0)
 ;@calls
"RTN","SAMISAV",298,0)
 ; $$setroot^%wd
"RTN","SAMISAV",299,0)
 ; LOGIT^SAMICLOG
"RTN","SAMISAV",300,0)
 ;@input
"RTN","SAMISAV",301,0)
 ; sid = study id
"RTN","SAMISAV",302,0)
 ; form = form key
"RTN","SAMISAV",303,0)
 ; vars("sipcrn") = new comm log entry
"RTN","SAMISAV",304,0)
 ;@output
"RTN","SAMISAV",305,0)
 ; comm log updated to include new comm log entry
"RTN","SAMISAV",306,0)
 ; vars("sipcrn") = cleared after being saved
"RTN","SAMISAV",307,0)
 ;
"RTN","SAMISAV",308,0)
 ;
"RTN","SAMISAV",309,0)
 ;@stanza 2 add new entry to comm log
"RTN","SAMISAV",310,0)
 ;
"RTN","SAMISAV",311,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMISAV",312,0)
 merge vars("comlog")=@root@("graph",sid,form,"comlog")
"RTN","SAMISAV",313,0)
 new COMLOGRT ; communication log root
"RTN","SAMISAV",314,0)
 set COMLOGRT=$name(@root@("graph",sid,form,"comlog"))
"RTN","SAMISAV",315,0)
 ;
"RTN","SAMISAV",316,0)
 if $get(vars("sipcrn"))'="" do  ; new comm log entry available
"RTN","SAMISAV",317,0)
 . do LOGIT^SAMICLOG(COMLOGRT,vars("sipcrn"))
"RTN","SAMISAV",318,0)
 . set vars("sipcrn")=""
"RTN","SAMISAV",319,0)
 . quit
"RTN","SAMISAV",320,0)
 ;
"RTN","SAMISAV",321,0)
 ;
"RTN","SAMISAV",322,0)
 ;@stanza 3 termination
"RTN","SAMISAV",323,0)
 ;
"RTN","SAMISAV",324,0)
 quit  ; end of COMLOG
"RTN","SAMISAV",325,0)
 ;
"RTN","SAMISAV",326,0)
 ;
"RTN","SAMISAV",327,0)
 ;
"RTN","SAMISAV",328,0)
EOR ; end of routine SAMISAV
"RTN","SAMISITE")
0^56^B91053774
"RTN","SAMISITE",1,0)
SAMISITE ;ven/gpl&arc - signon & site access ;2021-07-07t16:52z
"RTN","SAMISITE",2,0)
 ;;18.0;SAMI;**5,12**;2020-01;Build 1
"RTN","SAMISITE",3,0)
 ;;18.12
"RTN","SAMISITE",4,0)
 ;
"RTN","SAMISITE",5,0)
 ; Routine SAMISITE contains subroutines for implementing the VAPALS-
"RTN","SAMISITE",6,0)
 ; ELCAP 
"RTN","SAMISITE",7,0)
 ;
"RTN","SAMISITE",8,0)
 quit  ; no entry from top
"RTN","SAMISITE",9,0)
 ;
"RTN","SAMISITE",10,0)
 ;
"RTN","SAMISITE",11,0)
 ;
"RTN","SAMISITE",12,0)
 ;@section 0 primary development
"RTN","SAMISITE",13,0)
 ;
"RTN","SAMISITE",14,0)
 ;
"RTN","SAMISITE",15,0)
 ;
"RTN","SAMISITE",16,0)
 ;@routine-credits
"RTN","SAMISITE",17,0)
 ;@dev-main: George P. Lilly (gpl)
"RTN","SAMISITE",18,0)
 ; gpl@vistaexpertise.net
"RTN","SAMISITE",19,0)
 ;@dev-org-main: Vista Expertise Network (ven)
"RTN","SAMISITE",20,0)
 ; http://vistaexpertise.net
"RTN","SAMISITE",21,0)
 ;@copyright: 2017/2021, gpl, all rights reserved
"RTN","SAMISITE",22,0)
 ;@license see routine SAMIUL
"RTN","SAMISITE",23,0)
 ;
"RTN","SAMISITE",24,0)
 ;@last-update 2021-07-07t16:52z
"RTN","SAMISITE",25,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMISITE",26,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMISITE",27,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMISITE",28,0)
 ;@version 18.12
"RTN","SAMISITE",29,0)
 ;@release-date 2020-01
"RTN","SAMISITE",30,0)
 ;@patch-list **5,12**
"RTN","SAMISITE",31,0)
 ;
"RTN","SAMISITE",32,0)
 ;@dev-add: Alexis Carlson (arc)
"RTN","SAMISITE",33,0)
 ; alexis@vistaexpertise.net
"RTN","SAMISITE",34,0)
 ;@dev-add Frederick D. S. Marshall (toad)
"RTN","SAMISITE",35,0)
 ; toad@vistaexpertise.net
"RTN","SAMISITE",36,0)
 ;@dev-add Kenneth W. McGlothlen (mcglk)
"RTN","SAMISITE",37,0)
 ; mcglk@vistaexpertise.net
"RTN","SAMISITE",38,0)
 ;
"RTN","SAMISITE",39,0)
 ;@routine-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMISITE",40,0)
 ; 2020-04-02/05-26 ven/gpl 1.18.0.5+i5 d36b7cad,36607664,521e0bdc,
"RTN","SAMISITE",41,0)
 ; d018f52e,156be19e,476b2ff4,0a1538ef
"RTN","SAMISITE",42,0)
 ;  SAMISITE add multitenancy, fix bug in logout, fix sitetitle on 1st
"RTN","SAMISITE",43,0)
 ; time in, add superuser site selection feature, fix bug in cache.
"RTN","SAMISITE",44,0)
 ;
"RTN","SAMISITE",45,0)
 ; 2021-06-05 ven/gpl 18.12-t2 223b5900
"RTN","SAMISITE",46,0)
 ;  SAMISITE upgrade parameter with system overrides, add
"RTN","SAMISITE",47,0)
 ; systemDemoOnly & systemDemoUseDUZ parameters.
"RTN","SAMISITE",48,0)
 ;
"RTN","SAMISITE",49,0)
 ; 2021-07-01/07 ven/mcglk&toad&gpl 18.12-t2 cbf7e46b,bfeea24b,
"RTN","SAMISITE",50,0)
 ; 1dd91fea
"RTN","SAMISITE",51,0)
 ;  SAMISITE bump version & dates, add hdr comments & dev log; in
"RTN","SAMISITE",52,0)
 ; FINDSITE add missing 0 to quit.
"RTN","SAMISITE",53,0)
 ;
"RTN","SAMISITE",54,0)
 ;@to-do
"RTN","SAMISITE",55,0)
 ; Add label comments
"RTN","SAMISITE",56,0)
 ;
"RTN","SAMISITE",57,0)
 ;@contents
"RTN","SAMISITE",58,0)
 ; $$FINDSITE current site for user
"RTN","SAMISITE",59,0)
 ; $$USER ien of user accessing system
"RTN","SAMISITE",60,0)
 ; $$SITE ien of institution file entry for user's site
"RTN","SAMISITE",61,0)
 ; $$SITEID symbol for site
"RTN","SAMISITE",62,0)
 ; $$SITEACTV is site active?
"RTN","SAMISITE",63,0)
 ; $$SITENM site name from ien
"RTN","SAMISITE",64,0)
 ; $$SITENM2 site name from symbol
"RTN","SAMISITE",65,0)
 ; LOGIN login processing
"RTN","SAMISITE",66,0)
 ; $$SIGNON signon with access & verify code
"RTN","SAMISITE",67,0)
 ; SUPER site selection page for super users
"RTN","SAMISITE",68,0)
 ; UPGRADE init: convert to multi-tenancy
"RTN","SAMISITE",69,0)
 ;
"RTN","SAMISITE",70,0)
 ;
"RTN","SAMISITE",71,0)
 ;
"RTN","SAMISITE",72,0)
 ;@section 1 subroutines
"RTN","SAMISITE",73,0)
 ;
"RTN","SAMISITE",74,0)
 ;
"RTN","SAMISITE",75,0)
 ;
"RTN","SAMISITE",76,0)
FINDSITE(SAMIRETURN,ARGS) ; extrinsic which returns the site
"RTN","SAMISITE",77,0)
 ; to be used by this user: ARGS("siteid")=siteid and
"RTN","SAMISITE",78,0)
 ; ARGS("sitetitle")=sitename - siteid
"RTN","SAMISITE",79,0)
 ; 1 for success 
"RTN","SAMISITE",80,0)
 ; 0 for fail - exit; page to be displayed is in SAMIRETURN
"RTN","SAMISITE",81,0)
 ;
"RTN","SAMISITE",82,0)
 ;d ^ZTER
"RTN","SAMISITE",83,0)
 n user
"RTN","SAMISITE",84,0)
 s user=$$USER()
"RTN","SAMISITE",85,0)
 i user=-1 d  q 0
"RTN","SAMISITE",86,0)
 . n vals
"RTN","SAMISITE",87,0)
 . s vals("siteid")=""
"RTN","SAMISITE",88,0)
 . s vals("sitetitle")="Unknown Site"
"RTN","SAMISITE",89,0)
 . s vals("errorMessage")=""
"RTN","SAMISITE",90,0)
 . d RTNERR^SAMIHOM4(.SAMIRETURN,"vapals:login",.vals)
"RTN","SAMISITE",91,0)
 . ;s ARGS("errorMessage")="Error, user not found"
"RTN","SAMISITE",92,0)
 . ;d RTNERR^SAMIHOM4(.SAMIRETURN,"vapals:syserror",.ARGS)
"RTN","SAMISITE",93,0)
 ;
"RTN","SAMISITE",94,0)
 ;d  q 0
"RTN","SAMISITE",95,0)
 ;. s ARGS("errorMessage")="User is found: "_user
"RTN","SAMISITE",96,0)
 ;. d RTNERR^SAMIHOM4(.SAMIRETURN,"vapals:syserror",.ARGS)
"RTN","SAMISITE",97,0)
 ;
"RTN","SAMISITE",98,0)
 n site,siteid,siteactv,sitenm
"RTN","SAMISITE",99,0)
 ;
"RTN","SAMISITE",100,0)
 i $o(^SAMI(311.13,"B",user,""))'="" d  q 0 ; superuser
"RTN","SAMISITE",101,0)
 . d SUPER("SAMIRETURN",.ARGS)
"RTN","SAMISITE",102,0)
 . s HTTPRSP("mime")="text/html"
"RTN","SAMISITE",103,0)
 ;
"RTN","SAMISITE",104,0)
 s site=$$SITE(user)
"RTN","SAMISITE",105,0)
 i site<1 s site=-1
"RTN","SAMISITE",106,0)
 i site=-1 d  q 0
"RTN","SAMISITE",107,0)
 . s ARGS("errorMessage")="Site not found for user "_user
"RTN","SAMISITE",108,0)
 . d RTNERR^SAMIHOM4(.SAMIRETURN,"vapals:syserror",.ARGS)
"RTN","SAMISITE",109,0)
 ;
"RTN","SAMISITE",110,0)
 s siteid=$$SITEID(site)
"RTN","SAMISITE",111,0)
 i siteid=-1 d  q 0
"RTN","SAMISITE",112,0)
 . s ARGS("errorMessage")="Site ID not found for site "_site
"RTN","SAMISITE",113,0)
 . d RTNERR^SAMIHOM4(.SAMIRETURN,"vapals:syserror",.ARGS)
"RTN","SAMISITE",114,0)
 ;
"RTN","SAMISITE",115,0)
 s siteactv=$$SITEACTV(site)
"RTN","SAMISITE",116,0)
 i siteactv<1 d  q 0
"RTN","SAMISITE",117,0)
 . s ARGS("errorMessage")="Site not active: "_siteid
"RTN","SAMISITE",118,0)
 . d RTNERR^SAMIHOM4(.SAMIRETURN,"vapals:syserror",.ARGS)
"RTN","SAMISITE",119,0)
 ;
"RTN","SAMISITE",120,0)
 s sitenm=$$SITENM(site)
"RTN","SAMISITE",121,0)
 i sitenm=-1 d  q 0
"RTN","SAMISITE",122,0)
 . s ARGS("errorMessage")="Site name not found: "_siteid
"RTN","SAMISITE",123,0)
 . d RTNERR^SAMIHOM4(.SAMIRETURN,"vapals:syserror",.ARGS)
"RTN","SAMISITE",124,0)
 ;
"RTN","SAMISITE",125,0)
 s ARGS("siteid")=siteid
"RTN","SAMISITE",126,0)
 s ARGS("sitetitle")=$$SITENM(site)_" - "_siteid
"RTN","SAMISITE",127,0)
 q 1
"RTN","SAMISITE",128,0)
 ;
"RTN","SAMISITE",129,0)
 ;
"RTN","SAMISITE",130,0)
 ;
"RTN","SAMISITE",131,0)
USER() ; extrinsic returns the DUZ of the user accessing the system
"RTN","SAMISITE",132,0)
 ; -1 means user not known
"RTN","SAMISITE",133,0)
 n rtn s rtn=-1
"RTN","SAMISITE",134,0)
 s rtn=+$G(DUZ)
"RTN","SAMISITE",135,0)
 i rtn=0 s rtn=-1
"RTN","SAMISITE",136,0)
 q rtn
"RTN","SAMISITE",137,0)
 ;
"RTN","SAMISITE",138,0)
 ;
"RTN","SAMISITE",139,0)
 ;
"RTN","SAMISITE",140,0)
SITE(USER) ; extrinsic returns the pointer to the Institution file
"RTN","SAMISITE",141,0)
 ; which is the site of the user
"RTN","SAMISITE",142,0)
 ; -1 means site not found
"RTN","SAMISITE",143,0)
 ; zero means site not active
"RTN","SAMISITE",144,0)
 n rtn
"RTN","SAMISITE",145,0)
 s rtn=$o(^VA(200,USER,2,0))
"RTN","SAMISITE",146,0)
 i +rtn="" s rtn=-1
"RTN","SAMISITE",147,0)
 q rtn
"RTN","SAMISITE",148,0)
 ;
"RTN","SAMISITE",149,0)
 ;
"RTN","SAMISITE",150,0)
 ;
"RTN","SAMISITE",151,0)
SITEID(SITE) ; extrinsic returns the Site Symbol for SITE
"RTN","SAMISITE",152,0)
 ; this is found in the SAMI SITE file
"RTN","SAMISITE",153,0)
 ; null means SITEID not found
"RTN","SAMISITE",154,0)
 n rtn s rtn=-1
"RTN","SAMISITE",155,0)
 n ien s ien=$o(^SAMI(311.12,"B",SITE,""))
"RTN","SAMISITE",156,0)
 q:ien="" -1
"RTN","SAMISITE",157,0)
 s rtn=$$GET1^DIQ(311.12,ien_",",.02)
"RTN","SAMISITE",158,0)
 q rtn
"RTN","SAMISITE",159,0)
 ;
"RTN","SAMISITE",160,0)
 ;
"RTN","SAMISITE",161,0)
 ; 
"RTN","SAMISITE",162,0)
SITEACTV(SITE) ; Extrinsic which returns 1 if the site is active
"RTN","SAMISITE",163,0)
 ; otherwise 0
"RTN","SAMISITE",164,0)
 n rtn s rtn=-1
"RTN","SAMISITE",165,0)
 n ien s ien=$o(^SAMI(311.12,"B",SITE,""))
"RTN","SAMISITE",166,0)
 q:ien="" -1
"RTN","SAMISITE",167,0)
 s rtn=$$GET1^DIQ(311.12,ien_",",.03,"I")
"RTN","SAMISITE",168,0)
 q rtn
"RTN","SAMISITE",169,0)
 ;
"RTN","SAMISITE",170,0)
 ;
"RTN","SAMISITE",171,0)
 ;
"RTN","SAMISITE",172,0)
SITENM(SITE) ; Extrinsic which returns the Site name
"RTN","SAMISITE",173,0)
 ;
"RTN","SAMISITE",174,0)
 n rtn s rtn=-1
"RTN","SAMISITE",175,0)
 s rtn=$$GET1^DIQ(4,SITE_",",.01)
"RTN","SAMISITE",176,0)
 i rtn="" s rtn=-1
"RTN","SAMISITE",177,0)
 q rtn
"RTN","SAMISITE",178,0)
 ;
"RTN","SAMISITE",179,0)
 ;
"RTN","SAMISITE",180,0)
 ;
"RTN","SAMISITE",181,0)
SITENM2(SITEID) ; Extrinsic which returns the Site name from the Site Symbol
"RTN","SAMISITE",182,0)
 ;
"RTN","SAMISITE",183,0)
 q:SITEID="" -1
"RTN","SAMISITE",184,0)
 n siteien
"RTN","SAMISITE",185,0)
 s siteien=$o(^SAMI(311.12,"SYM",SITEID,""))
"RTN","SAMISITE",186,0)
 n site
"RTN","SAMISITE",187,0)
 q $$GET1^DIQ(311.12,siteien_",",.01,"E")
"RTN","SAMISITE",188,0)
 ;
"RTN","SAMISITE",189,0)
 ;
"RTN","SAMISITE",190,0)
 ;
"RTN","SAMISITE",191,0)
LOGIN(RTN,VALS) ; login processing
"RTN","SAMISITE",192,0)
 ;
"RTN","SAMISITE",193,0)
 n access,verify
"RTN","SAMISITE",194,0)
 s access=$g(VALS("access"))
"RTN","SAMISITE",195,0)
 s verify=$g(VALS("verify"))
"RTN","SAMISITE",196,0)
 ;i verify="@demo123" s verify="@demo321"
"RTN","SAMISITE",197,0)
 ;i verify="@demo123" s verify="$#happy10"
"RTN","SAMISITE",198,0)
 ;i access="ZZZUSER1" s access="SUPER6"
"RTN","SAMISITE",199,0)
 ;i access="" d  ;
"RTN","SAMISITE",200,0)
 ;. s access="PHXNAV1"
"RTN","SAMISITE",201,0)
 ;. s verify="$#happy6"
"RTN","SAMISITE",202,0)
 I $$GET1PARM^SAMIPARM("systemDemoOnly")="true" D  Q  ;
"RTN","SAMISITE",203,0)
 . S DUZ=$$GET1PARM^SAMIPARM("systemDemoUseDUZ")
"RTN","SAMISITE",204,0)
 . I +DUZ=0 D  ;
"RTN","SAMISITE",205,0)
 . . S DUZ=$O(^SAMI(311.13,"B",""))
"RTN","SAMISITE",206,0)
 . s VALS("samiroute")=""
"RTN","SAMISITE",207,0)
 . s VALS("siteid")=""
"RTN","SAMISITE",208,0)
 . d WSHOME^SAMIHOM3(.RTN,.VALS)
"RTN","SAMISITE",209,0)
 n ACVC s ACVC=access_";"_verify
"RTN","SAMISITE",210,0)
 i $$SIGNON(ACVC) D  Q  ;
"RTN","SAMISITE",211,0)
 . s VALS("samiroute")=""
"RTN","SAMISITE",212,0)
 . s VALS("siteid")=""
"RTN","SAMISITE",213,0)
 . d WSHOME^SAMIHOM3(.RTN,.VALS)
"RTN","SAMISITE",214,0)
 else  D  Q  ;
"RTN","SAMISITE",215,0)
 . s VALS("errorMessage")="Invalid login"
"RTN","SAMISITE",216,0)
 . d RTNERR^SAMIHOM4(.RTN,"vapals:login",.VALS)
"RTN","SAMISITE",217,0)
 q
"RTN","SAMISITE",218,0)
 ;
"RTN","SAMISITE",219,0)
 ;
"RTN","SAMISITE",220,0)
 ;
"RTN","SAMISITE",221,0)
SIGNON(ACVC) ; extrinsic returns 1 if signon is successful, else 0
"RTN","SAMISITE",222,0)
 ; Sign-on
"RTN","SAMISITE",223,0)
 N IO S IO=$P
"RTN","SAMISITE",224,0)
 D SETUP^XUSRB() ; Only partition set-up; No single sign-on or CAPRI
"RTN","SAMISITE",225,0)
 N RTN D VALIDAV^XUSRB(.RTN,$$ENCRYP^XUSRB1(ACVC)) ; sign-on call
"RTN","SAMISITE",226,0)
 I RTN(0)>0,'RTN(2) Q 1 ; Sign on successful!
"RTN","SAMISITE",227,0)
 I RTN(0)=0,RTN(2) Q 0  ; Verify Code must be changed NOW!
"RTN","SAMISITE",228,0)
 I $L(RTN(3)) Q 0  ; Error Message
"RTN","SAMISITE",229,0)
 ;
"RTN","SAMISITE",230,0)
 q
"RTN","SAMISITE",231,0)
 ;
"RTN","SAMISITE",232,0)
 ;
"RTN","SAMISITE",233,0)
 ;
"RTN","SAMISITE",234,0)
SUPER(RTN,FILTER) ; returns site selection page for super users
"RTN","SAMISITE",235,0)
 ;
"RTN","SAMISITE",236,0)
 n temp
"RTN","SAMISITE",237,0)
 d getThis^%wd("temp","blank_no_nav.html")
"RTN","SAMISITE",238,0)
 q:'$d(temp)
"RTN","SAMISITE",239,0)
 n cnt s cnt=0
"RTN","SAMISITE",240,0)
 n zj s zj=0
"RTN","SAMISITE",241,0)
 f  s zj=$o(temp(zj)) q:temp(zj)["Insert"  q:+zj=0  d  ;
"RTN","SAMISITE",242,0)
 . n ln s ln=temp(zj)
"RTN","SAMISITE",243,0)
 . i ln["PAGE NAME" s ln="Site Selection"
"RTN","SAMISITE",244,0)
 . d LOAD^SAMIFORM(.ln,"","")
"RTN","SAMISITE",245,0)
 . s cnt=cnt+1
"RTN","SAMISITE",246,0)
 . s @RTN@(cnt)=ln
"RTN","SAMISITE",247,0)
 s cnt=cnt+1
"RTN","SAMISITE",248,0)
 s @RTN@(cnt)="<ul>"
"RTN","SAMISITE",249,0)
 n gn s gn=$na(^SAMI(311.12,"B"))
"RTN","SAMISITE",250,0)
 n zi s zi=0
"RTN","SAMISITE",251,0)
 f  s zi=$o(@gn@(zi)) q:+zi=0  d  ;
"RTN","SAMISITE",252,0)
 . n zien s zien=$o(@gn@(zi,""))
"RTN","SAMISITE",253,0)
 . n active
"RTN","SAMISITE",254,0)
 . s active=$$GET1^DIQ(311.12,zien_",",.03,"I")
"RTN","SAMISITE",255,0)
 . q:active=0
"RTN","SAMISITE",256,0)
 . n name
"RTN","SAMISITE",257,0)
 . s name=$$SITENM(zi)_" - "_$$SITEID(zi)
"RTN","SAMISITE",258,0)
 . n link
"RTN","SAMISITE",259,0)
 . s link="<li>"
"RTN","SAMISITE",260,0)
 . s link=link_"<a class=""navigation"" data-method=""post"""
"RTN","SAMISITE",261,0)
 . s link=link_" data-samiroute=""home"" data-siteid="""_$$SITEID(zi)_""""
"RTN","SAMISITE",262,0)
 . ;s link=link_" data-site="""_$$SITEID(zi)_""""
"RTN","SAMISITE",263,0)
 . ;s link=link_" href=""#!"">"_$$SITENM(zi)_" - "_$$SITEID(zi)
"RTN","SAMISITE",264,0)
 . s link=link_" href=""/vapals"">"_name
"RTN","SAMISITE",265,0)
 . s link=link_"</a></li>"
"RTN","SAMISITE",266,0)
 . ;n link
"RTN","SAMISITE",267,0)
 . ;s link="<form method=POST action=""/vapals"">"
"RTN","SAMISITE",268,0)
 . ;s link=link_"<input type=hidden name=""samiroute"" value=""home"">"
"RTN","SAMISITE",269,0)
 . ;s link=link_"<input type=hidden name=""siteid"" value="""_$$SITEID(zi)_""">"
"RTN","SAMISITE",270,0)
 . ;s link=link_"<input value="""_name_""" class=""btn btn-link"" role=""link"" type=""submit""></form>"
"RTN","SAMISITE",271,0)
 . s cnt=cnt+1
"RTN","SAMISITE",272,0)
 . s @RTN@(cnt)=link
"RTN","SAMISITE",273,0)
 s cnt=cnt+1
"RTN","SAMISITE",274,0)
 s @RTN@(cnt)="</ul>"
"RTN","SAMISITE",275,0)
 n zk s zk=zj+1
"RTN","SAMISITE",276,0)
 f  s zk=$o(temp(zk)) q:+zk=0  d  ;
"RTN","SAMISITE",277,0)
 . s cnt=cnt+1
"RTN","SAMISITE",278,0)
 . s @RTN@(cnt)=temp(zk)
"RTN","SAMISITE",279,0)
 q
"RTN","SAMISITE",280,0)
 ;
"RTN","SAMISITE",281,0)
 ;
"RTN","SAMISITE",282,0)
 ;
"RTN","SAMISITE",283,0)
UPGRADE() ; convert VAPALS system to Multi-tenancy by adding siteid
"RTN","SAMISITE",284,0)
 ; to all existing patients - runs one time as the Post Install 
"RTN","SAMISITE",285,0)
 ; to the installation
"RTN","SAMISITE",286,0)
 ;
"RTN","SAMISITE",287,0)
 n lroot,proot,lien,pien
"RTN","SAMISITE",288,0)
 s (lien,pien)=0
"RTN","SAMISITE",289,0)
 s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMISITE",290,0)
 s proot=$$setroot^%wd("vapals-patients")
"RTN","SAMISITE",291,0)
 n site
"RTN","SAMISITE",292,0)
 s site=$$GET^XPAR("SYS","SAMI SID PREFIX",,"Q")
"RTN","SAMISITE",293,0)
 i site="" d  q  ;
"RTN","SAMISITE",294,0)
 . D MES^XPDUTL("No default site returned by SAMI SID PREFIX parameter, exiting")
"RTN","SAMISITE",295,0)
 n cnt s cnt=0
"RTN","SAMISITE",296,0)
 f  s lien=$o(@lroot@(lien)) q:+lien=0  d  ;
"RTN","SAMISITE",297,0)
 . q:$g(@lroot@(lien,"siteid"))'=""
"RTN","SAMISITE",298,0)
 . n nomatch s nomatch=0
"RTN","SAMISITE",299,0)
 . n dfn s dfn=$g(@lroot@(lien,"dfn"))
"RTN","SAMISITE",300,0)
 . i dfn="" d  q  ;
"RTN","SAMISITE",301,0)
 . . D MES^XPDUTL("Error, no dfn found for lien "_lien)
"RTN","SAMISITE",302,0)
 . s pien=$o(@proot@("dfn",dfn,""))
"RTN","SAMISITE",303,0)
 . ; make sure the first 3 chars of the studyid matches the site
"RTN","SAMISITE",304,0)
 . i pien'="" d  q:nomatch
"RTN","SAMISITE",305,0)
 . . n psite,psid
"RTN","SAMISITE",306,0)
 . . s psid=$g(@proot@(pien,"sisid"))
"RTN","SAMISITE",307,0)
 . . i psid="" s nomatch=1 q  ;
"RTN","SAMISITE",308,0)
 . . i $e(psid,1,3)'=site s nomatch=1 d  q  ;
"RTN","SAMISITE",309,0)
 . . . d MES^XPDUTL("skipping record - studyid "_psid_" does not match site "_site)
"RTN","SAMISITE",310,0)
 . ;w !,"lien "_lien_" being set to "_site
"RTN","SAMISITE",311,0)
 . s cnt=cnt+1
"RTN","SAMISITE",312,0)
 . s @lroot@(lien,"siteid")=site
"RTN","SAMISITE",313,0)
 i cnt>0 d  ;
"RTN","SAMISITE",314,0)
 . d MES^XPDUTL("Multi-tenancy upgrade successful")
"RTN","SAMISITE",315,0)
 . d MES^XPDUTL(cnt_" patient records set to site "_site)
"RTN","SAMISITE",316,0)
 q
"RTN","SAMISITE",317,0)
 ;
"RTN","SAMISITE",318,0)
 ;
"RTN","SAMISITE",319,0)
 ;
"RTN","SAMISITE",320,0)
EOR ; end of routine SAMISITE
"RTN","SAMISRC2")
0^57^B10574823
"RTN","SAMISRC2",1,0)
SAMISRC2 ;ven/gpl - ielcap: home page search ; 2/14/19 10:49am
"RTN","SAMISRC2",2,0)
 ;;18.0;SAM;;;Build 1
"RTN","SAMISRC2",3,0)
 ;
"RTN","SAMISRC2",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMISRC2",5,0)
 ;
"RTN","SAMISRC2",6,0)
 ; SAMISRCH contains subroutines for searching for patients on the
"RTN","SAMISRC2",7,0)
 ; ELCAP home page.
"RTN","SAMISRC2",8,0)
 ; It is currently untested & in progress.
"RTN","SAMISRC2",9,0)
 ;
"RTN","SAMISRC2",10,0)
 quit  ; no entry from top
"RTN","SAMISRC2",11,0)
 ;
"RTN","SAMISRC2",12,0)
 ;
"RTN","SAMISRC2",13,0)
 ;
"RTN","SAMISRC2",14,0)
 ;@section 0 primary development: see routine %wful
"RTN","SAMISRC2",15,0)
 ;
"RTN","SAMISRC2",16,0)
 ;
"RTN","SAMISRC2",17,0)
 ;
"RTN","SAMISRC2",18,0)
 ;@routine-credits
"RTN","SAMISRC2",19,0)
 ;@primary-dev: George P. Lilly (gpl)
"RTN","SAMISRC2",20,0)
 ; gpl@vistaexpertise.net
"RTN","SAMISRC2",21,0)
 ;@primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMISRC2",22,0)
 ; http://vistaexpertise.net
"RTN","SAMISRC2",23,0)
 ;@copyright: 2017, gpl, all rights reserved
"RTN","SAMISRC2",24,0)
 ;@license: Apache 2.0
"RTN","SAMISRC2",25,0)
 ; https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMISRC2",26,0)
 ;
"RTN","SAMISRC2",27,0)
 ;@last-updated: 2018-03-07T18:49Z
"RTN","SAMISRC2",28,0)
 ;@application: Screening Applications Management (SAM)
"RTN","SAMISRC2",29,0)
 ;@module: Screening Applications Management - IELCAP (SAMI)
"RTN","SAMISRC2",30,0)
 ;@suite-of-files: SAMI Forms (311.101-311.199)
"RTN","SAMISRC2",31,0)
 ;@version: 18.0T04
"RTN","SAMISRC2",32,0)
 ;@release-date: not yet released
"RTN","SAMISRC2",33,0)
 ;@patch-list: none yet
"RTN","SAMISRC2",34,0)
 ;
"RTN","SAMISRC2",35,0)
 ;@additional-dev: Frederick D. S. Marshall (toad)
"RTN","SAMISRC2",36,0)
 ; toad@vistaexpertise.net
"RTN","SAMISRC2",37,0)
 ;
"RTN","SAMISRC2",38,0)
 ;@module-credits
"RTN","SAMISRC2",39,0)
 ;@project: VA Partnership to Increase Access to Lung Screening
"RTN","SAMISRC2",40,0)
 ; (VA-PALS)
"RTN","SAMISRC2",41,0)
 ; http://va-pals.org/
"RTN","SAMISRC2",42,0)
 ;@funding: 2017/2018, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMISRC2",43,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMISRC2",44,0)
 ;@partner-org: Veterans Affairs Office of Rural health
"RTN","SAMISRC2",45,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMISRC2",46,0)
 ;@partner-org: International Early Lung Cancer Action Program (I-ELCAP)
"RTN","SAMISRC2",47,0)
 ; http://ielcap.com/
"RTN","SAMISRC2",48,0)
 ;@partner-org: Paraxial Technologies
"RTN","SAMISRC2",49,0)
 ; http://paraxialtech.com/
"RTN","SAMISRC2",50,0)
 ;@partner-org: Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMISRC2",51,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMISRC2",52,0)
 ;
"RTN","SAMISRC2",53,0)
 ;@module-log
"RTN","SAMISRC2",54,0)
 ; 2018-03-06 ven/gpl v18.0t04 SAMISRCH: created new routine w/web
"RTN","SAMISRC2",55,0)
 ; service subroutine WSLOOKUP.
"RTN","SAMISRC2",56,0)
 ;
"RTN","SAMISRC2",57,0)
 ; 2018-03-07 ven/toad v18.0t04 SAMISRCH: update style, spell out
"RTN","SAMISRC2",58,0)
 ; language elements, add white space & do-dot quits.
"RTN","SAMISRC2",59,0)
 ;
"RTN","SAMISRC2",60,0)
 ;@contents
"RTN","SAMISRC2",61,0)
 ;
"RTN","SAMISRC2",62,0)
 ;
"RTN","SAMISRC2",63,0)
 ;
"RTN","SAMISRC2",64,0)
 ;@section 1 web service
"RTN","SAMISRC2",65,0)
 ;
"RTN","SAMISRC2",66,0)
 ;
"RTN","SAMISRC2",67,0)
 ;
"RTN","SAMISRC2",68,0)
WSLOOKUP(ARGS,BODY,RESULT) ; look up ELCAP patient
"RTN","SAMISRC2",69,0)
 ;
"RTN","SAMISRC2",70,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMISRC2",71,0)
 ;
"RTN","SAMISRC2",72,0)
 ;ven/gpl;web service;procedure;
"RTN","SAMISRC2",73,0)
 ;@called-by
"RTN","SAMISRC2",74,0)
 ; web service SAMISRCH-WSLOOKUP
"RTN","SAMISRC2",75,0)
 ;@calls
"RTN","SAMISRC2",76,0)
 ; parseBody^%wf
"RTN","SAMISRC2",77,0)
 ; $$setroot^%wd
"RTN","SAMISRC2",78,0)
 ; $$GENSTDID^SAMIHOME
"RTN","SAMISRC2",79,0)
 ; WSCASE^SAMICASE
"RTN","SAMISRC2",80,0)
 ; GETHOME^SAMIHOME
"RTN","SAMISRC2",81,0)
 ;@input
"RTN","SAMISRC2",82,0)
 ;.ARGS =
"RTN","SAMISRC2",83,0)
 ;.BODY =
"RTN","SAMISRC2",84,0)
 ;@output
"RTN","SAMISRC2",85,0)
 ;.RESULT =
"RTN","SAMISRC2",86,0)
 ;@examples [tbd]
"RTN","SAMISRC2",87,0)
 ;@tests [tbd]
"RTN","SAMISRC2",88,0)
 ;
"RTN","SAMISRC2",89,0)
 ;@stanza 2 initialize
"RTN","SAMISRC2",90,0)
 ;
"RTN","SAMISRC2",91,0)
 merge ^SAMIUL("lookup")=ARGS
"RTN","SAMISRC2",92,0)
 merge ^SAMIUL("lookup","body")=BODY
"RTN","SAMISRC2",93,0)
 ;
"RTN","SAMISRC2",94,0)
 new vars,bdy
"RTN","SAMISRC2",95,0)
 set bdy=$get(BODY(1))
"RTN","SAMISRC2",96,0)
 do parseBody^%wf("vars",.bdy)
"RTN","SAMISRC2",97,0)
 merge ^SAMIUL("lookup","vars")=vars
"RTN","SAMISRC2",98,0)
 ;
"RTN","SAMISRC2",99,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMISRC2",100,0)
 ;
"RTN","SAMISRC2",101,0)
 new sien,trtn
"RTN","SAMISRC2",102,0)
 if $get(vars("field"))="sid" do  ; searching by studyid
"RTN","SAMISRC2",103,0)
 . set sien=$get(vars("fvalue"))
"RTN","SAMISRC2",104,0)
 . if sien="" quit  ; nothing entered to search by
"RTN","SAMISRC2",105,0)
 . if +sien=0 do  ; starts with alphabetics
"RTN","SAMISRC2",106,0)
 . . set sien=$extract(sien,4,$length(sien)) ; get rid of the prefix
"RTN","SAMISRC2",107,0)
 . . quit
"RTN","SAMISRC2",108,0)
 . set sien=+sien ; lose the leading zeros
"RTN","SAMISRC2",109,0)
 . if +sien=0 quit  ; didn't work
"RTN","SAMISRC2",110,0)
 . if $data(@root@(sien)) do  ; there is a record at that location
"RTN","SAMISRC2",111,0)
 . . set filter("studyid")=$$GENSTDID^SAMIHOM3(sien,.ARGS)
"RTN","SAMISRC2",112,0)
 . . do WSCASE^SAMICASE(.trtn,.filter)
"RTN","SAMISRC2",113,0)
 . . quit
"RTN","SAMISRC2",114,0)
 . quit
"RTN","SAMISRC2",115,0)
 ;
"RTN","SAMISRC2",116,0)
 if $data(trtn) do  quit  ; have the case review page
"RTN","SAMISRC2",117,0)
 . merge RESULT=trtn
"RTN","SAMISRC2",118,0)
 . quit
"RTN","SAMISRC2",119,0)
 ;
"RTN","SAMISRC2",120,0)
 ; on failure, resturn to the home page, maybe pass an error message
"RTN","SAMISRC2",121,0)
 ;
"RTN","SAMISRC2",122,0)
 set filter("samilookuperror")="Patient not found"
"RTN","SAMISRC2",123,0)
 do GETHOME^SAMIHOM3(.trtn,.filter)
"RTN","SAMISRC2",124,0)
 merge RESULT=trtn
"RTN","SAMISRC2",125,0)
 ;
"RTN","SAMISRC2",126,0)
 ;@stanza 3 termination
"RTN","SAMISRC2",127,0)
 ;
"RTN","SAMISRC2",128,0)
 quit  ; end of WSLOOKUP
"RTN","SAMISRC2",129,0)
 ;
"RTN","SAMISRC2",130,0)
 ;
"RTN","SAMISRC2",131,0)
 ;
"RTN","SAMISRC2",132,0)
EOR ; end of routine SAMISRCH
"RTN","SAMITIU")
0^58^B7627820
"RTN","SAMITIU",1,0)
SAMITIU ;SAMI/lgc/arc - HL7 PATIENT LIST TIU processing for VAPALS ;Dec 20, 2019@13:49
"RTN","SAMITIU",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMITIU",3,0)
 ;
"RTN","SAMITIU",4,0)
 quit  ; no entry from top
"RTN","SAMITIU",5,0)
 ;
"RTN","SAMITIU",6,0)
 ;
"RTN","SAMITIU",7,0)
EN ;
"RTN","SAMITIU",8,0)
 ;do ^ZTER
"RTN","SAMITIU",9,0)
 ;
"RTN","SAMITIU",10,0)
 ;
"RTN","SAMITIU",11,0)
 ;---------- PREPARE FOR SENDING ACK/NAK --------------------------
"RTN","SAMITIU",12,0)
 ;
"RTN","SAMITIU",13,0)
 ; Move message from HL7 global to ^KBAP(
"RTN","SAMITIU",14,0)
 ;
"RTN","SAMITIU",15,0)
 new nodecnt,fields
"RTN","SAMITIU",16,0)
 kill ^KBAP("SAMITIU")
"RTN","SAMITIU",17,0)
 ;
"RTN","SAMITIU",18,0)
 ; Save every segment to the ^KBAP("SAMITIU" global
"RTN","SAMITIU",19,0)
 for  X HLNEXT Q:HLQUIT'>0  quit:HLNODE=""  do SVNODE
"RTN","SAMITIU",20,0)
 ;
"RTN","SAMITIU",21,0)
 ;Now run processing routine to put patient data
"RTN","SAMITIU",22,0)
 ;   into VAPALS patient-lookup graph
"RTN","SAMITIU",23,0)
 do RECTIU(.fields)
"RTN","SAMITIU",24,0)
 ;
"RTN","SAMITIU",25,0)
 ; Don't (ACK)nowledge ACK messages (ien into file 771.2)
"RTN","SAMITIU",26,0)
 I $G(HL("MTP"))=1 Q
"RTN","SAMITIU",27,0)
 ;
"RTN","SAMITIU",28,0)
 ; Send ACK message
"RTN","SAMITIU",29,0)
ACK D:'($get(%ut)) ACK^SAMIHL7
"RTN","SAMITIU",30,0)
 ;
"RTN","SAMITIU",31,0)
 Q
"RTN","SAMITIU",32,0)
 ;
"RTN","SAMITIU",33,0)
 ;
"RTN","SAMITIU",34,0)
 ;@ppi
"RTN","SAMITIU",35,0)
SVNODE ; Save HL7 segment to ^KBAP global
"RTN","SAMITIU",36,0)
 new kbapcnt
"RTN","SAMITIU",37,0)
 set ^KBAP("SAMITIU",0)=$get(^KBAP("SAMITIU",0))+1
"RTN","SAMITIU",38,0)
 set kbapcnt=$get(^KBAP("SAMITIU",0))
"RTN","SAMITIU",39,0)
 set ^KBAP("SAMITIU",kbapcnt)=HLNODE
"RTN","SAMITIU",40,0)
 Q
"RTN","SAMITIU",41,0)
 ;
"RTN","SAMITIU",42,0)
 ;
"RTN","SAMITIU",43,0)
 ;@ppi
"RTN","SAMITIU",44,0)
RECTIU(fields) ; Parse contents of ^KBAP("SAMITIU") into patient-lookup graph
"RTN","SAMITIU",45,0)
 ;@input
"RTN","SAMITIU",46,0)
 ;  fields = variable by reference. Used when unit testing
"RTN","SAMITIU",47,0)
 ;@output
"RTN","SAMITIU",48,0)
 ;  fields = array of last entry parsed by PARSE
"RTN","SAMITIU",49,0)
 ;
"RTN","SAMITIU",50,0)
 kill fields
"RTN","SAMITIU",51,0)
 new node,nodecnt,fieldstr
"RTN","SAMITIU",52,0)
 set fieldstr="",nodecnt=0
"RTN","SAMITIU",53,0)
 for  set nodecnt=$order(^KBAP("SAMITIU",nodecnt)) quit:'nodecnt  do
"RTN","SAMITIU",54,0)
 . if ^KBAP("SAMITIU",nodecnt)["MSH^~" quit
"RTN","SAMITIU",55,0)
 . if ^KBAP("SAMITIU",nodecnt)["active duty" do  quit
"RTN","SAMITIU",56,0)
 .. set fieldstr=^KBAP("SAMITIU",nodecnt)
"RTN","SAMITIU",57,0)
 .; ok we have a node with patient data
"RTN","SAMITIU",58,0)
 . s node=^KBAP("SAMITIU",nodecnt)
"RTN","SAMITIU",59,0)
 . do PARSE(node,fieldstr,.fields)
"RTN","SAMITIU",60,0)
 .; do not update patient-lookup graph if doing unit testing
"RTN","SAMITIU",61,0)
 . do:'$data(%ut) UPDTPTL^SAMIHL7(.fields)
"RTN","SAMITIU",62,0)
 quit
"RTN","SAMITIU",63,0)
 ;
"RTN","SAMITIU",64,0)
 ;
"RTN","SAMITIU",65,0)
 ;@ppi
"RTN","SAMITIU",66,0)
PARSE(node,fieldstr,fields) ;
"RTN","SAMITIU",67,0)
 ;@input
"RTN","SAMITIU",68,0)
 ;   node     = node in ^KBAP("SAMITIU" global
"RTN","SAMITIU",69,0)
 ;   fieldstr = delimited string of field names
"RTN","SAMITIU",70,0)
 ;   fields   = array by reference
"RTN","SAMITIU",71,0)
 ;@output
"RTN","SAMITIU",72,0)
 ;   fields  = array with information from ^KBAP entry
"RTN","SAMITIU",73,0)
 ;
"RTN","SAMITIU",74,0)
 kill fields
"RTN","SAMITIU",75,0)
 new fldcnt,ss
"RTN","SAMITIU",76,0)
 for fldcnt=1:1:$length(fieldstr,"^") do
"RTN","SAMITIU",77,0)
 . set ss=$piece(fieldstr,"^",fldcnt)
"RTN","SAMITIU",78,0)
 . set fields(ss)=$piece(node,"^",fldcnt)
"RTN","SAMITIU",79,0)
 .; we will have fields("sex")=M or F, fields("gender")=M^MALE or F^FEMALE
"RTN","SAMITIU",80,0)
 . if ss="sex" do
"RTN","SAMITIU",81,0)
 .. set fields("gender")=fields(ss)_"^"_$select(fields(ss)["M":"MALE",fields(ss)["F":"FEMALE",1:"")
"RTN","SAMITIU",82,0)
 ;zw fields
"RTN","SAMITIU",83,0)
 write !
"RTN","SAMITIU",84,0)
 quit
"RTN","SAMITIU",85,0)
 ;
"RTN","SAMITIU",86,0)
 ;
"RTN","SAMITIU",87,0)
EOR ;End of routine SAMITIU
"RTN","SAMITTW")
0^59^B5449588
"RTN","SAMITTW",1,0)
SAMITTW ;ven/gpl - text-processing utilities ;2021-07-01t21:37z
"RTN","SAMITTW",2,0)
 ;;18.0;SAMI;**12**;2020-01;Build 1
"RTN","SAMITTW",3,0)
 ;;18.12
"RTN","SAMITTW",4,0)
 ;
"RTN","SAMITTW",5,0)
 ; Routine SAMITTW contains subroutines for formatting text fields for
"RTN","SAMITTW",6,0)
 ; VAPALS-ELCAP forms.
"RTN","SAMITTW",7,0)
 ;
"RTN","SAMITTW",8,0)
 quit  ; no entry from top
"RTN","SAMITTW",9,0)
 ;
"RTN","SAMITTW",10,0)
 ;
"RTN","SAMITTW",11,0)
 ;
"RTN","SAMITTW",12,0)
 ;@section 0 primary development
"RTN","SAMITTW",13,0)
 ;
"RTN","SAMITTW",14,0)
 ;
"RTN","SAMITTW",15,0)
 ;
"RTN","SAMITTW",16,0)
 ;@routine-credits
"RTN","SAMITTW",17,0)
 ;@dev-main: George P. Lilly (gpl)
"RTN","SAMITTW",18,0)
 ; gpl@vistaexpertise.net
"RTN","SAMITTW",19,0)
 ;@dev-org-main: Vista Expertise Network (ven)
"RTN","SAMITTW",20,0)
 ; http://vistaexpertise.net
"RTN","SAMITTW",21,0)
 ;@copyright: 2021, gpl, all rights reserved
"RTN","SAMITTW",22,0)
 ;@license see routine SAMIUL
"RTN","SAMITTW",23,0)
 ;
"RTN","SAMITTW",24,0)
 ;@last-update 2021-07-01t21:37z
"RTN","SAMITTW",25,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMITTW",26,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMITTW",27,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMITTW",28,0)
 ;@version 18.12
"RTN","SAMITTW",29,0)
 ;@release-date 2020-01
"RTN","SAMITTW",30,0)
 ;@patch-list **12**
"RTN","SAMITTW",31,0)
 ;
"RTN","SAMITTW",32,0)
 ;@dev-add Frederick D. S. Marshall (toad)
"RTN","SAMITTW",33,0)
 ; toad@vistaexpertise.net
"RTN","SAMITTW",34,0)
 ;@dev-add Kenneth W. McGlothlen (mcglk)
"RTN","SAMITTW",35,0)
 ; mcglk@vistaexpertise.net
"RTN","SAMITTW",36,0)
 ;
"RTN","SAMITTW",37,0)
 ;@routine-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMITTW",38,0)
 ; 2021-06-29 ven/gpl 18.12-t2 a5bbd37a
"RTN","SAMITTW",39,0)
 ;  SAMITTW format text box for intake & followup notes; new text-
"RTN","SAMITTW",40,0)
 ; processing utils.
"RTN","SAMITTW",41,0)
 ;
"RTN","SAMITTW",42,0)
 ; 2021-07-01 ven/mcglk&toad 18.12-t2 cbf7e46b,fa794d60
"RTN","SAMITTW",43,0)
 ;  SAMITTW bump version & dates, add hdr comments & dev log.
"RTN","SAMITTW",44,0)
 ;
"RTN","SAMITTW",45,0)
 ;@contents
"RTN","SAMITTW",46,0)
 ; $$PRNTABLE remove non-printable characters except CR
"RTN","SAMITTW",47,0)
 ; $$CRWRAP wrap text line based on margin or embedded CRLF
"RTN","SAMITTW",48,0)
 ;
"RTN","SAMITTW",49,0)
 ;
"RTN","SAMITTW",50,0)
 ;
"RTN","SAMITTW",51,0)
 ;@section 1 subroutines
"RTN","SAMITTW",52,0)
 ;
"RTN","SAMITTW",53,0)
 ;
"RTN","SAMITTW",54,0)
 ;
"RTN","SAMITTW",55,0)
PRNTABLE(ln) ; Extrinsic which removes all non-printable character except CR
"RTN","SAMITTW",56,0)
 n zi,zn,ln2
"RTN","SAMITTW",57,0)
 s ln2=""
"RTN","SAMITTW",58,0)
 f zi=1:1:$l(ln) d  ;
"RTN","SAMITTW",59,0)
 . s zn=$ASCII($e(ln,zi))
"RTN","SAMITTW",60,0)
 . q:zn>126
"RTN","SAMITTW",61,0)
 . q:zn<13
"RTN","SAMITTW",62,0)
 . q:((zn>13)&(zn<30))
"RTN","SAMITTW",63,0)
 . s ln2=ln2_$CHAR(zn)
"RTN","SAMITTW",64,0)
 ;
"RTN","SAMITTW",65,0)
 q ln2
"RTN","SAMITTW",66,0)
 ;
"RTN","SAMITTW",67,0)
 ;
"RTN","SAMITTW",68,0)
 ;
"RTN","SAMITTW",69,0)
CRWRAP(ln,dest,cnt,margin) ; extrinsic which will wrap a text line into
"RTN","SAMITTW",70,0)
 ; multiple lines based on margin, which defaults to 80, or imbedded CRLF
"RTN","SAMITTW",71,0)
 ; or CR. ln and margin are passed by value. dest is passed by name and
"RTN","SAMITTW",72,0)
 ; cnt is passed by reference and is updated.
"RTN","SAMITTW",73,0)
 ; extrinsic returns 1 if output was added to dest
"RTN","SAMITTW",74,0)
 ;
"RTN","SAMITTW",75,0)
 i $l(ln)<10 q 0  ; skip short fields
"RTN","SAMITTW",76,0)
 s ln=$$PRNTABLE^SAMITTW(ln)
"RTN","SAMITTW",77,0)
 ;s ^gpl("ln",$o(^gpl("ln"," "),-1)+1)=ln
"RTN","SAMITTW",78,0)
 i '$d(margin) s margin=80
"RTN","SAMITTW",79,0)
 i ln[$CHAR(13) d  q 1
"RTN","SAMITTW",80,0)
 . n cr s cr=$char(13)
"RTN","SAMITTW",81,0)
 . n crn s crn=$l(ln,$char(13))
"RTN","SAMITTW",82,0)
 . i $l(ln,$char(13,10))=crn s cr=$char(13,10)
"RTN","SAMITTW",83,0)
 . n i
"RTN","SAMITTW",84,0)
 . f i=1:1:crn d  ;
"RTN","SAMITTW",85,0)
 . . n eln s eln=""
"RTN","SAMITTW",86,0)
 . . i cr=$char(13) s eln(1)=$p(ln,$char(13),i)
"RTN","SAMITTW",87,0)
 . . i cr=$char(13,10) s eln(1)=$p(ln,$char(13,10),i)
"RTN","SAMITTW",88,0)
 . . ;s ^gpl("note",i)=eln(1)
"RTN","SAMITTW",89,0)
 . . q:eln(1)=""
"RTN","SAMITTW",90,0)
 . . i $l(eln(1))>margin d wrap^%tt("eln",margin,dest) q
"RTN","SAMITTW",91,0)
 . . n lnn s lnn=$o(@dest@(" "),-1)+1
"RTN","SAMITTW",92,0)
 . . s @dest@(lnn)=eln(1)
"RTN","SAMITTW",93,0)
 . ;
"RTN","SAMITTW",94,0)
 i $l(ln)>margin d  q 1 ;
"RTN","SAMITTW",95,0)
 . n eln s eln(1)=ln
"RTN","SAMITTW",96,0)
 . d wrap^%tt("eln",margin,dest)
"RTN","SAMITTW",97,0)
 ;
"RTN","SAMITTW",98,0)
 q 0
"RTN","SAMITTW",99,0)
 ;
"RTN","SAMITTW",100,0)
 ;
"RTN","SAMITTW",101,0)
 ;
"RTN","SAMITTW",102,0)
EOR ; end of routine SAMITTW
"RTN","SAMIUL")
0^60^B17740
"RTN","SAMIUL",1,0)
SAMIUL ;ven/staff - vapals-elcap license ;2021-03-17T18:40Z
"RTN","SAMIUL",2,0)
 ;;18.0;SAMI;**9**;;Build 1
"RTN","SAMIUL",3,0)
 ;;1.18.0.9-i9
"RTN","SAMIUL",4,0)
 ;
"RTN","SAMIUL",5,0)
 ; Copyright 2019 Early Diagnosis & Treatment Research Foundation,
"RTN","SAMIUL",6,0)
 ; Vista Expertise Network (VEN), & Paraxial
"RTN","SAMIUL",7,0)
 ;
"RTN","SAMIUL",8,0)
 ; The original management system was created & donated by Early
"RTN","SAMIUL",9,0)
 ; Diagnosis & Treatment Research Foundation within the International
"RTN","SAMIUL",10,0)
 ; Early Lung Cancer Action Program (I-ELCAP), an international
"RTN","SAMIUL",11,0)
 ; program of lung cancer screening.
"RTN","SAMIUL",12,0)
 ;
"RTN","SAMIUL",13,0)
 ; Licensed under the Apache License, Version 2.0 (the "License"); you
"RTN","SAMIUL",14,0)
 ; may not use this file except in compliance with the License. You
"RTN","SAMIUL",15,0)
 ; may obtain a copy of the License at:
"RTN","SAMIUL",16,0)
 ; http://www.apache.org/licenses/LICENSE-2.0
"RTN","SAMIUL",17,0)
 ;
"RTN","SAMIUL",18,0)
 ; Unless required by applicable law or agreed to in writing, software
"RTN","SAMIUL",19,0)
 ; distributed under the License is distributed on an "AS IS" BASIS,
"RTN","SAMIUL",20,0)
 ; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
"RTN","SAMIUL",21,0)
 ; implied.
"RTN","SAMIUL",22,0)
 ;
"RTN","SAMIUL",23,0)
 ; See the License for the specific language governing permissions &
"RTN","SAMIUL",24,0)
 ; limitations under the License.
"RTN","SAMIUL",25,0)
 ; http://www.apache.org/licenses/LICENSE-2.0
"RTN","SAMIUL",26,0)
 ; http://www.apache.org
"RTN","SAMIUL",27,0)
 ;
"RTN","SAMIUL",28,0)
 ;
"RTN","SAMIUL",29,0)
 ;
"RTN","SAMIUL",30,0)
EOR ; end of routine SAMIUL
"RTN","SAMIUR")
0^61^B520612339
"RTN","SAMIUR",1,0)
SAMIUR ;ven/gpl - user reports ;2021-08-11t21:53z
"RTN","SAMIUR",2,0)
 ;;18.0;SAMI;**5,10,11,12**;2020-01;Build 1
"RTN","SAMIUR",3,0)
 ;;18.12
"RTN","SAMIUR",4,0)
 ;
"RTN","SAMIUR",5,0)
 ; SAMIUR contains a web service & associated subroutines to produce
"RTN","SAMIUR",6,0)
 ; VAPALS-ELCAP user reports.
"RTN","SAMIUR",7,0)
 ;
"RTN","SAMIUR",8,0)
 quit  ; no entry from top
"RTN","SAMIUR",9,0)
 ;
"RTN","SAMIUR",10,0)
 ;
"RTN","SAMIUR",11,0)
 ;
"RTN","SAMIUR",12,0)
 ;@section 0 primary development
"RTN","SAMIUR",13,0)
 ;
"RTN","SAMIUR",14,0)
 ;
"RTN","SAMIUR",15,0)
 ;
"RTN","SAMIUR",16,0)
 ;@routine-credits
"RTN","SAMIUR",17,0)
 ;@dev-main George P. Lilly (gpl)
"RTN","SAMIUR",18,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIUR",19,0)
 ;@dev-org-main Vista Expertise Network (ven)
"RTN","SAMIUR",20,0)
 ; http://vistaexpertise.net
"RTN","SAMIUR",21,0)
 ;@copyright 2017/2021, gpl, all rights reserved
"RTN","SAMIUR",22,0)
 ;@license see routine SAMIUL
"RTN","SAMIUR",23,0)
 ;
"RTN","SAMIUR",24,0)
 ;@last-update 2021-08-11t21:53z
"RTN","SAMIUR",25,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMIUR",26,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMIUR",27,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMIUR",28,0)
 ;@version 18.12
"RTN","SAMIUR",29,0)
 ;@release-date 2020-01
"RTN","SAMIUR",30,0)
 ;@patch-list **5,10,11,12**
"RTN","SAMIUR",31,0)
 ;
"RTN","SAMIUR",32,0)
 ;@dev-add Frederick D. S. Marshall (toad)
"RTN","SAMIUR",33,0)
 ; toad@vistaexpertise.net
"RTN","SAMIUR",34,0)
 ;@dev-add Larry G. Carlson (lgc)
"RTN","SAMIUR",35,0)
 ; larry.g.carlson@gmail.com
"RTN","SAMIUR",36,0)
 ;@dev-add Alexis R. Carlson (arc)
"RTN","SAMIUR",37,0)
 ; whatisthehumanspirit@gmail.com
"RTN","SAMIUR",38,0)
 ;@dev-add Kenneth W. McGlothlen (mcglk)
"RTN","SAMIUR",39,0)
 ; mcglk@vistaexpertise.net
"RTN","SAMIUR",40,0)
 ;
"RTN","SAMIUR",41,0)
 ;@module-credits see SAMIHUL
"RTN","SAMIUR",42,0)
 ;
"RTN","SAMIUR",43,0)
 ;@module-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMIUR",44,0)
 ; see SAMIURUL
"RTN","SAMIUR",45,0)
 ;
"RTN","SAMIUR",46,0)
 ;@contents
"RTN","SAMIUR",47,0)
 ; WSREPORT generate report based on params in filter
"RTN","SAMIUR",48,0)
 ; SORT sort patients by name
"RTN","SAMIUR",49,0)
 ; NUHREF create nuhref link to casereview for all patients
"RTN","SAMIUR",50,0)
 ; PNAME page name for report
"RTN","SAMIUR",51,0)
 ;
"RTN","SAMIUR",52,0)
 ; SELECT select patients for report
"RTN","SAMIUR",53,0)
 ; UNMAT build unmatched persons list
"RTN","SAMIUR",54,0)
 ; WKLIST build work list
"RTN","SAMIUR",55,0)
 ;
"RTN","SAMIUR",56,0)
 ;
"RTN","SAMIUR",57,0)
 ;
"RTN","SAMIUR",58,0)
 ;@section 1 wsreport subroutines
"RTN","SAMIUR",59,0)
 ;
"RTN","SAMIUR",60,0)
 ;
"RTN","SAMIUR",61,0)
 ;
"RTN","SAMIUR",62,0)
WSREPORT(SAMIRTN,filter) ; generate report based on params in filter
"RTN","SAMIUR",63,0)
 ;
"RTN","SAMIUR",64,0)
 ;@called-by
"RTN","SAMIUR",65,0)
 ; WSVAPALS^SAMIHOM4
"RTN","SAMIUR",66,0)
 ; WSREPORT^SAMIUR1
"RTN","SAMIUR",67,0)
 ;@calls
"RTN","SAMIUR",68,0)
 ; GETHOME^SAMIHOM3
"RTN","SAMIUR",69,0)
 ; getThis^%wd
"RTN","SAMIUR",70,0)
 ; SELECT
"RTN","SAMIUR",71,0)
 ; LOAD^SAMIFORM
"RTN","SAMIUR",72,0)
 ; $$PNAME
"RTN","SAMIUR",73,0)
 ; findReplace^%ts
"RTN","SAMIUR",74,0)
 ; RPTTBL^SAMIUR2
"RTN","SAMIUR",75,0)
 ; NUHREF
"RTN","SAMIUR",76,0)
 ; SORT
"RTN","SAMIUR",77,0)
 ; @RPT(ir,"routine"): [from report def table from RPTTBL^SAMIUR2]
"RTN","SAMIUR",78,0)
 ;  format = $$<tag>^SAMIUR2, where tag =
"RTN","SAMIUR",79,0)
 ;  AGE       BLINEDT   CONTACT   CTPROT   DOB      FUDATE    GENDER
"RTN","SAMIUR",80,0)
 ;  IFORM     LASTEXM   MANPAT    MATCH    NAME     PACKYRS   POSSIBLE
"RTN","SAMIUR",81,0)
 ;  RECOM     RURAL     SID       SMHIS    SMKSTAT  SSN       STUDYDT
"RTN","SAMIUR",82,0)
 ;  STUDYTYP  VALS      WHEN      WORKPAT
"RTN","SAMIUR",83,0)
 ;
"RTN","SAMIUR",84,0)
 ; here are the user reports that are defined:
"RTN","SAMIUR",85,0)
 ;  1. followup
"RTN","SAMIUR",86,0)
 ;  2. activity
"RTN","SAMIUR",87,0)
 ;  3. missingct
"RTN","SAMIUR",88,0)
 ;  4. incomplete
"RTN","SAMIUR",89,0)
 ;  5. outreach
"RTN","SAMIUR",90,0)
 ;  6. enrollment
"RTN","SAMIUR",91,0)
 ;  7. worklist
"RTN","SAMIUR",92,0)
 ; the report to generate is passed in parameter samireporttype
"RTN","SAMIUR",93,0)
 ;
"RTN","SAMIUR",94,0)
 new debug set debug=0
"RTN","SAMIUR",95,0)
 if $get(filter("debug"))=1 set debug=1
"RTN","SAMIUR",96,0)
 if $get(filter("debug"))=1 set debug=1
"RTN","SAMIUR",97,0)
 kill SAMIRTN
"RTN","SAMIUR",98,0)
 set HTTPRSP("mime")="text/html"
"RTN","SAMIUR",99,0)
 ;
"RTN","SAMIUR",100,0)
 new type,temp,site
"RTN","SAMIUR",101,0)
 s site=$g(filter("siteid"))
"RTN","SAMIUR",102,0)
 i site="" s site=$g(filter("site"))
"RTN","SAMIUR",103,0)
 i site="" d  q  ; report site missing
"RTN","SAMIUR",104,0)
 . d GETHOME^SAMIHOM3(.SAMIRTN,.filter) ; send them to home
"RTN","SAMIUR",105,0)
 ;
"RTN","SAMIUR",106,0)
 set type=$get(filter("samireporttype"))
"RTN","SAMIUR",107,0)
 if type="" do  quit  ; report type missing
"RTN","SAMIUR",108,0)
 . do GETHOME^SAMIHOM3(.SAMIRTN,.filter) ; send them to home
"RTN","SAMIUR",109,0)
 . quit
"RTN","SAMIUR",110,0)
 ;
"RTN","SAMIUR",111,0)
 if type="unmatched" i $$GET1PARM^SAMIPARM("matchingReportEnabled",site)'="true" do  quit  ;
"RTN","SAMIUR",112,0)
 . d GETHOME^SAMIHOM3(.SAMIRTN,.filter) ; send them to home
"RTN","SAMIUR",113,0)
 ;
"RTN","SAMIUR",114,0)
 do getThis^%wd("temp","table.html") ; page template
"RTN","SAMIUR",115,0)
 quit:'$data(temp)
"RTN","SAMIUR",116,0)
 ;
"RTN","SAMIUR",117,0)
 new SAMIPATS
"RTN","SAMIUR",118,0)
 ; set pats=""
"RTN","SAMIUR",119,0)
 new datephrase
"RTN","SAMIUR",120,0)
 do SELECT(.SAMIPATS,type,.datephrase,.filter) ; select pats for report
"RTN","SAMIUR",121,0)
 ; quit:'$data(SAMIPATS)
"RTN","SAMIUR",122,0)
 ;
"RTN","SAMIUR",123,0)
 new ln,cnt,ii
"RTN","SAMIUR",124,0)
 set (ii,ln,cnt)=0
"RTN","SAMIUR",125,0)
 for  do  quit:'ii  quit:$get(temp(ii))["<thead"
"RTN","SAMIUR",126,0)
 . set ii=$order(temp(ii))
"RTN","SAMIUR",127,0)
 . quit:'ii
"RTN","SAMIUR",128,0)
 . quit:$get(temp(ii))["<thead"
"RTN","SAMIUR",129,0)
 . ;
"RTN","SAMIUR",130,0)
 . set cnt=cnt+1
"RTN","SAMIUR",131,0)
 . set ln=$get(temp(ii))
"RTN","SAMIUR",132,0)
 . new samikey,si
"RTN","SAMIUR",133,0)
 . set (samikey,si)=""
"RTN","SAMIUR",134,0)
 . do LOAD^SAMIFORM(.ln,samikey,si,.filter)
"RTN","SAMIUR",135,0)
 . ; if ln["PAGE NAME" do
"RTN","SAMIUR",136,0)
 . ; . do findReplace^%ts(.ln,"PAGE NAME",$$PNAME(type,datephrase))
"RTN","SAMIUR",137,0)
 . ; . quit
"RTN","SAMIUR",138,0)
 . if ln["PAGE NAME" do
"RTN","SAMIUR",139,0)
 . . do findReplace^%ts(.ln,"PAGE NAME",$$PNAME(type,""))
"RTN","SAMIUR",140,0)
 . . quit
"RTN","SAMIUR",141,0)
 . if ln["CRITERIA" do
"RTN","SAMIUR",142,0)
 . . do findReplace^%ts(.ln,"CRITERIA",datephrase)
"RTN","SAMIUR",143,0)
 . . quit
"RTN","SAMIUR",144,0)
 . if ln["@@REPORTTYPE@@" do
"RTN","SAMIUR",145,0)
 . . do findReplace^%ts(.ln,"@@REPORTTYPE@@",type)
"RTN","SAMIUR",146,0)
 . . quit
"RTN","SAMIUR",147,0)
 . ;
"RTN","SAMIUR",148,0)
 . if ln["name=""start-date""" do
"RTN","SAMIUR",149,0)
 . . do findReplace^%ts(.ln,"start-date""","start-date"" value="""_$g(filter("start-date"))_"""")
"RTN","SAMIUR",150,0)
 . . quit
"RTN","SAMIUR",151,0)
 . if ln["name=""end-date""" do
"RTN","SAMIUR",152,0)
 . . do findReplace^%ts(.ln,"end-date""","end-date"" value="""_$g(filter("end-date"))_"""")
"RTN","SAMIUR",153,0)
 . . quit
"RTN","SAMIUR",154,0)
 . ;
"RTN","SAMIUR",155,0)
 . set SAMIRTN(cnt)=ln
"RTN","SAMIUR",156,0)
 . quit
"RTN","SAMIUR",157,0)
 ;
"RTN","SAMIUR",158,0)
 new RPT,ik
"RTN","SAMIUR",159,0)
 do RPTTBL^SAMIUR2(.RPT,type,site) ; load report definition table
"RTN","SAMIUR",160,0)
 if '$data(RPT) do  quit  ; don't know about this report
"RTN","SAMIUR",161,0)
 . do GETHOME^SAMIHOM3(.SAMIRTN,.filter) ; send them to home
"RTN","SAMIUR",162,0)
 . quit
"RTN","SAMIUR",163,0)
 ;
"RTN","SAMIUR",164,0)
 ; output header
"RTN","SAMIUR",165,0)
 ;
"RTN","SAMIUR",166,0)
 set cnt=cnt+1 set SAMIRTN(cnt)="<thead><tr>"
"RTN","SAMIUR",167,0)
 set cnt=cnt+1
"RTN","SAMIUR",168,0)
 new totcnt set totcnt=cnt
"RTN","SAMIUR",169,0)
 ;
"RTN","SAMIUR",170,0)
 set ir=""
"RTN","SAMIUR",171,0)
 for  do  quit:ir=""  ;
"RTN","SAMIUR",172,0)
 . set ir=$order(RPT(ir))
"RTN","SAMIUR",173,0)
 . quit:ir=""
"RTN","SAMIUR",174,0)
 . set cnt=cnt+1
"RTN","SAMIUR",175,0)
 . set SAMIRTN(cnt)="<th>"_$get(RPT(ir,"header"))_"</th>"
"RTN","SAMIUR",176,0)
 . quit
"RTN","SAMIUR",177,0)
 ;
"RTN","SAMIUR",178,0)
 set cnt=cnt+1 set SAMIRTN(cnt)="</tr></thead>"
"RTN","SAMIUR",179,0)
 ;
"RTN","SAMIUR",180,0)
 set cnt=cnt+1 set SAMIRTN(cnt)="<tbody>"
"RTN","SAMIUR",181,0)
 ;
"RTN","SAMIUR",182,0)
 if type'="worklist" do  ;
"RTN","SAMIUR",183,0)
 . do NUHREF(.SAMIPATS) ; create the nuhref link for all patients
"RTN","SAMIUR",184,0)
 . quit
"RTN","SAMIUR",185,0)
 ;
"RTN","SAMIUR",186,0)
 new SRT set SRT=""
"RTN","SAMIUR",187,0)
 if $get(filter("sort"))="" d  ; what kind of sort
"RTN","SAMIUR",188,0)
 . set filter("sort")="name"
"RTN","SAMIUR",189,0)
 . i type="missingct" s filter("sort")="cdate" ;sort by latest contact
"RTN","SAMIUR",190,0)
 do SORT(.SRT,.SAMIPATS,.filter)
"RTN","SAMIUR",191,0)
 ; zwrite SRT
"RTN","SAMIUR",192,0)
 ;
"RTN","SAMIUR",193,0)
 ; set ij=0
"RTN","SAMIUR",194,0)
 ; for  do  quit:'ij  ;
"RTN","SAMIUR",195,0)
 ; . set ij=$order(SAMIPATS(ij))
"RTN","SAMIUR",196,0)
 ; . quit:'ij  
"RTN","SAMIUR",197,0)
 ; . new ij2 set ij2=0
"RTN","SAMIUR",198,0)
 ; . for  do  quit:'ij2  ;
"RTN","SAMIUR",199,0)
 ; . . set ij2=$order(SAMIPATS(ij,ij2))
"RTN","SAMIUR",200,0)
 ; . . quit:'ij2  
"RTN","SAMIUR",201,0)
 ; . . new dfn set dfn=ij2
"RTN","SAMIUR",202,0)
 ; . . quit
"RTN","SAMIUR",203,0)
 ; . quit
"RTN","SAMIUR",204,0)
 ;
"RTN","SAMIUR",205,0)
 new iz,ij,ij2,dfn,rows
"RTN","SAMIUR",206,0)
 set rows=0
"RTN","SAMIUR",207,0)
 set (iz,ij,ij2,dfn)=""
"RTN","SAMIUR",208,0)
 for  do  quit:iz=""  ;
"RTN","SAMIUR",209,0)
 . set iz=$order(SRT(iz))
"RTN","SAMIUR",210,0)
 . quit:iz=""
"RTN","SAMIUR",211,0)
 . set ij=$order(SRT(iz,""))
"RTN","SAMIUR",212,0)
 . set dfn=$order(SRT(iz,ij,""))
"RTN","SAMIUR",213,0)
 . do  ;
"RTN","SAMIUR",214,0)
 . . set cnt=cnt+1 set SAMIRTN(cnt)="<tr>"
"RTN","SAMIUR",215,0)
 . . set ir=""
"RTN","SAMIUR",216,0)
 . . for  do  quit:ir=""  ;
"RTN","SAMIUR",217,0)
 . . . set ir=$order(RPT(ir))
"RTN","SAMIUR",218,0)
 . . . quit:ir=""
"RTN","SAMIUR",219,0)
 . . . set cnt=cnt+1
"RTN","SAMIUR",220,0)
 . . . new XR,XRV
"RTN","SAMIUR",221,0)
 . . . ; set XR=$get(RPT(ir,"routine"))_"("_ij_",.SAMIPATS)"
"RTN","SAMIUR",222,0)
 . . . set XR="set XRV="_$get(RPT(ir,"routine"))_"("_ij_","_dfn_",.SAMIPATS)"
"RTN","SAMIUR",223,0)
 . . . ; set XRV=@XR
"RTN","SAMIUR",224,0)
 . . . xecute XR ; call report-field handlers in ^SAMIUR2
"RTN","SAMIUR",225,0)
 . . . if $extract(XRV,1,3)["<td" set SAMIRTN(cnt)=XRV
"RTN","SAMIUR",226,0)
 . . . else  set SAMIRTN(cnt)="<td>"_$get(XRV)_"</td>"
"RTN","SAMIUR",227,0)
 . . . quit
"RTN","SAMIUR",228,0)
 . . ;
"RTN","SAMIUR",229,0)
 . . set cnt=cnt+1
"RTN","SAMIUR",230,0)
 . . set SAMIRTN(cnt)="</tr>"_$CHAR(10,13)
"RTN","SAMIUR",231,0)
 . . set rows=rows+1
"RTN","SAMIUR",232,0)
 . . quit
"RTN","SAMIUR",233,0)
 . quit
"RTN","SAMIUR",234,0)
 ;
"RTN","SAMIUR",235,0)
 set cnt=cnt+1
"RTN","SAMIUR",236,0)
 ;set SAMIRTN(cnt)="<tr><td>Total: "_rows_"</td></tr>"
"RTN","SAMIUR",237,0)
 ;set SAMIRTN(totcnt)="<td>Total: "_rows_"</td></tr><tr>"
"RTN","SAMIUR",238,0)
 ;
"RTN","SAMIUR",239,0)
 set cnt=cnt+1 set SAMIRTN(cnt)="</tbody>"
"RTN","SAMIUR",240,0)
 for  do  quit:temp(ii)["</tbody>"  ;
"RTN","SAMIUR",241,0)
 . set ii=$order(temp(ii))
"RTN","SAMIUR",242,0)
 . quit:temp(ii)["</tbody>"
"RTN","SAMIUR",243,0)
 . ; skip past template headers & blank body
"RTN","SAMIUR",244,0)
 . quit
"RTN","SAMIUR",245,0)
 ;
"RTN","SAMIUR",246,0)
 for  do  quit:'ii  ;
"RTN","SAMIUR",247,0)
 . set ii=$order(temp(ii))
"RTN","SAMIUR",248,0)
 . quit:'ii
"RTN","SAMIUR",249,0)
 . set cnt=cnt+1
"RTN","SAMIUR",250,0)
 . set ln=$get(temp(ii))
"RTN","SAMIUR",251,0)
 . new samikey,si
"RTN","SAMIUR",252,0)
 . set (samikey,si)=""
"RTN","SAMIUR",253,0)
 . do LOAD^SAMIFORM(.ln,samikey,si,.filter)
"RTN","SAMIUR",254,0)
 . set SAMIRTN(cnt)=ln
"RTN","SAMIUR",255,0)
 . quit
"RTN","SAMIUR",256,0)
 ;
"RTN","SAMIUR",257,0)
 quit  ; end of WSREPORT
"RTN","SAMIUR",258,0)
 ;
"RTN","SAMIUR",259,0)
 ;
"RTN","SAMIUR",260,0)
SORT(SRTN,SAMIPATS,FILTER) ; sort patients by name
"RTN","SAMIUR",261,0)
 ;
"RTN","SAMIUR",262,0)
 ;@called-by
"RTN","SAMIUR",263,0)
 ; WSREPORT
"RTN","SAMIUR",264,0)
 ;@calls
"RTN","SAMIUR",265,0)
 ; $$UPCASE^XLFMSMT
"RTN","SAMIUR",266,0)
 ;
"RTN","SAMIUR",267,0)
 new typ set typ=$get(FILTER("sort"))
"RTN","SAMIUR",268,0)
 ;
"RTN","SAMIUR",269,0)
 if typ="" set typ="name"
"RTN","SAMIUR",270,0)
 new iz,dt,dfn,nm,cdate
"RTN","SAMIUR",271,0)
 set (dt,dfn,nm)="" ; note: should dfn be initialized inside loop?
"RTN","SAMIUR",272,0)
 set iz=0
"RTN","SAMIUR",273,0)
 ;
"RTN","SAMIUR",274,0)
 new indx
"RTN","SAMIUR",275,0)
 for  do  quit:'dt  ;
"RTN","SAMIUR",276,0)
 . set dt=$order(SAMIPATS(dt))
"RTN","SAMIUR",277,0)
 . quit:'dt
"RTN","SAMIUR",278,0)
 . ; note: dfn not re-initialized to "" here; should it be?
"RTN","SAMIUR",279,0)
 . for  do  quit:'dfn  ;
"RTN","SAMIUR",280,0)
 . . set dfn=$order(SAMIPATS(dt,dfn))
"RTN","SAMIUR",281,0)
 . . quit:'dfn
"RTN","SAMIUR",282,0)
 . . if typ="name" do  ;
"RTN","SAMIUR",283,0)
 . . . set nm=$get(SAMIPATS(dt,dfn,"name"))
"RTN","SAMIUR",284,0)
 . . . set nm=$$UPCASE^XLFMSMT(nm)
"RTN","SAMIUR",285,0)
 . . . if nm="" set nm=" "
"RTN","SAMIUR",286,0)
 . . . set indx(nm,dt,dfn)=""
"RTN","SAMIUR",287,0)
 . . . quit
"RTN","SAMIUR",288,0)
 . . if typ="cdate" do  ;
"RTN","SAMIUR",289,0)
 . . . set cdate=$$LDOC^SAMIUR2(dt,dfn,.SAMIPATS)
"RTN","SAMIUR",290,0)
 . . . set cdate=$$FMDT^SAMIUR2(cdate)
"RTN","SAMIUR",291,0)
 . . . set indx(cdate,dt,dfn)=""
"RTN","SAMIUR",292,0)
 . . quit
"RTN","SAMIUR",293,0)
 . quit
"RTN","SAMIUR",294,0)
 ;
"RTN","SAMIUR",295,0)
 new iiz set iiz=""
"RTN","SAMIUR",296,0)
 set (dt,dfn)="" ; note: here, too, should inits be inside loops?
"RTN","SAMIUR",297,0)
 for  do  quit:iiz=""  ;
"RTN","SAMIUR",298,0)
 . set iiz=$order(indx(iiz))
"RTN","SAMIUR",299,0)
 . quit:iiz=""
"RTN","SAMIUR",300,0)
 . for  do  quit:dt=""  ;
"RTN","SAMIUR",301,0)
 . . set dt=$order(indx(iiz,dt))
"RTN","SAMIUR",302,0)
 . . quit:dt=""
"RTN","SAMIUR",303,0)
 . . for  do  quit:dfn=""  ;
"RTN","SAMIUR",304,0)
 . . . set dfn=$order(indx(iiz,dt,dfn))
"RTN","SAMIUR",305,0)
 . . . quit:dfn=""
"RTN","SAMIUR",306,0)
 . . . set iz=iz+1
"RTN","SAMIUR",307,0)
 . . . set SRTN(iz,dt,dfn)=iiz
"RTN","SAMIUR",308,0)
 . . . quit
"RTN","SAMIUR",309,0)
 . . quit
"RTN","SAMIUR",310,0)
 . quit
"RTN","SAMIUR",311,0)
 ;
"RTN","SAMIUR",312,0)
 quit  ; end of SORT
"RTN","SAMIUR",313,0)
 ;
"RTN","SAMIUR",314,0)
 ;
"RTN","SAMIUR",315,0)
 ;
"RTN","SAMIUR",316,0)
NUHREF(SAMIPATS) ; create nuhref link to casereview for all patients
"RTN","SAMIUR",317,0)
 ;
"RTN","SAMIUR",318,0)
 ;@called-by
"RTN","SAMIUR",319,0)
 ; WSREPORT
"RTN","SAMIUR",320,0)
 ;@calls
"RTN","SAMIUR",321,0)
 ; $$setroot^%wd
"RTN","SAMIUR",322,0)
 ; $$GETSSN^SAMIFORM
"RTN","SAMIUR",323,0)
 ;
"RTN","SAMIUR",324,0)
 new ij
"RTN","SAMIUR",325,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR",326,0)
 set ij=0
"RTN","SAMIUR",327,0)
 for  do  quit:'ij  ;
"RTN","SAMIUR",328,0)
 . set ij=$order(SAMIPATS(ij))
"RTN","SAMIUR",329,0)
 . quit:'ij
"RTN","SAMIUR",330,0)
 . new ij2 set ij2=0
"RTN","SAMIUR",331,0)
 . for  do  quit:'ij2  ;
"RTN","SAMIUR",332,0)
 . . set ij2=$order(SAMIPATS(ij,ij2))
"RTN","SAMIUR",333,0)
 . . quit:'ij2
"RTN","SAMIUR",334,0)
 . . ;
"RTN","SAMIUR",335,0)
 . . new dfn set dfn=ij2
"RTN","SAMIUR",336,0)
 . . set SAMIPATS(ij,dfn,"sid")=$get(@root@(dfn,"samistudyid"))
"RTN","SAMIUR",337,0)
 . . set SAMIPATS(ij,dfn,"name")=$get(@root@(dfn,"saminame"))
"RTN","SAMIUR",338,0)
 . . ;
"RTN","SAMIUR",339,0)
 . . new sid set sid=SAMIPATS(ij,dfn,"sid")
"RTN","SAMIUR",340,0)
 . . set SAMIPATS(ij,dfn,"ssn")=$$GETSSN^SAMIFORM(sid)
"RTN","SAMIUR",341,0)
 . . new name set name=SAMIPATS(ij,dfn,"name")
"RTN","SAMIUR",342,0)
 . . ;
"RTN","SAMIUR",343,0)
 . . new nuhref
"RTN","SAMIUR",344,0)
 . . set nuhref="<td data-order="""_name_""" data-search="""_name_""">"
"RTN","SAMIUR",345,0)
 . . set nuhref=nuhref_"<form method=POST action=""/vapals"">"
"RTN","SAMIUR",346,0)
 . . set nuhref=nuhref_"<input type=hidden name=""samiroute"" value=""casereview"">"
"RTN","SAMIUR",347,0)
 . . set nuhref=nuhref_"<input type=hidden name=""studyid"" value="_sid_">"
"RTN","SAMIUR",348,0)
 . . set nuhref=nuhref_"<input value="""_name_""" class=""btn btn-link"" role=""link"" type=""submit""></form>"
"RTN","SAMIUR",349,0)
 . . set nuhref=nuhref_"</td>"
"RTN","SAMIUR",350,0)
 . . set SAMIPATS(ij,dfn,"nuhref")=nuhref
"RTN","SAMIUR",351,0)
 . . quit
"RTN","SAMIUR",352,0)
 . quit
"RTN","SAMIUR",353,0)
 ;
"RTN","SAMIUR",354,0)
 quit  ; end of NUHREF
"RTN","SAMIUR",355,0)
 ;
"RTN","SAMIUR",356,0)
 ;
"RTN","SAMIUR",357,0)
 ;
"RTN","SAMIUR",358,0)
PNAME(type,phrase) ; page name for report
"RTN","SAMIUR",359,0)
 ;
"RTN","SAMIUR",360,0)
 ;@called-by
"RTN","SAMIUR",361,0)
 ; WSREPORT
"RTN","SAMIUR",362,0)
 ;@calls none
"RTN","SAMIUR",363,0)
 ;
"RTN","SAMIUR",364,0)
 ; extrinsic returns the PAGE NAME for the report
"RTN","SAMIUR",365,0)
 ;
"RTN","SAMIUR",366,0)
 ; if type="followup" quit "Followup next 30 days -"_$get(phrase)
"RTN","SAMIUR",367,0)
 if type="followup" quit "Followup "_$get(phrase)
"RTN","SAMIUR",368,0)
 ; if type="activity" quit "Activity last 30 days -"_$get(phrase)
"RTN","SAMIUR",369,0)
 if type="activity" quit "Activity "_$get(phrase)
"RTN","SAMIUR",370,0)
 if type="missingct" quit "Intake but no CT Evaluation"_$get(phrase)
"RTN","SAMIUR",371,0)
 if type="incomplete" quit "Incomplete Forms"_$get(phrase)
"RTN","SAMIUR",372,0)
 if type="outreach" quit "Outreach"_$get(phrase)
"RTN","SAMIUR",373,0)
 if type="enrollment" quit "Enrollment"_$get(phrase)
"RTN","SAMIUR",374,0)
 if type="inactive" quit "Inactive"_$get(phrase)
"RTN","SAMIUR",375,0)
 ;
"RTN","SAMIUR",376,0)
 quit "" ; end of $$PNAME
"RTN","SAMIUR",377,0)
 ;
"RTN","SAMIUR",378,0)
 ;
"RTN","SAMIUR",379,0)
 ;
"RTN","SAMIUR",380,0)
 ;@section 2 select subroutines
"RTN","SAMIUR",381,0)
 ;
"RTN","SAMIUR",382,0)
 ;
"RTN","SAMIUR",383,0)
 ;
"RTN","SAMIUR",384,0)
SELECT(SAMIPATS,ztype,datephrase,filter) ; select patients for report
"RTN","SAMIUR",385,0)
 ;
"RTN","SAMIUR",386,0)
 ;@called-by
"RTN","SAMIUR",387,0)
 ; WSREPORT
"RTN","SAMIUR",388,0)
 ;@calls
"RTN","SAMIUR",389,0)
 ; UNMAT
"RTN","SAMIUR",390,0)
 ; WKLIST
"RTN","SAMIUR",391,0)
 ; $$KEY2FM^SAMICASE
"RTN","SAMIUR",392,0)
 ; $$NOW^XLFDT
"RTN","SAMIUR",393,0)
 ; $$FMADD^XLFDT
"RTN","SAMIUR",394,0)
 ; $$VAPALSDT^SAMICASE
"RTN","SAMIUR",395,0)
 ; $$setroot^%wd
"RTN","SAMIUR",396,0)
 ; GETITEMS^SAMICASE
"RTN","SAMIUR",397,0)
 ;
"RTN","SAMIUR",398,0)
 ; merge ^gpl("select")=filter
"RTN","SAMIUR",399,0)
 new type set type=ztype
"RTN","SAMIUR",400,0)
 if type="unmatched" do  quit  ;
"RTN","SAMIUR",401,0)
 . do UNMAT(.SAMIPATS,ztype,.datephrase,.filter)
"RTN","SAMIUR",402,0)
 . quit
"RTN","SAMIUR",403,0)
 if type="worklist" do  quit  ;
"RTN","SAMIUR",404,0)
 . do WKLIST(.SAMIPATS,ztype,.datephrase,.filter)
"RTN","SAMIUR",405,0)
 . quit
"RTN","SAMIUR",406,0)
 if $get(type)="" set type="enrollment"
"RTN","SAMIUR",407,0)
 if type="cumpy" set type="enrollment"
"RTN","SAMIUR",408,0)
 new site set site=$get(filter("siteid"))
"RTN","SAMIUR",409,0)
 ;
"RTN","SAMIUR",410,0)
 new strdt,enddt,fmstrdt,fmenddt
"RTN","SAMIUR",411,0)
 set strdt=$get(filter("start-date"))
"RTN","SAMIUR",412,0)
 set fmstrdt=$$KEY2FM^SAMICASE(strdt)
"RTN","SAMIUR",413,0)
 if fmstrdt=-1 do  ;
"RTN","SAMIUR",414,0)
 . set fmstrdt=2000101
"RTN","SAMIUR",415,0)
 . if type="followup" set fmstrdt=$$NOW^XLFDT
"RTN","SAMIUR",416,0)
 . if type="activity" set fmstrdt=$$FMADD^XLFDT($$NOW^XLFDT,-31)
"RTN","SAMIUR",417,0)
 . quit
"RTN","SAMIUR",418,0)
 if strdt="" set filter("start-date")=$$VAPALSDT^SAMICASE(fmstrdt)
"RTN","SAMIUR",419,0)
 ;
"RTN","SAMIUR",420,0)
 set enddt=$get(filter("end-date"))
"RTN","SAMIUR",421,0)
 set fmenddt=$$KEY2FM^SAMICASE(enddt)
"RTN","SAMIUR",422,0)
 if fmenddt=-1 do  ;
"RTN","SAMIUR",423,0)
 . set fmenddt=$$NOW^XLFDT
"RTN","SAMIUR",424,0)
 . if type="followup" set fmenddt=$$FMADD^XLFDT($$NOW^XLFDT,31)
"RTN","SAMIUR",425,0)
 . quit
"RTN","SAMIUR",426,0)
 if enddt="" set filter("end-date")=$$VAPALSDT^SAMICASE(fmenddt)
"RTN","SAMIUR",427,0)
 ;
"RTN","SAMIUR",428,0)
 set datephrase=""
"RTN","SAMIUR",429,0)
 new zi set zi=0
"RTN","SAMIUR",430,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR",431,0)
 ;
"RTN","SAMIUR",432,0)
 for  do  quit:'zi  ;
"RTN","SAMIUR",433,0)
 . set zi=$order(@root@(zi))
"RTN","SAMIUR",434,0)
 . quit:'zi
"RTN","SAMIUR",435,0)
 . ;
"RTN","SAMIUR",436,0)
 . new sid set sid=$get(@root@(zi,"samistudyid"))
"RTN","SAMIUR",437,0)
 . quit:sid=""
"RTN","SAMIUR",438,0)
 . quit:$extract(sid,1,3)'=site
"RTN","SAMIUR",439,0)
 . ;
"RTN","SAMIUR",440,0)
 . new items set items=""
"RTN","SAMIUR",441,0)
 . do GETITEMS^SAMICASE("items",sid)
"RTN","SAMIUR",442,0)
 . quit:'$data(items)
"RTN","SAMIUR",443,0)
 . ;
"RTN","SAMIUR",444,0)
 . new efmdate,edate,siform,ceform,cefud,fmcefud,cedos,fmcedos
"RTN","SAMIUR",445,0)
 . set siform=$order(items("siform-"))
"RTN","SAMIUR",446,0)
 . new status set status=$get(@root@("graph",sid,siform,"sistatus"))
"RTN","SAMIUR",447,0)
 . if type="inactive",status="active" quit  ; for inactive report
"RTN","SAMIUR",448,0)
 . if type'="inactive",status'="active" quit  ; for other reports
"RTN","SAMIUR",449,0)
 . ;
"RTN","SAMIUR",450,0)
 . set ceform=$order(items("ceform-a"),-1)
"RTN","SAMIUR",451,0)
 . set (cefud,fmcefud,cedos,fmcedos)=""
"RTN","SAMIUR",452,0)
 . if ceform'="" do  ;
"RTN","SAMIUR",453,0)
 . . set cefud=$get(@root@("graph",sid,ceform,"cefud"))
"RTN","SAMIUR",454,0)
 . . if cefud'="" set fmcefud=$$KEY2FM^SAMICASE(cefud)
"RTN","SAMIUR",455,0)
 . . set cedos=$get(@root@("graph",sid,ceform,"cedos"))
"RTN","SAMIUR",456,0)
 . . if cedos'="" set fmcedos=$$KEY2FM^SAMICASE(cedos)
"RTN","SAMIUR",457,0)
 . . quit
"RTN","SAMIUR",458,0)
 . ;
"RTN","SAMIUR",459,0)
 . set edate=$get(@root@("graph",sid,siform,"sidc"))
"RTN","SAMIUR",460,0)
 . if edate="" set edate=$get(@root@("graph",sid,siform,"samicreatedate"))
"RTN","SAMIUR",461,0)
 . set efmdate=$$KEY2FM^SAMICASE(edate)
"RTN","SAMIUR",462,0)
 . set edate=$$VAPALSDT^SAMICASE(efmdate)
"RTN","SAMIUR",463,0)
 . ;
"RTN","SAMIUR",464,0)
 . ;
"RTN","SAMIUR",465,0)
 . if type="followup" do  ;
"RTN","SAMIUR",466,0)
 . . ; new nplus30 set nplus30=$$FMADD^XLFDT($$NOW^XLFDT,31)
"RTN","SAMIUR",467,0)
 . . if +fmcefud<fmstrdt quit  ; before start date
"RTN","SAMIUR",468,0)
 . . if +fmcefud<(fmenddt+1) do  ; before end date
"RTN","SAMIUR",469,0)
 . . . quit:ceform=""  ; no ct eval so no followup date
"RTN","SAMIUR",470,0)
 . . . set SAMIPATS(fmcefud,zi,"edate")=edate
"RTN","SAMIUR",471,0)
 . . . set SAMIPATS(fmcefud,zi)=""
"RTN","SAMIUR",472,0)
 . . . if ceform="" set cefud="baseline"
"RTN","SAMIUR",473,0)
 . . . set SAMIPATS(fmcefud,zi,"cefud")=cefud
"RTN","SAMIUR",474,0)
 . . . set SAMIPATS(fmcefud,zi,"cedos")=cedos
"RTN","SAMIUR",475,0)
 . . . set SAMIPATS(fmcefud,zi,"ceform")=ceform
"RTN","SAMIUR",476,0)
 . . . set SAMIPATS(fmcefud,zi,"ceform-vals")=$name(@root@("graph",sid,ceform))
"RTN","SAMIUR",477,0)
 . . . set SAMIPATS(fmcefud,zi,"siform")=siform
"RTN","SAMIUR",478,0)
 . . . set SAMIPATS(fmcefud,zi,"siform-vals")=$name(@root@("graph",sid,siform))
"RTN","SAMIUR",479,0)
 . . . merge SAMIPATS(fmcefud,zi,"items")=items
"RTN","SAMIUR",480,0)
 . . . quit
"RTN","SAMIUR",481,0)
 . . set datephrase=" before "_$$VAPALSDT^SAMICASE(fmenddt)
"RTN","SAMIUR",482,0)
 . . quit
"RTN","SAMIUR",483,0)
 . ;
"RTN","SAMIUR",484,0)
 . if type="activity" do  ;
"RTN","SAMIUR",485,0)
 . . ; new nminus30 set nminus30=$$FMADD^XLFDT($$NOW^XLFDT,-31)
"RTN","SAMIUR",486,0)
 . . new anyform set anyform=$order(items("sort",""),-1)
"RTN","SAMIUR",487,0)
 . . new fmanyform set fmanyform=$$KEY2FM^SAMICASE(anyform)
"RTN","SAMIUR",488,0)
 . . if fmanyform<fmstrdt quit  ; before the start date
"RTN","SAMIUR",489,0)
 . . ; if fmanyform<(fmenddt+1)!(efmdate>fmenddt) do  ; need any new form
"RTN","SAMIUR",490,0)
 . . if fmanyform<(fmenddt+1)  do  ;
"RTN","SAMIUR",491,0)
 . . . set SAMIPATS(efmdate,zi,"edate")=edate
"RTN","SAMIUR",492,0)
 . . . set SAMIPATS(efmdate,zi)=""
"RTN","SAMIUR",493,0)
 . . . if ceform="" set cefud="baseline"
"RTN","SAMIUR",494,0)
 . . . set SAMIPATS(efmdate,zi,"cefud")=cefud
"RTN","SAMIUR",495,0)
 . . . set SAMIPATS(efmdate,zi,"cedos")=cedos
"RTN","SAMIUR",496,0)
 . . . set SAMIPATS(efmdate,zi,"ceform")=ceform
"RTN","SAMIUR",497,0)
 . . . set SAMIPATS(efmdate,zi,"siform")=siform
"RTN","SAMIUR",498,0)
 . . . merge SAMIPATS(efmdate,zi,"items")=items
"RTN","SAMIUR",499,0)
 . . . quit
"RTN","SAMIUR",500,0)
 . . set datephrase=" after "_$$VAPALSDT^SAMICASE(fmstrdt)
"RTN","SAMIUR",501,0)
 . . quit
"RTN","SAMIUR",502,0)
 . ;
"RTN","SAMIUR",503,0)
 . ; date filter for all the rest of the reports
"RTN","SAMIUR",504,0)
 . ;
"RTN","SAMIUR",505,0)
 . quit:efmdate<fmstrdt  ; before the start date
"RTN","SAMIUR",506,0)
 . quit:efmdate>(fmenddt+1)  ; after the end date
"RTN","SAMIUR",507,0)
 . ;
"RTN","SAMIUR",508,0)
 . if type="incomplete" do  ;
"RTN","SAMIUR",509,0)
 . . new complete set complete=1
"RTN","SAMIUR",510,0)
 . . new zj set zj=""
"RTN","SAMIUR",511,0)
 . . new gr set gr=$name(@root@("graph",sid))
"RTN","SAMIUR",512,0)
 . . for  do  quit:zj=""  ;
"RTN","SAMIUR",513,0)
 . . . set zj=$order(@gr@(zj))
"RTN","SAMIUR",514,0)
 . . . quit:zj=""
"RTN","SAMIUR",515,0)
 . . . ;
"RTN","SAMIUR",516,0)
 . . . new stat set stat=$get(@gr@(zj,"samistatus"))="incomplete"
"RTN","SAMIUR",517,0)
 . . . if stat="" set stat="incomplete"
"RTN","SAMIUR",518,0)
 . . . if stat="incomplete" do  ;
"RTN","SAMIUR",519,0)
 . . . . set complete=0
"RTN","SAMIUR",520,0)
 . . . . set SAMIPATS(efmdate,zi,"iform")=$get(SAMIPATS(efmdate,zi,"iform"))_" "_zj
"RTN","SAMIUR",521,0)
 . . . . quit
"RTN","SAMIUR",522,0)
 . . . quit
"RTN","SAMIUR",523,0)
 . . ;
"RTN","SAMIUR",524,0)
 . . if complete=0 do  ; has incomplete form(s) 
"RTN","SAMIUR",525,0)
 . . . set SAMIPATS(efmdate,zi,"edate")=edate
"RTN","SAMIUR",526,0)
 . . . set SAMIPATS(efmdate,zi)=""
"RTN","SAMIUR",527,0)
 . . . if ceform="" set cefud="baseline"
"RTN","SAMIUR",528,0)
 . . . set SAMIPATS(efmdate,zi,"cefud")=cefud
"RTN","SAMIUR",529,0)
 . . . set SAMIPATS(efmdate,zi,"ceform")=ceform
"RTN","SAMIUR",530,0)
 . . . set SAMIPATS(efmdate,zi,"siform")=siform
"RTN","SAMIUR",531,0)
 . . . merge SAMIPATS(efmdate,zi,"items")=items
"RTN","SAMIUR",532,0)
 . . . quit
"RTN","SAMIUR",533,0)
 . . set datephrase=""
"RTN","SAMIUR",534,0)
 . . quit
"RTN","SAMIUR",535,0)
 . ;
"RTN","SAMIUR",536,0)
 . if type="missingct" do  ;
"RTN","SAMIUR",537,0)
 . . if ceform="" do  ; has incomplete form(s) 
"RTN","SAMIUR",538,0)
 . . . set SAMIPATS(efmdate,zi,"edate")=edate
"RTN","SAMIUR",539,0)
 . . . set SAMIPATS(efmdate,zi)=""
"RTN","SAMIUR",540,0)
 . . . if ceform="" set cefud="baseline"
"RTN","SAMIUR",541,0)
 . . . set SAMIPATS(efmdate,zi,"cefud")=cefud
"RTN","SAMIUR",542,0)
 . . . set SAMIPATS(efmdate,zi,"ceform")=ceform
"RTN","SAMIUR",543,0)
 . . . set SAMIPATS(efmdate,zi,"siform")=siform
"RTN","SAMIUR",544,0)
 . . . merge SAMIPATS(efmdate,zi,"items")=items
"RTN","SAMIUR",545,0)
 . . . quit
"RTN","SAMIUR",546,0)
 . . set datephrase=""
"RTN","SAMIUR",547,0)
 . . quit
"RTN","SAMIUR",548,0)
 . ;
"RTN","SAMIUR",549,0)
 . if type="outreach" do  ; no-op; hook for future development?
"RTN","SAMIUR",550,0)
 . . quit
"RTN","SAMIUR",551,0)
 . ;
"RTN","SAMIUR",552,0)
 . if type="enrollment" do  ;
"RTN","SAMIUR",553,0)
 . . set SAMIPATS(efmdate,zi,"edate")=edate
"RTN","SAMIUR",554,0)
 . . set SAMIPATS(efmdate,zi)=""
"RTN","SAMIUR",555,0)
 . . set SAMIPATS(efmdate,zi,"cefud")=cefud
"RTN","SAMIUR",556,0)
 . . set SAMIPATS(efmdate,zi,"ceform")=ceform
"RTN","SAMIUR",557,0)
 . . set SAMIPATS(efmdate,zi,"cedos")=cedos
"RTN","SAMIUR",558,0)
 . . set SAMIPATS(efmdate,zi,"siform")=siform
"RTN","SAMIUR",559,0)
 . . merge SAMIPATS(efmdate,zi,"items")=items
"RTN","SAMIUR",560,0)
 . . quit
"RTN","SAMIUR",561,0)
 . ;
"RTN","SAMIUR",562,0)
 . if type="inactive" do  ;
"RTN","SAMIUR",563,0)
 . . set SAMIPATS(efmdate,zi,"edate")=edate
"RTN","SAMIUR",564,0)
 . . set SAMIPATS(efmdate,zi)=""
"RTN","SAMIUR",565,0)
 . . set SAMIPATS(efmdate,zi,"cefud")=cefud
"RTN","SAMIUR",566,0)
 . . set SAMIPATS(efmdate,zi,"ceform")=ceform
"RTN","SAMIUR",567,0)
 . . set SAMIPATS(efmdate,zi,"cedos")=cedos
"RTN","SAMIUR",568,0)
 . . set SAMIPATS(efmdate,zi,"siform")=siform
"RTN","SAMIUR",569,0)
 . . merge SAMIPATS(efmdate,zi,"items")=items
"RTN","SAMIUR",570,0)
 . . quit
"RTN","SAMIUR",571,0)
 . ;
"RTN","SAMIUR",572,0)
 . set datephrase=" as of "_$$VAPALSDT^SAMICASE($$NOW^XLFDT)
"RTN","SAMIUR",573,0)
 . quit
"RTN","SAMIUR",574,0)
 ;
"RTN","SAMIUR",575,0)
 quit  ; end of SELECT
"RTN","SAMIUR",576,0)
 ;
"RTN","SAMIUR",577,0)
 ;
"RTN","SAMIUR",578,0)
 ;
"RTN","SAMIUR",579,0)
UNMAT(SAMIPATS,ztype,datephrase,filter) ; build unmatched persons list
"RTN","SAMIUR",580,0)
 ;
"RTN","SAMIUR",581,0)
 ;@called-by
"RTN","SAMIUR",582,0)
 ; SELECT
"RTN","SAMIUR",583,0)
 ;@calls
"RTN","SAMIUR",584,0)
 ; $$setroot^%wd
"RTN","SAMIUR",585,0)
 ;
"RTN","SAMIUR",586,0)
 set datephrase="Unmatched Persons"
"RTN","SAMIUR",587,0)
 new lroot set lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIUR",588,0)
 new dfn set dfn=9000000
"RTN","SAMIUR",589,0)
 for  do  quit:'dfn  ;
"RTN","SAMIUR",590,0)
 . set dfn=$order(@lroot@("dfn",dfn))
"RTN","SAMIUR",591,0)
 . quit:'dfn
"RTN","SAMIUR",592,0)
 . ;
"RTN","SAMIUR",593,0)
 . new ien set ien=$order(@lroot@("dfn",dfn,""))
"RTN","SAMIUR",594,0)
 . quit:ien=""
"RTN","SAMIUR",595,0)
 . n ordern
"RTN","SAMIUR",596,0)
 . s ordern=$g(@lroot@(ien,"ORMORCordernumber"))
"RTN","SAMIUR",597,0)
 . i ordern="" s ordern=$g(@lroot@(ien,"ORM",1,"ordernumber"))
"RTN","SAMIUR",598,0)
 . i ordern'="" q  ;
"RTN","SAMIUR",599,0)
 . i $g(@lroot@(ien,"siteid"))'[site q  ;
"RTN","SAMIUR",600,0)
 . ;quit:$get(@lroot@(ien,"remotedfn"))'=""  ;
"RTN","SAMIUR",601,0)
 . ;
"RTN","SAMIUR",602,0)
 . merge SAMIPATS(ien,dfn)=@lroot@(ien)
"RTN","SAMIUR",603,0)
 . ;
"RTN","SAMIUR",604,0)
 . new name set name=$get(SAMIPATS(ien,dfn,"saminame"))
"RTN","SAMIUR",605,0)
 . ; new name set name=$get(SAMIPATS(ien,dfn,"sinamef"))
"RTN","SAMIUR",606,0)
 . ; set name=name_","_SAMIPATS(ien,dfn,"sinamel")
"RTN","SAMIUR",607,0)
 . new nuhref set nuhref="<form method=POST action=""/vapals"">"
"RTN","SAMIUR",608,0)
 . set nuhref=nuhref_"<input type=hidden name=""samiroute"" value=""editperson"">"
"RTN","SAMIUR",609,0)
 . set nuhref=nuhref_"<input type=hidden name=""dfn"" value="_dfn_">"
"RTN","SAMIUR",610,0)
 . set nuhref=nuhref_"<input type=hidden name=""siteid"" value="_site_">"
"RTN","SAMIUR",611,0)
 . set nuhref=nuhref_"<input value="""_name_""" class=""btn btn-link"" role=""link"" type=""submit""></form>"
"RTN","SAMIUR",612,0)
 . set SAMIPATS(ien,dfn,"editref")=nuhref
"RTN","SAMIUR",613,0)
 . quit
"RTN","SAMIUR",614,0)
 ;
"RTN","SAMIUR",615,0)
 quit  ; end of UNMAT
"RTN","SAMIUR",616,0)
 ;
"RTN","SAMIUR",617,0)
 ;
"RTN","SAMIUR",618,0)
 ;
"RTN","SAMIUR",619,0)
WKLIST(SAMIPATS,ztype,datephrase,filter) ; build work list
"RTN","SAMIUR",620,0)
 ;
"RTN","SAMIUR",621,0)
 ;@called-by
"RTN","SAMIUR",622,0)
 ; SELECT
"RTN","SAMIUR",623,0)
 ;@calls
"RTN","SAMIUR",624,0)
 ; $$setroot^%wd
"RTN","SAMIUR",625,0)
 ;
"RTN","SAMIUR",626,0)
 ; add site
"RTN","SAMIUR",627,0)
 ; add compare to vapals-patients
"RTN","SAMIUR",628,0)
 ; add navigation to enrollment
"RTN","SAMIUR",629,0)
 ;
"RTN","SAMIUR",630,0)
 kill ^gpl("worklist")
"RTN","SAMIUR",631,0)
 merge ^gpl("worklist")=filter
"RTN","SAMIUR",632,0)
 new site
"RTN","SAMIUR",633,0)
 set site=$get(filter("siteid"))
"RTN","SAMIUR",634,0)
 quit:site=""
"RTN","SAMIUR",635,0)
 set datephrase="Work List"
"RTN","SAMIUR",636,0)
 new lroot set lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIUR",637,0)
 new proot set proot=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR",638,0)
 ;
"RTN","SAMIUR",639,0)
 new dfn set dfn=0
"RTN","SAMIUR",640,0)
 for  set dfn=$order(@lroot@("dfn",dfn)) quit:+dfn=0  do  ;
"RTN","SAMIUR",641,0)
 . quit:$order(@proot@("dfn",dfn,""))'=""
"RTN","SAMIUR",642,0)
 . new ien set ien=$order(@lroot@("dfn",dfn,""))
"RTN","SAMIUR",643,0)
 . quit:ien=""
"RTN","SAMIUR",644,0)
 . ;
"RTN","SAMIUR",645,0)
 . ; write !,"dfn= ",dfn
"RTN","SAMIUR",646,0)
 . ; zwrite @lroot@(ien,*)
"RTN","SAMIUR",647,0)
 . ;
"RTN","SAMIUR",648,0)
 . quit:$get(@lroot@(ien,"siteid"))'=site
"RTN","SAMIUR",649,0)
 . ;
"RTN","SAMIUR",650,0)
 . merge ^gpl("worklist","lroot",ien)=@lroot@(ien)
"RTN","SAMIUR",651,0)
 . merge SAMIPATS(ien,dfn)=@lroot@(ien)
"RTN","SAMIUR",652,0)
 . new name set name=$get(SAMIPATS(ien,dfn,"saminame"))
"RTN","SAMIUR",653,0)
 . ; new name set name=$get(SAMIPATS(ien,dfn,"sinamef"))
"RTN","SAMIUR",654,0)
 . ; set name=name_","_SAMIPATS(ien,dfn,"sinamel")
"RTN","SAMIUR",655,0)
 . new nuhref
"RTN","SAMIUR",656,0)
 . set nuhref="<td data-search="""_name_""" data-order="""_name_""">"
"RTN","SAMIUR",657,0)
 . set nuhref=nuhref_"<form method=POST action=""/vapals"">"
"RTN","SAMIUR",658,0)
 . set nuhref=nuhref_"<input type=hidden name=""samiroute"" value=""newcase"">"
"RTN","SAMIUR",659,0)
 . set nuhref=nuhref_"<input type=hidden name=""dfn"" value="_dfn_">"
"RTN","SAMIUR",660,0)
 . set nuhref=nuhref_"<input type=hidden name=""siteid"" value="_site_">"
"RTN","SAMIUR",661,0)
 . set nuhref=nuhref_"<input value="""_name_""" class=""btn btn-link"" role=""link"" type=""submit""></form>"
"RTN","SAMIUR",662,0)
 . set nuhref=nuhref_"</td>"
"RTN","SAMIUR",663,0)
 . set SAMIPATS(ien,dfn,"workref")=nuhref
"RTN","SAMIUR",664,0)
 . quit
"RTN","SAMIUR",665,0)
 ;
"RTN","SAMIUR",666,0)
 merge ^gpl("worklist","pats")=SAMIPATS
"RTN","SAMIUR",667,0)
 ;
"RTN","SAMIUR",668,0)
 quit  ; end of WKLIST
"RTN","SAMIUR",669,0)
 ;
"RTN","SAMIUR",670,0)
 ;
"RTN","SAMIUR",671,0)
 ;
"RTN","SAMIUR",672,0)
EOR ; end of SAMIUR
"RTN","SAMIUR1")
0^62^B58855507
"RTN","SAMIUR1",1,0)
SAMIUR1 ;ven/gpl - sami user reports ; 4/23/19 10:07am
"RTN","SAMIUR1",2,0)
 ;;18.0;SAM;;;Build 1
"RTN","SAMIUR1",3,0)
 ;
"RTN","SAMIUR1",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUR1",5,0)
 ;
"RTN","SAMIUR1",6,0)
 ; SAMIUR contains the routines to generate user reports
"RTN","SAMIUR1",7,0)
 ; It is currently untested & in progress.
"RTN","SAMIUR1",8,0)
 ;
"RTN","SAMIUR1",9,0)
 quit  ; no entry from top
"RTN","SAMIUR1",10,0)
 ;
"RTN","SAMIUR1",11,0)
WSREPORT(SAMIRTN,filter) ; generate a report based on parameters in the filter
"RTN","SAMIUR1",12,0)
 ;
"RTN","SAMIUR1",13,0)
 ; here are the user reports that are defined:
"RTN","SAMIUR1",14,0)
 ;  1. followup
"RTN","SAMIUR1",15,0)
 ;  2. activity
"RTN","SAMIUR1",16,0)
 ;  3. missingct
"RTN","SAMIUR1",17,0)
 ;  4. incomplete
"RTN","SAMIUR1",18,0)
 ;  5. outreach
"RTN","SAMIUR1",19,0)
 ;  6. enrollment
"RTN","SAMIUR1",20,0)
 ; the report to generate is passed in parameter samireporttype
"RTN","SAMIUR1",21,0)
 ;
"RTN","SAMIUR1",22,0)
 n type,temp
"RTN","SAMIUR1",23,0)
 s type=$g(filter("samireporttype"))
"RTN","SAMIUR1",24,0)
 i type="" d  q  ; report type missing
"RTN","SAMIUR1",25,0)
 . d GETHOME^SAMIHOM3(.SAMIRTN,.filter) ; send them to home
"RTN","SAMIUR1",26,0)
 ;
"RTN","SAMIUR1",27,0)
 n RPT2
"RTN","SAMIUR1",28,0)
 d RPTTBL^SAMIUR2(.RPT2,type)
"RTN","SAMIUR1",29,0)
 i $d(RPT2) d  q  ;
"RTN","SAMIUR1",30,0)
 . d WSREPORT^SAMIUR(.SAMIRTN,.filter)
"RTN","SAMIUR1",31,0)
 n debug s debug=0
"RTN","SAMIUR1",32,0)
 i $g(filter("debug"))=1 s debug=1
"RTN","SAMIUR1",33,0)
 i $g(filter("debug"))=1 s debug=1
"RTN","SAMIUR1",34,0)
 k return
"RTN","SAMIUR1",35,0)
 s HTTPRSP("mime")="text/html"
"RTN","SAMIUR1",36,0)
 ;
"RTN","SAMIUR1",37,0)
 d getThis^%wd("temp","table.html") ; page template
"RTN","SAMIUR1",38,0)
 q:'$d(temp)
"RTN","SAMIUR1",39,0)
 ;
"RTN","SAMIUR1",40,0)
 n pats
"RTN","SAMIUR1",41,0)
 s pats=""
"RTN","SAMIUR1",42,0)
 n datephrase
"RTN","SAMIUR1",43,0)
 d SELECT(.pats,type,.datephrase) ; select patients for the report
"RTN","SAMIUR1",44,0)
 q:'$d(pats)
"RTN","SAMIUR1",45,0)
 ;
"RTN","SAMIUR1",46,0)
 n ln,cnt,ii
"RTN","SAMIUR1",47,0)
 s (ii,ln,cnt)=0
"RTN","SAMIUR1",48,0)
 f  s ii=$o(temp(ii)) q:+ii=0  q:$g(temp(ii))["<thead"  d  ;
"RTN","SAMIUR1",49,0)
 . s cnt=cnt+1
"RTN","SAMIUR1",50,0)
 . s ln=$g(temp(ii))
"RTN","SAMIUR1",51,0)
 . n samikey,si
"RTN","SAMIUR1",52,0)
 . s (samikey,si)=""
"RTN","SAMIUR1",53,0)
 . d LOAD^SAMIFORM(.ln,samikey,si,.filter)
"RTN","SAMIUR1",54,0)
 . i ln["PAGE NAME" d findReplace^%ts(.ln,"PAGE NAME",$$PNAME(type,datephrase))
"RTN","SAMIUR1",55,0)
 . s SAMIRTN(cnt)=ln
"RTN","SAMIUR1",56,0)
 . ;
"RTN","SAMIUR1",57,0)
 s cnt=cnt+1 s SAMIRTN(cnt)="<thead><tr>"
"RTN","SAMIUR1",58,0)
 s cnt=cnt+1 s SAMIRTN(cnt)="<th>Enrollment Date</th>"
"RTN","SAMIUR1",59,0)
 s cnt=cnt+1 s SAMIRTN(cnt)="<th>Name</th>"
"RTN","SAMIUR1",60,0)
 s cnt=cnt+1 s SAMIRTN(cnt)="<th>SSN</th>"
"RTN","SAMIUR1",61,0)
 s cnt=cnt+1 s SAMIRTN(cnt)="<th>Followup</th>"
"RTN","SAMIUR1",62,0)
 s cnt=cnt+1 s SAMIRTN(cnt)="</tr></thead>"
"RTN","SAMIUR1",63,0)
 ;
"RTN","SAMIUR1",64,0)
 ;
"RTN","SAMIUR1",65,0)
 n ij
"RTN","SAMIUR1",66,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR1",67,0)
 s cnt=cnt+1 s SAMIRTN(cnt)="<tbody>"
"RTN","SAMIUR1",68,0)
 s ij=0
"RTN","SAMIUR1",69,0)
 f  s ij=$o(pats(ij)) q:+ij=0  d  ;
"RTN","SAMIUR1",70,0)
 . n ij2 s ij2=0
"RTN","SAMIUR1",71,0)
 . f  s ij2=$o(pats(ij,ij2)) q:+ij2=0  d  ;
"RTN","SAMIUR1",72,0)
 . . n dfn s dfn=ij2
"RTN","SAMIUR1",73,0)
 . . n sid s sid=$g(@root@(dfn,"samistudyid"))
"RTN","SAMIUR1",74,0)
 . . n name s name=$g(@root@(dfn,"saminame"))
"RTN","SAMIUR1",75,0)
 . . n edate s edate=$g(pats(ij,dfn,"edate"))
"RTN","SAMIUR1",76,0)
 . . n cefud s cefud=$g(pats(ij,dfn,"cefud"))
"RTN","SAMIUR1",77,0)
 . . s cnt=cnt+1 s SAMIRTN(cnt)="<tr>"
"RTN","SAMIUR1",78,0)
 . . s cnt=cnt+1 s SAMIRTN(cnt)="<td>"_edate_"</td>"
"RTN","SAMIUR1",79,0)
 . . new nuhref set nuhref="<form method=POST action=""/vapals"">"
"RTN","SAMIUR1",80,0)
 . . set nuhref=nuhref_"<input type=hidden name=""samiroute"" value=""casereview"">"
"RTN","SAMIUR1",81,0)
 . . set nuhref=nuhref_"<input type=hidden name=""studyid"" value="_sid_">"
"RTN","SAMIUR1",82,0)
 . . set nuhref=nuhref_"<input value="""_name_""" class=""btn btn-link"" role=""link"" type=""submit""></form>"
"RTN","SAMIUR1",83,0)
 . . s cnt=cnt+1
"RTN","SAMIUR1",84,0)
 . . s SAMIRTN(cnt)="<td>"_nuhref_"</td>"
"RTN","SAMIUR1",85,0)
 . . n ssn s ssn=$$GETSSN^SAMIFORM(sid)
"RTN","SAMIUR1",86,0)
 . . i ssn="" d  ;
"RTN","SAMIUR1",87,0)
 . . . n hdf
"RTN","SAMIUR1",88,0)
 . . . s hdf=$$GETHDR^SAMIFLD(sid)
"RTN","SAMIUR1",89,0)
 . . . s ssn=$$GETSSN^SAMIFORM(sid)
"RTN","SAMIUR1",90,0)
 . . s cnt=cnt+1
"RTN","SAMIUR1",91,0)
 . . s SAMIRTN(cnt)="<td>"_ssn_"</td>"
"RTN","SAMIUR1",92,0)
 . . s cnt=cnt+1
"RTN","SAMIUR1",93,0)
 . . s SAMIRTN(cnt)="<td>"_cefud_"</td></tr>"
"RTN","SAMIUR1",94,0)
 ;
"RTN","SAMIUR1",95,0)
 s cnt=cnt+1 s SAMIRTN(cnt)="</tbody>"
"RTN","SAMIUR1",96,0)
 f  s ii=$o(temp(ii)) q:temp(ii)["</tbody>"  d  ;
"RTN","SAMIUR1",97,0)
 . ; skip past template headers and blank body
"RTN","SAMIUR1",98,0)
 f  s ii=$o(temp(ii)) q:+ii=0  d  ;
"RTN","SAMIUR1",99,0)
 . s cnt=cnt+1
"RTN","SAMIUR1",100,0)
 . s ln=$g(temp(ii))
"RTN","SAMIUR1",101,0)
 . d LOAD^SAMIFORM(.ln,samikey,si,.filter)
"RTN","SAMIUR1",102,0)
 . s SAMIRTN(cnt)=ln
"RTN","SAMIUR1",103,0)
 q
"RTN","SAMIUR1",104,0)
 ;
"RTN","SAMIUR1",105,0)
SELECT(SAMIPATS,type,datephrase) ; selects patient for the report
"RTN","SAMIUR1",106,0)
 i $g(type)="" s type="enrollment"
"RTN","SAMIUR1",107,0)
 s datephrase=""
"RTN","SAMIUR1",108,0)
 n zi s zi=0
"RTN","SAMIUR1",109,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR1",110,0)
 ;
"RTN","SAMIUR1",111,0)
 f  s zi=$o(@root@(zi)) q:+zi=0  d  ;
"RTN","SAMIUR1",112,0)
 . n sid s sid=$g(@root@(zi,"samistudyid"))
"RTN","SAMIUR1",113,0)
 . q:sid=""
"RTN","SAMIUR1",114,0)
 . n items s items=""
"RTN","SAMIUR1",115,0)
 . d GETITEMS^SAMICASE("items",sid)
"RTN","SAMIUR1",116,0)
 . q:'$d(items)
"RTN","SAMIUR1",117,0)
 . n efmdate,edate,siform,ceform,cefud,fmcefud,cedos,fmcedos
"RTN","SAMIUR1",118,0)
 . s siform=$o(items("siform-"))
"RTN","SAMIUR1",119,0)
 . s ceform=$o(items("ceform-a"),-1)
"RTN","SAMIUR1",120,0)
 . s (cefud,fmcefud,cedos,fmcedos)=""
"RTN","SAMIUR1",121,0)
 . i ceform'="" d  ;
"RTN","SAMIUR1",122,0)
 . . s cefud=$g(@root@("graph",sid,ceform,"cefud"))
"RTN","SAMIUR1",123,0)
 . . i cefud'="" s fmcefud=$$KEY2FM^SAMICASE(cefud)
"RTN","SAMIUR1",124,0)
 . . s cedos=$g(@root@("graph",sid,ceform,"cedos"))
"RTN","SAMIUR1",125,0)
 . . i cedos'="" s fmcedos=$$KEY2FM^SAMICASE(cedos)
"RTN","SAMIUR1",126,0)
 . s edate=$g(@root@("graph",sid,siform,"sidc"))
"RTN","SAMIUR1",127,0)
 . i edate="" s edate=$g(@root@("graph",sid,siform,"samicreatedate"))
"RTN","SAMIUR1",128,0)
 . s efmdate=$$KEY2FM^SAMICASE(edate)
"RTN","SAMIUR1",129,0)
 . s edate=$$VAPALSDT^SAMICASE(efmdate)
"RTN","SAMIUR1",130,0)
 . ;
"RTN","SAMIUR1",131,0)
 . i type="followup" d  ;
"RTN","SAMIUR1",132,0)
 . . n nplus30 s nplus30=$$FMADD^XLFDT($$NOW^XLFDT,31)
"RTN","SAMIUR1",133,0)
 . . ;i (+fmcefud<nplus30)!(ceform="") d  ; need ct scans
"RTN","SAMIUR1",134,0)
 . . i (+fmcefud<nplus30) d  ; need ct scans
"RTN","SAMIUR1",135,0)
 . . . i ceform="" q  ; no ct eval so no followup date
"RTN","SAMIUR1",136,0)
 . . . s SAMIPATS(efmdate,zi,"edate")=edate
"RTN","SAMIUR1",137,0)
 . . . s SAMIPATS(efmdate,zi)=""
"RTN","SAMIUR1",138,0)
 . . . i ceform="" s cefud="baseline"
"RTN","SAMIUR1",139,0)
 . . . s SAMIPATS(efmdate,zi,"cefud")=cefud
"RTN","SAMIUR1",140,0)
 . . s datephrase=" before "_$$VAPALSDT^SAMICASE(nplus30)
"RTN","SAMIUR1",141,0)
 . . q
"RTN","SAMIUR1",142,0)
 . i type="activity" d  ;
"RTN","SAMIUR1",143,0)
 . . n nminus30 s nminus30=$$FMADD^XLFDT($$NOW^XLFDT,-31)
"RTN","SAMIUR1",144,0)
 . . n anyform s anyform=$o(items("sort",""),-1)
"RTN","SAMIUR1",145,0)
 . . n fmanyform s fmanyform=$$KEY2FM^SAMICASE(anyform)
"RTN","SAMIUR1",146,0)
 . . i (+fmanyform>nminus30)!(+efmdate>nminus30) d  ; need any new form
"RTN","SAMIUR1",147,0)
 . . . s SAMIPATS(efmdate,zi,"edate")=edate
"RTN","SAMIUR1",148,0)
 . . . s SAMIPATS(efmdate,zi)=""
"RTN","SAMIUR1",149,0)
 . . . i ceform="" s cefud="baseline"
"RTN","SAMIUR1",150,0)
 . . . s SAMIPATS(efmdate,zi,"cefud")=cefud
"RTN","SAMIUR1",151,0)
 . . s datephrase=" after "_$$VAPALSDT^SAMICASE(nminus30)
"RTN","SAMIUR1",152,0)
 . ;
"RTN","SAMIUR1",153,0)
 . i type="incomplete" d  ;
"RTN","SAMIUR1",154,0)
 . . n complete s complete=1
"RTN","SAMIUR1",155,0)
 . . n zj s zj=""
"RTN","SAMIUR1",156,0)
 . . n gr s gr=$na(@root@("graph",sid))
"RTN","SAMIUR1",157,0)
 . . f  s zj=$o(@gr@(zj)) q:zj=""  d  ;
"RTN","SAMIUR1",158,0)
 . . . i $g(@gr@(zj,"samistatus"))="incomplete" s complete=0
"RTN","SAMIUR1",159,0)
 . . i complete=0 d  ; has incomplete form(s) 
"RTN","SAMIUR1",160,0)
 . . . s SAMIPATS(efmdate,zi,"edate")=edate
"RTN","SAMIUR1",161,0)
 . . . s SAMIPATS(efmdate,zi)=""
"RTN","SAMIUR1",162,0)
 . . . i ceform="" s cefud="baseline"
"RTN","SAMIUR1",163,0)
 . . . s SAMIPATS(efmdate,zi,"cefud")=cefud
"RTN","SAMIUR1",164,0)
 . . s datephrase=""
"RTN","SAMIUR1",165,0)
 . . q
"RTN","SAMIUR1",166,0)
 . i type="missingct" d  ;
"RTN","SAMIUR1",167,0)
 . . i ceform="" d  ; has incomplete form(s) 
"RTN","SAMIUR1",168,0)
 . . . s SAMIPATS(efmdate,zi,"edate")=edate
"RTN","SAMIUR1",169,0)
 . . . s SAMIPATS(efmdate,zi)=""
"RTN","SAMIUR1",170,0)
 . . . i ceform="" s cefud="baseline"
"RTN","SAMIUR1",171,0)
 . . . s SAMIPATS(efmdate,zi,"cefud")=cefud
"RTN","SAMIUR1",172,0)
 . . s datephrase=""
"RTN","SAMIUR1",173,0)
 . . q
"RTN","SAMIUR1",174,0)
 . i type="outreach" d  ;
"RTN","SAMIUR1",175,0)
 . . q
"RTN","SAMIUR1",176,0)
 . i type="enrollment" d  ;
"RTN","SAMIUR1",177,0)
 . . s SAMIPATS(efmdate,zi,"edate")=edate
"RTN","SAMIUR1",178,0)
 . . s SAMIPATS(efmdate,zi)=""
"RTN","SAMIUR1",179,0)
 . . s SAMIPATS(efmdate,zi,"cefud")=cefud
"RTN","SAMIUR1",180,0)
 . . s datephrase=" as of "_$$VAPALSDT^SAMICASE($$NOW^XLFDT)
"RTN","SAMIUR1",181,0)
 q
"RTN","SAMIUR1",182,0)
 ;
"RTN","SAMIUR1",183,0)
PNAME(type,phrase) ; extrinsic returns the PAGE NAME for the report
"RTN","SAMIUR1",184,0)
 i type="followup" q "Followup next 30 days -"_$g(phrase)
"RTN","SAMIUR1",185,0)
 i type="activity" q "Activity last 30 days -"_$g(phrase)
"RTN","SAMIUR1",186,0)
 i type="missingct" q "Intake but no CT Evaluation"_$g(phrase)
"RTN","SAMIUR1",187,0)
 i type="incomplete" q "Incomplete Forms"_$g(phrase)
"RTN","SAMIUR1",188,0)
 i type="outreach" q "Outreach"_$g(phrase)
"RTN","SAMIUR1",189,0)
 i type="enrollment" q "Enrollment"_$g(phrase)
"RTN","SAMIUR1",190,0)
 q ""
"RTN","SAMIUR1",191,0)
 ;
"RTN","SAMIUR2")
0^63^B1265246653
"RTN","SAMIUR2",1,0)
SAMIUR2 ;ven/gpl - user reports cont ;2021-08-11t21:53z
"RTN","SAMIUR2",2,0)
 ;;18.0;SAMI;**5,11,12**;2020-01;Build 1
"RTN","SAMIUR2",3,0)
 ;;18.12
"RTN","SAMIUR2",4,0)
 ;
"RTN","SAMIUR2",5,0)
 ; SAMIUR2 contains subroutines for creating & implementing the
"RTN","SAMIUR2",6,0)
 ; report-definition table.
"RTN","SAMIUR2",7,0)
 ;
"RTN","SAMIUR2",8,0)
 quit  ; no entry from top
"RTN","SAMIUR2",9,0)
 ;
"RTN","SAMIUR2",10,0)
 ;
"RTN","SAMIUR2",11,0)
 ;
"RTN","SAMIUR2",12,0)
 ;@section 0 primary development
"RTN","SAMIUR2",13,0)
 ;
"RTN","SAMIUR2",14,0)
 ;
"RTN","SAMIUR2",15,0)
 ;
"RTN","SAMIUR2",16,0)
 ;@routine-credits
"RTN","SAMIUR2",17,0)
 ;@dev-main George P. Lilly (gpl)
"RTN","SAMIUR2",18,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIUR2",19,0)
 ;@dev-org-main Vista Expertise Network (ven)
"RTN","SAMIUR2",20,0)
 ; http://vistaexpertise.net
"RTN","SAMIUR2",21,0)
 ;@copyright 2017/2021, gpl, all rights reserved
"RTN","SAMIUR2",22,0)
 ;@license see routine SAMIUL
"RTN","SAMIUR2",23,0)
 ;
"RTN","SAMIUR2",24,0)
 ;@last-update 2021-08-11t21:53z
"RTN","SAMIUR2",25,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMIUR2",26,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMIUR2",27,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMIUR2",28,0)
 ;@version 18.12
"RTN","SAMIUR2",29,0)
 ;@release-date 2020-01
"RTN","SAMIUR2",30,0)
 ;@patch-list **5,11,12**
"RTN","SAMIUR2",31,0)
 ;
"RTN","SAMIUR2",32,0)
 ;@dev-add Frederick D. S. Marshall (toad)
"RTN","SAMIUR2",33,0)
 ; toad@vistaexpertise.net
"RTN","SAMIUR2",34,0)
 ;@dev-add Larry G. Carlson (lgc)
"RTN","SAMIUR2",35,0)
 ; larry.g.carlson@gmail.com
"RTN","SAMIUR2",36,0)
 ;@dev-add Alexis R. Carlson (arc)
"RTN","SAMIUR2",37,0)
 ; whatisthehumanspirit@gmail.com
"RTN","SAMIUR2",38,0)
 ;@dev-add Kenneth McGlothlen (mcglk)
"RTN","SAMIUR2",39,0)
 ; mcglk@vistaexpertise.net
"RTN","SAMIUR2",40,0)
 ;
"RTN","SAMIUR2",41,0)
 ;@module-credits see SAMIHUL
"RTN","SAMIUR2",42,0)
 ;
"RTN","SAMIUR2",43,0)
 ;@module-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMIUR2",44,0)
 ; see SAMIURUL
"RTN","SAMIUR2",45,0)
 ;
"RTN","SAMIUR2",46,0)
 ;@contents
"RTN","SAMIUR2",47,0)
 ; RPTTBL build report-definition table
"RTN","SAMIUR2",48,0)
 ;
"RTN","SAMIUR2",49,0)
 ; $$DFN2SID study id for patient DFN
"RTN","SAMIUR2",50,0)
 ; $$MKNAV html for navigation to form
"RTN","SAMIUR2",51,0)
 ;
"RTN","SAMIUR2",52,0)
 ; $$SHDET table contents for smoking history
"RTN","SAMIUR2",53,0)
 ; CUMPY forms array of cummulative pack year data
"RTN","SAMIUR2",54,0)
 ; $$TDDT embed date in table cell
"RTN","SAMIUR2",55,0)
 ; $$FMDT convert date to fileman format
"RTN","SAMIUR2",56,0)
 ; $$PKYDT pack-years from start & end & cigs/day
"RTN","SAMIUR2",57,0)
 ; $$PKY pack-years from years & packs/day
"RTN","SAMIUR2",58,0)
 ;
"RTN","SAMIUR2",59,0)
 ; $$AGE age
"RTN","SAMIUR2",60,0)
 ; $$BLINEDT baseline date
"RTN","SAMIUR2",61,0)
 ; $$CONTACT patient street address
"RTN","SAMIUR2",62,0)
 ; $$CTPROT ct protocol
"RTN","SAMIUR2",63,0)
 ; $$DOB date of birth
"RTN","SAMIUR2",64,0)
 ; $$FUDATE followup date
"RTN","SAMIUR2",65,0)
 ; $$GENDER gender
"RTN","SAMIUR2",66,0)
 ; $$IFORM name(s) of incomplete forms
"RTN","SAMIUR2",67,0)
 ; $$LASTEXM patient last exam
"RTN","SAMIUR2",68,0)
 ; $$MANPAT unmatched patient cell
"RTN","SAMIUR2",69,0)
 ; $$MATCH match button cell
"RTN","SAMIUR2",70,0)
 ; $$NAME name w/hyperlink
"RTN","SAMIUR2",71,0)
 ; $$PACKYRS smoking status
"RTN","SAMIUR2",72,0)
 ; $$POSSIBLE possible match cell
"RTN","SAMIUR2",73,0)
 ; $$RECOM recommendation
"RTN","SAMIUR2",74,0)
 ; $$RURAL patient's rural/urban status
"RTN","SAMIUR2",75,0)
 ; $$SID study id
"RTN","SAMIUR2",76,0)
 ; $$SMHIS smoking history cell
"RTN","SAMIUR2",77,0)
 ; $$SMKSTAT smoking status
"RTN","SAMIUR2",78,0)
 ; $$SSN social security number
"RTN","SAMIUR2",79,0)
 ; $$STUDYDT latest study date
"RTN","SAMIUR2",80,0)
 ; $$STUDYTYP latest study type
"RTN","SAMIUR2",81,0)
 ; $$VALS form-values cell
"RTN","SAMIUR2",82,0)
 ; $$WHEN followup text
"RTN","SAMIUR2",83,0)
 ; $$WORKPAT worklist patient name cell
"RTN","SAMIUR2",84,0)
 ;
"RTN","SAMIUR2",85,0)
 ; EPAT patient name w/nav to enrollment
"RTN","SAMIUR2",86,0)
 ; ETHNCTY ethnicity
"RTN","SAMIUR2",87,0)
 ; RACE race
"RTN","SAMIUR2",88,0)
 ; STATUS patient status
"RTN","SAMIUR2",89,0)
 ; WSVALS display form values from graph
"RTN","SAMIUR2",90,0)
 ;
"RTN","SAMIUR2",91,0)
 ;
"RTN","SAMIUR2",92,0)
 ;
"RTN","SAMIUR2",93,0)
 ;@section 1 ppi RPTTBL^SAMIUR2
"RTN","SAMIUR2",94,0)
 ;
"RTN","SAMIUR2",95,0)
 ;
"RTN","SAMIUR2",96,0)
 ;
"RTN","SAMIUR2",97,0)
RPTTBL(RPT,TYPE,SITE) ; RPT is passed by reference and returns the 
"RTN","SAMIUR2",98,0)
 ; report definition table. TYPE is the report type to be returned
"RTN","SAMIUR2",99,0)
 ; This routine could use a file or a graph in the next version
"RTN","SAMIUR2",100,0)
 ;
"RTN","SAMIUR2",101,0)
 ;;private;procedure;clean;silent;sac
"RTN","SAMIUR2",102,0)
 ;@called-by
"RTN","SAMIUR2",103,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",104,0)
 ; WSREPORT^SAMIUR1 (which then calls WSREPORT^SAMIUR)
"RTN","SAMIUR2",105,0)
 ;@calls none (defines calls for WSREPORT^SAMIUR to call)
"RTN","SAMIUR2",106,0)
 ;@input
"RTN","SAMIUR2",107,0)
 ; TYPE = report type to return
"RTN","SAMIUR2",108,0)
 ;@output
"RTN","SAMIUR2",109,0)
 ; .RPT report-definition table
"RTN","SAMIUR2",110,0)
 ;
"RTN","SAMIUR2",111,0)
 ; This routine could use a file or a graph in the next version
"RTN","SAMIUR2",112,0)
 ;
"RTN","SAMIUR2",113,0)
 if TYPE="followup" do  quit  ;
"RTN","SAMIUR2",114,0)
 . set RPT(1,"header")="F/U Date"
"RTN","SAMIUR2",115,0)
 . set RPT(1,"routine")="$$FUDATE^SAMIUR2"
"RTN","SAMIUR2",116,0)
 . set RPT(2,"header")="Name"
"RTN","SAMIUR2",117,0)
 . set RPT(2,"routine")="$$NAME^SAMIUR2"
"RTN","SAMIUR2",118,0)
 . ;set RPT(3,"header")="SSN"
"RTN","SAMIUR2",119,0)
 . set RPT(3,"header")=$$SSNLABEL(SITE)
"RTN","SAMIUR2",120,0)
 . set RPT(3,"routine")="$$SSN^SAMIUR2"
"RTN","SAMIUR2",121,0)
 . set RPT(4,"header")="Baseline Date"
"RTN","SAMIUR2",122,0)
 . set RPT(4,"routine")="$$BLINEDT^SAMIUR2"
"RTN","SAMIUR2",123,0)
 . set RPT(6,"header")="Recommend"
"RTN","SAMIUR2",124,0)
 . set RPT(6,"routine")="$$RECOM^SAMIUR2"
"RTN","SAMIUR2",125,0)
 . set RPT(7,"header")="When"
"RTN","SAMIUR2",126,0)
 . set RPT(7,"routine")="$$WHEN^SAMIUR2"
"RTN","SAMIUR2",127,0)
 . set RPT(5,"header")="Last Exam"
"RTN","SAMIUR2",128,0)
 . set RPT(5,"routine")="$$LASTEXM^SAMIUR2"
"RTN","SAMIUR2",129,0)
 . set RPT(8,"header")="Contact Information"
"RTN","SAMIUR2",130,0)
 . set RPT(8,"routine")="$$CONTACT^SAMIUR2"
"RTN","SAMIUR2",131,0)
 . quit
"RTN","SAMIUR2",132,0)
 ;
"RTN","SAMIUR2",133,0)
 if TYPE="activity" do  quit  ;
"RTN","SAMIUR2",134,0)
 . set RPT(1,"header")="Name"
"RTN","SAMIUR2",135,0)
 . set RPT(1,"routine")="$$NAME^SAMIUR2"
"RTN","SAMIUR2",136,0)
 . set RPT(2,"header")=$$SSNLABEL(SITE)
"RTN","SAMIUR2",137,0)
 . set RPT(2,"routine")="$$SSN^SAMIUR2"
"RTN","SAMIUR2",138,0)
 . set RPT(3,"header")="CT Date"
"RTN","SAMIUR2",139,0)
 . set RPT(3,"routine")="$$STUDYDT^SAMIUR2"
"RTN","SAMIUR2",140,0)
 . set RPT(4,"header")="Type"
"RTN","SAMIUR2",141,0)
 . set RPT(4,"routine")="$$STUDYTYP^SAMIUR2"
"RTN","SAMIUR2",142,0)
 . set RPT(5,"header")="CT Protocol"
"RTN","SAMIUR2",143,0)
 . set RPT(5,"routine")="$$CTPROT^SAMIUR2"
"RTN","SAMIUR2",144,0)
 . set RPT(6,"header")="Follow-up"
"RTN","SAMIUR2",145,0)
 . set RPT(6,"routine")="$$RECOM^SAMIUR2"
"RTN","SAMIUR2",146,0)
 . set RPT(7,"header")="When"
"RTN","SAMIUR2",147,0)
 . set RPT(7,"routine")="$$WHEN^SAMIUR2"
"RTN","SAMIUR2",148,0)
 . set RPT(8,"header")="on Date"
"RTN","SAMIUR2",149,0)
 . set RPT(8,"routine")="$$FUDATE^SAMIUR2"
"RTN","SAMIUR2",150,0)
 . quit
"RTN","SAMIUR2",151,0)
 ;
"RTN","SAMIUR2",152,0)
 if TYPE="enrollment" do  quit  ;
"RTN","SAMIUR2",153,0)
 . set RPT(1,"header")="Name"
"RTN","SAMIUR2",154,0)
 . set RPT(1,"routine")="$$NAME^SAMIUR2"
"RTN","SAMIUR2",155,0)
 . set RPT(2,"header")=$$SSNLABEL(SITE)
"RTN","SAMIUR2",156,0)
 . set RPT(2,"routine")="$$SSN^SAMIUR2"
"RTN","SAMIUR2",157,0)
 . set RPT(3,"header")="CT Date"
"RTN","SAMIUR2",158,0)
 . set RPT(3,"routine")="$$STUDYDT^SAMIUR2"
"RTN","SAMIUR2",159,0)
 . set RPT(4,"header")="Gender"
"RTN","SAMIUR2",160,0)
 . set RPT(4,"routine")="$$GENDER^SAMIUR2"
"RTN","SAMIUR2",161,0)
 . ; set RPT(5,"header")="Race"
"RTN","SAMIUR2",162,0)
 . ; set RPT(5,"routine")="$$RACE^SAMIUR2"
"RTN","SAMIUR2",163,0)
 . set RPT(6,"header")="Age"
"RTN","SAMIUR2",164,0)
 . set RPT(6,"routine")="$$AGE^SAMIUR2"
"RTN","SAMIUR2",165,0)
 . set RPT(7,"header")="Urban/Rural"
"RTN","SAMIUR2",166,0)
 . set RPT(7,"routine")="$$RURAL^SAMIUR2"
"RTN","SAMIUR2",167,0)
 . set RPT(8,"header")="Smoking Status"
"RTN","SAMIUR2",168,0)
 . set RPT(8,"routine")="$$SMKSTAT^SAMIUR2"
"RTN","SAMIUR2",169,0)
 . set RPT(9,"header")="Pack Years at Intake"
"RTN","SAMIUR2",170,0)
 . set RPT(9,"routine")="$$PACKYRS^SAMIUR2"
"RTN","SAMIUR2",171,0)
 . quit
"RTN","SAMIUR2",172,0)
 ;
"RTN","SAMIUR2",173,0)
 if TYPE="inactive" do  quit  ;
"RTN","SAMIUR2",174,0)
 . set RPT(1,"header")="Name"
"RTN","SAMIUR2",175,0)
 . set RPT(1,"routine")="$$NAME^SAMIUR2"
"RTN","SAMIUR2",176,0)
 . set RPT(2,"header")=$$SSNLABEL(SITE)
"RTN","SAMIUR2",177,0)
 . set RPT(2,"routine")="$$SSN^SAMIUR2"
"RTN","SAMIUR2",178,0)
 . set RPT(3,"header")="Enrollment date"
"RTN","SAMIUR2",179,0)
 . set RPT(3,"routine")="$$BLINEDT^SAMIUR2"
"RTN","SAMIUR2",180,0)
 . ;set RPT(3,"header")="CT Date"
"RTN","SAMIUR2",181,0)
 . ;set RPT(3,"routine")="$$STUDYDT^SAMIUR2"
"RTN","SAMIUR2",182,0)
 . ;set RPT(4,"header")="Gender"
"RTN","SAMIUR2",183,0)
 . ;set RPT(4,"routine")="$$GENDER^SAMIUR2"
"RTN","SAMIUR2",184,0)
 . ; set RPT(5,"header")="Race"
"RTN","SAMIUR2",185,0)
 . ; set RPT(5,"routine")="$$RACE^SAMIUR2"
"RTN","SAMIUR2",186,0)
 . ;set RPT(6,"header")="Age"
"RTN","SAMIUR2",187,0)
 . ;set RPT(6,"routine")="$$AGE^SAMIUR2"
"RTN","SAMIUR2",188,0)
 . set RPT(4,"header")="Date of Death"
"RTN","SAMIUR2",189,0)
 . set RPT(4,"routine")="$$INACTDT^SAMIUR2"
"RTN","SAMIUR2",190,0)
 . set RPT(5,"header")="Inactive Reason"
"RTN","SAMIUR2",191,0)
 . set RPT(5,"routine")="$$INACTRE^SAMIUR2"
"RTN","SAMIUR2",192,0)
 . set RPT(6,"header")="Inactive Comment"
"RTN","SAMIUR2",193,0)
 . set RPT(6,"routine")="$$INACTCM^SAMIUR2"
"RTN","SAMIUR2",194,0)
 . ;set RPT(7,"header")="Urban/Rural"
"RTN","SAMIUR2",195,0)
 . ;set RPT(7,"routine")="$$RURAL^SAMIUR2"
"RTN","SAMIUR2",196,0)
 . ;set RPT(8,"header")="Smoking Status"
"RTN","SAMIUR2",197,0)
 . ;set RPT(8,"routine")="$$SMKSTAT^SAMIUR2"
"RTN","SAMIUR2",198,0)
 . ;set RPT(9,"header")="Pack Years at Intake"
"RTN","SAMIUR2",199,0)
 . ;set RPT(9,"routine")="$$PACKYRS^SAMIUR2"
"RTN","SAMIUR2",200,0)
 . quit
"RTN","SAMIUR2",201,0)
 ;
"RTN","SAMIUR2",202,0)
 if TYPE="incomplete" do  quit  ;
"RTN","SAMIUR2",203,0)
 . set RPT(1,"header")="Enrollment date"
"RTN","SAMIUR2",204,0)
 . set RPT(1,"routine")="$$BLINEDT^SAMIUR2"
"RTN","SAMIUR2",205,0)
 . set RPT(2,"header")="Name"
"RTN","SAMIUR2",206,0)
 . set RPT(2,"routine")="$$NAME^SAMIUR2"
"RTN","SAMIUR2",207,0)
 . set RPT(3,"header")=$$SSNLABEL(SITE)
"RTN","SAMIUR2",208,0)
 . set RPT(3,"routine")="$$SSN^SAMIUR2"
"RTN","SAMIUR2",209,0)
 . set RPT(4,"header")="Incomplete form"
"RTN","SAMIUR2",210,0)
 . set RPT(4,"routine")="$$IFORM^SAMIUR2"
"RTN","SAMIUR2",211,0)
 . quit
"RTN","SAMIUR2",212,0)
 ;
"RTN","SAMIUR2",213,0)
 if TYPE="missingct" do  quit  ;
"RTN","SAMIUR2",214,0)
 . set RPT(1,"header")="Last contact date"
"RTN","SAMIUR2",215,0)
 . set RPT(1,"routine")="$$LDOC^SAMIUR2"
"RTN","SAMIUR2",216,0)
 . set RPT(2,"header")="Last contact entry"
"RTN","SAMIUR2",217,0)
 . set RPT(2,"routine")="$$LENTRY^SAMIUR2"
"RTN","SAMIUR2",218,0)
 . set RPT(3,"header")="Name"
"RTN","SAMIUR2",219,0)
 . set RPT(3,"routine")="$$NAME^SAMIUR2"
"RTN","SAMIUR2",220,0)
 . set RPT(4,"header")=$$SSNLABEL(SITE)
"RTN","SAMIUR2",221,0)
 . set RPT(4,"routine")="$$SSN^SAMIUR2"
"RTN","SAMIUR2",222,0)
 . set RPT(5,"header")="Enrollment date"
"RTN","SAMIUR2",223,0)
 . set RPT(5,"routine")="$$BLINEDT^SAMIUR2"
"RTN","SAMIUR2",224,0)
 . quit
"RTN","SAMIUR2",225,0)
 ;
"RTN","SAMIUR2",226,0)
 if TYPE="cumpy" do  quit  ;
"RTN","SAMIUR2",227,0)
 . set RPT(1,"header")="Name"
"RTN","SAMIUR2",228,0)
 . set RPT(1,"routine")="$$NAME^SAMIUR2"
"RTN","SAMIUR2",229,0)
 . set RPT(2,"header")="Study ID"
"RTN","SAMIUR2",230,0)
 . set RPT(2,"routine")="$$SID^SAMIUR2"
"RTN","SAMIUR2",231,0)
 . set RPT(3,"header")="Form Values"
"RTN","SAMIUR2",232,0)
 . set RPT(3,"routine")="$$VALS^SAMIUR2"
"RTN","SAMIUR2",233,0)
 . set RPT(4,"header")="Smoking History"
"RTN","SAMIUR2",234,0)
 . set RPT(4,"routine")="$$SMHIS^SAMIUR2"
"RTN","SAMIUR2",235,0)
 . quit
"RTN","SAMIUR2",236,0)
 ;
"RTN","SAMIUR2",237,0)
 if TYPE="unmatched" do  ;
"RTN","SAMIUR2",238,0)
 . set RPT(1,"header")="Unmatched Manual Entry"
"RTN","SAMIUR2",239,0)
 . set RPT(1,"routine")="$$MANPAT^SAMIUR2"
"RTN","SAMIUR2",240,0)
 . set RPT(2,"header")="Possible HL7 Match"
"RTN","SAMIUR2",241,0)
 . set RPT(2,"routine")="$$POSSIBLE^SAMIUR2"
"RTN","SAMIUR2",242,0)
 . set RPT(3,"header")="Match Control"
"RTN","SAMIUR2",243,0)
 . set RPT(3,"routine")="$$MATCH^SAMIUR2"
"RTN","SAMIUR2",244,0)
 . quit
"RTN","SAMIUR2",245,0)
 ;
"RTN","SAMIUR2",246,0)
 if TYPE="worklist" do  quit  ;
"RTN","SAMIUR2",247,0)
 . set RPT(1,"header")="Name"
"RTN","SAMIUR2",248,0)
 . set RPT(1,"routine")="$$WORKPAT^SAMIUR2"
"RTN","SAMIUR2",249,0)
 . set RPT(2,"header")=$$SSNLABEL(SITE)
"RTN","SAMIUR2",250,0)
 . set RPT(2,"routine")="$$SSN^SAMIUR2"
"RTN","SAMIUR2",251,0)
 . set RPT(3,"header")="Date of birth"
"RTN","SAMIUR2",252,0)
 . set RPT(3,"routine")="$$DOB^SAMIUR2"
"RTN","SAMIUR2",253,0)
 . set RPT(4,"header")="Gender"
"RTN","SAMIUR2",254,0)
 . set RPT(4,"routine")="$$GENDER^SAMIUR2"
"RTN","SAMIUR2",255,0)
 . quit
"RTN","SAMIUR2",256,0)
 ;
"RTN","SAMIUR2",257,0)
 quit  ; end of ppi RPTTBL^SAMIUR2
"RTN","SAMIUR2",258,0)
 ;
"RTN","SAMIUR2",259,0)
 ;
"RTN","SAMIUR2",260,0)
 ;
"RTN","SAMIUR2",261,0)
 ;@section 2 shared subroutines
"RTN","SAMIUR2",262,0)
 ;
"RTN","SAMIUR2",263,0)
 ;
"RTN","SAMIUR2",264,0)
 ;
"RTN","SAMIUR2",265,0)
DFN2SID(DFN) ;studyid for patient DFN
"RTN","SAMIUR2",266,0)
 ;
"RTN","SAMIUR2",267,0)
 ;;private;function;clean;silent;sac
"RTN","SAMIUR2",268,0)
 ;@called-by
"RTN","SAMIUR2",269,0)
 ; $$SID^SAMIUR2
"RTN","SAMIUR2",270,0)
 ; $$IFORM^SAMIUR2
"RTN","SAMIUR2",271,0)
 ; $$VALS^SAMIUR2
"RTN","SAMIUR2",272,0)
 ; $$SMHIS^SAMIUR2
"RTN","SAMIUR2",273,0)
 ;@calls
"RTN","SAMIUR2",274,0)
 ; $$setroot^%wd
"RTN","SAMIUR2",275,0)
 ;
"RTN","SAMIUR2",276,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",277,0)
 ;
"RTN","SAMIUR2",278,0)
 quit $get(@root@(DFN,"sisid")) ; end of $$DFN2SID
"RTN","SAMIUR2",279,0)
 ;
"RTN","SAMIUR2",280,0)
 ;
"RTN","SAMIUR2",281,0)
 ;
"RTN","SAMIUR2",282,0)
MKNAV(sid,zform,fname,form) ; html for navigation to form
"RTN","SAMIUR2",283,0)
 ;
"RTN","SAMIUR2",284,0)
 ;;private;function;clean;silent;sac
"RTN","SAMIUR2",285,0)
 ;@called-by
"RTN","SAMIUR2",286,0)
 ; $$IFORM^SAMIUR2
"RTN","SAMIUR2",287,0)
 ;@calls none
"RTN","SAMIUR2",288,0)
 ;
"RTN","SAMIUR2",289,0)
 new rtn set rtn="<form method=""post"" action=""/vapals"">"
"RTN","SAMIUR2",290,0)
 set rtn=rtn_"<input name=""samiroute"" value=""form"" type=""hidden"">"
"RTN","SAMIUR2",291,0)
 set rtn=rtn_" <input name=""studyid"" value="""_sid_""" type=""hidden"">"
"RTN","SAMIUR2",292,0)
 set rtn=rtn_" <input name=""form"" value=""vapals:"_zform_""" type=""hidden"">"
"RTN","SAMIUR2",293,0)
 set rtn=rtn_" <input value="""_fname_""" class=""btn btn-link"" role=""link"" type=""submit""></form>"_$char(13)
"RTN","SAMIUR2",294,0)
 ;
"RTN","SAMIUR2",295,0)
 quit rtn ; end of $$MKNAV
"RTN","SAMIUR2",296,0)
 ;
"RTN","SAMIUR2",297,0)
 ;
"RTN","SAMIUR2",298,0)
 ;
"RTN","SAMIUR2",299,0)
 ;@section 3 smoking history subroutines
"RTN","SAMIUR2",300,0)
 ;
"RTN","SAMIUR2",301,0)
 ;
"RTN","SAMIUR2",302,0)
 ;
"RTN","SAMIUR2",303,0)
SHDET(SID,KEY) ; table contents for smoking history
"RTN","SAMIUR2",304,0)
 ;
"RTN","SAMIUR2",305,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",306,0)
 ;@called-by
"RTN","SAMIUR2",307,0)
 ; LOAD^SAMIFLD
"RTN","SAMIUR2",308,0)
 ; $$SMHIS^SAMIUR2
"RTN","SAMIUR2",309,0)
 ;@calls
"RTN","SAMIUR2",310,0)
 ; CUMPY
"RTN","SAMIUR2",311,0)
 ;
"RTN","SAMIUR2",312,0)
 ; KEY is the form key of the caller for "current" marker insertion
"RTN","SAMIUR2",313,0)
 ;
"RTN","SAMIUR2",314,0)
 new pyary
"RTN","SAMIUR2",315,0)
 if $get(KEY)="" set KEY=""
"RTN","SAMIUR2",316,0)
 do CUMPY("pyary",SID,KEY)
"RTN","SAMIUR2",317,0)
 ;
"RTN","SAMIUR2",318,0)
 new current set current=$get(pyary("current"))
"RTN","SAMIUR2",319,0)
 new rptcnt set rptcnt=0
"RTN","SAMIUR2",320,0)
 new rptmax set rptmax=$order(pyary("rpt",""),-1)
"RTN","SAMIUR2",321,0)
 quit:+rptmax=0
"RTN","SAMIUR2",322,0)
 ;
"RTN","SAMIUR2",323,0)
 new return set return=""
"RTN","SAMIUR2",324,0)
 new zi set zi=""
"RTN","SAMIUR2",325,0)
 for zi=1:1:rptmax do  ;
"RTN","SAMIUR2",326,0)
 . set rptcnt=rptcnt+1
"RTN","SAMIUR2",327,0)
 . if rptcnt=current set return=return_"<tr data-current-form=""true"">"
"RTN","SAMIUR2",328,0)
 . else  set return=return_"<tr>"
"RTN","SAMIUR2",329,0)
 . set return=return_"<td>"_pyary("rpt",rptcnt,1)_"</td>"
"RTN","SAMIUR2",330,0)
 . set return=return_"<td class=""reported-date"">"_pyary("rpt",rptcnt,2)_"</td>"
"RTN","SAMIUR2",331,0)
 . set return=return_"<td class=""pack-years"">"_pyary("rpt",rptcnt,3)_"</td>"
"RTN","SAMIUR2",332,0)
 . set return=return_"<td class=""cumulative-pack-years"">"_pyary("rpt",rptcnt,4)_"</td>"
"RTN","SAMIUR2",333,0)
 . set return=return_"</tr>"
"RTN","SAMIUR2",334,0)
 . quit
"RTN","SAMIUR2",335,0)
 ;
"RTN","SAMIUR2",336,0)
 quit return ; end of ppi $$SHDET^SAMIUR2
"RTN","SAMIUR2",337,0)
 ;
"RTN","SAMIUR2",338,0)
 ;
"RTN","SAMIUR2",339,0)
 ;
"RTN","SAMIUR2",340,0)
CUMPY(PYARY,sid,KEY) ; forms array of cummulative pack year data
"RTN","SAMIUR2",341,0)
 ;
"RTN","SAMIUR2",342,0)
 ;;ppi;procedure;clean;silent;sac
"RTN","SAMIUR2",343,0)
 ;@called-by
"RTN","SAMIUR2",344,0)
 ; SSTATUS^SAMINOT2
"RTN","SAMIUR2",345,0)
 ; SSTATUS^SAMINOT3
"RTN","SAMIUR2",346,0)
 ; $$SHDET
"RTN","SAMIUR2",347,0)
 ;@calls
"RTN","SAMIUR2",348,0)
 ; $$setroot^%wd
"RTN","SAMIUR2",349,0)
 ; GETITEMS^SAMICASE
"RTN","SAMIUR2",350,0)
 ; $$GETDTKEY^SAMICAS2
"RTN","SAMIUR2",351,0)
 ; $$KEY2DSPD^SAMICAS2
"RTN","SAMIUR2",352,0)
 ; $$FMDT
"RTN","SAMIUR2",353,0)
 ; $$PKYDT
"RTN","SAMIUR2",354,0)
 ;
"RTN","SAMIUR2",355,0)
 ; PYARY passed by name
"RTN","SAMIUR2",356,0)
 ; KEY is the current form key for matching to a row
"RTN","SAMIUR2",357,0)
 ;
"RTN","SAMIUR2",358,0)
 kill @PYARY
"RTN","SAMIUR2",359,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",360,0)
 ; new sid set sid=$get(@root@(DFN,"samistudyid"))
"RTN","SAMIUR2",361,0)
 ; quit:sid=""
"RTN","SAMIUR2",362,0)
 ;
"RTN","SAMIUR2",363,0)
 new items set items=""
"RTN","SAMIUR2",364,0)
 do GETITEMS^SAMICASE("items",sid)
"RTN","SAMIUR2",365,0)
 quit:'$data(items)
"RTN","SAMIUR2",366,0)
 merge @PYARY@("items")=items
"RTN","SAMIUR2",367,0)
 ;
"RTN","SAMIUR2",368,0)
 new siform set siform=$order(items("siform"))
"RTN","SAMIUR2",369,0)
 quit:siform=""
"RTN","SAMIUR2",370,0)
 if siform=$get(KEY) set @PYARY@("current")=1 ;this row is the current form
"RTN","SAMIUR2",371,0)
 ;
"RTN","SAMIUR2",372,0)
 set @PYARY@("rpt",1,1)="Intake" ; Form
"RTN","SAMIUR2",373,0)
 new kdate set kdate=$$GETDTKEY^SAMICAS2(siform)
"RTN","SAMIUR2",374,0)
 new keydate set keydate=$$KEY2DSPD^SAMICAS2(kdate)
"RTN","SAMIUR2",375,0)
 set @PYARY@("rpt",1,2)=keydate ; Reported Date
"RTN","SAMIUR2",376,0)
 ;
"RTN","SAMIUR2",377,0)
 new vals set vals=$name(@root@("graph",sid,siform))
"RTN","SAMIUR2",378,0)
 new lastcum set lastcum=$get(@vals@("sippy"))
"RTN","SAMIUR2",379,0)
 set @PYARY@("rpt",1,3)=lastcum ; Pack Years
"RTN","SAMIUR2",380,0)
 set @PYARY@("rpt",1,4)=lastcum ; Cumulative
"RTN","SAMIUR2",381,0)
 ;
"RTN","SAMIUR2",382,0)
 new lastdt set lastdt=keydate
"RTN","SAMIUR2",383,0)
 new rptcnt set rptcnt=1
"RTN","SAMIUR2",384,0)
 new zi set zi=""
"RTN","SAMIUR2",385,0)
 for  do  quit:zi=""  ;
"RTN","SAMIUR2",386,0)
 . set zi=$order(items("type","vapals:fuform",zi))
"RTN","SAMIUR2",387,0)
 . quit:zi=""
"RTN","SAMIUR2",388,0)
 . ;
"RTN","SAMIUR2",389,0)
 . set rptcnt=rptcnt+1
"RTN","SAMIUR2",390,0)
 . set @PYARY@("rpt",rptcnt,1)="Follow-up"
"RTN","SAMIUR2",391,0)
 . new kdate set kdate=$$GETDTKEY^SAMICAS2(zi)
"RTN","SAMIUR2",392,0)
 . new keydate set keydate=$$KEY2DSPD^SAMICAS2(kdate)
"RTN","SAMIUR2",393,0)
 . set @PYARY@("rpt",rptcnt,2)=keydate ; Reported Date
"RTN","SAMIUR2",394,0)
 . ;
"RTN","SAMIUR2",395,0)
 . set vals=$name(@root@("graph",sid,zi))
"RTN","SAMIUR2",396,0)
 . new newpd set newpd=$g(@vals@("sippd"))
"RTN","SAMIUR2",397,0)
 . new usedate set usedate=keydate
"RTN","SAMIUR2",398,0)
 . new siq set siq=$get(@vals@("siq")) ; quit date on followup form
"RTN","SAMIUR2",399,0)
 . if siq'="" do  ; quit date provided
"RTN","SAMIUR2",400,0)
 . . quit:$$FMDT(siq)<$$FMDT(lastdt)  ; quit date out of range
"RTN","SAMIUR2",401,0)
 . . quit:$$FMDT(siq)>$$FMDT(keydate)  ; quit date out of range
"RTN","SAMIUR2",402,0)
 . . set usedate=siq ; use the quit date as end of range
"RTN","SAMIUR2",403,0)
 . . quit
"RTN","SAMIUR2",404,0)
 . new newpy set newpy=$$PKYDT(lastdt,usedate,newpd)
"RTN","SAMIUR2",405,0)
 . set @vals@("sippy")=newpy
"RTN","SAMIUR2",406,0)
 . ;
"RTN","SAMIUR2",407,0)
 . set ^gpl("current","KEY")=$get(KEY)
"RTN","SAMIUR2",408,0)
 . set ^gpl("current","zi")=zi
"RTN","SAMIUR2",409,0)
 . if zi=$get(KEY) do
"RTN","SAMIUR2",410,0)
 . . set @PYARY@("current")=rptcnt ;this row is the current form
"RTN","SAMIUR2",411,0)
 . . quit
"RTN","SAMIUR2",412,0)
 . ;
"RTN","SAMIUR2",413,0)
 . new newcum set newcum=""
"RTN","SAMIUR2",414,0)
 . if newpy'="" set newcum=lastcum+newpy
"RTN","SAMIUR2",415,0)
 . set @PYARY@("rpt",rptcnt,3)=newpy ; Pack Years
"RTN","SAMIUR2",416,0)
 . set @PYARY@("rpt",rptcnt,4)=newcum ; Cumulative
"RTN","SAMIUR2",417,0)
 . set lastdt=keydate
"RTN","SAMIUR2",418,0)
 . set lastcum=newcum
"RTN","SAMIUR2",419,0)
 . quit
"RTN","SAMIUR2",420,0)
 ;
"RTN","SAMIUR2",421,0)
 quit  ; end of ppi CUMPY^SAMIUR2
"RTN","SAMIUR2",422,0)
 ;
"RTN","SAMIUR2",423,0)
 ;
"RTN","SAMIUR2",424,0)
 ;
"RTN","SAMIUR2",425,0)
TDDT(ZDT) ; embed date in table cell
"RTN","SAMIUR2",426,0)
 ;
"RTN","SAMIUR2",427,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",428,0)
 ;@called-by
"RTN","SAMIUR2",429,0)
 ; BLINEDT
"RTN","SAMIUR2",430,0)
 ; DOB
"RTN","SAMIUR2",431,0)
 ; FUDATE
"RTN","SAMIUR2",432,0)
 ; LASTEXM
"RTN","SAMIUR2",433,0)
 ; INACTDT
"RTN","SAMIUR2",434,0)
 ; LDOC
"RTN","SAMIUR2",435,0)
 ; STUDYDT
"RTN","SAMIUR2",436,0)
 ;@calls
"RTN","SAMIUR2",437,0)
 ; ^%DT
"RTN","SAMIUR2",438,0)
 ;
"RTN","SAMIUR2",439,0)
 new X,Y
"RTN","SAMIUR2",440,0)
 set X=ZDT
"RTN","SAMIUR2",441,0)
 do ^%DT
"RTN","SAMIUR2",442,0)
 if Y=-1 set Y=""
"RTN","SAMIUR2",443,0)
 new cell
"RTN","SAMIUR2",444,0)
 set cell="<td data-order="""_Y_""" data-search="""_ZDT_""">"_ZDT_"</td>"
"RTN","SAMIUR2",445,0)
 ;
"RTN","SAMIUR2",446,0)
 quit cell ; end of $$TDDT
"RTN","SAMIUR2",447,0)
 ; 
"RTN","SAMIUR2",448,0)
 ;
"RTN","SAMIUR2",449,0)
 ;
"RTN","SAMIUR2",450,0)
FMDT(ZDT) ; convert date to fileman format
"RTN","SAMIUR2",451,0)
 ;
"RTN","SAMIUR2",452,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",453,0)
 ;@called-by
"RTN","SAMIUR2",454,0)
 ; MKPTLK^SAMIHOM4
"RTN","SAMIUR2",455,0)
 ; $$PKYDT
"RTN","SAMIUR2",456,0)
 ; CUMPY
"RTN","SAMIUR2",457,0)
 ;@calls
"RTN","SAMIUR2",458,0)
 ; ^%DT
"RTN","SAMIUR2",459,0)
 ;
"RTN","SAMIUR2",460,0)
 new Y
"RTN","SAMIUR2",461,0)
 new X set X=ZDT
"RTN","SAMIUR2",462,0)
 do ^%DT
"RTN","SAMIUR2",463,0)
 ;
"RTN","SAMIUR2",464,0)
 quit Y ; end of ppi $$FMDT^SAMIUR2
"RTN","SAMIUR2",465,0)
 ;
"RTN","SAMIUR2",466,0)
 ;
"RTN","SAMIUR2",467,0)
 ;
"RTN","SAMIUR2",468,0)
PKYDT(STDT,ENDT,PKS,CIGS) ; pack-years from start & end & cigs/day
"RTN","SAMIUR2",469,0)
 ;
"RTN","SAMIUR2",470,0)
 ;;private;function;clean;silent;sac
"RTN","SAMIUR2",471,0)
 ;@called-by
"RTN","SAMIUR2",472,0)
 ; CUMPY
"RTN","SAMIUR2",473,0)
 ;@calls
"RTN","SAMIUR2",474,0)
 ; $$FMDT
"RTN","SAMIUR2",475,0)
 ; $$FMDIFF^XLFDT
"RTN","SAMIUR2",476,0)
 ; $$PKY
"RTN","SAMIUR2",477,0)
 ;
"RTN","SAMIUR2",478,0)
 ; if PKS is not provided, 20/CIGS will be used for packs per day
"RTN","SAMIUR2",479,0)
 ;
"RTN","SAMIUR2",480,0)
 new pkyr set pkyr=""
"RTN","SAMIUR2",481,0)
 if $get(PKS)="" do  ;
"RTN","SAMIUR2",482,0)
 . if $get(CIGS)="" set PKS=0 quit  ;
"RTN","SAMIUR2",483,0)
 . set PKS=20/CIGS
"RTN","SAMIUR2",484,0)
 . quit
"RTN","SAMIUR2",485,0)
 new zst set zst=$$FMDT(STDT)
"RTN","SAMIUR2",486,0)
 set:zst=-1 zst=STDT
"RTN","SAMIUR2",487,0)
 ;
"RTN","SAMIUR2",488,0)
 new zend set zend=$$FMDT(ENDT)
"RTN","SAMIUR2",489,0)
 set:zend=-1 zend=ENDT ; probably a fileman date already
"RTN","SAMIUR2",490,0)
 ;
"RTN","SAMIUR2",491,0)
 new zdif set zdif=$$FMDIFF^XLFDT(zend,zst)/365.24
"RTN","SAMIUR2",492,0)
 ;
"RTN","SAMIUR2",493,0)
 set pkyr=$$PKY(zdif,PKS)
"RTN","SAMIUR2",494,0)
 ;
"RTN","SAMIUR2",495,0)
 quit pkyr ; end of $$PKYDT
"RTN","SAMIUR2",496,0)
 ;
"RTN","SAMIUR2",497,0)
 ;
"RTN","SAMIUR2",498,0)
 ;
"RTN","SAMIUR2",499,0)
PKY(YRS,PKS) ; pack-years from years & packs/day
"RTN","SAMIUR2",500,0)
 ;
"RTN","SAMIUR2",501,0)
 ;;private;function;clean;silent;sac
"RTN","SAMIUR2",502,0)
 ;@called-by
"RTN","SAMIUR2",503,0)
 ; $$PKYDT
"RTN","SAMIUR2",504,0)
 ;@calls none
"RTN","SAMIUR2",505,0)
 ;@input
"RTN","SAMIUR2",506,0)
 ; YRS = years
"RTN","SAMIUR2",507,0)
 ; PKS = packs/day
"RTN","SAMIUR2",508,0)
 ;
"RTN","SAMIUR2",509,0)
 new rtn set rtn=""
"RTN","SAMIUR2",510,0)
 set rtn=YRS*PKS
"RTN","SAMIUR2",511,0)
 if $length($piece(rtn,".",2))>2 do  ;
"RTN","SAMIUR2",512,0)
 . new zdec set zdec=$piece(rtn,".",2)
"RTN","SAMIUR2",513,0)
 . set rtn=$piece(rtn,".",1)_"."_$extract(zdec,1,2)
"RTN","SAMIUR2",514,0)
 . if $extract(zdec,3)>4 set rtn=rtn+.01
"RTN","SAMIUR2",515,0)
 . quit
"RTN","SAMIUR2",516,0)
 set:rtn'["." rtn=rtn_".0"
"RTN","SAMIUR2",517,0)
 ;
"RTN","SAMIUR2",518,0)
 quit rtn ; end of $$PKY
"RTN","SAMIUR2",519,0)
 ;
"RTN","SAMIUR2",520,0)
 ;
"RTN","SAMIUR2",521,0)
 ;
"RTN","SAMIUR2",522,0)
 ;@section 4 active column ppis
"RTN","SAMIUR2",523,0)
 ;
"RTN","SAMIUR2",524,0)
 ;
"RTN","SAMIUR2",525,0)
 ;
"RTN","SAMIUR2",526,0)
AGE(zdt,dfn,SAMIPATS) ; age
"RTN","SAMIUR2",527,0)
 ;
"RTN","SAMIUR2",528,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",529,0)
 ;@called-by
"RTN","SAMIUR2",530,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",531,0)
 ;@calls
"RTN","SAMIUR2",532,0)
 ; $$setroot^%wd
"RTN","SAMIUR2",533,0)
 ; ^%DT
"RTN","SAMIUR2",534,0)
 ; $$NOW^XLFDT
"RTN","SAMIUR2",535,0)
 ; $$FMDIFF^XLFDT
"RTN","SAMIUR2",536,0)
 ;
"RTN","SAMIUR2",537,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",538,0)
 new dob set dob=$get(@root@(dfn,"sbdob")) ; dob in VAPALS format
"RTN","SAMIUR2",539,0)
 ;
"RTN","SAMIUR2",540,0)
 new Y
"RTN","SAMIUR2",541,0)
 new X set X=dob
"RTN","SAMIUR2",542,0)
 do ^%DT
"RTN","SAMIUR2",543,0)
 ;
"RTN","SAMIUR2",544,0)
 new age set age=$piece($$FMDIFF^XLFDT($$NOW^XLFDT,Y)/365,".")
"RTN","SAMIUR2",545,0)
 ;
"RTN","SAMIUR2",546,0)
 quit age ; end of ppi $$AGE^SAMIUR2
"RTN","SAMIUR2",547,0)
 ;
"RTN","SAMIUR2",548,0)
 ;
"RTN","SAMIUR2",549,0)
 ;
"RTN","SAMIUR2",550,0)
BLINEDT(zdt,dfn,SAMIPATS) ; baseline date
"RTN","SAMIUR2",551,0)
 ;
"RTN","SAMIUR2",552,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",553,0)
 ;@called-by
"RTN","SAMIUR2",554,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",555,0)
 ;@calls
"RTN","SAMIUR2",556,0)
 ; $$TDDT
"RTN","SAMIUR2",557,0)
 ;
"RTN","SAMIUR2",558,0)
 new bldt set bldt=$get(SAMIPATS(zdt,dfn,"edate"))
"RTN","SAMIUR2",559,0)
 ;
"RTN","SAMIUR2",560,0)
 quit $$TDDT(bldt) ; end of ppi $$BLINEDT^SAMIUR2
"RTN","SAMIUR2",561,0)
 ;
"RTN","SAMIUR2",562,0)
 ;
"RTN","SAMIUR2",563,0)
 ;
"RTN","SAMIUR2",564,0)
CONTACT(zdt,dfn,SAMIPATS) ; patient street address
"RTN","SAMIUR2",565,0)
 ;
"RTN","SAMIUR2",566,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",567,0)
 ;@called-by
"RTN","SAMIUR2",568,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",569,0)
 ;@calls
"RTN","SAMIUR2",570,0)
 ; $$setroot^%wd
"RTN","SAMIUR2",571,0)
 ;
"RTN","SAMIUR2",572,0)
 new contact set contact=""
"RTN","SAMIUR2",573,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",574,0)
 new sid set sid=$get(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",575,0)
 new siform set siform=$get(SAMIPATS(zdt,dfn,"siform"))
"RTN","SAMIUR2",576,0)
 new vals set vals=$name(@root@("graph",sid,siform))
"RTN","SAMIUR2",577,0)
 set contact=$get(@vals@("sinamef"))_" "_$get(@vals@("sinamel"))
"RTN","SAMIUR2",578,0)
 set contact=contact_"<br>"_$get(@vals@("sipsa"))
"RTN","SAMIUR2",579,0)
 if $get(@vals@("sipan"))'="" do
"RTN","SAMIUR2",580,0)
 . set contact=contact_" Apt "_$get(@vals@("sipan"))
"RTN","SAMIUR2",581,0)
 . quit
"RTN","SAMIUR2",582,0)
 if $get(@vals@("sipcn"))'="" do
"RTN","SAMIUR2",583,0)
 . set contact=contact_"<br>County "_@vals@("sipcn")
"RTN","SAMIUR2",584,0)
 . quit
"RTN","SAMIUR2",585,0)
 if $get(@vals@("sipc"))'="" do
"RTN","SAMIUR2",586,0)
 . set contact=contact_" <br>"_@vals@("sipc")_", "
"RTN","SAMIUR2",587,0)
 . quit
"RTN","SAMIUR2",588,0)
 set contact=contact_" "_$get(@vals@("sips"))_" "_$get(@vals@("sipz"))_"     "
"RTN","SAMIUR2",589,0)
 ;
"RTN","SAMIUR2",590,0)
 quit contact ; end of ppi $$CONTACT^SAMIUR2
"RTN","SAMIUR2",591,0)
 ;
"RTN","SAMIUR2",592,0)
 ;
"RTN","SAMIUR2",593,0)
 ;
"RTN","SAMIUR2",594,0)
CTPROT(zdt,dfn,SAMIPATS) ; ct protocol
"RTN","SAMIUR2",595,0)
 ;
"RTN","SAMIUR2",596,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",597,0)
 ;@called-by
"RTN","SAMIUR2",598,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",599,0)
 ;@calls
"RTN","SAMIUR2",600,0)
 ; $$setroot^%wd
"RTN","SAMIUR2",601,0)
 ;
"RTN","SAMIUR2",602,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",603,0)
 new ceform set ceform=$get(SAMIPATS(zdt,dfn,"ceform"))
"RTN","SAMIUR2",604,0)
 quit:ceform="" ""
"RTN","SAMIUR2",605,0)
 ;
"RTN","SAMIUR2",606,0)
 new sid set sid=$get(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",607,0)
 new vals set vals=$name(@root@("graph",sid,ceform))
"RTN","SAMIUR2",608,0)
 new cectp set cectp=$get(@vals@("cectp"))
"RTN","SAMIUR2",609,0)
 new ctyp set ctyp=$select(cectp="l":"Low-Dose CT",cectp="d":"Standard CT",cectp="i":"Limited",1:"")
"RTN","SAMIUR2",610,0)
 ;
"RTN","SAMIUR2",611,0)
 quit ctyp ; end of ppi $$CTPROT^SAMIUR2
"RTN","SAMIUR2",612,0)
 ;
"RTN","SAMIUR2",613,0)
 ;
"RTN","SAMIUR2",614,0)
 ;
"RTN","SAMIUR2",615,0)
DOB(ien,dfn,SAMIPATS) ; date of birth
"RTN","SAMIUR2",616,0)
 ;
"RTN","SAMIUR2",617,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",618,0)
 ;@called-by
"RTN","SAMIUR2",619,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",620,0)
 ;@calls
"RTN","SAMIUR2",621,0)
 ; $$TDDT
"RTN","SAMIUR2",622,0)
 ;
"RTN","SAMIUR2",623,0)
 new dob set dob=$get(SAMIPATS(ien,dfn,"dob"))
"RTN","SAMIUR2",624,0)
 if dob="" set dob=$get(SAMIPATS(ien,dfn,"sbdob"))
"RTN","SAMIUR2",625,0)
 ;
"RTN","SAMIUR2",626,0)
 quit $$TDDT(dob) ; end of ppi $$DOB^SAMIUR2
"RTN","SAMIUR2",627,0)
 ;
"RTN","SAMIUR2",628,0)
 ;
"RTN","SAMIUR2",629,0)
 ;
"RTN","SAMIUR2",630,0)
FUDATE(zdt,dfn,SAMIPATS) ; followup date
"RTN","SAMIUR2",631,0)
 ;
"RTN","SAMIUR2",632,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",633,0)
 ;@called-by
"RTN","SAMIUR2",634,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",635,0)
 ;@calls
"RTN","SAMIUR2",636,0)
 ; $TDDT
"RTN","SAMIUR2",637,0)
 ;
"RTN","SAMIUR2",638,0)
 new fud set fud="fudate"
"RTN","SAMIUR2",639,0)
 new date set date=$get(SAMIPATS(zdt,dfn,"cefud"))
"RTN","SAMIUR2",640,0)
 ;
"RTN","SAMIUR2",641,0)
 quit $$TDDT(date) ; end of ppi $$FUDATE^SAMIUR2
"RTN","SAMIUR2",642,0)
 ;
"RTN","SAMIUR2",643,0)
 ;
"RTN","SAMIUR2",644,0)
 ;
"RTN","SAMIUR2",645,0)
GENDER(zdt,dfn,SAMIPATS) ; gender
"RTN","SAMIUR2",646,0)
 ;
"RTN","SAMIUR2",647,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",648,0)
 ;@called-by
"RTN","SAMIUR2",649,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",650,0)
 ;@calls
"RTN","SAMIUR2",651,0)
 ; $$setroot^%wd
"RTN","SAMIUR2",652,0)
 ;
"RTN","SAMIUR2",653,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",654,0)
 new lroot set lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIUR2",655,0)
 ;
"RTN","SAMIUR2",656,0)
 new gend set gend=$get(SAMIPATS(zdt,dfn,"gender"))
"RTN","SAMIUR2",657,0)
 if gend="" do
"RTN","SAMIUR2",658,0)
 . new pien set pien=$order(@root@("dfn",dfn,""))
"RTN","SAMIUR2",659,0)
 . if pien'="" do  ;
"RTN","SAMIUR2",660,0)
 . . set gend=$get(@root@(pien,"sex"))
"RTN","SAMIUR2",661,0)
 . . if gend="" set gend=$get(@root@(pien,"gender"))
"RTN","SAMIUR2",662,0)
 . . quit
"RTN","SAMIUR2",663,0)
 . if gend="" do  ;
"RTN","SAMIUR2",664,0)
 . . new lien set lien=$order(@lroot@("dfn",dfn,""))
"RTN","SAMIUR2",665,0)
 . . set gend=$get(@lroot@(lien,"gender"))
"RTN","SAMIUR2",666,0)
 . . quit
"RTN","SAMIUR2",667,0)
 if gend["^" set gend=$piece(gend,"^",1)
"RTN","SAMIUR2",668,0)
 ;
"RTN","SAMIUR2",669,0)
 quit gend ; end of ppi $$GENDER^SAMIUR2
"RTN","SAMIUR2",670,0)
 ;
"RTN","SAMIUR2",671,0)
 ;
"RTN","SAMIUR2",672,0)
 ;
"RTN","SAMIUR2",673,0)
IFORM(zdt,dfn,SAMIPATS) ; name(s) of incomplete forms
"RTN","SAMIUR2",674,0)
 ;
"RTN","SAMIUR2",675,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",676,0)
 ;@called-by
"RTN","SAMIUR2",677,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",678,0)
 ;@calls
"RTN","SAMIUR2",679,0)
 ; $$DFN2SID^SAMIUR2
"RTN","SAMIUR2",680,0)
 ; $$KEY2FM^SAMICASE
"RTN","SAMIUR2",681,0)
 ; $$VAPALSDT^SAMICASE
"RTN","SAMIUR2",682,0)
 ; $$MKNAV
"RTN","SAMIUR2",683,0)
 ;
"RTN","SAMIUR2",684,0)
 new iform set iform=$get(SAMIPATS(zdt,dfn,"iform"))
"RTN","SAMIUR2",685,0)
 quit:iform="" ""  ;
"RTN","SAMIUR2",686,0)
 ;
"RTN","SAMIUR2",687,0)
 new zkey1,zn,typ
"RTN","SAMIUR2",688,0)
 new return set return="<table>"
"RTN","SAMIUR2",689,0)
 for zn=2:1  quit:$piece(iform," ",zn)=""  do  ;
"RTN","SAMIUR2",690,0)
 . set return=return_"<tr><td>"
"RTN","SAMIUR2",691,0)
 . set zkey1=$piece(iform," ",zn)
"RTN","SAMIUR2",692,0)
 . ;
"RTN","SAMIUR2",693,0)
 . new fname
"RTN","SAMIUR2",694,0)
 . if zkey1["ceform" set fname="CT Evaluation" set typ="ceform"
"RTN","SAMIUR2",695,0)
 . if zkey1["sbform" set fname="Background" set typ="sbform"
"RTN","SAMIUR2",696,0)
 . if zkey1["fuform" set fname="Follow-up" set typ="fuform"
"RTN","SAMIUR2",697,0)
 . if zkey1["bxform" set fname="Biopsy" set typ="bxform"
"RTN","SAMIUR2",698,0)
 . if zkey1["ptform" set fname="PET Evaluation" set typ="ptform"
"RTN","SAMIUR2",699,0)
 . if zkey1["itform" set fname="Intervention" set typ="itform"
"RTN","SAMIUR2",700,0)
 . if zkey1["siform" set fname="Intake Form" set typ="siform"
"RTN","SAMIUR2",701,0)
 . if $get(fname)="" set fname="unknown" set typ=""
"RTN","SAMIUR2",702,0)
 . ;
"RTN","SAMIUR2",703,0)
 . new sid set sid=$$DFN2SID^SAMIUR2(dfn)
"RTN","SAMIUR2",704,0)
 . new zdate set zdate=$$VAPALSDT^SAMICASE($$KEY2FM^SAMICASE(zkey1))
"RTN","SAMIUR2",705,0)
 . set return=return_$$MKNAV(sid,zkey1,fname_" - "_zdate,typ)
"RTN","SAMIUR2",706,0)
 . set return=return_"</td></tr>"
"RTN","SAMIUR2",707,0)
 . quit
"RTN","SAMIUR2",708,0)
 ;
"RTN","SAMIUR2",709,0)
 set return=return_"</table>"
"RTN","SAMIUR2",710,0)
 ;
"RTN","SAMIUR2",711,0)
 quit return ; end of ppi $$IFORM^SAMIUR2
"RTN","SAMIUR2",712,0)
 ;
"RTN","SAMIUR2",713,0)
 ;
"RTN","SAMIUR2",714,0)
 ;
"RTN","SAMIUR2",715,0)
LASTEXM(zdt,dfn,SAMIPATS) ; patient last exam
"RTN","SAMIUR2",716,0)
 ;
"RTN","SAMIUR2",717,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",718,0)
 ;@called-by
"RTN","SAMIUR2",719,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",720,0)
 ;@calls
"RTN","SAMIUR2",721,0)
 ; $$TDDT
"RTN","SAMIUR2",722,0)
 ;
"RTN","SAMIUR2",723,0)
 new lexm set lexm=$get(SAMIPATS(zdt,dfn,"cedos"))
"RTN","SAMIUR2",724,0)
 ;
"RTN","SAMIUR2",725,0)
 quit $$TDDT(lexm) ; end of ppi $$LASTEXM^SAMIUR2
"RTN","SAMIUR2",726,0)
 ;
"RTN","SAMIUR2",727,0)
 ;
"RTN","SAMIUR2",728,0)
 ;
"RTN","SAMIUR2",729,0)
INACTDT(zdt,dfn,SAMIPATS) ; inactive date
"RTN","SAMIUR2",730,0)
 ;
"RTN","SAMIUR2",731,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",732,0)
 ;@called-by
"RTN","SAMIUR2",733,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",734,0)
 ;@calls
"RTN","SAMIUR2",735,0)
 ; $$setroot^%wd
"RTN","SAMIUR2",736,0)
 ; $$TDDT
"RTN","SAMIUR2",737,0)
 ;
"RTN","SAMIUR2",738,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",739,0)
 new sid set sid=$get(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",740,0)
 new siform set siform=$get(SAMIPATS(zdt,dfn,"siform"))
"RTN","SAMIUR2",741,0)
 new vals set vals=$name(@root@("graph",sid,siform))
"RTN","SAMIUR2",742,0)
 ;
"RTN","SAMIUR2",743,0)
 quit $$TDDT($get(@vals@("sidod")))
"RTN","SAMIUR2",744,0)
 ;
"RTN","SAMIUR2",745,0)
 ;
"RTN","SAMIUR2",746,0)
 ;
"RTN","SAMIUR2",747,0)
INACTRE(zdt,dfn,SAMIPATS) ; inactive date
"RTN","SAMIUR2",748,0)
 ;
"RTN","SAMIUR2",749,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",750,0)
 ;@called-by
"RTN","SAMIUR2",751,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",752,0)
 ;@calls
"RTN","SAMIUR2",753,0)
 ; $$setroot^%wd
"RTN","SAMIUR2",754,0)
 ;
"RTN","SAMIUR2",755,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",756,0)
 new sid set sid=$get(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",757,0)
 new siform set siform=$get(SAMIPATS(zdt,dfn,"siform"))
"RTN","SAMIUR2",758,0)
 new vals set vals=$name(@root@("graph",sid,siform))
"RTN","SAMIUR2",759,0)
 ;
"RTN","SAMIUR2",760,0)
 quit $get(@vals@("sistachg"))
"RTN","SAMIUR2",761,0)
 ;
"RTN","SAMIUR2",762,0)
 ;
"RTN","SAMIUR2",763,0)
 ;
"RTN","SAMIUR2",764,0)
INACTCM(zdt,dfn,SAMIPATS) ; inactive date
"RTN","SAMIUR2",765,0)
 ;
"RTN","SAMIUR2",766,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",767,0)
 ;@called-by
"RTN","SAMIUR2",768,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",769,0)
 ;@calls
"RTN","SAMIUR2",770,0)
 ; $$setroot^%wd
"RTN","SAMIUR2",771,0)
 ;
"RTN","SAMIUR2",772,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",773,0)
 new sid set sid=$get(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",774,0)
 new siform set siform=$get(SAMIPATS(zdt,dfn,"siform"))
"RTN","SAMIUR2",775,0)
 new vals set vals=$name(@root@("graph",sid,siform))
"RTN","SAMIUR2",776,0)
 ;
"RTN","SAMIUR2",777,0)
 quit $get(@vals@("sistreas"))
"RTN","SAMIUR2",778,0)
 ;
"RTN","SAMIUR2",779,0)
 ;
"RTN","SAMIUR2",780,0)
 ;
"RTN","SAMIUR2",781,0)
LDE(zdt,dfn,SAMIPATS) ; last date and entry in com log
"RTN","SAMIUR2",782,0)
 ;
"RTN","SAMIUR2",783,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",784,0)
 ;@called-by
"RTN","SAMIUR2",785,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",786,0)
 ;@calls
"RTN","SAMIUR2",787,0)
 ; $$setroot^%wd
"RTN","SAMIUR2",788,0)
 ;
"RTN","SAMIUR2",789,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",790,0)
 new sid set sid=$get(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",791,0)
 new siform set siform=$get(SAMIPATS(zdt,dfn,"siform"))
"RTN","SAMIUR2",792,0)
 new vals set vals=$name(@root@("graph",sid,siform))
"RTN","SAMIUR2",793,0)
 ;
"RTN","SAMIUR2",794,0)
 n comien,comdt,comntry
"RTN","SAMIUR2",795,0)
 s (comdt,comntry)=""
"RTN","SAMIUR2",796,0)
 s comien=$o(@vals@("comlog"," "),-1)
"RTN","SAMIUR2",797,0)
 i comien="" d  q comdt
"RTN","SAMIUR2",798,0)
 . s comdt=$g(@vals@("sidc"))
"RTN","SAMIUR2",799,0)
 s comntry=$g(@vals@("comlog",comien))
"RTN","SAMIUR2",800,0)
 s comdt=$p($p(comntry,"[",2),"@",1)
"RTN","SAMIUR2",801,0)
 ;
"RTN","SAMIUR2",802,0)
 quit comdt_"^"_comntry
"RTN","SAMIUR2",803,0)
 ;
"RTN","SAMIUR2",804,0)
 ;
"RTN","SAMIUR2",805,0)
 ;
"RTN","SAMIUR2",806,0)
LDOC(zdt,dfn,SAMIPATS) ; last date of contact
"RTN","SAMIUR2",807,0)
 ;
"RTN","SAMIUR2",808,0)
 quit $$TDDT($piece($$LDE(zdt,dfn,.SAMIPATS),"^",1))
"RTN","SAMIUR2",809,0)
 ;
"RTN","SAMIUR2",810,0)
 ;
"RTN","SAMIUR2",811,0)
 ;
"RTN","SAMIUR2",812,0)
LENTRY(zdt,dfn,SAMIPATS) ; last contact entry
"RTN","SAMIUR2",813,0)
 ;
"RTN","SAMIUR2",814,0)
 quit $piece($$LDE(zdt,dfn,.SAMIPATS),"^",2)
"RTN","SAMIUR2",815,0)
 ;
"RTN","SAMIUR2",816,0)
 ;
"RTN","SAMIUR2",817,0)
 ;
"RTN","SAMIUR2",818,0)
MANPAT(ien,dfn,SAMIPATS) ; unmatched patient cell
"RTN","SAMIUR2",819,0)
 ;
"RTN","SAMIUR2",820,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",821,0)
 ;@called-by
"RTN","SAMIUR2",822,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",823,0)
 ;@calls
"RTN","SAMIUR2",824,0)
 ; $$setroot^%wd
"RTN","SAMIUR2",825,0)
 ;
"RTN","SAMIUR2",826,0)
 new zcell set zcell=""
"RTN","SAMIUR2",827,0)
 ; set zcell=zcell_$get(SAMIPATS(ien,dfn,"saminame"))
"RTN","SAMIUR2",828,0)
 set zcell=zcell_$get(SAMIPATS(ien,dfn,"editref"))
"RTN","SAMIUR2",829,0)
 set zcell=zcell_"<br>Date of Birth: "_$get(SAMIPATS(ien,dfn,"dob"))
"RTN","SAMIUR2",830,0)
 set zcell=zcell_" Gender: "_$get(SAMIPATS(ien,dfn,"sex"))
"RTN","SAMIUR2",831,0)
 ;
"RTN","SAMIUR2",832,0)
 new ssn set ssn=$get(SAMIPATS(ien,dfn,"ssn"))
"RTN","SAMIUR2",833,0)
 if ssn="" do  ;
"RTN","SAMIUR2",834,0)
 . new lroot set lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIUR2",835,0)
 . new tssn set tssn=$get(@lroot@(ien,"ssn"))
"RTN","SAMIUR2",836,0)
 . set ssn=$extract(tssn,1,3)_"-"_$extract(tssn,4,5)_"-"_$extract(tssn,6,9)
"RTN","SAMIUR2",837,0)
 . quit
"RTN","SAMIUR2",838,0)
 set zcell=zcell_"<br>SSN: "_ssn
"RTN","SAMIUR2",839,0)
 ;
"RTN","SAMIUR2",840,0)
 set zcell=zcell_"<br>dfn: "_dfn
"RTN","SAMIUR2",841,0)
 ;
"RTN","SAMIUR2",842,0)
 quit zcell ; end of ppi $$MANPAT^SAMIUR2
"RTN","SAMIUR2",843,0)
 ;
"RTN","SAMIUR2",844,0)
 ;
"RTN","SAMIUR2",845,0)
 ;
"RTN","SAMIUR2",846,0)
MATCH(ien,dfn,SAMIPATS) ; match button cell
"RTN","SAMIUR2",847,0)
 ;
"RTN","SAMIUR2",848,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",849,0)
 ;@called-by
"RTN","SAMIUR2",850,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",851,0)
 ;@calls none
"RTN","SAMIUR2",852,0)
 ;
"RTN","SAMIUR2",853,0)
 new matien set matien=$get(SAMIPATS(ien,dfn,"MATCHLOG"))
"RTN","SAMIUR2",854,0)
 quit:matien="" ""
"RTN","SAMIUR2",855,0)
 ;
"RTN","SAMIUR2",856,0)
 new nuhref set nuhref="<form method=POST action=""/vapals"">"
"RTN","SAMIUR2",857,0)
 set nuhref=nuhref_"<input type=hidden name=""samiroute"" value=""merge"">"
"RTN","SAMIUR2",858,0)
 set nuhref=nuhref_"<input type=hidden name=""toien"" value="_ien_">"
"RTN","SAMIUR2",859,0)
 set nuhref=nuhref_"<input value=""Merge"" class=""btn btn-link"" role=""link"" type=""submit""></form>"
"RTN","SAMIUR2",860,0)
 ;
"RTN","SAMIUR2",861,0)
 quit nuhref ; end of ppi $$MATCH^SAMIUR2
"RTN","SAMIUR2",862,0)
 ;
"RTN","SAMIUR2",863,0)
 ;
"RTN","SAMIUR2",864,0)
 ;
"RTN","SAMIUR2",865,0)
NAME(zdt,dfn,SAMIPATS) ; name w/hyperlink
"RTN","SAMIUR2",866,0)
 ;
"RTN","SAMIUR2",867,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",868,0)
 ;@called-by
"RTN","SAMIUR2",869,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",870,0)
 ;@calls none
"RTN","SAMIUR2",871,0)
 ;
"RTN","SAMIUR2",872,0)
 new nam set nam="Name"
"RTN","SAMIUR2",873,0)
 ;
"RTN","SAMIUR2",874,0)
 quit $get(SAMIPATS(zdt,dfn,"nuhref")) ; end of ppi $$NAME^SAMIUR2
"RTN","SAMIUR2",875,0)
 ;
"RTN","SAMIUR2",876,0)
 ;
"RTN","SAMIUR2",877,0)
 ;
"RTN","SAMIUR2",878,0)
PACKYRS(zdt,dfn,SAMIPATS) ; smoking status
"RTN","SAMIUR2",879,0)
 ;
"RTN","SAMIUR2",880,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",881,0)
 ;@called-by
"RTN","SAMIUR2",882,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",883,0)
 ;@calls
"RTN","SAMIUR2",884,0)
 ; $$setroot^%wd
"RTN","SAMIUR2",885,0)
 ;
"RTN","SAMIUR2",886,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",887,0)
 new sid set sid=$get(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",888,0)
 new siform set siform=$get(SAMIPATS(zdt,dfn,"siform"))
"RTN","SAMIUR2",889,0)
 new vals set vals=$name(@root@("graph",sid,siform))
"RTN","SAMIUR2",890,0)
 new pkyrs set pkyrs=$get(@vals@("sippy"))
"RTN","SAMIUR2",891,0)
 ;
"RTN","SAMIUR2",892,0)
 quit pkyrs ; end of ppi $$PACKYRS^SAMIUR2
"RTN","SAMIUR2",893,0)
 ;
"RTN","SAMIUR2",894,0)
 ;
"RTN","SAMIUR2",895,0)
 ;
"RTN","SAMIUR2",896,0)
POSSIBLE(ien,dfn,SAMIPATS) ; possible match cell
"RTN","SAMIUR2",897,0)
 ;
"RTN","SAMIUR2",898,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",899,0)
 ;@called-by
"RTN","SAMIUR2",900,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",901,0)
 ;@calls
"RTN","SAMIUR2",902,0)
 ; $$setroot^%wd
"RTN","SAMIUR2",903,0)
 ;
"RTN","SAMIUR2",904,0)
 new zcell set zcell=""
"RTN","SAMIUR2",905,0)
 new matien set matien=$get(SAMIPATS(ien,dfn,"MATCHLOG"))
"RTN","SAMIUR2",906,0)
 quit:matien="" zcell
"RTN","SAMIUR2",907,0)
 ;
"RTN","SAMIUR2",908,0)
 new lroot set lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIUR2",909,0)
 quit:'$data(@lroot@(matien)) zcell
"RTN","SAMIUR2",910,0)
 ;
"RTN","SAMIUR2",911,0)
 set zcell=zcell_$get(@lroot@(matien,"saminame"))
"RTN","SAMIUR2",912,0)
 set zcell=zcell_"<br>Date of Birth: "_$get(@lroot@(matien,"sbdob"))
"RTN","SAMIUR2",913,0)
 set zcell=zcell_" Gender: "_$get(@lroot@(matien,"sex"))
"RTN","SAMIUR2",914,0)
 ;
"RTN","SAMIUR2",915,0)
 new tssn set tssn=$get(@lroot@(matien,"ssn"))
"RTN","SAMIUR2",916,0)
 new ssn set ssn=tssn
"RTN","SAMIUR2",917,0)
 if tssn'["-" set ssn=$extract(tssn,1,3)_"-"_$extract(tssn,4,5)_"-"_$extract(tssn,6,9)
"RTN","SAMIUR2",918,0)
 set zcell=zcell_"<br>SSN: "_ssn
"RTN","SAMIUR2",919,0)
 ;
"RTN","SAMIUR2",920,0)
 set zcell=zcell_"<br>dfn: "_$get(@lroot@(matien,"dfn"))
"RTN","SAMIUR2",921,0)
 ;
"RTN","SAMIUR2",922,0)
 quit zcell ; end of ppi $$POSSIBLE^SAMIUR2
"RTN","SAMIUR2",923,0)
 ;
"RTN","SAMIUR2",924,0)
 ;
"RTN","SAMIUR2",925,0)
 ;
"RTN","SAMIUR2",926,0)
RECOM(zdt,dfn,SAMIPATS) ; recommendation
"RTN","SAMIUR2",927,0)
 ;
"RTN","SAMIUR2",928,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",929,0)
 ;@called-by
"RTN","SAMIUR2",930,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",931,0)
 ;@calls
"RTN","SAMIUR2",932,0)
 ; $$setroot^%wd
"RTN","SAMIUR2",933,0)
 ;
"RTN","SAMIUR2",934,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",935,0)
 new ceform set ceform=$get(SAMIPATS(zdt,dfn,"ceform"))
"RTN","SAMIUR2",936,0)
 quit:ceform="" ""
"RTN","SAMIUR2",937,0)
 ;
"RTN","SAMIUR2",938,0)
 new sid set sid=$get(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",939,0)
 new vals set vals=$name(@root@("graph",sid,ceform))
"RTN","SAMIUR2",940,0)
 new cefuw set cefuw=$get(@vals@("cefuw"))
"RTN","SAMIUR2",941,0)
 ;
"RTN","SAMIUR2",942,0)
 new recom set recom=""
"RTN","SAMIUR2",943,0)
 set recom=$select(cefuw="1y":"Annual Repeat",cefuw="nw":"Now",cefuw="1m":"1 month",cefuw="3m":"3 months",cefuw="6m":"6 months",cefuw="os":"Other",1:"")
"RTN","SAMIUR2",944,0)
 if $get(@vals@("cefuaf"))="y" set recom=recom_", Antibiotics"
"RTN","SAMIUR2",945,0)
 if $get(@vals@("cefucc"))="y" set recom=recom_", Contrast CT"
"RTN","SAMIUR2",946,0)
 if $get(@vals@("cefupe"))="y" set recom=recom_", PET"
"RTN","SAMIUR2",947,0)
 if $get(@vals@("cefufn"))="y" set recom=recom_", Percutaneous biopsy"
"RTN","SAMIUR2",948,0)
 if $get(@vals@("cefubr"))="y" set recom=recom_", Bronchoscopy"
"RTN","SAMIUR2",949,0)
 if $get(@vals@("cefupc"))="y" set recom=recom_", Pulmonary consultation"
"RTN","SAMIUR2",950,0)
 if $get(@vals@("cefutb"))="y" set recom=recom_", Refer to tumor board"
"RTN","SAMIUR2",951,0)
 if $get(@vals@("cefunf"))="y" set recom=recom_", No other further follow-up"
"RTN","SAMIUR2",952,0)
 if $extract(recom,1,2)=", " set recom=$extract(recom,3,$length(recom))
"RTN","SAMIUR2",953,0)
 ;
"RTN","SAMIUR2",954,0)
 quit recom ; end of ppi $$RECOM^SAMIUR2
"RTN","SAMIUR2",955,0)
 ;
"RTN","SAMIUR2",956,0)
 ;
"RTN","SAMIUR2",957,0)
 ;
"RTN","SAMIUR2",958,0)
RURAL(zdt,dfn,SAMIPATS) ; patient's rural/urban status
"RTN","SAMIUR2",959,0)
 ;
"RTN","SAMIUR2",960,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",961,0)
 ;@called-by
"RTN","SAMIUR2",962,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",963,0)
 ;@calls
"RTN","SAMIUR2",964,0)
 ; $$setroot^%wd
"RTN","SAMIUR2",965,0)
 ;
"RTN","SAMIUR2",966,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",967,0)
 new sid set sid=$get(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",968,0)
 new siform set siform=$get(SAMIPATS(zdt,dfn,"siform"))
"RTN","SAMIUR2",969,0)
 new vals set vals=$name(@root@("graph",sid,siform))
"RTN","SAMIUR2",970,0)
 new sirs set sirs=$get(@vals@("sirs"))
"RTN","SAMIUR2",971,0)
 set sirs=$select(sirs="r":"rural",sirs="u":"urban",sirs="n":"unknown",1:"unknown")
"RTN","SAMIUR2",972,0)
 ;
"RTN","SAMIUR2",973,0)
 quit sirs ; end of ppi $$RURAL^SAMIUR2
"RTN","SAMIUR2",974,0)
 ;
"RTN","SAMIUR2",975,0)
 ;
"RTN","SAMIUR2",976,0)
 ;
"RTN","SAMIUR2",977,0)
SID(zdt,dfn,SAMIPATS) ; study ID
"RTN","SAMIUR2",978,0)
 ;
"RTN","SAMIUR2",979,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",980,0)
 ;@called-by
"RTN","SAMIUR2",981,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",982,0)
 ;@calls
"RTN","SAMIUR2",983,0)
 ; $$DFN2SID
"RTN","SAMIUR2",984,0)
 ;
"RTN","SAMIUR2",985,0)
 quit $$DFN2SID(dfn) ; end of ppi $$SID^SAMIUR2
"RTN","SAMIUR2",986,0)
 ;
"RTN","SAMIUR2",987,0)
 ;
"RTN","SAMIUR2",988,0)
 ;
"RTN","SAMIUR2",989,0)
SMHIS(zdt,dfn,SAMIPATS) ; smoking history cell
"RTN","SAMIUR2",990,0)
 ;
"RTN","SAMIUR2",991,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",992,0)
 ;@called-by
"RTN","SAMIUR2",993,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",994,0)
 ;@calls
"RTN","SAMIUR2",995,0)
 ; $$DFN2SID
"RTN","SAMIUR2",996,0)
 ; $$SHDET
"RTN","SAMIUR2",997,0)
 ;
"RTN","SAMIUR2",998,0)
 new zrtn set zrtn=""
"RTN","SAMIUR2",999,0)
 set zrtn=zrtn_"<div class=""row""><div class=""col-md-12""><table class=""table"" id=""pack-years-history"">"
"RTN","SAMIUR2",1000,0)
 set zrtn=zrtn_"<thead><tr><th>Form </th><th> Reported Date </th>"
"RTN","SAMIUR2",1001,0)
 set zrtn=zrtn_"<th>Pack Years</th><th>Cumulative</th></tr></thead><tbody>"
"RTN","SAMIUR2",1002,0)
 set zrtn=zrtn_$$SHDET($$DFN2SID(dfn))
"RTN","SAMIUR2",1003,0)
 set zrtn=zrtn_"</tbody></table></div></div>"
"RTN","SAMIUR2",1004,0)
 ;
"RTN","SAMIUR2",1005,0)
 quit zrtn ; end of ppi $$SMHIS^SAMIUR2
"RTN","SAMIUR2",1006,0)
 ;
"RTN","SAMIUR2",1007,0)
 ;
"RTN","SAMIUR2",1008,0)
 ;
"RTN","SAMIUR2",1009,0)
SMKSTAT(zdt,dfn,SAMIPATS) ; smoking status
"RTN","SAMIUR2",1010,0)
 ;
"RTN","SAMIUR2",1011,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",1012,0)
 ;@called-by
"RTN","SAMIUR2",1013,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",1014,0)
 ;@calls
"RTN","SAMIUR2",1015,0)
 ; $$setroot^%wd
"RTN","SAMIUR2",1016,0)
 ;
"RTN","SAMIUR2",1017,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",1018,0)
 new sid set sid=$get(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",1019,0)
 new siform set siform=$get(SAMIPATS(zdt,dfn,"siform"))
"RTN","SAMIUR2",1020,0)
 new vals set vals=$name(@root@("graph",sid,siform))
"RTN","SAMIUR2",1021,0)
 ;
"RTN","SAMIUR2",1022,0)
 new smk set smk="unknown"
"RTN","SAMIUR2",1023,0)
 if $get(@vals@("siesm"))="n" set smk="Never smoked"
"RTN","SAMIUR2",1024,0)
 if $get(@vals@("siesm"))="p" set smk="Past smoker"
"RTN","SAMIUR2",1025,0)
 if $get(@vals@("siesm"))="c" set smk="Current smoker"
"RTN","SAMIUR2",1026,0)
 ; if $get(@vals@("siesq"))=1 set smk="Cu"
"RTN","SAMIUR2",1027,0)
 ;
"RTN","SAMIUR2",1028,0)
 quit smk ; end of ppi $$SMKSTAT^SAMIUR2
"RTN","SAMIUR2",1029,0)
 ;
"RTN","SAMIUR2",1030,0)
 ;
"RTN","SAMIUR2",1031,0)
 ;
"RTN","SAMIUR2",1032,0)
SSN(zdt,dfn,SAMIPATS) ; social security number
"RTN","SAMIUR2",1033,0)
 ;
"RTN","SAMIUR2",1034,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",1035,0)
 ;@called-by
"RTN","SAMIUR2",1036,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",1037,0)
 ;@calls none
"RTN","SAMIUR2",1038,0)
 ;
"RTN","SAMIUR2",1039,0)
 new tssn set tssn=$get(SAMIPATS(zdt,dfn,"ssn"))
"RTN","SAMIUR2",1040,0)
 new ssn set ssn=tssn
"RTN","SAMIUR2",1041,0)
 if ssn'["-" do
"RTN","SAMIUR2",1042,0)
 . set ssn=$extract(tssn,1,3)_"-"_$extract(tssn,4,5)_"-"_$extract(tssn,6,9)
"RTN","SAMIUR2",1043,0)
 . quit
"RTN","SAMIUR2",1044,0)
 ;
"RTN","SAMIUR2",1045,0)
 quit ssn ; end of ppi $$SSN^SAMIUR2
"RTN","SAMIUR2",1046,0)
 ;
"RTN","SAMIUR2",1047,0)
 ;
"RTN","SAMIUR2",1048,0)
 ;
"RTN","SAMIUR2",1049,0)
SSNLABEL(SITE) ; extrinsic returns label for SSN (ie PID)
"RTN","SAMIUR2",1050,0)
 new RTN
"RTN","SAMIUR2",1051,0)
 set RTN=$$GET1PARM^SAMIPARM("socialSecurityNumber",SITE)
"RTN","SAMIUR2",1052,0)
 if RTN="" set RTN="SSN"
"RTN","SAMIUR2",1053,0)
 quit RTN
"RTN","SAMIUR2",1054,0)
 ;
"RTN","SAMIUR2",1055,0)
 ;
"RTN","SAMIUR2",1056,0)
 ;
"RTN","SAMIUR2",1057,0)
STUDYDT(zdt,dfn,SAMIPATS) ; latest study date
"RTN","SAMIUR2",1058,0)
 ;
"RTN","SAMIUR2",1059,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",1060,0)
 ;@called-by
"RTN","SAMIUR2",1061,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",1062,0)
 ;@calls
"RTN","SAMIUR2",1063,0)
 ; $$TDDT
"RTN","SAMIUR2",1064,0)
 ;
"RTN","SAMIUR2",1065,0)
 new stdt set stdt=$get(SAMIPATS(zdt,dfn,"cedos"))
"RTN","SAMIUR2",1066,0)
 ;
"RTN","SAMIUR2",1067,0)
 quit $$TDDT(stdt) ; end of ppi $$STUDYDT^SAMIUR2
"RTN","SAMIUR2",1068,0)
 ;
"RTN","SAMIUR2",1069,0)
 ;
"RTN","SAMIUR2",1070,0)
 ;
"RTN","SAMIUR2",1071,0)
STUDYTYP(zdt,dfn,SAMIPATS) ; latest study type
"RTN","SAMIUR2",1072,0)
 ;
"RTN","SAMIUR2",1073,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",1074,0)
 ;@called-by
"RTN","SAMIUR2",1075,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",1076,0)
 ;@calls
"RTN","SAMIUR2",1077,0)
 ; $$setroot^%wd
"RTN","SAMIUR2",1078,0)
 ;
"RTN","SAMIUR2",1079,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",1080,0)
 new ceform set ceform=$get(SAMIPATS(zdt,dfn,"ceform"))
"RTN","SAMIUR2",1081,0)
 quit:ceform="" ""
"RTN","SAMIUR2",1082,0)
 ;
"RTN","SAMIUR2",1083,0)
 new sid set sid=$get(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",1084,0)
 new vals set vals=$name(@root@("graph",sid,ceform))
"RTN","SAMIUR2",1085,0)
 new stypx set stypx=$get(@vals@("cetex"))
"RTN","SAMIUR2",1086,0)
 new styp set styp=$select(stypx="a":"Annual",stypx="b":"Baseline",stypx="d":"Followup",1:"")
"RTN","SAMIUR2",1087,0)
 ;
"RTN","SAMIUR2",1088,0)
 quit styp ; end of ppi $$STUDYTYP^SAMIUR2
"RTN","SAMIUR2",1089,0)
 ;
"RTN","SAMIUR2",1090,0)
 ;
"RTN","SAMIUR2",1091,0)
 ;
"RTN","SAMIUR2",1092,0)
VALS(zdt,dfn,SAMIPATS) ; form-values cell
"RTN","SAMIUR2",1093,0)
 ;
"RTN","SAMIUR2",1094,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",1095,0)
 ;@called-by
"RTN","SAMIUR2",1096,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",1097,0)
 ;@calls
"RTN","SAMIUR2",1098,0)
 ; $$DFN2SID
"RTN","SAMIUR2",1099,0)
 ;
"RTN","SAMIUR2",1100,0)
 new vrtn set vrtn=""
"RTN","SAMIUR2",1101,0)
 new vsid set vsid=$$DFN2SID(dfn)
"RTN","SAMIUR2",1102,0)
 new vgr set vgr="/vals?sid="_vsid_"&form="
"RTN","SAMIUR2",1103,0)
 quit:'$data(SAMIPATS)
"RTN","SAMIUR2",1104,0)
 ;
"RTN","SAMIUR2",1105,0)
 new vzi set vzi=""
"RTN","SAMIUR2",1106,0)
 for  do  quit:vzi="sort"  quit:vzi=""
"RTN","SAMIUR2",1107,0)
 . set vzi=$order(SAMIPATS(zdt,dfn,"items",vzi))
"RTN","SAMIUR2",1108,0)
 . quit:vzi="sort"
"RTN","SAMIUR2",1109,0)
 . quit:vzi=""
"RTN","SAMIUR2",1110,0)
 . set vrtn=vrtn_"<a href="""_vgr_vzi_""">"_vzi_"</a><br>"
"RTN","SAMIUR2",1111,0)
 . quit
"RTN","SAMIUR2",1112,0)
 ;
"RTN","SAMIUR2",1113,0)
 quit vrtn ; end of $$VALS^SAMIUR2
"RTN","SAMIUR2",1114,0)
 ;
"RTN","SAMIUR2",1115,0)
 ;
"RTN","SAMIUR2",1116,0)
 ;
"RTN","SAMIUR2",1117,0)
WHEN(zdt,dfn,SAMIPATS) ; followup text
"RTN","SAMIUR2",1118,0)
 ;
"RTN","SAMIUR2",1119,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",1120,0)
 ;@called-by
"RTN","SAMIUR2",1121,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",1122,0)
 ;@calls
"RTN","SAMIUR2",1123,0)
 ; $$setroot^%wd
"RTN","SAMIUR2",1124,0)
 ;
"RTN","SAMIUR2",1125,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",1126,0)
 new ceform set ceform=$get(SAMIPATS(zdt,dfn,"ceform"))
"RTN","SAMIUR2",1127,0)
 quit:ceform="" ""
"RTN","SAMIUR2",1128,0)
 ;
"RTN","SAMIUR2",1129,0)
 new sid set sid=$get(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",1130,0)
 new vals set vals=$name(@root@("graph",sid,ceform))
"RTN","SAMIUR2",1131,0)
 new whnx set whnx=$get(@vals@("cefuw"))
"RTN","SAMIUR2",1132,0)
 quit:whnx="" ""
"RTN","SAMIUR2",1133,0)
 ;
"RTN","SAMIUR2",1134,0)
 new DICT
"RTN","SAMIUR2",1135,0)
 set DICT("cefuw","1m")="in one month"
"RTN","SAMIUR2",1136,0)
 set DICT("cefuw","1y")="in one year"
"RTN","SAMIUR2",1137,0)
 set DICT("cefuw","3m")="in three months"
"RTN","SAMIUR2",1138,0)
 set DICT("cefuw","6m")="in six months"
"RTN","SAMIUR2",1139,0)
 set DICT("cefuw","os")="other as specified"
"RTN","SAMIUR2",1140,0)
 set whn=$get(DICT("cefuw",whnx))
"RTN","SAMIUR2",1141,0)
 ;
"RTN","SAMIUR2",1142,0)
 quit whn ; end of ppi $$WHEN^SAMIUR2
"RTN","SAMIUR2",1143,0)
 ;
"RTN","SAMIUR2",1144,0)
 ;
"RTN","SAMIUR2",1145,0)
 ;
"RTN","SAMIUR2",1146,0)
WORKPAT(ien,dfn,SAMIPATS) ; worklist patient name cell
"RTN","SAMIUR2",1147,0)
 ;
"RTN","SAMIUR2",1148,0)
 ;;ppi;function;clean;silent;sac
"RTN","SAMIUR2",1149,0)
 ;@called-by
"RTN","SAMIUR2",1150,0)
 ; WSREPORT^SAMIUR
"RTN","SAMIUR2",1151,0)
 ;@calls none
"RTN","SAMIUR2",1152,0)
 ;
"RTN","SAMIUR2",1153,0)
 new zcell set zcell=""
"RTN","SAMIUR2",1154,0)
 set zcell=zcell_$get(SAMIPATS(ien,dfn,"workref"))
"RTN","SAMIUR2",1155,0)
 ;
"RTN","SAMIUR2",1156,0)
 quit zcell ; end of ppi $$WORKPAT^SAMIUR2
"RTN","SAMIUR2",1157,0)
 ;
"RTN","SAMIUR2",1158,0)
 ;
"RTN","SAMIUR2",1159,0)
 ;
"RTN","SAMIUR2",1160,0)
 ;@section 5 unused subroutines
"RTN","SAMIUR2",1161,0)
 ;
"RTN","SAMIUR2",1162,0)
 ;
"RTN","SAMIUR2",1163,0)
 ;
"RTN","SAMIUR2",1164,0)
EPAT(ien,dfn,SAMIPATS) ; patient name w/nav to enrollment
"RTN","SAMIUR2",1165,0)
 ;
"RTN","SAMIUR2",1166,0)
 ;;private;procedure;clean;silent;sac
"RTN","SAMIUR2",1167,0)
 ;@called-by none
"RTN","SAMIUR2",1168,0)
 ;@calls none
"RTN","SAMIUR2",1169,0)
 ;
"RTN","SAMIUR2",1170,0)
 quit  ; end of $$EPAT
"RTN","SAMIUR2",1171,0)
 ;
"RTN","SAMIUR2",1172,0)
 ;
"RTN","SAMIUR2",1173,0)
 ;
"RTN","SAMIUR2",1174,0)
ETHNCTY(zdt,dfn,SAMIPATS) ; ethnicity
"RTN","SAMIUR2",1175,0)
 ;
"RTN","SAMIUR2",1176,0)
 ;;private;function;clean;silent;sac
"RTN","SAMIUR2",1177,0)
 ;@called-by none
"RTN","SAMIUR2",1178,0)
 ;@calls none
"RTN","SAMIUR2",1179,0)
 ;
"RTN","SAMIUR2",1180,0)
 quit "ethnicity" ; end of $$ETHNCTY
"RTN","SAMIUR2",1181,0)
 ;
"RTN","SAMIUR2",1182,0)
 ;
"RTN","SAMIUR2",1183,0)
 ;
"RTN","SAMIUR2",1184,0)
RACE(zdt,dfn,SAMIPATS) ; race
"RTN","SAMIUR2",1185,0)
 ;
"RTN","SAMIUR2",1186,0)
 ;;private;function;clean;silent;sac
"RTN","SAMIUR2",1187,0)
 ;@called-by none [call commented out in RPTTBL]
"RTN","SAMIUR2",1188,0)
 ;@calls
"RTN","SAMIUR2",1189,0)
 ; $$setroot^%wd
"RTN","SAMIUR2",1190,0)
 ;
"RTN","SAMIUR2",1191,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",1192,0)
 new race set race=$get(@root@(dfn,"race"))
"RTN","SAMIUR2",1193,0)
 ;
"RTN","SAMIUR2",1194,0)
 quit race ; end of $$RACE
"RTN","SAMIUR2",1195,0)
 ;
"RTN","SAMIUR2",1196,0)
 ;
"RTN","SAMIUR2",1197,0)
 ;
"RTN","SAMIUR2",1198,0)
STATUS(zdt,dfn,SAMIPATS) ; patient status
"RTN","SAMIUR2",1199,0)
 ;
"RTN","SAMIUR2",1200,0)
 ;;private;function;clean;silent;sac
"RTN","SAMIUR2",1201,0)
 ;@called-by none
"RTN","SAMIUR2",1202,0)
 ;@calls
"RTN","SAMIUR2",1203,0)
 ; $$setroot^%wd
"RTN","SAMIUR2",1204,0)
 ;
"RTN","SAMIUR2",1205,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",1206,0)
 new sid set sid=$get(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",1207,0)
 new siform set siform=$get(SAMIPATS(zdt,dfn,"siform"))
"RTN","SAMIUR2",1208,0)
 new vals set vals=$name(@root@("graph",sid,siform))
"RTN","SAMIUR2",1209,0)
 new stat set stat=$get(@vals@("sistatus"))
"RTN","SAMIUR2",1210,0)
 ;
"RTN","SAMIUR2",1211,0)
 quit stat ; end of $$STATUS
"RTN","SAMIUR2",1212,0)
 ;
"RTN","SAMIUR2",1213,0)
 ;
"RTN","SAMIUR2",1214,0)
 ;
"RTN","SAMIUR2",1215,0)
WSVALS(RTN,FILTER) ; display form values from graph
"RTN","SAMIUR2",1216,0)
 ;
"RTN","SAMIUR2",1217,0)
 ;;web service;procedure;clean;silent;sac
"RTN","SAMIUR2",1218,0)
 ;@called-by none
"RTN","SAMIUR2",1219,0)
 ;@calls
"RTN","SAMIUR2",1220,0)
 ; $$setroot^%wd
"RTN","SAMIUR2",1221,0)
 ; wsGtree^SYNVPR
"RTN","SAMIUR2",1222,0)
 ;
"RTN","SAMIUR2",1223,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",1224,0)
 new sid set sid=$get(FILTER("sid"))
"RTN","SAMIUR2",1225,0)
 if sid="" set sid=$get(FILTER("studyid"))
"RTN","SAMIUR2",1226,0)
 quit:sid=""
"RTN","SAMIUR2",1227,0)
 ;
"RTN","SAMIUR2",1228,0)
 new zform set zform=$get(FILTER("form"))
"RTN","SAMIUR2",1229,0)
 new groot
"RTN","SAMIUR2",1230,0)
 if zform="" set groot=$name(@root@("graph",sid))
"RTN","SAMIUR2",1231,0)
 else  set groot=$name(@root@("graph",sid,zform))
"RTN","SAMIUR2",1232,0)
 set FILTER("root")=$extract(groot,2,$length(groot))
"RTN","SAMIUR2",1233,0)
 ;
"RTN","SAMIUR2",1234,0)
 do wsGtree^SYNVPR(.RTN,.FILTER)
"RTN","SAMIUR2",1235,0)
 ;
"RTN","SAMIUR2",1236,0)
 quit  ; end of ws WSVALS^SAMIUR2
"RTN","SAMIUR2",1237,0)
 ;
"RTN","SAMIUR2",1238,0)
 ;
"RTN","SAMIUR2",1239,0)
 ;
"RTN","SAMIUR2",1240,0)
EOR ; end of routine SAMIUR2
"RTN","SAMIURUL")
0^64^B98717
"RTN","SAMIURUL",1,0)
SAMIURUL ;ven/gpl - user reports log ;2021-08-11T21:15Z
"RTN","SAMIURUL",2,0)
 ;;18.0;SAMI;**12**;2020-01;Build 1
"RTN","SAMIURUL",3,0)
 ;;18.12
"RTN","SAMIURUL",4,0)
 ;
"RTN","SAMIURUL",5,0)
 ; SAMIURUL contains the development log & module documentation for
"RTN","SAMIURUL",6,0)
 ; the VAPALS-ELCAP user-reports routines SAMIUR & SAMIUR2.
"RTN","SAMIURUL",7,0)
 ;
"RTN","SAMIURUL",8,0)
 quit  ; no entry from top
"RTN","SAMIURUL",9,0)
 ;
"RTN","SAMIURUL",10,0)
 ;
"RTN","SAMIURUL",11,0)
 ;
"RTN","SAMIURUL",12,0)
 ;@section 0 primary development
"RTN","SAMIURUL",13,0)
 ;
"RTN","SAMIURUL",14,0)
 ;
"RTN","SAMIURUL",15,0)
 ;
"RTN","SAMIURUL",16,0)
 ;@routine-credits
"RTN","SAMIURUL",17,0)
 ;@dev-main Frederick D. S. Marshall (toad)
"RTN","SAMIURUL",18,0)
 ; toad@vistaexpertise.net
"RTN","SAMIURUL",19,0)
 ;@dev-org-main Vista Expertise Network (ven)
"RTN","SAMIURUL",20,0)
 ; http://vistaexpertise.net
"RTN","SAMIURUL",21,0)
 ;@copyright 2021, mcglk & toad, all rights reserved
"RTN","SAMIURUL",22,0)
 ;@license see routine SAMIUL
"RTN","SAMIURUL",23,0)
 ;
"RTN","SAMIURUL",24,0)
 ;@last-update 2021-08-11T21:15Z
"RTN","SAMIURUL",25,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMIURUL",26,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMIURUL",27,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMIURUL",28,0)
 ;@version 18.12
"RTN","SAMIURUL",29,0)
 ;@release-date 2020-01
"RTN","SAMIURUL",30,0)
 ;@patch-list **12**
"RTN","SAMIURUL",31,0)
 ;
"RTN","SAMIURUL",32,0)
 ;@dev-add Kenneth McGlothlen (mcglk)
"RTN","SAMIURUL",33,0)
 ; mcglk@vistaexpertise.net
"RTN","SAMIURUL",34,0)
 ;
"RTN","SAMIURUL",35,0)
 ;@module-credits
"RTN","SAMIURUL",36,0)
 ;@project VA Partnership to Increase Access to Lung Screening
"RTN","SAMIURUL",37,0)
 ; (VA-PALS)
"RTN","SAMIURUL",38,0)
 ; http://va-pals.org/
"RTN","SAMIURUL",39,0)
 ;@funding 2017/2021, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMIURUL",40,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMIURUL",41,0)
 ;@partner-org Veterans Affairs Office of Rural health
"RTN","SAMIURUL",42,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMIURUL",43,0)
 ;@partner-org International Early Lung Cancer Action Program (I-ELCAP)
"RTN","SAMIURUL",44,0)
 ; http://ielcap.com/
"RTN","SAMIURUL",45,0)
 ;@partner-org Paraxial Technologies (par)
"RTN","SAMIURUL",46,0)
 ; http://paraxialtech.com/
"RTN","SAMIURUL",47,0)
 ;@partner-org Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMIURUL",48,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMIURUL",49,0)
 ;
"RTN","SAMIURUL",50,0)
 ;@module-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMIURUL",51,0)
 ;
"RTN","SAMIURUL",52,0)
 ; 2020-02-10/12 ven/gpl 18.0-t4 d543f7bb,f9869dfb,0e4d8b9a,5e67489
"RTN","SAMIURUL",53,0)
 ;  SAMIUR,SAMIUR2 1st version of revised user reports, progress on
"RTN","SAMIURUL",54,0)
 ; user reports, fixed a bug in enrollment report, add rural/urban &
"RTN","SAMIURUL",55,0)
 ; compute.
"RTN","SAMIURUL",56,0)
 ;
"RTN","SAMIURUL",57,0)
 ; 2020-02-18 ven/lgc 18.0-t4 76874314
"RTN","SAMIURUL",58,0)
 ;  SAMIUR update recently edited routines.
"RTN","SAMIURUL",59,0)
 ;
"RTN","SAMIURUL",60,0)
 ; 2020-03-10/12 ven/gpl 18.0-t4 8de06b06,4ad52d64
"RTN","SAMIURUL",61,0)
 ;  SAMIUR user report date filtering, fix end date logic in UR.
"RTN","SAMIURUL",62,0)
 ;
"RTN","SAMIURUL",63,0)
 ; 2019-03-24/28 ven/gpl 18.0-t4 1fd4a4c,0cebb36
"RTN","SAMIURUL",64,0)
 ;  SAMIUR2 revise incomplete form report, remove ethnicity from
"RTN","SAMIURUL",65,0)
 ; enrollment report (we can't get it).
"RTN","SAMIURUL",66,0)
 ;
"RTN","SAMIURUL",67,0)
 ; 2020-04-16/23 ven/lgc 18.0-t4 e54b76d1b,89bffd3b
"RTN","SAMIURUL",68,0)
 ;  SAMIUR SAMIFRM2 > SAMIFORM, SAMISUB2 > LOAD.
"RTN","SAMIURUL",69,0)
 ;
"RTN","SAMIURUL",70,0)
 ; 2019-05-08 ven/lgc 18.0 2172e51
"RTN","SAMIURUL",71,0)
 ;  SAMIUR2 remove blank last line.
"RTN","SAMIURUL",72,0)
 ;
"RTN","SAMIURUL",73,0)
 ; 2019-06-21 par/dom 18.0 c6a4a57 VAP-352
"RTN","SAMIURUL",74,0)
 ;  SAMIUR2 proper spelling of "follow up."
"RTN","SAMIURUL",75,0)
 ;
"RTN","SAMIURUL",76,0)
 ; 2019-08-03/04 ven/gpl 18.0 ffc94f6,d03557d,cd865e2b VPA-438
"RTN","SAMIURUL",77,0)
 ;  SAMIUR requested changes to followup report.
"RTN","SAMIURUL",78,0)
 ;  SAMIUR2 fix smoking status on enrollment report, fix change log
"RTN","SAMIURUL",79,0)
 ; display, add pack years at intake to enrollment report, add
"RTN","SAMIURUL",80,0)
 ; requested changes to followup report.
"RTN","SAMIURUL",81,0)
 ;
"RTN","SAMIURUL",82,0)
 ; 2019-09-26 ven/gpl 18.0 92b12324 VAP-420
"RTN","SAMIURUL",83,0)
 ;  SAMIUR add smoking history.
"RTN","SAMIURUL",84,0)
 ;  SAMIUR2 smoking history, new cummulative packyear processing.
"RTN","SAMIURUL",85,0)
 ;
"RTN","SAMIURUL",86,0)
 ; 2019-10-01 par/dom 18.0 4caf1a9 VAP-344
"RTN","SAMIURUL",87,0)
 ;  SAMIUR2 make capitalization consistent.
"RTN","SAMIURUL",88,0)
 ;
"RTN","SAMIURUL",89,0)
 ; 2020-01-01/05 ven/arc 18.0 399f8547,62e3200f
"RTN","SAMIURUL",90,0)
 ;  SAMIUR unmatched participant processing.
"RTN","SAMIURUL",91,0)
 ;  SAMIUR2 add unmatched patient processing.
"RTN","SAMIURUL",92,0)
 ;
"RTN","SAMIURUL",93,0)
 ; 2020-01-10 ven/gpl 18.0 1590577
"RTN","SAMIURUL",94,0)
 ;  SAMIUR2 fix return on RACE^SAMIUR2 for cache.
"RTN","SAMIURUL",95,0)
 ;
"RTN","SAMIURUL",96,0)
 ; 2020-04-29/05-13 ven/gpl 18.5 e8b8ea2d,61c7d208
"RTN","SAMIURUL",97,0)
 ;  SAMIUR fixes for reports, worklist functionality.
"RTN","SAMIURUL",98,0)
 ;
"RTN","SAMIURUL",99,0)
 ; 2020-05-13/14 ven/gpl 18.5 61c7d20,b05df41
"RTN","SAMIURUL",100,0)
 ;  SAMIUR2 add worklist functionality, fix gender & dob detection on
"RTN","SAMIURUL",101,0)
 ; reports.
"RTN","SAMIURUL",102,0)
 ;
"RTN","SAMIURUL",103,0)
 ; 2021-03-22/23 ven/gpl 18.10 256efe63,ba81b86a2
"RTN","SAMIURUL",104,0)
 ;  SAMIUR sort all reports by name, added row totals to reports.
"RTN","SAMIURUL",105,0)
 ;
"RTN","SAMIURUL",106,0)
 ; 2021-03-23 ven/toad 18.10 96f461d0,af86e0eb
"RTN","SAMIURUL",107,0)
 ;  SAMIUR add version info & dev log, lt refactor, fix XINDEX
"RTN","SAMIURUL",108,0)
 ; errors.
"RTN","SAMIURUL",109,0)
 ;
"RTN","SAMIURUL",110,0)
 ; 2021-03-29 ven/gpl 18.11 e809f2a2
"RTN","SAMIURUL",111,0)
 ;  SAMIUR prevent crash when reports have no matches: in WSREPORT
"RTN","SAMIURUL",112,0)
 ; set SRT="" and uncomment zwrite SRT; in WKLIST add 2 commented-out
"RTN","SAMIURUL",113,0)
 ; debugging lines.
"RTN","SAMIURUL",114,0)
 ;
"RTN","SAMIURUL",115,0)
 ; 2021-03-30 ven/toad 18.11 7b14bb2
"RTN","SAMIURUL",116,0)
 ;  SAMIUR bump version, date, log; in WSREPORT comment zwrite SRT.
"RTN","SAMIURUL",117,0)
 ;
"RTN","SAMIURUL",118,0)
 ; 2021-03-31 ven/gpl 18.11 66d89cd
"RTN","SAMIURUL",119,0)
 ;  SAMIUR sort on all uppercase names for reports
"RTN","SAMIURUL",120,0)
 ;
"RTN","SAMIURUL",121,0)
 ; 2021-04-13 ven/gpl 18.11 a12765b,f09ffef,fb399ab
"RTN","SAMIURUL",122,0)
 ;  SAMIUR inactive report created.
"RTN","SAMIURUL",123,0)
 ;  SAMIUR2 in RPTTBL,GENDER create inactive report, move last exam
"RTN","SAMIURUL",124,0)
 ; column on followup report, fix gender being blank in reports.
"RTN","SAMIURUL",125,0)
 ;
"RTN","SAMIURUL",126,0)
 ; 2021-05-20/25 ven/mcglk&toad 18.11 43a4557c,70fc6ba3,129e96b1,
"RTN","SAMIURUL",127,0)
 ; cee2bf17
"RTN","SAMIURUL",128,0)
 ;  SAMIUR annotate, lt refactor, bump version.
"RTN","SAMIURUL",129,0)
 ;  SAMIUR2 passim hdr comments, chg log, annotate, refactor, bump
"RTN","SAMIURUL",130,0)
 ; version.
"RTN","SAMIURUL",131,0)
 ;
"RTN","SAMIURUL",132,0)
 ; 2021-05-29 ven/gpl 18.12-t2 e6fd5730,a3d6f9a0
"RTN","SAMIURUL",133,0)
 ;  SAMIUR,SAMIUR2 ssn params & matching report, update unmatched
"RTN","SAMIURUL",134,0)
 ; report headings.
"RTN","SAMIURUL",135,0)
 ;
"RTN","SAMIURUL",136,0)
 ; 2021-06-15 ven/gpl 18.12-t2 7e481426
"RTN","SAMIURUL",137,0)
 ;  SAMIUR add site to editperson navigation.
"RTN","SAMIURUL",138,0)
 ;
"RTN","SAMIURUL",139,0)
 ; 2021-06-28 ven/gpl 18.12-t2 df0aaea1,1137e2bb
"RTN","SAMIURUL",140,0)
 ;  SAMIUR change definition of inactive to not marked active, change
"RTN","SAMIURUL",141,0)
 ; definition of active to marked active.
"RTN","SAMIURUL",142,0)
 ;
"RTN","SAMIURUL",143,0)
 ; 2021-07-06 ven/mcglk&toad&gpl 18.12-t2 cbf7e46b,2d642aa4,
"RTN","SAMIURUL",144,0)
 ; b248664b
"RTN","SAMIURUL",145,0)
 ;  SAMIURUL new routine for dev log.
"RTN","SAMIURUL",146,0)
 ;  SAMIUR,SAMIUR2,SAMIURUL move dev log & module docs to SAMIURUL,
"RTN","SAMIURUL",147,0)
 ; bump version & dates.
"RTN","SAMIURUL",148,0)
 ;  SAMIUR in SELECT r/inactive w/status, test for active instead of
"RTN","SAMIURUL",149,0)
 ; inactive.
"RTN","SAMIURUL",150,0)
 ;
"RTN","SAMIURUL",151,0)
 ; 2021-07-12 ven/gpl 18.12-t3 60f4bb05,27c40485,d35bcb46
"RTN","SAMIURUL",152,0)
 ;  SAMIUR in WSREPORT,SORT add contact date & entry to missingct
"RTN","SAMIURUL",153,0)
 ; report.
"RTN","SAMIURUL",154,0)
 ;  SAMIUR2 add contact date & entry to missingct report; add
"RTN","SAMIURUL",155,0)
 ; inactive date reason & comment to inactive report; chg inactive
"RTN","SAMIURUL",156,0)
 ; date to date of death.
"RTN","SAMIURUL",157,0)
 ;
"RTN","SAMIURUL",158,0)
 ; 2021-08-01 ven/gpl 18.12 5bd7c627
"RTN","SAMIURUL",159,0)
 ;  SAMIUR set intake form to incomplete on creation: in SELECT if
"RTN","SAMIURUL",160,0)
 ; type="incomplete" ensure default status is incomplete.
"RTN","SAMIURUL",161,0)
 ;
"RTN","SAMIURUL",162,0)
 ; 2021-08-11 ven/gpl 18.12 4d4f0fc3
"RTN","SAMIURUL",163,0)
 ;  SAMIUR,SAMIUR2 add sorting to tables used for reports
"RTN","SAMIURUL",164,0)
 ;  SAMIUR in WSREPORT,NUHREF,WKLIST.
"RTN","SAMIURUL",165,0)
 ;  SAMIUR2 in TDDT,BLINEDT,DOB,FUDATE,LASTEXM,INACTDT,LDOC,STUDYDT
"RTN","SAMIURUL",166,0)
 ;
"RTN","SAMIURUL",167,0)
 ;
"RTN","SAMIURUL",168,0)
 ;@contents
"RTN","SAMIURUL",169,0)
 ; SAMIUR user reports
"RTN","SAMIURUL",170,0)
 ; SAMIUR2 user reports cont
"RTN","SAMIURUL",171,0)
 ; SAMIURUL user reports log
"RTN","SAMIURUL",172,0)
 ;
"RTN","SAMIURUL",173,0)
 ; SAMIUR1 [to be added]
"RTN","SAMIURUL",174,0)
 ;
"RTN","SAMIURUL",175,0)
 ;
"RTN","SAMIURUL",176,0)
 ;
"RTN","SAMIURUL",177,0)
EOR ; end of SAMIURUL
"RTN","SAMIUT7")
0^65^B20430771
"RTN","SAMIUT7",1,0)
SAMIUT7 ;ven/lgc - UNIT TEST for SAMIHL7 ;Oct 04, 2019@20:42
"RTN","SAMIUT7",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUT7",3,0)
 ;
"RTN","SAMIUT7",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUT7",5,0)
 ;
"RTN","SAMIUT7",6,0)
 ; @section 0 primary development
"RTN","SAMIUT7",7,0)
 ;
"RTN","SAMIUT7",8,0)
 ; @routine-credits
"RTN","SAMIUT7",9,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUT7",10,0)
 ;  larry@fiscientific.com
"RTN","SAMIUT7",11,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUT7",12,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUT7",13,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUT7",14,0)
 ; @license: Apache 2.0
"RTN","SAMIUT7",15,0)
 ;  https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIUT7",16,0)
 ;
"RTN","SAMIUT7",17,0)
 ; @application: SAMI
"RTN","SAMIUT7",18,0)
 ; @version: 18.0
"RTN","SAMIUT7",19,0)
 ; @patch-list: none yet
"RTN","SAMIUT7",20,0)
 ;
"RTN","SAMIUT7",21,0)
 ; @to-do
"RTN","SAMIUT7",22,0)
 ;
"RTN","SAMIUT7",23,0)
 ; @section 1 code
"RTN","SAMIUT7",24,0)
 ;
"RTN","SAMIUT7",25,0)
START i $t(^%ut)="" w !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","SAMIUT7",26,0)
 d EN^%ut($T(+0),2)
"RTN","SAMIUT7",27,0)
 q
"RTN","SAMIUT7",28,0)
 ;
"RTN","SAMIUT7",29,0)
STARTUP n utsuccess
"RTN","SAMIUT7",30,0)
 q
"RTN","SAMIUT7",31,0)
 ;
"RTN","SAMIUT7",32,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUT7",33,0)
 k utsuccess
"RTN","SAMIUT7",34,0)
 q
"RTN","SAMIUT7",35,0)
 ;
"RTN","SAMIUT7",36,0)
 ;
"RTN","SAMIUT7",37,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUT7",38,0)
 D ^SAMIHL7
"RTN","SAMIUT7",39,0)
 d SUCCEED^%ut
"RTN","SAMIUT7",40,0)
 q
"RTN","SAMIUT7",41,0)
 ;
"RTN","SAMIUT7",42,0)
UTUPDT ; @TEST - Update patient-lookup graph
"RTN","SAMIUT7",43,0)
 ;UPDTPTL^SAMIHL7
"RTN","SAMIUT7",44,0)
 ;
"RTN","SAMIUT7",45,0)
 ; keep track of whether patient-lookup existed before this
"RTN","SAMIUT7",46,0)
 ;   unit test.  If not, delete the graph after testing
"RTN","SAMIUT7",47,0)
 new dien s dien=$order(^%wd(17.040801,"B","patient-lookup",0))
"RTN","SAMIUT7",48,0)
 ; 
"RTN","SAMIUT7",49,0)
 new root s root=$$setroot^%wd("patient-lookup")
"RTN","SAMIUT7",50,0)
 new ptien,newpat set newpat=0
"RTN","SAMIUT7",51,0)
 ;
"RTN","SAMIUT7",52,0)
 ;Build fields variable
"RTN","SAMIUT7",53,0)
 new field,cnt,fields
"RTN","SAMIUT7",54,0)
 set cnt=0
"RTN","SAMIUT7",55,0)
 for  set cnt=cnt+1,field=$Text(FIELDS+cnt) quit:(field["***END***")  do
"RTN","SAMIUT7",56,0)
 . set fields($piece($piece(field,";;",2),"^"))=$piece($piece(field,";;",2),"^",2)
"RTN","SAMIUT7",57,0)
 ;
"RTN","SAMIUT7",58,0)
 D UPDTPTL^SAMIHL7(.fields)
"RTN","SAMIUT7",59,0)
 ;
"RTN","SAMIUT7",60,0)
 ; Now look for entry in patient-lookup graph
"RTN","SAMIUT7",61,0)
 ;
"RTN","SAMIUT7",62,0)
 new ptien set ptien=$order(@root@("dfn",$get(fields("dfn")),0))
"RTN","SAMIUT7",63,0)
 set utsuccess=(ptien>0)
"RTN","SAMIUT7",64,0)
 ;if utsuccess write !,"UPDATE:A patient-lookup graph- ok"
"RTN","SAMIUT7",65,0)
 do CHKEQ^%ut(utsuccess,1,"UPDATE:A patient-lookup graph failed!")
"RTN","SAMIUT7",66,0)
 new ss s ss="",utsuccess=1
"RTN","SAMIUT7",67,0)
 for  set ss=$order(fields(ss)) quit:(ss="")  d  quit:'utsuccess
"RTN","SAMIUT7",68,0)
 . if '($data(@root@(ptien,ss))) set utsuccess=0 quit
"RTN","SAMIUT7",69,0)
 . if '((@root@(ptien,ss))=fields(ss)) s utsuccess=0
"RTN","SAMIUT7",70,0)
 ;if utsuccess write !,"UPDATE:B patient-lookup graph- ok"
"RTN","SAMIUT7",71,0)
 do CHKEQ^%ut(utsuccess,1,"UPDATE:B patient-lookup graph failed!")
"RTN","SAMIUT7",72,0)
 set utsuccess=1
"RTN","SAMIUT7",73,0)
 if '$order(@root@("dfn",fields("dfn"),0)) set utsuccess=0
"RTN","SAMIUT7",74,0)
 if '$order(@root@("ssn",fields("ssn"),0)) set utsuccess=0
"RTN","SAMIUT7",75,0)
 if '$order(@root@("icn",fields("icn"),0)) set utsuccess=0
"RTN","SAMIUT7",76,0)
 if '$order(@root@("last5",fields("last5"),0)) set utsuccess=0
"RTN","SAMIUT7",77,0)
 if '$order(@root@("saminame",fields("saminame"),0)) set utsuccess=0
"RTN","SAMIUT7",78,0)
 ;if utsuccess write !,"UPDATE:C patient-lookup graph- ok"
"RTN","SAMIUT7",79,0)
 do CHKEQ^%ut(utsuccess,1,"UPDATE:C patient-lookup graph failed!")
"RTN","SAMIUT7",80,0)
 ;
"RTN","SAMIUT7",81,0)
 ; Now change some fields and update again
"RTN","SAMIUT7",82,0)
 set fields("saminame")="Noname,HaveI"
"RTN","SAMIUT7",83,0)
 set fields("last5")="H0000"
"RTN","SAMIUT7",84,0)
 ;
"RTN","SAMIUT7",85,0)
 D UPDTPTL^SAMIHL7(.fields)
"RTN","SAMIUT7",86,0)
 set utsuccess=1
"RTN","SAMIUT7",87,0)
 if '(@root@(ptien,"saminame")=fields("saminame")) set utsuccess=0
"RTN","SAMIUT7",88,0)
 if '($order(@root@("last5","H0000",0))=ptien) set utsuccess=0
"RTN","SAMIUT7",89,0)
 do CHKEQ^%ut(utsuccess,1,"UPDATE:D patient-lookup graph failed!")
"RTN","SAMIUT7",90,0)
 ;
"RTN","SAMIUT7",91,0)
 ; Now delete entry in patient-lookup graph
"RTN","SAMIUT7",92,0)
 ;
"RTN","SAMIUT7",93,0)
 kill @root@(ptien)
"RTN","SAMIUT7",94,0)
 kill @root@("dfn",fields("dfn"),ptien)
"RTN","SAMIUT7",95,0)
 kill @root@("ssn",fields("ssn"),ptien)
"RTN","SAMIUT7",96,0)
 kill @root@("icn",fields("icn"),ptien)
"RTN","SAMIUT7",97,0)
 kill @root@("last5",fields("last5"),ptien)
"RTN","SAMIUT7",98,0)
 kill @root@("name",fields("saminame"),ptien)
"RTN","SAMIUT7",99,0)
 kill @root@("name",$$UP^XLFSTR(fields("saminame")),ptien)
"RTN","SAMIUT7",100,0)
 kill @root@("sinamel",fields("sinamel"),ptien)
"RTN","SAMIUT7",101,0)
 kill @root@("sinamef",fields("sinamef"),ptien)
"RTN","SAMIUT7",102,0)
 quit
"RTN","SAMIUT7",103,0)
 ;
"RTN","SAMIUT7",104,0)
 ;
"RTN","SAMIUT7",105,0)
FIELDS ;;
"RTN","SAMIUT7",106,0)
 ;;active duty=N
"RTN","SAMIUT7",107,0)
 ;;address1^1234 LOOPdLOOP DRIVE
"RTN","SAMIUT7",108,0)
 ;;address2^second house
"RTN","SAMIUT7",109,0)
 ;;address3^on the LEFT
"RTN","SAMIUT7",110,0)
 ;;age^99
"RTN","SAMIUT7",111,0)
 ;;city^Looptown
"RTN","SAMIUT7",112,0)
 ;;county^CIRCLE
"RTN","SAMIUT7",113,0)
 ;;dfn^987654321
"RTN","SAMIUT7",114,0)
 ;;gender^M
"RTN","SAMIUT7",115,0)
 ;;icn^87654321
"RTN","SAMIUT7",116,0)
 ;;last5^N0000
"RTN","SAMIUT7",117,0)
 ;;marital status^not
"RTN","SAMIUT7",118,0)
 ;;phon^555-555-5555
"RTN","SAMIUT7",119,0)
 ;;saminame^Noname,Ihave
"RTN","SAMIUT7",120,0)
 ;;sbdob^2018-10-03
"RTN","SAMIUT7",121,0)
 ;;sensitive patient^0
"RTN","SAMIUT7",122,0)
 ;;sex^M
"RTN","SAMIUT7",123,0)
 ;;sinamef^Ihave
"RTN","SAMIUT7",124,0)
 ;;sinamel^Noname
"RTN","SAMIUT7",125,0)
 ;;ssn^999990000
"RTN","SAMIUT7",126,0)
 ;;state^WA
"RTN","SAMIUT7",127,0)
 ;;zip^00000
"RTN","SAMIUT7",128,0)
 ;;***END***
"RTN","SAMIUT7",129,0)
 ;
"RTN","SAMIUT7",130,0)
EOR ;End of routine SAMIUT7
"RTN","SAMIUT7A")
0^66^B4445311
"RTN","SAMIUT7A",1,0)
SAMIUT7A ;ven/lgc - UNIT TEST for SAMIADT ;Nov 25, 2019@17:59
"RTN","SAMIUT7A",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUT7A",3,0)
 ;
"RTN","SAMIUT7A",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUT7A",5,0)
 ;
"RTN","SAMIUT7A",6,0)
 ; @section 0 primary development
"RTN","SAMIUT7A",7,0)
 ;
"RTN","SAMIUT7A",8,0)
 ; @routine-credits
"RTN","SAMIUT7A",9,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUT7A",10,0)
 ;  larry@fiscientific.com
"RTN","SAMIUT7A",11,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUT7A",12,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUT7A",13,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUT7A",14,0)
 ; @license: Apache 2.0
"RTN","SAMIUT7A",15,0)
 ;  https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIUT7A",16,0)
 ;
"RTN","SAMIUT7A",17,0)
 ; @application: SAMI
"RTN","SAMIUT7A",18,0)
 ; @version: 18.0
"RTN","SAMIUT7A",19,0)
 ; @patch-list: none yet
"RTN","SAMIUT7A",20,0)
 ;
"RTN","SAMIUT7A",21,0)
 ; @to-do
"RTN","SAMIUT7A",22,0)
 ;
"RTN","SAMIUT7A",23,0)
 ; @section 1 code
"RTN","SAMIUT7A",24,0)
 ;
"RTN","SAMIUT7A",25,0)
START i $t(^%ut)="" w !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","SAMIUT7A",26,0)
 d EN^%ut($T(+0),2)
"RTN","SAMIUT7A",27,0)
 q
"RTN","SAMIUT7A",28,0)
 ;
"RTN","SAMIUT7A",29,0)
STARTUP n utsuccess
"RTN","SAMIUT7A",30,0)
 q
"RTN","SAMIUT7A",31,0)
 ;
"RTN","SAMIUT7A",32,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUT7A",33,0)
 k utsuccess
"RTN","SAMIUT7A",34,0)
 q
"RTN","SAMIUT7A",35,0)
 ;
"RTN","SAMIUT7A",36,0)
 ;
"RTN","SAMIUT7A",37,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUT7A",38,0)
 D ^SAMIADT
"RTN","SAMIUT7A",39,0)
 d SUCCEED^%ut
"RTN","SAMIUT7A",40,0)
 q
"RTN","SAMIUT7A",41,0)
 ;
"RTN","SAMIUT7A",42,0)
UTEN ; @TEST - Saving and parsing an ADT HL7 message
"RTN","SAMIUT7A",43,0)
 ;EN^SAMIADT
"RTN","SAMIUT7A",44,0)
 ;
"RTN","SAMIUT7A",45,0)
 ;Find a message in 772 and 773 and build variables expected
"RTN","SAMIUT7A",46,0)
 ;  when trapping an incoming message
"RTN","SAMIUT7A",47,0)
 ;
"RTN","SAMIUT7A",48,0)
 new ok,HLMTIENS,HLMTIEN,HLNEXT,HLNODE,HLQUIT,HL
"RTN","SAMIUT7A",49,0)
 set HLMTIENS="A",ok=0,HLNODE="",HLQUIT="",HL("MTP")=1
"RTN","SAMIUT7A",50,0)
 for  set HLMTIENS=$order(^HLMA(HLMTIENS),-1) do  quit:ok
"RTN","SAMIUT7A",51,0)
 . set HL("FS")=$E(^HLMA(HLMTIENS,"MSH",1,0),4,4)
"RTN","SAMIUT7A",52,0)
 . set:'($piece(^HLMA(HLMTIENS,"MSH",1,0),HL("FS"),9)["ADT") ok=1
"RTN","SAMIUT7A",53,0)
 ;
"RTN","SAMIUT7A",54,0)
 set HLMTIEN=+^HLMA(HLMTIENS,0)
"RTN","SAMIUT7A",55,0)
 set HL("ECH")=$piece(^HLMA(HLMTIENS,"MSH",1,0),HL("FS"),2)
"RTN","SAMIUT7A",56,0)
 set HLNEXT="D HLNEXT^HLCSUTL"
"RTN","SAMIUT7A",57,0)
 ;
"RTN","SAMIUT7A",58,0)
 ; NOTE: existence of %ut during unit testing prevents
"RTN","SAMIUT7A",59,0)
 ;   the patient-lookup graph actually being updated in SAMIHL7
"RTN","SAMIUT7A",60,0)
 D EN^SAMIADT
"RTN","SAMIUT7A",61,0)
 ;
"RTN","SAMIUT7A",62,0)
 ; Now check ^KBAP("SAMIADT" global for message contents
"RTN","SAMIUT7A",63,0)
 new node s node=$na(^KBAP("SAMITIU",0)),utsuccess=1
"RTN","SAMIUT7A",64,0)
 for  X HLNEXT Q:HLQUIT'>0  do  quit:HLNODE=""  quit:'utsuccess
"RTN","SAMIUT7A",65,0)
 . set node=$Q(@node)
"RTN","SAMIUT7A",66,0)
 . set utsuccess=(@node=HLNODE)
"RTN","SAMIUT7A",67,0)
 do CHKEQ^%ut(utsuccess,1,"Move HL7 message to ^KBAP global failed")
"RTN","SAMIUT7A",68,0)
 quit
"RTN","SAMIUT7A",69,0)
 ;
"RTN","SAMIUT7A",70,0)
 ;
"RTN","SAMIUT7A",71,0)
EOR ;End of routine SAMIUT7A
"RTN","SAMIUT7T")
0^67^B4447347
"RTN","SAMIUT7T",1,0)
SAMIUT7T ;ven/lgc - UNIT TEST for SAMITIU ;Nov 25, 2019@18:00
"RTN","SAMIUT7T",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUT7T",3,0)
 ;
"RTN","SAMIUT7T",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUT7T",5,0)
 ;
"RTN","SAMIUT7T",6,0)
 ; @section 0 primary development
"RTN","SAMIUT7T",7,0)
 ;
"RTN","SAMIUT7T",8,0)
 ; @routine-credits
"RTN","SAMIUT7T",9,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUT7T",10,0)
 ;  larry@fiscientific.com
"RTN","SAMIUT7T",11,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUT7T",12,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUT7T",13,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUT7T",14,0)
 ; @license: Apache 2.0
"RTN","SAMIUT7T",15,0)
 ;  https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIUT7T",16,0)
 ;
"RTN","SAMIUT7T",17,0)
 ; @application: SAMI
"RTN","SAMIUT7T",18,0)
 ; @version: 18.0
"RTN","SAMIUT7T",19,0)
 ; @patch-list: none yet
"RTN","SAMIUT7T",20,0)
 ;
"RTN","SAMIUT7T",21,0)
 ; @to-do
"RTN","SAMIUT7T",22,0)
 ;
"RTN","SAMIUT7T",23,0)
 ; @section 1 code
"RTN","SAMIUT7T",24,0)
 ;
"RTN","SAMIUT7T",25,0)
START i $t(^%ut)="" w !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","SAMIUT7T",26,0)
 d EN^%ut($T(+0),2)
"RTN","SAMIUT7T",27,0)
 q
"RTN","SAMIUT7T",28,0)
 ;
"RTN","SAMIUT7T",29,0)
STARTUP n utsuccess
"RTN","SAMIUT7T",30,0)
 q
"RTN","SAMIUT7T",31,0)
 ;
"RTN","SAMIUT7T",32,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUT7T",33,0)
 k utsuccess
"RTN","SAMIUT7T",34,0)
 q
"RTN","SAMIUT7T",35,0)
 ;
"RTN","SAMIUT7T",36,0)
 ;
"RTN","SAMIUT7T",37,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUT7T",38,0)
 D ^SAMITIU
"RTN","SAMIUT7T",39,0)
 d SUCCEED^%ut
"RTN","SAMIUT7T",40,0)
 q
"RTN","SAMIUT7T",41,0)
 ;
"RTN","SAMIUT7T",42,0)
UTEN ; @TEST - Saving and parsing an HL7 message
"RTN","SAMIUT7T",43,0)
 ;EN^SAMITIU
"RTN","SAMIUT7T",44,0)
 ;
"RTN","SAMIUT7T",45,0)
 ;Find a message in 772 and 773 and build variables expected
"RTN","SAMIUT7T",46,0)
 ;  when trapping an incoming message
"RTN","SAMIUT7T",47,0)
 ;
"RTN","SAMIUT7T",48,0)
 new ok,HLMTIENS,HLMTIEN,HLNEXT,HLNODE,HLQUIT,HL
"RTN","SAMIUT7T",49,0)
 set HLMTIENS="A",ok=0,HLNODE="",HLQUIT="",HL("MTP")=1
"RTN","SAMIUT7T",50,0)
 for  set HLMTIENS=$order(^HLMA(HLMTIENS),-1) do  quit:ok
"RTN","SAMIUT7T",51,0)
 . set HL("FS")=$E(^HLMA(HLMTIENS,"MSH",1,0),4,4)
"RTN","SAMIUT7T",52,0)
 . set:'($piece(^HLMA(HLMTIENS,"MSH",1,0),HL("FS"),9)["ACK") ok=1
"RTN","SAMIUT7T",53,0)
 ;
"RTN","SAMIUT7T",54,0)
 set HLMTIEN=+^HLMA(HLMTIENS,0)
"RTN","SAMIUT7T",55,0)
 set HL("ECH")=$piece(^HLMA(HLMTIENS,"MSH",1,0),HL("FS"),2)
"RTN","SAMIUT7T",56,0)
 set HLNEXT="D HLNEXT^HLCSUTL"
"RTN","SAMIUT7T",57,0)
 ;
"RTN","SAMIUT7T",58,0)
 ; NOTE: existence of %ut during unit testing prevents
"RTN","SAMIUT7T",59,0)
 ;   the patient-lookup graph actually being updated in SAMIHL7
"RTN","SAMIUT7T",60,0)
 D EN^SAMITIU
"RTN","SAMIUT7T",61,0)
 ;
"RTN","SAMIUT7T",62,0)
 ; Now check ^KBAP("SAMITIU" global for message contents
"RTN","SAMIUT7T",63,0)
 new node s node=$na(^KBAP("SAMITIU",0)),utsuccess=1
"RTN","SAMIUT7T",64,0)
 for  X HLNEXT Q:HLQUIT'>0  do  quit:HLNODE=""  quit:'utsuccess
"RTN","SAMIUT7T",65,0)
 . set node=$Q(@node)
"RTN","SAMIUT7T",66,0)
 . set utsuccess=(@node=HLNODE)
"RTN","SAMIUT7T",67,0)
 do CHKEQ^%ut(utsuccess,1,"Move HL7 message to ^KBAP global failed")
"RTN","SAMIUT7T",68,0)
 quit
"RTN","SAMIUT7T",69,0)
 ;
"RTN","SAMIUT7T",70,0)
 ;
"RTN","SAMIUT7T",71,0)
EOR ;End of routine SAMIUT7T
"RTN","SAMIUTAD")
0^68^B53452969
"RTN","SAMIUTAD",1,0)
SAMIUTAD ;ven/lgc - Unit test for SAMIADMN ; 5/10/19 9:45am
"RTN","SAMIUTAD",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTAD",3,0)
 ;
"RTN","SAMIUTAD",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTAD",5,0)
 ;
"RTN","SAMIUTAD",6,0)
 ; @section 0 primary development
"RTN","SAMIUTAD",7,0)
 ;
"RTN","SAMIUTAD",8,0)
 ; @routine-credits
"RTN","SAMIUTAD",9,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUTAD",10,0)
 ;  larry@fiscientific.com
"RTN","SAMIUTAD",11,0)
 ; @additional-dev: Linda M. R. Yaw (lmry)
"RTN","SAMIUTAD",12,0)
 ;  linda.yaw@vistaexpertise.net
"RTN","SAMIUTAD",13,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUTAD",14,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUTAD",15,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUTAD",16,0)
 ; @license: see routine SAMIUL
"RTN","SAMIUTAD",17,0)
 ;
"RTN","SAMIUTAD",18,0)
 ; @last-updated: 2019-03-12T21:04Z
"RTN","SAMIUTAD",19,0)
 ; @application: SAMI
"RTN","SAMIUTAD",20,0)
 ; @version: 18.0
"RTN","SAMIUTAD",21,0)
 ; @patch-list: none yet
"RTN","SAMIUTAD",22,0)
 ;
"RTN","SAMIUTAD",23,0)
 ; @to-do
"RTN","SAMIUTAD",24,0)
 ;
"RTN","SAMIUTAD",25,0)
 ; @section 1 code
"RTN","SAMIUTAD",26,0)
 ;
"RTN","SAMIUTAD",27,0)
START if $text(^%ut)="" write !,"*** UNIT TEST NOT INSTALLED ***" quit
"RTN","SAMIUTAD",28,0)
 do EN^%ut($text(+0),2)
"RTN","SAMIUTAD",29,0)
 quit
"RTN","SAMIUTAD",30,0)
 ;
"RTN","SAMIUTAD",31,0)
 ;
"RTN","SAMIUTAD",32,0)
STARTUP new utsuccess
"RTN","SAMIUTAD",33,0)
 quit
"RTN","SAMIUTAD",34,0)
 ;
"RTN","SAMIUTAD",35,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUTAD",36,0)
 kill utsuccess
"RTN","SAMIUTAD",37,0)
 quit
"RTN","SAMIUTAD",38,0)
 ;
"RTN","SAMIUTAD",39,0)
 ;
"RTN","SAMIUTAD",40,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUTAD",41,0)
 do ^SAMIADMN
"RTN","SAMIUTAD",42,0)
 do SUCCEED^%ut
"RTN","SAMIUTAD",43,0)
 quit
"RTN","SAMIUTAD",44,0)
 ;
"RTN","SAMIUTAD",45,0)
UTCLRW ; @TEST - Test Clear the M WebServer
"RTN","SAMIUTAD",46,0)
 ; will delete seeGraph and html-cache Graphstores
"RTN","SAMIUTAD",47,0)
 ;  then rebuild the seeGraph
"RTN","SAMIUTAD",48,0)
 new root,poo,arc set root=$$setroot^%wd("seeGraph")
"RTN","SAMIUTAD",49,0)
 do purgegraph^%wd("seeGraph")
"RTN","SAMIUTAD",50,0)
 do CLRWEB^SAMIADMN
"RTN","SAMIUTAD",51,0)
 ; save the seeGraph file just built
"RTN","SAMIUTAD",52,0)
 new poo merge poo=@root
"RTN","SAMIUTAD",53,0)
 ; run the Clear the M Webserver again
"RTN","SAMIUTAD",54,0)
 do CLRWEB^SAMIADMN
"RTN","SAMIUTAD",55,0)
 ; Compare rebuilt seeGraph to be sure it generates
"RTN","SAMIUTAD",56,0)
 ;   the same data each time
"RTN","SAMIUTAD",57,0)
 kill arc merge arc=@root
"RTN","SAMIUTAD",58,0)
 set utsuccess=1
"RTN","SAMIUTAD",59,0)
 new nodea,nodep set nodea=$name(arc),nodep=$name(poo)
"RTN","SAMIUTAD",60,0)
 for  set nodea=$Q(@nodea),nodep=$Q(@nodep) quit:nodea=""  do  quit:'utsuccess
"RTN","SAMIUTAD",61,0)
 . if '(@nodea=@nodep) set utsuccess=0
"RTN","SAMIUTAD",62,0)
 if '(nodep="") set utsuccess=0
"RTN","SAMIUTAD",63,0)
 do CHKEQ^%ut(utsuccess,1,"Testing Clear M WebServer FAILED!")
"RTN","SAMIUTAD",64,0)
 quit
"RTN","SAMIUTAD",65,0)
 ;
"RTN","SAMIUTAD",66,0)
UTSLCP ; @TEST - Test set VA-PALS to use the ELCAP version of the Ct Evaluation form
"RTN","SAMIUTAD",67,0)
 ; if set to LungRads poosfm will be "ctevaluation.html"
"RTN","SAMIUTAD",68,0)
 ; if set to ELCAP poosfm will be "ctevaluation-elcap.html"
"RTN","SAMIUTAD",69,0)
 new GLB,gien set GLB=$name(^SAMI(311.11))
"RTN","SAMIUTAD",70,0)
 set gien=$order(@GLB@("B","vapals:ceform",""))
"RTN","SAMIUTAD",71,0)
 if gien="" do  quit
"RTN","SAMIUTAD",72,0)
 . do FAIL^%ut("Error, record vapals:ceform is not found in SAMI FORM MAPPING file!")
"RTN","SAMIUTAD",73,0)
 new ien set ien=$order(^SAMI(311.11,"B","vapals:ceform",""))
"RTN","SAMIUTAD",74,0)
 new setting set setting=$piece($get(^SAMI(311.11,ien,2)),"^",2)
"RTN","SAMIUTAD",75,0)
 ; set to LungRads
"RTN","SAMIUTAD",76,0)
 set $piece(^SAMI(311.11,ien,2),"^",2)="ctevaluation.html"
"RTN","SAMIUTAD",77,0)
 do SETELCAP^SAMIADMN()
"RTN","SAMIUTAD",78,0)
 new poo set poo=$piece($get(^SAMI(311.11,ien,2)),"^",2)
"RTN","SAMIUTAD",79,0)
 set utsuccess=(poo="ctevaluation-elcap.html")
"RTN","SAMIUTAD",80,0)
 ; Return to original state
"RTN","SAMIUTAD",81,0)
 set $piece(^SAMI(311.11,ien,2),"^",2)=setting
"RTN","SAMIUTAD",82,0)
 do CHKEQ^%ut(utsuccess,1,"Testing setting VAPALS to use ELCAP FAILED!")
"RTN","SAMIUTAD",83,0)
 quit
"RTN","SAMIUTAD",84,0)
UTSLRADS ; @TEST - Test set VA-PALS to use the LungRads version of the Ct Evaluation form
"RTN","SAMIUTAD",85,0)
 ; if set to LungRads poosfm will be "ctevaluation.html"
"RTN","SAMIUTAD",86,0)
 ; if set to ELCAP poosfm will be "ctevaluation-elcap.html"
"RTN","SAMIUTAD",87,0)
 new GLB,gien set GLB=$NA(^SAMI(311.11))
"RTN","SAMIUTAD",88,0)
 set gien=$order(@GLB@("B","vapals:ceform",""))
"RTN","SAMIUTAD",89,0)
 if gien="" do  quit
"RTN","SAMIUTAD",90,0)
 . do FAIL^%ut("Error, record vapals:ceform is not found in SAMI FORM MAPPING file!")
"RTN","SAMIUTAD",91,0)
 new ien set ien=$order(^SAMI(311.11,"B","vapals:ceform",""))
"RTN","SAMIUTAD",92,0)
 new setting set setting=$piece($get(^SAMI(311.11,ien,2)),"^",2)
"RTN","SAMIUTAD",93,0)
 ; set to ELCAP
"RTN","SAMIUTAD",94,0)
 set $piece(^SAMI(311.11,ien,2),"^",2)="ctevaluation-elcap.html"
"RTN","SAMIUTAD",95,0)
 do SETLGRDS^SAMIADMN()
"RTN","SAMIUTAD",96,0)
 new poo set poo=$piece($get(^SAMI(311.11,ien,2)),"^",2)
"RTN","SAMIUTAD",97,0)
 set utsuccess=(poo="ctevaluation.html")
"RTN","SAMIUTAD",98,0)
 ; Return to original state
"RTN","SAMIUTAD",99,0)
 set $piece(^SAMI(311.11,ien,2),"^",2)=setting
"RTN","SAMIUTAD",100,0)
 do CHKEQ^%ut(utsuccess,1,"Testing setting VAPALS to use LungRads FAILED!")
"RTN","SAMIUTAD",101,0)
 quit
"RTN","SAMIUTAD",102,0)
UTWSLCP ; @TEST - set VA-PALS to use the ELCAP version of the Ct Evaluation form
"RTN","SAMIUTAD",103,0)
 ; if set to LungRads poosfm will be "ctevaluation.html"
"RTN","SAMIUTAD",104,0)
 ; if set to ELCAP poosfm will be "ctevaluation-elcap.html"
"RTN","SAMIUTAD",105,0)
 new GLB,gien set GLB=$name(^SAMI(311.11))
"RTN","SAMIUTAD",106,0)
 set gien=$order(@GLB@("B","vapals:ceform",""))
"RTN","SAMIUTAD",107,0)
 if gien="" do  quit
"RTN","SAMIUTAD",108,0)
 . do FAIL^%ut("Error, record vapals:ceform is not found in SAMI FORM MAPPING file!")
"RTN","SAMIUTAD",109,0)
 new ien set ien=$order(^SAMI(311.11,"B","vapals:ceform",""))
"RTN","SAMIUTAD",110,0)
 new setting set setting=$piece($get(^SAMI(311.11,ien,2)),"^",2)
"RTN","SAMIUTAD",111,0)
 ; set to LungRads
"RTN","SAMIUTAD",112,0)
 set $piece(^SAMI(311.11,ien,2),"^",2)="ctevaluation.html"
"RTN","SAMIUTAD",113,0)
 new arc do WSSTELCP^SAMIADMN(.arc,"")
"RTN","SAMIUTAD",114,0)
 new poo set poo=$piece($get(^SAMI(311.11,ien,2)),"^",2)
"RTN","SAMIUTAD",115,0)
 set utsuccess=(poo="ctevaluation-elcap.html")
"RTN","SAMIUTAD",116,0)
 ; Return to original state
"RTN","SAMIUTAD",117,0)
 set $piece(^SAMI(311.11,ien,2),"^",2)=setting
"RTN","SAMIUTAD",118,0)
 do CHKEQ^%ut(utsuccess,1,"Testing setting VAPALS to use ELCAP FAILED!")
"RTN","SAMIUTAD",119,0)
 quit
"RTN","SAMIUTAD",120,0)
UTWSLRAD ; @TEST -  set VA-PALS to use the LungRads version of the Ct Evaluation form
"RTN","SAMIUTAD",121,0)
 ; if set to LungRads poosfm will be "ctevaluation.html"
"RTN","SAMIUTAD",122,0)
 ; if set to ELCAP poosfm will be "ctevaluation-elcap.html"
"RTN","SAMIUTAD",123,0)
 new GLB,gien set GLB=$name(^SAMI(311.11))
"RTN","SAMIUTAD",124,0)
 set gien=$order(@GLB@("B","vapals:ceform",""))
"RTN","SAMIUTAD",125,0)
 if gien="" do  quit
"RTN","SAMIUTAD",126,0)
 . do FAIL^%ut("Error, record vapals:ceform is not found in SAMI FORM MAPPING file!")
"RTN","SAMIUTAD",127,0)
 new ien set ien=$order(^SAMI(311.11,"B","vapals:ceform",""))
"RTN","SAMIUTAD",128,0)
 new setting set setting=$piece($get(^SAMI(311.11,ien,2)),"^",2)
"RTN","SAMIUTAD",129,0)
 ; set to ELCAP
"RTN","SAMIUTAD",130,0)
 set $piece(^SAMI(311.11,ien,2),"^",2)="ctevaluation-elcap.html"
"RTN","SAMIUTAD",131,0)
 new arc do WSSTLRAD^SAMIADMN(.arc,"")
"RTN","SAMIUTAD",132,0)
 new poo set poo=$piece($get(^SAMI(311.11,ien,2)),"^",2)
"RTN","SAMIUTAD",133,0)
 set utsuccess=(poo="ctevaluation.html")
"RTN","SAMIUTAD",134,0)
 ; Return to original state
"RTN","SAMIUTAD",135,0)
 set $piece(^SAMI(311.11,ien,2),"^",2)=setting
"RTN","SAMIUTAD",136,0)
 do CHKEQ^%ut(utsuccess,1,"Testing setting VAPALS to use LungRads FAILED!")
"RTN","SAMIUTAD",137,0)
 quit
"RTN","SAMIUTAD",138,0)
UTWSCTV ; @TEST - web service to return the current ctform version
"RTN","SAMIUTAD",139,0)
 ; Look up entry in 311.11 manually and compare to results of call
"RTN","SAMIUTAD",140,0)
 new GLB,gien set GLB=$name(^SAMI(311.11))
"RTN","SAMIUTAD",141,0)
 set gien=$order(@GLB@("B","vapals:ceform",""))
"RTN","SAMIUTAD",142,0)
 if gien="" do  quit
"RTN","SAMIUTAD",143,0)
 . do FAIL^%ut("Error, record vapals:ceform is not found in SAMI FORM MAPPING file!")
"RTN","SAMIUTAD",144,0)
 new ien set ien=$order(^SAMI(311.11,"B","vapals:ceform",""))
"RTN","SAMIUTAD",145,0)
 new poosfm set poosfm=$piece($get(^SAMI(311.11,ien,2)),"^",2)
"RTN","SAMIUTAD",146,0)
 set utsuccess=0
"RTN","SAMIUTAD",147,0)
 new arcsfm do WSCTVERS^SAMIADMN(.arcsfm,"")
"RTN","SAMIUTAD",148,0)
 if poosfm="ctevaluation.html",arcsfm["lungrads" set utsuccess=1
"RTN","SAMIUTAD",149,0)
 if poosfm="ctevaluation-elcap.html",arcsfm["elcap" set utsuccess=1
"RTN","SAMIUTAD",150,0)
 do CHKEQ^%ut(utsuccess,1,"Testing web service return current ctform version FAILED!")
"RTN","SAMIUTAD",151,0)
 quit
"RTN","SAMIUTAD",152,0)
 ;
"RTN","SAMIUTAD",153,0)
UTWSUHF ; @TEST - updating the WEB SERVICE URL HANDLER file
"RTN","SAMIUTAD",154,0)
 new root s root=$na(^%web(17.6001))
"RTN","SAMIUTAD",155,0)
 new SAMIMETH,SAMIPAT,SAMIRTN
"RTN","SAMIUTAD",156,0)
 set SAMIMETH="GET",SAMIPAT="unit test"
"RTN","SAMIUTAD",157,0)
 set SAMIRTN="TESTING^SAMIUTST"
"RTN","SAMIUTAD",158,0)
 ;check existence of unit test entry
"RTN","SAMIUTAD",159,0)
 new webien s webien=$order(@root@("B",SAMIMETH,SAMIPAT,SAMIRTN,0))
"RTN","SAMIUTAD",160,0)
 if $g(webien) do WDEL^SAMIADMN(SAMIMETH,SAMIPAT)
"RTN","SAMIUTAD",161,0)
 set webien=$order(@root@("B",SAMIMETH,SAMIPAT,SAMIRTN,0))
"RTN","SAMIUTAD",162,0)
 if $g(webien) do
"RTN","SAMIUTAD",163,0)
 . do FAIL^%ut("Error. Unit test entry not deleted!")
"RTN","SAMIUTAD",164,0)
 do WINIT^SAMIADMN(SAMIMETH,SAMIPAT,SAMIRTN)
"RTN","SAMIUTAD",165,0)
 set webien=$order(@root@("B",SAMIMETH,SAMIPAT,SAMIRTN,0))
"RTN","SAMIUTAD",166,0)
 set utsuccess=($get(webien)>0)
"RTN","SAMIUTAD",167,0)
 do CHKEQ^%ut(utsuccess,1,"Testing adding web service FAILED!")
"RTN","SAMIUTAD",168,0)
 ;
"RTN","SAMIUTAD",169,0)
 if $g(webien) do
"RTN","SAMIUTAD",170,0)
 . do WDEL^SAMIADMN(SAMIMETH,SAMIPAT)
"RTN","SAMIUTAD",171,0)
 . set webien=$order(@root@("B",SAMIMETH,SAMIPAT,SAMIRTN,0))
"RTN","SAMIUTAD",172,0)
 . set utsuccess=(+$get(webien)=0)
"RTN","SAMIUTAD",173,0)
 do CHKEQ^%ut(utsuccess,1,"Testing deleting web service FAILED!")
"RTN","SAMIUTAD",174,0)
 quit
"RTN","SAMIUTAD",175,0)
 ;
"RTN","SAMIUTAD",176,0)
UTWINITA ; @TEST - building all production web services
"RTN","SAMIUTAD",177,0)
 do WINITA^SAMIADMN
"RTN","SAMIUTAD",178,0)
 set utsuccess=($get(^TMP("SAMIADMN","WINITA"))=0)
"RTN","SAMIUTAD",179,0)
 do CHKEQ^%ut(utsuccess,1,"Testing building all services FAILED!")
"RTN","SAMIUTAD",180,0)
 quit
"RTN","SAMIUTAD",181,0)
 ;
"RTN","SAMIUTAD",182,0)
EOR ;End of routine SAMIUTAD
"RTN","SAMIUTC1")
0^69^B4068318
"RTN","SAMIUTC1",1,0)
SAMIUTC1 ;ven/lgc - Unit test for SAMICTC1 and SAMICTC2 ; 2019-03-19T00:26Z
"RTN","SAMIUTC1",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTC1",3,0)
 ;
"RTN","SAMIUTC1",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTC1",5,0)
 ;
"RTN","SAMIUTC1",6,0)
 ; @section 0 primary development
"RTN","SAMIUTC1",7,0)
 ;
"RTN","SAMIUTC1",8,0)
 ; @routine-credits
"RTN","SAMIUTC1",9,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUTC1",10,0)
 ;  larry@fiscientific.com
"RTN","SAMIUTC1",11,0)
 ; @additional-dev: Linda M. R. Yaw (lmry)
"RTN","SAMIUTC1",12,0)
 ;  linda.yaw@vistaexpertise.org
"RTN","SAMIUTC1",13,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUTC1",14,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUTC1",15,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUTC1",16,0)
 ; @license: see routine SAMIUL
"RTN","SAMIUTC1",17,0)
 ;
"RTN","SAMIUTC1",18,0)
 ; @last-updated: 2019-03-19T00:26Z
"RTN","SAMIUTC1",19,0)
 ; @application: SAMI
"RTN","SAMIUTC1",20,0)
 ; @version: 18.0
"RTN","SAMIUTC1",21,0)
 ; @patch-list: none yet
"RTN","SAMIUTC1",22,0)
 ;
"RTN","SAMIUTC1",23,0)
 ; @to-do
"RTN","SAMIUTC1",24,0)
 ;
"RTN","SAMIUTC1",25,0)
 ; @section 1 code
"RTN","SAMIUTC1",26,0)
 ;
"RTN","SAMIUTC1",27,0)
START if $text(^%ut)="" write !,"*** UNIT TEST NOT INSTALLED ***" quit
"RTN","SAMIUTC1",28,0)
 do EN^%ut($text(+0),2)
"RTN","SAMIUTC1",29,0)
 quit
"RTN","SAMIUTC1",30,0)
 ;
"RTN","SAMIUTC1",31,0)
 ;
"RTN","SAMIUTC1",32,0)
STARTUP new utsuccess
"RTN","SAMIUTC1",33,0)
 quit
"RTN","SAMIUTC1",34,0)
 ;
"RTN","SAMIUTC1",35,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUTC1",36,0)
 kill utsuccess
"RTN","SAMIUTC1",37,0)
 quit
"RTN","SAMIUTC1",38,0)
 ;
"RTN","SAMIUTC1",39,0)
 ;
"RTN","SAMIUTC1",40,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUTC1",41,0)
 do ^SAMICTC1
"RTN","SAMIUTC1",42,0)
 do SUCCEED^%ut
"RTN","SAMIUTC1",43,0)
 do ^SAMICTC2
"RTN","SAMIUTC1",44,0)
 do SUCCEED^%ut
"RTN","SAMIUTC1",45,0)
 quit
"RTN","SAMIUTC1",46,0)
 ;
"RTN","SAMIUTC1",47,0)
UTCTCPY ; @TEST - copies a Ct Eval form selectively
"RTN","SAMIUTC1",48,0)
 ;CTCOPY(FROM,TO)
"RTN","SAMIUTC1",49,0)
 new SAMIUARC,SAMIUPOO,SAMIUFROM,SAMIUTO
"RTN","SAMIUTC1",50,0)
 set utsuccess=1
"RTN","SAMIUTC1",51,0)
 do PLUTARR^SAMIUTST(.SAMIUPOO,"CTCOPY-SAMICTC1")
"RTN","SAMIUTC1",52,0)
 set SAMIUFROM=$name(SAMIUPOO),SAMIUTO=$name(SAMIUARC)
"RTN","SAMIUTC1",53,0)
 do CTCOPY^SAMICTC1(SAMIUFROM,SAMIUTO)
"RTN","SAMIUTC1",54,0)
 new nodea,nodep set nodea=$name(SAMIUARC),nodep=$name(SAMIUPOO)
"RTN","SAMIUTC1",55,0)
 for  set nodea=$query(nodea),nodep=$query(nodep) quit:nodea=""  do
"RTN","SAMIUTC1",56,0)
 . if '(nodea=nodep) set utsuccess=0
"RTN","SAMIUTC1",57,0)
 . if '(@nodea=@nodep) set utsuccess=0
"RTN","SAMIUTC1",58,0)
 if '(nodep="") set utsuccess=0
"RTN","SAMIUTC1",59,0)
 do CHKEQ^%ut(utsuccess,1,"Testing CTCOPY FAILED!")
"RTN","SAMIUTC1",60,0)
 quit
"RTN","SAMIUTC1",61,0)
UTGNCTC ; @TEST - generates the copy routine from a graph
"RTN","SAMIUTC1",62,0)
 quit
"RTN","SAMIUTC1",63,0)
 ;
"RTN","SAMIUTC1",64,0)
EOR ;End of routine SAMIUTC1
"RTN","SAMIUTC2")
0^70^B17246826
"RTN","SAMIUTC2",1,0)
SAMIUTC2 ;ven/arc - Unit test for SAMISRC2 ;Jan 09, 2020@13:47
"RTN","SAMIUTC2",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTC2",3,0)
 ;
"RTN","SAMIUTC2",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTC2",5,0)
 ;
"RTN","SAMIUTC2",6,0)
 ; @section 0 primary development
"RTN","SAMIUTC2",7,0)
 ;
"RTN","SAMIUTC2",8,0)
 ; @routine-credits
"RTN","SAMIUTC2",9,0)
 ; @primary-dev: Alexis Carlson (arc)
"RTN","SAMIUTC2",10,0)
 ;  alexis@vistaexpertise.net
"RTN","SAMIUTC2",11,0)
 ; @additional-dev: Linda M. R. Yaw (lmry)
"RTN","SAMIUTC2",12,0)
 ;  linda.yaw@vistaexpertise.net
"RTN","SAMIUTC2",13,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUTC2",14,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUTC2",15,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUTC2",16,0)
 ; @license: Apache 2.0
"RTN","SAMIUTC2",17,0)
 ;  https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIUTC2",18,0)
 ;
"RTN","SAMIUTC2",19,0)
 ; @last-updated: 2019-03-21T17:37Z
"RTN","SAMIUTC2",20,0)
 ; @application: SAMI
"RTN","SAMIUTC2",21,0)
 ; @version: 18.0
"RTN","SAMIUTC2",22,0)
 ; @patch-list: none yet
"RTN","SAMIUTC2",23,0)
 ;
"RTN","SAMIUTC2",24,0)
 ; @to-do
"RTN","SAMIUTC2",25,0)
 ;
"RTN","SAMIUTC2",26,0)
 ; @section 1 code
"RTN","SAMIUTC2",27,0)
 ;
"RTN","SAMIUTC2",28,0)
START ;
"RTN","SAMIUTC2",29,0)
 if $text(^%ut)="" do
"RTN","SAMIUTC2",30,0)
 . write !,"*** UNIT TEST NOT INSTALLED ***"
"RTN","SAMIUTC2",31,0)
 . quit
"RTN","SAMIUTC2",32,0)
 ;
"RTN","SAMIUTC2",33,0)
 do EN^%ut($text(+0),3)
"RTN","SAMIUTC2",34,0)
 quit
"RTN","SAMIUTC2",35,0)
 ;
"RTN","SAMIUTC2",36,0)
 ;
"RTN","SAMIUTC2",37,0)
STARTUP ; Ensure all of test patient's forms are setup in vapals-patients
"RTN","SAMIUTC2",38,0)
 D SVAPT1^SAMIUTST  ; Save VA's dfn 1 patient if it exists
"RTN","SAMIUTC2",39,0)
 D LOADTPT^SAMIUTST  ; Load our test patient
"RTN","SAMIUTC2",40,0)
 quit
"RTN","SAMIUTC2",41,0)
 ;
"RTN","SAMIUTC2",42,0)
SETUP ;
"RTN","SAMIUTC2",43,0)
 new args,body,return,filter,from,to,expect,result,expectn,resultn,utsuccess
"RTN","SAMIUTC2",44,0)
 quit
"RTN","SAMIUTC2",45,0)
 ;
"RTN","SAMIUTC2",46,0)
 ;
"RTN","SAMIUTC2",47,0)
TEARDOWN ; ZEXCEPT: SAMIUARGS,SAMIUBODY,SAMIURETURN,filter,from,to,expect,result,expectn,resultn,utsuccess
"RTN","SAMIUTC2",48,0)
 kill SAMIUARGS,SAMIUBODY,SAMIURETURN,filter,from,to,expect,result,expectn,resultn,utsuccess
"RTN","SAMIUTC2",49,0)
 quit
"RTN","SAMIUTC2",50,0)
 ;
"RTN","SAMIUTC2",51,0)
SHUTDOWN ; Return VA's dfn 1 patient data to graphs
"RTN","SAMIUTC2",52,0)
 D LVAPT1^SAMIUTST
"RTN","SAMIUTC2",53,0)
 quit
"RTN","SAMIUTC2",54,0)
 ;
"RTN","SAMIUTC2",55,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUTC2",56,0)
 do ^SAMISRC2
"RTN","SAMIUTC2",57,0)
 do SUCCEED^%ut
"RTN","SAMIUTC2",58,0)
 quit
"RTN","SAMIUTC2",59,0)
 ;
"RTN","SAMIUTC2",60,0)
UTWSLKU ; @TEST WSLOOKUP^SAMISRC2
"RTN","SAMIUTC2",61,0)
 ; Comments
"RTN","SAMIUTC2",62,0)
 ;
"RTN","SAMIUTC2",63,0)
 ; Test with no patient study ID
"RTN","SAMIUTC2",64,0)
UTWSLKU1 set SAMIUBODY(1)=""
"RTN","SAMIUTC2",65,0)
 do WSLOOKUP^SAMISRC2(.SAMIUARGS,.SAMIUBODY,.SAMIURETURN)
"RTN","SAMIUTC2",66,0)
 set expect="Patient not found"
"RTN","SAMIUTC2",67,0)
 set result=filter("samilookuperror")
"RTN","SAMIUTC2",68,0)
 ;do CHKEQ^%ut(result,expect)
"RTN","SAMIUTC2",69,0)
 ; Check the HTML array
"RTN","SAMIUTC2",70,0)
 kill expect,result
"RTN","SAMIUTC2",71,0)
 set utsuccess=1
"RTN","SAMIUTC2",72,0)
 do PLUTARR^SAMIUTST(.expect,"UTWSLKU^SAMIUTC2: Null SID")
"RTN","SAMIUTC2",73,0)
 set resultn=0,expectn=0
"RTN","SAMIUTC2",74,0)
 for  set resultn=$order(SAMIURETURN(resultn)),expectn=$order(expect(expectn)) quit:('resultn)!('expectn)  do
"RTN","SAMIUTC2",75,0)
 . quit:($extract($translate(SAMIURETURN(resultn),""""" "),1,10)?4N1"."2N1"."2N)  ; Node with a date
"RTN","SAMIUTC2",76,0)
 . quit:(SAMIURETURN(resultn)["meta content")
"RTN","SAMIUTC2",77,0)
 . if '(resultn=expectn) set utsuccess=0
"RTN","SAMIUTC2",78,0)
 . if '(SAMIURETURN(resultn)=expect(expectn)) set utsuccess=0
"RTN","SAMIUTC2",79,0)
 if '(resultn="")&(expectn="") set utsuccess=0
"RTN","SAMIUTC2",80,0)
 do CHKEQ^%ut(utsuccess,1)
"RTN","SAMIUTC2",81,0)
 ;
"RTN","SAMIUTC2",82,0)
 ; Test with a patient study ID
"RTN","SAMIUTC2",83,0)
UTWSLKU2 kill SAMIUARGS,SAMIUBODY,SAMIURETURN,result,expect
"RTN","SAMIUTC2",84,0)
 set SAMIUBODY(1)="field=sid&fvalue=XXX00001"
"RTN","SAMIUTC2",85,0)
 do WSLOOKUP^SAMISRC2(.SAMIUARGS,.SAMIUBODY,.SAMIURETURN)
"RTN","SAMIUTC2",86,0)
 set expect="XXX00001"
"RTN","SAMIUTC2",87,0)
 set result=filter("studyid")
"RTN","SAMIUTC2",88,0)
 ;do CHKEQ^%ut(result,expect)
"RTN","SAMIUTC2",89,0)
 ; Check the HTML array
"RTN","SAMIUTC2",90,0)
 kill expect,result,resultn,expectn
"RTN","SAMIUTC2",91,0)
 set utsuccess=1
"RTN","SAMIUTC2",92,0)
 do PLUTARR^SAMIUTST(.expect,"UTWSLKU^SAMIUTC2: SID=XXX00001")
"RTN","SAMIUTC2",93,0)
 set resultn=0,expectn=0
"RTN","SAMIUTC2",94,0)
 for  set resultn=$order(SAMIURETURN(resultn)),expectn=$order(expect(expectn)) quit:('resultn)!('expectn)  do
"RTN","SAMIUTC2",95,0)
 . quit:SAMIURETURN(resultn)["meta content"
"RTN","SAMIUTC2",96,0)
 . quit:($extract($translate(SAMIURETURN(resultn),""""" "),1,10)?4N1"."2N1"."2N)  ; Node with a date
"RTN","SAMIUTC2",97,0)
 . quit:SAMIURETURN(resultn)["<script>"
"RTN","SAMIUTC2",98,0)
 . if '(resultn=expectn) set utsuccess=0
"RTN","SAMIUTC2",99,0)
 . if '(SAMIURETURN(resultn)=expect(expectn)) set utsuccess=0
"RTN","SAMIUTC2",100,0)
 if '(resultn="")&(expectn="") set utsuccess=0
"RTN","SAMIUTC2",101,0)
 do CHKEQ^%ut(utsuccess,1)
"RTN","SAMIUTC2",102,0)
 ;
"RTN","SAMIUTC2",103,0)
 quit
"RTN","SAMIUTC2",104,0)
 ;
"RTN","SAMIUTC2",105,0)
 ;
"RTN","SAMIUTC2",106,0)
EOR ;End of routine SAMIUTC2
"RTN","SAMIUTCR")
0^71^B49296419
"RTN","SAMIUTCR",1,0)
SAMIUTCR ;ven/lgc - UNIT TEST for SAMICTR ;Dec 16, 2019@09:44
"RTN","SAMIUTCR",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTCR",3,0)
 ;
"RTN","SAMIUTCR",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTCR",5,0)
 ;
"RTN","SAMIUTCR",6,0)
 ; @section 0 primary development
"RTN","SAMIUTCR",7,0)
 ;
"RTN","SAMIUTCR",8,0)
 ; @routine-credits
"RTN","SAMIUTCR",9,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUTCR",10,0)
 ;  larry@fiscientific.com
"RTN","SAMIUTCR",11,0)
 ; @additional-dev: Linda M. R. Yaw (lmry)
"RTN","SAMIUTCR",12,0)
 ;  linda.yaw@vistaexpertise.net
"RTN","SAMIUTCR",13,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUTCR",14,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUTCR",15,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUTCR",16,0)
 ; @license: see routine SAMIUL
"RTN","SAMIUTCR",17,0)
 ;
"RTN","SAMIUTCR",18,0)
 ; @last-updated: 2019-03-25T19:12Z
"RTN","SAMIUTCR",19,0)
 ; @application: SAMI
"RTN","SAMIUTCR",20,0)
 ; @version: 18.0
"RTN","SAMIUTCR",21,0)
 ; @patch-list: none yet
"RTN","SAMIUTCR",22,0)
 ;
"RTN","SAMIUTCR",23,0)
 ; @to-do
"RTN","SAMIUTCR",24,0)
 ;
"RTN","SAMIUTCR",25,0)
 ; @section 1 code
"RTN","SAMIUTCR",26,0)
 ;
"RTN","SAMIUTCR",27,0)
START if $text(^%ut)="" write !,"*** UNIT TEST NOT INSTALLED ***" quit
"RTN","SAMIUTCR",28,0)
 do EN^%ut($text(+0),2)
"RTN","SAMIUTCR",29,0)
 quit
"RTN","SAMIUTCR",30,0)
 ;
"RTN","SAMIUTCR",31,0)
 ;
"RTN","SAMIUTCR",32,0)
STARTUP new utsuccess
"RTN","SAMIUTCR",33,0)
 D SVAPT1^SAMIUTST  ; Save VA's DFN 1 patient
"RTN","SAMIUTCR",34,0)
 D LOADTPT^SAMIUTST  ; Pull Unit Test DFN 1 patient data
"RTN","SAMIUTCR",35,0)
 ; add extra test patient forms
"RTN","SAMIUTCR",36,0)
 new SAMIUPOO,root
"RTN","SAMIUTCR",37,0)
 s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTCR",38,0)
 do PLUTARR^SAMIUTST(.SAMIUPOO,"ceform-2019-01-24")
"RTN","SAMIUTCR",39,0)
 merge @root@("graph","XXX00001","ceform-2019-01-24")=SAMIUPOO
"RTN","SAMIUTCR",40,0)
 do PLUTARR^SAMIUTST(.SAMIUPOO,"ceform-2018-01-02")
"RTN","SAMIUTCR",41,0)
 merge @root@("graph","XXX00001","ceform-2018-01-02")=SAMIUPOO
"RTN","SAMIUTCR",42,0)
 quit
"RTN","SAMIUTCR",43,0)
 ;
"RTN","SAMIUTCR",44,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUTCR",45,0)
 kill utsuccess
"RTN","SAMIUTCR",46,0)
 D LVAPT1^SAMIUTST  ; Reload VA's DFN 1 patient data
"RTN","SAMIUTCR",47,0)
 quit
"RTN","SAMIUTCR",48,0)
 ;
"RTN","SAMIUTCR",49,0)
 ;
"RTN","SAMIUTCR",50,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUTCR",51,0)
 do ^SAMICTR
"RTN","SAMIUTCR",52,0)
 do SUCCEED^%ut
"RTN","SAMIUTCR",53,0)
 quit
"RTN","SAMIUTCR",54,0)
 ;
"RTN","SAMIUTCR",55,0)
UTWSRPT ; @TEST - web service which returns an html cteval report
"RTN","SAMIUTCR",56,0)
 ;WSREPORT(return,SAMIFLTR)
"RTN","SAMIUTCR",57,0)
 ;use ceform-2018-10-21
"RTN","SAMIUTCR",58,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTCR",59,0)
 kill SAMIFLTR
"RTN","SAMIUTCR",60,0)
 set SAMIFLTR("studyid")="XXX00001"
"RTN","SAMIUTCR",61,0)
 set SAMIFLTR("form")="ceform-2018-10-21"
"RTN","SAMIUTCR",62,0)
 set utsuccess=1
"RTN","SAMIUTCR",63,0)
 do WSREPORT^SAMICTR(.SAMIUPOO,.SAMIFLTR)
"RTN","SAMIUTCR",64,0)
 ; compare SAMIUPOO with SAMIUPOO from a Pull
"RTN","SAMIUTCR",65,0)
 do PLUTARR^SAMIUTST(.SAMIUARC,"UTWSRPT^SAMIUTCR")
"RTN","SAMIUTCR",66,0)
 ; now compare
"RTN","SAMIUTCR",67,0)
 new pnode,anode set pnode=$name(SAMIUPOO),anode=$name(SAMIUARC)
"RTN","SAMIUTCR",68,0)
 for  set pnode=$query(@pnode),anode=$query(@anode) quit:pnode=""  do
"RTN","SAMIUTCR",69,0)
 . if '(@pnode=@anode) set utsuccess=0
"RTN","SAMIUTCR",70,0)
 set:'(anode="") utsuccess=0
"RTN","SAMIUTCR",71,0)
 do CHKEQ^%ut(utsuccess,1,"Testing web service returns html cteval 10-21 FAILED!")
"RTN","SAMIUTCR",72,0)
 ;
"RTN","SAMIUTCR",73,0)
 ;
"RTN","SAMIUTCR",74,0)
 ;use ceform-2019-01-23
"RTN","SAMIUTCR",75,0)
 kill SAMIFLTR
"RTN","SAMIUTCR",76,0)
 set SAMIFLTR("studyid")="XXX00001"
"RTN","SAMIUTCR",77,0)
 set SAMIFLTR("form")="ceform-2019-01-23"
"RTN","SAMIUTCR",78,0)
 set @root@("graph","XXX00001","ceform-2019-01-23","cetex")="b"
"RTN","SAMIUTCR",79,0)
 set utsuccess=1
"RTN","SAMIUTCR",80,0)
 do WSREPORT^SAMICTR(.SAMIUPOO,.SAMIFLTR)
"RTN","SAMIUTCR",81,0)
 ; compare SAMIUPOO with SAMIUPOO from a Pull
"RTN","SAMIUTCR",82,0)
 do PLUTARR^SAMIUTST(.SAMIUARC,"UTWSRPT^SAMIUTCR XXX01-23")
"RTN","SAMIUTCR",83,0)
 ; now compare
"RTN","SAMIUTCR",84,0)
 new pnode,anode set pnode=$name(SAMIUPOO),anode=$name(SAMIUARC)
"RTN","SAMIUTCR",85,0)
 for  set pnode=$query(@pnode),anode=$query(@anode) quit:pnode=""  do
"RTN","SAMIUTCR",86,0)
 . if '(@pnode=@anode) set utsuccess=0
"RTN","SAMIUTCR",87,0)
 set:'(anode="") utsuccess=0
"RTN","SAMIUTCR",88,0)
 do CHKEQ^%ut(utsuccess,1,"Testing web service returns html cteval 01-23 FAILED!")
"RTN","SAMIUTCR",89,0)
 ;
"RTN","SAMIUTCR",90,0)
 ;use ceform-2019-01-24
"RTN","SAMIUTCR",91,0)
 kill SAMIFLTR
"RTN","SAMIUTCR",92,0)
 set SAMIFLTR("studyid")="XXX00001"
"RTN","SAMIUTCR",93,0)
 set SAMIFLTR("form")="ceform-2019-01-24"
"RTN","SAMIUTCR",94,0)
 set utsuccess=1
"RTN","SAMIUTCR",95,0)
 do WSREPORT^SAMICTR(.SAMIUPOO,.SAMIFLTR)
"RTN","SAMIUTCR",96,0)
 ; compare SAMIUPOO with SAMIUPOO from a Pull
"RTN","SAMIUTCR",97,0)
 do PLUTARR^SAMIUTST(.SAMIUARC,"UTWSRPT^SAMIUTCR XXX01-24")
"RTN","SAMIUTCR",98,0)
 ; now compare
"RTN","SAMIUTCR",99,0)
 new pnode,anode set pnode=$name(SAMIUPOO),anode=$name(SAMIUARC)
"RTN","SAMIUTCR",100,0)
 for  set pnode=$query(@pnode),anode=$query(@anode) quit:pnode=""  do
"RTN","SAMIUTCR",101,0)
 . if '(@pnode=@anode) set utsuccess=0
"RTN","SAMIUTCR",102,0)
 set:'(anode="") utsuccess=0
"RTN","SAMIUTCR",103,0)
 do CHKEQ^%ut(utsuccess,1,"Testing web service returns html cteval 01-24 FAILED!")
"RTN","SAMIUTCR",104,0)
 ;
"RTN","SAMIUTCR",105,0)
 ;use ceform-2018-01-02
"RTN","SAMIUTCR",106,0)
 kill SAMIFLTR
"RTN","SAMIUTCR",107,0)
 set SAMIFLTR("studyid")="XXX00001"
"RTN","SAMIUTCR",108,0)
 set SAMIFLTR("form")="ceform-2018-01-02"
"RTN","SAMIUTCR",109,0)
 set utsuccess=1
"RTN","SAMIUTCR",110,0)
 do WSREPORT^SAMICTR(.SAMIUPOO,.SAMIFLTR)
"RTN","SAMIUTCR",111,0)
 ; compare SAMIUPOO with SAMIUPOO from a Pull
"RTN","SAMIUTCR",112,0)
 do PLUTARR^SAMIUTST(.SAMIUARC,"UTWSRPT^SAMIUTCR XXX01-02")
"RTN","SAMIUTCR",113,0)
 ; now compare
"RTN","SAMIUTCR",114,0)
 new pnode,anode set pnode=$name(SAMIUPOO),anode=$name(SAMIUARC)
"RTN","SAMIUTCR",115,0)
 for  set pnode=$query(@pnode),anode=$query(@anode) quit:pnode=""  do
"RTN","SAMIUTCR",116,0)
 . if '(@pnode=@anode) set utsuccess=0
"RTN","SAMIUTCR",117,0)
 set:'(anode="") utsuccess=0
"RTN","SAMIUTCR",118,0)
 do CHKEQ^%ut(utsuccess,1,"Testing web service returns html cteval 01-02 FAILED!")
"RTN","SAMIUTCR",119,0)
 ;
"RTN","SAMIUTCR",120,0)
 ; Now lets try a special case
"RTN","SAMIUTCR",121,0)
 new SAMIUPOO,SAMIUARC,pnode,anode
"RTN","SAMIUTCR",122,0)
 do PLUTARR^SAMIUTST(.SAMIUPOO,"ce-sb-si forms XXX0005")
"RTN","SAMIUTCR",123,0)
 kill @root@("graph","XXX0005")
"RTN","SAMIUTCR",124,0)
 merge @root@("graph","XXX0005")=SAMIUPOO
"RTN","SAMIUTCR",125,0)
 kill SAMIFLTR
"RTN","SAMIUTCR",126,0)
 set SAMIFLTR("studyid")="XXX0005"
"RTN","SAMIUTCR",127,0)
 set SAMIFLTR("form")="ceform-2016-01-01"
"RTN","SAMIUTCR",128,0)
 set utsuccess=1
"RTN","SAMIUTCR",129,0)
 do WSREPORT^SAMICTR(.SAMIUARC,.SAMIFLTR)
"RTN","SAMIUTCR",130,0)
 do PLUTARR^SAMIUTST(.SAMIUPOO,"UTWSRPT^SAMIUTCR XXX0005")
"RTN","SAMIUTCR",131,0)
 ; now compare
"RTN","SAMIUTCR",132,0)
 new pnode,anode set pnode=$name(SAMIUPOO),anode=$name(SAMIUARC)
"RTN","SAMIUTCR",133,0)
 for  set pnode=$query(@pnode),anode=$query(@anode) quit:pnode=""  do
"RTN","SAMIUTCR",134,0)
 . if '(@pnode=@anode) set utsuccess=0
"RTN","SAMIUTCR",135,0)
 set:'(anode="") utsuccess=0
"RTN","SAMIUTCR",136,0)
 kill @root@("graph","XXX0005")
"RTN","SAMIUTCR",137,0)
 do CHKEQ^%ut(utsuccess,1,"Testing web service returns html cteval XXX0005 FAILED!")
"RTN","SAMIUTCR",138,0)
 quit
"RTN","SAMIUTCR",139,0)
 ;
"RTN","SAMIUTCR",140,0)
UTOUT ; @TEST - out line
"RTN","SAMIUTCR",141,0)
 ;OUT(ln)
"RTN","SAMIUTCR",142,0)
 new cnt,rtn,SAMIUPOO
"RTN","SAMIUTCR",143,0)
 set cnt=1,rtn="SAMIUPOO",SAMIUPOO(1)="First line of test"
"RTN","SAMIUTCR",144,0)
 new SAMIULN set SAMIULN="Second line test"
"RTN","SAMIUTCR",145,0)
 set utsuccess=0
"RTN","SAMIUTCR",146,0)
 do OUT^SAMICTR(SAMIULN)
"RTN","SAMIUTCR",147,0)
 set utsuccess=($get(SAMIUPOO(2))="Second line test")
"RTN","SAMIUTCR",148,0)
 do CHKEQ^%ut(utsuccess,1,"Testing out(ln) adds line to array FAILED!")
"RTN","SAMIUTCR",149,0)
 quit
"RTN","SAMIUTCR",150,0)
 ;
"RTN","SAMIUTCR",151,0)
UTHOUT ; @TEST - hout line
"RTN","SAMIUTCR",152,0)
 ;HOUT(ln)
"RTN","SAMIUTCR",153,0)
 new cnt,rtn,SAMIUPOO
"RTN","SAMIUTCR",154,0)
 set cnt=1,rtn="SAMIUPOO",SAMIUPOO(1)="First line of test"
"RTN","SAMIUTCR",155,0)
 new SAMIULN set SAMIULN="Second line test"
"RTN","SAMIUTCR",156,0)
 set utsuccess=0
"RTN","SAMIUTCR",157,0)
 do HOUT^SAMICTR(SAMIULN)
"RTN","SAMIUTCR",158,0)
 set utsuccess=($get(SAMIUPOO(2))="<p><span class='sectionhead'>Second line test</span>")
"RTN","SAMIUTCR",159,0)
 do CHKEQ^%ut(utsuccess,1,"Testing out(ln) adds line to array FAILED!")
"RTN","SAMIUTCR",160,0)
 quit
"RTN","SAMIUTCR",161,0)
 ;
"RTN","SAMIUTCR",162,0)
UTXVAL ; @TEST - extrinsic which returns the dictionary value defined by var
"RTN","SAMIUTCR",163,0)
 ;XVAL(var,vals,dict,valdx)
"RTN","SAMIUTCR",164,0)
 set utsuccess=0
"RTN","SAMIUTCR",165,0)
 set SAMIUARC(1)="Testing xval"
"RTN","SAMIUTCR",166,0)
 set utsuccess=($$XVAL^SAMICTR(1,"SAMIUARC")="Testing xval")
"RTN","SAMIUTCR",167,0)
 do CHKEQ^%ut(utsuccess,1,"Testing xval(var,vals) FAILED!")
"RTN","SAMIUTCR",168,0)
 quit
"RTN","SAMIUTCR",169,0)
 ;
"RTN","SAMIUTCR",170,0)
UTXSUB ; @TEST - extrinsic which returns the dictionary value defined by var
"RTN","SAMIUTCR",171,0)
 ;XSUB(var,vals,dict,valdx)
"RTN","SAMIUTCR",172,0)
 new SAMIUVALS,SAMIUVAR,SAMIUPOO,SAMIUVALDX,SAMIUDICT,result
"RTN","SAMIUTCR",173,0)
 set utsuccess=0
"RTN","SAMIUTCR",174,0)
 set SAMIUVALS="SAMIUPOO"
"RTN","SAMIUTCR",175,0)
 set SAMIUVAR="cteval-dict"
"RTN","SAMIUTCR",176,0)
 set SAMIUPOO(1)="biopsy"
"RTN","SAMIUTCR",177,0)
 set SAMIUVALDX=1
"RTN","SAMIUTCR",178,0)
 set SAMIUDICT=$$setroot^%wd("cteval-dict")
"RTN","SAMIUTCR",179,0)
 set result=$$XSUB^SAMICTR(SAMIUVAR,SAMIUVALS,SAMIUDICT,SAMIUVALDX)
"RTN","SAMIUTCR",180,0)
 set utsuccess=(result="CT-guided biopsy")
"RTN","SAMIUTCR",181,0)
 do CHKEQ^%ut(utsuccess,1,"Testing xsub(var,vals,dict,valdx) FAILED!")
"RTN","SAMIUTCR",182,0)
 quit
"RTN","SAMIUTCR",183,0)
 ;
"RTN","SAMIUTCR",184,0)
EOR ;End of routine SAMIUTCR
"RTN","SAMIUTD2")
0^72^B4729581
"RTN","SAMIUTD2",1,0)
SAMIUTD2 ;ven/lgc - UNIT TEST for SAMICTD2 ; 2019-03-25T19:20Z
"RTN","SAMIUTD2",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTD2",3,0)
 ;
"RTN","SAMIUTD2",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTD2",5,0)
 ;
"RTN","SAMIUTD2",6,0)
 ; @section 0 primary development
"RTN","SAMIUTD2",7,0)
 ;
"RTN","SAMIUTD2",8,0)
 ; @routine-credits
"RTN","SAMIUTD2",9,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUTD2",10,0)
 ;  larry@fiscientific.com
"RTN","SAMIUTD2",11,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUTD2",12,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUTD2",13,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUTD2",14,0)
 ; @license: see routine SAMIUL
"RTN","SAMIUTD2",15,0)
 ;
"RTN","SAMIUTD2",16,0)
 ; @last-updated: 2019-03-25T19:20Z
"RTN","SAMIUTD2",17,0)
 ; @application: SAMI
"RTN","SAMIUTD2",18,0)
 ; @version: 18.0
"RTN","SAMIUTD2",19,0)
 ; @patch-list: none yet
"RTN","SAMIUTD2",20,0)
 ;
"RTN","SAMIUTD2",21,0)
 ; @to-do
"RTN","SAMIUTD2",22,0)
 ;
"RTN","SAMIUTD2",23,0)
 ; @section 1 code
"RTN","SAMIUTD2",24,0)
 ;
"RTN","SAMIUTD2",25,0)
START if $text(^%ut)="" write !,"*** UNIT TEST NOT INSTALLED ***" quit
"RTN","SAMIUTD2",26,0)
 do EN^%ut($text(+0),2)
"RTN","SAMIUTD2",27,0)
 quit
"RTN","SAMIUTD2",28,0)
 ;
"RTN","SAMIUTD2",29,0)
 ;
"RTN","SAMIUTD2",30,0)
STARTUP new utsuccess
"RTN","SAMIUTD2",31,0)
 quit
"RTN","SAMIUTD2",32,0)
 ;
"RTN","SAMIUTD2",33,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUTD2",34,0)
 kill utsuccess
"RTN","SAMIUTD2",35,0)
 quit
"RTN","SAMIUTD2",36,0)
 ;
"RTN","SAMIUTD2",37,0)
 ;
"RTN","SAMIUTD2",38,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUTD2",39,0)
 do ^SAMICTD2
"RTN","SAMIUTD2",40,0)
 do SUCCEED^%ut
"RTN","SAMIUTD2",41,0)
 quit
"RTN","SAMIUTD2",42,0)
 ;
"RTN","SAMIUTD2",43,0)
UTIN2G ; @TEST - initialize CTEVAL dictionary into graph cteval-dict
"RTN","SAMIUTD2",44,0)
 ;INIT2GPH()
"RTN","SAMIUTD2",45,0)
 new root,SAMIUPOO,SAMIUARC
"RTN","SAMIUTD2",46,0)
 set root=$$setroot^%wd("cteval-dict")
"RTN","SAMIUTD2",47,0)
 merge SAMIUPOO=@root
"RTN","SAMIUTD2",48,0)
 do SVUTARR^SAMIUTST(.SAMIUPOO,"init2graph-SAMICTD2")
"RTN","SAMIUTD2",49,0)
 ; although init2graph kills the root, I need to do
"RTN","SAMIUTD2",50,0)
 ;  so before the call so I know it is a new build
"RTN","SAMIUTD2",51,0)
 kill @root
"RTN","SAMIUTD2",52,0)
 set utsuccess=1
"RTN","SAMIUTD2",53,0)
 do INIT2GPH^SAMICTD2
"RTN","SAMIUTD2",54,0)
 merge SAMIUARC=@root
"RTN","SAMIUTD2",55,0)
 kill SAMIUPOO do PLUTARR^SAMIUTST(.SAMIUPOO,"init2graph-SAMICTD2")
"RTN","SAMIUTD2",56,0)
 new nodea,nodep set nodea=$name(SAMIUARC),nodep=$name(SAMIUPOO)
"RTN","SAMIUTD2",57,0)
 for  set nodea=$query(@nodea),nodep=$query(@nodep) quit:nodea=""  do  quit:'utsuccess
"RTN","SAMIUTD2",58,0)
 . if '(@nodea=@nodep) set utsuccess=0
"RTN","SAMIUTD2",59,0)
 if '(nodep="") set utsuccess=0
"RTN","SAMIUTD2",60,0)
 do CHKEQ^%ut(utsuccess,1,"Testing initialization of CTEVAL dictionary FAILED!")
"RTN","SAMIUTD2",61,0)
 quit
"RTN","SAMIUTD2",62,0)
 ;
"RTN","SAMIUTD2",63,0)
EOR ;End of routine SAMIUTD2
"RTN","SAMIUTH3")
0^73^B177762532
"RTN","SAMIUTH3",1,0)
SAMIUTH3 ;ven/lgc - UNIT TEST for SAMIHOM3,SAMIHOM4 ;Jan 13, 2020@16:36
"RTN","SAMIUTH3",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTH3",3,0)
 ;
"RTN","SAMIUTH3",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTH3",5,0)
 ;
"RTN","SAMIUTH3",6,0)
START if $text(^%ut)="" write !,"*** UNIT TEST NOT INSTALLED ***" quit
"RTN","SAMIUTH3",7,0)
 do EN^%ut($text(+0),2)
"RTN","SAMIUTH3",8,0)
 quit
"RTN","SAMIUTH3",9,0)
 ;
"RTN","SAMIUTH3",10,0)
 ;
"RTN","SAMIUTH3",11,0)
 ; ===================== UNIT TESTS =====================
"RTN","SAMIUTH3",12,0)
 ;
"RTN","SAMIUTH3",13,0)
STARTUP new utsuccess
"RTN","SAMIUTH3",14,0)
 D SVAPT1^SAMIUTST  ; Save VA's DFN 1 patient data
"RTN","SAMIUTH3",15,0)
 D LOADTPT^SAMIUTST  ; Load unit test patient data
"RTN","SAMIUTH3",16,0)
 quit
"RTN","SAMIUTH3",17,0)
 ;
"RTN","SAMIUTH3",18,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUTH3",19,0)
 kill utsuccess
"RTN","SAMIUTH3",20,0)
 D LVAPT1^SAMIUTST  ; Return VA's DPT 1 patient's data
"RTN","SAMIUTH3",21,0)
 quit
"RTN","SAMIUTH3",22,0)
 ;
"RTN","SAMIUTH3",23,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUTH3",24,0)
 do ^SAMIHOM3
"RTN","SAMIUTH3",25,0)
 do SUCCEED^%ut
"RTN","SAMIUTH3",26,0)
 do ^SAMIHOM4
"RTN","SAMIUTH3",27,0)
 do SUCCEED^%ut
"RTN","SAMIUTH3",28,0)
 quit
"RTN","SAMIUTH3",29,0)
 ;
"RTN","SAMIUTH3",30,0)
UTWSHM ; @TEST - Testing web service for SAMI homepage test
"RTN","SAMIUTH3",31,0)
 ; WSHOME(SAMIURTN,SAMIUFLTR)
"RTN","SAMIUTH3",32,0)
 new SAMIUFLTR,SAMIURTN,nodea,nodep,SAMIUARC,SAMIUPOO
"RTN","SAMIUTH3",33,0)
 set SAMIUFLTR("test")=1
"RTN","SAMIUTH3",34,0)
 do WSHOME^SAMIHOM3(.SAMIURTN,.SAMIUFLTR)
"RTN","SAMIUTH3",35,0)
 merge SAMIUARC=SAMIURTN
"RTN","SAMIUTH3",36,0)
 K ^SAMIUT("SAMIUTH3","UTWSHM","SAMIUARC")
"RTN","SAMIUTH3",37,0)
 M ^SAMIUT("SAMIUTH3","UTWSHM","SAMIUARC")=SAMIUARC
"RTN","SAMIUTH3",38,0)
 set utsuccess=1
"RTN","SAMIUTH3",39,0)
 do PLUTARR^SAMIUTST(.SAMIUPOO,"UTWSHM^SAMIUTH3 test")
"RTN","SAMIUTH3",40,0)
 set nodea=$name(SAMIUARC),nodep=$name(SAMIUPOO)
"RTN","SAMIUTH3",41,0)
 for  set nodea=$query(@nodea),nodep=$query(@nodep) quit:(nodea="")  quit:($qsubscript(nodea,1)>60)  do  quit:'utsuccess
"RTN","SAMIUTH3",42,0)
 .; check first 60 lines of configuration.  After that the returned
"RTN","SAMIUTH3",43,0)
 .;   array depends on test patients available
"RTN","SAMIUTH3",44,0)
 . if '($qsubscript(nodea,1)=$qsubscript(nodep,1)) set utsuccess=0
"RTN","SAMIUTH3",45,0)
 . if '(@nodea=@nodep) set utsuccess=0
"RTN","SAMIUTH3",46,0)
 do CHKEQ^%ut(utsuccess,1,"Testing web service test FAILED!")
"RTN","SAMIUTH3",47,0)
 quit
"RTN","SAMIUTH3",48,0)
 ;
"RTN","SAMIUTH3",49,0)
UTWSHM1 ; @TEST - Testing web service for SAMI homepage samiroute=""
"RTN","SAMIUTH3",50,0)
 kill SAMIUFLTR,SAMIURTN,nodea,nodep,SAMIUARC,SAMIUPOO
"RTN","SAMIUTH3",51,0)
 set SAMIUFLTR("samiroute")=""
"RTN","SAMIUTH3",52,0)
 do WSHOME^SAMIHOM3(.SAMIURTN,.SAMIUFLTR)
"RTN","SAMIUTH3",53,0)
 merge SAMIUARC=SAMIURTN
"RTN","SAMIUTH3",54,0)
 K ^SAMIUT("SAMIUTH3","UTWSHM1","SAMIUARC")
"RTN","SAMIUTH3",55,0)
 M ^SAMIUT("SAMIUTH3","UTWSHM1","SAMIUARC")=SAMIUARC
"RTN","SAMIUTH3",56,0)
 set utsuccess=1
"RTN","SAMIUTH3",57,0)
 do PLUTARR^SAMIUTST(.SAMIUPOO,"UTWSHM1^SAMIUTH3 samiroute null")
"RTN","SAMIUTH3",58,0)
 set nodea=$name(SAMIUARC),nodep=$name(SAMIUPOO)
"RTN","SAMIUTH3",59,0)
 for  set nodea=$query(@nodea),nodep=$query(@nodep) quit:(nodea="")  do  quit:'utsuccess
"RTN","SAMIUTH3",60,0)
 . if $extract($translate(@nodea,""""" "),1,10)?4N1"."2N1"."2N quit
"RTN","SAMIUTH3",61,0)
 . if (@nodea["meta content") quit
"RTN","SAMIUTH3",62,0)
 . if '($qsubscript(nodea,1)=$qsubscript(nodep,1)) set utsuccess=0
"RTN","SAMIUTH3",63,0)
 . if '(@nodea=@nodep) set utsuccess=0
"RTN","SAMIUTH3",64,0)
 if '(nodep="") set utsuccess=0
"RTN","SAMIUTH3",65,0)
 do CHKEQ^%ut(utsuccess,1,"Testing web service null samiroute FAILED!")
"RTN","SAMIUTH3",66,0)
 quit
"RTN","SAMIUTH3",67,0)
 ;
"RTN","SAMIUTH3",68,0)
UTWSHM2 ; @TEST - Testing web service for SAMI homepage dfn=1
"RTN","SAMIUTH3",69,0)
 kill SAMIUFLTR,SAMIURTN,nodea,nodep,SAMIUARC,SAMIUPOO
"RTN","SAMIUTH3",70,0)
 set SAMIUFLTR("dfn")=1
"RTN","SAMIUTH3",71,0)
 do WSHOME^SAMIHOM3(.SAMIURTN,.SAMIUFLTR)
"RTN","SAMIUTH3",72,0)
 merge SAMIUARC=SAMIURTN
"RTN","SAMIUTH3",73,0)
 K ^SAMIUT("SAMIUTH3","UTWSHM2","SAMIUARC")
"RTN","SAMIUTH3",74,0)
 M ^SAMIUT("SAMIUTH3","UTWSHM2","SAMIUARC")=SAMIUARC
"RTN","SAMIUTH3",75,0)
 set utsuccess=1
"RTN","SAMIUTH3",76,0)
 do PLUTARR^SAMIUTST(.SAMIUPOO,"UTWSHM2^SAMIUTH3 dfn=1")
"RTN","SAMIUTH3",77,0)
 set nodea=$name(SAMIUARC),nodep=$name(SAMIUPOO)
"RTN","SAMIUTH3",78,0)
 for  set nodea=$query(@nodea),nodep=$query(@nodep) quit:(nodea="")  do  quit:'utsuccess
"RTN","SAMIUTH3",79,0)
 . if $extract($translate(@nodea,""""" "),1,10)?4N1"."2N1"."2N quit
"RTN","SAMIUTH3",80,0)
 . if (@nodea["meta content") quit
"RTN","SAMIUTH3",81,0)
 . if '($qsubscript(nodea,1)=$qsubscript(nodep,1)) set utsuccess=0
"RTN","SAMIUTH3",82,0)
 . if '(@nodea=@nodep) set utsuccess=0
"RTN","SAMIUTH3",83,0)
 if '(nodep="") set utsuccess=0
"RTN","SAMIUTH3",84,0)
 do CHKEQ^%ut(utsuccess,1,"Testing web service dfn=1 FAILED!")
"RTN","SAMIUTH3",85,0)
 quit
"RTN","SAMIUTH3",86,0)
 ;
"RTN","SAMIUTH3",87,0)
UTDVHM ; @TEST - Testing temporary home page for development
"RTN","SAMIUTH3",88,0)
 ; devhome(SAMIURTN,SAMIUFLTR)
"RTN","SAMIUTH3",89,0)
 new SAMIUFLTR,SAMIURTN,SAMIUPOO
"RTN","SAMIUTH3",90,0)
 do DEVHOME^SAMIHOM3(.SAMIURTN,.SAMIUFLTR)
"RTN","SAMIUTH3",91,0)
 do PLUTARR^SAMIUTST(.SAMIUPOO,"UTDVHM^SAMIUTH3")
"RTN","SAMIUTH3",92,0)
 set utsuccess=1
"RTN","SAMIUTH3",93,0)
 ; Check the first 60 nodes match as these represent
"RTN","SAMIUTH3",94,0)
 ;  the parameters for the html page, but not the list
"RTN","SAMIUTH3",95,0)
 ;  of patients - which will vary from day to day
"RTN","SAMIUTH3",96,0)
 new cnt set cnt=0
"RTN","SAMIUTH3",97,0)
 for  set cnt=$order(SAMIURTN(cnt)) quit:cnt>60  do
"RTN","SAMIUTH3",98,0)
 . if '(SAMIURTN(cnt)=SAMIUPOO(cnt)) set utsuccess=0
"RTN","SAMIUTH3",99,0)
 do CHKEQ^%ut(utsuccess,1,"Testing building temp home page FAILED!")
"RTN","SAMIUTH3",100,0)
 quit
"RTN","SAMIUTH3",101,0)
 ;
"RTN","SAMIUTH3",102,0)
UTPTLST ; @TEST - Tesing pulling all patients from vapals-patients
"RTN","SAMIUTH3",103,0)
 ; do PATLIST(ary)
"RTN","SAMIUTH3",104,0)
 new cnt,SAMIUPOO s cnt=""
"RTN","SAMIUTH3",105,0)
 do PATLIST^SAMIHOM3("SAMIUPOO")
"RTN","SAMIUTH3",106,0)
 new groot set groot=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTH3",107,0)
 set utsuccess=($data(SAMIUPOO)=10)
"RTN","SAMIUTH3",108,0)
 do CHKEQ^%ut(utsuccess,1,"Testing pulling patients from vapals-patients FAILED!")
"RTN","SAMIUTH3",109,0)
 quit
"RTN","SAMIUTH3",110,0)
 ;
"RTN","SAMIUTH3",111,0)
UTGETHM ; @TEST - Testing pulling HTML for home.
"RTN","SAMIUTH3",112,0)
 ;do GETHOME(SAMIURTN,SAMIUFLTR)
"RTN","SAMIUTH3",113,0)
 new SAMIUPOO,SAMIUARC,nodea,nodep,SAMIUFLTR
"RTN","SAMIUTH3",114,0)
 set utsuccess=1
"RTN","SAMIUTH3",115,0)
 do GETHOME^SAMIHOM3(.SAMIUPOO,.SAMIUFLTR)
"RTN","SAMIUTH3",116,0)
 K ^SAMIUT("SAMIUTH3","UTGETHM","SAMIUPOO")
"RTN","SAMIUTH3",117,0)
 M ^SAMIUT("SAMIUTH3","UTGETHM","SAMIUPOO")=SAMIUPOO
"RTN","SAMIUTH3",118,0)
 ; Get array saved in "vapals unit tests" for this unit test
"RTN","SAMIUTH3",119,0)
 do PLUTARR^SAMIUTST(.SAMIUARC,"UTGETHM^SAMIHOM3")
"RTN","SAMIUTH3",120,0)
 set utsuccess=1
"RTN","SAMIUTH3",121,0)
 set nodep=$name(SAMIUPOO),nodea=$name(SAMIUARC)
"RTN","SAMIUTH3",122,0)
 for  set nodep=$query(@nodep),nodea=$query(@nodea) quit:nodep=""  do  quit:'utsuccess
"RTN","SAMIUTH3",123,0)
 .; if the first non space 10 characters are a date, skip
"RTN","SAMIUTH3",124,0)
 . if ($extract($translate(@nodep," "),1,10)?4N1P2N1P2N) quit
"RTN","SAMIUTH3",125,0)
 . if (@nodep["meta content") quit
"RTN","SAMIUTH3",126,0)
 . if '($qsubscript(nodea,1)=$qsubscript(nodep,1)) set utsuccess=0
"RTN","SAMIUTH3",127,0)
 . if '(@nodea=@nodep) set utsuccess=0
"RTN","SAMIUTH3",128,0)
 if '(nodea="") set utsuccess=0
"RTN","SAMIUTH3",129,0)
 do CHKEQ^%ut(utsuccess,1,"Testing pulling HTML home page FAILED!")
"RTN","SAMIUTH3",130,0)
 quit
"RTN","SAMIUTH3",131,0)
 ;
"RTN","SAMIUTH3",132,0)
UTSCAN4 ; @TEST - Testing scanning array for a given entry
"RTN","SAMIUTH3",133,0)
 ;do GETHOME(SAMIURTN,SAMIUFLTR)
"RTN","SAMIUTH3",134,0)
 ; set X=$$SCANFOR(ary,start,what)
"RTN","SAMIUTH3",135,0)
 new SAMIUSTR,rndm,SAMIUPOO,SAMIUFLTR set rndm=$random(150)
"RTN","SAMIUTH3",136,0)
 do GETHOME^SAMIHOM3(.SAMIUPOO,.SAMIUFLTR)
"RTN","SAMIUTH3",137,0)
 set SAMIUSTR=$get(SAMIUPOO(rndm))
"RTN","SAMIUTH3",138,0)
 new SAMIUSTART set SAMIUSTART=1
"RTN","SAMIUTH3",139,0)
 for  set SAMIUSTART=$$SCANFOR^SAMIHOM3(.SAMIUPOO,SAMIUSTART,SAMIUSTR) quit:(SAMIUSTART=0)  quit:(SAMIUSTART=rndm)
"RTN","SAMIUTH3",140,0)
 set utsuccess=(SAMIUSTART=rndm)
"RTN","SAMIUTH3",141,0)
 do CHKEQ^%ut(utsuccess,1,"Testing scanning array for a given string FAILED!")
"RTN","SAMIUTH3",142,0)
 quit
"RTN","SAMIUTH3",143,0)
 ;
"RTN","SAMIUTH3",144,0)
UTNXTN ; @TEST - Testing finding next entry number for "vapals-patients"
"RTN","SAMIUTH3",145,0)
 ; set X=$$NEXTNUM
"RTN","SAMIUTH3",146,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTH3",147,0)
 new cnt,lstntry
"RTN","SAMIUTH3",148,0)
 set cnt=0 for  set cnt=$order(@root@(cnt)) quit:'+cnt  set lstntry=cnt
"RTN","SAMIUTH3",149,0)
 set utsuccess=((lstntry+1)=$$NEXTNUM^SAMIHOM3)
"RTN","SAMIUTH3",150,0)
 do CHKEQ^%ut(utsuccess,1,"Testing finding next entry in vapals-patients FAILED!")
"RTN","SAMIUTH3",151,0)
 quit
"RTN","SAMIUTH3",152,0)
 ;
"RTN","SAMIUTH3",153,0)
UTSTDID ; @TEST - Testing generating study ID
"RTN","SAMIUTH3",154,0)
 ;$$genStudyId(nmb)
"RTN","SAMIUTH3",155,0)
 new studyID set studyID=$$GENSTDID^SAMIHOM3(123)
"RTN","SAMIUTH3",156,0)
 do CHKEQ^%ut(studyID,"XXX00123","Testing getting study id FAILED!")
"RTN","SAMIUTH3",157,0)
 quit
"RTN","SAMIUTH3",158,0)
 ;
"RTN","SAMIUTH3",159,0)
UTKEYDT ; @TEST - Testing generating key date from fm date
"RTN","SAMIUTH3",160,0)
 ;$$KEYDATE(fmdt)
"RTN","SAMIUTH3",161,0)
 new SAMIUFMDT set SAMIUFMDT="3181018"
"RTN","SAMIUTH3",162,0)
 do CHKEQ^%ut($$KEYDATE^SAMIHOM3(SAMIUFMDT),"2018-10-18","Testing generation of key date FAILED!")
"RTN","SAMIUTH3",163,0)
 quit
"RTN","SAMIUTH3",164,0)
 ;
"RTN","SAMIUTH3",165,0)
UTVALNM ; @TEST - Testing validate name function
"RTN","SAMIUTH3",166,0)
 ;$$validateName(nm,args)
"RTN","SAMIUTH3",167,0)
 new SAMIUARGS,nm set SAMIUARGS="",nm="POO"
"RTN","SAMIUTH3",168,0)
 new SAMIUX,SAMIUY
"RTN","SAMIUTH3",169,0)
 set SAMIUX=$$VALDTNM^SAMIHOM3(nm,.SAMIUARGS)
"RTN","SAMIUTH3",170,0)
 set nm="POO,SAMIUPOO"
"RTN","SAMIUTH3",171,0)
 set SAMIUY=$$VALDTNM^SAMIHOM3(nm,.SAMIUARGS)
"RTN","SAMIUTH3",172,0)
 set utsuccess=((SAMIUX+SAMIUY)=0)
"RTN","SAMIUTH3",173,0)
 do CHKEQ^%ut(utsuccess,1,"Testing validate name function FAILED!")
"RTN","SAMIUTH3",174,0)
 quit
"RTN","SAMIUTH3",175,0)
 ;
"RTN","SAMIUTH3",176,0)
UTINDX ; @TEST - Testing re-index of vapals-patients Graphstore
"RTN","SAMIUTH3",177,0)
 ; do INDEX^SAMIHOM3
"RTN","SAMIUTH3",178,0)
 new root,dfn1,dfn2
"RTN","SAMIUTH3",179,0)
 set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTH3",180,0)
 set dfn1=$order(@root@("dfn",0))
"RTN","SAMIUTH3",181,0)
 kill @root@("dfn",dfn1)
"RTN","SAMIUTH3",182,0)
 set dfn2=$order(@root@("dfn",0))
"RTN","SAMIUTH3",183,0)
 do INDEX^SAMIHOM3
"RTN","SAMIUTH3",184,0)
 set utsuccess=(dfn1'=dfn2)
"RTN","SAMIUTH3",185,0)
 do CHKEQ^%ut(utsuccess,1,"Testing reindex of vapals-patients FAILED!")
"RTN","SAMIUTH3",186,0)
 quit
"RTN","SAMIUTH3",187,0)
 ;
"RTN","SAMIUTH3",188,0)
UTADDPT ; @TEST Testing ADDPATient adding a new patient to vapals-patients
"RTN","SAMIUTH3",189,0)
 ;*** Removes XXX00001 from vapals-patients file
"RTN","SAMIUTH3",190,0)
 ;     so kills extra nodes in ceform-2018-01-21, thus
"RTN","SAMIUTH3",191,0)
 ;     must put these back for other unit tests
"RTN","SAMIUTH3",192,0)
 ;     See STARTUP section in other unit test routines
"RTN","SAMIUTH3",193,0)
 ;ADDPATient(dfn)
"RTN","SAMIUTH3",194,0)
 new rootvp,rootpl,dfn,gien,studyid,gienut,rootut
"RTN","SAMIUTH3",195,0)
 set rootvp=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTH3",196,0)
 set rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIUTH3",197,0)
 ;
"RTN","SAMIUTH3",198,0)
 ; get test patient loaded when unit tests start
"RTN","SAMIUTH3",199,0)
 set dfn=1
"RTN","SAMIUTH3",200,0)
 set gienut=$order(@rootpl@("dfn",dfn,0))
"RTN","SAMIUTH3",201,0)
 ;
"RTN","SAMIUTH3",202,0)
 ; clear test patient from vapals-patients Graphstore
"RTN","SAMIUTH3",203,0)
 set studyid="XXX00001"
"RTN","SAMIUTH3",204,0)
 kill @rootvp@("sid",studyid)
"RTN","SAMIUTH3",205,0)
 kill @rootvp@("graph",studyid)
"RTN","SAMIUTH3",206,0)
 kill @rootvp@(dfn)
"RTN","SAMIUTH3",207,0)
 kill @rootvp@("dfn",dfn)
"RTN","SAMIUTH3",208,0)
 ;
"RTN","SAMIUTH3",209,0)
 ; generate new entry in vapals-patients, HTML in ^TMP("yottaForm",n)
"RTN","SAMIUTH3",210,0)
 do ADDPAT^SAMIHOM3(dfn)
"RTN","SAMIUTH3",211,0)
 hang 1
"RTN","SAMIUTH3",212,0)
 ;
"RTN","SAMIUTH3",213,0)
 ; check new entry in vapals-patients
"RTN","SAMIUTH3",214,0)
 set utsuccess=($data(@rootvp@(dfn))=10),studyid=@rootvp@(dfn,"sisid")
"RTN","SAMIUTH3",215,0)
 ;
"RTN","SAMIUTH3",216,0)
 do CHKEQ^%ut(utsuccess,1,"Testing ADDPATient adding new patient to vapals-patients FAILED!")
"RTN","SAMIUTH3",217,0)
 quit
"RTN","SAMIUTH3",218,0)
 ;
"RTN","SAMIUTH3",219,0)
 ; builds new si-form and loads vapals-patients Graphstore
"RTN","SAMIUTH3",220,0)
 ;  @rootvp@(dfn,"graph"), @rootvp@(dfn,"graph"), @rootvp@(dfn)
"RTN","SAMIUTH3",221,0)
 ;     and calls PTINFO and update both Graphstore files
"RTN","SAMIUTH3",222,0)
UTWSNC ; @TEST - Testing WSNEWCAS adding a new case to vapals-patients Graphstore
"RTN","SAMIUTH3",223,0)
 ;WSNEWCAS(ARGS,BODY,RESULT)
"RTN","SAMIUTH3",224,0)
 ;
"RTN","SAMIUTH3",225,0)
 new rootvp,rootpl,gien,dfn,saminame,utna,uthtml
"RTN","SAMIUTH3",226,0)
 new SAMIUBODY,SAMIUARGS,SAMIURSLT,SAMIUARC,SAMIUPOO
"RTN","SAMIUTH3",227,0)
 set rootvp=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTH3",228,0)
 set rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIUTH3",229,0)
 ; get test patient loaded when unit tests start
"RTN","SAMIUTH3",230,0)
 set dfn=1
"RTN","SAMIUTH3",231,0)
 set gien=$order(@rootpl@("dfn",dfn,0))
"RTN","SAMIUTH3",232,0)
 ;
"RTN","SAMIUTH3",233,0)
 set saminame=@rootpl@(gien,"saminame")
"RTN","SAMIUTH3",234,0)
 new SAMIUBODY set SAMIUBODY(1)="saminame="_saminame_"&dfn="_dfn
"RTN","SAMIUTH3",235,0)
 ;
"RTN","SAMIUTH3",236,0)
 ; clear test patient from vapals-patients Graphstore
"RTN","SAMIUTH3",237,0)
 set studyid="XXX00001"
"RTN","SAMIUTH3",238,0)
 kill @rootvp@("sid",studyid)
"RTN","SAMIUTH3",239,0)
 kill @rootvp@("graph",studyid)
"RTN","SAMIUTH3",240,0)
 kill @rootvp@(dfn)
"RTN","SAMIUTH3",241,0)
 kill @rootvp@("dfn",dfn)
"RTN","SAMIUTH3",242,0)
 ;
"RTN","SAMIUTH3",243,0)
 ; generate new entry in vapals-patients
"RTN","SAMIUTH3",244,0)
 ;   HTML result will be in ^TMP("yottaForm",n)
"RTN","SAMIUTH3",245,0)
 do WSNEWCAS^SAMIHOM3(.SAMIUARGS,.SAMIUBODY,.SAMIURSLT)
"RTN","SAMIUTH3",246,0)
 h 2
"RTN","SAMIUTH3",247,0)
 ;
"RTN","SAMIUTH3",248,0)
 ; check new entry in vapals-patients
"RTN","SAMIUTH3",249,0)
 set utna=($get(@rootvp@(dfn,"samistudyid"))=SAMIUARGS("studyid"))
"RTN","SAMIUTH3",250,0)
 set utsuccess=1
"RTN","SAMIUTH3",251,0)
 ;
"RTN","SAMIUTH3",252,0)
 ; check HTML matches that saved in vapals unit tests
"RTN","SAMIUTH3",253,0)
 ;  e.g. SAMIUARGS("form")="vapals:siform-2018-10-18"
"RTN","SAMIUTH3",254,0)
 ;       SAMIUARGS("studyid")="XXX00001"
"RTN","SAMIUTH3",255,0)
 ;  e.g. result="^TMP(""yottaForm"",20523)"
"RTN","SAMIUTH3",256,0)
 if utna set uthtml=1 do
"RTN","SAMIUTH3",257,0)
 . do PLUTARR^SAMIUTST(.SAMIUARC,"UTWSNC^SAMIUTH3")
"RTN","SAMIUTH3",258,0)
 . new rooty set rooty=$name(^TMP("yottaForm",+$piece(SAMIURSLT,",",2)))
"RTN","SAMIUTH3",259,0)
 . set rooty=$name(^TMP("yottaForm",+$piece(SAMIURSLT,",",2)))
"RTN","SAMIUTH3",260,0)
 . merge SAMIUPOO=@rooty
"RTN","SAMIUTH3",261,0)
 .;
"RTN","SAMIUTH3",262,0)
 . set nodea=$name(SAMIUARC),nodep=$name(SAMIUPOO)
"RTN","SAMIUTH3",263,0)
 . for  set nodep=$query(@nodep),nodea=$query(@nodea) quit:nodep=""  do  quit:'utsuccess
"RTN","SAMIUTH3",264,0)
 ..; skip certain lines that will contain dates
"RTN","SAMIUTH3",265,0)
 .. if @nodep["meta content" quit
"RTN","SAMIUTH3",266,0)
 .. if ($extract($translate(@nodep," "),1,10)?4N1P2N1P2N) quit
"RTN","SAMIUTH3",267,0)
 .. if @nodep["siform"  quit
"RTN","SAMIUTH3",268,0)
 .. if $piece($extract($translate($piece(@nodea,"=",2),""""),1,10)," ")?.N1"/".N1"/"4N quit
"RTN","SAMIUTH3",269,0)
 .. if @nodea["4/19/2019" quit
"RTN","SAMIUTH3",270,0)
 .. if @nodea["const frozen" quit
"RTN","SAMIUTH3",271,0)
 .. if @nodea["const newForm" quit
"RTN","SAMIUTH3",272,0)
 ..;
"RTN","SAMIUTH3",273,0)
 .. if '($qsubscript(nodea,1)=$qsubscript(nodep,1)) set uthtml=0
"RTN","SAMIUTH3",274,0)
 .. if '(@nodea=@nodep) set uthtml=0
"RTN","SAMIUTH3",275,0)
 if '(nodea="") set uthtml=0
"RTN","SAMIUTH3",276,0)
 ;
"RTN","SAMIUTH3",277,0)
 set utsuccess=$select((utna+uthtml=2):1,1:0)
"RTN","SAMIUTH3",278,0)
 do CHKEQ^%ut(utsuccess,1,"Testing WSNEWCAS adding new patient to vapals-patients FAILED!")
"RTN","SAMIUTH3",279,0)
 quit
"RTN","SAMIUTH3",280,0)
 ;
"RTN","SAMIUTH3",281,0)
 ;
"RTN","SAMIUTH3",282,0)
UTSIFRM ; @TEST - Testing creating a Siform
"RTN","SAMIUTH3",283,0)
 ; do makeSiform(num)
"RTN","SAMIUTH3",284,0)
 new root,SAMIUNUM,sid,cdate,SAMIUPOO
"RTN","SAMIUTH3",285,0)
 set SAMIUNUM=1
"RTN","SAMIUTH3",286,0)
 set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTH3",287,0)
 set sid=$get(@root@(SAMIUNUM,"samistudyid"))
"RTN","SAMIUTH3",288,0)
 if sid="" do  quit
"RTN","SAMIUTH3",289,0)
 . do FAIL^%ut("Error, no sid for dfn=1!")
"RTN","SAMIUTH3",290,0)
 set cdate=$get(@root@(SAMIUNUM,"samicreatedate"))
"RTN","SAMIUTH3",291,0)
 if cdate="" do  quit
"RTN","SAMIUTH3",292,0)
 . do FAIL^%ut("Error, no samigratedate for dfn=1!")
"RTN","SAMIUTH3",293,0)
 merge SAMIUPOO=@root@("graph",sid,"siform-"_cdate)
"RTN","SAMIUTH3",294,0)
 kill @root@("graph",sid,"siform-"_cdate)
"RTN","SAMIUTH3",295,0)
 do MKSIFORM^SAMIHOM3(SAMIUNUM)
"RTN","SAMIUTH3",296,0)
 ; look for Siform
"RTN","SAMIUTH3",297,0)
 set utsuccess=$data(@root@("graph",sid,"siform-"_cdate))
"RTN","SAMIUTH3",298,0)
 kill @root@("graph",sid,"siform-"_cdate)
"RTN","SAMIUTH3",299,0)
 merge @root@("graph",sid,"siform-"_cdate)=SAMIUPOO
"RTN","SAMIUTH3",300,0)
 do CHKEQ^%ut(utsuccess,10,"Testing makeSiform FAILED!")
"RTN","SAMIUTH3",301,0)
 quit
"RTN","SAMIUTH3",302,0)
 ;
"RTN","SAMIUTH3",303,0)
UTSBFRM ; @TEST - Testing creating a background form
"RTN","SAMIUTH3",304,0)
 ; do makeSbform(num)
"RTN","SAMIUTH3",305,0)
 new root,SAMIUNUM,sid,cdate
"RTN","SAMIUTH3",306,0)
 set SAMIUNUM=1
"RTN","SAMIUTH3",307,0)
 set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTH3",308,0)
 set sid=$get(@root@(SAMIUNUM,"samistudyid"))
"RTN","SAMIUTH3",309,0)
 if sid="" do  quit
"RTN","SAMIUTH3",310,0)
 . do FAIL^%ut("Error, no sid for dfn=1!")
"RTN","SAMIUTH3",311,0)
 set cdate=$get(@root@(SAMIUNUM,"samicreatedate"))
"RTN","SAMIUTH3",312,0)
 if cdate="" do  quit
"RTN","SAMIUTH3",313,0)
 . do FAIL^%ut("Error, no samigratedate for dfn=1!")
"RTN","SAMIUTH3",314,0)
 kill @root@("graph",sid,"sbform-"_cdate)
"RTN","SAMIUTH3",315,0)
 do MKSBFORM^SAMIHOM3(SAMIUNUM)
"RTN","SAMIUTH3",316,0)
 hang 2
"RTN","SAMIUTH3",317,0)
 ; look for Sbform
"RTN","SAMIUTH3",318,0)
 set utsuccess=+$data(@root@("graph",sid,"sbform-"_cdate))
"RTN","SAMIUTH3",319,0)
 kill @root@("graph",sid,"sbform-"_cdate)
"RTN","SAMIUTH3",320,0)
 do CHKEQ^%ut(utsuccess,10,"Testing makeSbform FAILED!")
"RTN","SAMIUTH3",321,0)
 quit
"RTN","SAMIUTH3",322,0)
 ; 
"RTN","SAMIUTH3",323,0)
 ;
"RTN","SAMIUTH3",324,0)
 ; No unit test at this time.  Problems with clinic and that
"RTN","SAMIUTH3",325,0)
 ;   there may be a dfn 1 patient in file 2 so I need to manage a
"RTN","SAMIUTH3",326,0)
 ;   path that will not generate a tiu on a real patient
"RTN","SAMIUTH3",327,0)
UTPOSTF ; TEST - Test WSVAPALS API route="postform" build TIU
"RTN","SAMIUTH3",328,0)
 new SAMIUARG,SAMIUBODY,SAMIURSLT,route,SAMIUPOO,SAMIUARC,SAMIUFLTR
"RTN","SAMIUTH3",329,0)
 ; get name of existing siform for our test patient
"RTN","SAMIUTH3",330,0)
 set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTH3",331,0)
 new glbrt set glbrt=$name(@root@("graph","XXX00001","siform"))
"RTN","SAMIUTH3",332,0)
 set SAMIUARG("form")=$order(@glbrt)
"RTN","SAMIUTH3",333,0)
 ;
"RTN","SAMIUTH3",334,0)
 kill ^TMP("UNIT TEST","UTTASK^SAMIUTVA")
"RTN","SAMIUTH3",335,0)
 set SAMIUARG("samiroute")="postform"
"RTN","SAMIUTH3",336,0)
 set SAMIUARG("studyid")="XXX00001"
"RTN","SAMIUTH3",337,0)
 do WSVAPALS^SAMIHOM3(.SAMIUARG,.SAMIUBODY,.SAMIURSLT)
"RTN","SAMIUTH3",338,0)
 hang 2
"RTN","SAMIUTH3",339,0)
 K ^SAMIUT("SAMIUTH3","UTPOSTF","SAMIURSLT")
"RTN","SAMIUTH3",340,0)
 M ^SAMIUT("SAMIUTH3","UTPOSTF","SAMIURSLT")=SAMIURSLT
"RTN","SAMIUTH3",341,0)
 new tiuien set tiuien=$get(^TMP("UNIT TEST","UTTASK^SAMIUTVA"))
"RTN","SAMIUTH3",342,0)
 if '$get(tiuien) do  quit
"RTN","SAMIUTH3",343,0)
 . do FAIL^%ut("Error, New TIU note not created")
"RTN","SAMIUTH3",344,0)
 merge SAMIUPOO=SAMIURSLT
"RTN","SAMIUTH3",345,0)
 set utsuccess=1
"RTN","SAMIUTH3",346,0)
 K ^SAMIUT("UTPOSTF","SAMIUTH3","SAMIUPOO")
"RTN","SAMIUTH3",347,0)
 M ^SAMIUT("UTPOSTF","SAMIUTH3","SAMIUPOO")=SAMIUPOO
"RTN","SAMIUTH3",348,0)
 ; Get array saved in "vapals unit tests" for this unit test
"RTN","SAMIUTH3",349,0)
 do PLUTARR^SAMIUTST(.SAMIUARC,"UTPOSTF^SAMIUTH3")
"RTN","SAMIUTH3",350,0)
 set nodea=$name(SAMIUARC),nodep=$name(SAMIUPOO)
"RTN","SAMIUTH3",351,0)
 for  set nodep=$query(@nodep),nodea=$query(@nodea) quit:nodep=""  do
"RTN","SAMIUTH3",352,0)
 . if ($extract($translate(@nodep," "),1,10)?4N1P2N1P2N) quit
"RTN","SAMIUTH3",353,0)
 . if (@nodep["meta content") quit
"RTN","SAMIUTH3",354,0)
 . if (@nodep["Date of contact:") quit
"RTN","SAMIUTH3",355,0)
 . if (@nodep["Date of chart review:") quit
"RTN","SAMIUTH3",356,0)
 . if (@nodep["Date of intake discussion contact:") quit
"RTN","SAMIUTH3",357,0)
 . if '($qsubscript(nodea,1)=$qsubscript(nodep,1)) set utsuccess=0
"RTN","SAMIUTH3",358,0)
 . if '(@nodea=@nodep) set utsuccess=0
"RTN","SAMIUTH3",359,0)
 if 'nodea="" set utsuccess=0
"RTN","SAMIUTH3",360,0)
 ; Delete the tiu note just created
"RTN","SAMIUTH3",361,0)
 new chkdel set chkdel=$$DELTIU^SAMIVSTA(tiuien)
"RTN","SAMIUTH3",362,0)
 ;
"RTN","SAMIUTH3",363,0)
 do CHKEQ^%ut(utsuccess,1,"Testing WSVAPALS postform  FAILED!")
"RTN","SAMIUTH3",364,0)
 quit
"RTN","SAMIUTH3",365,0)
 ;
"RTN","SAMIUTH3",366,0)
 ;
"RTN","SAMIUTH3",367,0)
EOR ;End of routine SAMIUTH3
"RTN","SAMIUTLG")
0^74^B14293112
"RTN","SAMIUTLG",1,0)
SAMIUTLG ;ven/lgc - Unit test for SAMILOG ;Jan 16, 2020@11:11
"RTN","SAMIUTLG",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTLG",3,0)
 ;
"RTN","SAMIUTLG",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTLG",5,0)
 ;
"RTN","SAMIUTLG",6,0)
 ; @section 0 primary development
"RTN","SAMIUTLG",7,0)
 ;
"RTN","SAMIUTLG",8,0)
 ; @routine-credits
"RTN","SAMIUTLG",9,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUTLG",10,0)
 ;  larry@fiscientific.com
"RTN","SAMIUTLG",11,0)
 ; @additional-dev: Linda M. R. Yaw (lmry)
"RTN","SAMIUTLG",12,0)
 ;  linda.yaw@vistaexpertise.net
"RTN","SAMIUTLG",13,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUTLG",14,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUTLG",15,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUTLG",16,0)
 ; @license: see routine SAMIUL
"RTN","SAMIUTLG",17,0)
 ;
"RTN","SAMIUTLG",18,0)
 ; @last-updated: 2019-03-25T22:09Z
"RTN","SAMIUTLG",19,0)
 ; @application: SAMI
"RTN","SAMIUTLG",20,0)
 ; @version: 18.0
"RTN","SAMIUTLG",21,0)
 ; @patch-list: none yet
"RTN","SAMIUTLG",22,0)
 ;
"RTN","SAMIUTLG",23,0)
 ; @to-do
"RTN","SAMIUTLG",24,0)
 ;
"RTN","SAMIUTLG",25,0)
 ; @section 1 code
"RTN","SAMIUTLG",26,0)
 ;
"RTN","SAMIUTLG",27,0)
START if $text(^%ut)="" write !,"*** UNIT TEST NOT INSTALLED ***" quit
"RTN","SAMIUTLG",28,0)
 do EN^%ut($text(+0),2)
"RTN","SAMIUTLG",29,0)
 quit
"RTN","SAMIUTLG",30,0)
 ;
"RTN","SAMIUTLG",31,0)
 ;
"RTN","SAMIUTLG",32,0)
STARTUP new utsuccess
"RTN","SAMIUTLG",33,0)
 quit
"RTN","SAMIUTLG",34,0)
 ;
"RTN","SAMIUTLG",35,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUTLG",36,0)
 kill utsuccess
"RTN","SAMIUTLG",37,0)
 quit
"RTN","SAMIUTLG",38,0)
 ;
"RTN","SAMIUTLG",39,0)
 ;
"RTN","SAMIUTLG",40,0)
UTTOGL ; @TEST - Toggle VAPALS password identification
"RTN","SAMIUTLG",41,0)
 ;TOGOFF^SAMILOG and TOGON^SAMILOG
"RTN","SAMIUTLG",42,0)
 new pooget,poopost,ienget,ienpost,root
"RTN","SAMIUTLG",43,0)
 set root=$name(^%web(17.6001))
"RTN","SAMIUTLG",44,0)
 set ienget=$order(@root@("B","GET","vapals","WSHOME^SAMIHOM3",0))
"RTN","SAMIUTLG",45,0)
 set ienpost=$order(@root@("B","POST","vapals","WSVAPALS^SAMIHOM3",0))
"RTN","SAMIUTLG",46,0)
 set pooget=+$get(@root@(ienget,"AUTH"))
"RTN","SAMIUTLG",47,0)
 set poopost=+$get(@root@(ienpost,"AUTH"))
"RTN","SAMIUTLG",48,0)
 ;if the two (get and post) are not set the same, then
"RTN","SAMIUTLG",49,0)
 ;  there is an error in the WEB SERVICE URL HANDLER file
"RTN","SAMIUTLG",50,0)
 i '(pooget=poopost) d  q
"RTN","SAMIUTLG",51,0)
 . d FAIL^%ut("Error, WEB SERVICE URL HANDLER setup error!")
"RTN","SAMIUTLG",52,0)
 ;
"RTN","SAMIUTLG",53,0)
 if pooget=1 do
"RTN","SAMIUTLG",54,0)
 . do TOGOFF^SAMILOG
"RTN","SAMIUTLG",55,0)
 . set utsuccess='$get(@root@(ienget,"AUTH"))
"RTN","SAMIUTLG",56,0)
 . do CHKEQ^%ut(utsuccess,1,"Toggle password OFF FAILED!")
"RTN","SAMIUTLG",57,0)
 . do TOGON^SAMILOG
"RTN","SAMIUTLG",58,0)
 . set utsuccess=$get(@root@(ienget,"AUTH"))
"RTN","SAMIUTLG",59,0)
 . do CHKEQ^%ut(utsuccess,1,"Toggle password ON FAILED!")
"RTN","SAMIUTLG",60,0)
 else  do
"RTN","SAMIUTLG",61,0)
 . do TOGON^SAMILOG
"RTN","SAMIUTLG",62,0)
 . set utsuccess=$get(@root@(ienget,"AUTH"))
"RTN","SAMIUTLG",63,0)
 . do CHKEQ^%ut(utsuccess,1,"Toggle password ON FAILED!")
"RTN","SAMIUTLG",64,0)
 . do TOGOFF^SAMILOG
"RTN","SAMIUTLG",65,0)
 . set utsuccess='$get(@root@(ienget,"AUTH"))
"RTN","SAMIUTLG",66,0)
 . do CHKEQ^%ut(utsuccess,1,"Toggle password OFF FAILED!")
"RTN","SAMIUTLG",67,0)
 ;
"RTN","SAMIUTLG",68,0)
 ; Now test the interactive entry point
"RTN","SAMIUTLG",69,0)
 do STONOFF^SAMILOG
"RTN","SAMIUTLG",70,0)
 set utsuccess='(pooget=$get(@root@(ienget,"AUTH")))
"RTN","SAMIUTLG",71,0)
 do CHKEQ^%ut(utsuccess,1,"Toggle password 1st interactive FAILED!")
"RTN","SAMIUTLG",72,0)
 do STONOFF^SAMILOG
"RTN","SAMIUTLG",73,0)
 set utsuccess=(pooget=$get(@root@(ienget,"AUTH")))
"RTN","SAMIUTLG",74,0)
 do CHKEQ^%ut(utsuccess,1,"Toggle password 2nd interactive FAILED!")
"RTN","SAMIUTLG",75,0)
 ;
"RTN","SAMIUTLG",76,0)
 ; Be sure we leave setting as it was
"RTN","SAMIUTLG",77,0)
 new node set node=$name(@root@(ienget,"AUTH"))
"RTN","SAMIUTLG",78,0)
 set @node=pooget
"RTN","SAMIUTLG",79,0)
 quit
"RTN","SAMIUTLG",80,0)
 ;
"RTN","SAMIUTLG",81,0)
 ;
"RTN","SAMIUTLG",82,0)
UTME ; @TEST - Test turning on and off manual entry 
"RTN","SAMIUTLG",83,0)
 new me,meoff,meon
"RTN","SAMIUTLG",84,0)
 set me=$$GET^XPAR("SYS","SAMI ALLOW MANUAL ENTRY",,"Q")
"RTN","SAMIUTLG",85,0)
 if me do
"RTN","SAMIUTLG",86,0)
 . D EN^XPAR("SYS","SAMI ALLOW MANUAL ENTRY",1,0)
"RTN","SAMIUTLG",87,0)
 . set meoff=$$GET^XPAR("SYS","SAMI ALLOW MANUAL ENTRY",,"Q")
"RTN","SAMIUTLG",88,0)
 . D EN^XPAR("SYS","SAMI ALLOW MANUAL ENTRY",1,1)
"RTN","SAMIUTLG",89,0)
 . set meon=$$GET^XPAR("SYS","SAMI ALLOW MANUAL ENTRY",,"Q")
"RTN","SAMIUTLG",90,0)
 if 'me do
"RTN","SAMIUTLG",91,0)
 . D EN^XPAR("SYS","SAMI ALLOW MANUAL ENTRY",1,1)
"RTN","SAMIUTLG",92,0)
 . set meon=$$GET^XPAR("SYS","SAMI ALLOW MANUAL ENTRY",,"Q")
"RTN","SAMIUTLG",93,0)
 . D EN^XPAR("SYS","SAMI ALLOW MANUAL ENTRY",1,0)
"RTN","SAMIUTLG",94,0)
 . set meoff=$$GET^XPAR("SYS","SAMI ALLOW MANUAL ENTRY",,"Q")
"RTN","SAMIUTLG",95,0)
 set utsuccess=0
"RTN","SAMIUTLG",96,0)
 if meon=1,meoff=0 set utsuccess=1
"RTN","SAMIUTLG",97,0)
 do CHKEQ^%ut(utsuccess,1,"Toggle ALLOW MANUAL ENTRY FAILED!")
"RTN","SAMIUTLG",98,0)
 quit
"RTN","SAMIUTLG",99,0)
 ;
"RTN","SAMIUTLG",100,0)
EOR ;End of routine SAMIUTLG
"RTN","SAMIUTM2")
0^75^B4287447
"RTN","SAMIUTM2",1,0)
SAMIUTM2 ;ven/lgc/smh - UNIT TEST for SAMIM2M ; 2019-03-28T20:00Z
"RTN","SAMIUTM2",2,0)
 ;;18.0;SAM;;;Build 1
"RTN","SAMIUTM2",3,0)
 ;
"RTN","SAMIUTM2",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTM2",5,0)
 ;
"RTN","SAMIUTM2",6,0)
 ;SAM'S INDUSTRIAL CONGLOMERATES
"RTN","SAMIUTM2",7,0)
 ;
"RTN","SAMIUTM2",8,0)
 ; Provide standardized entrance into KBANSCAU
"RTN","SAMIUTM2",9,0)
 ;  M2M broker for VA-PALS
"RTN","SAMIUTM2",10,0)
 ;
"RTN","SAMIUTM2",11,0)
 ;
"RTN","SAMIUTM2",12,0)
 ;@routine-credits
"RTN","SAMIUTM2",13,0)
 ;@primary development organization: Vista Expertise Network
"RTN","SAMIUTM2",14,0)
 ;@primary-dev: Larry G. Carlson (lgc)
"RTN","SAMIUTM2",15,0)
 ;@additional-dev: Linda M. R. Yaw (lmry)
"RTN","SAMIUTM2",16,0)
 ;@primary development organization: SAM'S INDUSTRIAL CONGLOMERATES
"RTN","SAMIUTM2",17,0)
 ;@primary-dev: Sam Habiel (smh)
"RTN","SAMIUTM2",18,0)
 ;@copyright:
"RTN","SAMIUTM2",19,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTM2",20,0)
 ;
"RTN","SAMIUTM2",21,0)
 ;@last-updated: 2019-03-28T20:00Z
"RTN","SAMIUTM2",22,0)
 ;@application: VA-PALS
"RTN","SAMIUTM2",23,0)
 ;@version: 1.0
"RTN","SAMIUTM2",24,0)
 ;
"RTN","SAMIUTM2",25,0)
 ;
"RTN","SAMIUTM2",26,0)
START if $text(^%ut)="" write !,"*** UNIT TEST NOT INSTALLED ***" quit
"RTN","SAMIUTM2",27,0)
 do EN^%ut($text(+0),2)
"RTN","SAMIUTM2",28,0)
 quit
"RTN","SAMIUTM2",29,0)
 ;
"RTN","SAMIUTM2",30,0)
 ; ============== UNIT TESTS ======================
"RTN","SAMIUTM2",31,0)
 ; NOTE: Unit tests will pull data using the local
"RTN","SAMIUTM2",32,0)
 ;       client VistA files rather than risk degrading
"RTN","SAMIUTM2",33,0)
 ;       large datasets in use.  NEVERTHELESS, it is
"RTN","SAMIUTM2",34,0)
 ;       recommended that UNIT TESTS be run when
"RTN","SAMIUTM2",35,0)
 ;       VA-PALS is not in use as some Graphstore globals
"RTN","SAMIUTM2",36,0)
 ;       are temporarily moved while testing is running.
"RTN","SAMIUTM2",37,0)
 ;
"RTN","SAMIUTM2",38,0)
STARTUP new utsuccess,port,host,av
"RTN","SAMIUTM2",39,0)
 set port=$$GET^XPAR("SYS","SAMI PORT",,"Q")
"RTN","SAMIUTM2",40,0)
 set host=$$GET^XPAR("SYS","SAMI IP ADDRESS",,"Q")
"RTN","SAMIUTM2",41,0)
 set:($get(host)="") host="127.0.0.1"
"RTN","SAMIUTM2",42,0)
 set av=$$GET^XPAR("SYS","SAMI ACCVER",,"Q")
"RTN","SAMIUTM2",43,0)
 if ('$get(port))!('($length($get(av),";")=2)) do  goto SHUTDOWN
"RTN","SAMIUTM2",44,0)
 . do FAIL^%ut("SAMI PARAMETERS MUST BE SET UP FOR UNIT TESTING")
"RTN","SAMIUTM2",45,0)
 quit
"RTN","SAMIUTM2",46,0)
 ;
"RTN","SAMIUTM2",47,0)
SHUTDOWN ; ZEXCEPT: utsuccess,port,host,av - defined in STARTUP
"RTN","SAMIUTM2",48,0)
 kill utsuccess,port,host,av
"RTN","SAMIUTM2",49,0)
 quit
"RTN","SAMIUTM2",50,0)
 ;
"RTN","SAMIUTM2",51,0)
TESTM2M ; @TEST - Test full M2M call
"RTN","SAMIUTM2",52,0)
 new SAMICNTXT,SAMIRMPR,SAMICSOL,SAMIOPEN,SAMIDATA,SAMIARR
"RTN","SAMIUTM2",53,0)
 set SAMICNTXT="XWB BROKER EXAMPLE"
"RTN","SAMIUTM2",54,0)
 set SAMIRMPR="XWB EXAMPLE ECHO STRING"
"RTN","SAMIUTM2",55,0)
 set (SAMICSOL,SAMIOPEN)=0
"RTN","SAMIUTM2",56,0)
 set SAMIARR(1)="ABC12345DEF"
"RTN","SAMIUTM2",57,0)
 do M2M^SAMIM2M(.SAMIDATA,SAMICNTXT,SAMIRMPR,SAMICSOL,SAMIOPEN,.SAMIARR)
"RTN","SAMIUTM2",58,0)
 do CHKEQ^%ut(SAMIDATA,SAMIARR(1),"Testing Complete SAMIM2M call  FAILED!")
"RTN","SAMIUTM2",59,0)
 quit
"RTN","SAMIUTM2",60,0)
 ;
"RTN","SAMIUTM2",61,0)
 ;
"RTN","SAMIUTM2",62,0)
EOR ;End of routine SAMIUTM2
"RTN","SAMIUTNI")
0^76^B16587563
"RTN","SAMIUTNI",1,0)
SAMIUTNI ;ven/lgc - UNIT TEST for SAMINOTI ;Oct 22, 2019@15:47
"RTN","SAMIUTNI",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTNI",3,0)
 ;
"RTN","SAMIUTNI",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTNI",5,0)
 ;
"RTN","SAMIUTNI",6,0)
 ; @section 0 primary development
"RTN","SAMIUTNI",7,0)
 ;
"RTN","SAMIUTNI",8,0)
 ; @routine-credits
"RTN","SAMIUTNI",9,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUTNI",10,0)
 ;  larry@fiscientific.com
"RTN","SAMIUTNI",11,0)
 ; @additional-dev: Linda M. R. Yaw (lmry)
"RTN","SAMIUTNI",12,0)
 ;  linda.yaw@vistaexpertise.net
"RTN","SAMIUTNI",13,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUTNI",14,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUTNI",15,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUTNI",16,0)
 ; @license: see routine SAMIUL
"RTN","SAMIUTNI",17,0)
 ;
"RTN","SAMIUTNI",18,0)
 ; @application: SAMI
"RTN","SAMIUTNI",19,0)
 ; @version: 18.0
"RTN","SAMIUTNI",20,0)
 ; @patch-list: none yet
"RTN","SAMIUTNI",21,0)
 ;
"RTN","SAMIUTNI",22,0)
 ; @to-do
"RTN","SAMIUTNI",23,0)
 ;
"RTN","SAMIUTNI",24,0)
 ; @section 1 code
"RTN","SAMIUTNI",25,0)
 ;
"RTN","SAMIUTNI",26,0)
START if $text(^%ut)="" write !,"*** UNIT TEST NOT INSTALLED ***" quit
"RTN","SAMIUTNI",27,0)
 do EN^%ut($text(+0),2)
"RTN","SAMIUTNI",28,0)
 quit
"RTN","SAMIUTNI",29,0)
 ;
"RTN","SAMIUTNI",30,0)
 ;
"RTN","SAMIUTNI",31,0)
STARTUP new utsuccess
"RTN","SAMIUTNI",32,0)
 D SVAPT1^SAMIUTST  ; Save VA's DFN 1 patient data
"RTN","SAMIUTNI",33,0)
 D LOADTPT^SAMIUTST  ; Load unit test patient data
"RTN","SAMIUTNI",34,0)
 quit
"RTN","SAMIUTNI",35,0)
 ;
"RTN","SAMIUTNI",36,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUTNI",37,0)
 kill utsuccess
"RTN","SAMIUTNI",38,0)
 D LVAPT1^SAMIUTST  ; Return VA's DPT 1 patient's data
"RTN","SAMIUTNI",39,0)
 quit
"RTN","SAMIUTNI",40,0)
 ;
"RTN","SAMIUTNI",41,0)
 ;
"RTN","SAMIUTNI",42,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUTNI",43,0)
 do ^SAMINOTI
"RTN","SAMIUTNI",44,0)
 do SUCCEED^%ut
"RTN","SAMIUTNI",45,0)
 quit
"RTN","SAMIUTNI",46,0)
 ;
"RTN","SAMIUTNI",47,0)
UTWSNOTE ; @TEST - web service which returns a text note
"RTN","SAMIUTNI",48,0)
 ;WSNOTE(return,filter)
"RTN","SAMIUTNI",49,0)
 new SAMIFLTR,SAMIUPOO,SAMIUARC
"RTN","SAMIUTNI",50,0)
 set SAMIFLTR("studyid")="XXX00001"
"RTN","SAMIUTNI",51,0)
 set SAMIFLTR("form")="ceform-2018-10-21"
"RTN","SAMIUTNI",52,0)
 ; pull text note
"RTN","SAMIUTNI",53,0)
 do WSNOTE^SAMINOTI(.SAMIUPOO,.SAMIFLTR)
"RTN","SAMIUTNI",54,0)
 ; get array of what text note should look like
"RTN","SAMIUTNI",55,0)
 do PLUTARR^SAMIUTST(.SAMIUARC,"UTWSNOTE^SAMIUTNI")
"RTN","SAMIUTNI",56,0)
 ; compare the two
"RTN","SAMIUTNI",57,0)
 new nodep,nodea set nodep=$name(SAMIUPOO),nodea=$name(SAMIUARC)
"RTN","SAMIUTNI",58,0)
 set utsuccess=1
"RTN","SAMIUTNI",59,0)
 for  set nodep=$query(@nodep),nodea=$query(@nodea) quit:nodep=""  do  quit:'utsuccess
"RTN","SAMIUTNI",60,0)
 . if (@nodep["meta content") quit
"RTN","SAMIUTNI",61,0)
 . if $extract($translate(@nodep,""""" "),1,10)?4N1"."2N1"."2N quit
"RTN","SAMIUTNI",62,0)
 . if ($qs(nodea,1)=142) quit
"RTN","SAMIUTNI",63,0)
 . if '(@nodep=@nodea) set utsuccess=0
"RTN","SAMIUTNI",64,0)
 if utsuccess set utsuccess=(nodea="")
"RTN","SAMIUTNI",65,0)
 do CHKEQ^%ut(utsuccess,1,"Testing web service return a note FAILED!")
"RTN","SAMIUTNI",66,0)
 quit
"RTN","SAMIUTNI",67,0)
 ;
"RTN","SAMIUTNI",68,0)
UTNOTFLT ; @TEST - extrnisic which creates a note
"RTN","SAMIUTNI",69,0)
 ;NOTE(filter)
"RTN","SAMIUTNI",70,0)
 new SAMIFLTR,root,SAMIVALS,SAMIUPOO
"RTN","SAMIUTNI",71,0)
 set SAMIFLTR("studyid")="XXX00001"
"RTN","SAMIUTNI",72,0)
 set SAMIFLTR("form")="ceform-2018-10-21"
"RTN","SAMIUTNI",73,0)
 set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTNI",74,0)
 set SAMIVALS=$name(@root@("graph",SAMIFLTR("studyid"),SAMIFLTR("form"),"note"))
"RTN","SAMIUTNI",75,0)
 ; kill any existing note
"RTN","SAMIUTNI",76,0)
 kill @SAMIVALS
"RTN","SAMIUTNI",77,0)
 ; build new note
"RTN","SAMIUTNI",78,0)
 do NOTE^SAMINOTI(.SAMIFLTR)
"RTN","SAMIUTNI",79,0)
 ; pull array with what the note should look like in global
"RTN","SAMIUTNI",80,0)
 do PLUTARR^SAMIUTST(.SAMIUPOO,"UTNOTFLT^SAMIUTNI")
"RTN","SAMIUTNI",81,0)
 ; now compare the two
"RTN","SAMIUTNI",82,0)
 set utsuccess=1
"RTN","SAMIUTNI",83,0)
 new nodep set nodep=$name(SAMIUPOO)
"RTN","SAMIUTNI",84,0)
 for  set nodep=$query(@nodep),SAMIVALS=$query(@SAMIVALS) quit:(nodep="")  do  quit:'utsuccess
"RTN","SAMIUTNI",85,0)
 . if '(@nodep=@SAMIVALS) set utsuccess=0
"RTN","SAMIUTNI",86,0)
 if utsuccess set utsuccess=($qsubscript(SAMIVALS,6)'["note")
"RTN","SAMIUTNI",87,0)
 do CHKEQ^%ut(utsuccess,1,"Testing extrinsic which creates note FAILED!")
"RTN","SAMIUTNI",88,0)
 quit
"RTN","SAMIUTNI",89,0)
 ;
"RTN","SAMIUTNI",90,0)
UTOUT ; @TEST - Testing out(ln)
"RTN","SAMIUTNI",91,0)
 ;OUT(ln)
"RTN","SAMIUTNI",92,0)
 new cnt,dest,SAMIUPOO
"RTN","SAMIUTNI",93,0)
 set cnt=1,dest="SAMIUPOO",SAMIUPOO(1)="First line of test"
"RTN","SAMIUTNI",94,0)
 new SAMILN set SAMILN="Second line test"
"RTN","SAMIUTNI",95,0)
 set utsuccess=0
"RTN","SAMIUTNI",96,0)
 do OUT^SAMINOTI(SAMILN)
"RTN","SAMIUTNI",97,0)
 set utsuccess=($get(SAMIUPOO(2))="Second line test")
"RTN","SAMIUTNI",98,0)
 do CHKEQ^%ut(utsuccess,1,"Testing out(ln) adds line to array FAILED!")
"RTN","SAMIUTNI",99,0)
 quit
"RTN","SAMIUTNI",100,0)
 ;
"RTN","SAMIUTNI",101,0)
UTXVAL ; @TEST - extrinsic returns the patient value for var
"RTN","SAMIUTNI",102,0)
 ;XVAL(var,vals)
"RTN","SAMIUTNI",103,0)
 set utsuccess=0
"RTN","SAMIUTNI",104,0)
 set SAMIUARC(1)="Testing xval"
"RTN","SAMIUTNI",105,0)
 set utsuccess=($$XVAL^SAMINOTI(1,"SAMIUARC")="Testing xval")
"RTN","SAMIUTNI",106,0)
 do CHKEQ^%ut(utsuccess,1,"Testing xval(var,vals) FAILED!")
"RTN","SAMIUTNI",107,0)
 quit
"RTN","SAMIUTNI",108,0)
 ;
"RTN","SAMIUTNI",109,0)
EOR ;End of routine SAMIUTNI
"RTN","SAMIUTPT")
0^77^B11823199
"RTN","SAMIUTPT",1,0)
SAMIUTPT ;ven/arc - Unit test for SAMIPTLK ;Jan 17, 2020@09:06
"RTN","SAMIUTPT",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTPT",3,0)
 ;
"RTN","SAMIUTPT",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTPT",5,0)
 ;
"RTN","SAMIUTPT",6,0)
 ; @section 0 primary development
"RTN","SAMIUTPT",7,0)
 ;
"RTN","SAMIUTPT",8,0)
 ; @routine-credits
"RTN","SAMIUTPT",9,0)
 ; @primary-dev: Alexis Carlson (arc)
"RTN","SAMIUTPT",10,0)
 ;  alexis@vistaexpertise.net
"RTN","SAMIUTPT",11,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUTPT",12,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUTPT",13,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUTPT",14,0)
 ; @license: Apache 2.0
"RTN","SAMIUTPT",15,0)
 ;  https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIUTPT",16,0)
 ;
"RTN","SAMIUTPT",17,0)
 ; @last-updated: 2018-10-31T1854Z
"RTN","SAMIUTPT",18,0)
 ; @application: SAMI
"RTN","SAMIUTPT",19,0)
 ; @version: 18.0
"RTN","SAMIUTPT",20,0)
 ; @patch-list: none yet
"RTN","SAMIUTPT",21,0)
 ;
"RTN","SAMIUTPT",22,0)
 ; @to-do
"RTN","SAMIUTPT",23,0)
 ;  Add query using last 5
"RTN","SAMIUTPT",24,0)
 ;
"RTN","SAMIUTPT",25,0)
 ; @section 1 code
"RTN","SAMIUTPT",26,0)
 ;
"RTN","SAMIUTPT",27,0)
START ;
"RTN","SAMIUTPT",28,0)
 if $t(^%ut)="" do
"RTN","SAMIUTPT",29,0)
 . write !,"*** UNIT TEST NOT INSTALLED ***"
"RTN","SAMIUTPT",30,0)
 . quit
"RTN","SAMIUTPT",31,0)
 ;
"RTN","SAMIUTPT",32,0)
 do EN^%ut($text(+0),3)
"RTN","SAMIUTPT",33,0)
 quit
"RTN","SAMIUTPT",34,0)
 ;
"RTN","SAMIUTPT",35,0)
 ;
"RTN","SAMIUTPT",36,0)
STARTUP ;
"RTN","SAMIUTPT",37,0)
 quit
"RTN","SAMIUTPT",38,0)
 ;
"RTN","SAMIUTPT",39,0)
 ;
"RTN","SAMIUTPT",40,0)
SETUP ;
"RTN","SAMIUTPT",41,0)
 new SAMIURTN,SAMIUFLTR,expect,result
"RTN","SAMIUTPT",42,0)
 quit
"RTN","SAMIUTPT",43,0)
 ;
"RTN","SAMIUTPT",44,0)
 ;
"RTN","SAMIUTPT",45,0)
TEARDOWN ; ZEXCEPT: SAMIURTN,SAMIUFLTR,expect,result
"RTN","SAMIUTPT",46,0)
 kill SAMIURTN,SAMIUFLTR,expect,result
"RTN","SAMIUTPT",47,0)
 quit
"RTN","SAMIUTPT",48,0)
 ;
"RTN","SAMIUTPT",49,0)
 ;
"RTN","SAMIUTPT",50,0)
SHUTDOWN ;
"RTN","SAMIUTPT",51,0)
 quit
"RTN","SAMIUTPT",52,0)
 ;
"RTN","SAMIUTPT",53,0)
 ;
"RTN","SAMIUTPT",54,0)
UTWSPTLK ; @TEST WSPTLOOK^SAMIPTLK
"RTN","SAMIUTPT",55,0)
 ; Comments
"RTN","SAMIUTPT",56,0)
 ;
"RTN","SAMIUTPT",57,0)
 ; Test query string = ""
"RTN","SAMIUTPT",58,0)
 set SAMIUFLTR("search")=""
"RTN","SAMIUTPT",59,0)
 do WSPTLOOK^SAMIPTLK(.SAMIURTN,.SAMIUFLTR)
"RTN","SAMIUTPT",60,0)
 new result,expect
"RTN","SAMIUTPT",61,0)
 set expect="{""1"":""-1^No patient specified.""}"
"RTN","SAMIUTPT",62,0)
 set result=SAMIURTN(1)
"RTN","SAMIUTPT",63,0)
 do CHKEQ^%ut(result,expect)
"RTN","SAMIUTPT",64,0)
 ;
"RTN","SAMIUTPT",65,0)
 ; Test query string = "ZZZZ"
"RTN","SAMIUTPT",66,0)
 kill SAMIURTN,SAMIUFLTR
"RTN","SAMIUTPT",67,0)
 set SAMIUFLTR("search")="ZZZZ"
"RTN","SAMIUTPT",68,0)
 do WSPTLOOK^SAMIPTLK(.SAMIURTN,.SAMIUFLTR)
"RTN","SAMIUTPT",69,0)
 set expect="{""1"":""""}"
"RTN","SAMIUTPT",70,0)
 set result=SAMIURTN(1)
"RTN","SAMIUTPT",71,0)
 do CHKEQ^%ut(result,expect)
"RTN","SAMIUTPT",72,0)
 ;
"RTN","SAMIUTPT",73,0)
 ; Test query string = "A"
"RTN","SAMIUTPT",74,0)
 kill SAMIURTN,SAMIUFLTR
"RTN","SAMIUTPT",75,0)
 set SAMIUFLTR("search")="A"
"RTN","SAMIUTPT",76,0)
 do WSPTLOOK^SAMIPTLK(.SAMIURTN,.SAMIUFLTR)
"RTN","SAMIUTPT",77,0)
 ; Check first node of SAMIURTN
"RTN","SAMIUTPT",78,0)
 set result=SAMIURTN(1)
"RTN","SAMIUTPT",79,0)
 D PLUTARR^SAMIUTST(.expect,"UTWSPTLK^SAMIUTPT")
"RTN","SAMIUTPT",80,0)
 do CHKEQ^%ut(result,expect)
"RTN","SAMIUTPT",81,0)
 ;
"RTN","SAMIUTPT",82,0)
 ; 
"RTN","SAMIUTPT",83,0)
 quit
"RTN","SAMIUTPT",84,0)
 ;
"RTN","SAMIUTPT",85,0)
 ;
"RTN","SAMIUTPT",86,0)
UTWSPTLC ; @TEST WSPTLKUP^SAMIPTLK
"RTN","SAMIUTPT",87,0)
 ; Comments
"RTN","SAMIUTPT",88,0)
 ;
"RTN","SAMIUTPT",89,0)
 ; Test query string = ""
"RTN","SAMIUTPT",90,0)
 set SAMIUFLTR("search")=""
"RTN","SAMIUTPT",91,0)
 do WSPTLKUP^SAMIPTLK(.SAMIURTN,.SAMIUFLTR)
"RTN","SAMIUTPT",92,0)
 ; Check first node of SAMIURTN
"RTN","SAMIUTPT",93,0)
 set expect="{""result"":"
"RTN","SAMIUTPT",94,0)
 set result=$piece(SAMIURTN(1),"[")
"RTN","SAMIUTPT",95,0)
 do CHKEQ^%ut(result,expect)
"RTN","SAMIUTPT",96,0)
 ; Check last node of SAMIURTN
"RTN","SAMIUTPT",97,0)
 set expect="}"
"RTN","SAMIUTPT",98,0)
 set result=$piece(SAMIURTN($order(SAMIURTN(""),-1)),"]",2)
"RTN","SAMIUTPT",99,0)
 do CHKEQ^%ut(result,expect)
"RTN","SAMIUTPT",100,0)
 ;
"RTN","SAMIUTPT",101,0)
 ; Test query string = "ZZZZ"
"RTN","SAMIUTPT",102,0)
 kill SAMIURTN,SAMIUFLTR
"RTN","SAMIUTPT",103,0)
 set SAMIUFLTR("search")="ZZZZ"
"RTN","SAMIUTPT",104,0)
 do WSPTLKUP^SAMIPTLK(.SAMIURTN,.SAMIUFLTR)
"RTN","SAMIUTPT",105,0)
 set expect=""
"RTN","SAMIUTPT",106,0)
 set result=$get(SAMIURTN(1))
"RTN","SAMIUTPT",107,0)
 do CHKEQ^%ut(result,expect)
"RTN","SAMIUTPT",108,0)
 ;
"RTN","SAMIUTPT",109,0)
 ; Test query string = "A"
"RTN","SAMIUTPT",110,0)
 kill SAMIURTN,SAMIUFLTR
"RTN","SAMIUTPT",111,0)
 set SAMIUFLTR("search")="A"
"RTN","SAMIUTPT",112,0)
 do WSPTLKUP^SAMIPTLK(.SAMIURTN,.SAMIUFLTR)
"RTN","SAMIUTPT",113,0)
 ; Check first node of SAMIURTN
"RTN","SAMIUTPT",114,0)
 set expect="{""result"":"
"RTN","SAMIUTPT",115,0)
 set result=$piece(SAMIURTN(1),"[")
"RTN","SAMIUTPT",116,0)
 do CHKEQ^%ut(result,expect)
"RTN","SAMIUTPT",117,0)
 ; Check last node of SAMIURTN
"RTN","SAMIUTPT",118,0)
 set expect="}"
"RTN","SAMIUTPT",119,0)
 set result=$piece(SAMIURTN($order(SAMIURTN(""),-1)),"]",2)
"RTN","SAMIUTPT",120,0)
 do CHKEQ^%ut(result,expect)
"RTN","SAMIUTPT",121,0)
 ;
"RTN","SAMIUTPT",122,0)
 ; TODO: Add query using last 5
"RTN","SAMIUTPT",123,0)
 ;
"RTN","SAMIUTPT",124,0)
 quit
"RTN","SAMIUTPT",125,0)
 ;
"RTN","SAMIUTPT",126,0)
 ;
"RTN","SAMIUTPT",127,0)
EOR ; End of routine SAMIUTPT
"RTN","SAMIUTR0")
0^78^B19276692
"RTN","SAMIUTR0",1,0)
SAMIUTR0 ;ven/lgc - UNIT TEST for SAMICTR0 ;Oct 22, 2019@15:52
"RTN","SAMIUTR0",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTR0",3,0)
 ;
"RTN","SAMIUTR0",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTR0",5,0)
 ;
"RTN","SAMIUTR0",6,0)
 ; @section 0 primary development
"RTN","SAMIUTR0",7,0)
 ;
"RTN","SAMIUTR0",8,0)
 ; @routine-credits
"RTN","SAMIUTR0",9,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUTR0",10,0)
 ;  larry@fiscientific.com
"RTN","SAMIUTR0",11,0)
 ; @additional-dev: Linda M. R. Yaw (lmry)
"RTN","SAMIUTR0",12,0)
 ;  linda.yaw@vistaexpertise.net
"RTN","SAMIUTR0",13,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUTR0",14,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUTR0",15,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUTR0",16,0)
 ; @license: see routine SAMIUL
"RTN","SAMIUTR0",17,0)
 ;
"RTN","SAMIUTR0",18,0)
 ; @last-updated: 20190413T22:31Z
"RTN","SAMIUTR0",19,0)
 ; @application: SAMI
"RTN","SAMIUTR0",20,0)
 ; @version: 18.0
"RTN","SAMIUTR0",21,0)
 ; @patch-list: none yet
"RTN","SAMIUTR0",22,0)
 ;
"RTN","SAMIUTR0",23,0)
 ; @to-do
"RTN","SAMIUTR0",24,0)
 ;
"RTN","SAMIUTR0",25,0)
 ; @section 1 code
"RTN","SAMIUTR0",26,0)
 ;
"RTN","SAMIUTR0",27,0)
START if $text(^%ut)="" write !,"*** UNIT TEST NOT INSTALLED ***" quit
"RTN","SAMIUTR0",28,0)
 do EN^%ut($text(+0),2)
"RTN","SAMIUTR0",29,0)
 quit
"RTN","SAMIUTR0",30,0)
 ;
"RTN","SAMIUTR0",31,0)
 ;
"RTN","SAMIUTR0",32,0)
STARTUP new utsuccess
"RTN","SAMIUTR0",33,0)
 D SVAPT1^SAMIUTST  ; Save VA's DFN 1 patient data
"RTN","SAMIUTR0",34,0)
 D LOADTPT^SAMIUTST  ; Load unit test patient data
"RTN","SAMIUTR0",35,0)
 quit
"RTN","SAMIUTR0",36,0)
 ;
"RTN","SAMIUTR0",37,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUTR0",38,0)
 kill utsuccess
"RTN","SAMIUTR0",39,0)
 D LVAPT1^SAMIUTST  ; Return VA's DPT 1 patient's data
"RTN","SAMIUTR0",40,0)
 quit
"RTN","SAMIUTR0",41,0)
 ;
"RTN","SAMIUTR0",42,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUTR0",43,0)
 do ^SAMICTR0
"RTN","SAMIUTR0",44,0)
 do SUCCEED^%ut
"RTN","SAMIUTR0",45,0)
 quit
"RTN","SAMIUTR0",46,0)
 ;
"RTN","SAMIUTR0",47,0)
UTWSRPT ; @TEST - web service which returns an html cteval report
"RTN","SAMIUTR0",48,0)
 ;wsReport(return,SAMIUFLTR)
"RTN","SAMIUTR0",49,0)
 new SAMIUARC
"RTN","SAMIUTR0",50,0)
 kill SAMIUFLTR
"RTN","SAMIUTR0",51,0)
 set SAMIUFLTR("studyid")="XXX00001"
"RTN","SAMIUTR0",52,0)
 set SAMIUFLTR("form")="ceform-2018-10-21"
"RTN","SAMIUTR0",53,0)
 set utsuccess=1
"RTN","SAMIUTR0",54,0)
 do WSREPORT^SAMICTR0(.SAMIUPOO,.SAMIUFLTR)
"RTN","SAMIUTR0",55,0)
 ; compare SAMIUPOO with SAMIUPOOu from a Pull
"RTN","SAMIUTR0",56,0)
 do PLUTARR^SAMIUTST(.SAMIUARC,"wsReport-SAMICTR0")
"RTN","SAMIUTR0",57,0)
 ; now compare
"RTN","SAMIUTR0",58,0)
 new pnode,anode set pnode=$name(SAMIUPOO),anode=$name(SAMIUARC)
"RTN","SAMIUTR0",59,0)
 for  set pnode=$query(@pnode),anode=$query(@anode) quit:pnode=""  do
"RTN","SAMIUTR0",60,0)
 . if '(@pnode=@anode) set utsuccess=0
"RTN","SAMIUTR0",61,0)
 set:'(anode="") utsuccess=0
"RTN","SAMIUTR0",62,0)
 do CHKEQ^%ut(utsuccess,1,"Testing web service returns html cteval FAILED!")
"RTN","SAMIUTR0",63,0)
 quit
"RTN","SAMIUTR0",64,0)
 ;
"RTN","SAMIUTR0",65,0)
UTOUT ; @TEST - out line
"RTN","SAMIUTR0",66,0)
 ;out(SAMIULN)
"RTN","SAMIUTR0",67,0)
 new cnt,rtn,SAMIUPOO,debug
"RTN","SAMIUTR0",68,0)
 set debug=1
"RTN","SAMIUTR0",69,0)
 set cnt=1,rtn="SAMIUPOO",SAMIUPOO(1)="First line of test"
"RTN","SAMIUTR0",70,0)
 new SAMIULN set SAMIULN="Second line test"
"RTN","SAMIUTR0",71,0)
 set utsuccess=0
"RTN","SAMIUTR0",72,0)
 do OUT^SAMICTR0(SAMIULN)
"RTN","SAMIUTR0",73,0)
 set utsuccess=($get(SAMIUPOO(2))["Second line test")
"RTN","SAMIUTR0",74,0)
 do CHKEQ^%ut(utsuccess,1,"Testing out(ln) adds line to array FAILED!")
"RTN","SAMIUTR0",75,0)
 quit
"RTN","SAMIUTR0",76,0)
 ;
"RTN","SAMIUTR0",77,0)
UTHOUT ; @TEST - hout line
"RTN","SAMIUTR0",78,0)
 ;hout(ln)
"RTN","SAMIUTR0",79,0)
 ; just run hout(ln) and it will add another line
"RTN","SAMIUTR0",80,0)
 new cnt,rtn,SAMIUPOO
"RTN","SAMIUTR0",81,0)
 set cnt=1,rtn="SAMIUPOO",SAMIUPOO(1)="First line of test"
"RTN","SAMIUTR0",82,0)
 new SAMIULN set SAMIULN="Second line test"
"RTN","SAMIUTR0",83,0)
 set utsuccess=0
"RTN","SAMIUTR0",84,0)
 do HOUT^SAMICTR0(SAMIULN)
"RTN","SAMIUTR0",85,0)
 set utsuccess=($get(SAMIUPOO(2))="<p><span class='sectionhead'>Second line test</span>")
"RTN","SAMIUTR0",86,0)
 do CHKEQ^%ut(utsuccess,1,"Testing out(ln) adds line to array FAILED!")
"RTN","SAMIUTR0",87,0)
 quit
"RTN","SAMIUTR0",88,0)
 ;
"RTN","SAMIUTR0",89,0)
UTXVAL ; @TEST - extrinsic returns the patient value for var
"RTN","SAMIUTR0",90,0)
 ;xval(var,vals)
"RTN","SAMIUTR0",91,0)
 ;write $$XVAL^SAMICTR0(51,"SAMIUARC")
"RTN","SAMIUTR0",92,0)
 new SAMIUARC
"RTN","SAMIUTR0",93,0)
 set utsuccess=0
"RTN","SAMIUTR0",94,0)
 set SAMIUARC(1)="Testing xval"
"RTN","SAMIUTR0",95,0)
 set utsuccess=($$XVAL^SAMICTR0(1,"SAMIUARC")="Testing xval")
"RTN","SAMIUTR0",96,0)
 do CHKEQ^%ut(utsuccess,1,"Testing xval(var,vals) FAILED!")
"RTN","SAMIUTR0",97,0)
 quit
"RTN","SAMIUTR0",98,0)
 ;
"RTN","SAMIUTR0",99,0)
UTXSUB ; @TEST - extrinsic which returns the dictionary value defined by SAMIVAR
"RTN","SAMIUTR0",100,0)
 ;xsub(var,vals,dict,valdx)
"RTN","SAMIUTR0",101,0)
 new SAMIVAR,SAMIVALS,SAMIUPOO,SAMIVALDX,result,SAMIDICT
"RTN","SAMIUTR0",102,0)
 set utsuccess=0
"RTN","SAMIUTR0",103,0)
 set SAMIVALS="SAMIUPOO"
"RTN","SAMIUTR0",104,0)
 set SAMIVAR="cteval-dict"
"RTN","SAMIUTR0",105,0)
 set SAMIUPOO(1)="biopsy"
"RTN","SAMIUTR0",106,0)
 set SAMIVALDX=1
"RTN","SAMIUTR0",107,0)
 set SAMIDICT=$$setroot^%wd("cteval-dict")
"RTN","SAMIUTR0",108,0)
 set result=$$XSUB^SAMICTR0(SAMIVAR,SAMIVALS,SAMIDICT,SAMIVALDX)
"RTN","SAMIUTR0",109,0)
 set utsuccess=(result="CT-guided biopsy")
"RTN","SAMIUTR0",110,0)
 do CHKEQ^%ut(utsuccess,1,"Testing xsub(SAMIVAR,SAMIVALS,dict,SAMIVALDX) FAILED!")
"RTN","SAMIUTR0",111,0)
 quit
"RTN","SAMIUTR0",112,0)
 ;
"RTN","SAMIUTR0",113,0)
UTGTFLT ; @TEST - fill in the SAMIUFLTR for Ct Eval for sid
"RTN","SAMIUTR0",114,0)
 ;getFilter(SAMIUFLTR,sid)
"RTN","SAMIUTR0",115,0)
 do GETFILTR^SAMICTR0(.SAMIUFLTR,"XXX00001")
"RTN","SAMIUTR0",116,0)
 set utsuccess=1
"RTN","SAMIUTR0",117,0)
 set:'(SAMIUFLTR("form")="ceform-2018-10-21") utsuccess=0
"RTN","SAMIUTR0",118,0)
 set:'(SAMIUFLTR("studyid")="XXX00001") utsuccess=0
"RTN","SAMIUTR0",119,0)
 do CHKEQ^%ut(utsuccess,1,"Testing getFilter FAILED!")
"RTN","SAMIUTR0",120,0)
 quit
"RTN","SAMIUTR0",121,0)
 ;
"RTN","SAMIUTR0",122,0)
UTT1 ; @TEST - Testing T1
"RTN","SAMIUTR0",123,0)
 ;T1(grtn,debug) ;
"RTN","SAMIUTR0",124,0)
 quit
"RTN","SAMIUTR0",125,0)
 ;
"RTN","SAMIUTR0",126,0)
EOR ;End of routine SAMIUTR0
"RTN","SAMIUTR1")
0^79^B46275642
"RTN","SAMIUTR1",1,0)
SAMIUTR1 ;ven/lgc - UNIT TEST for SAMICTR1 ;Jan 17, 2020@09:17
"RTN","SAMIUTR1",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTR1",3,0)
 ;
"RTN","SAMIUTR1",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTR1",5,0)
 ;
"RTN","SAMIUTR1",6,0)
 ; @section 0 primary development
"RTN","SAMIUTR1",7,0)
 ;
"RTN","SAMIUTR1",8,0)
 ; @routine-credits
"RTN","SAMIUTR1",9,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUTR1",10,0)
 ;  larry@fiscientific.com
"RTN","SAMIUTR1",11,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUTR1",12,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUTR1",13,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUTR1",14,0)
 ; @license: Apache 2.0
"RTN","SAMIUTR1",15,0)
 ;  https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIUTR1",16,0)
 ;
"RTN","SAMIUTR1",17,0)
 ; @last-updated: 10/29/18 4:11pm
"RTN","SAMIUTR1",18,0)
 ; @application: SAMI
"RTN","SAMIUTR1",19,0)
 ; @version: 18.0
"RTN","SAMIUTR1",20,0)
 ; @patch-list: none yet
"RTN","SAMIUTR1",21,0)
 ;
"RTN","SAMIUTR1",22,0)
 ; @to-do
"RTN","SAMIUTR1",23,0)
 ;
"RTN","SAMIUTR1",24,0)
 ; @section 1 code
"RTN","SAMIUTR1",25,0)
 ;
"RTN","SAMIUTR1",26,0)
START i $t(^%ut)="" w !,"*** UNIT TEST NOT INSTALLED ***" q
"RTN","SAMIUTR1",27,0)
 d EN^%ut($T(+0),2)
"RTN","SAMIUTR1",28,0)
 q
"RTN","SAMIUTR1",29,0)
 ;
"RTN","SAMIUTR1",30,0)
 ;
"RTN","SAMIUTR1",31,0)
STARTUP n utsuccess
"RTN","SAMIUTR1",32,0)
 D SVAPT1^SAMIUTST  ; Save VA's DFN 1 patient data
"RTN","SAMIUTR1",33,0)
 D LOADTPT^SAMIUTST  ; Load unit test patient data
"RTN","SAMIUTR1",34,0)
 q
"RTN","SAMIUTR1",35,0)
 ;
"RTN","SAMIUTR1",36,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUTR1",37,0)
 k utsuccess
"RTN","SAMIUTR1",38,0)
 D LVAPT1^SAMIUTST  ; Return VA's DPT 1 patient's data
"RTN","SAMIUTR1",39,0)
 q
"RTN","SAMIUTR1",40,0)
 ;
"RTN","SAMIUTR1",41,0)
 ;
"RTN","SAMIUTR1",42,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUTR1",43,0)
 D ^SAMICTR1
"RTN","SAMIUTR1",44,0)
 d SUCCEED^%ut
"RTN","SAMIUTR1",45,0)
 q
"RTN","SAMIUTR1",46,0)
 ;
"RTN","SAMIUTR1",47,0)
UTNODUL ; @TEST - nodules
"RTN","SAMIUTR1",48,0)
 ;nodules(rtn,SAMIVALS,dict)
"RTN","SAMIUTR1",49,0)
 n SAMIUPOO,root,SAMISI,SAMIVALS,SAMIDICT,SAMIUARC
"RTN","SAMIUTR1",50,0)
 n noder,nodea,cnt,return
"RTN","SAMIUTR1",51,0)
 s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTR1",52,0)
 s SAMISI="XXX00001"
"RTN","SAMIUTR1",53,0)
 n SAMIKEY s SAMIKEY="ceform-2018-10-21"
"RTN","SAMIUTR1",54,0)
 s SAMIVALS=$na(@root@("graph",SAMISI,SAMIKEY))
"RTN","SAMIUTR1",55,0)
 n SAMIDICT s SAMIDICT=$$setroot^%wd("cteval-dict")
"RTN","SAMIUTR1",56,0)
 s SAMIDICT=$na(@SAMIDICT@("cteval-dict"))
"RTN","SAMIUTR1",57,0)
 s cnt=0
"RTN","SAMIUTR1",58,0)
 d NODULES^SAMICTR1("return",SAMIVALS,SAMIDICT)
"RTN","SAMIUTR1",59,0)
 ;now pull saved report
"RTN","SAMIUTR1",60,0)
 K ^KBAP("SAMIUTR1","UTNODUL1021")
"RTN","SAMIUTR1",61,0)
 M ^KBAP("SAMIUTR1","UTNODUL1021")=return
"RTN","SAMIUTR1",62,0)
 d PLUTARR^SAMIUTST(.SAMIUARC,"UTNODUL^SAMIUTR1 report")
"RTN","SAMIUTR1",63,0)
 ; now compare return with SAMIUARC
"RTN","SAMIUTR1",64,0)
 n noder,nodea s noder=$na(return),nodea=$na(SAMIUARC)
"RTN","SAMIUTR1",65,0)
 s utsuccess=1
"RTN","SAMIUTR1",66,0)
 f  s noder=$Q(@noder),nodea=$Q(@nodea) q:noder=""  d  q:'utsuccess
"RTN","SAMIUTR1",67,0)
 . i '(@noder=@nodea) s utsuccess=0
"RTN","SAMIUTR1",68,0)
 i '(nodea="") s utsuccess=0
"RTN","SAMIUTR1",69,0)
 d CHKEQ^%ut(utsuccess,1,"Testing generating nodule report FAILED!")
"RTN","SAMIUTR1",70,0)
 ;
"RTN","SAMIUTR1",71,0)
 n SAMIUPOO,SAMISI,SAMIVALS,SAMIDICT,SAMIUARC
"RTN","SAMIUTR1",72,0)
 n root,cnt,return,noder,nodea
"RTN","SAMIUTR1",73,0)
 s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTR1",74,0)
 s SAMISI="XXX00001",SAMIKEY="ceform-2018-12-03"
"RTN","SAMIUTR1",75,0)
 s SAMIVALS=$na(@root@("graph",SAMISI,SAMIKEY))
"RTN","SAMIUTR1",76,0)
 n SAMIDICT s SAMIDICT=$$setroot^%wd("cteval-dict")
"RTN","SAMIUTR1",77,0)
 s SAMIDICT=$na(@SAMIDICT@("cteval-dict"))
"RTN","SAMIUTR1",78,0)
 s cnt=0
"RTN","SAMIUTR1",79,0)
 d NODULES^SAMICTR1("return",SAMIVALS,SAMIDICT)
"RTN","SAMIUTR1",80,0)
 K ^KBAP("SAMIUTR1","UTNODUL1203")
"RTN","SAMIUTR1",81,0)
 M ^KBAP("SAMIUTR1","UTNODUL1203")=return
"RTN","SAMIUTR1",82,0)
 ;now pull saved report
"RTN","SAMIUTR1",83,0)
 d PLUTARR^SAMIUTST(.SAMIUARC,"UTNODUL^SAMIUTR1 report XXX12-3")
"RTN","SAMIUTR1",84,0)
 ; now compare return with SAMIUARC
"RTN","SAMIUTR1",85,0)
 n noder,nodea s noder=$na(return),nodea=$na(SAMIUARC)
"RTN","SAMIUTR1",86,0)
 s utsuccess=1
"RTN","SAMIUTR1",87,0)
 f  s noder=$Q(@noder),nodea=$Q(@nodea) q:noder=""  d  q:'utsuccess
"RTN","SAMIUTR1",88,0)
 . i '(@noder=@nodea) s utsuccess=0
"RTN","SAMIUTR1",89,0)
 i '(nodea="") s utsuccess=0
"RTN","SAMIUTR1",90,0)
 d CHKEQ^%ut(utsuccess,1,"Testing generating nodule report XXX12-3  FAILED!")
"RTN","SAMIUTR1",91,0)
 ;
"RTN","SAMIUTR1",92,0)
 n SAMIUPOO,SAMISI,SAMIVALS,SAMIDICT,SAMIUARC
"RTN","SAMIUTR1",93,0)
 n root,cnt,return,noder,nodea
"RTN","SAMIUTR1",94,0)
 s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTR1",95,0)
 s SAMISI="XXX00001",SAMIKEY="ceform-2019-01-23"
"RTN","SAMIUTR1",96,0)
 s SAMIVALS=$na(@root@("graph",SAMISI,SAMIKEY))
"RTN","SAMIUTR1",97,0)
 n SAMIDICT s SAMIDICT=$$setroot^%wd("cteval-dict")
"RTN","SAMIUTR1",98,0)
 s SAMIDICT=$na(@SAMIDICT@("cteval-dict"))
"RTN","SAMIUTR1",99,0)
 s cnt=0
"RTN","SAMIUTR1",100,0)
 d NODULES^SAMICTR1("return",SAMIVALS,SAMIDICT)
"RTN","SAMIUTR1",101,0)
 K ^KBAP("SAMIUTR1","UTNODUL0123")
"RTN","SAMIUTR1",102,0)
 M ^KBAP("SAMIUTR1","UTNODUL0123")=return
"RTN","SAMIUTR1",103,0)
 ;now pull saved report
"RTN","SAMIUTR1",104,0)
 d PLUTARR^SAMIUTST(.SAMIUARC,"UTNODUL^SAMIUTR1 report XXX01-23")
"RTN","SAMIUTR1",105,0)
 ; now compare return with SAMIUARC
"RTN","SAMIUTR1",106,0)
 n noder,nodea s noder=$na(return),nodea=$na(SAMIUARC)
"RTN","SAMIUTR1",107,0)
 s utsuccess=1
"RTN","SAMIUTR1",108,0)
 f  s noder=$Q(@noder),nodea=$Q(@nodea) q:noder=""  d  q:'utsuccess
"RTN","SAMIUTR1",109,0)
 . i '(@noder=@nodea) s utsuccess=0
"RTN","SAMIUTR1",110,0)
 i '(nodea="") s utsuccess=0
"RTN","SAMIUTR1",111,0)
 d CHKEQ^%ut(utsuccess,1,"Testing generating nodule report XXX01-23  FAILED!")
"RTN","SAMIUTR1",112,0)
 ;
"RTN","SAMIUTR1",113,0)
 n SAMIUPOO,SAMISI,SAMIVALS,SAMIDICT,SAMIUARC
"RTN","SAMIUTR1",114,0)
 n root,cnt,return,noder,nodea
"RTN","SAMIUTR1",115,0)
 s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTR1",116,0)
 s SAMISI="XXX00001",SAMIKEY="ceform-2019-02-25"
"RTN","SAMIUTR1",117,0)
 s SAMIVALS=$na(@root@("graph",SAMISI,SAMIKEY))
"RTN","SAMIUTR1",118,0)
 n SAMIDICT s SAMIDICT=$$setroot^%wd("cteval-dict")
"RTN","SAMIUTR1",119,0)
 s SAMIDICT=$na(@SAMIDICT@("cteval-dict"))
"RTN","SAMIUTR1",120,0)
 s cnt=0
"RTN","SAMIUTR1",121,0)
 d NODULES^SAMICTR1("return",SAMIVALS,SAMIDICT)
"RTN","SAMIUTR1",122,0)
 K ^KBAP("SAMIUTR1","UTNODUL0225")
"RTN","SAMIUTR1",123,0)
 M ^KBAP("SAMIUTR1","UTNODUL0225")=return
"RTN","SAMIUTR1",124,0)
 ;now pull saved report
"RTN","SAMIUTR1",125,0)
 d PLUTARR^SAMIUTST(.SAMIUARC,"UTNODUL^SAMIUTR1 report XXX02-25")
"RTN","SAMIUTR1",126,0)
 ; now compare return with SAMIUARC
"RTN","SAMIUTR1",127,0)
 n noder,nodea s noder=$na(return),nodea=$na(SAMIUARC)
"RTN","SAMIUTR1",128,0)
 s utsuccess=1
"RTN","SAMIUTR1",129,0)
 f  s noder=$Q(@noder),nodea=$Q(@nodea) q:noder=""  d  q:'utsuccess
"RTN","SAMIUTR1",130,0)
 . i '(@noder=@nodea) s utsuccess=0
"RTN","SAMIUTR1",131,0)
 i '(nodea="") s utsuccess=0
"RTN","SAMIUTR1",132,0)
 d CHKEQ^%ut(utsuccess,1,"Testing generating nodule report XXX02-25  FAILED!")
"RTN","SAMIUTR1",133,0)
 q
"RTN","SAMIUTR1",134,0)
 ;
"RTN","SAMIUTR1",135,0)
UTOUT ; @TEST - out line
"RTN","SAMIUTR1",136,0)
 ;OUT(ln)
"RTN","SAMIUTR1",137,0)
 n cnt,rtn,SAMIUPOO,debug
"RTN","SAMIUTR1",138,0)
 s debug=1
"RTN","SAMIUTR1",139,0)
 s cnt=1,rtn="SAMIUPOO",SAMIUPOO(1)="First line of test"
"RTN","SAMIUTR1",140,0)
 n SAMIULN s SAMIULN="Second line test"
"RTN","SAMIUTR1",141,0)
 s utsuccess=0
"RTN","SAMIUTR1",142,0)
 d OUT^SAMICTR1(SAMIULN)
"RTN","SAMIUTR1",143,0)
 s utsuccess=($g(SAMIUPOO(2))["Second line test")
"RTN","SAMIUTR1",144,0)
 d CHKEQ^%ut(utsuccess,1,"Testing out(ln) adds line to array FAILED!")
"RTN","SAMIUTR1",145,0)
 q
"RTN","SAMIUTR1",146,0)
 ;
"RTN","SAMIUTR1",147,0)
UTHOUT ; @TEST - hout line
"RTN","SAMIUTR1",148,0)
 ;HOUT(ln)
"RTN","SAMIUTR1",149,0)
 n cnt,rtn,SAMIUPOO
"RTN","SAMIUTR1",150,0)
 s cnt=1,rtn="SAMIUPOO",SAMIUPOO(1)="First line of test"
"RTN","SAMIUTR1",151,0)
 n SAMIULN s SAMIULN="Second line test"
"RTN","SAMIUTR1",152,0)
 s utsuccess=0
"RTN","SAMIUTR1",153,0)
 d HOUT^SAMICTR1(SAMIULN)
"RTN","SAMIUTR1",154,0)
 s utsuccess=($g(SAMIUPOO(2))="<p><span class='sectionhead'>Second line test</span>")
"RTN","SAMIUTR1",155,0)
 d CHKEQ^%ut(utsuccess,1,"Testing out(ln) adds line to array FAILED!")
"RTN","SAMIUTR1",156,0)
 q
"RTN","SAMIUTR1",157,0)
 ;
"RTN","SAMIUTR1",158,0)
UTXVAL ; @TEST - extrinsic returns the patient value for var
"RTN","SAMIUTR1",159,0)
 ;XVAL(var,SAMIVALS)
"RTN","SAMIUTR1",160,0)
 s utsuccess=0
"RTN","SAMIUTR1",161,0)
 s SAMIUARC(1)="Testing xval"
"RTN","SAMIUTR1",162,0)
 s utsuccess=($$XVAL^SAMICTR1(1,"SAMIUARC")="Testing xval")
"RTN","SAMIUTR1",163,0)
 d CHKEQ^%ut(utsuccess,1,"Testing xval(var,SAMIVALS) FAILED!")
"RTN","SAMIUTR1",164,0)
 q
"RTN","SAMIUTR1",165,0)
 ;
"RTN","SAMIUTR1",166,0)
UTXSUB ; @TEST - extrinsic which returns the dictionary value defined by var
"RTN","SAMIUTR1",167,0)
 ;XSUB(var,SAMIVALS,SAMIDICT,valdx)
"RTN","SAMIUTR1",168,0)
 n SAMIVALS,SAMIVAR,SAMIUPOO,SAMIVALDX,result
"RTN","SAMIUTR1",169,0)
 s utsuccess=0
"RTN","SAMIUTR1",170,0)
 s SAMIVALS="SAMIUPOO"
"RTN","SAMIUTR1",171,0)
 s SAMIVAR="cteval-dict"
"RTN","SAMIUTR1",172,0)
 s SAMIUPOO(1)="biopsy"
"RTN","SAMIUTR1",173,0)
 s SAMIVALDX=1
"RTN","SAMIUTR1",174,0)
 s SAMIDICT=$$setroot^%wd("cteval-dict")
"RTN","SAMIUTR1",175,0)
 s result=$$XSUB^SAMICTR1(SAMIVAR,SAMIVALS,SAMIDICT,SAMIVALDX)
"RTN","SAMIUTR1",176,0)
 s utsuccess=(result="CT-guided biopsy")
"RTN","SAMIUTR1",177,0)
 d CHKEQ^%ut(utsuccess,1,"Testing xsub(var,SAMIVALS,SAMIDICT,valdx) FAILED!")
"RTN","SAMIUTR1",178,0)
 q
"RTN","SAMIUTR1",179,0)
 ;
"RTN","SAMIUTR1",180,0)
EOR ;End of routine SAMIUTR1
"RTN","SAMIUTR9")
0^80^B16912786
"RTN","SAMIUTR9",1,0)
SAMIUTR9 ;ven/lgc - UNIT TEST for SAMICTR9 ;Jan 17, 2020@10:03
"RTN","SAMIUTR9",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTR9",3,0)
 ;
"RTN","SAMIUTR9",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTR9",5,0)
 ;
"RTN","SAMIUTR9",6,0)
 ; @section 0 primary development
"RTN","SAMIUTR9",7,0)
 ;
"RTN","SAMIUTR9",8,0)
 ; @routine-credits
"RTN","SAMIUTR9",9,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUTR9",10,0)
 ;  larry@fiscientific.com
"RTN","SAMIUTR9",11,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUTR9",12,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUTR9",13,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUTR9",14,0)
 ; @license: Apache 2.0
"RTN","SAMIUTR9",15,0)
 ;  https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIUTR9",16,0)
 ;
"RTN","SAMIUTR9",17,0)
 ; @application: SAMI
"RTN","SAMIUTR9",18,0)
 ; @version: 18.0
"RTN","SAMIUTR9",19,0)
 ; @patch-list: none yet
"RTN","SAMIUTR9",20,0)
 ;
"RTN","SAMIUTR9",21,0)
 ; @to-do
"RTN","SAMIUTR9",22,0)
 ;
"RTN","SAMIUTR9",23,0)
 ; @section 1 code
"RTN","SAMIUTR9",24,0)
 ;
"RTN","SAMIUTR9",25,0)
START i $t(^%ut)="" w !,"*** UNIT TEST NOT INSTALLED ***" q
"RTN","SAMIUTR9",26,0)
 d EN^%ut($T(+0),2)
"RTN","SAMIUTR9",27,0)
 q
"RTN","SAMIUTR9",28,0)
 ;
"RTN","SAMIUTR9",29,0)
 ;
"RTN","SAMIUTR9",30,0)
STARTUP n utsuccess
"RTN","SAMIUTR9",31,0)
 D SVAPT1^SAMIUTST  ; Save VA's DFN 1 patient data
"RTN","SAMIUTR9",32,0)
 D LOADTPT^SAMIUTST  ; Load unit test patient data
"RTN","SAMIUTR9",33,0)
 q
"RTN","SAMIUTR9",34,0)
 ;
"RTN","SAMIUTR9",35,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUTR9",36,0)
 k utsuccess
"RTN","SAMIUTR9",37,0)
 D LVAPT1^SAMIUTST  ; Return VA's DPT 1 patient's data
"RTN","SAMIUTR9",38,0)
 q
"RTN","SAMIUTR9",39,0)
 ;
"RTN","SAMIUTR9",40,0)
 ;
"RTN","SAMIUTR9",41,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUTR9",42,0)
 D ^SAMICTR9
"RTN","SAMIUTR9",43,0)
 d SUCCEED^%ut
"RTN","SAMIUTR9",44,0)
 q
"RTN","SAMIUTR9",45,0)
 ;
"RTN","SAMIUTR9",46,0)
UTIMPRS ; @TEST - impression
"RTN","SAMIUTR9",47,0)
 ;IMPRSN(rtn,SAMIVALS,dict)
"RTN","SAMIUTR9",48,0)
 n SAMIVALS,SAMIDICT,si,samikey,root,SAMIUPOO,SAMIUARC
"RTN","SAMIUTR9",49,0)
 n nodea,nodep,para,cac,cacrec
"RTN","SAMIUTR9",50,0)
 s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTR9",51,0)
 s si="XXX00001"
"RTN","SAMIUTR9",52,0)
 s samikey="ceform-2018-10-21"
"RTN","SAMIUTR9",53,0)
 s SAMIVALS=$na(@root@("graph",si,samikey))
"RTN","SAMIUTR9",54,0)
 s SAMIDICT=$$setroot^%wd("cteval-dict")
"RTN","SAMIUTR9",55,0)
 s SAMIDICT=$na(@SAMIDICT@("cteval-dict"))
"RTN","SAMIUTR9",56,0)
 s cnt=1,para="POO"
"RTN","SAMIUTR9",57,0)
 s cacrec=" CaCrEc ",cac=99
"RTN","SAMIUTR9",58,0)
 s utsuccess=1
"RTN","SAMIUTR9",59,0)
 d IMPRSN^SAMICTR9("SAMIUPOO",SAMIVALS,SAMIDICT)
"RTN","SAMIUTR9",60,0)
 K ^KBAP("SAMIUTR9","UTIMPRS1021")
"RTN","SAMIUTR9",61,0)
 M ^KBAP("SAMIUTR9","UTIMPRS1021")=SAMIUPOO
"RTN","SAMIUTR9",62,0)
 d PLUTARR^SAMIUTST(.SAMIUARC,"UTIMPRS^SAMICTR9")
"RTN","SAMIUTR9",63,0)
 n nodea,nodep s nodea=$na(SAMIUARC),nodep=$na(SAMIUPOO)
"RTN","SAMIUTR9",64,0)
 f  s nodep=$q(@nodep),nodea=$q(@nodea) q:nodep=""  d  q:'utsuccess
"RTN","SAMIUTR9",65,0)
 . i '(@nodep=@nodea) s utsuccess=0
"RTN","SAMIUTR9",66,0)
 i '(nodea="") s utsuccess=0
"RTN","SAMIUTR9",67,0)
 d CHKEQ^%ut(utsuccess,1,"Testing recommend FAILED!")
"RTN","SAMIUTR9",68,0)
 q
"RTN","SAMIUTR9",69,0)
 ;
"RTN","SAMIUTR9",70,0)
UTOUT ; @TEST - out line
"RTN","SAMIUTR9",71,0)
 ;OUT(ln)
"RTN","SAMIUTR9",72,0)
 n cnt,rtn,SAMIUPOO
"RTN","SAMIUTR9",73,0)
 s cnt=1,rtn="SAMIUPOO",SAMIUPOO(1)="First line of test"
"RTN","SAMIUTR9",74,0)
 n SAMIULN s SAMIULN="Second line test"
"RTN","SAMIUTR9",75,0)
 s utsuccess=0
"RTN","SAMIUTR9",76,0)
 d OUT^SAMICTR9(SAMIULN)
"RTN","SAMIUTR9",77,0)
 s utsuccess=($g(SAMIUPOO(2))="Second line test")
"RTN","SAMIUTR9",78,0)
 d CHKEQ^%ut(utsuccess,1,"Testing out(ln) adds line to array FAILED!")
"RTN","SAMIUTR9",79,0)
 q
"RTN","SAMIUTR9",80,0)
 ;
"RTN","SAMIUTR9",81,0)
UTHOUT ; @TEST - hout line
"RTN","SAMIUTR9",82,0)
 ;HOUT(ln)
"RTN","SAMIUTR9",83,0)
 n cnt,rtn,SAMIUPOO
"RTN","SAMIUTR9",84,0)
 s cnt=1,rtn="SAMIUPOO",SAMIUPOO(1)="First line of test"
"RTN","SAMIUTR9",85,0)
 n SAMIULN s SAMIULN="Second line test"
"RTN","SAMIUTR9",86,0)
 s utsuccess=0
"RTN","SAMIUTR9",87,0)
 d HOUT^SAMICTR9(SAMIULN)
"RTN","SAMIUTR9",88,0)
 s utsuccess=($g(SAMIUPOO(2))="<p><span class='sectionhead'>Second line test</span>")
"RTN","SAMIUTR9",89,0)
 d CHKEQ^%ut(utsuccess,1,"Testing hout(ln) adds line to array FAILED!")
"RTN","SAMIUTR9",90,0)
 q
"RTN","SAMIUTR9",91,0)
 ;
"RTN","SAMIUTR9",92,0)
UTXVAL ; @TEST - extrinsic returns the patient value for var
"RTN","SAMIUTR9",93,0)
 ;XVAL(var,SAMIVALS)
"RTN","SAMIUTR9",94,0)
 s utsuccess=0
"RTN","SAMIUTR9",95,0)
 s SAMIUARC(1)="Testing xval"
"RTN","SAMIUTR9",96,0)
 s utsuccess=($$XVAL^SAMICTR9(1,"SAMIUARC")="Testing xval")
"RTN","SAMIUTR9",97,0)
 d CHKEQ^%ut(utsuccess,1,"Testing xval(var,SAMIVALS) FAILED!")
"RTN","SAMIUTR9",98,0)
 q
"RTN","SAMIUTR9",99,0)
 ;
"RTN","SAMIUTR9",100,0)
UTXSUB ; @TEST - extrinsic which returns the dictionary value defined by var
"RTN","SAMIUTR9",101,0)
 ;XSUB(var,SAMIVALS,dict,valdx)
"RTN","SAMIUTR9",102,0)
 n SAMIVALS,SAMIVAR,SAMIUPOO,SAMIVALDX,result,SAMIDICT
"RTN","SAMIUTR9",103,0)
 s utsuccess=0
"RTN","SAMIUTR9",104,0)
 s SAMIVALS="SAMIUPOO"
"RTN","SAMIUTR9",105,0)
 s SAMIVAR="cteval-dict"
"RTN","SAMIUTR9",106,0)
 s SAMIUPOO(1)="biopsy"
"RTN","SAMIUTR9",107,0)
 s SAMIVALDX=1
"RTN","SAMIUTR9",108,0)
 s SAMIDICT=$$setroot^%wd("cteval-dict")
"RTN","SAMIUTR9",109,0)
 s result=$$XSUB^SAMICTR9(SAMIVAR,SAMIVALS,SAMIDICT,SAMIVALDX)
"RTN","SAMIUTR9",110,0)
 s utsuccess=(result="CT-guided biopsy")
"RTN","SAMIUTR9",111,0)
 d CHKEQ^%ut(utsuccess,1,"Testing xsub(var,SAMIVALS,dict,valdx) FAILED!")
"RTN","SAMIUTR9",112,0)
 q
"RTN","SAMIUTR9",113,0)
 ;
"RTN","SAMIUTR9",114,0)
EOR ;End of routine SAMIUTR9
"RTN","SAMIUTRA")
0^81^B16612038
"RTN","SAMIUTRA",1,0)
SAMIUTRA ;ven/lgc - UNIT TEST for SAMICTRA ;Jan 17, 2020@10:06
"RTN","SAMIUTRA",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTRA",3,0)
 ;
"RTN","SAMIUTRA",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTRA",5,0)
 ;
"RTN","SAMIUTRA",6,0)
 ; @section 0 primary development
"RTN","SAMIUTRA",7,0)
 ;
"RTN","SAMIUTRA",8,0)
 ; @routine-credits
"RTN","SAMIUTRA",9,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUTRA",10,0)
 ;  larry@fiscientific.com
"RTN","SAMIUTRA",11,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUTRA",12,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUTRA",13,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUTRA",14,0)
 ; @license: Apache 2.0
"RTN","SAMIUTRA",15,0)
 ;  https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIUTRA",16,0)
 ;
"RTN","SAMIUTRA",17,0)
 ; @application: SAMI
"RTN","SAMIUTRA",18,0)
 ; @version: 18.0
"RTN","SAMIUTRA",19,0)
 ; @patch-list: none yet
"RTN","SAMIUTRA",20,0)
 ;
"RTN","SAMIUTRA",21,0)
 ; @to-do
"RTN","SAMIUTRA",22,0)
 ;
"RTN","SAMIUTRA",23,0)
 ; @section 1 code
"RTN","SAMIUTRA",24,0)
 ;
"RTN","SAMIUTRA",25,0)
START i $t(^%ut)="" w !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","SAMIUTRA",26,0)
 d EN^%ut($T(+0),2)
"RTN","SAMIUTRA",27,0)
 q
"RTN","SAMIUTRA",28,0)
 ;
"RTN","SAMIUTRA",29,0)
 ;
"RTN","SAMIUTRA",30,0)
STARTUP n utsuccess
"RTN","SAMIUTRA",31,0)
 D SVAPT1^SAMIUTST  ; Save VA's DFN 1 patient data
"RTN","SAMIUTRA",32,0)
 D LOADTPT^SAMIUTST  ; Load unit test patient data
"RTN","SAMIUTRA",33,0)
 q
"RTN","SAMIUTRA",34,0)
 ;
"RTN","SAMIUTRA",35,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUTRA",36,0)
 k utsuccess
"RTN","SAMIUTRA",37,0)
 D LVAPT1^SAMIUTST  ; Return VA's DPT 1 patient's data
"RTN","SAMIUTRA",38,0)
 q
"RTN","SAMIUTRA",39,0)
 ;
"RTN","SAMIUTRA",40,0)
 ;
"RTN","SAMIUTRA",41,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUTRA",42,0)
 D ^SAMICTRA
"RTN","SAMIUTRA",43,0)
 d SUCCEED^%ut
"RTN","SAMIUTRA",44,0)
 q
"RTN","SAMIUTRA",45,0)
 ;
"RTN","SAMIUTRA",46,0)
UTRCMD ; @TEST - Recommendation
"RTN","SAMIUTRA",47,0)
 ;recommend(rtn,SAMIVALS,dict)
"RTN","SAMIUTRA",48,0)
 n SAMIVALS,SAMIDICT,si,samikey,root,SAMIUPOO,SAMIUARC,nodea,nodep
"RTN","SAMIUTRA",49,0)
 s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTRA",50,0)
 s si="XXX00001"
"RTN","SAMIUTRA",51,0)
 s samikey="ceform-2018-10-21"
"RTN","SAMIUTRA",52,0)
 s SAMIVALS=$na(@root@("graph",si,samikey))
"RTN","SAMIUTRA",53,0)
 s SAMIDICT=$$setroot^%wd("cteval-dict")
"RTN","SAMIUTRA",54,0)
 s SAMIDICT=$na(@SAMIDICT@("cteval-dict"))
"RTN","SAMIUTRA",55,0)
 s cnt=1
"RTN","SAMIUTRA",56,0)
 ; SAMICTRA needs para = value to insert in one line
"RTN","SAMIUTRA",57,0)
 n para s para="POO"
"RTN","SAMIUTRA",58,0)
 s utsuccess=1
"RTN","SAMIUTRA",59,0)
 d RCMND^SAMICTRA("SAMIUPOO",SAMIVALS,SAMIDICT)
"RTN","SAMIUTRA",60,0)
 K ^KBAP("SAMIUTRA","UTRCMD1021")
"RTN","SAMIUTRA",61,0)
 M ^KBAP("SAMIUTRA","UTRCMD1021")=SAMIUPOO
"RTN","SAMIUTRA",62,0)
 d PLUTARR^SAMIUTST(.SAMIUARC,"UTRCMD^SAMIUTRA")
"RTN","SAMIUTRA",63,0)
 n nodea,nodep s nodea=$na(SAMIUARC),nodep=$na(SAMIUPOO)
"RTN","SAMIUTRA",64,0)
 f  s nodep=$q(@nodep),nodea=$q(@nodea) q:nodep=""  d  q:'utsuccess
"RTN","SAMIUTRA",65,0)
 . i '(@nodep=@nodea) s utsuccess=0
"RTN","SAMIUTRA",66,0)
 i '(nodea="") s utsuccess=0
"RTN","SAMIUTRA",67,0)
 d CHKEQ^%ut(utsuccess,1,"Testing recommend FAILED!")
"RTN","SAMIUTRA",68,0)
 q
"RTN","SAMIUTRA",69,0)
 ;
"RTN","SAMIUTRA",70,0)
UTOUT ; @TEST - out line
"RTN","SAMIUTRA",71,0)
 ;OUT(ln)
"RTN","SAMIUTRA",72,0)
 n cnt,rtn,SAMIUPOO
"RTN","SAMIUTRA",73,0)
 s cnt=1,rtn="SAMIUPOO",SAMIUPOO(1)="First line of test"
"RTN","SAMIUTRA",74,0)
 n SAMIULN s SAMIULN="Second line test"
"RTN","SAMIUTRA",75,0)
 s utsuccess=0
"RTN","SAMIUTRA",76,0)
 d OUT^SAMICTRA(SAMIULN)
"RTN","SAMIUTRA",77,0)
 s utsuccess=($g(SAMIUPOO(2))="Second line test")
"RTN","SAMIUTRA",78,0)
 d CHKEQ^%ut(utsuccess,1,"Testing out(ln) adds line to array FAILED!")
"RTN","SAMIUTRA",79,0)
 q
"RTN","SAMIUTRA",80,0)
 ;
"RTN","SAMIUTRA",81,0)
UTHOUT ; @TEST - hout line
"RTN","SAMIUTRA",82,0)
 ;HOUT(ln)
"RTN","SAMIUTRA",83,0)
 n cnt,rtn,SAMIUPOO
"RTN","SAMIUTRA",84,0)
 s cnt=1,rtn="SAMIUPOO",SAMIUPOO(1)="First line of test"
"RTN","SAMIUTRA",85,0)
 n SAMIULN s SAMIULN="Second line test"
"RTN","SAMIUTRA",86,0)
 s utsuccess=0
"RTN","SAMIUTRA",87,0)
 d HOUT^SAMICTRA(SAMIULN)
"RTN","SAMIUTRA",88,0)
 s utsuccess=($g(SAMIUPOO(2))="<p><span class='sectionhead'>Second line test</span>")
"RTN","SAMIUTRA",89,0)
 d CHKEQ^%ut(utsuccess,1,"Testing hout(ln) adds line to array FAILED!")
"RTN","SAMIUTRA",90,0)
 q
"RTN","SAMIUTRA",91,0)
 ;
"RTN","SAMIUTRA",92,0)
UTXVAL ; @TEST - extrinsic returns the patient value for var
"RTN","SAMIUTRA",93,0)
 ;xval(var,vals)
"RTN","SAMIUTRA",94,0)
 s utsuccess=0
"RTN","SAMIUTRA",95,0)
 s SAMIUARC(1)="Testing xval"
"RTN","SAMIUTRA",96,0)
 s utsuccess=($$XVAL^SAMICTRA(1,"SAMIUARC")="Testing xval")
"RTN","SAMIUTRA",97,0)
 d CHKEQ^%ut(utsuccess,1,"Testing xval(var,vals) FAILED!")
"RTN","SAMIUTRA",98,0)
 q
"RTN","SAMIUTRA",99,0)
 ;
"RTN","SAMIUTRA",100,0)
UTXSUB ; @TEST - extrinsic which returns the dictionary value defined by var
"RTN","SAMIUTRA",101,0)
 ;xsub(var,SAMIVALS,SAMIDICT,SAMIVALDX)
"RTN","SAMIUTRA",102,0)
 n SAMIVALS,SAMIVAR,SAMIUPOO,SAMIVALDX,result
"RTN","SAMIUTRA",103,0)
 s utsuccess=0
"RTN","SAMIUTRA",104,0)
 s SAMIVALS="SAMIUPOO"
"RTN","SAMIUTRA",105,0)
 s SAMIVAR="cteval-dict"
"RTN","SAMIUTRA",106,0)
 s SAMIUPOO(1)="biopsy"
"RTN","SAMIUTRA",107,0)
 s SAMIVALDX=1
"RTN","SAMIUTRA",108,0)
 s SAMIDICT=$$setroot^%wd("cteval-dict")
"RTN","SAMIUTRA",109,0)
 s result=$$XSUB^SAMICTRA(SAMIVAR,SAMIVALS,SAMIDICT,SAMIVALDX)
"RTN","SAMIUTRA",110,0)
 s utsuccess=(result="CT-guided biopsy")
"RTN","SAMIUTRA",111,0)
 d CHKEQ^%ut(utsuccess,1,"Testing xsub(var,SAMIVALS,dict,SAMIVALDX) FAILED!")
"RTN","SAMIUTRA",112,0)
 q
"RTN","SAMIUTRA",113,0)
 ;
"RTN","SAMIUTRA",114,0)
EOR ;End of routine SAMIUTRA
"RTN","SAMIUTRU")
0^82^B14559578
"RTN","SAMIUTRU",1,0)
SAMIUTRU ;ven/lgc - UNIT TEST for SAMIRU ;Oct 28, 2019@20:38
"RTN","SAMIUTRU",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTRU",3,0)
 ;
"RTN","SAMIUTRU",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTRU",5,0)
 ;
"RTN","SAMIUTRU",6,0)
 ; @section 0 primary development
"RTN","SAMIUTRU",7,0)
 ;
"RTN","SAMIUTRU",8,0)
 ; @routine-credits
"RTN","SAMIUTRU",9,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUTRU",10,0)
 ;  larry@fiscientific.com
"RTN","SAMIUTRU",11,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUTRU",12,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUTRU",13,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUTRU",14,0)
 ; @license: Apache 2.0
"RTN","SAMIUTRU",15,0)
 ;  https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIUTRU",16,0)
 ;
"RTN","SAMIUTRU",17,0)
 ; @application: SAMI
"RTN","SAMIUTRU",18,0)
 ; @version: 18.0
"RTN","SAMIUTRU",19,0)
 ; @patch-list: none yet
"RTN","SAMIUTRU",20,0)
 ;
"RTN","SAMIUTRU",21,0)
 ; @to-do
"RTN","SAMIUTRU",22,0)
 ;
"RTN","SAMIUTRU",23,0)
 ; @section 1 code
"RTN","SAMIUTRU",24,0)
 ;
"RTN","SAMIUTRU",25,0)
START i $t(^%ut)="" w !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","SAMIUTRU",26,0)
 d EN^%ut($T(+0),2)
"RTN","SAMIUTRU",27,0)
 q
"RTN","SAMIUTRU",28,0)
 ;
"RTN","SAMIUTRU",29,0)
STARTUP n utsuccess
"RTN","SAMIUTRU",30,0)
 D SVAPT1^SAMIUTST  ; Save VA's DFN 1 patient data
"RTN","SAMIUTRU",31,0)
 D LOADTPT^SAMIUTST  ; Load unit test patient data
"RTN","SAMIUTRU",32,0)
 q
"RTN","SAMIUTRU",33,0)
 ;
"RTN","SAMIUTRU",34,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUTRU",35,0)
 k utsuccess
"RTN","SAMIUTRU",36,0)
 D LVAPT1^SAMIUTST  ; Return VA's DPT 1 patient's data
"RTN","SAMIUTRU",37,0)
 q
"RTN","SAMIUTRU",38,0)
 ;
"RTN","SAMIUTRU",39,0)
 ;
"RTN","SAMIUTRU",40,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUTRU",41,0)
 D ^SAMIRU
"RTN","SAMIUTRU",42,0)
 d SUCCEED^%ut
"RTN","SAMIUTRU",43,0)
 q
"RTN","SAMIUTRU",44,0)
 ;
"RTN","SAMIUTRU",45,0)
UTINDEX ; @TEST - create the zip index in the zip graph
"RTN","SAMIUTRU",46,0)
 ;INDEX^SAMIRU
"RTN","SAMIUTRU",47,0)
 n root,samid1,samid2,samid3,SAMIUPOO,SAMIUARC
"RTN","SAMIUTRU",48,0)
 s root=$$setroot^%wd("NCHS Urban-Rural")
"RTN","SAMIUTRU",49,0)
 s samid1=$d(@root@("zip")) ; should be 10
"RTN","SAMIUTRU",50,0)
 i samid1=10 d
"RTN","SAMIUTRU",51,0)
 . m SAMIUPOO=@root@("zip")
"RTN","SAMIUTRU",52,0)
 . d SVUTARR^SAMIUTST(.SAMIUPOO,"UTINDEX^SAMIUTRU")
"RTN","SAMIUTRU",53,0)
 ; if the "zip" index exists, delete it
"RTN","SAMIUTRU",54,0)
 i samid1=10 k @root@("zip")
"RTN","SAMIUTRU",55,0)
 ; confirm the "zip" index does not exist
"RTN","SAMIUTRU",56,0)
 s samid2=$d(@root@("zip")) ; should be 0
"RTN","SAMIUTRU",57,0)
 ; Fail if unable to kill the "zip" index
"RTN","SAMIUTRU",58,0)
 i '(samid2=0) d  q
"RTN","SAMIUTRU",59,0)
 . d PLUTARR^SAMIUTST(.SAMIUARC,"UTINDEX^SAMIUTRU")
"RTN","SAMIUTRU",60,0)
 . m @root@("zip")=SAMIUARC
"RTN","SAMIUTRU",61,0)
 . d FAIL^%ut("Error, unable to kill 'zip' index on on NCHS Urban-Rural!")
"RTN","SAMIUTRU",62,0)
 d INDEX^SAMIRU
"RTN","SAMIUTRU",63,0)
 ; confirm now the "zip" does exist
"RTN","SAMIUTRU",64,0)
 s samid3=$d(@root@("zip")) ; should be 10 again
"RTN","SAMIUTRU",65,0)
 i '(samid3=10) d
"RTN","SAMIUTRU",66,0)
 . d PLUTARR^SAMIUTST(.SAMIUARC,"UTINDEX^SAMIUTRU")
"RTN","SAMIUTRU",67,0)
 . m @root@("zip")=SAMIUARC
"RTN","SAMIUTRU",68,0)
 s utsuccess=(samid3=10)
"RTN","SAMIUTRU",69,0)
 d CHKEQ^%ut(utsuccess,1,"Create 'zip' index on NCHS Urban-Rural FAILED!")
"RTN","SAMIUTRU",70,0)
 q
"RTN","SAMIUTRU",71,0)
 ;
"RTN","SAMIUTRU",72,0)
UTWSGRU ; @TEST - web service to return counts for rural and urban
"RTN","SAMIUTRU",73,0)
 ;WSGETRU(rtn,filter)
"RTN","SAMIUTRU",74,0)
 n SAMIURTN,SAMIUFLTR,root
"RTN","SAMIUTRU",75,0)
 s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTRU",76,0)
 ;
"RTN","SAMIUTRU",77,0)
 d WSGETRU^SAMIRU(.SAMIURTN,.SAMIUFLTR)
"RTN","SAMIUTRU",78,0)
 s utsuccess=1
"RTN","SAMIUTRU",79,0)
 i $g(SAMIURTN(1))'["result" s utsuccess=0
"RTN","SAMIUTRU",80,0)
 i $g(SAMIURTN(1))'["rural" s utsuccess=0
"RTN","SAMIUTRU",81,0)
 i $g(SAMIURTN(1))'["site" s utsuccess=0
"RTN","SAMIUTRU",82,0)
 i $g(SAMIURTN(1))'["unknown" s utsuccess=0
"RTN","SAMIUTRU",83,0)
 i $g(SAMIURTN(1))'["urban" s utsuccess=0
"RTN","SAMIUTRU",84,0)
 d CHKEQ^%ut(utsuccess,1,"Testing web service counting rural and urban FAILED!")
"RTN","SAMIUTRU",85,0)
 q
"RTN","SAMIUTRU",86,0)
 ;
"RTN","SAMIUTRU",87,0)
UTWSZIP ; @TEST - web service to return rural or urban
"RTN","SAMIUTRU",88,0)
 n SAMIFLTR,SAMIPOO
"RTN","SAMIUTRU",89,0)
 s utsuccess=0
"RTN","SAMIUTRU",90,0)
 ;
"RTN","SAMIUTRU",91,0)
 s SAMIFLTR("zip")="02111"
"RTN","SAMIUTRU",92,0)
 d WSZIPRU^SAMIRU(.SAMIPOO,.SAMIFLTR)
"RTN","SAMIUTRU",93,0)
 S SAMIPOO=$G(SAMIPOO)_$TR($P($P(SAMIPOO(1),":",2),"}"),"""")
"RTN","SAMIUTRU",94,0)
 ;
"RTN","SAMIUTRU",95,0)
 s SAMIFLTR("zip")="03216"
"RTN","SAMIUTRU",96,0)
 d WSZIPRU^SAMIRU(.SAMIPOO,.SAMIFLTR)
"RTN","SAMIUTRU",97,0)
 S SAMIPOO=$G(SAMIPOO)_$TR($P($P(SAMIPOO(1),":",2),"}"),"""")
"RTN","SAMIUTRU",98,0)
 ;
"RTN","SAMIUTRU",99,0)
 s SAMIFLTR("zip")=40714
"RTN","SAMIUTRU",100,0)
 d WSZIPRU^SAMIRU(.SAMIPOO,.SAMIFLTR)
"RTN","SAMIUTRU",101,0)
 S SAMIPOO=$G(SAMIPOO)_$TR($P($P(SAMIPOO(1),":",2),"}"),"""")
"RTN","SAMIUTRU",102,0)
 ;
"RTN","SAMIUTRU",103,0)
 s SAMIFLTR("zip")=98178
"RTN","SAMIUTRU",104,0)
 d WSZIPRU^SAMIRU(.SAMIPOO,.SAMIFLTR)
"RTN","SAMIUTRU",105,0)
 S SAMIPOO=$G(SAMIPOO)_$TR($P($P(SAMIPOO(1),":",2),"}"),"""")
"RTN","SAMIUTRU",106,0)
 ;
"RTN","SAMIUTRU",107,0)
 s utsuccess=(SAMIPOO="urnu")
"RTN","SAMIUTRU",108,0)
 d CHKEQ^%ut(utsuccess,1,"Testing web service return urban FAILED!")
"RTN","SAMIUTRU",109,0)
 q
"RTN","SAMIUTRU",110,0)
 ;
"RTN","SAMIUTRU",111,0)
EOR ;End of routine SAMIUTRU
"RTN","SAMIUTRX")
0^83^B10458542
"RTN","SAMIUTRX",1,0)
SAMIUTRX ;ven/lgc - UNIT TEST for SAMICTRX ; 3/15/19 11:14am
"RTN","SAMIUTRX",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTRX",3,0)
 ;
"RTN","SAMIUTRX",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTRX",5,0)
 ;
"RTN","SAMIUTRX",6,0)
 ; @section 0 primary development
"RTN","SAMIUTRX",7,0)
 ;
"RTN","SAMIUTRX",8,0)
 ; @routine-credits
"RTN","SAMIUTRX",9,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUTRX",10,0)
 ;  larry@fiscientific.com
"RTN","SAMIUTRX",11,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUTRX",12,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUTRX",13,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUTRX",14,0)
 ; @license: Apache 2.0
"RTN","SAMIUTRX",15,0)
 ;  https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIUTRX",16,0)
 ;
"RTN","SAMIUTRX",17,0)
 ; @application: SAMI
"RTN","SAMIUTRX",18,0)
 ; @version: 18.0
"RTN","SAMIUTRX",19,0)
 ; @patch-list: none yet
"RTN","SAMIUTRX",20,0)
 ;
"RTN","SAMIUTRX",21,0)
 ; @to-do
"RTN","SAMIUTRX",22,0)
 ;
"RTN","SAMIUTRX",23,0)
 ; @section 1 code
"RTN","SAMIUTRX",24,0)
 ;
"RTN","SAMIUTRX",25,0)
START i $t(^%ut)="" w !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","SAMIUTRX",26,0)
 d EN^%ut($T(+0),2)
"RTN","SAMIUTRX",27,0)
 q
"RTN","SAMIUTRX",28,0)
 ;
"RTN","SAMIUTRX",29,0)
 ;
"RTN","SAMIUTRX",30,0)
STARTUP n utsuccess
"RTN","SAMIUTRX",31,0)
 q
"RTN","SAMIUTRX",32,0)
 ;
"RTN","SAMIUTRX",33,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUTRX",34,0)
 k utsuccess
"RTN","SAMIUTRX",35,0)
 q
"RTN","SAMIUTRX",36,0)
 ;
"RTN","SAMIUTRX",37,0)
 ;
"RTN","SAMIUTRX",38,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUTRX",39,0)
 D ^SAMICTRX
"RTN","SAMIUTRX",40,0)
 d SUCCEED^%ut
"RTN","SAMIUTRX",41,0)
 q
"RTN","SAMIUTRX",42,0)
 ;
"RTN","SAMIUTRX",43,0)
UTOUT ; @TEST - out line
"RTN","SAMIUTRX",44,0)
 ;OUT(ln)
"RTN","SAMIUTRX",45,0)
 n cnt,rtn,poo
"RTN","SAMIUTRX",46,0)
 s cnt=1,rtn="poo",poo(1)="First line of test"
"RTN","SAMIUTRX",47,0)
 n SAMIULN s SAMIULN="Second line test"
"RTN","SAMIUTRX",48,0)
 s utsuccess=0
"RTN","SAMIUTRX",49,0)
 d OUT^SAMICTRX(SAMIULN)
"RTN","SAMIUTRX",50,0)
 s utsuccess=($g(poo(2))="Second line test")
"RTN","SAMIUTRX",51,0)
 d CHKEQ^%ut(utsuccess,1,"Testing out(ln) adds line to array FAILED!")
"RTN","SAMIUTRX",52,0)
 ;
"RTN","SAMIUTRX",53,0)
 n cnt,rtn,poo
"RTN","SAMIUTRX",54,0)
 s cnt=1,rtn="poo",poo(1)="First line of test"
"RTN","SAMIUTRX",55,0)
 n SAMIULN s SAMIULN="Second line test"
"RTN","SAMIUTRX",56,0)
 s utsuccess=0
"RTN","SAMIUTRX",57,0)
 n debug s debug=1
"RTN","SAMIUTRX",58,0)
 d OUT^SAMICTRX(SAMIULN)
"RTN","SAMIUTRX",59,0)
 s utsuccess=($g(poo(2))[":Second line test")
"RTN","SAMIUTRX",60,0)
 d CHKEQ^%ut(utsuccess,1,"Testing out(ln) adds line debug FAILED!")
"RTN","SAMIUTRX",61,0)
 q
"RTN","SAMIUTRX",62,0)
 ;
"RTN","SAMIUTRX",63,0)
UTHOUT ; @TEST - hout line
"RTN","SAMIUTRX",64,0)
 ;HOUT(ln)
"RTN","SAMIUTRX",65,0)
 n cnt,rtn,poo
"RTN","SAMIUTRX",66,0)
 s cnt=1,rtn="poo",poo(1)="First line of test"
"RTN","SAMIUTRX",67,0)
 n SAMIULN s SAMIULN="Second line test"
"RTN","SAMIUTRX",68,0)
 s utsuccess=0
"RTN","SAMIUTRX",69,0)
 d HOUT^SAMICTRX(SAMIULN)
"RTN","SAMIUTRX",70,0)
 s utsuccess=($g(poo(2))="<p><span class='sectionhead'>Second line test</span>")
"RTN","SAMIUTRX",71,0)
 d CHKEQ^%ut(utsuccess,1,"Testing hout(ln) adds line to array FAILED!")
"RTN","SAMIUTRX",72,0)
 q
"RTN","SAMIUTRX",73,0)
 ;
"RTN","SAMIUTRX",74,0)
UTXVAL ; @TEST - extrinsic returns the patient value for var
"RTN","SAMIUTRX",75,0)
 ;XVAL(var,vals)
"RTN","SAMIUTRX",76,0)
 s utsuccess=0
"RTN","SAMIUTRX",77,0)
 n arc s arc(1)="Testing xval"
"RTN","SAMIUTRX",78,0)
 s utsuccess=($$XVAL^SAMICTRX(1,"arc")="Testing xval")
"RTN","SAMIUTRX",79,0)
 d CHKEQ^%ut(utsuccess,1,"Testing xval(var,vals) FAILED!")
"RTN","SAMIUTRX",80,0)
 q
"RTN","SAMIUTRX",81,0)
 ;
"RTN","SAMIUTRX",82,0)
UTXSUB ; @TEST - extrinsic which returns the dictionary value defined by var
"RTN","SAMIUTRX",83,0)
 ;XSUB(var,vals,dict,valdx)
"RTN","SAMIUTRX",84,0)
 n vals,var,poo,valdx,result,dict
"RTN","SAMIUTRX",85,0)
 s utsuccess=0
"RTN","SAMIUTRX",86,0)
 s vals="poo"
"RTN","SAMIUTRX",87,0)
 s var="cteval-dict"
"RTN","SAMIUTRX",88,0)
 s poo(1)="biopsy"
"RTN","SAMIUTRX",89,0)
 s valdx=1
"RTN","SAMIUTRX",90,0)
 s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMIUTRX",91,0)
 s result=$$XSUB^SAMICTRX(var,vals,dict,valdx)
"RTN","SAMIUTRX",92,0)
 s utsuccess=(result="CT-guided biopsy")
"RTN","SAMIUTRX",93,0)
 d CHKEQ^%ut(utsuccess,1,"Testing xsub(var,vals,dict,valdx) FAILED!")
"RTN","SAMIUTRX",94,0)
 q
"RTN","SAMIUTRX",95,0)
 ;
"RTN","SAMIUTRX",96,0)
EOR ;End of routine SAMIUTRX
"RTN","SAMIUTS2")
0^84^B163797059
"RTN","SAMIUTS2",1,0)
SAMIUTS2 ;ven/lgc - UNIT TEST for SAMICASE,SAMICAS2,SAMICAS3 ;Jan 17, 2020@12:52
"RTN","SAMIUTS2",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTS2",3,0)
 ;
"RTN","SAMIUTS2",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTS2",5,0)
 ;
"RTN","SAMIUTS2",6,0)
 ; @section 0 primary development
"RTN","SAMIUTS2",7,0)
 ;
"RTN","SAMIUTS2",8,0)
 ; @routine-credits
"RTN","SAMIUTS2",9,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUTS2",10,0)
 ;  larry@fiscientific.com
"RTN","SAMIUTS2",11,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUTS2",12,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUTS2",13,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUTS2",14,0)
 ; @license: Apache 2.0
"RTN","SAMIUTS2",15,0)
 ;  https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIUTS2",16,0)
 ;
"RTN","SAMIUTS2",17,0)
 ; @application: SAMI
"RTN","SAMIUTS2",18,0)
 ; @version: 18.0
"RTN","SAMIUTS2",19,0)
 ; @patch-list: none yet
"RTN","SAMIUTS2",20,0)
 ;
"RTN","SAMIUTS2",21,0)
 ; @to-do
"RTN","SAMIUTS2",22,0)
 ;
"RTN","SAMIUTS2",23,0)
 ; @section 1 code
"RTN","SAMIUTS2",24,0)
 ;
"RTN","SAMIUTS2",25,0)
START I $t(^%ut)="" W !,"*** UNIT TEST NOT INSTALLEd ***" Q
"RTN","SAMIUTS2",26,0)
 d EN^%ut($t(+0),2)
"RTN","SAMIUTS2",27,0)
 Q
"RTN","SAMIUTS2",28,0)
 ;
"RTN","SAMIUTS2",29,0)
 ;
"RTN","SAMIUTS2",30,0)
STARTUP n utsuccess
"RTN","SAMIUTS2",31,0)
 D SVAPT1^SAMIUTST  ; Save VA's DFN 1 patient data
"RTN","SAMIUTS2",32,0)
 D LOADTPT^SAMIUTST  ; Load unit test patient data
"RTN","SAMIUTS2",33,0)
 q
"RTN","SAMIUTS2",34,0)
 ;
"RTN","SAMIUTS2",35,0)
SETUP q
"RTN","SAMIUTS2",36,0)
 ;
"RTN","SAMIUTS2",37,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUTS2",38,0)
 k utsuccess
"RTN","SAMIUTS2",39,0)
 D LVAPT1^SAMIUTST  ; Return VA's DPT 1 patient's data
"RTN","SAMIUTS2",40,0)
 q
"RTN","SAMIUTS2",41,0)
 ;
"RTN","SAMIUTS2",42,0)
 ;
"RTN","SAMIUTS2",43,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUTS2",44,0)
 D ^SAMICASE
"RTN","SAMIUTS2",45,0)
 d SUCCEED^%ut
"RTN","SAMIUTS2",46,0)
 D ^SAMICAS2
"RTN","SAMIUTS2",47,0)
 d SUCCEED^%ut
"RTN","SAMIUTS2",48,0)
 D ^SAMICAS3
"RTN","SAMIUTS2",49,0)
 d SUCCEED^%ut
"RTN","SAMIUTS2",50,0)
 q
"RTN","SAMIUTS2",51,0)
 ;
"RTN","SAMIUTS2",52,0)
UTGTMPL ; @TEST - get html template
"RTN","SAMIUTS2",53,0)
 ;GETTMPL(return,form)
"RTN","SAMIUTS2",54,0)
 n temp,SAMIUPOO
"RTN","SAMIUTS2",55,0)
 d GETTMPL^SAMICASE("temp","vapals:casereview")
"RTN","SAMIUTS2",56,0)
 D SVUTARR^SAMIUTST(.temp,"UTGTMPL^SAMIUTS2")
"RTN","SAMIUTS2",57,0)
 d PLUTARR^SAMIUTST(.SAMIUPOO,"UTGTMPL^SAMIUTS2")
"RTN","SAMIUTS2",58,0)
 s utsuccess=1
"RTN","SAMIUTS2",59,0)
 n nodep,nodet s nodep=$na(SAMIUPOO),nodet=$na(temp)
"RTN","SAMIUTS2",60,0)
 f  s nodep=$q(@nodep),nodet=$q(@nodet) q:nodep=""  d  q:'utsuccess
"RTN","SAMIUTS2",61,0)
 .; ignore the one node in arrays that have a date as
"RTN","SAMIUTS2",62,0)
 .;  we can't know ahead of time what date the unit test
"RTN","SAMIUTS2",63,0)
 .;  will be run on
"RTN","SAMIUTS2",64,0)
 . i $e($tr(@nodep,""""" "),1,10)?4N1"."2N1"."2N q
"RTN","SAMIUTS2",65,0)
 . i (@nodep["meta content") q
"RTN","SAMIUTS2",66,0)
 . i '(@nodep=@nodet) s utsuccess=0
"RTN","SAMIUTS2",67,0)
 i '(nodet="") s utsuccess=0
"RTN","SAMIUTS2",68,0)
 d CHKEQ^%ut(utsuccess,1,"Testing getting vapals:casereview template FAILED!")
"RTN","SAMIUTS2",69,0)
 q
"RTN","SAMIUTS2",70,0)
 ;
"RTN","SAMIUTS2",71,0)
UTHMNY ; @TEST - extrinsic returns how many forms the patient has used before deleting a patient
"RTN","SAMIUTS2",72,0)
 ;CNTITEMS(sid)
"RTN","SAMIUTS2",73,0)
 n rootvp,gienut,dfn,gienvp,studyid,uforms,forms
"RTN","SAMIUTS2",74,0)
 ; get test patient
"RTN","SAMIUTS2",75,0)
 s dfn=1
"RTN","SAMIUTS2",76,0)
 ; get studyid on patient
"RTN","SAMIUTS2",77,0)
 set rootvp=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTS2",78,0)
 s gienvp=$O(@rootvp@("dfn",dfn,0))
"RTN","SAMIUTS2",79,0)
 i '$g(gienvp) d  q
"RTN","SAMIUTS2",80,0)
 . d FAIL^%ut("Test patient not found in vapals-patients Graphstore")
"RTN","SAMIUTS2",81,0)
 s studyid=$G(@rootvp@(gienvp,"sisid"))
"RTN","SAMIUTS2",82,0)
 i '$l($g(studyid)) d  q
"RTN","SAMIUTS2",83,0)
 . d FAIL^%ut("Test patient did not have studyid in vapals-patients Graphstore")
"RTN","SAMIUTS2",84,0)
 ; get number of forms on test patient
"RTN","SAMIUTS2",85,0)
 n uforms,forms,zi s uforms=0,zi=""
"RTN","SAMIUTS2",86,0)
 f  s zi=$o(@rootvp@("graph",studyid,zi)) q:zi=""  d
"RTN","SAMIUTS2",87,0)
 . s uforms=uforms+1
"RTN","SAMIUTS2",88,0)
 s forms=$$CNTITEMS^SAMICAS2(studyid)
"RTN","SAMIUTS2",89,0)
 s utsuccess=(uforms=forms)
"RTN","SAMIUTS2",90,0)
 d CHKEQ^%ut(utsuccess,1,"Testing getting how many forms for patient FAIL!")
"RTN","SAMIUTS2",91,0)
 q
"RTN","SAMIUTS2",92,0)
 ;
"RTN","SAMIUTS2",93,0)
UTCNTITM ; @TEST - get items available for studyid
"RTN","SAMIUTS2",94,0)
 ;GETITEMS(ary,sid)
"RTN","SAMIUTS2",95,0)
 n rootvp,gienut,dfn,gienvp,studyid,uforms,forms
"RTN","SAMIUTS2",96,0)
 ; get test patient
"RTN","SAMIUTS2",97,0)
 s dfn=1
"RTN","SAMIUTS2",98,0)
 ; get studyid on patient
"RTN","SAMIUTS2",99,0)
 set rootvp=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTS2",100,0)
 s gienvp=$O(@rootvp@("dfn",dfn,0))
"RTN","SAMIUTS2",101,0)
 i '$g(gienvp) d  q
"RTN","SAMIUTS2",102,0)
 . d FAIL^%ut("Test patient not found in vapals-patients Graphstore")
"RTN","SAMIUTS2",103,0)
 s studyid=$G(@rootvp@(gienvp,"sisid"))
"RTN","SAMIUTS2",104,0)
 i '$l($g(studyid)) d  q
"RTN","SAMIUTS2",105,0)
 . d FAIL^%ut("Test patient did not have studyid in vapals-patients Graphstore")
"RTN","SAMIUTS2",106,0)
 ; get number of forms on test patient
"RTN","SAMIUTS2",107,0)
 n uforms,forms,zi s uforms=0,zi=""
"RTN","SAMIUTS2",108,0)
 f  s zi=$o(@rootvp@("graph",studyid,zi)) q:zi=""  d
"RTN","SAMIUTS2",109,0)
 . s uforms(zi)=""
"RTN","SAMIUTS2",110,0)
 d GETITEMS^SAMICASE("SAMIUPOO",studyid)
"RTN","SAMIUTS2",111,0)
 s utsuccess=1
"RTN","SAMIUTS2",112,0)
 s zi="" f  s zi=$o(uforms(zi)) q:zi=""  d
"RTN","SAMIUTS2",113,0)
 . i '$d(SAMIUPOO(zi)) s utsuccess=0
"RTN","SAMIUTS2",114,0)
 d CHKEQ^%ut(utsuccess,1,"Testing getting available forms for patient FAILED!")
"RTN","SAMIUTS2",115,0)
 q
"RTN","SAMIUTS2",116,0)
 ;
"RTN","SAMIUTS2",117,0)
UTGDTK ; @TEST - date portion of form key
"RTN","SAMIUTS2",118,0)
 ;getDateKey(formid)
"RTN","SAMIUTS2",119,0)
 n fdtkey s fdtkey=$$GETDTKEY^SAMICAS2("MYFORM-2018-10-03")
"RTN","SAMIUTS2",120,0)
 d CHKEQ^%ut(fdtkey,"2018-10-03","Testing get date portion of form  FAILED!")
"RTN","SAMIUTS2",121,0)
 q
"RTN","SAMIUTS2",122,0)
 ;
"RTN","SAMIUTS2",123,0)
UTK2DDT ; @TEST - date in elcap format from key date
"RTN","SAMIUTS2",124,0)
 ;KEY2DSPD(zkey)
"RTN","SAMIUTS2",125,0)
 n ecpdt s ecpdt=$$KEY2DSPD^SAMICAS2("2018-10-03")
"RTN","SAMIUTS2",126,0)
 d CHKEQ^%ut(ecpdt,"10/3/2018","Testing date in elcap form  FAILED!")
"RTN","SAMIUTS2",127,0)
 q
"RTN","SAMIUTS2",128,0)
 ;
"RTN","SAMIUTS2",129,0)
UTVPLSD ; @TEST - extrinsic which return the vapals format for dates
"RTN","SAMIUTS2",130,0)
 ;VAPALSDT(fmdate)
"RTN","SAMIUTS2",131,0)
 n vpdate s vpdate=$$VAPALSDT^SAMICASE("3181003")
"RTN","SAMIUTS2",132,0)
 d CHKEQ^%ut(vpdate,"10/3/2018","Testing fmdate to elcap date form  FAILED!")
"RTN","SAMIUTS2",133,0)
 q
"RTN","SAMIUTS2",134,0)
 ;
"RTN","SAMIUTS2",135,0)
UTWSNF ; @TEST - select new form for patient (get service)
"RTN","SAMIUTS2",136,0)
 ;WSNUFORM(rtn,filter)
"RTN","SAMIUTS2",137,0)
 n rtn,SAMIUARGS,SAMIUPOO,SAMIUARC
"RTN","SAMIUTS2",138,0)
 s SAMIUARGS("studyid")="XXX00001"
"RTN","SAMIUTS2",139,0)
 d WSNUFORM^SAMICASE(.SAMIUPOO,.SAMIUARGS)
"RTN","SAMIUTS2",140,0)
 d PLUTARR^SAMIUTST(.SAMIUARC,"UTWSNF^SAMIUTS2")
"RTN","SAMIUTS2",141,0)
 s utsuccess=1
"RTN","SAMIUTS2",142,0)
 n nodep,nodea s nodep=$na(SAMIUPOO),nodea=$na(SAMIUARC)
"RTN","SAMIUTS2",143,0)
 f  s nodep=$q(@nodep),nodea=$q(@nodea) q:nodep=""  d  q:'utsuccess
"RTN","SAMIUTS2",144,0)
 . i $e($tr(@nodea," "),1,10)?4N1P2N1P2N q
"RTN","SAMIUTS2",145,0)
 . i @nodea["<meta" q
"RTN","SAMIUTS2",146,0)
 . i '(@nodep=@nodea) s utsuccess=0
"RTN","SAMIUTS2",147,0)
 i '(nodea="") s utsuccess=0
"RTN","SAMIUTS2",148,0)
 d CHKEQ^%ut(1,utsuccess,"Testing wsNuForm FAILED!")
"RTN","SAMIUTS2",149,0)
 q
"RTN","SAMIUTS2",150,0)
 ;
"RTN","SAMIUTS2",151,0)
UTK2FM ; @TEST - convert a key to a fileman date
"RTN","SAMIUTS2",152,0)
 ; KEY2FM
"RTN","SAMIUTS2",153,0)
 n SAMIKEY,fmd
"RTN","SAMIUTS2",154,0)
 s SAMIKEY="unittestform-2018-11-13"
"RTN","SAMIUTS2",155,0)
 s fmd=$$KEY2FM^SAMICASE(SAMIKEY)
"RTN","SAMIUTS2",156,0)
 s utsuccess=(fmd=3181113)
"RTN","SAMIUTS2",157,0)
 d CHKEQ^%ut(1,utsuccess,"Testing key2fm FAILED!")
"RTN","SAMIUTS2",158,0)
 q
"RTN","SAMIUTS2",159,0)
 ;
"RTN","SAMIUTS2",160,0)
UTMKSBF ; @TEST - create background form
"RTN","SAMIUTS2",161,0)
 ;MKSBFORM(sid,key)
"RTN","SAMIUTS2",162,0)
 d CHKFORM^SAMIUTS2("sbform","MKSBFORM",.utsuccess)
"RTN","SAMIUTS2",163,0)
 d CHKEQ^%ut(1,utsuccess,"Testing create background form FAILED!")
"RTN","SAMIUTS2",164,0)
 q
"RTN","SAMIUTS2",165,0)
 ;
"RTN","SAMIUTS2",166,0)
UTMKCEF ; @TEST - create ct evaluation form
"RTN","SAMIUTS2",167,0)
 ;MKCEFORM(sid,key)
"RTN","SAMIUTS2",168,0)
 d CHKFORM^SAMIUTS2("ceform","MKCEFORM",.utsuccess)
"RTN","SAMIUTS2",169,0)
 d CHKEQ^%ut(utsuccess,1,"Testing create ct eval form FAILED!")
"RTN","SAMIUTS2",170,0)
 q
"RTN","SAMIUTS2",171,0)
 ;
"RTN","SAMIUTS2",172,0)
UTMKFUF ; @TEST - create Follow-up form
"RTN","SAMIUTS2",173,0)
 ;MKFUFORM(sid,key)
"RTN","SAMIUTS2",174,0)
 d CHKFORM^SAMIUTS2("fuform","MKFUFORM",.utsuccess)
"RTN","SAMIUTS2",175,0)
 d CHKEQ^%ut(utsuccess,1,"Testing create followup  form FAILED!")
"RTN","SAMIUTS2",176,0)
 q
"RTN","SAMIUTS2",177,0)
 ;
"RTN","SAMIUTS2",178,0)
UTMKPTF ; @TEST - create pt form
"RTN","SAMIUTS2",179,0)
 ;MKPTFORM(sid,key)
"RTN","SAMIUTS2",180,0)
 d CHKFORM^SAMIUTS2("ptform","MKPTFORM",.utsuccess)
"RTN","SAMIUTS2",181,0)
 d CHKEQ^%ut(utsuccess,1,"Testing create pt form FAILED!")
"RTN","SAMIUTS2",182,0)
 q
"RTN","SAMIUTS2",183,0)
 ;
"RTN","SAMIUTS2",184,0)
UTMKITF ; @TEST - create intervention form
"RTN","SAMIUTS2",185,0)
 ;MKITFORM(sid,key)
"RTN","SAMIUTS2",186,0)
 d CHKFORM^SAMIUTS2("itform","MKITFORM",.utsuccess)
"RTN","SAMIUTS2",187,0)
 d CHKEQ^%ut(utsuccess,1,"Testing create intervention form FAILED!")
"RTN","SAMIUTS2",188,0)
 q
"RTN","SAMIUTS2",189,0)
 ;
"RTN","SAMIUTS2",190,0)
UTMKBXF ; @TEST - create biopsy form
"RTN","SAMIUTS2",191,0)
 ;MKBXFORM(sid,key)
"RTN","SAMIUTS2",192,0)
 d CHKFORM^SAMIUTS2("bxform","MKBXFORM",.utsuccess)
"RTN","SAMIUTS2",193,0)
 d CHKEQ^%ut(utsuccess,1,"Testing create bx ct eval form FAILED!")
"RTN","SAMIUTS2",194,0)
 q
"RTN","SAMIUTS2",195,0)
 ;
"RTN","SAMIUTS2",196,0)
UTWSCAS ; @TEST - generate case review page
"RTN","SAMIUTS2",197,0)
 ;WSCASE(rtn,filter)
"RTN","SAMIUTS2",198,0)
 n SAMIUFLTR s SAMIUFLTR("studyid")="XXX00001"
"RTN","SAMIUTS2",199,0)
 n SAMIUPOO d WSCASE^SAMICASE(.SAMIUPOO,.SAMIUFLTR)
"RTN","SAMIUTS2",200,0)
 n SAMIUARC d PLUTARR^SAMIUTST(.SAMIUARC,"UTWSCAS^SAMIUTS2")
"RTN","SAMIUTS2",201,0)
 s utsuccess=1
"RTN","SAMIUTS2",202,0)
 n nodep,nodea s nodep=$na(SAMIUPOO),nodea=$na(SAMIUARC)
"RTN","SAMIUTS2",203,0)
 f  s nodep=$q(@nodep),nodea=$q(@nodea) q:nodep=""  d
"RTN","SAMIUTS2",204,0)
 . q:(@nodep["(incomplete)")
"RTN","SAMIUTS2",205,0)
 . q:(@nodep["<meta content")
"RTN","SAMIUTS2",206,0)
 . q:($e($tr(@nodep," "),1,10))?4N1P2N1P2N
"RTN","SAMIUTS2",207,0)
 . i '($qs(nodep,1)=$qs(nodea,1)) s utsuccess=0
"RTN","SAMIUTS2",208,0)
 . i '(@nodep=@nodea) s utsuccess=0
"RTN","SAMIUTS2",209,0)
 i '(nodea="") s utsuccess=0
"RTN","SAMIUTS2",210,0)
 d CHKEQ^%ut(utsuccess,1,"Testing generating case review page FAILED!")
"RTN","SAMIUTS2",211,0)
 q
"RTN","SAMIUTS2",212,0)
 ;
"RTN","SAMIUTS2",213,0)
UTGSAMIS ; @TEST - get 'samistatus' to val in form
"RTN","SAMIUTS2",214,0)
 ;GSAMISTA(sid,form)
"RTN","SAMIUTS2",215,0)
 n root,form,sid,ss1,ss2
"RTN","SAMIUTS2",216,0)
 s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTS2",217,0)
 s form="sbform-2018-10-21"
"RTN","SAMIUTS2",218,0)
 s sid="XXX00001"
"RTN","SAMIUTS2",219,0)
 s ss1=$g(@root@("graph",sid,"sbform-2018-10-21","samistatus"))
"RTN","SAMIUTS2",220,0)
 s ss2=$$GSAMISTA^SAMICAS2(sid,form)
"RTN","SAMIUTS2",221,0)
 s utsuccess=(ss1=ss2)
"RTN","SAMIUTS2",222,0)
 d CHKEQ^%ut(utsuccess,1,"Testing get samistatus FAILED!")
"RTN","SAMIUTS2",223,0)
 q
"RTN","SAMIUTS2",224,0)
 ;
"RTN","SAMIUTS2",225,0)
UTSSAMIS ; @TEST - set 'samistatus' to val in form
"RTN","SAMIUTS2",226,0)
 ;SSAMISTA(sid,form,val)
"RTN","SAMIUTS2",227,0)
 n root,form,sid,ss1,ss2,val
"RTN","SAMIUTS2",228,0)
 s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTS2",229,0)
 s form="sbform-2018-10-21"
"RTN","SAMIUTS2",230,0)
 s sid="XXX00001"
"RTN","SAMIUTS2",231,0)
 s val="unit test"
"RTN","SAMIUTS2",232,0)
 s ss1=$g(@root@("graph",sid,"sbform-2018-10-21","samistatus"))
"RTN","SAMIUTS2",233,0)
 d SSAMISTA^SAMICASE(sid,form,val)
"RTN","SAMIUTS2",234,0)
 s ss2=$g(@root@("graph",sid,"sbform-2018-10-21","samistatus"))
"RTN","SAMIUTS2",235,0)
 ;return to original value
"RTN","SAMIUTS2",236,0)
 s @root@("graph",sid,"sbform-2018-10-21","samistatus")=ss1
"RTN","SAMIUTS2",237,0)
 s utsuccess=(ss2="unit test")
"RTN","SAMIUTS2",238,0)
 d CHKEQ^%ut(utsuccess,1,"Testing set samistatus FAILED!")
"RTN","SAMIUTS2",239,0)
 q
"RTN","SAMIUTS2",240,0)
 ;
"RTN","SAMIUTS2",241,0)
UTDELFM ; @TEST - deletes a form if it is incomplete
"RTN","SAMIUTS2",242,0)
 ;DELFORM(RESULT,SAMIUARGS)
"RTN","SAMIUTS2",243,0)
 n SAMIUARGS,root,sbexist,sbexistd,SAMIUPOO,SAMIURTN
"RTN","SAMIUTS2",244,0)
 s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTS2",245,0)
 s studyid="XXX00001"
"RTN","SAMIUTS2",246,0)
 s form="sbform-2018-10-21"
"RTN","SAMIUTS2",247,0)
 S SAMIUARGS("studyid")=studyid
"RTN","SAMIUTS2",248,0)
 S SAMIUARGS("form")=form
"RTN","SAMIUTS2",249,0)
 s sbexist=$d(@root@("graph",studyid,form))
"RTN","SAMIUTS2",250,0)
 i 'sbexist d  q
"RTN","SAMIUTS2",251,0)
 . d FAIL^%ut("sbform-2018-10-21 not in vapals-patients Graphstore")
"RTN","SAMIUTS2",252,0)
 m SAMIUPOO=@root@("graph",studyid,form)
"RTN","SAMIUTS2",253,0)
 d DELFORM^SAMICASE(.SAMIURTN,.SAMIUARGS)
"RTN","SAMIUTS2",254,0)
 s sbexistd=$d(@root@("graph",studyid,form))
"RTN","SAMIUTS2",255,0)
 ; now put back original sbform
"RTN","SAMIUTS2",256,0)
 k @root@("graph",studyid,form)
"RTN","SAMIUTS2",257,0)
 m @root@("graph",studyid,form)=SAMIUPOO
"RTN","SAMIUTS2",258,0)
 d CHKEQ^%ut(sbexistd,0,"Testing deleting sbform FAILED!")
"RTN","SAMIUTS2",259,0)
 q
"RTN","SAMIUTS2",260,0)
 ;
"RTN","SAMIUTS2",261,0)
UTINITS ; - set all forms to 'incomplete'
"RTN","SAMIUTS2",262,0)
 ;initStatus
"RTN","SAMIUTS2",263,0)
 ; This sets ALL patient forms except their siform
"RTN","SAMIUTS2",264,0)
 ;   to incomplete.  We don't want to test these
"RTN","SAMIUTS2",265,0)
 ;   few lines once real patients are filed
"RTN","SAMIUTS2",266,0)
 q
"RTN","SAMIUTS2",267,0)
 ;
"RTN","SAMIUTS2",268,0)
UTCSRT ; @TEST - generates case review table
"RTN","SAMIUTS2",269,0)
 ;CASETBL(ary)
"RTN","SAMIUTS2",270,0)
 n SAMIUPOO,SAMIUARC
"RTN","SAMIUTS2",271,0)
 d CASETBL^SAMICAS3("SAMIUPOO")
"RTN","SAMIUTS2",272,0)
 d PLUTARR^SAMIUTST(.SAMIUARC,"casetbl-SAMICASE")
"RTN","SAMIUTS2",273,0)
 s utsuccess=1
"RTN","SAMIUTS2",274,0)
 n pnode,anode
"RTN","SAMIUTS2",275,0)
 s pnode=$na(SAMIUPOO),anode=$na(SAMIUARC)
"RTN","SAMIUTS2",276,0)
 f  s pnode=$q(@pnode),anode=$q(@anode) q:pnode=""  d
"RTN","SAMIUTS2",277,0)
 . I '(@pnode=@anode) s utsuccess=0
"RTN","SAMIUTS2",278,0)
 s:'(anode="") utsuccess=0
"RTN","SAMIUTS2",279,0)
 d CHKEQ^%ut(utsuccess,1,"Testing generate case review  FAILED!")
"RTN","SAMIUTS2",280,0)
 q
"RTN","SAMIUTS2",281,0)
 ;
"RTN","SAMIUTS2",282,0)
 ;
"RTN","SAMIUTS2",283,0)
UTNFPST ; @TEST - post new form selection (post service)
"RTN","SAMIUTS2",284,0)
 ;WSNFPOST(SAMIUARGS,BODY,RESULT)
"RTN","SAMIUTS2",285,0)
 ; This call adds new forms of each type so must
"RTN","SAMIUTS2",286,0)
 ;   be run after the above tests that generate
"RTN","SAMIUTS2",287,0)
 ;   one of each type separately
"RTN","SAMIUTS2",288,0)
 n SAMIUBODY,SAMIUARGS,SAMIURSLT,root,newform
"RTN","SAMIUTS2",289,0)
 s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTS2",290,0)
 s SAMIUBODY(1)=""
"RTN","SAMIUTS2",291,0)
 s SAMIUARGS("studyid")="XXX00001"
"RTN","SAMIUTS2",292,0)
 ;
"RTN","SAMIUTS2",293,0)
 ; now call for form="ceform","sbform","fuform","bxform","ptform"
"RTN","SAMIUTS2",294,0)
 ;   "itform"
"RTN","SAMIUTS2",295,0)
 ;
"RTN","SAMIUTS2",296,0)
 s SAMIUARGS("form")="ceform"
"RTN","SAMIUTS2",297,0)
 s newform=$O(@root@("graph","XXX00001","ceforms"),-1)
"RTN","SAMIUTS2",298,0)
 d WSNFPOST^SAMICASE(.SAMIUARGS,.SAMIUBODY,.SAMIURSLT)
"RTN","SAMIUTS2",299,0)
 s newform=$O(@root@("graph","XXX00001",newform))
"RTN","SAMIUTS2",300,0)
 s utsuccess=(newform["ceform")
"RTN","SAMIUTS2",301,0)
 ; now kill the extra form just built
"RTN","SAMIUTS2",302,0)
 k @root@("graph","XXX00001",newform)
"RTN","SAMIUTS2",303,0)
 d CHKEQ^%ut(utsuccess,1,"Testing post ceform FAILED!")
"RTN","SAMIUTS2",304,0)
 ;
"RTN","SAMIUTS2",305,0)
 ;s SAMIUARGS("form")="sbform"
"RTN","SAMIUTS2",306,0)
 ;s newform=$O(@root@("graph","XXX00001","sbforms"),-1)
"RTN","SAMIUTS2",307,0)
 ;d WSNFPOST^SAMICASE(.SAMIUARGS,.SAMIUBODY,.SAMIURSLT)
"RTN","SAMIUTS2",308,0)
 ;s newform=$O(@root@("graph","XXX00001",newform))
"RTN","SAMIUTS2",309,0)
 ;s utsuccess=(newform["sbform")
"RTN","SAMIUTS2",310,0)
 ; now kill the extra form just built
"RTN","SAMIUTS2",311,0)
 ;k @root@("graph","XXX00001",newform)
"RTN","SAMIUTS2",312,0)
 ;d CHKEQ^%ut(utsuccess,1,"Testing post sbform FAILED!")
"RTN","SAMIUTS2",313,0)
 ;
"RTN","SAMIUTS2",314,0)
 s SAMIUARGS("form")="fuform"
"RTN","SAMIUTS2",315,0)
 s newform=$O(@root@("graph","XXX00001","fuforms"),-1)
"RTN","SAMIUTS2",316,0)
 d WSNFPOST^SAMICASE(.SAMIUARGS,.SAMIUBODY,.SAMIURSLT)
"RTN","SAMIUTS2",317,0)
 s newform=$O(@root@("graph","XXX00001",newform))
"RTN","SAMIUTS2",318,0)
 s utsuccess=(newform["fuform")
"RTN","SAMIUTS2",319,0)
 ; now kill the extra form just built
"RTN","SAMIUTS2",320,0)
 k @root@("graph","XXX00001",newform)
"RTN","SAMIUTS2",321,0)
 d CHKEQ^%ut(utsuccess,1,"Testing post fuform FAILED!")
"RTN","SAMIUTS2",322,0)
 ;
"RTN","SAMIUTS2",323,0)
 s SAMIUARGS("form")="bxform"
"RTN","SAMIUTS2",324,0)
 s newform=$O(@root@("graph","XXX00001","bxforms"),-1)
"RTN","SAMIUTS2",325,0)
 d WSNFPOST^SAMICASE(.SAMIUARGS,.SAMIUBODY,.SAMIURSLT)
"RTN","SAMIUTS2",326,0)
 s newform=$O(@root@("graph","XXX00001",newform))
"RTN","SAMIUTS2",327,0)
 s utsuccess=(newform["bxform")
"RTN","SAMIUTS2",328,0)
 ; now kill the extra form just built
"RTN","SAMIUTS2",329,0)
 k @root@("graph","XXX00001",newform)
"RTN","SAMIUTS2",330,0)
 d CHKEQ^%ut(utsuccess,1,"Testing post bxform FAILED!")
"RTN","SAMIUTS2",331,0)
 ;
"RTN","SAMIUTS2",332,0)
 s SAMIUARGS("form")="ptform"
"RTN","SAMIUTS2",333,0)
 s newform=$O(@root@("graph","XXX00001","ptforms"),-1)
"RTN","SAMIUTS2",334,0)
 d WSNFPOST^SAMICASE(.SAMIUARGS,.SAMIUBODY,.SAMIURSLT)
"RTN","SAMIUTS2",335,0)
 s newform=$O(@root@("graph","XXX00001",newform))
"RTN","SAMIUTS2",336,0)
 s utsuccess=(newform["ptform")
"RTN","SAMIUTS2",337,0)
 ; now kill the extra form just built
"RTN","SAMIUTS2",338,0)
 k @root@("graph","XXX00001",newform)
"RTN","SAMIUTS2",339,0)
 d CHKEQ^%ut(utsuccess,1,"Testing post ptform FAILED!")
"RTN","SAMIUTS2",340,0)
 ;
"RTN","SAMIUTS2",341,0)
 s SAMIUARGS("form")="itform"
"RTN","SAMIUTS2",342,0)
 s newform=$O(@root@("graph","XXX00001","itforms"),-1)
"RTN","SAMIUTS2",343,0)
 d WSNFPOST^SAMICASE(.SAMIUARGS,.SAMIUBODY,.SAMIURSLT)
"RTN","SAMIUTS2",344,0)
 s newform=$O(@root@("graph","XXX00001",newform))
"RTN","SAMIUTS2",345,0)
 s utsuccess=(newform["itform")
"RTN","SAMIUTS2",346,0)
 ; now kill the extra form just built
"RTN","SAMIUTS2",347,0)
 k @root@("graph","XXX00001",newform)
"RTN","SAMIUTS2",348,0)
 d CHKEQ^%ut(utsuccess,1,"Testing post itform FAILED!")
"RTN","SAMIUTS2",349,0)
 ;
"RTN","SAMIUTS2",350,0)
 q
"RTN","SAMIUTS2",351,0)
 ;
"RTN","SAMIUTS2",352,0)
 ; Builds the form found in 'form' by calling
"RTN","SAMIUTS2",353,0)
 ;   the entry point in SAMICASE named in 'label'
"RTN","SAMIUTS2",354,0)
 ; Enter
"RTN","SAMIUTS2",355,0)
 ;   form       = name of the form to build (e.g. "sbform")
"RTN","SAMIUTS2",356,0)
 ;   label      = the datekey to use to identify this
"RTN","SAMIUTS2",357,0)
 ;                generated form (e.g. "2018-10-21")
"RTN","SAMIUTS2",358,0)
 ;   utsuccess  = variable by reference
"RTN","SAMIUTS2",359,0)
 ; Returns
"RTN","SAMIUTS2",360,0)
 ;   utsuccess 0=fail, 1=success
"RTN","SAMIUTS2",361,0)
 ;
"RTN","SAMIUTS2",362,0)
CHKFORM(form,LABEL,utsuccess) ;
"RTN","SAMIUTS2",363,0)
 n sid s sid="XXX00001"
"RTN","SAMIUTS2",364,0)
 n rootvp s rootvp=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTS2",365,0)
 n datekey s datekey="2018-10-21"
"RTN","SAMIUTS2",366,0)
 n key set key=form_"-"_datekey
"RTN","SAMIUTS2",367,0)
 ; delete existing entry
"RTN","SAMIUTS2",368,0)
 k @rootvp@("graph",sid,key)
"RTN","SAMIUTS2",369,0)
 s SAMIUARGS("key")=key
"RTN","SAMIUTS2",370,0)
 s SAMIUARGS("studyid")=sid
"RTN","SAMIUTS2",371,0)
 s SAMIUARGS("form")="vapals:"_form
"RTN","SAMIUTS2",372,0)
 n rtn s rtn=LABEL_"^SAMICAS3(sid,key)" d @rtn
"RTN","SAMIUTS2",373,0)
 ; i.e. @rootvp@("graph","XXX00001",form_"-2018-10-21"
"RTN","SAMIUTS2",374,0)
 ;
"RTN","SAMIUTS2",375,0)
 new temp m temp=@rootvp@("graph",sid,key)
"RTN","SAMIUTS2",376,0)
 ;
"RTN","SAMIUTS2",377,0)
 ; fail if nodes not set in vapals-patients Graphstore
"RTN","SAMIUTS2",378,0)
 i '$d(@rootvp@("graph",sid,key)) d  q
"RTN","SAMIUTS2",379,0)
 . s utsuccess=0
"RTN","SAMIUTS2",380,0)
 . d FAIL^%ut(form_" not set in vapals-patients Graphstore")
"RTN","SAMIUTS2",381,0)
 ;
"RTN","SAMIUTS2",382,0)
 ; Check that the vapals-patients node created is correct
"RTN","SAMIUTS2",383,0)
 ;
"RTN","SAMIUTS2",384,0)
 d PLUTARR^SAMIUTST(.SAMIUPOO,LABEL)
"RTN","SAMIUTS2",385,0)
 ; correct age in saved array
"RTN","SAMIUTS2",386,0)
 n ss s ss=""
"RTN","SAMIUTS2",387,0)
 f  s ss=$O(SAMIUPOO(ss)) q:ss=""  d
"RTN","SAMIUTS2",388,0)
 . i ss="sidob" do
"RTN","SAMIUTS2",389,0)
 .. n X,Y s X=SAMIUPOO("sidob") do ^%DT s SAMIUPOO("age")=$$age^%th(Y)
"RTN","SAMIUTS2",390,0)
 ;
"RTN","SAMIUTS2",391,0)
 s utsuccess=1
"RTN","SAMIUTS2",392,0)
 s ss=""
"RTN","SAMIUTS2",393,0)
 f  s ss=$O(SAMIUPOO(ss)) q:ss=""  d  q:'utsuccess
"RTN","SAMIUTS2",394,0)
 . i '$d(temp(ss)) s utsuccess=0
"RTN","SAMIUTS2",395,0)
 . i '($g(SAMIUPOO(ss))=$g(temp(ss))) s utsuccess=0
"RTN","SAMIUTS2",396,0)
 q
"RTN","SAMIUTS2",397,0)
EOR ;End of routine SAMIUTS2
"RTN","SAMIUTST")
0^85^B194231547
"RTN","SAMIUTST",1,0)
SAMIUTST ;ven/lgc - Unit Test Utilities ;Jan 10, 2020@09:52
"RTN","SAMIUTST",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTST",3,0)
 ;
"RTN","SAMIUTST",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTST",5,0)
 ;
"RTN","SAMIUTST",6,0)
 ; Routine to push and pull information used during unit testing
"RTN","SAMIUTST",7,0)
 ;   of va-pals routines
"RTN","SAMIUTST",8,0)
 ;
"RTN","SAMIUTST",9,0)
 ; CHANGE 2019-06-3 ven/lgc comment out running BLDRTNS in UTCHKSM
"RTN","SAMIUTST",10,0)
 ;      now that routine edits have settled down
"RTN","SAMIUTST",11,0)
 ;   
"RTN","SAMIUTST",12,0)
 ;
"RTN","SAMIUTST",13,0)
START i $t(^%ut)="" W !,"*** UNIT TEST NOT INSTALLEd ***" Q
"RTN","SAMIUTST",14,0)
 d EN^%ut($t(+0),2)
"RTN","SAMIUTST",15,0)
 q
"RTN","SAMIUTST",16,0)
 ;
"RTN","SAMIUTST",17,0)
 q  ; No entry from top
"RTN","SAMIUTST",18,0)
 ;
"RTN","SAMIUTST",19,0)
 ; @section 0 primary development
"RTN","SAMIUTST",20,0)
 ;
"RTN","SAMIUTST",21,0)
 ; @routine-credits
"RTN","SAMIUTST",22,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUTST",23,0)
 ;  larry@fiscientific.com
"RTN","SAMIUTST",24,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUTST",25,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUTST",26,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUTST",27,0)
 ; @license: Apache 2.0
"RTN","SAMIUTST",28,0)
 ;  https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIUTST",29,0)
 ;
"RTN","SAMIUTST",30,0)
 ; @last-updated: 11/1/18 1:39pm
"RTN","SAMIUTST",31,0)
 ; @application: SAMI
"RTN","SAMIUTST",32,0)
 ; @version: 18.0
"RTN","SAMIUTST",33,0)
 ; @patch-list: none yet
"RTN","SAMIUTST",34,0)
 ;
"RTN","SAMIUTST",35,0)
 ; @to-do
"RTN","SAMIUTST",36,0)
 ;
"RTN","SAMIUTST",37,0)
 ; @section 1 code
"RTN","SAMIUTST",38,0)
 ;
"RTN","SAMIUTST",39,0)
 ; 
"RTN","SAMIUTST",40,0)
 ; Enter
"RTN","SAMIUTST",41,0)
 ;    arr   =  name of the array of unit test data to save
"RTN","SAMIUTST",42,0)
 ;             e.g. "poo" for poo(1)=xxx,poo(2)=yyy
"RTN","SAMIUTST",43,0)
 ;                  "^TMP("yottaForm",20523)"
"RTN","SAMIUTST",44,0)
 ;    title =  title of the unit test
"RTN","SAMIUTST",45,0)
 ;             e.g. PATLIST-SAMIHOM3
"RTN","SAMIUTST",46,0)
 ;    NOTE: deletes any earlier entry under this title, thus,
"RTN","SAMIUTST",47,0)
 ;          title must be unique
"RTN","SAMIUTST",48,0)
 ; Return
"RTN","SAMIUTST",49,0)
 ;    loads "vapals unit tests" Graphstore under the
"RTN","SAMIUTST",50,0)
 ;       title entry with the data from the array
"RTN","SAMIUTST",51,0)
SVUTARR(arr,title) ;
"RTN","SAMIUTST",52,0)
 q:'$d(arr)
"RTN","SAMIUTST",53,0)
 q:($g(title)="")
"RTN","SAMIUTST",54,0)
 n root s root=$$setroot^%wd("vapals unit tests")
"RTN","SAMIUTST",55,0)
 n gien s gien=$$GETGIEN(root,title)
"RTN","SAMIUTST",56,0)
 k @root@(gien)
"RTN","SAMIUTST",57,0)
 ; load data
"RTN","SAMIUTST",58,0)
 m @root@(gien)=arr
"RTN","SAMIUTST",59,0)
 q
"RTN","SAMIUTST",60,0)
 ;
"RTN","SAMIUTST",61,0)
 ;
"RTN","SAMIUTST",62,0)
 ; Enter
"RTN","SAMIUTST",63,0)
 ;     arr   = array by reference to fill with data from Graphstore
"RTN","SAMIUTST",64,0)
 ;     title = title of the unit test
"RTN","SAMIUTST",65,0)
 ; Return
"RTN","SAMIUTST",66,0)
 ;     arr   = data pulled from the title entry in "vapals unit tests"
"RTN","SAMIUTST",67,0)
 ;             Graphstore
"RTN","SAMIUTST",68,0)
PLUTARR(arr,title) ;
"RTN","SAMIUTST",69,0)
 K arr
"RTN","SAMIUTST",70,0)
 q:($g(title)="")
"RTN","SAMIUTST",71,0)
 n root s root=$$setroot^%wd("vapals unit tests")
"RTN","SAMIUTST",72,0)
 n gien s gien=$$GETGIEN(root,title)
"RTN","SAMIUTST",73,0)
 ; pull data
"RTN","SAMIUTST",74,0)
 m arr=@root@(gien)
"RTN","SAMIUTST",75,0)
 ; Now fix AGE using DOB when retrieving certain HTML segements
"RTN","SAMIUTST",76,0)
 n node s node=$na(arr)
"RTN","SAMIUTST",77,0)
 for  set node=$Q(@node) q:node=""  do
"RTN","SAMIUTST",78,0)
 . if node["DOB",node["AGE" do
"RTN","SAMIUTST",79,0)
 .. set @node=$$FIXAGE^SAMIUTST(@node)
"RTN","SAMIUTST",80,0)
 q
"RTN","SAMIUTST",81,0)
 ;
"RTN","SAMIUTST",82,0)
 ;Enter
"RTN","SAMIUTST",83,0)
 ;   dfn   = dfn of patient to use as test patient
"RTN","SAMIUTST",84,0)
 ;   title = title of entry in "vapals unit tests"
"RTN","SAMIUTST",85,0)
 ;Return
"RTN","SAMIUTST",86,0)
 ;   pushes a copy of the patient entry in the
"RTN","SAMIUTST",87,0)
 ;     "patient-lookup" Graphstore into the
"RTN","SAMIUTST",88,0)
 ;     "vapals unit tests" Graphstore
"RTN","SAMIUTST",89,0)
SVTSTPT(dfn,title) ; Push a copy of test patient into vapals unit tests
"RTN","SAMIUTST",90,0)
 q:($G(title)="")
"RTN","SAMIUTST",91,0)
 q:'$G(dfn)
"RTN","SAMIUTST",92,0)
 n rootut s rootut=$$setroot^%wd("vapals unit tests")
"RTN","SAMIUTST",93,0)
 n gienut S gienut=$$GETGIEN(rootut,title)
"RTN","SAMIUTST",94,0)
 k @rootut@(gienut)
"RTN","SAMIUTST",95,0)
 s @rootut@(gienut,"title")=title
"RTN","SAMIUTST",96,0)
 ; load data
"RTN","SAMIUTST",97,0)
 n rootpl s rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIUTST",98,0)
 n gienpl s gienpl=$O(@rootpl@("dfn",dfn,0))
"RTN","SAMIUTST",99,0)
 m @rootut@(gienut)=@rootpl@(gienpl)
"RTN","SAMIUTST",100,0)
 q
"RTN","SAMIUTST",101,0)
 ;
"RTN","SAMIUTST",102,0)
 ;
"RTN","SAMIUTST",103,0)
 ;Enter
"RTN","SAMIUTST",104,0)
 ;   root   = root of "vapals unit tests" Graphstore
"RTN","SAMIUTST",105,0)
 ;   title  = title of unit test entry
"RTN","SAMIUTST",106,0)
 ;Return
"RTN","SAMIUTST",107,0)
 ;   gien of title in "vapals unit tests"
"RTN","SAMIUTST",108,0)
 ;   NOTE: if this title didn't exist, it is generated
"RTN","SAMIUTST",109,0)
GETGIEN(root,title) ;
"RTN","SAMIUTST",110,0)
 n gien s gien=$o(@root@("B",title,0))
"RTN","SAMIUTST",111,0)
 q:gien gien
"RTN","SAMIUTST",112,0)
 s gien=$o(@root@("A"),-1)+1
"RTN","SAMIUTST",113,0)
 s @root@(gien,"title")=title
"RTN","SAMIUTST",114,0)
 s @root@("B",title,gien)=""
"RTN","SAMIUTST",115,0)
 q gien
"RTN","SAMIUTST",116,0)
 ;
"RTN","SAMIUTST",117,0)
 ;
"RTN","SAMIUTST",118,0)
 ; Build and save an array of all routines used
"RTN","SAMIUTST",119,0)
 ;  by VAPALS.  Then generate and save an array
"RTN","SAMIUTST",120,0)
 ;  of these routines and their present checksums
"RTN","SAMIUTST",121,0)
 ;  as determined by CHECK1
"RTN","SAMIUTST",122,0)
 ;
"RTN","SAMIUTST",123,0)
BLDRTNS ;
"RTN","SAMIUTST",124,0)
 n temp,poo,arc,cnt,str
"RTN","SAMIUTST",125,0)
 s cnt=0
"RTN","SAMIUTST",126,0)
 f  s cnt=cnt+1 s str=$p($t(RTNS+cnt),";;",2) q:str=""  d
"RTN","SAMIUTST",127,0)
 . S temp(cnt)=str
"RTN","SAMIUTST",128,0)
 d SVUTARR(.temp,"vapals routines")
"RTN","SAMIUTST",129,0)
 d PLUTARR(.poo,"vapals routines")
"RTN","SAMIUTST",130,0)
 s cnt=0
"RTN","SAMIUTST",131,0)
 f  s cnt=$o(poo(cnt)) q:'cnt  d
"RTN","SAMIUTST",132,0)
 . n X,Y S X=poo(cnt) X ^%ZOSF("RSUM1")
"RTN","SAMIUTST",133,0)
 . s arc(poo(cnt))=Y
"RTN","SAMIUTST",134,0)
 s cnt="" f  s cnt=$o(arc(cnt)) q:(cnt="")  w !,cnt," = ",arc(cnt)
"RTN","SAMIUTST",135,0)
 d SVUTARR(.arc,"vapals routines checksums")
"RTN","SAMIUTST",136,0)
 q
"RTN","SAMIUTST",137,0)
 ;
"RTN","SAMIUTST",138,0)
 ;@ppi
"RTN","SAMIUTST",139,0)
FIXAGE(SAMISTR) ;
"RTN","SAMIUTST",140,0)
 ;@input
"RTN","SAMIUTST",141,0)
 ;  SAMISTR = line of text
"RTN","SAMIUTST",142,0)
 ;@output
"RTN","SAMIUTST",143,0)
 ;  corrected line of text
"RTN","SAMIUTST",144,0)
 ;
"RTN","SAMIUTST",145,0)
 ; When checking that generated HTML matches that expected
"RTN","SAMIUTST",146,0)
 ;   it is necessary to correct the AGE of the patient 
"RTN","SAMIUTST",147,0)
 ;   in our saved array in case they have passed a birthday
"RTN","SAMIUTST",148,0)
 ;
"RTN","SAMIUTST",149,0)
 set SAMISTR=$get(SAMISTR)
"RTN","SAMIUTST",150,0)
 new X,Y,dob,dobfm,age,strg
"RTN","SAMIUTST",151,0)
 quit:'(SAMISTR["DOB: ") SAMISTR
"RTN","SAMIUTST",152,0)
 quit:'(SAMISTR["AGE: ") SAMISTR
"RTN","SAMIUTST",153,0)
 set dob=$piece($piece(SAMISTR,"DOB: ",2)," ")
"RTN","SAMIUTST",154,0)
 set X=dob do ^%DT set dobfm=Y
"RTN","SAMIUTST",155,0)
 quit:(dobfm<1000000)!(dobfm>9991231) SAMISTR
"RTN","SAMIUTST",156,0)
 set age=$$age^%th(Y)
"RTN","SAMIUTST",157,0)
 quit:(Y=-1) SAMISTR
"RTN","SAMIUTST",158,0)
 set strg=$p(SAMISTR,"AGE: ")_"AGE: "_age_" "
"RTN","SAMIUTST",159,0)
 set strg=strg_$piece($piece(SAMISTR,"AGE:",2)," ",3,999)
"RTN","SAMIUTST",160,0)
 quit strg
"RTN","SAMIUTST",161,0)
 ;
"RTN","SAMIUTST",162,0)
 ;
"RTN","SAMIUTST",163,0)
 ;@ppi
"RTN","SAMIUTST",164,0)
SVAPT1 ;Save all VA dfn 1 patient-lookup and vapals-patients data
"RTN","SAMIUTST",165,0)
 ;@input
"RTN","SAMIUTST",166,0)
 ;  none
"RTN","SAMIUTST",167,0)
 ;@output
"RTN","SAMIUTST",168,0)
 ;  files - all dfn 1 patient data in patient-lookup and
"RTN","SAMIUTST",169,0)
 ;          vapals-patients - IF this information is different
"RTN","SAMIUTST",170,0)
 ;          than the stored test patient dfn 1 - into
"RTN","SAMIUTST",171,0)
 ;          SitesPLpatient1Data and SitesVPpatient1Data
"RTN","SAMIUTST",172,0)
 ;  NOTE: This simply saves the information on the VA's
"RTN","SAMIUTST",173,0)
 ;        dfn 1 patient.  We do not change any data
"RTN","SAMIUTST",174,0)
 ;        in the graphs, nor do we update any cross-references
"RTN","SAMIUTST",175,0)
 ;
"RTN","SAMIUTST",176,0)
 ;Find dfn 1 patient in patient-lookup
"RTN","SAMIUTST",177,0)
 ;
"RTN","SAMIUTST",178,0)
 new plgien,vpgien,rootpl,rootvp,plpoo,vppoo,sid
"RTN","SAMIUTST",179,0)
 set rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIUTST",180,0)
 set plgien=$order(@rootpl@("dfn",1,0)) quit:'(plgien>0) 
"RTN","SAMIUTST",181,0)
 ;if dfn 1 is our test patient then bail out
"RTN","SAMIUTST",182,0)
 if $data(@rootpl@("icn","50001000V910386",plgien))!($data(@rootpl@("icn","50001000",plgien))) quit
"RTN","SAMIUTST",183,0)
 merge plpoo=@rootpl@(plgien)
"RTN","SAMIUTST",184,0)
 do SVUTARR^SAMIUTST(.plpoo,"SitesPLpatient1Data")
"RTN","SAMIUTST",185,0)
 ;
"RTN","SAMIUTST",186,0)
 ;Now find dfn 1 patient in vapals-patients
"RTN","SAMIUTST",187,0)
 ;
"RTN","SAMIUTST",188,0)
 set rootvp=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTST",189,0)
 set sid=$get(@rootvp@(1,"sisid"))
"RTN","SAMIUTST",190,0)
 set vppoo(1,"dfn")=0
"RTN","SAMIUTST",191,0)
 ; If this isn't our Test patient SID save
"RTN","SAMIUTST",192,0)
 ;   the dfn 1 entry in vapals-patients in array  
"RTN","SAMIUTST",193,0)
 if '(sid="XXX00001") do
"RTN","SAMIUTST",194,0)
 . merge vppoo(1)=@rootvp@(1)
"RTN","SAMIUTST",195,0)
 .; Now if there is an 
"RTN","SAMIUTST",196,0)
 . if '(sid=""),$data(@rootvp@("graph",sid)) do
"RTN","SAMIUTST",197,0)
 .. merge vppoo(1,"graph")=@rootvp@("graph",sid)
"RTN","SAMIUTST",198,0)
 do SVUTARR^SAMIUTST(.vppoo,"SitesVPpatient1Data") 
"RTN","SAMIUTST",199,0)
 ;
"RTN","SAMIUTST",200,0)
 quit
"RTN","SAMIUTST",201,0)
 ;
"RTN","SAMIUTST",202,0)
 ;          
"RTN","SAMIUTST",203,0)
 ;@ppi
"RTN","SAMIUTST",204,0)
LVAPT1 ;Load all patient-lookup and vapals-patients data on VA dfn 1 
"RTN","SAMIUTST",205,0)
 ;@input
"RTN","SAMIUTST",206,0)
 ;  none
"RTN","SAMIUTST",207,0)
 ;@output
"RTN","SAMIUTST",208,0)
 ;  loads all data from SitesPLpatient1Data and SitesVPpatient1Data
"RTN","SAMIUTST",209,0)
 ;    back into patient-lookup and vapals-patients graphs
"RTN","SAMIUTST",210,0)
 ;  AND kills and sets necessary cross-references
"RTN","SAMIUTST",211,0)
 ;    rootpl (dfn,icn,last5,name,saminame,sinamef,sinamel,ssn)
"RTN","SAMIUTST",212,0)
 ;    rootvp (dfn,graph,sid)
"RTN","SAMIUTST",213,0)
 ;  NOTE: Any existing dfn 1 patient information, including
"RTN","SAMIUTST",214,0)
 ;        cross-references are killed and replaced with
"RTN","SAMIUTST",215,0)
 ;        the VA's dfn 1 patient information
"RTN","SAMIUTST",216,0)
 ;
"RTN","SAMIUTST",217,0)
 new plgien,vpgien,rootpl,rootvp,plpoo,vppoo,sid
"RTN","SAMIUTST",218,0)
 ; Pull previously saved VA dfn 1 patient information
"RTN","SAMIUTST",219,0)
 do PLUTARR^SAMIUTST(.plpoo,"SitesPLpatient1Data")
"RTN","SAMIUTST",220,0)
 do PLUTARR^SAMIUTST(.vppoo,"SitesVPpatient1Data")
"RTN","SAMIUTST",221,0)
 ;
"RTN","SAMIUTST",222,0)
 set rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIUTST",223,0)
 set rootvp=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTST",224,0)
 set plgien=$order(@rootpl@("dfn",1,0)) quit:'(plgien>0) 
"RTN","SAMIUTST",225,0)
 ;
"RTN","SAMIUTST",226,0)
 ; kill existing dfn 1 information in patient-lookup
"RTN","SAMIUTST",227,0)
 ;   then merge what had been saved in "SitesPLpatient1Data"
"RTN","SAMIUTST",228,0)
 kill @rootpl@(plgien)
"RTN","SAMIUTST",229,0)
 merge @rootpl@(plgien)=plpoo
"RTN","SAMIUTST",230,0)
 ;
"RTN","SAMIUTST",231,0)
 ; kill existing data in vapals-patients then merge
"RTN","SAMIUTST",232,0)
 ;   what had been saved in "SitesVPpatient1Data"
"RTN","SAMIUTST",233,0)
 set sid=$get(vppoo(1,"sisid"))
"RTN","SAMIUTST",234,0)
 kill:'(sid="") @rootvp@("graph",sid)
"RTN","SAMIUTST",235,0)
 merge:'(sid="") @rootvp@("graph",sid)=vppoo(1,"graph")
"RTN","SAMIUTST",236,0)
 ;
"RTN","SAMIUTST",237,0)
 ; Kill all information in vapals-patients on dfn 1 patient
"RTN","SAMIUTST",238,0)
 ;
"RTN","SAMIUTST",239,0)
 kill @rootvp@(1)
"RTN","SAMIUTST",240,0)
 ;
"RTN","SAMIUTST",241,0)
 ; Now delete any form information from our array
"RTN","SAMIUTST",242,0)
 ;   leaving only the dfn 1 patient information
"RTN","SAMIUTST",243,0)
 kill vppoo(1,"graph")
"RTN","SAMIUTST",244,0)
 merge @rootvp@(1)=vppoo(1)
"RTN","SAMIUTST",245,0)
 ; 
"RTN","SAMIUTST",246,0)
 ; kill all pre-existing cross references in case
"RTN","SAMIUTST",247,0)
 D KDFN1XRF(rootpl,plgien)
"RTN","SAMIUTST",248,0)
 ;
"RTN","SAMIUTST",249,0)
 ; Now set all cross references
"RTN","SAMIUTST",250,0)
 D SDFN1XRF(.plpoo,.vppoo,plgien)
"RTN","SAMIUTST",251,0)
 ;
"RTN","SAMIUTST",252,0)
 if '($get(plpoo("sisid"))="") do
"RTN","SAMIUTST",253,0)
 . set @rootvp@("sid",vppoo(1,"sisid"),plgien)=""
"RTN","SAMIUTST",254,0)
 ;
"RTN","SAMIUTST",255,0)
 quit
"RTN","SAMIUTST",256,0)
 ;
"RTN","SAMIUTST",257,0)
 ;
"RTN","SAMIUTST",258,0)
 ;@ppi
"RTN","SAMIUTST",259,0)
LOADTPT ;Load Unit Test patient into patient-lookup and vapals-patients 
"RTN","SAMIUTST",260,0)
 ;@input
"RTN","SAMIUTST",261,0)
 ;  none
"RTN","SAMIUTST",262,0)
 ;@output
"RTN","SAMIUTST",263,0)
 ;  loads all data from TestPLpatient1Data and TestVPpatient1Data
"RTN","SAMIUTST",264,0)
 ;    into patient-lookup and vapals-patients graphs
"RTN","SAMIUTST",265,0)
 ;  AND sets necessary cross-references
"RTN","SAMIUTST",266,0)
 ;    rootpl (dfn,icn,last5,name,saminame,sinamef,sinamel,ssn)
"RTN","SAMIUTST",267,0)
 ;    rootvp (dfn,graph,sid)
"RTN","SAMIUTST",268,0)
 new plgien,vpgien,rootpl,rootvp,plpoo,vppoo,sid
"RTN","SAMIUTST",269,0)
 do PLUTARR^SAMIUTST(.plpoo,"TestPLpatient1Data")
"RTN","SAMIUTST",270,0)
 do PLUTARR^SAMIUTST(.vppoo,"TestVPpatient1Data")
"RTN","SAMIUTST",271,0)
 ;
"RTN","SAMIUTST",272,0)
 set rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIUTST",273,0)
 set rootvp=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTST",274,0)
 set plgien=$order(@rootpl@("dfn",1,0)) 
"RTN","SAMIUTST",275,0)
 ;
"RTN","SAMIUTST",276,0)
 ; if there is no patient dfn 1 entry, build one now
"RTN","SAMIUTST",277,0)
 if '$get(plgien) d
"RTN","SAMIUTST",278,0)
 . set plgien=$order(@rootpl@(" "),-1)+1
"RTN","SAMIUTST",279,0)
 ;
"RTN","SAMIUTST",280,0)
 ; Kill any existing dfn 1 cross references
"RTN","SAMIUTST",281,0)
 do KDFN1XRF^SAMIUTST(rootpl,plgien)
"RTN","SAMIUTST",282,0)
 ;
"RTN","SAMIUTST",283,0)
 ; Pull Test patient into "patient-lookup" graph
"RTN","SAMIUTST",284,0)
 merge @rootpl@(plgien)=plpoo
"RTN","SAMIUTST",285,0)
 ;
"RTN","SAMIUTST",286,0)
 ; Reset the cross references
"RTN","SAMIUTST",287,0)
 do SDFN1XRF^SAMIUTST(.plpoo,.vppoo,plgien) 
"RTN","SAMIUTST",288,0)
 ;
"RTN","SAMIUTST",289,0)
 ; kill existing dfn 1 data in "vapals-patients" graph
"RTN","SAMIUTST",290,0)
 s sid=$get(@rootvp@(1,"sisid"))
"RTN","SAMIUTST",291,0)
 if '(sid="") do
"RTN","SAMIUTST",292,0)
 . kill @rootvp@("graph",sid)
"RTN","SAMIUTST",293,0)
 . kill @rootvp@("sid",sid)
"RTN","SAMIUTST",294,0)
 ; Now kill the dfn 1 entry in vapals-patients
"RTN","SAMIUTST",295,0)
 kill @rootvp@(1)
"RTN","SAMIUTST",296,0)
 ;
"RTN","SAMIUTST",297,0)
 ; Kill any existing Test patient forms too as
"RTN","SAMIUTST",298,0)
 ;  there may have been changes since the last upload
"RTN","SAMIUTST",299,0)
 kill @rootvp@("graph","XXX00001")
"RTN","SAMIUTST",300,0)
 ;
"RTN","SAMIUTST",301,0)
 ; Build Test patient entry in "vapals-patients" graph
"RTN","SAMIUTST",302,0)
 merge @rootvp@("graph","XXX00001")=vppoo(1,"graph")
"RTN","SAMIUTST",303,0)
 ; kill the forms part of the Test patient array
"RTN","SAMIUTST",304,0)
 kill vppoo(1,"graph")
"RTN","SAMIUTST",305,0)
 merge @rootvp@(1)=vppoo(1)
"RTN","SAMIUTST",306,0)
 ; set necessary new cross-references
"RTN","SAMIUTST",307,0)
 set:'($get(vppoo(1,"sisid"))="") @rootvp@("sid",vppoo(1,"sisid"),1)=""
"RTN","SAMIUTST",308,0)
 ;
"RTN","SAMIUTST",309,0)
 quit
"RTN","SAMIUTST",310,0)
 ;
"RTN","SAMIUTST",311,0)
 ;
"RTN","SAMIUTST",312,0)
 ;@ppi
"RTN","SAMIUTST",313,0)
SDFN1XRF(plpoo,vppoo,plgien) ; Set DFN 1 patient cross-references
"RTN","SAMIUTST",314,0)
 ;input
"RTN","SAMIUTST",315,0)
 ;   plpoo   = array by reference with patient-lookup data
"RTN","SAMIUTST",316,0)
 ;   vppoo   = array by reference with vapals-patients data
"RTN","SAMIUTST",317,0)
 ;   plgien  = IEN into patient-lookup for dfn 1 patient
"RTN","SAMIUTST",318,0)
 ;output
"RTN","SAMIUTST",319,0)
 ;   sets various cross references in "patient-lookup" graph
"RTN","SAMIUTST",320,0)
 new rootpl,rootvp
"RTN","SAMIUTST",321,0)
 set rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIUTST",322,0)
 set rootvp=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTST",323,0)
 quit:'$data(plpoo) 
"RTN","SAMIUTST",324,0)
 quit:'$get(plgien)
"RTN","SAMIUTST",325,0)
 new xstr
"RTN","SAMIUTST",326,0)
 set xstr="dfn/icn/last5/saminame/sinamel/sinamef/ssn/"
"RTN","SAMIUTST",327,0)
 new ss set ss=""
"RTN","SAMIUTST",328,0)
 for  set ss=$order(plpoo(ss)) quit:(ss="")  do
"RTN","SAMIUTST",329,0)
 . quit:($get(plpoo(ss))="")
"RTN","SAMIUTST",330,0)
 . if xstr[ss do
"RTN","SAMIUTST",331,0)
 ..;
"RTN","SAMIUTST",332,0)
 .. if ss="saminame" do  quit
"RTN","SAMIUTST",333,0)
 ... set @rootpl@(ss,plpoo(ss),plgien)=""
"RTN","SAMIUTST",334,0)
 ... set @rootpl@("name",plpoo(ss),plgien)=""
"RTN","SAMIUTST",335,0)
 ... set @rootpl@("name",$$UP^XLFSTR(plpoo(ss)),plgien)=""
"RTN","SAMIUTST",336,0)
 ..;
"RTN","SAMIUTST",337,0)
 .. set @rootpl@(ss,plpoo(ss),plgien)=""
"RTN","SAMIUTST",338,0)
 quit
"RTN","SAMIUTST",339,0)
 ;
"RTN","SAMIUTST",340,0)
 ;
"RTN","SAMIUTST",341,0)
 ;@ppi
"RTN","SAMIUTST",342,0)
KDFN1XRF(rootpl,plgien) ; Kill dfn 1 cross references in patient-lookup
"RTN","SAMIUTST",343,0)
 quit:($get(rootpl)="")  quit:'$get(plgien)
"RTN","SAMIUTST",344,0)
 new node,snode,xref
"RTN","SAMIUTST",345,0)
 for xref="icn","last5","saminame","name","sinamef","sinamel","ssn" do
"RTN","SAMIUTST",346,0)
 . set node=$na(@rootpl@(xref)),snode=$p(node,")")
"RTN","SAMIUTST",347,0)
 . for  set node=$Q(@node) q:(node'[snode)  do
"RTN","SAMIUTST",348,0)
 .. if $QS(node,5)=plgien kill @node
"RTN","SAMIUTST",349,0)
 quit
"RTN","SAMIUTST",350,0)
 ;
"RTN","SAMIUTST",351,0)
 ;
"RTN","SAMIUTST",352,0)
 ;
"RTN","SAMIUTST",353,0)
UTFIXAGE ; @TEST - Test that age is corrected according to dob
"RTN","SAMIUTST",354,0)
 n poo,age
"RTN","SAMIUTST",355,0)
 s poo="444-67-8924 DOB: 7/8/1956 AGE: 23 GENDER: M"
"RTN","SAMIUTST",356,0)
 s poo=$$FIXAGE^SAMIUTST(poo)
"RTN","SAMIUTST",357,0)
 s age=$$age^%th(2560708)
"RTN","SAMIUTST",358,0)
 s utsuccess=poo[("AGE: "_age_" ")
"RTN","SAMIUTST",359,0)
 d CHKEQ^%ut(utsuccess,1,"Testing correct age in string FAILED!")
"RTN","SAMIUTST",360,0)
 quit
"RTN","SAMIUTST",361,0)
 ;
"RTN","SAMIUTST",362,0)
 ;
"RTN","SAMIUTST",363,0)
UTCHKSM ; @TEST - Test VAPALS routines checksums
"RTN","SAMIUTST",364,0)
 n poo,arc,temp,nodea,nodet,utsuccess
"RTN","SAMIUTST",365,0)
 d PLUTARR(.temp,"vapals routines checksums")
"RTN","SAMIUTST",366,0)
 d PLUTARR(.poo,"vapals routines")
"RTN","SAMIUTST",367,0)
 s cnt=0,utsuccess=1
"RTN","SAMIUTST",368,0)
 f  s cnt=$o(poo(cnt)) q:'cnt  d
"RTN","SAMIUTST",369,0)
 . n X,Y S X=poo(cnt) X ^%ZOSF("RSUM1")
"RTN","SAMIUTST",370,0)
 . S arc(poo(cnt))=Y
"RTN","SAMIUTST",371,0)
 s nodea=$NA(arc),nodet=$NA(temp)
"RTN","SAMIUTST",372,0)
 w !,!
"RTN","SAMIUTST",373,0)
 f  s nodea=$q(@nodea),nodet=$q(@nodet) q:nodea=""  d
"RTN","SAMIUTST",374,0)
 . i '($qs(nodea,1)=$qs(nodet,1)) s utsuccess=0
"RTN","SAMIUTST",375,0)
 . i '(@nodea=@nodet) s utsuccess=0
"RTN","SAMIUTST",376,0)
 . w !,$qs(nodea,1),"-",@nodea,"   ",$qs(nodet,1),"-",@nodet
"RTN","SAMIUTST",377,0)
 w !,!
"RTN","SAMIUTST",378,0)
 i 'nodet="" s utsuccess=0
"RTN","SAMIUTST",379,0)
 ;
"RTN","SAMIUTST",380,0)
 d CHKEQ^%ut(utsuccess,1,"Testing VAPALS routines checksum FAILED!")
"RTN","SAMIUTST",381,0)
 q
"RTN","SAMIUTST",382,0)
 ;
"RTN","SAMIUTST",383,0)
UTSTGS ; @TEST - Save array to vapals unit tests graphstore
"RTN","SAMIUTST",384,0)
 n poo,arc,root,gienut,title,nodep,nodea
"RTN","SAMIUTST",385,0)
 s poo("TEST1")="TESTING ONE"
"RTN","SAMIUTST",386,0)
 s poo("TEST2")="TESTING TWO"
"RTN","SAMIUTST",387,0)
 s title="TEMP UNIT TEST ARRAY"
"RTN","SAMIUTST",388,0)
 d SVUTARR(.poo,title)
"RTN","SAMIUTST",389,0)
 d PLUTARR(.arc,title)
"RTN","SAMIUTST",390,0)
 ; KILL THE TEMPORARY ENTRY
"RTN","SAMIUTST",391,0)
 n rootut s rootut=$$setroot^%wd("vapals unit tests")
"RTN","SAMIUTST",392,0)
 n gienut s gienut=$$GETGIEN(rootut,title)
"RTN","SAMIUTST",393,0)
 k @rootut@(gienut)
"RTN","SAMIUTST",394,0)
 k @rootut@("B",title)
"RTN","SAMIUTST",395,0)
 s utsuccess=1
"RTN","SAMIUTST",396,0)
 s nodea=$na(arc),nodep=$na(poo)
"RTN","SAMIUTST",397,0)
 f  s nodea=$q(@nodea),nodep=$q(@nodep) q:nodea=""  d
"RTN","SAMIUTST",398,0)
 . i '($qs(nodea,1)=$qs(nodep,1)) s utsuccess=0
"RTN","SAMIUTST",399,0)
 . i '(@nodea=@nodep) s utsuccess=0
"RTN","SAMIUTST",400,0)
 i 'nodep="" s utsuccess=0
"RTN","SAMIUTST",401,0)
 d CHKEQ^%ut(utsuccess,1,"Testing saving/pulling from vapals unit test graphstore FAILED!")
"RTN","SAMIUTST",402,0)
 q
"RTN","SAMIUTST",403,0)
 ;
"RTN","SAMIUTST",404,0)
UTSVTSTP ; @TEST - Push a copy of test patient into vapals unit tests
"RTN","SAMIUTST",405,0)
 n dfn s dfn=1 ; Unit test patient dfn
"RTN","SAMIUTST",406,0)
 n title s title="myunittest"
"RTN","SAMIUTST",407,0)
 ; kill entry if already existed
"RTN","SAMIUTST",408,0)
 n rootut s rootut=$$setroot^%wd("vapals unit tests")
"RTN","SAMIUTST",409,0)
 n gienut S gienut=$$GETGIEN(rootut,title)
"RTN","SAMIUTST",410,0)
 k @rootut@(gienut)
"RTN","SAMIUTST",411,0)
 ;
"RTN","SAMIUTST",412,0)
 d SVTSTPT(dfn,title)
"RTN","SAMIUTST",413,0)
 s utsuccess=(@rootut@(gienut,"dfn")=dfn)
"RTN","SAMIUTST",414,0)
 d CHKEQ^%ut(utsuccess,1,"Test placing test patient in unit test graphstore FAILED!")
"RTN","SAMIUTST",415,0)
 q
"RTN","SAMIUTST",416,0)
 ;
"RTN","SAMIUTST",417,0)
UTSVARR ; @TEST - Test push and pull of data to unit test graphstore works
"RTN","SAMIUTST",418,0)
 new SAMIUPOO,SAMIUARC
"RTN","SAMIUTST",419,0)
 set SAMIUPOO="TEST line 1"
"RTN","SAMIUTST",420,0)
 set SAMIUPOO="TEST line 2"
"RTN","SAMIUTST",421,0)
 set SAMIUPOO="TEST line 3"
"RTN","SAMIUTST",422,0)
 set SAMIUPOO="TEST line 4"
"RTN","SAMIUTST",423,0)
 do SVUTARR^SAMIUTST(.SAMIUPOO,"UTSVARR^SAMIUTST")
"RTN","SAMIUTST",424,0)
 do PLUTARR^SAMIUTST(.SAMIUARC,"UTSVARR^SAMIUTST")
"RTN","SAMIUTST",425,0)
 n nodep,nodea
"RTN","SAMIUTST",426,0)
 s utsuccess=1
"RTN","SAMIUTST",427,0)
 s nodea=$na(SAMIUARC),nodep=$na(SAMIUPOO)
"RTN","SAMIUTST",428,0)
 f  s nodea=$q(nodea),nodep=$q(nodep) q:nodea=""  d  q:'utsuccess
"RTN","SAMIUTST",429,0)
 . if '(nodea=nodep) s utsuccess=0
"RTN","SAMIUTST",430,0)
 . if '(@nodea=@nodep) s utsuccess=0
"RTN","SAMIUTST",431,0)
 do CHKEQ^%ut(utsuccess,1,"Testing push/pull to unit test graph FAILED!")
"RTN","SAMIUTST",432,0)
 q
"RTN","SAMIUTST",433,0)
 ;
"RTN","SAMIUTST",434,0)
 ;
"RTN","SAMIUTST",435,0)
RTNS ;
"RTN","SAMIUTST",436,0)
 ;;SAMIADMN
"RTN","SAMIUTST",437,0)
 ;;SAMICAS2
"RTN","SAMIUTST",438,0)
 ;;SAMICAS3
"RTN","SAMIUTST",439,0)
 ;;SAMICASE
"RTN","SAMIUTST",440,0)
 ;;SAMICLOG
"RTN","SAMIUTST",441,0)
 ;;SAMICTC1
"RTN","SAMIUTST",442,0)
 ;;SAMICTC2
"RTN","SAMIUTST",443,0)
 ;;SAMICTD2
"RTN","SAMIUTST",444,0)
 ;;SAMICTR
"RTN","SAMIUTST",445,0)
 ;;SAMICTR0
"RTN","SAMIUTST",446,0)
 ;;SAMICTR1
"RTN","SAMIUTST",447,0)
 ;;SAMICTR2
"RTN","SAMIUTST",448,0)
 ;;SAMICTR3
"RTN","SAMIUTST",449,0)
 ;;SAMICTR4
"RTN","SAMIUTST",450,0)
 ;;SAMICTR9
"RTN","SAMIUTST",451,0)
 ;;SAMICTRA
"RTN","SAMIUTST",452,0)
 ;;SAMICTR
"RTN","SAMIUTST",453,0)
 ;;SAMICTRX
"RTN","SAMIUTST",454,0)
 ;;SAMICUL
"RTN","SAMIUTST",455,0)
 ;;SAMIFORM
"RTN","SAMIUTST",456,0)
 ;;SAMIFLD
"RTN","SAMIUTST",457,0)
 ;;SAMIFWS
"RTN","SAMIUTST",458,0)
 ;;SAMIFDM
"RTN","SAMIUTST",459,0)
 ;;SAMIFUL
"RTN","SAMIUTST",460,0)
 ;;SAMIHOM3
"RTN","SAMIUTST",461,0)
 ;;SAMIHOM4
"RTN","SAMIUTST",462,0)
 ;;SAMIFF
"RTN","SAMIUTST",463,0)
 ;;SAMILOG
"RTN","SAMIUTST",464,0)
 ;;SAMIM2M
"RTN","SAMIUTST",465,0)
 ;;SAMINOT1
"RTN","SAMIUTST",466,0)
 ;;SAMINOTI
"RTN","SAMIUTST",467,0)
 ;;SAMIPTLK
"RTN","SAMIUTST",468,0)
 ;;SAMIRU
"RTN","SAMIUTST",469,0)
 ;;SAMISAV
"RTN","SAMIUTST",470,0)
 ;;SAMISRC2
"RTN","SAMIUTST",471,0)
 ;;SAMIUL
"RTN","SAMIUTST",472,0)
 ;;SAMIUR1
"RTN","SAMIUTST",473,0)
 ;;SAMIUR2
"RTN","SAMIUTST",474,0)
 ;;SAMIUR
"RTN","SAMIUTST",475,0)
 ;;SAMIVST1
"RTN","SAMIUTST",476,0)
 ;;SAMIVST2
"RTN","SAMIUTST",477,0)
 ;;SAMIVST3
"RTN","SAMIUTST",478,0)
 ;;SAMIVST4
"RTN","SAMIUTST",479,0)
 ;;SAMIVST5
"RTN","SAMIUTST",480,0)
 ;;SAMIVSTA
"RTN","SAMIUTST",481,0)
 ;;SAMIVUL
"RTN","SAMIUTST",482,0)
 ;;SAMIUTAD
"RTN","SAMIUTST",483,0)
 ;;SAMIUTC1
"RTN","SAMIUTST",484,0)
 ;;SAMIUTC2
"RTN","SAMIUTST",485,0)
 ;;SAMIUTCG
"RTN","SAMIUTST",486,0)
 ;;SAMIUTCR
"RTN","SAMIUTST",487,0)
 ;;SAMIUTD2
"RTN","SAMIUTST",488,0)
 ;;SAMIUTF
"RTN","SAMIUTST",489,0)
 ;;SAMIUTFF
"RTN","SAMIUTST",490,0)
 ;;SAMIUTH3
"RTN","SAMIUTST",491,0)
 ;;SAMIUTH4
"RTN","SAMIUTST",492,0)
 ;;SAMIUTLG
"RTN","SAMIUTST",493,0)
 ;;SAMIUTNI
"RTN","SAMIUTST",494,0)
 ;;SAMIUTN1
"RTN","SAMIUTST",495,0)
 ;;SAMIUTPT
"RTN","SAMIUTST",496,0)
 ;;SAMIUTR0
"RTN","SAMIUTST",497,0)
 ;;SAMIUTR1
"RTN","SAMIUTST",498,0)
 ;;SAMIUTR2
"RTN","SAMIUTST",499,0)
 ;;SAMIUTR3
"RTN","SAMIUTST",500,0)
 ;;SAMIUTR4
"RTN","SAMIUTST",501,0)
 ;;SAMIUTR9
"RTN","SAMIUTST",502,0)
 ;;SAMIUTRA
"RTN","SAMIUTST",503,0)
 ;;SAMIUTRU
"RTN","SAMIUTST",504,0)
 ;;SAMIUTRX
"RTN","SAMIUTST",505,0)
 ;;SAMIUTS2
"RTN","SAMIUTST",506,0)
 ;;SAMIUTST
"RTN","SAMIUTST",507,0)
 ;;SAMIUTSV
"RTN","SAMIUTST",508,0)
 ;;SAMIUTUR
"RTN","SAMIUTST",509,0)
 ;;SAMIUTVA
"RTN","SAMIUTST",510,0)
 ;;SAMIUTVB
"RTN","SAMIUTST",511,0)
 ;;SAMIUTVR
"RTN","SAMIUTST",512,0)
 ;;SAMIUTVS
"RTN","SAMIUTST",513,0)
 ;
"RTN","SAMIUTST",514,0)
 ;
"RTN","SAMIUTST",515,0)
EOR ; end of routine SAMIUTST
"RTN","SAMIUTSV")
0^86^B11203197
"RTN","SAMIUTSV",1,0)
SAMIUTSV ;ven/lgc - UNIT TEST for SAMISAV ;Oct 22, 2019@16:07
"RTN","SAMIUTSV",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTSV",3,0)
 ;
"RTN","SAMIUTSV",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTSV",5,0)
 ;
"RTN","SAMIUTSV",6,0)
 ; @section 0 primary development
"RTN","SAMIUTSV",7,0)
 ;
"RTN","SAMIUTSV",8,0)
 ; @routine-credits
"RTN","SAMIUTSV",9,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUTSV",10,0)
 ;  larry@fiscientific.com
"RTN","SAMIUTSV",11,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUTSV",12,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUTSV",13,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUTSV",14,0)
 ; @license: Apache 2.0
"RTN","SAMIUTSV",15,0)
 ;  https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIUTSV",16,0)
 ;
"RTN","SAMIUTSV",17,0)
 ; @application: SAMI
"RTN","SAMIUTSV",18,0)
 ; @version: 18.0
"RTN","SAMIUTSV",19,0)
 ; @patch-list: none yet
"RTN","SAMIUTSV",20,0)
 ;
"RTN","SAMIUTSV",21,0)
 ; @to-do
"RTN","SAMIUTSV",22,0)
 ;
"RTN","SAMIUTSV",23,0)
 ; @section 1 code
"RTN","SAMIUTSV",24,0)
 ;
"RTN","SAMIUTSV",25,0)
START i $t(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","SAMIUTSV",26,0)
 d EN^%ut($t(+0),2)
"RTN","SAMIUTSV",27,0)
 q
"RTN","SAMIUTSV",28,0)
 ;
"RTN","SAMIUTSV",29,0)
 ;
"RTN","SAMIUTSV",30,0)
STARTUP n utsuccess
"RTN","SAMIUTSV",31,0)
 D SVAPT1^SAMIUTST  ; Save VA's DFN 1 patient data
"RTN","SAMIUTSV",32,0)
 D LOADTPT^SAMIUTST  ; Load unit test patient data
"RTN","SAMIUTSV",33,0)
 q
"RTN","SAMIUTSV",34,0)
 ;
"RTN","SAMIUTSV",35,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUTSV",36,0)
 k utsuccess
"RTN","SAMIUTSV",37,0)
 D LVAPT1^SAMIUTST  ; Return VA's DPT 1 patient's data
"RTN","SAMIUTSV",38,0)
 q
"RTN","SAMIUTSV",39,0)
 ;
"RTN","SAMIUTSV",40,0)
 ;
"RTN","SAMIUTSV",41,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUTSV",42,0)
 D ^SAMISAV
"RTN","SAMIUTSV",43,0)
 d SUCCEED^%ut
"RTN","SAMIUTSV",44,0)
 q
"RTN","SAMIUTSV",45,0)
 ;
"RTN","SAMIUTSV",46,0)
UTSAVF ; @TEST - extrinsic which returns the form key to use
"RTN","SAMIUTSV",47,0)
 ;SAVFILTR^SAMISAV
"RTN","SAMIUTSV",48,0)
 ; First test.  Move ceform-2018-10-21 to ceform-yyyy-mm-dd
"RTN","SAMIUTSV",49,0)
 ;   and delete the old entry
"RTN","SAMIUTSV",50,0)
 n sid,form,SAMIUVARS,root,SAMIUPOO,SAMIUARC,useform,node
"RTN","SAMIUTSV",51,0)
 s sid="XXX00001"
"RTN","SAMIUTSV",52,0)
 s form="ceform-2018-10-21" ; form built by earlier unit test
"RTN","SAMIUTSV",53,0)
 s SAMIUVARS("sidc")="11/7/2018"
"RTN","SAMIUTSV",54,0)
 s SAMIUVARS("cedos")="10/29/2018"
"RTN","SAMIUTSV",55,0)
 s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTSV",56,0)
 ; save off ceform built by earlier unit test
"RTN","SAMIUTSV",57,0)
 m SAMIUPOO=@root@("graph","XXX00001","ceform-2018-10-21")
"RTN","SAMIUTSV",58,0)
 s useform=$$SAVFILTR^SAMISAV(.sid,.form,.SAMIUVARS)
"RTN","SAMIUTSV",59,0)
 s utsuccess=(useform="ceform-2018-10-29")
"RTN","SAMIUTSV",60,0)
 i '$d(@root@("graph","XXX00001",useform)) s utsuccess=0
"RTN","SAMIUTSV",61,0)
 ; kill the new form just generated
"RTN","SAMIUTSV",62,0)
 k @root@("graph","XXX00001",useform)
"RTN","SAMIUTSV",63,0)
 ; return the original form
"RTN","SAMIUTSV",64,0)
 m @root@("graph","XXX00001","ceform-2018-10-21")=SAMIUPOO
"RTN","SAMIUTSV",65,0)
 d CHKEQ^%ut(utsuccess,1,"extrinsic which returns the ceform key FAILED!")
"RTN","SAMIUTSV",66,0)
 ;
"RTN","SAMIUTSV",67,0)
 ;Now test for "siform"
"RTN","SAMIUTSV",68,0)
 ;Start by saving the present siform
"RTN","SAMIUTSV",69,0)
 s node=$na(@root@("graph","XXX00001","siform")),node=$q(@node)
"RTN","SAMIUTSV",70,0)
 s form=$qs(node,5)
"RTN","SAMIUTSV",71,0)
 k SAMIUPOO m SAMIUPOO=@root@("graph","XXX00001",form)
"RTN","SAMIUTSV",72,0)
 k @root@("graph","XXX00001",form)
"RTN","SAMIUTSV",73,0)
 ;Now pull in the siform saved earlier with an earlier date
"RTN","SAMIUTSV",74,0)
 d PLUTARR^SAMIUTST(.SAMIUARC,"UTSAVF")
"RTN","SAMIUTSV",75,0)
 m @root@("graph","XXX00001",form)=SAMIUARC
"RTN","SAMIUTSV",76,0)
 ;Now we can see about testing as the siform pulled in
"RTN","SAMIUTSV",77,0)
 ;  is from an earlier date
"RTN","SAMIUTSV",78,0)
 s sid="XXX00001"
"RTN","SAMIUTSV",79,0)
 s node=$na(@root@("graph","XXX00001","siform")),node=$q(@node)
"RTN","SAMIUTSV",80,0)
 s form=$qs(node,5)
"RTN","SAMIUTSV",81,0)
 s SAMIUVARS("sidc")=@root@("graph","XXX00001",form,"sidc")
"RTN","SAMIUTSV",82,0)
 ; run the api
"RTN","SAMIUTSV",83,0)
 s useform=$$SAVFILTR^SAMISAV(.sid,.form,.SAMIUVARS)
"RTN","SAMIUTSV",84,0)
 s utsuccess=(useform="siform-2018-11-07")
"RTN","SAMIUTSV",85,0)
 i '$d(@root@("graph","XXX00001",useform)) s utsuccess=0
"RTN","SAMIUTSV",86,0)
 ; kill the new form just generated
"RTN","SAMIUTSV",87,0)
 k @root@("graph","XXX00001",useform)
"RTN","SAMIUTSV",88,0)
 ; return the original form
"RTN","SAMIUTSV",89,0)
 m @root@("graph","XXX00001",form)=SAMIUPOO
"RTN","SAMIUTSV",90,0)
 d CHKEQ^%ut(utsuccess,1,"extrinsic which returns the siform key FAILED!")
"RTN","SAMIUTSV",91,0)
 q
"RTN","SAMIUTSV",92,0)
 ;
"RTN","SAMIUTSV",93,0)
 ;
"RTN","SAMIUTSV",94,0)
EOR ;End of routine SAMIUTSV
"RTN","SAMIUTUR")
0^87^B94545590
"RTN","SAMIUTUR",1,0)
SAMIUTUR ;ven/lgc - UNIT TEST for SAMIUR,SAMIUR1,SAMIUR2 ;Oct 29, 2019@15:36
"RTN","SAMIUTUR",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTUR",3,0)
 ;
"RTN","SAMIUTUR",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTUR",5,0)
 ;
"RTN","SAMIUTUR",6,0)
 ; @section 0 primary development
"RTN","SAMIUTUR",7,0)
 ;
"RTN","SAMIUTUR",8,0)
 ; @routine-credits
"RTN","SAMIUTUR",9,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUTUR",10,0)
 ;  larry@fiscientific.com
"RTN","SAMIUTUR",11,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUTUR",12,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUTUR",13,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUTUR",14,0)
 ; @license: Apache 2.0
"RTN","SAMIUTUR",15,0)
 ;  https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIUTUR",16,0)
 ;
"RTN","SAMIUTUR",17,0)
 ; @application: SAMI
"RTN","SAMIUTUR",18,0)
 ; @version: 18.0
"RTN","SAMIUTUR",19,0)
 ; @patch-list: none yet
"RTN","SAMIUTUR",20,0)
 ;
"RTN","SAMIUTUR",21,0)
 ; @to-do
"RTN","SAMIUTUR",22,0)
 ;
"RTN","SAMIUTUR",23,0)
 ; @section 1 code
"RTN","SAMIUTUR",24,0)
 ;
"RTN","SAMIUTUR",25,0)
START i $t(^%ut)="" w !,"*** UNIT TEST NOT INSTALLED ***" q
"RTN","SAMIUTUR",26,0)
 d EN^%ut($t(+0),2)
"RTN","SAMIUTUR",27,0)
 q
"RTN","SAMIUTUR",28,0)
 ;
"RTN","SAMIUTUR",29,0)
 ;
"RTN","SAMIUTUR",30,0)
STARTUP n utsuccess
"RTN","SAMIUTUR",31,0)
 D SVAPT1^SAMIUTST  ; Save VA's DFN 1 patient data
"RTN","SAMIUTUR",32,0)
 D LOADTPT^SAMIUTST  ; Load unit test patient data
"RTN","SAMIUTUR",33,0)
 ; Temporarily update sidc field in siform-2018-11-13
"RTN","SAMIUTUR",34,0)
 new root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTUR",35,0)
 s @root@("graph","XXX00001","siform-2018-11-13","sidc")=$P($$HTE^XLFDT($H,5),"@")
"RTN","SAMIUTUR",36,0)
 q
"RTN","SAMIUTUR",37,0)
 ;
"RTN","SAMIUTUR",38,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUTUR",39,0)
 k utsuccess
"RTN","SAMIUTUR",40,0)
 D LVAPT1^SAMIUTST  ; Return VA's DPT 1 patient's data
"RTN","SAMIUTUR",41,0)
 q
"RTN","SAMIUTUR",42,0)
 ;
"RTN","SAMIUTUR",43,0)
 ;
"RTN","SAMIUTUR",44,0)
UTQUIT ; @TEST - Quit at top of routine
"RTN","SAMIUTUR",45,0)
 D ^SAMIUR
"RTN","SAMIUTUR",46,0)
 d SUCCEED^%ut
"RTN","SAMIUTUR",47,0)
 D ^SAMIUR2
"RTN","SAMIUTUR",48,0)
 d SUCCEED^%ut
"RTN","SAMIUTUR",49,0)
 q
"RTN","SAMIUTUR",50,0)
 ;
"RTN","SAMIUTUR",51,0)
UTWSRPT ; @TEST - generate a report based on parameters in filter
"RTN","SAMIUTUR",52,0)
 ;wsReport(rtn,SAMIUFLTR)
"RTN","SAMIUTUR",53,0)
 n rpttstr
"RTN","SAMIUTUR",54,0)
 ;
"RTN","SAMIUTUR",55,0)
 n SAMIUFLTR,pats,SAMIUPOO,cnt,root
"RTN","SAMIUTUR",56,0)
 s SAMIUFLTR("samireporttype")="followup"
"RTN","SAMIUTUR",57,0)
 s rpttstr="<input name=""samireporttype"" type=""hidden"" value=""followup""/>"
"RTN","SAMIUTUR",58,0)
 s utsuccess=0
"RTN","SAMIUTUR",59,0)
 d WSREPORT^SAMIUR(.SAMIUPOO,.SAMIUFLTR)
"RTN","SAMIUTUR",60,0)
 s cnt=0 f  s cnt=$o(SAMIUPOO(cnt)) q:'cnt  i SAMIUPOO(cnt)[rpttstr s utsuccess=1
"RTN","SAMIUTUR",61,0)
 d CHKEQ^%ut(utsuccess,1,"Testing wsReport for followup FAILED!")
"RTN","SAMIUTUR",62,0)
 ;
"RTN","SAMIUTUR",63,0)
 k SAMIUFLTR,SAMIUPOO
"RTN","SAMIUTUR",64,0)
 s SAMIUFLTR("samireporttype")="activity"
"RTN","SAMIUTUR",65,0)
 s rpttstr="<input name=""samireporttype"" type=""hidden"" value=""activity""/>"
"RTN","SAMIUTUR",66,0)
 s utsuccess=0
"RTN","SAMIUTUR",67,0)
 d WSREPORT^SAMIUR(.SAMIUPOO,.SAMIUFLTR)
"RTN","SAMIUTUR",68,0)
 s cnt=0 f  s cnt=$o(SAMIUPOO(cnt)) q:'cnt  i SAMIUPOO(cnt)[rpttstr s utsuccess=1
"RTN","SAMIUTUR",69,0)
 d CHKEQ^%ut(utsuccess,1,"Testing wsReport for activity FAILED!")
"RTN","SAMIUTUR",70,0)
 ;
"RTN","SAMIUTUR",71,0)
 k SAMIUFLTR
"RTN","SAMIUTUR",72,0)
 s SAMIUFLTR("samireporttype")="enrollment"
"RTN","SAMIUTUR",73,0)
 s rpttstr="<input name=""samireporttype"" type=""hidden"" value=""enrollment""/>"
"RTN","SAMIUTUR",74,0)
 s utsuccess=0
"RTN","SAMIUTUR",75,0)
 d WSREPORT^SAMIUR(.SAMIUPOO,.SAMIUFLTR)
"RTN","SAMIUTUR",76,0)
 s cnt=0 f  s cnt=$o(SAMIUPOO(cnt)) q:'cnt  i SAMIUPOO(cnt)[rpttstr s utsuccess=1
"RTN","SAMIUTUR",77,0)
 d CHKEQ^%ut(utsuccess,1,"Testing wsReport for enrollment FAILED!")
"RTN","SAMIUTUR",78,0)
 ;
"RTN","SAMIUTUR",79,0)
 k SAMIUFLTR
"RTN","SAMIUTUR",80,0)
 s SAMIUFLTR("samireporttype")="missingct"
"RTN","SAMIUTUR",81,0)
 s rpttstr="<input name=""samireporttype"" type=""hidden"" value=""missingct""/>"
"RTN","SAMIUTUR",82,0)
 s utsuccess=0
"RTN","SAMIUTUR",83,0)
 d WSREPORT^SAMIUR(.SAMIUPOO,.SAMIUFLTR)
"RTN","SAMIUTUR",84,0)
 s cnt=0 f  s cnt=$o(SAMIUPOO(cnt)) q:'cnt  i SAMIUPOO(cnt)[rpttstr s utsuccess=1
"RTN","SAMIUTUR",85,0)
 d CHKEQ^%ut(utsuccess,1,"Testing wsReport for missingct FAILED!")
"RTN","SAMIUTUR",86,0)
 ;
"RTN","SAMIUTUR",87,0)
 k SAMIUFLTR
"RTN","SAMIUTUR",88,0)
 s SAMIUFLTR("samireporttype")="incomplete"
"RTN","SAMIUTUR",89,0)
 s rpttstr="<input name=""samireporttype"" type=""hidden"" value=""incomplete""/>"
"RTN","SAMIUTUR",90,0)
 s utsuccess=0
"RTN","SAMIUTUR",91,0)
 d WSREPORT^SAMIUR(.SAMIUPOO,.SAMIUFLTR)
"RTN","SAMIUTUR",92,0)
 s cnt=0 f  s cnt=$o(SAMIUPOO(cnt)) q:'cnt  i SAMIUPOO(cnt)[rpttstr s utsuccess=1
"RTN","SAMIUTUR",93,0)
 d CHKEQ^%ut(utsuccess,1,"Testing wsReport for incomplete FAILED!")
"RTN","SAMIUTUR",94,0)
 ;
"RTN","SAMIUTUR",95,0)
 q
"RTN","SAMIUTUR",96,0)
 ;
"RTN","SAMIUTUR",97,0)
UTSELCT ; @TEST - selects patient for the report
"RTN","SAMIUTUR",98,0)
 ;select(pats,type)
"RTN","SAMIUTUR",99,0)
 n SAMIUPATS,SAMITYPE,SAMIUDPHR,SAMIUPOO
"RTN","SAMIUTUR",100,0)
 n unplus30,unminus30,unowdate,udtphrase,root
"RTN","SAMIUTUR",101,0)
 s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTUR",102,0)
 ;
"RTN","SAMIUTUR",103,0)
 s unplus30=$P($$FMTE^XLFDT($$FMADD^XLFDT($$HTFM^XLFDT($H),31),5),"@")
"RTN","SAMIUTUR",104,0)
 s unminus30=$P($$FMTE^XLFDT($$FMADD^XLFDT($$HTFM^XLFDT($H),-31),5),"@")
"RTN","SAMIUTUR",105,0)
 s unowdate=$P($$FMTE^XLFDT($$HTFM^XLFDT($H),5),"@")
"RTN","SAMIUTUR",106,0)
 ;
"RTN","SAMIUTUR",107,0)
 s SAMITYPE="",SAMIUDPHR=""
"RTN","SAMIUTUR",108,0)
 s udtphrase=" as of "_unowdate
"RTN","SAMIUTUR",109,0)
 d SELECT^SAMIUR(.SAMIUPATS,SAMITYPE,.SAMIUDPHR)
"RTN","SAMIUTUR",110,0)
 s utsuccess=(SAMIUDPHR=udtphrase)
"RTN","SAMIUTUR",111,0)
 i utsuccess,$d(SAMIUPATS) d
"RTN","SAMIUTUR",112,0)
 . n node,cnt s node=$na(SAMIUPATS),cnt=0
"RTN","SAMIUTUR",113,0)
 . f  s node=$q(@node) q:node=""  d  q:(cnt=5)
"RTN","SAMIUTUR",114,0)
 .. s cnt=cnt+1
"RTN","SAMIUTUR",115,0)
 .. i cnt=1,'(@node="") s utsuccess=0 q
"RTN","SAMIUTUR",116,0)
 .. i cnt=2,'($qs(node,3)="cedos") s utsuccess=0 q
"RTN","SAMIUTUR",117,0)
 .. i cnt=3,'($qs(node,3)="ceform") s utsuccess=0 q
"RTN","SAMIUTUR",118,0)
 .. i cnt=4,'($qs(node,3)="cefud") s utsuccess=0 q
"RTN","SAMIUTUR",119,0)
 .. i cnt=5,'($qs(node,3)="edate") s utsuccess=0
"RTN","SAMIUTUR",120,0)
 d CHKEQ^%ut(utsuccess,1,"Testing type=null patient report FAILED!")
"RTN","SAMIUTUR",121,0)
 ;
"RTN","SAMIUTUR",122,0)
 k SAMIUPATS
"RTN","SAMIUTUR",123,0)
 s SAMITYPE="followup",SAMIUDPHR=""
"RTN","SAMIUTUR",124,0)
 s udtphrase=" before "_unplus30
"RTN","SAMIUTUR",125,0)
 d SELECT^SAMIUR(.SAMIUPATS,SAMITYPE,.SAMIUDPHR)
"RTN","SAMIUTUR",126,0)
 s utsuccess=(SAMIUDPHR=udtphrase)
"RTN","SAMIUTUR",127,0)
 i utsuccess,$d(SAMIUPATS) d
"RTN","SAMIUTUR",128,0)
 . n node,cnt s node=$na(SAMIUPATS),cnt=0
"RTN","SAMIUTUR",129,0)
 . f  s node=$q(@node) q:node=""  d  q:(cnt=6)
"RTN","SAMIUTUR",130,0)
 .. s cnt=cnt+1
"RTN","SAMIUTUR",131,0)
 .. i cnt=1,'(@node="") s utsuccess=0 q
"RTN","SAMIUTUR",132,0)
 .. i cnt=2,'($qs(node,3)="cedos") s utsuccess=0 q
"RTN","SAMIUTUR",133,0)
 .. i cnt=3,'($qs(node,3)="ceform") s utsuccess=0 q
"RTN","SAMIUTUR",134,0)
 .. i cnt=4,'($qs(node,3)="ceform-vals") s utsuccess=0 q
"RTN","SAMIUTUR",135,0)
 .. i cnt=5,'($qs(node,3)="cefud") s utsuccess=0 q
"RTN","SAMIUTUR",136,0)
 .. i cnt=6,'($qs(node,3)="edate") s utsuccess=0
"RTN","SAMIUTUR",137,0)
 d CHKEQ^%ut(utsuccess,1,"Testing followup patient report FAILED!")
"RTN","SAMIUTUR",138,0)
 ;
"RTN","SAMIUTUR",139,0)
 k SAMIUPATS
"RTN","SAMIUTUR",140,0)
 s SAMITYPE="activity",SAMIUDPHR=""
"RTN","SAMIUTUR",141,0)
 s udtphrase=" as of "_unowdate
"RTN","SAMIUTUR",142,0)
 d SELECT^SAMIUR(.SAMIUPATS,SAMITYPE,.SAMIUDPHR)
"RTN","SAMIUTUR",143,0)
 s utsuccess=(SAMIUDPHR=udtphrase)
"RTN","SAMIUTUR",144,0)
 i utsuccess,$d(SAMIUPATS) d
"RTN","SAMIUTUR",145,0)
 . n node,cnt s node=$na(SAMIUPATS),cnt=0
"RTN","SAMIUTUR",146,0)
 . f  s node=$q(@node) q:node=""  d  q:(cnt=5)
"RTN","SAMIUTUR",147,0)
 .. s cnt=cnt+1
"RTN","SAMIUTUR",148,0)
 .. i cnt=1,'(@node="") s utsuccess=0 q
"RTN","SAMIUTUR",149,0)
 .. i cnt=2,'($qs(node,3)="cedos") s utsuccess=0 q
"RTN","SAMIUTUR",150,0)
 .. i cnt=3,'($qs(node,3)="ceform") s utsuccess=0 q
"RTN","SAMIUTUR",151,0)
 .. i cnt=4,'($qs(node,3)="cefud") s utsuccess=0 q
"RTN","SAMIUTUR",152,0)
 .. i cnt=5,'($qs(node,3)="edate") s utsuccess=0
"RTN","SAMIUTUR",153,0)
 d CHKEQ^%ut(utsuccess,1,"Testing activity patient report FAILED!")
"RTN","SAMIUTUR",154,0)
 ;
"RTN","SAMIUTUR",155,0)
 k SAMIUPATS
"RTN","SAMIUTUR",156,0)
 s SAMITYPE="enrollment",SAMIUDPHR=""
"RTN","SAMIUTUR",157,0)
 s udtphrase=" as of "_unowdate
"RTN","SAMIUTUR",158,0)
 d SELECT^SAMIUR(.SAMIUPATS,SAMITYPE,.SAMIUDPHR)
"RTN","SAMIUTUR",159,0)
 s utsuccess=(SAMIUDPHR=udtphrase)
"RTN","SAMIUTUR",160,0)
 i utsuccess,$d(SAMIUPATS) d
"RTN","SAMIUTUR",161,0)
 . n node,cnt s node=$na(SAMIUPATS),cnt=0
"RTN","SAMIUTUR",162,0)
 . f  s node=$q(@node) q:node=""  d  q:(cnt=5)
"RTN","SAMIUTUR",163,0)
 .. s cnt=cnt+1
"RTN","SAMIUTUR",164,0)
 .. i cnt=1,'(@node="") s utsuccess=0 q
"RTN","SAMIUTUR",165,0)
 .. i cnt=2,'($qs(node,3)="cedos") s utsuccess=0 q
"RTN","SAMIUTUR",166,0)
 .. i cnt=3,'($qs(node,3)="ceform") s utsuccess=0 q
"RTN","SAMIUTUR",167,0)
 .. i cnt=4,'($qs(node,3)="cefud") s utsuccess=0 q
"RTN","SAMIUTUR",168,0)
 .. i cnt=5,'($qs(node,3)="edate") s utsuccess=0
"RTN","SAMIUTUR",169,0)
 d CHKEQ^%ut(utsuccess,1,"Testing enrollment patient report FAILED!")
"RTN","SAMIUTUR",170,0)
 ;
"RTN","SAMIUTUR",171,0)
 k SAMIUPATS
"RTN","SAMIUTUR",172,0)
 s SAMITYPE="missingct",SAMIUDPHR=""
"RTN","SAMIUTUR",173,0)
 s udtphrase=" as of "_unowdate
"RTN","SAMIUTUR",174,0)
 d SELECT^SAMIUR(.SAMIUPATS,SAMITYPE,.SAMIUDPHR)
"RTN","SAMIUTUR",175,0)
 s utsuccess=(SAMIUDPHR=udtphrase)
"RTN","SAMIUTUR",176,0)
 i utsuccess,$d(SAMIUPATS) d
"RTN","SAMIUTUR",177,0)
 . n node,cnt s node=$na(SAMIUPATS),cnt=0
"RTN","SAMIUTUR",178,0)
 . f  s node=$q(@node) q:node=""  d  q:(cnt=4)
"RTN","SAMIUTUR",179,0)
 .. s cnt=cnt+1
"RTN","SAMIUTUR",180,0)
 .. i cnt=1,'(@node="") s utsuccess=0 q
"RTN","SAMIUTUR",181,0)
 .. i cnt=2,'($qs(node,3)="ceform") s utsuccess=0 q
"RTN","SAMIUTUR",182,0)
 .. i cnt=3,'($qs(node,3)="cefud") s utsuccess=0 q
"RTN","SAMIUTUR",183,0)
 .. i cnt=4,'($qs(node,3)="edate") s utsuccess=0
"RTN","SAMIUTUR",184,0)
 d CHKEQ^%ut(utsuccess,1,"Testing missingct patient report FAILED!")
"RTN","SAMIUTUR",185,0)
 ;
"RTN","SAMIUTUR",186,0)
 k SAMIUPATS
"RTN","SAMIUTUR",187,0)
 s SAMITYPE="incomplete",SAMIUDPHR=""
"RTN","SAMIUTUR",188,0)
 s udtphrase=" as of "_unowdate
"RTN","SAMIUTUR",189,0)
 d SELECT^SAMIUR(.SAMIUPATS,SAMITYPE,.SAMIUDPHR)
"RTN","SAMIUTUR",190,0)
 s utsuccess=(SAMIUDPHR=udtphrase)
"RTN","SAMIUTUR",191,0)
 i utsuccess,$d(SAMIUPATS) d
"RTN","SAMIUTUR",192,0)
 . n node,cnt s node=$na(SAMIUPATS),cnt=0
"RTN","SAMIUTUR",193,0)
 . f  s node=$q(@node) q:node=""  d  q:(cnt=4)
"RTN","SAMIUTUR",194,0)
 .. s cnt=cnt+1
"RTN","SAMIUTUR",195,0)
 .. i cnt=1,'(@node="") s utsuccess=0 q
"RTN","SAMIUTUR",196,0)
 .. i cnt=2,'($qs(node,3)="ceform") s utsuccess=0 q
"RTN","SAMIUTUR",197,0)
 .. i cnt=3,'($qs(node,3)="cefud") s utsuccess=0 q
"RTN","SAMIUTUR",198,0)
 .. i cnt=4,'($qs(node,3)="edate") s utsuccess=0
"RTN","SAMIUTUR",199,0)
 d CHKEQ^%ut(utsuccess,1,"Testing incomplete patient report FAILED!")
"RTN","SAMIUTUR",200,0)
 ;
"RTN","SAMIUTUR",201,0)
 q
"RTN","SAMIUTUR",202,0)
 ;
"RTN","SAMIUTUR",203,0)
UTPNAME ; @TEST - extrinsic returns the PAGE NAME for the report
"RTN","SAMIUTUR",204,0)
 ;PNAME(type)
"RTN","SAMIUTUR",205,0)
 n str
"RTN","SAMIUTUR",206,0)
 s str=$$PNAME^SAMIUR("followup","-test text")
"RTN","SAMIUTUR",207,0)
 s utsuccess=(str="Followup -test text")
"RTN","SAMIUTUR",208,0)
 d CHKEQ^%ut(utsuccess,1,"Testing extrinsic returns followup PAGE NAME FAILED!")
"RTN","SAMIUTUR",209,0)
 ;
"RTN","SAMIUTUR",210,0)
 s str=$$PNAME^SAMIUR("activity","-test text")
"RTN","SAMIUTUR",211,0)
 s utsuccess=(str="Activity -test text")
"RTN","SAMIUTUR",212,0)
 d CHKEQ^%ut(utsuccess,1,"Testing extrinsic returns activity PAGE NAME FAILED!")
"RTN","SAMIUTUR",213,0)
 ;
"RTN","SAMIUTUR",214,0)
 s str=$$PNAME^SAMIUR("missingct","-test text")
"RTN","SAMIUTUR",215,0)
 s utsuccess=(str="Intake but no CT Evaluation-test text")
"RTN","SAMIUTUR",216,0)
 d CHKEQ^%ut(utsuccess,1,"Testing extrinsic returns missingct PAGE NAME FAILED!")
"RTN","SAMIUTUR",217,0)
 ;
"RTN","SAMIUTUR",218,0)
 s str=$$PNAME^SAMIUR("incomplete","-test text")
"RTN","SAMIUTUR",219,0)
 s utsuccess=(str="Incomplete Forms-test text")
"RTN","SAMIUTUR",220,0)
 d CHKEQ^%ut(utsuccess,1,"Testing extrinsic returns incomplete PAGE NAME FAILED!")
"RTN","SAMIUTUR",221,0)
 ;
"RTN","SAMIUTUR",222,0)
 s str=$$PNAME^SAMIUR("outreach","-test text")
"RTN","SAMIUTUR",223,0)
 s utsuccess=(str="Outreach-test text")
"RTN","SAMIUTUR",224,0)
 d CHKEQ^%ut(utsuccess,1,"Testing extrinsic returns outreach PAGE NAME FAILED!")
"RTN","SAMIUTUR",225,0)
 ;
"RTN","SAMIUTUR",226,0)
 s str=$$PNAME^SAMIUR("enrollment","-test text")
"RTN","SAMIUTUR",227,0)
 s utsuccess=(str="Enrollment-test text")
"RTN","SAMIUTUR",228,0)
 d CHKEQ^%ut(utsuccess,1,"Testing extrinsic returns enrollment PAGE NAME FAILED!")
"RTN","SAMIUTUR",229,0)
 ;
"RTN","SAMIUTUR",230,0)
 s str=$$PNAME^SAMIUR("XXX","-test text")
"RTN","SAMIUTUR",231,0)
 s utsuccess=(str="")
"RTN","SAMIUTUR",232,0)
 d CHKEQ^%ut(utsuccess,1,"Testing extrinsic returns XXX PAGE NAME FAILED!")
"RTN","SAMIUTUR",233,0)
 q
"RTN","SAMIUTUR",234,0)
 ;
"RTN","SAMIUTUR",235,0)
 ;
"RTN","SAMIUTUR",236,0)
EOR ;End of routine SAMIUTUR
"RTN","SAMIUTVA")
0^88^B147079360
"RTN","SAMIUTVA",1,0)
SAMIUTVA ;;ven/lgc - UNIT TEST for SAMIVSTA,SAMIVST1,SAMIVST2 ;Oct 22, 2019@16:12
"RTN","SAMIUTVA",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTVA",3,0)
 ;
"RTN","SAMIUTVA",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTVA",5,0)
 ;
"RTN","SAMIUTVA",6,0)
 ; VA-PALS will be using Sam Habiel's [KBANSCAU] broker
"RTN","SAMIUTVA",7,0)
 ;   to pull information from the VA server into the
"RTN","SAMIUTVA",8,0)
 ;   VA-PALS client and, to push TIU notes generated by
"RTN","SAMIUTVA",9,0)
 ;   VA-PALS forms onto the VA server.
"RTN","SAMIUTVA",10,0)
 ; Using this broker between VistA instances requires
"RTN","SAMIUTVA",11,0)
 ;   not only the IP and Port for the server be known,
"RTN","SAMIUTVA",12,0)
 ;   but also, that the Access and Verify of the user
"RTN","SAMIUTVA",13,0)
 ;   on the server be sent across as well.  This is
"RTN","SAMIUTVA",14,0)
 ;   required as the user on the server must have the
"RTN","SAMIUTVA",15,0)
 ;   necessary Context menu(s) allowing use of the
"RTN","SAMIUTVA",16,0)
 ;   Remote Procedure(s).
"RTN","SAMIUTVA",17,0)
 ; Seven parameters have been added to the client
"RTN","SAMIUTVA",18,0)
 ;   VistA to prevent the necessity of hard coding
"RTN","SAMIUTVA",19,0)
 ;   certain values and to allow for default values for others.
"RTN","SAMIUTVA",20,0)
 ;   SAMI PORT
"RTN","SAMIUTVA",21,0)
 ;   SAMI IP ADDRESS
"RTN","SAMIUTVA",22,0)
 ;   SAMI ACCVER
"RTN","SAMIUTVA",23,0)
 ;   SAMI DEFAULT PROVIDER
"RTN","SAMIUTVA",24,0)
 ;   SAMI DEFAULT STATION NUMBER
"RTN","SAMIUTVA",25,0)
 ;   SAMI TIU NOTE PRINT NAME
"RTN","SAMIUTVA",26,0)
 ;   SAMI DEFAULT CLINIC IEN
"RTN","SAMIUTVA",27,0)
 ; Note that the user selected must have active
"RTN","SAMIUTVA",28,0)
 ;   credentials on both the Client and Server systems
"RTN","SAMIUTVA",29,0)
 ;   and the following Broker context menu.
"RTN","SAMIUTVA",30,0)
 ;      OR CPRS GUI CHART
"RTN","SAMIUTVA",31,0)
 ;
"RTN","SAMIUTVA",32,0)
 ; NOTE: Unit tests will pull data using the local
"RTN","SAMIUTVA",33,0)
 ;       client VistA files rather than risk degrading
"RTN","SAMIUTVA",34,0)
 ;       large datasets in use.  NEVERTHELESS, it is
"RTN","SAMIUTVA",35,0)
 ;       recommended that UNIT TESTS be run when
"RTN","SAMIUTVA",36,0)
 ;       VA-PALS is not in use as some Graphstore globals
"RTN","SAMIUTVA",37,0)
 ;       are temporarily moved while testing is running.
"RTN","SAMIUTVA",38,0)
 ;
"RTN","SAMIUTVA",39,0)
 ; @section 0 primary development
"RTN","SAMIUTVA",40,0)
 ;
"RTN","SAMIUTVA",41,0)
 ; @routine-credits
"RTN","SAMIUTVA",42,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUTVA",43,0)
 ;  larry@fiscientific.com
"RTN","SAMIUTVA",44,0)
 ; @additional-dev: Linda M. R. Yaw (lmry)
"RTN","SAMIUTVA",45,0)
 ;  linda.yaw@vistaexpertise.net
"RTN","SAMIUTVA",46,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUTVA",47,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUTVA",48,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUTVA",49,0)
 ; @license: see routine SAMIUL
"RTN","SAMIUTVA",50,0)
 ;
"RTN","SAMIUTVA",51,0)
 ; @application: SAMI
"RTN","SAMIUTVA",52,0)
 ; @version: 18.0
"RTN","SAMIUTVA",53,0)
 ; @patch-list: none yet
"RTN","SAMIUTVA",54,0)
 ;
"RTN","SAMIUTVA",55,0)
 ; @to-do
"RTN","SAMIUTVA",56,0)
 ;
"RTN","SAMIUTVA",57,0)
 ; @section 1 code
"RTN","SAMIUTVA",58,0)
 ;
"RTN","SAMIUTVA",59,0)
START if $text(^%ut)="" write !,"*** UNIT TEST NOT INSTALLED ***" quit
"RTN","SAMIUTVA",60,0)
 do EN^%ut($text(+0),2)
"RTN","SAMIUTVA",61,0)
 quit
"RTN","SAMIUTVA",62,0)
 ;
"RTN","SAMIUTVA",63,0)
STARTUP ; Set up dfn and tiuien to use throughout testing
"RTN","SAMIUTVA",64,0)
 ;set utdfn="dfn"_$J
"RTN","SAMIUTVA",65,0)
 set utdfn=1 ; Unit test dfn patient is always 1
"RTN","SAMIUTVA",66,0)
 set (utsuccess,tiuien)=0
"RTN","SAMIUTVA",67,0)
 D SVAPT1^SAMIUTST  ; Save VA's DFN 1 patient data
"RTN","SAMIUTVA",68,0)
 D LOADTPT^SAMIUTST  ; Load unit test patient data
"RTN","SAMIUTVA",69,0)
 quit
"RTN","SAMIUTVA",70,0)
 ;
"RTN","SAMIUTVA",71,0)
SHUTDOWN ; ZEXCEPT: dfn,tiuien
"RTN","SAMIUTVA",72,0)
 kill utdfn,tiuien,utsuccess
"RTN","SAMIUTVA",73,0)
 D LVAPT1^SAMIUTST  ; Return VA's DPT 1 patient's data
"RTN","SAMIUTVA",74,0)
 quit
"RTN","SAMIUTVA",75,0)
 ;
"RTN","SAMIUTVA",76,0)
SETUP quit
"RTN","SAMIUTVA",77,0)
 ;
"RTN","SAMIUTVA",78,0)
TEARDOWN quit
"RTN","SAMIUTVA",79,0)
 ;
"RTN","SAMIUTVA",80,0)
UTBLDTIU ; @TEST - Build a new TIU and Visit stub for a patient
"RTN","SAMIUTVA",81,0)
 ; BLDTIU(.tiuien,DFN,TITLE,USER,CLINIEN)
"RTN","SAMIUTVA",82,0)
 new D,D0,DG,DI,DIC,DICR,DIG,DIH
"RTN","SAMIUTVA",83,0)
 new provduz,clinien,tiutitlepn,tiutitleien,ptdfn
"RTN","SAMIUTVA",84,0)
 set provduz=$$GET^XPAR("SYS","SAMI DEFAULT PROVIDER DUZ",,"Q")
"RTN","SAMIUTVA",85,0)
 set clinien=$$GET^XPAR("SYS","SAMI DEFAULT CLINIC IEN",,"Q")
"RTN","SAMIUTVA",86,0)
 set tiutitlepn=$$GET^XPAR("SYS","SAMI NOTE TITLE PRINT NAME",,"Q")
"RTN","SAMIUTVA",87,0)
 set tiutitleien=$order(^TIU(8925.1,"D",tiutitlepn,0))
"RTN","SAMIUTVA",88,0)
 if '$get(utdfn) do  quit
"RTN","SAMIUTVA",89,0)
 . do FAIL^%ut("Patient DFN missing")
"RTN","SAMIUTVA",90,0)
 if ('$get(provduz))!('$get(clinien))!('$get(tiutitleien)) do  quit
"RTN","SAMIUTVA",91,0)
 . do FAIL^%ut("Provider,clinic, or tiu title missing")
"RTN","SAMIUTVA",92,0)
 do BLDTIU^SAMIVSTA(.tiuien,utdfn,tiutitleien,provduz,clinien)
"RTN","SAMIUTVA",93,0)
 hang 3 ; Delay for time to build everything
"RTN","SAMIUTVA",94,0)
 if '$get(tiuien) do  quit
"RTN","SAMIUTVA",95,0)
 . do FAIL^%ut("Procedure failed to build new TIU note")
"RTN","SAMIUTVA",96,0)
 new tiunode0 set tiunode0=$get(^TIU(8925,tiuien,0))
"RTN","SAMIUTVA",97,0)
 if '($piece(tiunode0,"^",1,2)=(tiutitleien_"^"_utdfn)) do  quit
"RTN","SAMIUTVA",98,0)
 . do FAIL^%ut("Procedure failed to build CORRECT TIU note")
"RTN","SAMIUTVA",99,0)
 if '$piece(tiunode0,"^",3) do  quit
"RTN","SAMIUTVA",100,0)
 . do FAIL^%ut("Procedure failed to build TIU visit")
"RTN","SAMIUTVA",101,0)
 new aupnvist0 set aupnvist0=$get(^AUPNVSIT(+$piece(tiunode0,"^",3),0))
"RTN","SAMIUTVA",102,0)
 do CHKEQ^%ut(+aupnvist0,+$piece(tiunode0,"^",7),"Testing building TIU note FAILED!")
"RTN","SAMIUTVA",103,0)
 quit
"RTN","SAMIUTVA",104,0)
 ;
"RTN","SAMIUTVA",105,0)
UTSTEXT ; @TEST - Push text into an existing TIU note
"RTN","SAMIUTVA",106,0)
 ; SETTEXT(.tiuien,.dest)
"RTN","SAMIUTVA",107,0)
 new D,D0,DG,DI,DIC,DICR,DIG,DIH
"RTN","SAMIUTVA",108,0)
 new SAMIUPOO
"RTN","SAMIUTVA",109,0)
 set SAMIUPOO(1)="First line of UNIT TEST text."
"RTN","SAMIUTVA",110,0)
 set SAMIUPOO(2)="Second line of UNIT TEST text."
"RTN","SAMIUTVA",111,0)
 set SAMIUPOO(3)="Setting text time:"_$$HTE^XLFDT($HOROLOG)
"RTN","SAMIUTVA",112,0)
 set SAMIUPOO(4)="Forth and last line of UNIT TEST text"
"RTN","SAMIUTVA",113,0)
 new dest set dest="SAMIUPOO"
"RTN","SAMIUTVA",114,0)
 do SETTEXT^SAMIVSTA(.tiuien,dest)
"RTN","SAMIUTVA",115,0)
 hang 1 ; Delay for time to build everything
"RTN","SAMIUTVA",116,0)
 if '$get(tiuien) do  quit
"RTN","SAMIUTVA",117,0)
 . do FAIL^%ut("Procedure failed to set text in TIU note")
"RTN","SAMIUTVA",118,0)
 set SAMIUPOO=0
"RTN","SAMIUTVA",119,0)
 new if for I=1:1:4 do  quit:SAMIUPOO
"RTN","SAMIUTVA",120,0)
 . if '($get(^TIU(8925,tiuien,"TEXT",I,0))=SAMIUPOO(I)) set SAMIUPOO=1
"RTN","SAMIUTVA",121,0)
 do CHKEQ^%ut(SAMIUPOO,0,"Testing setting text in TIU note FAILED!")
"RTN","SAMIUTVA",122,0)
 quit
"RTN","SAMIUTVA",123,0)
 ;
"RTN","SAMIUTVA",124,0)
UTENCTR ; @TEST - Update TIU with encounter and HF information
"RTN","SAMIUTVA",125,0)
 ; BLDENCTR(.tiuien,.HFARRAY)
"RTN","SAMIUTVA",126,0)
 new D,D0,DG,DI,DIC,DICR,DIG,DIH
"RTN","SAMIUTVA",127,0)
 new vstr,provduz
"RTN","SAMIUTVA",128,0)
 if '$get(utdfn) do  quit
"RTN","SAMIUTVA",129,0)
 . do FAIL^%ut("Update tiu with encounter missing utdfn FAILED!")
"RTN","SAMIUTVA",130,0)
 set vstr=$$VISTSTR^SAMIVSTA(tiuien)
"RTN","SAMIUTVA",131,0)
 if '($length(vstr,";")=3) do  quit
"RTN","SAMIUTVA",132,0)
 . do FAIL^%ut("Update tiu with encounter VSTR FAILED!")
"RTN","SAMIUTVA",133,0)
 set provduz=$$GET^XPAR("SYS","SAMI DEFAULT PROVIDER DUZ",,"Q")
"RTN","SAMIUTVA",134,0)
 if '$get(provduz) do  quit
"RTN","SAMIUTVA",135,0)
 . do FAIL^%ut("Update tiu with encounter no provduz FAILED!")
"RTN","SAMIUTVA",136,0)
 ; Time to build the HF array for the next call
"RTN","SAMIUTVA",137,0)
 new SAMIUHFA
"RTN","SAMIUTVA",138,0)
 set SAMIUHFA(1)="HDR^0^^"_vstr
"RTN","SAMIUTVA",139,0)
 set SAMIUHFA(2)="VST^DT^"_$piece(vstr,";",2)
"RTN","SAMIUTVA",140,0)
 set SAMIUHFA(3)="VST^PT^"_utdfn
"RTN","SAMIUTVA",141,0)
 set SAMIUHFA(4)="VST^HL^"_$piece(vstr,";")
"RTN","SAMIUTVA",142,0)
 set SAMIUHFA(5)="VST^VC^"_$piece(vstr,";",3)
"RTN","SAMIUTVA",143,0)
 set SAMIUHFA(6)="PRV^"_provduz_"^^^"_$piece($get(^VA(200,provduz,0)),"^")_"^1"
"RTN","SAMIUTVA",144,0)
 set SAMIUHFA(7)="POV+^F17.210^COUNSELING AND SCREENING^Nicotine dependence, cigarettes, uncomplicated^1^^0^^^1"
"RTN","SAMIUTVA",145,0)
 set SAMIUHFA(8)="COM^1^@"
"RTN","SAMIUTVA",146,0)
 set SAMIUHFA(9)="HF+^999001^LUNG SCREENING HF^LCS-ENROLLED^@^^^^^2^"
"RTN","SAMIUTVA",147,0)
 set SAMIUHFA(10)="COM^2^@"
"RTN","SAMIUTVA",148,0)
 set SAMIUHFA(11)="CPT+^99203^NEW PATIENT^Intermediate Exam  26-35 Min^1^71^^^0^3^"
"RTN","SAMIUTVA",149,0)
 set SAMIUHFA(12)="COM^3^@"
"RTN","SAMIUTVA",150,0)
 ;
"RTN","SAMIUTVA",151,0)
 set utsuccess=$$BLDENCTR^SAMIVSTA(.tiuien,.SAMIUHFA)
"RTN","SAMIUTVA",152,0)
 do CHKEQ^%ut(utsuccess,tiuien,"Testing adding encounter to TIU note FAILED!")
"RTN","SAMIUTVA",153,0)
 quit
"RTN","SAMIUTVA",154,0)
 ;
"RTN","SAMIUTVA",155,0)
UTPTINF ; @TEST - Pull additional patient information
"RTN","SAMIUTVA",156,0)
 ; do PTINFO^SAMIVSTA(dfn)
"RTN","SAMIUTVA",157,0)
 ; Find patient without SSN filed in Graphstore
"RTN","SAMIUTVA",158,0)
 new D,D0,DG,DI,DIC,DICR,DIG,DIH
"RTN","SAMIUTVA",159,0)
 new root set root=$$setroot^%wd("patient-lookup")
"RTN","SAMIUTVA",160,0)
 new gien set gien=0
"RTN","SAMIUTVA",161,0)
 for  set gien=$order(@root@(gien)) quit:'gien  quit:'($data(@root@(gien,"ssn")))
"RTN","SAMIUTVA",162,0)
 if 'gien do  quit
"RTN","SAMIUTVA",163,0)
 . do FAIL^%ut("Unable to find Graphstore entry without SSN - FAILED!")
"RTN","SAMIUTVA",164,0)
 new utdfn set utdfn=@root@(gien,"dfn")
"RTN","SAMIUTVA",165,0)
 if 'utdfn do  quit
"RTN","SAMIUTVA",166,0)
 . do FAIL^%ut("Unable to find patient dfn in Graphstore - FAILED!")
"RTN","SAMIUTVA",167,0)
 set utsuccess=$$PTINFO^SAMIVSTA(utdfn)
"RTN","SAMIUTVA",168,0)
 do CHKEQ^%ut(utsuccess,("2^"_utdfn),"Testing PTINFO FAILED!")
"RTN","SAMIUTVA",169,0)
 quit
"RTN","SAMIUTVA",170,0)
 ;
"RTN","SAMIUTVA",171,0)
UTADDNS ; @TEST - Add additional signers to a TIU note
"RTN","SAMIUTVA",172,0)
 ; do ADDSGNRS,ADDSIGN
"RTN","SAMIUTVA",173,0)
 ; NOTE: Signers will not show up on tiu in CPRS until it is
"RTN","SAMIUTVA",174,0)
 ;       edited or signed
"RTN","SAMIUTVA",175,0)
 new D,D0,DG,DI,DIC,DICR,DIG,DIH
"RTN","SAMIUTVA",176,0)
 set utsuccess=0
"RTN","SAMIUTVA",177,0)
 if '$get(tiuien) do  quit
"RTN","SAMIUTVA",178,0)
 . do FAIL^%ut("Add additional signers failed - no tiuien")
"RTN","SAMIUTVA",179,0)
 new root,vals
"RTN","SAMIUTVA",180,0)
 ; Set the tiuien variable in an existing test patient
"RTN","SAMIUTVA",181,0)
 ;  form to the newly generated tiu
"RTN","SAMIUTVA",182,0)
 set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTVA",183,0)
 set vals=$name(@root@("graph","XXX00001","siform-2018-11-13"))
"RTN","SAMIUTVA",184,0)
 set @vals@("tiuien")=tiuien
"RTN","SAMIUTVA",185,0)
 new filter
"RTN","SAMIUTVA",186,0)
 set filter("studyid")="XXX00001"
"RTN","SAMIUTVA",187,0)
 set filter("form")="siform-2018-11-13"
"RTN","SAMIUTVA",188,0)
 set filter("add signers",1)="64^Smith,Mary"
"RTN","SAMIUTVA",189,0)
 do ADDSGNRS^SAMIVSTA(.filter) ; sets utsuccess if unit testing
"RTN","SAMIUTVA",190,0)
 hang 1
"RTN","SAMIUTVA",191,0)
 do CHKEQ^%ut(utsuccess,1,"Testing Adding additional signers  FAILED!")
"RTN","SAMIUTVA",192,0)
 quit
"RTN","SAMIUTVA",193,0)
 ;
"RTN","SAMIUTVA",194,0)
 ;
"RTN","SAMIUTVA",195,0)
UTSSN ; @TEST - Pull SSN on a patient
"RTN","SAMIUTVA",196,0)
 ; do PTSSN(dfn)
"RTN","SAMIUTVA",197,0)
 ; Find patient without SSN filed in Graphstore
"RTN","SAMIUTVA",198,0)
 new D,D0,DG,DI,DIC,DICR,DIG,DIH
"RTN","SAMIUTVA",199,0)
 new root set root=$$setroot^%wd("patient-lookup")
"RTN","SAMIUTVA",200,0)
 new gien set gien=0
"RTN","SAMIUTVA",201,0)
 for  set gien=$order(@root@(gien)) quit:'gien  quit:'($data(@root@(gien,"ssn")))
"RTN","SAMIUTVA",202,0)
 if 'gien do  quit
"RTN","SAMIUTVA",203,0)
 . do FAIL^%ut("Unable to find Graphstore entry without SSN - FAILED!")
"RTN","SAMIUTVA",204,0)
 new utdfn set utdfn=@root@(gien,"dfn")
"RTN","SAMIUTVA",205,0)
 if 'utdfn do  quit
"RTN","SAMIUTVA",206,0)
 . do FAIL^%ut("Unable to find patient dfn in Graphstore - FAILED!")
"RTN","SAMIUTVA",207,0)
 set utsuccess=$$PTSSN^SAMIVSTA(utdfn) ; 2^999989135
"RTN","SAMIUTVA",208,0)
 if '($piece(utsuccess,"^",2)=$piece(^DPT(utdfn,0),"^",9)) do  quit
"RTN","SAMIUTVA",209,0)
 . do FAIL^%ut("Unable to pull correct patient ssn - FAILED!")
"RTN","SAMIUTVA",210,0)
 new GSssn set GSssn=$get(@root@(gien,"ssn"))
"RTN","SAMIUTVA",211,0)
 do CHKEQ^%ut($piece(utsuccess,"^",2),GSssn,"Testing PTSSN FAILED!")
"RTN","SAMIUTVA",212,0)
 quit
"RTN","SAMIUTVA",213,0)
 ;
"RTN","SAMIUTVA",214,0)
 ;
"RTN","SAMIUTVA",215,0)
UTVSTR ; @TEST - Get Visit string (VSTR) for a TIU note
"RTN","SAMIUTVA",216,0)
 ; do VisitString(tiuien)
"RTN","SAMIUTVA",217,0)
 new D,D0,DG,DI,DIC,DICR,DIG,DIH
"RTN","SAMIUTVA",218,0)
 new tiuien,node0,node12,VSTR,tiuVSTR
"RTN","SAMIUTVA",219,0)
 set tiuien=$order(^TIU(8925,"A"),-1)
"RTN","SAMIUTVA",220,0)
 set VSTR=$$VISTSTR^SAMIVSTA(tiuien)
"RTN","SAMIUTVA",221,0)
 set node0=$get(^TIU(8925,tiuien,0))
"RTN","SAMIUTVA",222,0)
 set node12=$get(^TIU(8925,tiuien,12))
"RTN","SAMIUTVA",223,0)
 set tiuVSTR=$piece(node12,"^",5)_";"_$piece(node0,"^",7)_";"_$piece(node0,"^",13)
"RTN","SAMIUTVA",224,0)
 do CHKEQ^%ut(VSTR,tiuVSTR,"Testing getting Visit String FAILED!")
"RTN","SAMIUTVA",225,0)
 quit
"RTN","SAMIUTVA",226,0)
 ;
"RTN","SAMIUTVA",227,0)
UTKASAVE ; @TEST - Kill ASAVE node for a TIU note
"RTN","SAMIUTVA",228,0)
 new D,D0,DG,DI,DIC,DICR,DIG,DIH
"RTN","SAMIUTVA",229,0)
 new provduz
"RTN","SAMIUTVA",230,0)
 set provduz=$$GET^XPAR("SYS","SAMI DEFAULT PROVIDER DUZ",,"Q")
"RTN","SAMIUTVA",231,0)
 if '$get(provduz) do  quit
"RTN","SAMIUTVA",232,0)
 . do FAIL^%ut("Unable to obtain Provider DUZ for ASAVE  - FAILED!")
"RTN","SAMIUTVA",233,0)
 if '$get(tiuien) do  quit
"RTN","SAMIUTVA",234,0)
 . do FAIL^%ut("Unable to obtain tiuien for ASAVE  - FAILED!")
"RTN","SAMIUTVA",235,0)
 set utsuccess=$$KASAVE^SAMIVSTA(provduz,tiuien)
"RTN","SAMIUTVA",236,0)
 do CHKEQ^%ut(utsuccess,1,"Testing updating with VPR  FAILED!")
"RTN","SAMIUTVA",237,0)
 quit
"RTN","SAMIUTVA",238,0)
 ;
"RTN","SAMIUTVA",239,0)
UTSIGN ; @TEST - Sign TIU note
"RTN","SAMIUTVA",240,0)
 new D,D0,DG,DI,DIC,DICR,DIG,DIH
"RTN","SAMIUTVA",241,0)
 if '$get(tiuien) do  quit
"RTN","SAMIUTVA",242,0)
 . do FAIL^%ut("Unable to obtain tiuien for SIGN TIU  - FAILED!")
"RTN","SAMIUTVA",243,0)
 new status set status=$piece(^TIU(8925,tiuien,0),"^",5)
"RTN","SAMIUTVA",244,0)
 if '(status=5) do  quit
"RTN","SAMIUTVA",245,0)
 . do FAIL^%ut("TIU status not 'unsigned' for SIGN TIU  - FAILED!")
"RTN","SAMIUTVA",246,0)
 set utsuccess=$$SIGNTIU^SAMIVSTA(tiuien)
"RTN","SAMIUTVA",247,0)
 do CHKEQ^%ut(utsuccess,1,"Testing Signing of TIU FAILED!")
"RTN","SAMIUTVA",248,0)
 quit
"RTN","SAMIUTVA",249,0)
 ;
"RTN","SAMIUTVA",250,0)
UTADDND ; @TEST - Add an addendum to a signed note
"RTN","SAMIUTVA",251,0)
 ; $$TIUADND(tiuien,userduz)
"RTN","SAMIUTVA",252,0)
 new D,D0,DG,DI,DIC,DICR,DIG,DIH
"RTN","SAMIUTVA",253,0)
 if '$get(tiuien) do  quit
"RTN","SAMIUTVA",254,0)
 . do FAIL^%ut("Unable to obtain tiuien for Adding Addendum  - FAILED!")
"RTN","SAMIUTVA",255,0)
 new provduz
"RTN","SAMIUTVA",256,0)
 set provduz=$$GET^XPAR("SYS","SAMI DEFAULT PROVIDER DUZ",,"Q")
"RTN","SAMIUTVA",257,0)
 if '$get(provduz) do  quit
"RTN","SAMIUTVA",258,0)
 . do FAIL^%ut("Unable to obtain Provider DUZ to Add Addendum  - FAILED!")
"RTN","SAMIUTVA",259,0)
 new tiuaien set tiuaien=$$TIUADND^SAMIVSTA(tiuien,provduz)
"RTN","SAMIUTVA",260,0)
 set:($get(tiuaien)>0) tiuien=tiuien_"^"_tiuaien
"RTN","SAMIUTVA",261,0)
 set utsuccess=($get(tiuaien)>0)
"RTN","SAMIUTVA",262,0)
 ; Sign the addendum
"RTN","SAMIUTVA",263,0)
 new OK set OK=$$SIGNTIU^SAMIVSTA(tiuaien)
"RTN","SAMIUTVA",264,0)
 do CHKEQ^%ut(utsuccess,1,"Testing Adding Addendum FAILED!")
"RTN","SAMIUTVA",265,0)
 quit
"RTN","SAMIUTVA",266,0)
 ;
"RTN","SAMIUTVA",267,0)
UTDELTIU ; @TEST - Deleting an unsigned TIU note
"RTN","SAMIUTVA",268,0)
 hang 2
"RTN","SAMIUTVA",269,0)
 new D,D0,DG,DI,DIC,DICR,DIG,DIH
"RTN","SAMIUTVA",270,0)
 new tiuaien set tiuaien=$select($piece(tiuien,"^",2):$piece(tiuien,"^",2),1:0)
"RTN","SAMIUTVA",271,0)
 set tiuien=+$get(tiuien)
"RTN","SAMIUTVA",272,0)
 if '$get(tiuien) do  quit
"RTN","SAMIUTVA",273,0)
 . do FAIL^%ut("Unable to obtain tiuien for Deleting TIU  - FAILED!")
"RTN","SAMIUTVA",274,0)
 ; Set note status back to UNSIGNED so we can delete it
"RTN","SAMIUTVA",275,0)
 set:$data(^TIU(8925,+tiuien,0)) $piece(^TIU(8925,+tiuien,0),"^",5)=5
"RTN","SAMIUTVA",276,0)
 set:$data(^TIU(8925,+tiuaien,0)) $piece(^TIU(8925,+tiuaien,0),"^",5)=5
"RTN","SAMIUTVA",277,0)
 ;
"RTN","SAMIUTVA",278,0)
 set:$get(tiuaien) utsuccess=$$DELTIU^SAMIVSTA(tiuaien)
"RTN","SAMIUTVA",279,0)
 set utsuccess=$$DELTIU^SAMIVSTA(tiuien)
"RTN","SAMIUTVA",280,0)
 ;
"RTN","SAMIUTVA",281,0)
 do CHKEQ^%ut(utsuccess,1,"Testing Deleting TIU FAILED!")
"RTN","SAMIUTVA",282,0)
 quit
"RTN","SAMIUTVA",283,0)
 ;
"RTN","SAMIUTVA",284,0)
UTURBR ; @TEST - extrinsic to return urban or rural depending on zip code
"RTN","SAMIUTVA",285,0)
 new uturbr
"RTN","SAMIUTVA",286,0)
 set uturbr=$$URBRUR^SAMIVSTA(40714)
"RTN","SAMIUTVA",287,0)
 set uturbr=uturbr_$$URBRUR^SAMIVSTA(40272)
"RTN","SAMIUTVA",288,0)
 set uturbr=uturbr_$$URBRUR^SAMIVSTA(99185)
"RTN","SAMIUTVA",289,0)
 set utsuccess=(uturbr="nur")
"RTN","SAMIUTVA",290,0)
 do CHKEQ^%ut(utsuccess,1,"Testing Urban/Rural extrinsic FAILED!")
"RTN","SAMIUTVA",291,0)
 quit
"RTN","SAMIUTVA",292,0)
 ;
"RTN","SAMIUTVA",293,0)
UTTASK ; @TEST - test TASKIT creation of new note,text, and encounter
"RTN","SAMIUTVA",294,0)
 ;get existing siform from graph store.
"RTN","SAMIUTVA",295,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUTVA",296,0)
 new glbrt set glbrt=$name(@root@("graph","XXX00001","siform"))
"RTN","SAMIUTVA",297,0)
 set filter("form")=$order(@glbrt)
"RTN","SAMIUTVA",298,0)
 ;
"RTN","SAMIUTVA",299,0)
 set filter("studyid")="XXX00001"
"RTN","SAMIUTVA",300,0)
 new tiuien set tiuien=0
"RTN","SAMIUTVA",301,0)
 kill ^TMP("UNIT TEST","UTTASK^SAMIUTVA")
"RTN","SAMIUTVA",302,0)
 do TASKIT^SAMIVSTA
"RTN","SAMIUTVA",303,0)
 set tiuien=$get(^TMP("UNIT TEST","UTTASK^SAMIUTVA"))
"RTN","SAMIUTVA",304,0)
 set utsuccess=$select(tiuien>0:1,1:0)
"RTN","SAMIUTVA",305,0)
 do CHKEQ^%ut(utsuccess,1,"Testing creating a new TIU note FAILED!")
"RTN","SAMIUTVA",306,0)
 ; If a new note was generated add encounter info
"RTN","SAMIUTVA",307,0)
 if tiuien do
"RTN","SAMIUTVA",308,0)
 . new ptdfn set ptdfn=$piece(^TIU(8925,tiuien,0),"^",2)
"RTN","SAMIUTVA",309,0)
 . new provduz
"RTN","SAMIUTVA",310,0)
 . set provduz=$$GET^XPAR("SYS","SAMI DEFAULT PROVIDER DUZ",,"Q")
"RTN","SAMIUTVA",311,0)
 . do ENCNTR^SAMIVSTA
"RTN","SAMIUTVA",312,0)
 . set utsuccess=(tiuien>0)
"RTN","SAMIUTVA",313,0)
 . do CHKEQ^%ut(utsuccess,1,"Testing adding encounter informatin FAILED!")
"RTN","SAMIUTVA",314,0)
 ; If new note was generated, delete it
"RTN","SAMIUTVA",315,0)
 if tiuien do
"RTN","SAMIUTVA",316,0)
 . new D,D0,DG,DI,DIC,DICR,DIG,DIH
"RTN","SAMIUTVA",317,0)
 . set utsuccess=$$DELTIU^SAMIVSTA(tiuien)
"RTN","SAMIUTVA",318,0)
 . do CHKEQ^%ut(utsuccess,1,"Testing deleting TASKIT note  FAILED!")
"RTN","SAMIUTVA",319,0)
 quit
"RTN","SAMIUTVA",320,0)
 ;
"RTN","SAMIUTVA",321,0)
EOR ;End of routine SAMIUTVA
"RTN","SAMIUTVR")
0^89^B90920433
"RTN","SAMIUTVR",1,0)
SAMIUTVR ; ven/lgc,arc - UNIT TESTS for SAMIVST5 ; 7/9/19 3:24pm
"RTN","SAMIUTVR",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTVR",3,0)
 ;
"RTN","SAMIUTVR",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTVR",5,0)
 ;
"RTN","SAMIUTVR",6,0)
 ;@routine-credits
"RTN","SAMIUTVR",7,0)
 ;@primary development organization: Vista Expertise Network
"RTN","SAMIUTVR",8,0)
 ;@primary-dev: Larry G. Carlson (lgc)
"RTN","SAMIUTVR",9,0)
 ;@primary-dev: Alexis R. Carlson (arc)
"RTN","SAMIUTVR",10,0)
 ;@additional-dev: Linda M. R. Yaw (lmry)
"RTN","SAMIUTVR",11,0)
 ;@copyright:
"RTN","SAMIUTVR",12,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTVR",13,0)
 ;
"RTN","SAMIUTVR",14,0)
 ;@last-updated: 2019-02-28
"RTN","SAMIUTVR",15,0)
 ;@application: VA-PALS
"RTN","SAMIUTVR",16,0)
 ;@version: 1.0
"RTN","SAMIUTVR",17,0)
 ;
"RTN","SAMIUTVR",18,0)
 ;@sac-exemption
"RTN","SAMIUTVR",19,0)
 ; sac 2.2.8 Vendor specific subroutines may not be called directly
"RTN","SAMIUTVR",20,0)
 ;  except by Kernel, Mailman, & VA Fileman.
"RTN","SAMIUTVR",21,0)
 ; sac 2.3.3.2 No VistA package may use the following intrinsic
"RTN","SAMIUTVR",22,0)
 ;  (system) variables unless they are accessed using Kernel or VA
"RTN","SAMIUTVR",23,0)
 ;  FileMan supported references: $D[EVICE], $I[O], $K[EY],
"RTN","SAMIUTVR",24,0)
 ;  $P[RINCIPAL], $ROLES, $ST[ACK], $SY[STEM], $Z*.
"RTN","SAMIUTVR",25,0)
 ;  (Exemptions: Kernel & VA Fileman)
"RTN","SAMIUTVR",26,0)
 ; sac 2.9.1: Application software must use documented Kernel
"RTN","SAMIUTVR",27,0)
 ;  supported references to perform all platform specific functions.
"RTN","SAMIUTVR",28,0)
 ;  (Exemptions: Kernel & VA Fileman)
"RTN","SAMIUTVR",29,0)
 ;
"RTN","SAMIUTVR",30,0)
START if $text(^%ut)="" write !,"*** UNIT TEST NOT INSTALLED ***" quit
"RTN","SAMIUTVR",31,0)
 do EN^%ut($text(+0),2)
"RTN","SAMIUTVR",32,0)
 quit
"RTN","SAMIUTVR",33,0)
 ;
"RTN","SAMIUTVR",34,0)
 ;
"RTN","SAMIUTVR",35,0)
 ; ============== UNIT TESTS ======================
"RTN","SAMIUTVR",36,0)
 ; NOTE: Unit tests will pull data using the local
"RTN","SAMIUTVR",37,0)
 ;       client VistA files rather than risk degrading
"RTN","SAMIUTVR",38,0)
 ;       large datasets in use.  NEVERTHELESS, it is
"RTN","SAMIUTVR",39,0)
 ;       recommended that UNIT TESTS be run when
"RTN","SAMIUTVR",40,0)
 ;       VA-PALS is not in use as some Graphstore globals
"RTN","SAMIUTVR",41,0)
 ;       are temporarily moved while testing is running.
"RTN","SAMIUTVR",42,0)
 ;
"RTN","SAMIUTVR",43,0)
UTRAPCD ; @TEST - Pulling Radiology Procedures through the broker
"RTN","SAMIUTVR",44,0)
 ;  RADPROCD(StationNumber)
"RTN","SAMIUTVR",45,0)
 kill ^SAMIUT("UNIT TEST RA PROCEDURES")
"RTN","SAMIUTVR",46,0)
 ;
"RTN","SAMIUTVR",47,0)
 new root set root=$$setroot^%wd("radiology procedures")
"RTN","SAMIUTVR",48,0)
 ;
"RTN","SAMIUTVR",49,0)
 merge ^SAMIUT("UNIT TEST RA PROCEDURES")=@root
"RTN","SAMIUTVR",50,0)
 new KBAPPRCD,utsuccess set utsuccess=0
"RTN","SAMIUTVR",51,0)
 set KBAPPRCD=$$RADPROCD^SAMIVSTA(6100)
"RTN","SAMIUTVR",52,0)
 if '$get(KBAPPRCD) do  quit
"RTN","SAMIUTVR",53,0)
 . merge @root=^SAMIUT("UNIT TEST RA PROCEDURES")
"RTN","SAMIUTVR",54,0)
 . kill ^SAMIUT("UNIT TEST RA PROCEDURES")
"RTN","SAMIUTVR",55,0)
 . write !,"*** No radiology procedures on file  ***",!
"RTN","SAMIUTVR",56,0)
 . s utsuccess=0
"RTN","SAMIUTVR",57,0)
 ;
"RTN","SAMIUTVR",58,0)
 new ien,ien71G,cptG,nameG,entryV
"RTN","SAMIUTVR",59,0)
 for ien=1:1:$get(KBAPPRCD) do  quit:$get(utsuccess)
"RTN","SAMIUTVR",60,0)
 . set ien71G=@root@(ien,"ien71")
"RTN","SAMIUTVR",61,0)
 . if '$data(^RAMIS(71,ien71G,0)) set utsuccess=1 quit
"RTN","SAMIUTVR",62,0)
 . set nameG=@root@(ien,"name")
"RTN","SAMIUTVR",63,0)
 . set cptG=@root@(ien,"CPT")
"RTN","SAMIUTVR",64,0)
 . set entryV=$get(^RAMIS(71,ien71G,0))
"RTN","SAMIUTVR",65,0)
 . if '($piece(entryV,"^")=nameG) set utsuccess=1 quit
"RTN","SAMIUTVR",66,0)
 . if '($piece(entryV,"^",9)=cptG) set utsuccess=1 quit
"RTN","SAMIUTVR",67,0)
 do CLRGRPS^SAMIVSTA("radiology procedures")
"RTN","SAMIUTVR",68,0)
 merge @root=^SAMIUT("UNIT TEST RA PROCEDURES")
"RTN","SAMIUTVR",69,0)
 kill ^SAMIUT("UNIT TEST RA PROCEDURES")
"RTN","SAMIUTVR",70,0)
 do CHKEQ^%ut(utsuccess,0,"Testing pulling rad procedures through broker FAILED!")
"RTN","SAMIUTVR",71,0)
 quit
"RTN","SAMIUTVR",72,0)
 ;
"RTN","SAMIUTVR",73,0)
UTRAEXMS ; @TEST - Pulling Radiology Acive Exams through the broker
"RTN","SAMIUTVR",74,0)
 ;  ACTEXAMS
"RTN","SAMIUTVR",75,0)
 quit
"RTN","SAMIUTVR",76,0)
 ;
"RTN","SAMIUTVR",77,0)
UTRASTAF ; @TEST - Pulling all active radiology staff
"RTN","SAMIUTVR",78,0)
 ;  RADSTAFF
"RTN","SAMIUTVR",79,0)
 kill ^SAMIUT("UNIT TEST RAD STAFF")
"RTN","SAMIUTVR",80,0)
 ;
"RTN","SAMIUTVR",81,0)
 new root set root=$$setroot^%wd("radiology staff")
"RTN","SAMIUTVR",82,0)
 ;
"RTN","SAMIUTVR",83,0)
 merge ^SAMIUT("UNIT TEST RAD STAFF")=@root
"RTN","SAMIUTVR",84,0)
 new KBAPSTAF,utsuccess set utsuccess=0
"RTN","SAMIUTVR",85,0)
 set KBAPSTAF=$$RADSTAFF^SAMIVSTA
"RTN","SAMIUTVR",86,0)
 if '$get(KBAPSTAF) do
"RTN","SAMIUTVR",87,0)
 . merge @root=^SAMIUT("UNIT TEST RAD STAFF")
"RTN","SAMIUTVR",88,0)
 . kill ^SAMIUT("UNIT TEST RAD STAFF")
"RTN","SAMIUTVR",89,0)
 . write !,"*** No radiology staff registered  ***",!
"RTN","SAMIUTVR",90,0)
 . s utsuccess=0
"RTN","SAMIUTVR",91,0)
 ;
"RTN","SAMIUTVR",92,0)
 new ien,duzG,nameG
"RTN","SAMIUTVR",93,0)
 for ien=1:1:$get(KBAPSTAF) do  quit:$get(utsuccess)
"RTN","SAMIUTVR",94,0)
 . set duzG=@root@(ien,"duz")
"RTN","SAMIUTVR",95,0)
 . set nameG=@root@(ien,"name")
"RTN","SAMIUTVR",96,0)
 . new cnt set cnt=0,utsuccess=1
"RTN","SAMIUTVR",97,0)
 . for  set cnt=$order(^VA(200,duzG,"RAC",cnt)) quit:'cnt  do
"RTN","SAMIUTVR",98,0)
 ..  if ^VA(200,duzG,"RAC",cnt,0)="S" set utsuccess=0
"RTN","SAMIUTVR",99,0)
 . quit:utsuccess
"RTN","SAMIUTVR",100,0)
 . if '($$UP^XLFSTR(nameG))=($$UP^XLFSTR($piece($get(^VA(200,duzG,0)),"^"))) do  quit
"RTN","SAMIUTVR",101,0)
 .. set utsuccess=1
"RTN","SAMIUTVR",102,0)
 do CLRGRPS^SAMIVSTA("radiology staff")
"RTN","SAMIUTVR",103,0)
 merge @root=^SAMIUT("UNIT TEST RAD STAFF")
"RTN","SAMIUTVR",104,0)
 kill ^SAMIUT("UNIT TEST RAD STAFF")
"RTN","SAMIUTVR",105,0)
 do CHKEQ^%ut(utsuccess,0,"Testing pulling Radiology Staff through broker FAILED!")
"RTN","SAMIUTVR",106,0)
 quit
"RTN","SAMIUTVR",107,0)
 ;
"RTN","SAMIUTVR",108,0)
UTRARES ; @TEST - Pulling all active radiology residents
"RTN","SAMIUTVR",109,0)
 ;  RADRESDT
"RTN","SAMIUTVR",110,0)
 kill ^SAMIUT("UNIT TEST RAD RESIDENTS")
"RTN","SAMIUTVR",111,0)
 ;
"RTN","SAMIUTVR",112,0)
 new root set root=$$setroot^%wd("radiology residents")
"RTN","SAMIUTVR",113,0)
 ;
"RTN","SAMIUTVR",114,0)
 merge ^SAMIUT("UNIT TEST RAD RESIDENTS")=@root
"RTN","SAMIUTVR",115,0)
 new KBAPRES,utsuccess set utsuccess=0
"RTN","SAMIUTVR",116,0)
 set KBAPRES=$$RADRESDT^SAMIVSTA
"RTN","SAMIUTVR",117,0)
 if '$get(KBAPRES) do
"RTN","SAMIUTVR",118,0)
 . merge @root=^SAMIUT("UNIT TEST RAD RESIDENTS")
"RTN","SAMIUTVR",119,0)
 . kill ^SAMIUT("UNIT TEST RAD RESIDENTS")
"RTN","SAMIUTVR",120,0)
 . write !,"*** No radiology residents registered  ***",!
"RTN","SAMIUTVR",121,0)
 . s utsuccess=0
"RTN","SAMIUTVR",122,0)
 new ien,duzG,nameG
"RTN","SAMIUTVR",123,0)
 for ien=1:1:$get(KBAPRES) do  quit:$get(utsuccess)
"RTN","SAMIUTVR",124,0)
 . set duzG=@root@(ien,"duz")
"RTN","SAMIUTVR",125,0)
 . set nameG=@root@(ien,"name")
"RTN","SAMIUTVR",126,0)
 . new cnt set cnt=0,utsuccess=1
"RTN","SAMIUTVR",127,0)
 . for  set cnt=$order(^VA(200,duzG,"RAC",cnt)) quit:'cnt  do
"RTN","SAMIUTVR",128,0)
 ..  if ^VA(200,duzG,"RAC",cnt,0)="R" set utsuccess=0
"RTN","SAMIUTVR",129,0)
 . quit:utsuccess
"RTN","SAMIUTVR",130,0)
 . if '($$UP^XLFSTR(nameG))=($$UP^XLFSTR($piece($get(^VA(200,duzG,0)),"^"))) do  quit
"RTN","SAMIUTVR",131,0)
 .. set utsuccess=1
"RTN","SAMIUTVR",132,0)
 do CLRGRPS^SAMIVSTA("radiology residents")
"RTN","SAMIUTVR",133,0)
 merge @root=^SAMIUT("UNIT TEST RAD RESIDENTS")
"RTN","SAMIUTVR",134,0)
 kill ^SAMIUT("UNIT TEST RAD RESIDENTS")
"RTN","SAMIUTVR",135,0)
 do CHKEQ^%ut(utsuccess,0,"Testing pulling Radiology residents through broker FAILED!")
"RTN","SAMIUTVR",136,0)
 quit
"RTN","SAMIUTVR",137,0)
 ;
"RTN","SAMIUTVR",138,0)
UTRATECH ; @TEST - Pulling all active radiology technologists
"RTN","SAMIUTVR",139,0)
 ;  RADTECHS
"RTN","SAMIUTVR",140,0)
 kill ^SAMIUT("UNIT TEST RAD TECHS")
"RTN","SAMIUTVR",141,0)
 ;
"RTN","SAMIUTVR",142,0)
 new root s root=$$setroot^%wd("radiology technologists")
"RTN","SAMIUTVR",143,0)
 ;
"RTN","SAMIUTVR",144,0)
 merge ^SAMIUT("UNIT TEST RAD TECHS")=@root
"RTN","SAMIUTVR",145,0)
 new KBAPTECH,utsuccess set utsuccess=0
"RTN","SAMIUTVR",146,0)
 set KBAPTECH=$$RADTECHS^SAMIVSTA
"RTN","SAMIUTVR",147,0)
 if '$get(KBAPTECH) do
"RTN","SAMIUTVR",148,0)
 . merge @root=^SAMIUT("UNIT TEST RAD TECHS")
"RTN","SAMIUTVR",149,0)
 . kill ^SAMIUT("UNIT TEST RAD TECHS")
"RTN","SAMIUTVR",150,0)
 . write !,"*** No radiology technologists registered  ***",!
"RTN","SAMIUTVR",151,0)
 . s utsuccess=0
"RTN","SAMIUTVR",152,0)
 new ien,duzG,nameG
"RTN","SAMIUTVR",153,0)
 for ien=1:1:$get(KBAPTECH) do  quit:$get(utsuccess)
"RTN","SAMIUTVR",154,0)
 . set duzG=@root@(ien,"duz")
"RTN","SAMIUTVR",155,0)
 . set nameG=@root@(ien,"name")
"RTN","SAMIUTVR",156,0)
 . new cnt set cnt=0,utsuccess=1
"RTN","SAMIUTVR",157,0)
 . for  set cnt=$order(^VA(200,duzG,"RAC",cnt)) quit:'cnt  do
"RTN","SAMIUTVR",158,0)
 ..  if ^VA(200,duzG,"RAC",cnt,0)="T" set utsuccess=0
"RTN","SAMIUTVR",159,0)
 . quit:utsuccess
"RTN","SAMIUTVR",160,0)
 . if '($$UP^XLFSTR(nameG))=($$UP^XLFSTR($piece($get(^VA(200,duzG,0)),"^"))) do  quit
"RTN","SAMIUTVR",161,0)
 .. set utsuccess=1
"RTN","SAMIUTVR",162,0)
 do CLRGRPS^SAMIVSTA("radiology technologists")
"RTN","SAMIUTVR",163,0)
 merge @root=^SAMIUT("UNIT TEST RAD TECHS")
"RTN","SAMIUTVR",164,0)
 kill ^SAMIUT("UNIT TEST RAD TECHS")
"RTN","SAMIUTVR",165,0)
 do CHKEQ^%ut(utsuccess,0,"Testing pulling Radiology technologists through broker FAILED!")
"RTN","SAMIUTVR",166,0)
 quit
"RTN","SAMIUTVR",167,0)
 ;
"RTN","SAMIUTVR",168,0)
UTRAMOD ; @TEST - Pulling all radiology diagnosis modifiers
"RTN","SAMIUTVR",169,0)
 ;  RADMODS
"RTN","SAMIUTVR",170,0)
 kill ^SAMIUT("UNIT TEST RAD MODS")
"RTN","SAMIUTVR",171,0)
 ;
"RTN","SAMIUTVR",172,0)
 new root set root=$$setroot^%wd("radiology modifiers")
"RTN","SAMIUTVR",173,0)
 ;
"RTN","SAMIUTVR",174,0)
 merge ^SAMIUT("UNIT TEST RAD MODS")=@root
"RTN","SAMIUTVR",175,0)
 new KBAPMODS,utsuccess set utsuccess=0
"RTN","SAMIUTVR",176,0)
 set KBAPMODS=$$RADMODS^SAMIVSTA
"RTN","SAMIUTVR",177,0)
 if '$get(KBAPMODS) do
"RTN","SAMIUTVR",178,0)
 . merge @root=^SAMIUT("UNIT TEST RAD MODS")
"RTN","SAMIUTVR",179,0)
 . kill ^SAMIUT("UNIT TEST RAD MODS")
"RTN","SAMIUTVR",180,0)
 . write !,"*** No diagnostic identifiers on file  ***",!
"RTN","SAMIUTVR",181,0)
 . s utsuccess=0
"RTN","SAMIUTVR",182,0)
 new ien,ien712G,ien792G,nameG,TypeOfImagingG,ienV,TypeOfImagingV
"RTN","SAMIUTVR",183,0)
 for ien=1:1:$get(KBAPMODS) do  quit:$get(utsuccess)
"RTN","SAMIUTVR",184,0)
 . set ien712G=@root@(ien,"ien71.2")
"RTN","SAMIUTVR",185,0)
 . set nameG=@root@(ien,"name")
"RTN","SAMIUTVR",186,0)
 . set ien792G=@root@(ien,"ien79.2")
"RTN","SAMIUTVR",187,0)
 . set TypeOfImagingG=@root@(ien,"type of imaging")
"RTN","SAMIUTVR",188,0)
 .;  check this entry in 71.2 has an ien79.2 image type
"RTN","SAMIUTVR",189,0)
 . new cnt set cnt=0,utsuccess=1
"RTN","SAMIUTVR",190,0)
 . for  set cnt=$order(^RAMIS(71.2,ien712G,1,cnt)) quit:'cnt  do
"RTN","SAMIUTVR",191,0)
 ..  if $get(^RAMIS(71.2,ien712G,1,cnt,0))=ien792G set utsuccess=0
"RTN","SAMIUTVR",192,0)
 . quit:utsuccess
"RTN","SAMIUTVR",193,0)
 . if '($$UP^XLFSTR(nameG))=($$UP^XLFSTR($p($g(^RAMIS(71.2,ien712G,0)),"^"))) do  quit
"RTN","SAMIUTVR",194,0)
 .. set utsuccess=1
"RTN","SAMIUTVR",195,0)
 do CLRGRPS^SAMIVSTA("radiology modifiers")
"RTN","SAMIUTVR",196,0)
 merge @root=^SAMIUT("UNIT TEST RAD MODS")
"RTN","SAMIUTVR",197,0)
 kill ^SAMIUT("UNIT TEST RAD MODS")
"RTN","SAMIUTVR",198,0)
 do CHKEQ^%ut(utsuccess,0,"Testing pulling Radiology Dx Modifiers through broker FAILED!")
"RTN","SAMIUTVR",199,0)
 quit
"RTN","SAMIUTVR",200,0)
 ;
"RTN","SAMIUTVR",201,0)
UTRADXCD ; @TEST - Pull all radiology diagnostic codes
"RTN","SAMIUTVR",202,0)
 ;  RADDXCDS
"RTN","SAMIUTVR",203,0)
 kill ^SAMIUT("UNIT TEST RA DX CODES")
"RTN","SAMIUTVR",204,0)
 ;
"RTN","SAMIUTVR",205,0)
 new root set root=$$setroot^%wd("radiology diagnostic codes")
"RTN","SAMIUTVR",206,0)
 ;
"RTN","SAMIUTVR",207,0)
 merge ^SAMIUT("UNIT TEST RA DX CODES")=@root
"RTN","SAMIUTVR",208,0)
 new KBAPCODS,utsuccess set utsuccess=0
"RTN","SAMIUTVR",209,0)
 set KBAPCODS=$$RADDXCDS^SAMIVSTA
"RTN","SAMIUTVR",210,0)
 if '$get(KBAPCODS) do
"RTN","SAMIUTVR",211,0)
 . merge @root=^SAMIUT("UNIT TEST RA DX CODES")
"RTN","SAMIUTVR",212,0)
 . kill ^SAMIUT("UNIT TEST RA DX CODES")
"RTN","SAMIUTVR",213,0)
 . write !,"*** No diagnostic codes on file  ***",!
"RTN","SAMIUTVR",214,0)
 . s utsuccess=0
"RTN","SAMIUTVR",215,0)
 ;
"RTN","SAMIUTVR",216,0)
 new ien,ien783G,nameG,nameV
"RTN","SAMIUTVR",217,0)
 for ien=1:1:$get(KBAPCODS) do  quit:$get(utsuccess)
"RTN","SAMIUTVR",218,0)
 . set ien783G=@root@(ien,"ien78.3")
"RTN","SAMIUTVR",219,0)
 . if '$data(^RA(78.3,ien783G,0)) set utsuccess=1 quit
"RTN","SAMIUTVR",220,0)
 . set nameG=@root@(ien,"name")
"RTN","SAMIUTVR",221,0)
 . set nameV=$piece($get(^RA(78.3,ien783G,0)),"^")
"RTN","SAMIUTVR",222,0)
 . if '(nameG=nameV) set utsuccess=1 quit
"RTN","SAMIUTVR",223,0)
 do CLRGRPS^SAMIVSTA("radiology diagnostic codes")
"RTN","SAMIUTVR",224,0)
 merge @root=^SAMIUT("UNIT TEST RA DX CODES")
"RTN","SAMIUTVR",225,0)
 kill ^SAMIUT("UNIT TEST RA DX CODES")
"RTN","SAMIUTVR",226,0)
 do CHKEQ^%ut(utsuccess,0,"Testing pulling rad dx codes through broker FAILED!")
"RTN","SAMIUTVR",227,0)
 quit
"RTN","SAMIUTVR",228,0)
 ;
"RTN","SAMIUTVR",229,0)
UTCLRG ; @TEST - Clear a Graphstore of entries
"RTN","SAMIUTVR",230,0)
 ;
"RTN","SAMIUTVR",231,0)
 new root set root=$$setroot^%wd("radiology diagnostic codes")
"RTN","SAMIUTVR",232,0)
 ;
"RTN","SAMIUTVR",233,0)
 kill ^SAMIUT("UNIT TEST CLRGRPH") merge ^SAMIUT("UNIT TEST CLRGRPH")=@root
"RTN","SAMIUTVR",234,0)
 new cnt set cnt=$order(@root@("A"),-1)
"RTN","SAMIUTVR",235,0)
 if 'cnt do  quit
"RTN","SAMIUTVR",236,0)
 . do FAIL^%ut("No 'radiology diagnostic codes' entry")
"RTN","SAMIUTVR",237,0)
 set cnt=$$CLRGRPS^SAMIVSTA("radiology diagnostic codes"),cnt=$order(@root@("A"),-1)
"RTN","SAMIUTVR",238,0)
 merge @root=^SAMIUT("UNIT TEST CLRGRPH") kill ^SAMIUT("UNIT TEST CLRGRPH")
"RTN","SAMIUTVR",239,0)
 do CHKEQ^%ut(cnt,0,"Clear Graphstore FAILED!")
"RTN","SAMIUTVR",240,0)
 quit
"RTN","SAMIUTVR",241,0)
 ;
"RTN","SAMIUTVR",242,0)
EOR ; End of routine SAMIUTVR
"RTN","SAMIUTVS")
0^90^B102014850
"RTN","SAMIUTVS",1,0)
SAMIUTVS ;ven/arc/lgc - UNIT TEST for SAMIVST4 ;Oct 22, 2019@16:19
"RTN","SAMIUTVS",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIUTVS",3,0)
 ;
"RTN","SAMIUTVS",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUTVS",5,0)
 ;
"RTN","SAMIUTVS",6,0)
 ; VA-PALS will be using Sam Habiel's [KBANSCAU] broker
"RTN","SAMIUTVS",7,0)
 ;   to pull information from the VA server into the
"RTN","SAMIUTVS",8,0)
 ;   VA-PALS client and, to push TIU notes generated by
"RTN","SAMIUTVS",9,0)
 ;   VA-PALS forms onto the VA server.
"RTN","SAMIUTVS",10,0)
 ; Using this broker between VistA instances requires
"RTN","SAMIUTVS",11,0)
 ;   not only the IP and Port for the server be known,
"RTN","SAMIUTVS",12,0)
 ;   but also, that the Access and Verify of the user
"RTN","SAMIUTVS",13,0)
 ;   on the server be sent across as well.  This is
"RTN","SAMIUTVS",14,0)
 ;   required as the user on the server must have the
"RTN","SAMIUTVS",15,0)
 ;   necessary Context menu(s) allowing use of the
"RTN","SAMIUTVS",16,0)
 ;   Remote Procedure(s).
"RTN","SAMIUTVS",17,0)
 ; Seven parameters have been added to the client
"RTN","SAMIUTVS",18,0)
 ;   VistA to prevent the necessity of hard coding
"RTN","SAMIUTVS",19,0)
 ;   certain values and to allow for default values for others.
"RTN","SAMIUTVS",20,0)
 ;   SAMI PORT
"RTN","SAMIUTVS",21,0)
 ;   SAMI IP ADDRESS
"RTN","SAMIUTVS",22,0)
 ;   SAMI ACCVER
"RTN","SAMIUTVS",23,0)
 ;   SAMI DEFAULT PROVIDER
"RTN","SAMIUTVS",24,0)
 ;   SAMI DEFAULT STATIOn NUMBER
"RTN","SAMIUTVS",25,0)
 ;   SAMI TIU NOTE PRINT NAME
"RTN","SAMIUTVS",26,0)
 ;   SAMI DEFAULT CLINIC IEN
"RTN","SAMIUTVS",27,0)
 ; Note that the user selected must have active
"RTN","SAMIUTVS",28,0)
 ;   credentials on both the Client and Server systems
"RTN","SAMIUTVS",29,0)
 ;   and the following Broker context menu.
"RTN","SAMIUTVS",30,0)
 ;      OR CPRS GUI CHART
"RTN","SAMIUTVS",31,0)
 ;
"RTN","SAMIUTVS",32,0)
 ; @section 0 primary development
"RTN","SAMIUTVS",33,0)
 ;
"RTN","SAMIUTVS",34,0)
 ; @routine-credits
"RTN","SAMIUTVS",35,0)
 ; @primary-dev: Larry Carlson (lgc)
"RTN","SAMIUTVS",36,0)
 ;  larry@fiscientific.com
"RTN","SAMIUTVS",37,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIUTVS",38,0)
 ;  http://vistaexpertise.net
"RTN","SAMIUTVS",39,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIUTVS",40,0)
 ; @license: see routine SAMIUL
"RTN","SAMIUTVS",41,0)
 ;
"RTN","SAMIUTVS",42,0)
 ; additional-dev: Linda M.R.Yaw (lmry)
"RTN","SAMIUTVS",43,0)
 ;  linda.yaw@vistaexpertise.net
"RTN","SAMIUTVS",44,0)
 ;
"RTN","SAMIUTVS",45,0)
 ; @application: SAMI
"RTN","SAMIUTVS",46,0)
 ; @version: 18.0
"RTN","SAMIUTVS",47,0)
 ; @patch-list: none yet
"RTN","SAMIUTVS",48,0)
 ;
"RTN","SAMIUTVS",49,0)
 ; @sac-exemption
"RTN","SAMIUTVS",50,0)
 ;  sac 2.2.8 Vendor specific subroutines may not be called directly
"RTN","SAMIUTVS",51,0)
 ;   except by Kernel, Mailman, & VA Fileman.
"RTN","SAMIUTVS",52,0)
 ;  sac 2.3.3.2 No VistA package may use the following intrinsic
"RTN","SAMIUTVS",53,0)
 ;   (system) variables unless they are accessed using Kernel or VA
"RTN","SAMIUTVS",54,0)
 ;   FileMan supported references: $D[EVICE], $I[O], $K[EY],
"RTN","SAMIUTVS",55,0)
 ;   $P[RINCIPAL], $ROLES, $ST[ACK], $SY[STEM], $Z*.
"RTN","SAMIUTVS",56,0)
 ;   (Exemptions: Kernel & VA Fileman)
"RTN","SAMIUTVS",57,0)
 ;  sac 2.9.1: Application software must use documented Kernel
"RTN","SAMIUTVS",58,0)
 ;   supported references to perform all platform specific functions.
"RTN","SAMIUTVS",59,0)
 ;   (Exemptions: Kernel & VA Fileman)
"RTN","SAMIUTVS",60,0)
 ;  ============== UNIT TESTS ======================
"RTN","SAMIUTVS",61,0)
 ;  NOTE: Unit tests will pull data using the local
"RTN","SAMIUTVS",62,0)
 ;       client VistA files rather than risk degrading
"RTN","SAMIUTVS",63,0)
 ;       large datasets in use.  NEVERTHELESS, it is
"RTN","SAMIUTVS",64,0)
 ;       recommended that UNIT TESTS be run when
"RTN","SAMIUTVS",65,0)
 ;       VA-PALS is not in use as some Graphstore globals
"RTN","SAMIUTVS",66,0)
 ;       are temporarily moved while testing is running.
"RTN","SAMIUTVS",67,0)
 ;
"RTN","SAMIUTVS",68,0)
 ; @to-do
"RTN","SAMIUTVS",69,0)
 ;
"RTN","SAMIUTVS",70,0)
 ; @section 1 code
"RTN","SAMIUTVS",71,0)
 ;
"RTN","SAMIUTVS",72,0)
START if $text(^%ut)="" write !,"*** UNIT TEST NOT INSTALLEd ***" quit
"RTN","SAMIUTVS",73,0)
 do EN^%ut($text(+0),2)
"RTN","SAMIUTVS",74,0)
 quit
"RTN","SAMIUTVS",75,0)
 ;
"RTN","SAMIUTVS",76,0)
STARTUP new utsuccess
"RTN","SAMIUTVS",77,0)
 D SVAPT1^SAMIUTST  ; Save VA's DFN 1 patient data
"RTN","SAMIUTVS",78,0)
 D LOADTPT^SAMIUTST  ; Load unit test patient data
"RTN","SAMIUTVS",79,0)
 quit
"RTN","SAMIUTVS",80,0)
 ;
"RTN","SAMIUTVS",81,0)
SHUTDOWN ; ZEXCEPT: utsuccess
"RTN","SAMIUTVS",82,0)
 kill utsuccess
"RTN","SAMIUTVS",83,0)
 D LVAPT1^SAMIUTST  ; Return VA's DPT 1 patient's data
"RTN","SAMIUTVS",84,0)
 quit
"RTN","SAMIUTVS",85,0)
 ;
"RTN","SAMIUTVS",86,0)
UTMGPH ; @TEST - Test making 'patient-lookup' Graphstore
"RTN","SAMIUTVS",87,0)
 if '$data(^SAMIUT("ALLPTS")) do  quit
"RTN","SAMIUTVS",88,0)
 .  do FAIL^%ut("^SAMIUT(""ALLPTS"") must exist for TESTING")
"RTN","SAMIUTVS",89,0)
 ;
"RTN","SAMIUTVS",90,0)
 do MKGPH^SAMIVSTA ; Rebuild 'patient-lookup' Graphstore
"RTN","SAMIUTVS",91,0)
 ; Check that the Graphstore was built
"RTN","SAMIUTVS",92,0)
 new ptlkup set ptlkup="^%wd(17.040801,""B"",""patient-lookup"")"
"RTN","SAMIUTVS",93,0)
 new si set si=$order(@ptlkup@(0))
"RTN","SAMIUTVS",94,0)
 if '$get(si) do  quit
"RTN","SAMIUTVS",95,0)
 . do FAIL^%ut("MKGPH entry did not build 'patient-lookup' Graphstore")
"RTN","SAMIUTVS",96,0)
 ;
"RTN","SAMIUTVS",97,0)
 new node,snode,root,gien,dfn,PTDATA
"RTN","SAMIUTVS",98,0)
 ;
"RTN","SAMIUTVS",99,0)
 set root=$$setroot^%wd("patient-lookup")
"RTN","SAMIUTVS",100,0)
 ;
"RTN","SAMIUTVS",101,0)
 set node=$name(^SAMIUT("ALLPTS")),snode=$piece(node,")")
"RTN","SAMIUTVS",102,0)
 set utsuccess=1
"RTN","SAMIUTVS",103,0)
 for  set node=$query(@node) quit:node'[snode  do  quit:'utsuccess
"RTN","SAMIUTVS",104,0)
 . set PTDATA=@node
"RTN","SAMIUTVS",105,0)
 . set dfn=$piece(PTDATA,"^",12)
"RTN","SAMIUTVS",106,0)
 . set gien=$order(@root@("dfn",dfn,0))
"RTN","SAMIUTVS",107,0)
 . if '$get(gien) set utsuccess=0 quit
"RTN","SAMIUTVS",108,0)
 .;
"RTN","SAMIUTVS",109,0)
 .; Now compare the entries in this Graphstore node with
"RTN","SAMIUTVS",110,0)
 .;  the information in the respective ^SAMIUT("ALLPTS" node
"RTN","SAMIUTVS",111,0)
 . if '$order(@root@("last5",$p(PTDATA,"^",9),0)) set utsuccess=0 quit
"RTN","SAMIUTVS",112,0)
 . if '$length($piece(PTDATA,"^")) set utsuccess=0 quit
"RTN","SAMIUTVS",113,0)
 . if '$order(@root@("name",$piece(PTDATA,"^"),0)) set utsuccess=0 quit
"RTN","SAMIUTVS",114,0)
 . if '$length($piece(PTDATA,"^",4)) set utsuccess=0 quit
"RTN","SAMIUTVS",115,0)
 . if '$order(@root@("name",$piece(PTDATA,"^",4),0)) set utsuccess=0 quit
"RTN","SAMIUTVS",116,0)
 . if '$order(@root@("saminame",$p(PTDATA,"^",4),0)) set utsuccess=0 quit
"RTN","SAMIUTVS",117,0)
 ;
"RTN","SAMIUTVS",118,0)
 if 'utsuccess do  quit
"RTN","SAMIUTVS",119,0)
 . do FAIL^%ut("'patient-lookup' Graphstore incorrectly built")
"RTN","SAMIUTVS",120,0)
 do CHKEQ^%ut(utsuccess,1,"Testing Complete Graphstore build  FAILED!")
"RTN","SAMIUTVS",121,0)
 quit
"RTN","SAMIUTVS",122,0)
 ;
"RTN","SAMIUTVS",123,0)
UTAPTS ; @TEST - Test pulling patient data through broker
"RTN","SAMIUTVS",124,0)
 kill ^SAMIUT("ALLPTS UNITTEST")
"RTN","SAMIUTVS",125,0)
 do ALLPTS1^SAMIVSTA("ALLPTS UNITTEST")
"RTN","SAMIUTVS",126,0)
 ;                in file 2         in ALLPTS
"RTN","SAMIUTVS",127,0)
 ;  NAME            piece 1          piece 1
"RTN","SAMIUTVS",128,0)
 ;  sex             piece 2          piece 6
"RTN","SAMIUTVS",129,0)
 ;  birthdate       piece 3 fmdt     piece 10 (yyyymmdd)
"RTN","SAMIUTVS",130,0)
 ;
"RTN","SAMIUTVS",131,0)
 ; Pull NAME from file 2 B cross
"RTN","SAMIUTVS",132,0)
 ;   Get NAME,sex,birthdate,build last5
"RTN","SAMIUTVS",133,0)
 ; Pull entry in Graphstore using last5
"RTN","SAMIUTVS",134,0)
 ;   Knowing gien get NAME,sex,birthdate
"RTN","SAMIUTVS",135,0)
 ; Compare
"RTN","SAMIUTVS",136,0)
 new NAME2,SEX2,DOB2,LAST52,DFN2
"RTN","SAMIUTVS",137,0)
 new NODE2,NODEG,gien
"RTN","SAMIUTVS",138,0)
 new root set root=$$setroot^%wd("patient-lookup")
"RTN","SAMIUTVS",139,0)
 set utsuccess=1
"RTN","SAMIUTVS",140,0)
 set DFN2=0
"RTN","SAMIUTVS",141,0)
 for  set DFN2=$order(^DPT(DFN2)) quit:'DFN2  do  quit:'utsuccess
"RTN","SAMIUTVS",142,0)
 . set NODE2=$get(^DPT(DFN2,0))
"RTN","SAMIUTVS",143,0)
 . set NAME2=$piece(NODE2,"^")
"RTN","SAMIUTVS",144,0)
 . set SEX2=$$UP^XLFSTR($extract($piece(NODE2,"^",2)))
"RTN","SAMIUTVS",145,0)
 . set DOB2=$$FMTHL7^XLFDT($piece(NODE2,"^",3))
"RTN","SAMIUTVS",146,0)
 . set DOB2=$extract(DOB2,1,4)_"-"_$extract(DOB2,5,6)_"-"_$extract(DOB2,7,8)
"RTN","SAMIUTVS",147,0)
 . set gien=$order(@root@("dfn",DFN2,0))
"RTN","SAMIUTVS",148,0)
 . set LAST52=$$UP^XLFSTR($extract(NAME2))_$extract($piece(NODE2,"^",9),6,9)
"RTN","SAMIUTVS",149,0)
 . if '$get(gien) set utsuccess=0 quit
"RTN","SAMIUTVS",150,0)
 . if '$data(@root@("name",NAME2,gien)) set utsuccess=0 quit
"RTN","SAMIUTVS",151,0)
 . if '($piece($get(@root@(gien,"gender")),"^")=SEX2) do  quit
"RTN","SAMIUTVS",152,0)
 .. set utsuccess=0
"RTN","SAMIUTVS",153,0)
 . if '$data(@root@("last5",LAST52,gien)) set utsuccess=0 quit
"RTN","SAMIUTVS",154,0)
 . if '($get(@root@(gien,"sbdob"))=DOB2) set utsuccess=0 quit
"RTN","SAMIUTVS",155,0)
 kill ^SAMIUT("ALLPTS UNITTEST")
"RTN","SAMIUTVS",156,0)
 if 'utsuccess d  q
"RTN","SAMIUTVS",157,0)
 . do FAIL^%ut("KBAP(""ALLPTS UNITTEST"") incorrectly built")
"RTN","SAMIUTVS",158,0)
 do CHKEQ^%ut(utsuccess,1,"Testing pulling patients through broker FAILED!")
"RTN","SAMIUTVS",159,0)
 quit
"RTN","SAMIUTVS",160,0)
 ;
"RTN","SAMIUTVS",161,0)
UTPRVDS ; @TEST - Pulling Providers through the broker
"RTN","SAMIUTVS",162,0)
 kill ^SAMIUT("UNIT TEST PROVIDERS")
"RTN","SAMIUTVS",163,0)
 new root set root=$$setroot^%wd("providers")
"RTN","SAMIUTVS",164,0)
 merge ^SAMIUT("UNIT TEST PROVIDERS")=@root
"RTN","SAMIUTVS",165,0)
 set utsuccess=1
"RTN","SAMIUTVS",166,0)
 new SAMIPVDS
"RTN","SAMIUTVS",167,0)
 set SAMIPVDS=$$PRVDRS^SAMIVSTA
"RTN","SAMIUTVS",168,0)
 if '$get(SAMIPVDS) do  quit
"RTN","SAMIUTVS",169,0)
 . merge @root=^SAMIUT("UNIT TEST PROVIDERS") kill ^SAMIUT("UNIT TEST PROVIDERS")
"RTN","SAMIUTVS",170,0)
 . do FAIL^%ut("No providers pulled through broker")
"RTN","SAMIUTVS",171,0)
 new ien,DUZG,NAMEG
"RTN","SAMIUTVS",172,0)
 for ien=1:1:$get(SAMIPVDS) do  quit:'utsuccess
"RTN","SAMIUTVS",173,0)
 . set DUZG=@root@(ien,"duz")
"RTN","SAMIUTVS",174,0)
 . set NAMEG=@root@(ien,"name")
"RTN","SAMIUTVS",175,0)
 . if '$data(^XUSEC("PROVIDER",DUZG)) set utsuccess=0 quit
"RTN","SAMIUTVS",176,0)
 .; if '$$ACTIVE^XUSER(DUZG) set utsuccess=0 quit
"RTN","SAMIUTVS",177,0)
 . if '($$UP^XLFSTR(NAMEG))=($$UP^XLFSTR($piece($get(^VA(200,DUZG,0)),"^"))) do  quit
"RTN","SAMIUTVS",178,0)
 .. set utsuccess=0
"RTN","SAMIUTVS",179,0)
 merge @root=^SAMIUT("UNIT TEST PROVIDERS") kill ^SAMIUT("UNIT TEST PROVIDERS")
"RTN","SAMIUTVS",180,0)
 do CHKEQ^%ut(utsuccess,1,"Testing pulling Providers through broker FAILED!")
"RTN","SAMIUTVS",181,0)
 quit
"RTN","SAMIUTVS",182,0)
 ;
"RTN","SAMIUTVS",183,0)
UTRMDRS ; @TEST - Pulling Reminders through the broker
"RTN","SAMIUTVS",184,0)
 kill ^SAMIUT("UNIT TEST REMINDERS")
"RTN","SAMIUTVS",185,0)
 new root set root=$$setroot^%wd("reminders")
"RTN","SAMIUTVS",186,0)
 merge ^SAMIUT("UNIT TEST REMINDERS")=@root
"RTN","SAMIUTVS",187,0)
 set utsuccess=1
"RTN","SAMIUTVS",188,0)
 new SAMIREMINDERS
"RTN","SAMIUTVS",189,0)
 set SAMIREMINDERS=$$RMDRS^SAMIVSTA
"RTN","SAMIUTVS",190,0)
 if '$get(SAMIREMINDERS) do  quit
"RTN","SAMIUTVS",191,0)
 . merge @root=^SAMIUT("UNIT TEST REMINDERS")
"RTN","SAMIUTVS",192,0)
 . kill ^SAMIUT("UNIT TEST REMINDERS")
"RTN","SAMIUTVS",193,0)
 . do FAIL^%ut("No reminders pulled through broker")
"RTN","SAMIUTVS",194,0)
 new IENV,IENG,NAMEG,PNAMEG,TYPEG
"RTN","SAMIUTVS",195,0)
 for IENG=1:1:$get(SAMIREMINDERS) do  quit:'utsuccess
"RTN","SAMIUTVS",196,0)
 . set NAMEG=@root@(IENG,"name") ; Mixed case
"RTN","SAMIUTVS",197,0)
 . set PNAMEG=@root@(IENG,"printname") ; All caps
"RTN","SAMIUTVS",198,0)
 . set TYPEG=@root@(IENG,"type")
"RTN","SAMIUTVS",199,0)
 . set IENV=@root@(IENG,"ien")
"RTN","SAMIUTVS",200,0)
 . if TYPEG="R" do  quit:'utsuccess
"RTN","SAMIUTVS",201,0)
 .. if '$data(^PXD(811.9,"B",PNAMEG,IENV)) set utsuccess=0 quit
"RTN","SAMIUTVS",202,0)
 .. if '$data(^PXD(811.9,"D",NAMEG,IENV)) set utsuccess=0 quit
"RTN","SAMIUTVS",203,0)
 . if TYPEG="C" do  quit:'utsuccess
"RTN","SAMIUTVS",204,0)
 .. if '($get(^PXRMD(811.7,IENV,0))=NAMEG) set utsuccess=0 quit
"RTN","SAMIUTVS",205,0)
 merge @root=^SAMIUT("UNIT TEST REMINDERS")
"RTN","SAMIUTVS",206,0)
 kill ^SAMIUT("UNIT TEST REMINDERS")
"RTN","SAMIUTVS",207,0)
 do CHKEQ^%ut(utsuccess,1,"Testing pulling Reminders through broker FAILED!")
"RTN","SAMIUTVS",208,0)
 quit
"RTN","SAMIUTVS",209,0)
 ;
"RTN","SAMIUTVS",210,0)
 ;
"RTN","SAMIUTVS",211,0)
UTCLNC ; @TEST - Pulling Clinics through the broker
"RTN","SAMIUTVS",212,0)
 kill ^SAMIUT("UNIT TEST CLINICS")
"RTN","SAMIUTVS",213,0)
 new root set root=$$setroot^%wd("clinics")
"RTN","SAMIUTVS",214,0)
 merge ^SAMIUT("UNIT TEST CLINICS")=@root
"RTN","SAMIUTVS",215,0)
 set utsuccess=1
"RTN","SAMIUTVS",216,0)
 new SAMICLNC
"RTN","SAMIUTVS",217,0)
 set SAMICLNC=$$CLINICS^SAMIVSTA
"RTN","SAMIUTVS",218,0)
 if '$get(SAMICLNC) do  quit
"RTN","SAMIUTVS",219,0)
 . merge @root=^SAMIUT("UNIT TEST CLINICS")
"RTN","SAMIUTVS",220,0)
 . kill ^SAMIUT("UNIT TEST CLINICS")
"RTN","SAMIUTVS",221,0)
 . do FAIL^%ut("No clinics pulled through broker")
"RTN","SAMIUTVS",222,0)
 new IENG,IENV,NAMEG
"RTN","SAMIUTVS",223,0)
 for IENG=1:1:$get(SAMICLNC) do  quit:'utsuccess
"RTN","SAMIUTVS",224,0)
 . set NAMEG=@root@(IENG,"name")
"RTN","SAMIUTVS",225,0)
 . set IENV=@root@(IENG,"ien")
"RTN","SAMIUTVS",226,0)
 . if '$data(^SC("B",NAMEG,IENV)) set utsuccess=0 quit
"RTN","SAMIUTVS",227,0)
 merge @root=^SAMIUT("UNIT TEST CLINICS")
"RTN","SAMIUTVS",228,0)
 kill ^SAMIUT("UNIT TEST CLINICS")
"RTN","SAMIUTVS",229,0)
 do CHKEQ^%ut(utsuccess,1,"Testing pulling Clinics through broker FAILED!")
"RTN","SAMIUTVS",230,0)
 quit
"RTN","SAMIUTVS",231,0)
 ;
"RTN","SAMIUTVS",232,0)
 ;
"RTN","SAMIUTVS",233,0)
UTHF ; @TEST - Pulling Health Factors through the broker
"RTN","SAMIUTVS",234,0)
 kill ^SAMIUT("UNIT TEST HEALTH FACTORS")
"RTN","SAMIUTVS",235,0)
 new root set root=$$setroot^%wd("health-factors")
"RTN","SAMIUTVS",236,0)
 merge ^SAMIUT("UNIT TEST HEALTH FACTORS")=@root
"RTN","SAMIUTVS",237,0)
 set utsuccess=1
"RTN","SAMIUTVS",238,0)
 new SAMIHF
"RTN","SAMIUTVS",239,0)
 set SAMIHF=$$HLTHFCT^SAMIVSTA
"RTN","SAMIUTVS",240,0)
 if '$get(SAMIHF) do  quit
"RTN","SAMIUTVS",241,0)
 . merge @root=^SAMIUT("UNIT TEST HEALTH FACTORS")
"RTN","SAMIUTVS",242,0)
 . kill ^SAMIUT("UNIT TEST HEALTH FACTORS")
"RTN","SAMIUTVS",243,0)
 . do FAIL^%ut("No health factors pulled through broker")
"RTN","SAMIUTVS",244,0)
 new IENV,IENG,NAMEG
"RTN","SAMIUTVS",245,0)
 for IENG=1:1:$get(SAMIHF) do  quit:'utsuccess
"RTN","SAMIUTVS",246,0)
 . set NAMEG=@root@(IENG,"name")
"RTN","SAMIUTVS",247,0)
 . set IENV=@root@(IENG,"ien")
"RTN","SAMIUTVS",248,0)
 . if '($piece($get(^AUTTHF(IENV,0)),"^")=NAMEG) set utsuccess=0 quit
"RTN","SAMIUTVS",249,0)
 merge @root=^SAMIUT("UNIT TEST HEALTH FACTORS")
"RTN","SAMIUTVS",250,0)
 kill ^SAMIUT("UNIT TEST HEALTH FACTORS")
"RTN","SAMIUTVS",251,0)
 do CHKEQ^%ut(utsuccess,1,"Testing pulling Health Factors through broker FAILED!")
"RTN","SAMIUTVS",252,0)
 quit
"RTN","SAMIUTVS",253,0)
 ;
"RTN","SAMIUTVS",254,0)
UTCLRG ; @TEST - Clear a Graphstore of entries
"RTN","SAMIUTVS",255,0)
 new root set root=$$setroot^%wd("providers")
"RTN","SAMIUTVS",256,0)
 kill ^SAMIUT("UNIT TEST CLRGRPH") merge ^SAMIUT("UNIT TEST CLRGRPH")=@root
"RTN","SAMIUTVS",257,0)
 new cnt set cnt=$order(@root@("A"),-1)
"RTN","SAMIUTVS",258,0)
 if 'cnt do  quit
"RTN","SAMIUTVS",259,0)
 . do FAIL^%ut("No 'providers found' entry")
"RTN","SAMIUTVS",260,0)
 set cnt=$$CLRGRPS^SAMIVSTA("providers"),cnt=$order(@root@("A"),-1)
"RTN","SAMIUTVS",261,0)
 merge @root=^SAMIUT("UNIT TEST CLRGRPH") kill ^SAMIUT("UNIT TEST CLRGRPH")
"RTN","SAMIUTVS",262,0)
 do CHKEQ^%ut(cnt,0,"Clear Graphstore FAILED!")
"RTN","SAMIUTVS",263,0)
 quit
"RTN","SAMIUTVS",264,0)
 ;
"RTN","SAMIUTVS",265,0)
EOR ; End of Routine SAMIUTVS
"RTN","SAMIVSTA")
0^91^B6942135
"RTN","SAMIVSTA",1,0)
SAMIVSTA ;;ven/lgc - M2Broker calls for VA-PALS ; 6/21/19 9:02am
"RTN","SAMIVSTA",2,0)
 ;;18.0;SAMI;;;Build 1
"RTN","SAMIVSTA",3,0)
 ;
"RTN","SAMIVSTA",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIVSTA",5,0)
 ;@module documentation see routine SAMIVUL
"RTN","SAMIVSTA",6,0)
 ;
"RTN","SAMIVSTA",7,0)
SV2VISTA(filter) ; Build a new patient TIU
"RTN","SAMIVSTA",8,0)
 goto SV2VISTA^SAMIVST1
"RTN","SAMIVSTA",9,0)
 ;
"RTN","SAMIVSTA",10,0)
TASKIT ; Task off building a new patient TIU
"RTN","SAMIVSTA",11,0)
 goto TASKIT^SAMIVST1
"RTN","SAMIVSTA",12,0)
 ;
"RTN","SAMIVSTA",13,0)
NEWTIU ; Build new patient TIU
"RTN","SAMIVSTA",14,0)
 goto NEWTIU^SAMIVST1
"RTN","SAMIVSTA",15,0)
 ;
"RTN","SAMIVSTA",16,0)
NEWTXT ; Add text to a TIU document
"RTN","SAMIVSTA",17,0)
 goto NEWTXT^SAMIVST1
"RTN","SAMIVSTA",18,0)
 ;
"RTN","SAMIVSTA",19,0)
ENCNTR ; Add encounter to a TIU
"RTN","SAMIVSTA",20,0)
 goto ENCNTR^SAMIVST1
"RTN","SAMIVSTA",21,0)
 ;
"RTN","SAMIVSTA",22,0)
BLDTIU(tiuien,dfn,title,user,clinien) ; Build the TIU
"RTN","SAMIVSTA",23,0)
 goto BLDTIU^SAMIVST1
"RTN","SAMIVSTA",24,0)
 ;
"RTN","SAMIVSTA",25,0)
SETTEXT(tiuien,dest) ; Set text into a TIU document
"RTN","SAMIVSTA",26,0)
 goto SETTEXT^SAMIVST1
"RTN","SAMIVSTA",27,0)
 ;
"RTN","SAMIVSTA",28,0)
BLDENCTR(tiuien,SAMIUHFA) ; Build the encounter
"RTN","SAMIVSTA",29,0)
 goto BLDENCTR^SAMIVST1
"RTN","SAMIVSTA",30,0)
 ;
"RTN","SAMIVSTA",31,0)
ADDSGNRS(filter) ; Add additional signers to a TIU
"RTN","SAMIVSTA",32,0)
 goto ADDSGNRS^SAMIVST1
"RTN","SAMIVSTA",33,0)
 ;
"RTN","SAMIVSTA",34,0)
ADDSIGN ; Add signers
"RTN","SAMIVSTA",35,0)
 goto ADDSIGN^SAMIVST1
"RTN","SAMIVSTA",36,0)
 ;
"RTN","SAMIVSTA",37,0)
TIUADND(tiuien,userduz) ; Add and addendum to a TIU
"RTN","SAMIVSTA",38,0)
 goto TIUADND^SAMIVST2
"RTN","SAMIVSTA",39,0)
 ;
"RTN","SAMIVSTA",40,0)
VISTSTR(tiuien) ; Build the VSTR string for an existing TIU
"RTN","SAMIVSTA",41,0)
 goto VISTSTR^SAMIVST2
"RTN","SAMIVSTA",42,0)
 ;
"RTN","SAMIVSTA",43,0)
PTINFO(dfn,debug) ; Get additional information on a patient
"RTN","SAMIVSTA",44,0)
 goto PTINFO^SAMIVST2
"RTN","SAMIVSTA",45,0)
 ;
"RTN","SAMIVSTA",46,0)
PTSSN(dfn) ; Get SSN on a patient
"RTN","SAMIVSTA",47,0)
 goto PTSSN^SAMIVST2
"RTN","SAMIVSTA",48,0)
 ;
"RTN","SAMIVSTA",49,0)
SIGNTIU(tiuda) ; Sign a TIU note
"RTN","SAMIVSTA",50,0)
 goto SIGNTIU^SAMIVST2
"RTN","SAMIVSTA",51,0)
 ;
"RTN","SAMIVSTA",52,0)
DELTIU(tiuien) ; Delete a TIU note
"RTN","SAMIVSTA",53,0)
 goto DELTIU^SAMIVST2
"RTN","SAMIVSTA",54,0)
 ;
"RTN","SAMIVSTA",55,0)
URBRUR(zipcode) ; Return Rural or Urban for a zip code
"RTN","SAMIVSTA",56,0)
 goto URBRUR^SAMIVST2
"RTN","SAMIVSTA",57,0)
 ;
"RTN","SAMIVSTA",58,0)
RACE(icn) ; Return the race information for a patient
"RTN","SAMIVSTA",59,0)
 goto RACE^SAMIVST2
"RTN","SAMIVSTA",60,0)
 ;
"RTN","SAMIVSTA",61,0)
KASAVE(provider,tiuien) ;  Kills cross refs on a TIU
"RTN","SAMIVSTA",62,0)
 goto KASAVE^SAMIVST1
"RTN","SAMIVSTA",63,0)
 ;
"RTN","SAMIVSTA",64,0)
VIT(dfn,sdate,edate) ; Gets vitals information for a patient
"RTN","SAMIVSTA",65,0)
 goto VIT^SAMIVST3
"RTN","SAMIVSTA",66,0)
 ;
"RTN","SAMIVSTA",67,0)
VPR(dfn) ; Pulls the Virtual Patient Record on a patient
"RTN","SAMIVSTA",68,0)
 goto VPR^SAMIVST3
"RTN","SAMIVSTA",69,0)
 ;
"RTN","SAMIVSTA",70,0)
ALLPTS ; Gets all patients off the VA server
"RTN","SAMIVSTA",71,0)
 goto ALLPTS^SAMIVST4
"RTN","SAMIVSTA",72,0)
 ;
"RTN","SAMIVSTA",73,0)
ALLPTS1(SAMISS) ; Saves all patients data on the client
"RTN","SAMIVSTA",74,0)
 goto ALLPTS1^SAMIVST4
"RTN","SAMIVSTA",75,0)
 ;
"RTN","SAMIVSTA",76,0)
MKGPH ; Builds the patient-lookup graphstore
"RTN","SAMIVSTA",77,0)
 goto MKGPH^SAMIVST4
"RTN","SAMIVSTA",78,0)
 ;
"RTN","SAMIVSTA",79,0)
RMDRS() ; Gets reminders for a patient
"RTN","SAMIVSTA",80,0)
 goto RMDRS^SAMIVST4
"RTN","SAMIVSTA",81,0)
 ;
"RTN","SAMIVSTA",82,0)
PRVDRS() ; Pulls a list of active providers from the VA server
"RTN","SAMIVSTA",83,0)
 goto PRVDRS^SAMIVST4
"RTN","SAMIVSTA",84,0)
 ;
"RTN","SAMIVSTA",85,0)
CLINICS() ; Pulls a list of clinics from the VA server
"RTN","SAMIVSTA",86,0)
 goto CLINICS^SAMIVST4
"RTN","SAMIVSTA",87,0)
 ;
"RTN","SAMIVSTA",88,0)
HLTHFCT() ; Pulls health factors from the VA server
"RTN","SAMIVSTA",89,0)
 goto HLTHFCT^SAMIVST4
"RTN","SAMIVSTA",90,0)
 ;
"RTN","SAMIVSTA",91,0)
CLRGRPS(name) ; Clear an existing graphstore global
"RTN","SAMIVSTA",92,0)
 goto CLRGRPS^SAMIVST4
"RTN","SAMIVSTA",93,0)
 ;
"RTN","SAMIVSTA",94,0)
RADPROCD(StationNumber) ; Pull radiology procedures
"RTN","SAMIVSTA",95,0)
 goto RADPROCD^SAMIVST5
"RTN","SAMIVSTA",96,0)
 ;
"RTN","SAMIVSTA",97,0)
ACTEXAMS() ; Pull active radiology exams from the VA server
"RTN","SAMIVSTA",98,0)
 goto ACTEXAMS^SAMIVST5
"RTN","SAMIVSTA",99,0)
 ;
"RTN","SAMIVSTA",100,0)
RADSTAFF() ; Pull list of radiology staff from the VA server
"RTN","SAMIVSTA",101,0)
 goto RADSTAFF^SAMIVST5
"RTN","SAMIVSTA",102,0)
 ;
"RTN","SAMIVSTA",103,0)
RADRESDT() ; Pull list of radiology residents from the VA server
"RTN","SAMIVSTA",104,0)
 goto RADRESDT^SAMIVST5
"RTN","SAMIVSTA",105,0)
 ;
"RTN","SAMIVSTA",106,0)
RADTECHS() ; Pull list of radiology techs from the VA server
"RTN","SAMIVSTA",107,0)
 goto RADTECHS^SAMIVST5
"RTN","SAMIVSTA",108,0)
 ;
"RTN","SAMIVSTA",109,0)
RADMODS() ; Pull radiology mods list from VA server
"RTN","SAMIVSTA",110,0)
 goto RADMODS^SAMIVST5
"RTN","SAMIVSTA",111,0)
 ;
"RTN","SAMIVSTA",112,0)
RADDXCDS() ; Pull radiology diagnostic codes from VA server
"RTN","SAMIVSTA",113,0)
 goto RADDXCDS^SAMIVST5
"RTN","SAMIVSTA",114,0)
 ;
"RTN","SAMIVSTA",115,0)
 ;
"RTN","SAMIVSTA",116,0)
EOR ; End of routine SAMIVSTA
"RTN","SAMIZ0")
0^92^B8266489
"RTN","SAMIZ0",1,0)
%wd ;ven/gpl-dataset: graphstore & table libraries ;2019-11-18T18:20Z
"RTN","SAMIZ0",2,0)
 ;;2;Mash;;;Build 1
"RTN","SAMIZ0",3,0)
 ;
"RTN","SAMIZ0",4,0)
 ; %wd is temporarily the interface routine for two dataset libraries.
"RTN","SAMIZ0",5,0)
 ; It supports a suite of tools for graphstore-format datasets, which
"RTN","SAMIZ0",6,0)
 ; will eventually be moved over to %d & %dg. It also supports tools
"RTN","SAMIZ0",7,0)
 ; for table-format datasets (specifically comma-separated-value or
"RTN","SAMIZ0",8,0)
 ; csv tables), which will be moved to %dt. Graphstores are Mash's
"RTN","SAMIZ0",9,0)
 ; primary dataset format.
"RTN","SAMIZ0",10,0)
 ; It is currently untested & in progress.
"RTN","SAMIZ0",11,0)
 ;
"RTN","SAMIZ0",12,0)
 quit  ; no entry from top
"RTN","SAMIZ0",13,0)
 ;
"RTN","SAMIZ0",14,0)
 ;
"RTN","SAMIZ0",15,0)
 ;
"RTN","SAMIZ0",16,0)
 ;@section 0 primary development
"RTN","SAMIZ0",17,0)
 ;
"RTN","SAMIZ0",18,0)
 ;
"RTN","SAMIZ0",19,0)
 ;
"RTN","SAMIZ0",20,0)
 ;@routine-credits
"RTN","SAMIZ0",21,0)
 ;@primary-dev: George P. Lilly (gpl)
"RTN","SAMIZ0",22,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIZ0",23,0)
 ;@primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIZ0",24,0)
 ; http://vistaexpertise.net
"RTN","SAMIZ0",25,0)
 ;@copyright: 2017/2019, gpl, all rights reserved
"RTN","SAMIZ0",26,0)
 ;@license: Apache 2.0
"RTN","SAMIZ0",27,0)
 ; https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIZ0",28,0)
 ;
"RTN","SAMIZ0",29,0)
 ;@last-updated: 2019-11-18T18:20Z
"RTN","SAMIZ0",30,0)
 ;@application: Mumps Advanced Shell (Mash)
"RTN","SAMIZ0",31,0)
 ;@module: Dataset - %d
"RTN","SAMIZ0",32,0)
 ;@submodule: Graphstore - %dg (still in %wdg)
"RTN","SAMIZ0",33,0)
 ;@submodule: Table - %dt
"RTN","SAMIZ0",34,0)
 ;@version: 2
"RTN","SAMIZ0",35,0)
 ;@release-date: not yet released
"RTN","SAMIZ0",36,0)
 ;@patch-list: none yet
"RTN","SAMIZ0",37,0)
 ;
"RTN","SAMIZ0",38,0)
 ;@additional-dev: Frederick D. S. Marshall (toad)
"RTN","SAMIZ0",39,0)
 ; toad@vistaexpertise.net
"RTN","SAMIZ0",40,0)
 ;
"RTN","SAMIZ0",41,0)
 ;@module-credits
"RTN","SAMIZ0",42,0)
 ;@primary-dev: George P. Lilly (gpl)
"RTN","SAMIZ0",43,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIZ0",44,0)
 ;@project: VA Partnership to Increase Access to Lung Screening
"RTN","SAMIZ0",45,0)
 ; (VA-PALS)
"RTN","SAMIZ0",46,0)
 ; http://va-pals.org/
"RTN","SAMIZ0",47,0)
 ;@funding: 2017, gpl
"RTN","SAMIZ0",48,0)
 ;@funding: 2017, ven
"RTN","SAMIZ0",49,0)
 ;@funding: 2017/2018, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMIZ0",50,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMIZ0",51,0)
 ;@partner-org: Veterans Affairs Office of Rural health
"RTN","SAMIZ0",52,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMIZ0",53,0)
 ;@partner-org: International Early Lung Cancer Action Program (I-ELCAP)
"RTN","SAMIZ0",54,0)
 ; http://ielcap.com/
"RTN","SAMIZ0",55,0)
 ;@partner-org: Paraxial Technologies
"RTN","SAMIZ0",56,0)
 ; http://paraxialtech.com/
"RTN","SAMIZ0",57,0)
 ;@partner-org: Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMIZ0",58,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMIZ0",59,0)
 ;
"RTN","SAMIZ0",60,0)
 ;@module-log
"RTN","SAMIZ0",61,0)
 ; 2017-09-24 ven/gpl %*1.8t01 %wd: create routine as ppi & api library.
"RTN","SAMIZ0",62,0)
 ;
"RTN","SAMIZ0",63,0)
 ; 2018-02-06 ven/toad %1.8t04 %wd: passim add white space & hdr comments,
"RTN","SAMIZ0",64,0)
 ; tag w/Apache license & attribution & to-do to shift to %sf later.
"RTN","SAMIZ0",65,0)
 ;
"RTN","SAMIZ0",66,0)
 ; 2019-11-17/18 ven/toad %*2 %wd: bump version, convert to ppi
"RTN","SAMIZ0",67,0)
 ; format, update header comments.
"RTN","SAMIZ0",68,0)
 ;
"RTN","SAMIZ0",69,0)
 ;@to-do
"RTN","SAMIZ0",70,0)
 ; renamespace under %d, %dg, & %dt
"RTN","SAMIZ0",71,0)
 ;
"RTN","SAMIZ0",72,0)
 ;@contents
"RTN","SAMIZ0",73,0)
 ; all private programming interfaces for now
"RTN","SAMIZ0",74,0)
 ; + one public web service
"RTN","SAMIZ0",75,0)
 ; later, some public apis & more web services
"RTN","SAMIZ0",76,0)
 ;
"RTN","SAMIZ0",77,0)
 ;
"RTN","SAMIZ0",78,0)
 ;
"RTN","SAMIZ0",79,0)
 ;@section 1 graph-handling ppis
"RTN","SAMIZ0",80,0)
 ;
"RTN","SAMIZ0",81,0)
 ;
"RTN","SAMIZ0",82,0)
 ;
"RTN","SAMIZ0",83,0)
 ;@ppi $$setroot^%wd, root of working storage
"RTN","SAMIZ0",84,0)
setroot(graph) goto setroot^%wdgraph
"RTN","SAMIZ0",85,0)
 ;
"RTN","SAMIZ0",86,0)
 ;
"RTN","SAMIZ0",87,0)
 ;
"RTN","SAMIZ0",88,0)
 ;@ppi $$rootOf^%wd, root of graph
"RTN","SAMIZ0",89,0)
rootOf(graph) goto rootOf^%wdgraph
"RTN","SAMIZ0",90,0)
 ;
"RTN","SAMIZ0",91,0)
 ;
"RTN","SAMIZ0",92,0)
 ;
"RTN","SAMIZ0",93,0)
 ;@ppi addgraph^%wd, create new graph
"RTN","SAMIZ0",94,0)
addgraph(graph) goto addgraph^%wdgraph
"RTN","SAMIZ0",95,0)
 ;
"RTN","SAMIZ0",96,0)
 ;
"RTN","SAMIZ0",97,0)
 ;
"RTN","SAMIZ0",98,0)
 ;@ppi $$purgegraph^%wd, delete graph
"RTN","SAMIZ0",99,0)
purgegraph(graph) goto purgegraph^%wdgraph
"RTN","SAMIZ0",100,0)
 ;
"RTN","SAMIZ0",101,0)
 ;
"RTN","SAMIZ0",102,0)
 ;
"RTN","SAMIZ0",103,0)
 ;@ppi insert2graph^%wd, insert new entry in graph
"RTN","SAMIZ0",104,0)
insert2graph(ary,graph,replace) goto insert2graph^%wdgraph
"RTN","SAMIZ0",105,0)
 ;
"RTN","SAMIZ0",106,0)
 ;
"RTN","SAMIZ0",107,0)
 ;
"RTN","SAMIZ0",108,0)
 ;@ppi $$nameThis^%wd, altname id
"RTN","SAMIZ0",109,0)
nameThis(altname) goto nameThis^%wdgraph
"RTN","SAMIZ0",110,0)
 ;
"RTN","SAMIZ0",111,0)
 ;
"RTN","SAMIZ0",112,0)
 ;
"RTN","SAMIZ0",113,0)
 ;@ppi getThis^%wd, find file & copy to array
"RTN","SAMIZ0",114,0)
getThis(rary,fn,nocache) goto getThis^%wdgraph
"RTN","SAMIZ0",115,0)
 ;
"RTN","SAMIZ0",116,0)
 ;
"RTN","SAMIZ0",117,0)
 ;
"RTN","SAMIZ0",118,0)
 ;@ppi beautify^%wd, pretty-print json
"RTN","SAMIZ0",119,0)
beautify(inary,outary) goto beautify^%wdgraph
"RTN","SAMIZ0",120,0)
 ;
"RTN","SAMIZ0",121,0)
 ;
"RTN","SAMIZ0",122,0)
 ;
"RTN","SAMIZ0",123,0)
 ;@ppi ary2file^%wd, copy array to file
"RTN","SAMIZ0",124,0)
ary2file(ary,dir,file) goto ary2file^%wdgraph
"RTN","SAMIZ0",125,0)
 ;
"RTN","SAMIZ0",126,0)
 ;
"RTN","SAMIZ0",127,0)
 ;
"RTN","SAMIZ0",128,0)
 ;@ppi file2ary^%wd, copy file to array
"RTN","SAMIZ0",129,0)
file2ary(ary,dir,file) goto file2ary^%wdgraph
"RTN","SAMIZ0",130,0)
 ;
"RTN","SAMIZ0",131,0)
 ;
"RTN","SAMIZ0",132,0)
 ;
"RTN","SAMIZ0",133,0)
 ;@wsi-code wsGetGraph^%wd, web service GET graph
"RTN","SAMIZ0",134,0)
wsGetGraph(return,filter) goto wsGetGraph^%wdgraph
"RTN","SAMIZ0",135,0)
 ;
"RTN","SAMIZ0",136,0)
 ;
"RTN","SAMIZ0",137,0)
 ;
"RTN","SAMIZ0",138,0)
 ;@section 2 csv-handling ppis
"RTN","SAMIZ0",139,0)
 ;
"RTN","SAMIZ0",140,0)
 ;
"RTN","SAMIZ0",141,0)
 ;
"RTN","SAMIZ0",142,0)
 ;@ppi-code csv2graph^%wd, import csv file to graph
"RTN","SAMIZ0",143,0)
csv2graph(source,graph) goto csv2graph^%wdcsv
"RTN","SAMIZ0",144,0)
 ;
"RTN","SAMIZ0",145,0)
 ;
"RTN","SAMIZ0",146,0)
 ;
"RTN","SAMIZ0",147,0)
 ;@ppi $$delim^%wd, calculate csv delimiter
"RTN","SAMIZ0",148,0)
delim(csvarray) goto delim^%wdcsv
"RTN","SAMIZ0",149,0)
 ;
"RTN","SAMIZ0",150,0)
 ;
"RTN","SAMIZ0",151,0)
 ;
"RTN","SAMIZ0",152,0)
 ;@ppi $$wellformed^%wd, is csv array well formed?
"RTN","SAMIZ0",153,0)
wellformed(ary,delim) goto wellformed^%wdcsv
"RTN","SAMIZ0",154,0)
 ;
"RTN","SAMIZ0",155,0)
 ;
"RTN","SAMIZ0",156,0)
 ;
"RTN","SAMIZ0",157,0)
eor ; end of routine %wd
"RTN","SAMIZ1")
0^93^B18756072
"RTN","SAMIZ1",1,0)
%wf ;ven/gpl-write form: development log ;2018-03-01T21:47Z
"RTN","SAMIZ1",2,0)
 ;;1.8;Mash;;;Build 1
"RTN","SAMIZ1",3,0)
 ;
"RTN","SAMIZ1",4,0)
 ; %wful is the Write Form Library's ppi & api routine. It supports getting
"RTN","SAMIZ1",5,0)
 ; & posting html forms, specifically the interface between an html form &
"RTN","SAMIZ1",6,0)
 ; a mumps graphstore.
"RTN","SAMIZ1",7,0)
 ; It is currently untested & in progress.
"RTN","SAMIZ1",8,0)
 ;
"RTN","SAMIZ1",9,0)
 quit  ; no entry from top
"RTN","SAMIZ1",10,0)
 ;
"RTN","SAMIZ1",11,0)
 ;
"RTN","SAMIZ1",12,0)
 ;
"RTN","SAMIZ1",13,0)
 ;@section 0 primary development: see routine %wful
"RTN","SAMIZ1",14,0)
 ;
"RTN","SAMIZ1",15,0)
 ;
"RTN","SAMIZ1",16,0)
 ;
"RTN","SAMIZ1",17,0)
 ;@routine-credits
"RTN","SAMIZ1",18,0)
 ;@primary-dev: George P. Lilly (gpl)
"RTN","SAMIZ1",19,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIZ1",20,0)
 ;@primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIZ1",21,0)
 ; http://vistaexpertise.net
"RTN","SAMIZ1",22,0)
 ;@copyright: 2017/2018, gpl, all rights reserved
"RTN","SAMIZ1",23,0)
 ;@license: Apache 2.0
"RTN","SAMIZ1",24,0)
 ; https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIZ1",25,0)
 ;
"RTN","SAMIZ1",26,0)
 ;@last-updated: 2018-03-01T21:47Z
"RTN","SAMIZ1",27,0)
 ;@application: Mumps Advanced Shell (Mash)
"RTN","SAMIZ1",28,0)
 ;@module: Write Form - %wf
"RTN","SAMIZ1",29,0)
 ;@version: 1.8T04
"RTN","SAMIZ1",30,0)
 ;@release-date: not yet released
"RTN","SAMIZ1",31,0)
 ;@patch-list: none yet
"RTN","SAMIZ1",32,0)
 ;
"RTN","SAMIZ1",33,0)
 ;@additional-dev: Frederick D. S. Marshall (toad)
"RTN","SAMIZ1",34,0)
 ; toad@vistaexpertise.net
"RTN","SAMIZ1",35,0)
 ;
"RTN","SAMIZ1",36,0)
 ;@to-do
"RTN","SAMIZ1",37,0)
 ; reroute %wfhform calls to other routines as it is broken up
"RTN","SAMIZ1",38,0)
 ;
"RTN","SAMIZ1",39,0)
 ;@contents
"RTN","SAMIZ1",40,0)
 ; API = application program interface, supported reference for SAMI
"RTN","SAMIZ1",41,0)
 ; ppi = private program interface for Mash
"RTN","SAMIZ1",42,0)
 ; ws = web service for Mash
"RTN","SAMIZ1",43,0)
 ;
"RTN","SAMIZ1",44,0)
 ;
"RTN","SAMIZ1",45,0)
 ;
"RTN","SAMIZ1",46,0)
 ;@section 1 wsGetForm^%wf web service & ppis
"RTN","SAMIZ1",47,0)
 ;
"RTN","SAMIZ1",48,0)
 ;
"RTN","SAMIZ1",49,0)
 ;
"RTN","SAMIZ1",50,0)
 ;@ws GET form/*, get html form
"RTN","SAMIZ1",51,0)
wsGetForm(rtn,filter,post) goto wsGetForm^%wfhform
"RTN","SAMIZ1",52,0)
 ;
"RTN","SAMIZ1",53,0)
 ;
"RTN","SAMIZ1",54,0)
 ;
"RTN","SAMIZ1",55,0)
 ;@section 2 wsGetForm^%wf support subroutines
"RTN","SAMIZ1",56,0)
 ;
"RTN","SAMIZ1",57,0)
 ;
"RTN","SAMIZ1",58,0)
 ;@ppi ; SAMIHTM^%wf retrieve SAMI html template for form
"RTN","SAMIZ1",59,0)
SAMIHTM(zhtml,form,err) goto SAMIHTM^%wfhform 
"RTN","SAMIZ1",60,0)
 ;
"RTN","SAMIZ1",61,0)
 ;@ppi MERGEHTM^%wf  merge vals into html template
"RTN","SAMIZ1",62,0)
MERGEHTM(zhtml,vals,err) goto MERGEHTM^%wfhform
"RTN","SAMIZ1",63,0)
 ;
"RTN","SAMIZ1",64,0)
 ;@ppi $$formLabel^%wf, label to use for form's post url
"RTN","SAMIZ1",65,0)
formLabel(form) goto formLabel^%wfhform
"RTN","SAMIZ1",66,0)
 ;
"RTN","SAMIZ1",67,0)
 ;
"RTN","SAMIZ1",68,0)
 ;@API $$getTemplate^%wf, get name of form's template
"RTN","SAMIZ1",69,0)
getTemplate(form) goto getTemplate^%wfhform
"RTN","SAMIZ1",70,0)
 ;
"RTN","SAMIZ1",71,0)
 ;
"RTN","SAMIZ1",72,0)
 ;
"RTN","SAMIZ1",73,0)
 ;@section 3 wsGetForm^%wf error handling
"RTN","SAMIZ1",74,0)
 ;
"RTN","SAMIZ1",75,0)
 ;
"RTN","SAMIZ1",76,0)
 ;
"RTN","SAMIZ1",77,0)
 ;@ppi redactErr^%wf, clear errors from form
"RTN","SAMIZ1",78,0)
redactErr(html,err,indx) goto redactErr^%wfhform
"RTN","SAMIZ1",79,0)
 ;
"RTN","SAMIZ1",80,0)
 ;
"RTN","SAMIZ1",81,0)
 ;@ppi redactErr2^%wf, redact field's error symbol
"RTN","SAMIZ1",82,0)
redactErr2(html,indx) goto redactErr2^%wfhform
"RTN","SAMIZ1",83,0)
 ;
"RTN","SAMIZ1",84,0)
 ;
"RTN","SAMIZ1",85,0)
 ;@test redactErr2^%wf [move to %wfut]
"RTN","SAMIZ1",86,0)
testRedactErr2 goto testRedactErr2^%wfhform
"RTN","SAMIZ1",87,0)
 ;
"RTN","SAMIZ1",88,0)
 ;
"RTN","SAMIZ1",89,0)
 ;@ppi putErrMsg2^%wf, insert error msgs
"RTN","SAMIZ1",90,0)
putErrMsg2(html,line,msg,err) goto putErrMsg2^%wfhform
"RTN","SAMIZ1",91,0)
 ;
"RTN","SAMIZ1",92,0)
 ;
"RTN","SAMIZ1",93,0)
 ;@ppi insError^%wf, insert error msg into html line
"RTN","SAMIZ1",94,0)
insError(line,msg) goto insError^%wfhform
"RTN","SAMIZ1",95,0)
 ;
"RTN","SAMIZ1",96,0)
 ;
"RTN","SAMIZ1",97,0)
 ;@ppi debugFld^%wf, insert field debugging info
"RTN","SAMIZ1",98,0)
debugFld(line,form,name) goto debugFld^%wfhform
"RTN","SAMIZ1",99,0)
 ;
"RTN","SAMIZ1",100,0)
 ;
"RTN","SAMIZ1",101,0)
 ;
"RTN","SAMIZ1",102,0)
 ;@section 4 wsGetForm^%wf text manipulation
"RTN","SAMIZ1",103,0)
 ;
"RTN","SAMIZ1",104,0)
 ;
"RTN","SAMIZ1",105,0)
 ;
"RTN","SAMIZ1",106,0)
 ;@ppi deleteBetween^%wf, find & delete text between 2 substrings
"RTN","SAMIZ1",107,0)
deleteBetween(line,before,after,replace) goto deleteBetween^%wfhfind
"RTN","SAMIZ1",108,0)
 ;
"RTN","SAMIZ1",109,0)
 ;
"RTN","SAMIZ1",110,0)
 ;
"RTN","SAMIZ1",111,0)
 ;@section 5 wsGetForm^%wf input value manipulation
"RTN","SAMIZ1",112,0)
 ;
"RTN","SAMIZ1",113,0)
 ;
"RTN","SAMIZ1",114,0)
 ;
"RTN","SAMIZ1",115,0)
 ;@ppi unvalue^%wf, clear input value in html line
"RTN","SAMIZ1",116,0)
unvalue(line) goto unvalue^%wfhform
"RTN","SAMIZ1",117,0)
 ;
"RTN","SAMIZ1",118,0)
 ;
"RTN","SAMIZ1",119,0)
 ;@ppi value^%wf, set input value in html line
"RTN","SAMIZ1",120,0)
value(line,val) goto value^%wfhform
"RTN","SAMIZ1",121,0)
 ;
"RTN","SAMIZ1",122,0)
 ;
"RTN","SAMIZ1",123,0)
 ;@ppi getVals^%wf, get field values from graph
"RTN","SAMIZ1",124,0)
getVals(vrtn,zid,zsid) goto getVals^%wfhform
"RTN","SAMIZ1",125,0)
 ;
"RTN","SAMIZ1",126,0)
 ;
"RTN","SAMIZ1",127,0)
 ;@ppi setVals^%wf, set field values into graph
"RTN","SAMIZ1",128,0)
setVals(vary,zid,zsid) goto setVals^%wfhform
"RTN","SAMIZ1",129,0)
 ;
"RTN","SAMIZ1",130,0)
 ;
"RTN","SAMIZ1",131,0)
 ;
"RTN","SAMIZ1",132,0)
 ;@section 6 input tag processing
"RTN","SAMIZ1",133,0)
 ;
"RTN","SAMIZ1",134,0)
 ;
"RTN","SAMIZ1",135,0)
 ;
"RTN","SAMIZ1",136,0)
 ;@ppi $$type^%wf, input type
"RTN","SAMIZ1",137,0)
type(line) goto type^%wfhinput
"RTN","SAMIZ1",138,0)
 ;
"RTN","SAMIZ1",139,0)
 ;
"RTN","SAMIZ1",140,0)
 ;@ppi uncheck^%wf, uncheck radio button or checkbox
"RTN","SAMIZ1",141,0)
uncheck(line) goto uncheck^%wfhinput
"RTN","SAMIZ1",142,0)
 ;
"RTN","SAMIZ1",143,0)
 ;
"RTN","SAMIZ1",144,0)
 ;@ppi check^%wf, check radio button or checkbox
"RTN","SAMIZ1",145,0)
check(line,type) goto check^%wfhinput
"RTN","SAMIZ1",146,0)
 ;
"RTN","SAMIZ1",147,0)
 ;
"RTN","SAMIZ1",148,0)
 ;
"RTN","SAMIZ1",149,0)
 ;@section 7 wsGetForm^%wf field validation
"RTN","SAMIZ1",150,0)
 ;
"RTN","SAMIZ1",151,0)
 ;
"RTN","SAMIZ1",152,0)
 ;
"RTN","SAMIZ1",153,0)
 ;@ppi $$validate^%wf, validate value
"RTN","SAMIZ1",154,0)
validate(value,spec,map,msg) goto validate^%wfhform
"RTN","SAMIZ1",155,0)
 ;
"RTN","SAMIZ1",156,0)
 ;
"RTN","SAMIZ1",157,0)
 ;@ppi $$dateValid^%wf, validate date
"RTN","SAMIZ1",158,0)
dateValid(value,spec,map,msg) goto dateValid^%wfhform
"RTN","SAMIZ1",159,0)
 ;
"RTN","SAMIZ1",160,0)
 ;
"RTN","SAMIZ1",161,0)
 ;@ppi $$textValid^%wf, validate free-text field
"RTN","SAMIZ1",162,0)
textValid(value,spec,map) goto textValid^%wfhform
"RTN","SAMIZ1",163,0)
 ;
"RTN","SAMIZ1",164,0)
 ;
"RTN","SAMIZ1",165,0)
 ;@ppi $$numValid^%wf, validate numeric field
"RTN","SAMIZ1",166,0)
numValid(value,spec,map) goto numValid^%wfhform
"RTN","SAMIZ1",167,0)
 ;
"RTN","SAMIZ1",168,0)
 ;
"RTN","SAMIZ1",169,0)
 ;@ppi $$dateFormat^%wf, date in elcap format
"RTN","SAMIZ1",170,0)
dateFormat(val,form,name) goto dateFormat^%wfhform
"RTN","SAMIZ1",171,0)
 ;
"RTN","SAMIZ1",172,0)
 ;
"RTN","SAMIZ1",173,0)
 ;
"RTN","SAMIZ1",174,0)
 ;@section 8 wsPostForm^%wf web service & parseBody ppi
"RTN","SAMIZ1",175,0)
 ;
"RTN","SAMIZ1",176,0)
 ;
"RTN","SAMIZ1",177,0)
 ;
"RTN","SAMIZ1",178,0)
 ;@ws POST form/*, submit HTML form
"RTN","SAMIZ1",179,0)
wsPostForm(ARGS,BODY,RESULT) goto wsPostForm^%wfhform
"RTN","SAMIZ1",180,0)
 ;
"RTN","SAMIZ1",181,0)
 ;
"RTN","SAMIZ1",182,0)
 ;@ppi parseBody^%wf, get field values from form
"RTN","SAMIZ1",183,0)
parseBody(rtn,body) goto parseBody^%wfhform
"RTN","SAMIZ1",184,0)
 ;
"RTN","SAMIZ1",185,0)
 ;
"RTN","SAMIZ1",186,0)
 ;
"RTN","SAMIZ1",187,0)
 ;@section 9 commented-out procedures
"RTN","SAMIZ1",188,0)
 ;
"RTN","SAMIZ1",189,0)
 ;
"RTN","SAMIZ1",190,0)
 ;
"RTN","SAMIZ1",191,0)
 ;@ppi replaceSrc^%wf, chg resources in src & href
"RTN","SAMIZ1",192,0)
replaceSrc(line) goto replaceSrc^%wfhform
"RTN","SAMIZ1",193,0)
 ;
"RTN","SAMIZ1",194,0)
 ;
"RTN","SAMIZ1",195,0)
 ;@ppi replaceHref^%wf, chg resources in href
"RTN","SAMIZ1",196,0)
replaceHref(line) goto replaceHref^%wfhform
"RTN","SAMIZ1",197,0)
 ;
"RTN","SAMIZ1",198,0)
 ;
"RTN","SAMIZ1",199,0)
 ;
"RTN","SAMIZ1",200,0)
 ;@section 10 %wffmap form mapping ppi
"RTN","SAMIZ1",201,0)
 ;
"RTN","SAMIZ1",202,0)
 ;
"RTN","SAMIZ1",203,0)
 ;
"RTN","SAMIZ1",204,0)
 ;@ppi importfmap^%wf, import map from csv
"RTN","SAMIZ1",205,0)
importfmap(csvname,form) goto importfmap^%wffmap
"RTN","SAMIZ1",206,0)
 ;
"RTN","SAMIZ1",207,0)
 ;
"RTN","SAMIZ1",208,0)
 ;
"RTN","SAMIZ1",209,0)
eor ; end of routine %wf
"RTN","SAMIZ2")
0^94^B913574471
"RTN","SAMIZ2",1,0)
%wfhform ;ven/gpl-web form: html form get & post ;2019-04-24T00:53Z
"RTN","SAMIZ2",2,0)
 ;;1.8;Mash;;;Build 1
"RTN","SAMIZ2",3,0)
 ;
"RTN","SAMIZ2",4,0)
 ; %wfhform implements the Web Form Library's html form get & post web
"RTN","SAMIZ2",5,0)
 ; services. It will be broken up into many routines & further annotated.
"RTN","SAMIZ2",6,0)
 ; See %wfut* for the unit tests for these methods.
"RTN","SAMIZ2",7,0)
 ; See %wfut for the whole unit-test library.
"RTN","SAMIZ2",8,0)
 ; See %wfud for documentation introducing the Web Form Lbrary,
"RTN","SAMIZ2",9,0)
 ; including an intro to the HTML Form Library.
"RTN","SAMIZ2",10,0)
 ; See %wful for the module's primary-development log.
"RTN","SAMIZ2",11,0)
 ; See %wf for the module's ppis & apis.
"RTN","SAMIZ2",12,0)
 ; %wfhform contains no public entry points.
"RTN","SAMIZ2",13,0)
 ; It is currently untested & in progress.
"RTN","SAMIZ2",14,0)
 ;
"RTN","SAMIZ2",15,0)
 quit  ; no entry from top
"RTN","SAMIZ2",16,0)
 ;
"RTN","SAMIZ2",17,0)
 ;
"RTN","SAMIZ2",18,0)
 ;
"RTN","SAMIZ2",19,0)
 ;@section 0 primary development: see routine %wful
"RTN","SAMIZ2",20,0)
 ;
"RTN","SAMIZ2",21,0)
 ;
"RTN","SAMIZ2",22,0)
 ;
"RTN","SAMIZ2",23,0)
 ;@routine-credits
"RTN","SAMIZ2",24,0)
 ;@primary-dev: George P. Lilly (gpl)
"RTN","SAMIZ2",25,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIZ2",26,0)
 ;@primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIZ2",27,0)
 ; http://vistaexpertise.net
"RTN","SAMIZ2",28,0)
 ;@copyright: 2017/2018, gpl, all rights reserved
"RTN","SAMIZ2",29,0)
 ;@license: Apache 2.0
"RTN","SAMIZ2",30,0)
 ; https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIZ2",31,0)
 ;
"RTN","SAMIZ2",32,0)
 ;@last-updated: 2019-04-24T00:53Z
"RTN","SAMIZ2",33,0)
 ;@application: Mumps Advanced Shell (Mash)
"RTN","SAMIZ2",34,0)
 ;@module: Web Form - %wf
"RTN","SAMIZ2",35,0)
 ;@version: 1.8T04
"RTN","SAMIZ2",36,0)
 ;@release-date: not yet released
"RTN","SAMIZ2",37,0)
 ;@patch-list: none yet
"RTN","SAMIZ2",38,0)
 ;
"RTN","SAMIZ2",39,0)
 ;@additional-dev: Frederick D. S. Marshall (toad)
"RTN","SAMIZ2",40,0)
 ; toad@vistaexpertise.net
"RTN","SAMIZ2",41,0)
 ;@additional-dev: Linda M. R. Yaw (lmry)
"RTN","SAMIZ2",42,0)
 ; linda.yaw@vistaexpertise.net
"RTN","SAMIZ2",43,0)
 ;
"RTN","SAMIZ2",44,0)
 ;@to-do
"RTN","SAMIZ2",45,0)
 ; break up into smaller routines & change branches from %wf
"RTN","SAMIZ2",46,0)
 ;
"RTN","SAMIZ2",47,0)
 ;@contents
"RTN","SAMIZ2",48,0)
 ; [too big, break up]
"RTN","SAMIZ2",49,0)
 ;
"RTN","SAMIZ2",50,0)
 ;
"RTN","SAMIZ2",51,0)
 ;
"RTN","SAMIZ2",52,0)
 ;@section 1 wsGetForm^%wf web service & ppis
"RTN","SAMIZ2",53,0)
 ;
"RTN","SAMIZ2",54,0)
 ;
"RTN","SAMIZ2",55,0)
 ;
"RTN","SAMIZ2",56,0)
wsGetForm ; code for wsGetForm^%wf, get html form
"RTN","SAMIZ2",57,0)
 ;
"RTN","SAMIZ2",58,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",59,0)
 ;
"RTN","SAMIZ2",60,0)
 ;ven/gpl;web service;procedure;
"RTN","SAMIZ2",61,0)
 ;@signature
"RTN","SAMIZ2",62,0)
 ; do wsGetForm^%wf(.rtn,.filter,post)
"RTN","SAMIZ2",63,0)
 ;@branches-from
"RTN","SAMIZ2",64,0)
 ; wsGetForm^%wf
"RTN","SAMIZ2",65,0)
 ;@ws-called-by
"RTN","SAMIZ2",66,0)
 ; web service %wf-wsGetForm
"RTN","SAMIZ2",67,0)
 ; wsNuFormPost^SAMICASE
"RTN","SAMIZ2",68,0)
 ;@called-by: none
"RTN","SAMIZ2",69,0)
 ;@calls
"RTN","SAMIZ2",70,0)
 ; getVals^%wf
"RTN","SAMIZ2",71,0)
 ; retrieve^%wffiler
"RTN","SAMIZ2",72,0)
 ; $$getTemplate^%wf
"RTN","SAMIZ2",73,0)
 ; getThis^%wd
"RTN","SAMIZ2",74,0)
 ; $$lowcase^%ts
"RTN","SAMIZ2",75,0)
 ; SAMISUBS^SAMIFRM
"RTN","SAMIZ2",76,0)
 ; LOAD^SAMIFRM
"RTN","SAMIZ2",77,0)
 ; redactErr^%wf
"RTN","SAMIZ2",78,0)
 ; redactErr2^%wf
"RTN","SAMIZ2",79,0)
 ; $$formLabel^%wf
"RTN","SAMIZ2",80,0)
 ; $$replaceSrc^%wf [commented out]
"RTN","SAMIZ2",81,0)
 ; $$replaceHref^%wf [commented out]
"RTN","SAMIZ2",82,0)
 ; uncheck^%wf
"RTN","SAMIZ2",83,0)
 ; check^%wf
"RTN","SAMIZ2",84,0)
 ; debugFld^%wf
"RTN","SAMIZ2",85,0)
 ; unvalue^%wf
"RTN","SAMIZ2",86,0)
 ; $$URLENC^VPRJRUT
"RTN","SAMIZ2",87,0)
 ; findReplace^%ts
"RTN","SAMIZ2",88,0)
 ; dateFormat^%wf
"RTN","SAMIZ2",89,0)
 ; value^%wf
"RTN","SAMIZ2",90,0)
 ; $$getFieldSpec^%wffmap
"RTN","SAMIZ2",91,0)
 ; $$validate^%wf
"RTN","SAMIZ2",92,0)
 ; putErrMsg2^%wf
"RTN","SAMIZ2",93,0)
 ; insError^%wf
"RTN","SAMIZ2",94,0)
 ;@input
"RTN","SAMIZ2",95,0)
 ;.filter = 
"RTN","SAMIZ2",96,0)
 ; filter("form")=form id
"RTN","SAMIZ2",97,0)
 ; filter("studyId")=study id
"RTN","SAMIZ2",98,0)
 ; post = 1 if ...
"RTN","SAMIZ2",99,0)
 ;@output
"RTN","SAMIZ2",100,0)
 ;.rtn = name of root containing returned html (the prepared form)
"RTN","SAMIZ2",101,0)
 ;@throughput: none
"RTN","SAMIZ2",102,0)
 ;@examples [tbd]
"RTN","SAMIZ2",103,0)
 ;@tests [tbd]
"RTN","SAMIZ2",104,0)
 ;
"RTN","SAMIZ2",105,0)
 ; [description tbd]
"RTN","SAMIZ2",106,0)
 ; return the html for the form id, passed in filter
"RTN","SAMIZ2",107,0)
 ;
"RTN","SAMIZ2",108,0)
 ;@stanza 2 load saved field values from graph
"RTN","SAMIZ2",109,0)
 ;
"RTN","SAMIZ2",110,0)
 new form set form=$get(filter("form")) ; id form
"RTN","SAMIZ2",111,0)
 if form="" set form="sbform"
"RTN","SAMIZ2",112,0)
 ;
"RTN","SAMIZ2",113,0)
 new sid set sid=$get(filter("studyid")) ; id patient by study id
"RTN","SAMIZ2",114,0)
 if sid="" set sid=$get(filter("fvalue"))
"RTN","SAMIZ2",115,0)
 if sid="" set sid="XXXX01"
"RTN","SAMIZ2",116,0)
 ;
"RTN","SAMIZ2",117,0)
 new key set key=$get(filter("key")) ; graph key for the saved form
"RTN","SAMIZ2",118,0)
 if key="" set key=form
"RTN","SAMIZ2",119,0)
 if key["vapals:" set key=$piece(key,"vapals:",2)
"RTN","SAMIZ2",120,0)
 if form["vapals:" set form=$piece(form,"-",1)
"RTN","SAMIZ2",121,0)
 ;
"RTN","SAMIZ2",122,0)
 new vals
"RTN","SAMIZ2",123,0)
 do getVals^%wf("vals",key,sid) ; load saved field values
"RTN","SAMIZ2",124,0)
 ;
"RTN","SAMIZ2",125,0)
 ;@stanza 3 load html template
"RTN","SAMIZ2",126,0)
 ;
"RTN","SAMIZ2",127,0)
 ; clear return html array
"RTN","SAMIZ2",128,0)
 set rtn=$name(^TMP("yottaForm",$job))
"RTN","SAMIZ2",129,0)
 kill @rtn
"RTN","SAMIZ2",130,0)
 ;
"RTN","SAMIZ2",131,0)
 ; get html template
"RTN","SAMIZ2",132,0)
 new zhtml,err ; holders of html template and error return array
"RTN","SAMIZ2",133,0)
 ;
"RTN","SAMIZ2",134,0)
 do SAMIHTM^%wf(.zhtml,form,.err) ; get the html template
"RTN","SAMIZ2",135,0)
 ;
"RTN","SAMIZ2",136,0)
 do MERGEHTM^%wf(.zhtml,.vals,.err) ; merge the values into the template
"RTN","SAMIZ2",137,0)
 ;
"RTN","SAMIZ2",138,0)
 merge @rtn=zhtml ; copy processed template to return array
"RTN","SAMIZ2",139,0)
 ;
"RTN","SAMIZ2",140,0)
 set HTTPRSP("mime")="text/html" ; set mime type
"RTN","SAMIZ2",141,0)
 ;
"RTN","SAMIZ2",142,0)
 ;@stanza 3 termination
"RTN","SAMIZ2",143,0)
 ;
"RTN","SAMIZ2",144,0)
 quit  ; end of wsGetForm^%wf
"RTN","SAMIZ2",145,0)
 ;
"RTN","SAMIZ2",146,0)
SAMIHTM ; retrieve SAMI html template for form
"RTN","SAMIZ2",147,0)
 ;SAMIHTM(zhtml,form,err) 
"RTN","SAMIZ2",148,0)
 ; zhtml and passed by reference. form passed by value
"RTN","SAMIZ2",149,0)
 ;
"RTN","SAMIZ2",150,0)
 ; lookup template name
"RTN","SAMIZ2",151,0)
 new fn set fn=$$getTemplate^%wf(form)
"RTN","SAMIZ2",152,0)
 if fn="" do  quit  ;
"RTN","SAMIZ2",153,0)
 . set err(1)="File name not found. Form="_form
"RTN","SAMIZ2",154,0)
 ;
"RTN","SAMIZ2",155,0)
 ; load template html
"RTN","SAMIZ2",156,0)
 ;
"RTN","SAMIZ2",157,0)
 do getThis^%wd("zhtml",fn)
"RTN","SAMIZ2",158,0)
 if '$data(zhtml) do  quit  ;
"RTN","SAMIZ2",159,0)
 . set err(1)="Html not found. Filename="_fn
"RTN","SAMIZ2",160,0)
 ;
"RTN","SAMIZ2",161,0)
 quit
"RTN","SAMIZ2",162,0)
 ;
"RTN","SAMIZ2",163,0)
MERGEHTM ; merge vals into html template
"RTN","SAMIZ2",164,0)
 ;MERGEHTM(zhtml,vals,err) ; merge vals into html template
"RTN","SAMIZ2",165,0)
 ; zhtml,vals, and err passed by reference
"RTN","SAMIZ2",166,0)
 ;
"RTN","SAMIZ2",167,0)
 ;@stanza 4 traverse html lines in template, for each ...
"RTN","SAMIZ2",168,0)
 ;
"RTN","SAMIZ2",169,0)
 new name,value,selectnm
"RTN","SAMIZ2",170,0)
 set selectnm="" ; name of select variable, which spans options
"RTN","SAMIZ2",171,0)
 new %j set %j=""
"RTN","SAMIZ2",172,0)
 for  set %j=$order(zhtml(%j)) quit:%j=""  do  ;
"RTN","SAMIZ2",173,0)
 . new tln set tln=zhtml(%j)
"RTN","SAMIZ2",174,0)
 . set tln("low")=$$lowcase^%ts(tln) ; lowercase for checks
"RTN","SAMIZ2",175,0)
 . new customscan set customscan=""
"RTN","SAMIZ2",176,0)
 . ;
"RTN","SAMIZ2",177,0)
 . new newstyle set newstyle=0
"RTN","SAMIZ2",178,0)
 . if form["vapals:" set newstyle=1
"RTN","SAMIZ2",179,0)
 . if newstyle=1 do
"RTN","SAMIZ2",180,0)
 . . do LOAD^SAMIFORM(.tln,$g(key),$g(sid),.filter,.%j,.zhtml,.vals)
"RTN","SAMIZ2",181,0)
 . . quit
"RTN","SAMIZ2",182,0)
 . if newstyle=0 do SAMISUBS^SAMIFRM(.tln,form,sid,.filter)
"RTN","SAMIZ2",183,0)
 . set zhtml(%j)=tln
"RTN","SAMIZ2",184,0)
 . ;
"RTN","SAMIZ2",185,0)
 . if tln["submit" quit  ;
"RTN","SAMIZ2",186,0)
 . if tln["hidden" do  quit  ; we need to try and process hidden fields
"RTN","SAMIZ2",187,0)
 . . if tln'["type" quit  ; probably in a javascript statement
"RTN","SAMIZ2",188,0)
 . . if tln'["context" quit  ; not marked for restoring
"RTN","SAMIZ2",189,0)
 . . if tln'["server" quit  ; not marked for restoring
"RTN","SAMIZ2",190,0)
 . . new hname set hname=""
"RTN","SAMIZ2",191,0)
 . . if tln["name=" do  ;
"RTN","SAMIZ2",192,0)
 . . . set hname=$piece($piece(tln,"name=""",2),"""")
"RTN","SAMIZ2",193,0)
 . . . quit
"RTN","SAMIZ2",194,0)
 . . quit:hname=""
"RTN","SAMIZ2",195,0)
 . . new hval set hval=$get(vals(hname)) ; saved value of the hidden field
"RTN","SAMIZ2",196,0)
 . . quit:hval=""
"RTN","SAMIZ2",197,0)
 . . do unvalue^%wf(.tln)
"RTN","SAMIZ2",198,0)
 . . do value^%wf(.tln,hval)
"RTN","SAMIZ2",199,0)
 . . set zhtml(%j)=tln
"RTN","SAMIZ2",200,0)
 . . quit
"RTN","SAMIZ2",201,0)
 . ;
"RTN","SAMIZ2",202,0)
 . ;
"RTN","SAMIZ2",203,0)
 . ;@stanza 6 process errors
"RTN","SAMIZ2",204,0)
 . ;
"RTN","SAMIZ2",205,0)
 . new errctrl ; for holding error control array
"RTN","SAMIZ2",206,0)
 . ;
"RTN","SAMIZ2",207,0)
 . if tln["class=""errormsg"">" do  quit  ; error block at top of form
"RTN","SAMIZ2",208,0)
 . . do redactErr^%wf("zhtml","errctrl",.%j) ; remove error section
"RTN","SAMIZ2",209,0)
 . . quit
"RTN","SAMIZ2",210,0)
 . ;
"RTN","SAMIZ2",211,0)
 . if tln["fielderr" do  ; error messages w/fields
"RTN","SAMIZ2",212,0)
 . . do redactErr2^%wf("zhtml",.%j)
"RTN","SAMIZ2",213,0)
 . . quit
"RTN","SAMIZ2",214,0)
 . ;
"RTN","SAMIZ2",215,0)
 . ;@stanza 7 process field name or value
"RTN","SAMIZ2",216,0)
 . ;
"RTN","SAMIZ2",217,0)
 . set (name,value)=""
"RTN","SAMIZ2",218,0)
 . ;
"RTN","SAMIZ2",219,0)
 . if zhtml(%j)["name=" do  ;
"RTN","SAMIZ2",220,0)
 . . set name=$piece($piece(zhtml(%j),"name=""",2),"""")
"RTN","SAMIZ2",221,0)
 . . ; write !,"found name ",name
"RTN","SAMIZ2",222,0)
 . . quit
"RTN","SAMIZ2",223,0)
 . ;
"RTN","SAMIZ2",224,0)
 . if zhtml(%j)["value=" do  ;
"RTN","SAMIZ2",225,0)
 . . set value=$piece($piece(zhtml(%j),"value=""",2),"""")
"RTN","SAMIZ2",226,0)
 . . quit
"RTN","SAMIZ2",227,0)
 . ;
"RTN","SAMIZ2",228,0)
 . ;@stanza 8 process study id [asterisks in Ken's 1st draft]
"RTN","SAMIZ2",229,0)
 . ;
"RTN","SAMIZ2",230,0)
 . if zhtml(%j)["*sbsid*" do  ;
"RTN","SAMIZ2",231,0)
 . . set zhtml(%j)=$piece(tln,"*sbsid*")_sid_$piece(tln,"*sbsid*",2)
"RTN","SAMIZ2",232,0)
 . . quit
"RTN","SAMIZ2",233,0)
 . ;
"RTN","SAMIZ2",234,0)
 . ;@stanza 9 process action
"RTN","SAMIZ2",235,0)
 . ;
"RTN","SAMIZ2",236,0)
 . if zhtml(%j)["action=" do  ;
"RTN","SAMIZ2",237,0)
 . . ; set zhtml(%j)="<form action=""http://vendev.vistaplex.org:9080/postform?form="_form_"&studyId="_sid_""" method=""POST"" id=""backgroundForm"">"
"RTN","SAMIZ2",238,0)
 . . new sublbl set sublbl=$$formLabel^%wf(form)
"RTN","SAMIZ2",239,0)
 . . new dbg set dbg=$get(filter("debug"))
"RTN","SAMIZ2",240,0)
 . . if dbg'="" set dbg="&debug="_dbg
"RTN","SAMIZ2",241,0)
 . . ;
"RTN","SAMIZ2",242,0)
 . . quit
"RTN","SAMIZ2",243,0)
 . ;
"RTN","SAMIZ2",244,0)
 . ;@stanza 11 skip table declarations
"RTN","SAMIZ2",245,0)
 . ;
"RTN","SAMIZ2",246,0)
 . if tln["table" quit  ;
"RTN","SAMIZ2",247,0)
 . ;
"RTN","SAMIZ2",248,0)
 . ;@stanza 12 process input tags
"RTN","SAMIZ2",249,0)
 . ;
"RTN","SAMIZ2",250,0)
 . if zhtml(%j)["<input" do  ;
"RTN","SAMIZ2",251,0)
 . . ;b
"RTN","SAMIZ2",252,0)
 . . ;
"RTN","SAMIZ2",253,0)
 . . ; handle long lines
"RTN","SAMIZ2",254,0)
 . . if $length(zhtml(%j),"<input")>2 do  ; got to split the lines
"RTN","SAMIZ2",255,0)
 . . . new zgt,zgn set zgt=zhtml(%j)
"RTN","SAMIZ2",256,0)
 . . . set zgn=$find(zgt,"<input",$find(zgt,"<input"))
"RTN","SAMIZ2",257,0)
 . . . set zhtml(%j+.001)=$extract(zgt,zgn-6,$length(zgt))
"RTN","SAMIZ2",258,0)
 . . . set zhtml(%j)=$extract(zgt,1,zgn-7)
"RTN","SAMIZ2",259,0)
 . . . set tln=zhtml(%j)
"RTN","SAMIZ2",260,0)
 . . . quit
"RTN","SAMIZ2",261,0)
 . . ;
"RTN","SAMIZ2",262,0)
 . . ; save field value
"RTN","SAMIZ2",263,0)
 . . quit:$get(name)=""
"RTN","SAMIZ2",264,0)
 . . new val set val=""
"RTN","SAMIZ2",265,0)
 . . if $data(vals(name)) set val=vals(name)
"RTN","SAMIZ2",266,0)
 . . ;
"RTN","SAMIZ2",267,0)
 . . ; process radio buttons & checkboxes
"RTN","SAMIZ2",268,0)
 . . new type set type=$$type^%wf(tln("low")) ; get input type
"RTN","SAMIZ2",269,0)
 . . if type="radio"!(type="checkbox") do  quit  ; treat the same
"RTN","SAMIZ2",270,0)
 . . . do uncheck^%wf(.tln)
"RTN","SAMIZ2",271,0)
 . . . if $get(val)=$get(value) do check^%wf(.tln,type)
"RTN","SAMIZ2",272,0)
 . . . if $get(filter("debug"))=2 do debugFld^%wf(.tln,form,name)
"RTN","SAMIZ2",273,0)
 . . . set zhtml(%j)=tln ; r/template line w/processed line
"RTN","SAMIZ2",274,0)
 . . . quit
"RTN","SAMIZ2",275,0)
 . . ;
"RTN","SAMIZ2",276,0)
 . . ; clear value, normalize quotes & dates, restore value
"RTN","SAMIZ2",277,0)
 . . do unvalue^%wf(.tln) ; clear input-field value
"RTN","SAMIZ2",278,0)
 . . ; set val=$$URLENC^VPRJRUT(val)
"RTN","SAMIZ2",279,0)
 . . ; replace with findReplaceAll call?:
"RTN","SAMIZ2",280,0)
 . . for  do findReplace^%ts(.val,"""","&quot;") quit:val'[""""  ; quotes
"RTN","SAMIZ2",281,0)
 . . do dateFormat^%wf(.val,form,name) ; ensure elcap date format
"RTN","SAMIZ2",282,0)
 . . do value^%wf(.tln,val) ; restore normalized value
"RTN","SAMIZ2",283,0)
 . . ;
"RTN","SAMIZ2",284,0)
 . . ; input-field validation
"RTN","SAMIZ2",285,0)
 . . new spec,errmsg set spec=$$getFieldSpec^%wffmap(form,name)
"RTN","SAMIZ2",286,0)
 . . set errmsg="Input invalid"
"RTN","SAMIZ2",287,0)
 . . if val]"" do  ;
"RTN","SAMIZ2",288,0)
 . . . if $$validate^%wf(val,spec,,.errmsg)<1 do  ;
"RTN","SAMIZ2",289,0)
 . . . . set errflag=1
"RTN","SAMIZ2",290,0)
 . . . . new errmethod set errmethod=2
"RTN","SAMIZ2",291,0)
 . . . . if errmethod=2 do  ;
"RTN","SAMIZ2",292,0)
 . . . . . new tprevln,uln
"RTN","SAMIZ2",293,0)
 . . . . . set uln=(%j-1)
"RTN","SAMIZ2",294,0)
 . . . . . set tprevln=zhtml(uln)
"RTN","SAMIZ2",295,0)
 . . . . . if tprevln'["fielderror" set tprevln=zhtml(%j-2) set uln=%j-2
"RTN","SAMIZ2",296,0)
 . . . . . do putErrMsg2^%wf("zhtml",.tprevln,.errmsg,"errctrl")
"RTN","SAMIZ2",297,0)
 . . . . . set zhtml(uln)=tprevln
"RTN","SAMIZ2",298,0)
 . . . . . quit
"RTN","SAMIZ2",299,0)
 . . . . if errmethod=1 do insError^%wf(.tln,.errmsg)
"RTN","SAMIZ2",300,0)
 . . . . quit
"RTN","SAMIZ2",301,0)
 . . . quit
"RTN","SAMIZ2",302,0)
 . . ;
"RTN","SAMIZ2",303,0)
 . . ; [optionally debug & r/html template line w/processed line
"RTN","SAMIZ2",304,0)
 . . ; write !,tln,!,zhtml(%j),! break
"RTN","SAMIZ2",305,0)
 . . if $get(filter("debug"))>0 do debugFld^%wf(.tln,form,name)
"RTN","SAMIZ2",306,0)
 . . set zhtml(%j)=tln
"RTN","SAMIZ2",307,0)
 . . quit
"RTN","SAMIZ2",308,0)
 . ;
"RTN","SAMIZ2",309,0)
 . ;@stanza 13 process text areas
"RTN","SAMIZ2",310,0)
 . ;
"RTN","SAMIZ2",311,0)
 . if zhtml(%j)["<textarea" do  ;
"RTN","SAMIZ2",312,0)
 . . new val set val=""
"RTN","SAMIZ2",313,0)
 . . quit:$get(name)=""
"RTN","SAMIZ2",314,0)
 . . set val=$get(vals(name))
"RTN","SAMIZ2",315,0)
 . . ; set val=$get(vals(name))
"RTN","SAMIZ2",316,0)
 . . ; set val=$$URLENC^VPRJRUT(val)
"RTN","SAMIZ2",317,0)
 . . if val'="" do
"RTN","SAMIZ2",318,0)
 . . . do findReplace^%ts(.tln,"</textarea>",val_"</textarea>")
"RTN","SAMIZ2",319,0)
 . . . quit
"RTN","SAMIZ2",320,0)
 . . set zhtml(%j)=tln
"RTN","SAMIZ2",321,0)
 . . quit
"RTN","SAMIZ2",322,0)
 . ;
"RTN","SAMIZ2",323,0)
 . ;@stanza 14 process option selections
"RTN","SAMIZ2",324,0)
 . ;
"RTN","SAMIZ2",325,0)
 . if zhtml(%j)["<select" do  ;
"RTN","SAMIZ2",326,0)
 . . set selectnm=$get(name)
"RTN","SAMIZ2",327,0)
 . . quit
"RTN","SAMIZ2",328,0)
 . if zhtml(%j)["</select" do  ;
"RTN","SAMIZ2",329,0)
 . . set selectnm=""
"RTN","SAMIZ2",330,0)
 . . quit
"RTN","SAMIZ2",331,0)
 . if zhtml(%j)["<option" do  ;
"RTN","SAMIZ2",332,0)
 . . quit:selectnm=""
"RTN","SAMIZ2",333,0)
 . . set val=$get(vals(selectnm))
"RTN","SAMIZ2",334,0)
 . . do findReplace^%ts(.tln," selected","") ; unselect
"RTN","SAMIZ2",335,0)
 . . if $get(toad)="*****DEBUG*****",value="gd" break ; debug problem w/options
"RTN","SAMIZ2",336,0)
 . . if $g(val)=$get(value) do
"RTN","SAMIZ2",337,0)
 . . . do findReplace^%ts(.tln,"<option ","<option selected ")
"RTN","SAMIZ2",338,0)
 . . . quit
"RTN","SAMIZ2",339,0)
 . . if $get(filter("debug"))=2 do debugFld^%wf(.tln,form,name)
"RTN","SAMIZ2",340,0)
 . . set zhtml(%j)=tln
"RTN","SAMIZ2",341,0)
 . . quit
"RTN","SAMIZ2",342,0)
 . quit
"RTN","SAMIZ2",343,0)
 ;
"RTN","SAMIZ2",344,0)
 ;@stanza 15 return form prepared fr/template
"RTN","SAMIZ2",345,0)
 ;
"RTN","SAMIZ2",346,0)
 ;do ADDCRLF^VPRJRUT(.zhtml)
"RTN","SAMIZ2",347,0)
 ;
"RTN","SAMIZ2",348,0)
 quit  ; end of MERGEHTM^%wf
"RTN","SAMIZ2",349,0)
 ;
"RTN","SAMIZ2",350,0)
 ;
"RTN","SAMIZ2",351,0)
 ;@section 2 wsGetForm^%wf support subroutines
"RTN","SAMIZ2",352,0)
 ;
"RTN","SAMIZ2",353,0)
 ;
"RTN","SAMIZ2",354,0)
 ;
"RTN","SAMIZ2",355,0)
formLabel ; code for ppi $$formLabel^%wf, form's post url label
"RTN","SAMIZ2",356,0)
 ;
"RTN","SAMIZ2",357,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",358,0)
 ;
"RTN","SAMIZ2",359,0)
 ;ven/gpl;private;function;
"RTN","SAMIZ2",360,0)
 ;@signature
"RTN","SAMIZ2",361,0)
 ; $$formLabel^%wf(form)
"RTN","SAMIZ2",362,0)
 ;@branches-from
"RTN","SAMIZ2",363,0)
 ; $$formLabel^%wf
"RTN","SAMIZ2",364,0)
 ;@ppi-called-by
"RTN","SAMIZ2",365,0)
 ; wsGetForm^%wf
"RTN","SAMIZ2",366,0)
 ;@called-by: none
"RTN","SAMIZ2",367,0)
 ;@calls
"RTN","SAMIZ2",368,0)
 ; $$GET1^DIQ
"RTN","SAMIZ2",369,0)
 ;@input
"RTN","SAMIZ2",370,0)
 ; form = form name
"RTN","SAMIZ2",371,0)
 ; ^SAMI(311.11) = 
"RTN","SAMIZ2",372,0)
 ;@output=
"RTN","SAMIZ2",373,0)
 ; label to use
"RTN","SAMIZ2",374,0)
 ;@examples [tbd]
"RTN","SAMIZ2",375,0)
 ;@tests [tbd]
"RTN","SAMIZ2",376,0)
 ;
"RTN","SAMIZ2",377,0)
 ; [description tbd]
"RTN","SAMIZ2",378,0)
 ;
"RTN","SAMIZ2",379,0)
 ;@stanza 2 do replacements
"RTN","SAMIZ2",380,0)
 ;
"RTN","SAMIZ2",381,0)
 new fglb set fglb=$name(^SAMI(311.11))
"RTN","SAMIZ2",382,0)
 new fn set fn=311.11
"RTN","SAMIZ2",383,0)
 new fien set fien=$order(@fglb@("B",form,""))
"RTN","SAMIZ2",384,0)
 quit:fien="" ""
"RTN","SAMIZ2",385,0)
 new lbl set lbl=$$GET1^DIQ(fn,fien_",",2.1) ; label to use
"RTN","SAMIZ2",386,0)
 ;
"RTN","SAMIZ2",387,0)
 ;@stanza 3 termination
"RTN","SAMIZ2",388,0)
 ;
"RTN","SAMIZ2",389,0)
 quit lbl ; end of $$formLabel^%wf
"RTN","SAMIZ2",390,0)
 ;
"RTN","SAMIZ2",391,0)
 ;
"RTN","SAMIZ2",392,0)
 ;
"RTN","SAMIZ2",393,0)
getTemplate ; code for API $$getTemplate^%wf, form's template name
"RTN","SAMIZ2",394,0)
 ;
"RTN","SAMIZ2",395,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",396,0)
 ;
"RTN","SAMIZ2",397,0)
 ;ven/gpl;private;function;
"RTN","SAMIZ2",398,0)
 ;@signature
"RTN","SAMIZ2",399,0)
 ; $$getTemplate^%wf(form)
"RTN","SAMIZ2",400,0)
 ;@branches-from
"RTN","SAMIZ2",401,0)
 ; $$getTemplate^%wf
"RTN","SAMIZ2",402,0)
 ;@api-called-by
"RTN","SAMIZ2",403,0)
 ; wsGetForm^%wf
"RTN","SAMIZ2",404,0)
 ; getTemplate^SAMICASE
"RTN","SAMIZ2",405,0)
 ;@called-by: none
"RTN","SAMIZ2",406,0)
 ;@calls
"RTN","SAMIZ2",407,0)
 ; $$GET1^DIQ
"RTN","SAMIZ2",408,0)
 ;@input
"RTN","SAMIZ2",409,0)
 ; form = form name
"RTN","SAMIZ2",410,0)
 ; ^SAMI(311.11) = 
"RTN","SAMIZ2",411,0)
 ;@output=
"RTN","SAMIZ2",412,0)
 ; template name
"RTN","SAMIZ2",413,0)
 ;@examples [tbd]
"RTN","SAMIZ2",414,0)
 ;@tests [tbd]
"RTN","SAMIZ2",415,0)
 ;
"RTN","SAMIZ2",416,0)
 ; [description tbd]
"RTN","SAMIZ2",417,0)
 ;
"RTN","SAMIZ2",418,0)
 ;@stanza 2 get template name
"RTN","SAMIZ2",419,0)
 ;
"RTN","SAMIZ2",420,0)
 new fglb set fglb=$name(^SAMI(311.11))
"RTN","SAMIZ2",421,0)
 new fn set fn=311.11
"RTN","SAMIZ2",422,0)
 if form["-" do  ;
"RTN","SAMIZ2",423,0)
 . set form=$piece(form,"-",1)
"RTN","SAMIZ2",424,0)
 . ;if form="sbform" set form="sbform2"
"RTN","SAMIZ2",425,0)
 . quit
"RTN","SAMIZ2",426,0)
 new fien set fien=$order(@fglb@("B",form,""))
"RTN","SAMIZ2",427,0)
 quit:fien="" ""
"RTN","SAMIZ2",428,0)
 new tnm set tnm=$$GET1^DIQ(fn,fien_",",2) ; name of template
"RTN","SAMIZ2",429,0)
 ;
"RTN","SAMIZ2",430,0)
 ;@stanza 3 termination
"RTN","SAMIZ2",431,0)
 ;
"RTN","SAMIZ2",432,0)
 quit tnm ; end of $$getTemplate^%wf
"RTN","SAMIZ2",433,0)
 ;
"RTN","SAMIZ2",434,0)
 ;
"RTN","SAMIZ2",435,0)
 ;
"RTN","SAMIZ2",436,0)
 ;@section 3 wsGetForm^%wf error handling
"RTN","SAMIZ2",437,0)
 ;
"RTN","SAMIZ2",438,0)
 ;
"RTN","SAMIZ2",439,0)
 ;
"RTN","SAMIZ2",440,0)
redactErr ; code for ppi redactErr^%wf, clear errors from form
"RTN","SAMIZ2",441,0)
 ;
"RTN","SAMIZ2",442,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",443,0)
 ;
"RTN","SAMIZ2",444,0)
 ;ven/gpl;private;procedure;
"RTN","SAMIZ2",445,0)
 ;@signature
"RTN","SAMIZ2",446,0)
 ; do redactErr^%wf(html,err,indx)
"RTN","SAMIZ2",447,0)
 ;@branches-from
"RTN","SAMIZ2",448,0)
 ; redactErr^%wf
"RTN","SAMIZ2",449,0)
 ;@ppi-called-by
"RTN","SAMIZ2",450,0)
 ; wsGetForm^%wf
"RTN","SAMIZ2",451,0)
 ;@called-by: none
"RTN","SAMIZ2",452,0)
 ;@calls: none
"RTN","SAMIZ2",453,0)
 ;@input
"RTN","SAMIZ2",454,0)
 ; html = name of html form array
"RTN","SAMIZ2",455,0)
 ; err = name of error array
"RTN","SAMIZ2",456,0)
 ;.indx = current line in html
"RTN","SAMIZ2",457,0)
 ;@throughput
"RTN","SAMIZ2",458,0)
 ; @html = error messages cleared
"RTN","SAMIZ2",459,0)
 ; @err = error messages cleared
"RTN","SAMIZ2",460,0)
 ;@examples [tbd]
"RTN","SAMIZ2",461,0)
 ;@tests [tbd]
"RTN","SAMIZ2",462,0)
 ;
"RTN","SAMIZ2",463,0)
 ; [description tbd]
"RTN","SAMIZ2",464,0)
 ; redact error message section in html & clear error array
"RTN","SAMIZ2",465,0)
 ;
"RTN","SAMIZ2",466,0)
 ;@stanza 2 clear error messages
"RTN","SAMIZ2",467,0)
 ;
"RTN","SAMIZ2",468,0)
 new done set done=0
"RTN","SAMIZ2",469,0)
 set @err@("errorSectionBeginLine")=indx
"RTN","SAMIZ2",470,0)
 set @err@("errorMessageStyle")=2 ; errors to the top of page
"RTN","SAMIZ2",471,0)
 for i=indx:1,indx+20 quit:done  do  ;
"RTN","SAMIZ2",472,0)
 . if @html@(i)["</div>" set done=1
"RTN","SAMIZ2",473,0)
 . set @html@(i)=""
"RTN","SAMIZ2",474,0)
 . set @err@("errorSectionEndLine")=i
"RTN","SAMIZ2",475,0)
 . if @html@(i)["<tr>" set @err@("currentErrorLine")=i
"RTN","SAMIZ2",476,0)
 . set indx=i
"RTN","SAMIZ2",477,0)
 . quit
"RTN","SAMIZ2",478,0)
 set @err@("errorCount")=0
"RTN","SAMIZ2",479,0)
 ;
"RTN","SAMIZ2",480,0)
 ;@stanza 3 termination
"RTN","SAMIZ2",481,0)
 ;
"RTN","SAMIZ2",482,0)
 quit  ; end of redactErr^%wf
"RTN","SAMIZ2",483,0)
 ;
"RTN","SAMIZ2",484,0)
 ;
"RTN","SAMIZ2",485,0)
 ;
"RTN","SAMIZ2",486,0)
redactErr2 ; code for ppi redactErr2^%wf, redact field's error symbol
"RTN","SAMIZ2",487,0)
 ;
"RTN","SAMIZ2",488,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",489,0)
 ;
"RTN","SAMIZ2",490,0)
 ;ven/gpl;private;procedure;
"RTN","SAMIZ2",491,0)
 ;@signature
"RTN","SAMIZ2",492,0)
 ; do redactErr2^%wf(html,.indx)
"RTN","SAMIZ2",493,0)
 ;@branches-from
"RTN","SAMIZ2",494,0)
 ; redactErr2^%wf
"RTN","SAMIZ2",495,0)
 ;@ppi-called-by
"RTN","SAMIZ2",496,0)
 ; wsGetForm^%wf
"RTN","SAMIZ2",497,0)
 ;@called-by: none
"RTN","SAMIZ2",498,0)
 ;@calls
"RTN","SAMIZ2",499,0)
 ; deleteBetween^%wf
"RTN","SAMIZ2",500,0)
 ;@input
"RTN","SAMIZ2",501,0)
 ; html = 
"RTN","SAMIZ2",502,0)
 ;.indx = 
"RTN","SAMIZ2",503,0)
 ;@throughput
"RTN","SAMIZ2",504,0)
 ; @html(indx) = 
"RTN","SAMIZ2",505,0)
 ;@examples [tbd]
"RTN","SAMIZ2",506,0)
 ;@tests [tbd]
"RTN","SAMIZ2",507,0)
 ; testRedactErr2^%wf
"RTN","SAMIZ2",508,0)
 ;
"RTN","SAMIZ2",509,0)
 ; [description tbd]
"RTN","SAMIZ2",510,0)
 ;
"RTN","SAMIZ2",511,0)
 ;@stanza 2 remove error symbol from field
"RTN","SAMIZ2",512,0)
 ;
"RTN","SAMIZ2",513,0)
 if @html@(indx)'["fielderror" quit  ; nothing to replace
"RTN","SAMIZ2",514,0)
 if @html@(indx)["fielderror""></span>" quit  ; nothing to replace
"RTN","SAMIZ2",515,0)
 new line
"RTN","SAMIZ2",516,0)
 set line=@html@(indx)
"RTN","SAMIZ2",517,0)
 do deleteBetween^%wf(.line,"fielderror"">","</span>")
"RTN","SAMIZ2",518,0)
 set @html@(indx)=line
"RTN","SAMIZ2",519,0)
 ;
"RTN","SAMIZ2",520,0)
 ;@stanza 3 termination
"RTN","SAMIZ2",521,0)
 ;
"RTN","SAMIZ2",522,0)
 quit  ; end of redactErr2^%wf
"RTN","SAMIZ2",523,0)
 ;
"RTN","SAMIZ2",524,0)
 ;
"RTN","SAMIZ2",525,0)
 ;
"RTN","SAMIZ2",526,0)
testRedactErr2 ; code for test redactErr2^%wf [move to %wfut]
"RTN","SAMIZ2",527,0)
 ;
"RTN","SAMIZ2",528,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",529,0)
 ;
"RTN","SAMIZ2",530,0)
 ;ven/gpl;private;procedure;
"RTN","SAMIZ2",531,0)
 ;@signature
"RTN","SAMIZ2",532,0)
 ; do testRedactErr2^%wf
"RTN","SAMIZ2",533,0)
 ;@ppi-called-by: none
"RTN","SAMIZ2",534,0)
 ;@called-by: none
"RTN","SAMIZ2",535,0)
 ;@calls
"RTN","SAMIZ2",536,0)
 ; redactErr2^%wf
"RTN","SAMIZ2",537,0)
 ;@input: none
"RTN","SAMIZ2",538,0)
 ;@output
"RTN","SAMIZ2",539,0)
 ; report to screen results of removing error from field
"RTN","SAMIZ2",540,0)
 ;
"RTN","SAMIZ2",541,0)
 ; [description tbd]
"RTN","SAMIZ2",542,0)
 ;
"RTN","SAMIZ2",543,0)
 ;@stanza 2 do replacements
"RTN","SAMIZ2",544,0)
 ;
"RTN","SAMIZ2",545,0)
 new g set g="<th class=""serv"">Served in the military?<span id=""sbmly-fielderror""><a name=""err-2"" href=""#err-2e""><img src=""see/error.png""/>2</a></span></th>"
"RTN","SAMIZ2",546,0)
 new gg set gg(1)=g
"RTN","SAMIZ2",547,0)
 do redactErr2^%wf("gg",1)
"RTN","SAMIZ2",548,0)
 write !,gg(1)
"RTN","SAMIZ2",549,0)
 ;
"RTN","SAMIZ2",550,0)
 ;@stanza 3 termination
"RTN","SAMIZ2",551,0)
 ;
"RTN","SAMIZ2",552,0)
 quit  ; end of testRedactErr2^%wf
"RTN","SAMIZ2",553,0)
 ;
"RTN","SAMIZ2",554,0)
 ;
"RTN","SAMIZ2",555,0)
 ;
"RTN","SAMIZ2",556,0)
putErrMsg2 ; code for ppi putErrMsg2^%wf, insert error msgs
"RTN","SAMIZ2",557,0)
 ;
"RTN","SAMIZ2",558,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",559,0)
 ;
"RTN","SAMIZ2",560,0)
 ;ven/gpl;private;procedure;
"RTN","SAMIZ2",561,0)
 ;@signature
"RTN","SAMIZ2",562,0)
 ; do putErrMsg2^%wf(html,.line,.msg,err)
"RTN","SAMIZ2",563,0)
 ;@branches-from
"RTN","SAMIZ2",564,0)
 ; putErrMsg2^%wf
"RTN","SAMIZ2",565,0)
 ;@ppi-called-by
"RTN","SAMIZ2",566,0)
 ; wsGetForm
"RTN","SAMIZ2",567,0)
 ;@called-by: none
"RTN","SAMIZ2",568,0)
 ;@calls
"RTN","SAMIZ2",569,0)
 ; findReplace^%ts
"RTN","SAMIZ2",570,0)
 ;@input
"RTN","SAMIZ2",571,0)
 ; html = name of array containing html form
"RTN","SAMIZ2",572,0)
 ;.msg = error message to insert
"RTN","SAMIZ2",573,0)
 ;@throughput
"RTN","SAMIZ2",574,0)
 ; err = name of error array
"RTN","SAMIZ2",575,0)
 ;.line = line to change, containing error, needs error message inserted
"RTN","SAMIZ2",576,0)
 ; @html = form to insert error messages into
"RTN","SAMIZ2",577,0)
 ; @err = error array to update with error message
"RTN","SAMIZ2",578,0)
 ;@examples [tbd]
"RTN","SAMIZ2",579,0)
 ;@tests [tbd]
"RTN","SAMIZ2",580,0)
 ;
"RTN","SAMIZ2",581,0)
 ; [description tbd]
"RTN","SAMIZ2",582,0)
 ; style 2 of error messages - top of screen
"RTN","SAMIZ2",583,0)
 ;
"RTN","SAMIZ2",584,0)
 ;@stanza 2 insert error messages
"RTN","SAMIZ2",585,0)
 ;
"RTN","SAMIZ2",586,0)
 if $g(err)="" set err="errctrl"
"RTN","SAMIZ2",587,0)
 ; merge ^SAMIUL("err")=@err
"RTN","SAMIZ2",588,0)
 new errno set errno=$get(@err@("errorCount"))+1
"RTN","SAMIZ2",589,0)
 set @err@("errorCount")=errno
"RTN","SAMIZ2",590,0)
 new uline set uline=$get(@err@("currentErrorLine"))
"RTN","SAMIZ2",591,0)
 if errno=1 do  ;
"RTN","SAMIZ2",592,0)
 . new bline,eline
"RTN","SAMIZ2",593,0)
 . set bline=$get(@err@("errorSectionBeginLine"))
"RTN","SAMIZ2",594,0)
 . if bline="" quit  ; don't know where to put the section
"RTN","SAMIZ2",595,0)
 . set @html@(bline)="<div class=""errormsg"">"
"RTN","SAMIZ2",596,0)
 . set @html@(bline+1)="<h1>Errors:<h1>"
"RTN","SAMIZ2",597,0)
 . set @html@(bline+2)="<table>"
"RTN","SAMIZ2",598,0)
 . set eline=$get(@err@("errorSectionEndLine"))
"RTN","SAMIZ2",599,0)
 . if eline="" quit  ;
"RTN","SAMIZ2",600,0)
 . set @html@(eline-1)="</table>"
"RTN","SAMIZ2",601,0)
 . set @html@(eline)="</div>"
"RTN","SAMIZ2",602,0)
 . if uline="" set uline=bline+3
"RTN","SAMIZ2",603,0)
 . quit
"RTN","SAMIZ2",604,0)
 new inserttxt
"RTN","SAMIZ2",605,0)
 set inserttxt="<a name=""err-"_errno_""" href=""#err-"_errno_"e""><img src=""see/error.png""/>"_errno_"</a>"
"RTN","SAMIZ2",606,0)
 do findReplace^%ts(.line,"fielderror"">","fielderror"">"_inserttxt)
"RTN","SAMIZ2",607,0)
 if $get(uline)="" quit  ; set uline=32 - no uline is found, so nowhere to put the errors
"RTN","SAMIZ2",608,0)
 set @html@(uline)=@html@(uline)_"<tr><td class=""icon""><a name=""err-"_errno_"e"" href=""#err-"_errno_"""><img src=""see/error.png""/>"_errno_"</a></td><td>"_msg_"</td></tr>"
"RTN","SAMIZ2",609,0)
 ;
"RTN","SAMIZ2",610,0)
 ;@stanza 3 termination
"RTN","SAMIZ2",611,0)
 ;
"RTN","SAMIZ2",612,0)
 quit  ; end of putErrMsg2^%wf
"RTN","SAMIZ2",613,0)
 ;
"RTN","SAMIZ2",614,0)
 ;
"RTN","SAMIZ2",615,0)
 ;
"RTN","SAMIZ2",616,0)
insError ; code for ppi insError^%wf, insert error msg into html line
"RTN","SAMIZ2",617,0)
 ;
"RTN","SAMIZ2",618,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",619,0)
 ;
"RTN","SAMIZ2",620,0)
 ;ven/gpl;private;procedure;
"RTN","SAMIZ2",621,0)
 ;@signature
"RTN","SAMIZ2",622,0)
 ; do insError^%wf(.line,.msg)
"RTN","SAMIZ2",623,0)
 ;@branches-from
"RTN","SAMIZ2",624,0)
 ; insError^%wf
"RTN","SAMIZ2",625,0)
 ;@ppi-called-by
"RTN","SAMIZ2",626,0)
 ; wsGetForm^%wf
"RTN","SAMIZ2",627,0)
 ; debugFld^%wf
"RTN","SAMIZ2",628,0)
 ;@called-by: none
"RTN","SAMIZ2",629,0)
 ;@calls
"RTN","SAMIZ2",630,0)
 ; findReplace^%ts
"RTN","SAMIZ2",631,0)
 ;@input
"RTN","SAMIZ2",632,0)
 ;.msg = error message to insert
"RTN","SAMIZ2",633,0)
 ;@throughput
"RTN","SAMIZ2",634,0)
 ;.line = line to change by inserting error message
"RTN","SAMIZ2",635,0)
 ;@examples [tbd]
"RTN","SAMIZ2",636,0)
 ;@tests [tbd]
"RTN","SAMIZ2",637,0)
 ;
"RTN","SAMIZ2",638,0)
 ; [description tbd]
"RTN","SAMIZ2",639,0)
 ; inserts an error message into line, passed by reference
"RTN","SAMIZ2",640,0)
 ;
"RTN","SAMIZ2",641,0)
 ;@stanza 2 insert error message
"RTN","SAMIZ2",642,0)
 ;
"RTN","SAMIZ2",643,0)
 new errins set errins="<span class=""alert"" style=""font-size: 0.9em;"">"_msg_"</span>"
"RTN","SAMIZ2",644,0)
 if line["</input>" do  quit
"RTN","SAMIZ2",645,0)
 . do findReplace^%ts(.line,"</input>","</input>"_errins)
"RTN","SAMIZ2",646,0)
 . quit
"RTN","SAMIZ2",647,0)
 if line["/>" do  quit
"RTN","SAMIZ2",648,0)
 . do findReplace^%ts(.line,"/>","/>"_errins)
"RTN","SAMIZ2",649,0)
 . quit
"RTN","SAMIZ2",650,0)
 if line[">" do
"RTN","SAMIZ2",651,0)
 . set line=line_"</input>"_errins
"RTN","SAMIZ2",652,0)
 . quit
"RTN","SAMIZ2",653,0)
 ;
"RTN","SAMIZ2",654,0)
 ;@stanza 3 termination
"RTN","SAMIZ2",655,0)
 ;
"RTN","SAMIZ2",656,0)
 quit  ; end of insError^%wf
"RTN","SAMIZ2",657,0)
 ;
"RTN","SAMIZ2",658,0)
 ;
"RTN","SAMIZ2",659,0)
 ;
"RTN","SAMIZ2",660,0)
debugFld ; code for ppi debugFld^%wf, insert field debugging info
"RTN","SAMIZ2",661,0)
 ;
"RTN","SAMIZ2",662,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",663,0)
 ;
"RTN","SAMIZ2",664,0)
 ;ven/gpl;private;procedure;
"RTN","SAMIZ2",665,0)
 ;@signature
"RTN","SAMIZ2",666,0)
 ; do debugFld^%wf(line,form,name)
"RTN","SAMIZ2",667,0)
 ;@branches-from
"RTN","SAMIZ2",668,0)
 ; debugFld^%wf
"RTN","SAMIZ2",669,0)
 ;@ppi-called-by
"RTN","SAMIZ2",670,0)
 ; wsGetFld^%wf
"RTN","SAMIZ2",671,0)
 ;@called-by: none
"RTN","SAMIZ2",672,0)
 ;@calls
"RTN","SAMIZ2",673,0)
 ; getFieldMap^%wffmap
"RTN","SAMIZ2",674,0)
 ; insError^%wf
"RTN","SAMIZ2",675,0)
 ;@input
"RTN","SAMIZ2",676,0)
 ; form = 
"RTN","SAMIZ2",677,0)
 ; name = 
"RTN","SAMIZ2",678,0)
 ;@throughput
"RTN","SAMIZ2",679,0)
 ;.line = 
"RTN","SAMIZ2",680,0)
 ;@examples [tbd]
"RTN","SAMIZ2",681,0)
 ;@tests [tbd]
"RTN","SAMIZ2",682,0)
 ;
"RTN","SAMIZ2",683,0)
 ; [description tbd]
"RTN","SAMIZ2",684,0)
 ;
"RTN","SAMIZ2",685,0)
 ;@stanza 2 insert debugging info re field
"RTN","SAMIZ2",686,0)
 ;
"RTN","SAMIZ2",687,0)
 new dtxt set dtxt="field="_name
"RTN","SAMIZ2",688,0)
 new fary
"RTN","SAMIZ2",689,0)
 do getFieldMap^%wffmap("fary",form,name)
"RTN","SAMIZ2",690,0)
 set dtxt=dtxt_" fmFld="_$get(fary("FILEMAN_FIELD"))
"RTN","SAMIZ2",691,0)
 set dtxt=dtxt_" "_$get(fary("DATA_TYPE"))
"RTN","SAMIZ2",692,0)
 set dtxt=dtxt_" fmTitle: "_$get(fary("TITLE"))
"RTN","SAMIZ2",693,0)
 do insError^%wf(.line,dtxt)
"RTN","SAMIZ2",694,0)
 ;
"RTN","SAMIZ2",695,0)
 ;@stanza 3 termination
"RTN","SAMIZ2",696,0)
 ;
"RTN","SAMIZ2",697,0)
 quit  ; end of debugFld^%wf
"RTN","SAMIZ2",698,0)
 ;
"RTN","SAMIZ2",699,0)
 ;
"RTN","SAMIZ2",700,0)
 ;
"RTN","SAMIZ2",701,0)
 ;@section 4 wsGetForm^%wf field value manipulation
"RTN","SAMIZ2",702,0)
 ;
"RTN","SAMIZ2",703,0)
 ;
"RTN","SAMIZ2",704,0)
 ;
"RTN","SAMIZ2",705,0)
unvalue ; code for ppi unvalue^%wf, clear input value in html line
"RTN","SAMIZ2",706,0)
 ;
"RTN","SAMIZ2",707,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",708,0)
 ;
"RTN","SAMIZ2",709,0)
 ;ven/gpl;private;procedure;
"RTN","SAMIZ2",710,0)
 ;@signature
"RTN","SAMIZ2",711,0)
 ; do unvalue^%wf(.line)
"RTN","SAMIZ2",712,0)
 ;@branches-from
"RTN","SAMIZ2",713,0)
 ; unvalue^%wf
"RTN","SAMIZ2",714,0)
 ;@ppi-called-by
"RTN","SAMIZ2",715,0)
 ; wsGetForm^%wf
"RTN","SAMIZ2",716,0)
 ;@called-by: none
"RTN","SAMIZ2",717,0)
 ;@calls: none
"RTN","SAMIZ2",718,0)
 ;@throughput
"RTN","SAMIZ2",719,0)
 ;.line
"RTN","SAMIZ2",720,0)
 ;@examples [tbd]
"RTN","SAMIZ2",721,0)
 ;@tests [tbd]
"RTN","SAMIZ2",722,0)
 ;
"RTN","SAMIZ2",723,0)
 ; [description tbd]
"RTN","SAMIZ2",724,0)
 ; sets value=""
"RTN","SAMIZ2",725,0)
 ;
"RTN","SAMIZ2",726,0)
 ;@stanza 2 clear value
"RTN","SAMIZ2",727,0)
 ;
"RTN","SAMIZ2",728,0)
 new l1,l2,l3,t1,t2
"RTN","SAMIZ2",729,0)
 set l1=$find(line,"value=""")
"RTN","SAMIZ2",730,0)
 quit:l1=0
"RTN","SAMIZ2",731,0)
 set t1=$extract(line,1,l1-1)
"RTN","SAMIZ2",732,0)
 set t2=$extract(line,l1,$length(line))
"RTN","SAMIZ2",733,0)
 set l3=$find(t2,"""")
"RTN","SAMIZ2",734,0)
 set t2=""""_$extract(t2,l3,$length(t2))
"RTN","SAMIZ2",735,0)
 set line=t1_t2
"RTN","SAMIZ2",736,0)
 ;
"RTN","SAMIZ2",737,0)
 ;@stanza 3 termination
"RTN","SAMIZ2",738,0)
 ;
"RTN","SAMIZ2",739,0)
 quit  ; end of unvalue^%wf
"RTN","SAMIZ2",740,0)
 ;
"RTN","SAMIZ2",741,0)
 ;
"RTN","SAMIZ2",742,0)
 ;
"RTN","SAMIZ2",743,0)
value ; code for ppi value^%wf, set input value in html line
"RTN","SAMIZ2",744,0)
 ;
"RTN","SAMIZ2",745,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",746,0)
 ;
"RTN","SAMIZ2",747,0)
 ;ven/gpl;private;procedure;
"RTN","SAMIZ2",748,0)
 ;@signature
"RTN","SAMIZ2",749,0)
 ; do value^%wf(.line,val)
"RTN","SAMIZ2",750,0)
 ;@branches-from
"RTN","SAMIZ2",751,0)
 ; value^%wf
"RTN","SAMIZ2",752,0)
 ;@ppi-called-by
"RTN","SAMIZ2",753,0)
 ; wsGetForm^%wf
"RTN","SAMIZ2",754,0)
 ;@called-by: none
"RTN","SAMIZ2",755,0)
 ;@calls
"RTN","SAMIZ2",756,0)
 ; findReplace^%ts
"RTN","SAMIZ2",757,0)
 ;@input
"RTN","SAMIZ2",758,0)
 ; val = 
"RTN","SAMIZ2",759,0)
 ;@throughput
"RTN","SAMIZ2",760,0)
 ;.line = 
"RTN","SAMIZ2",761,0)
 ;@examples [tbd]
"RTN","SAMIZ2",762,0)
 ;@tests [tbd]
"RTN","SAMIZ2",763,0)
 ;
"RTN","SAMIZ2",764,0)
 ; [description tbd]
"RTN","SAMIZ2",765,0)
 ; sets value="@val"
"RTN","SAMIZ2",766,0)
 ;
"RTN","SAMIZ2",767,0)
 ;@stanza 2 set value
"RTN","SAMIZ2",768,0)
 ;
"RTN","SAMIZ2",769,0)
 new loc,end
"RTN","SAMIZ2",770,0)
 set loc=$find(line,"value=""""")
"RTN","SAMIZ2",771,0)
 if loc=0 do  quit  ;
"RTN","SAMIZ2",772,0)
 . ; if $extract(line,$length(line))=">" do
"RTN","SAMIZ2",773,0)
 . ; . set line=$extract(line,1,$length(line)-1)_" value="""_val_""""_">"
"RTN","SAMIZ2",774,0)
 . ; . quit
"RTN","SAMIZ2",775,0)
 . do findReplace^%ts(.line,"<input ","<input value="""_val_""" ")
"RTN","SAMIZ2",776,0)
 . quit
"RTN","SAMIZ2",777,0)
 set end=$extract(line,loc,$length(line))
"RTN","SAMIZ2",778,0)
 set line=$piece(line,"value=""",1)_"value="""_val_""""_end
"RTN","SAMIZ2",779,0)
 ;
"RTN","SAMIZ2",780,0)
 ;@stanza 3 termination
"RTN","SAMIZ2",781,0)
 ;
"RTN","SAMIZ2",782,0)
 quit  ; end of value^%wf
"RTN","SAMIZ2",783,0)
 ;
"RTN","SAMIZ2",784,0)
 ;
"RTN","SAMIZ2",785,0)
 ;
"RTN","SAMIZ2",786,0)
getVals ; code for ppi getVals^%wf, get field values from graph
"RTN","SAMIZ2",787,0)
 ;
"RTN","SAMIZ2",788,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",789,0)
 ;
"RTN","SAMIZ2",790,0)
 ;ven/gpl;private;procedure;
"RTN","SAMIZ2",791,0)
 ;@signature
"RTN","SAMIZ2",792,0)
 ; d getVals^%wf(vary,zid,zsid)
"RTN","SAMIZ2",793,0)
 ;@branches-from
"RTN","SAMIZ2",794,0)
 ; getVals^%wf
"RTN","SAMIZ2",795,0)
 ;@ppi-called-by
"RTN","SAMIZ2",796,0)
 ; wsGetForm^%wf
"RTN","SAMIZ2",797,0)
 ; testFiler^%wffiler
"RTN","SAMIZ2",798,0)
 ;@called-by: none
"RTN","SAMIZ2",799,0)
 ;@calls
"RTN","SAMIZ2",800,0)
 ; $$setroot^%wd
"RTN","SAMIZ2",801,0)
 ; $$SID2NUM^SAMIHOM3
"RTN","SAMIZ2",802,0)
 ;@input
"RTN","SAMIZ2",803,0)
 ; vrtn = 
"RTN","SAMIZ2",804,0)
 ; zid = 
"RTN","SAMIZ2",805,0)
 ; zsid = 
"RTN","SAMIZ2",806,0)
 ; @root@("graph",zsid,zid)
"RTN","SAMIZ2",807,0)
 ;@output
"RTN","SAMIZ2",808,0)
 ; @vrtn = 
"RTN","SAMIZ2",809,0)
 ;@throughput
"RTN","SAMIZ2",810,0)
 ;@examples [tbd]
"RTN","SAMIZ2",811,0)
 ;@tests [tbd]
"RTN","SAMIZ2",812,0)
 ;
"RTN","SAMIZ2",813,0)
 ; [description tbd]
"RTN","SAMIZ2",814,0)
 ; get the values for the form from the graph
"RTN","SAMIZ2",815,0)
 ;
"RTN","SAMIZ2",816,0)
 ;@stanza 2 get values from graph
"RTN","SAMIZ2",817,0)
 ;
"RTN","SAMIZ2",818,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIZ2",819,0)
 if '$data(@root@("graph",zsid,zid)) do  quit  ;
"RTN","SAMIZ2",820,0)
 . set @vrtn@(0)="values for patient: "_zsid_" in graph: "_zsid
"RTN","SAMIZ2",821,0)
 . quit
"RTN","SAMIZ2",822,0)
 merge @vrtn=@root@("graph",zsid,zid)
"RTN","SAMIZ2",823,0)
 ;
"RTN","SAMIZ2",824,0)
 ;@stanza 3 load prefill values
"RTN","SAMIZ2",825,0)
 ;
"RTN","SAMIZ2",826,0)
 new gien set gien=$$SID2NUM^SAMIHOM3(zsid) ; graph ien of this patient
"RTN","SAMIZ2",827,0)
 merge @vrtn=@root@(gien)
"RTN","SAMIZ2",828,0)
 ;
"RTN","SAMIZ2",829,0)
 ;@stanza 4 termination
"RTN","SAMIZ2",830,0)
 ;
"RTN","SAMIZ2",831,0)
 quit  ; end of getVals^%wf
"RTN","SAMIZ2",832,0)
 ;
"RTN","SAMIZ2",833,0)
 ;
"RTN","SAMIZ2",834,0)
 ;
"RTN","SAMIZ2",835,0)
setVals ; code for ppi setVals^%wf, set field values into graph
"RTN","SAMIZ2",836,0)
 ;
"RTN","SAMIZ2",837,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",838,0)
 ;
"RTN","SAMIZ2",839,0)
 ;ven/gpl;private;procedure;
"RTN","SAMIZ2",840,0)
 ;@signature
"RTN","SAMIZ2",841,0)
 ; do setVals^%wf(vary,zid,zsid)
"RTN","SAMIZ2",842,0)
 ;@branches-from
"RTN","SAMIZ2",843,0)
 ; setVals^%wf
"RTN","SAMIZ2",844,0)
 ;@called-by: none
"RTN","SAMIZ2",845,0)
 ;@calls
"RTN","SAMIZ2",846,0)
 ; $$setroot^%wd
"RTN","SAMIZ2",847,0)
 ;@input
"RTN","SAMIZ2",848,0)
 ; vary = 
"RTN","SAMIZ2",849,0)
 ; zid = 
"RTN","SAMIZ2",850,0)
 ; zsid = 
"RTN","SAMIZ2",851,0)
 ;@output
"RTN","SAMIZ2",852,0)
 ; @root@("graph")
"RTN","SAMIZ2",853,0)
 ;@throughput
"RTN","SAMIZ2",854,0)
 ;@examples [tbd]
"RTN","SAMIZ2",855,0)
 ;@tests [tbd]
"RTN","SAMIZ2",856,0)
 ;
"RTN","SAMIZ2",857,0)
 ; [description tbd]
"RTN","SAMIZ2",858,0)
 ; set the values returned from form id for patient zsid
"RTN","SAMIZ2",859,0)
 ;
"RTN","SAMIZ2",860,0)
 ;@stanza 2 set values
"RTN","SAMIZ2",861,0)
 ;
"RTN","SAMIZ2",862,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIZ2",863,0)
 if zsid="XXXX01" do  quit  ; the sample set
"RTN","SAMIZ2",864,0)
 . new src set src=$$setroot^%wd("elcapSampleJson")
"RTN","SAMIZ2",865,0)
 . if '$data(@src@(zid)) quit  ; no such form
"RTN","SAMIZ2",866,0)
 . merge @root@("graph",zsid,zid)=@src@(zid)
"RTN","SAMIZ2",867,0)
 . quit
"RTN","SAMIZ2",868,0)
 kill @root@("graph",zsid,zid)
"RTN","SAMIZ2",869,0)
 merge @root@("graph",zsid,zid)=@vary
"RTN","SAMIZ2",870,0)
 ;
"RTN","SAMIZ2",871,0)
 ;@stanza 3 termination
"RTN","SAMIZ2",872,0)
 ;
"RTN","SAMIZ2",873,0)
 quit  ; end of setVals^%wf
"RTN","SAMIZ2",874,0)
 ;
"RTN","SAMIZ2",875,0)
 ;
"RTN","SAMIZ2",876,0)
 ;
"RTN","SAMIZ2",877,0)
 ;@section 5 wsGetForm^%wf field validation
"RTN","SAMIZ2",878,0)
 ;
"RTN","SAMIZ2",879,0)
 ;
"RTN","SAMIZ2",880,0)
 ;
"RTN","SAMIZ2",881,0)
validate ; code for ppi $$validate^%wf, validate value
"RTN","SAMIZ2",882,0)
 ;
"RTN","SAMIZ2",883,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",884,0)
 ;
"RTN","SAMIZ2",885,0)
 ;ven/gpl;private;function;
"RTN","SAMIZ2",886,0)
 ;@signature
"RTN","SAMIZ2",887,0)
 ; $$validate^%wf(value,spec,map,.msg)
"RTN","SAMIZ2",888,0)
 ;@branches-from
"RTN","SAMIZ2",889,0)
 ; $$validate^%wf
"RTN","SAMIZ2",890,0)
 ;@ppi-called-by
"RTN","SAMIZ2",891,0)
 ; wsGetForm^%wf
"RTN","SAMIZ2",892,0)
 ;@called-by: none
"RTN","SAMIZ2",893,0)
 ;@calls
"RTN","SAMIZ2",894,0)
 ; $$dateValid^%wf
"RTN","SAMIZ2",895,0)
 ; $$textValid^%wf
"RTN","SAMIZ2",896,0)
 ; $$numValid^%wf
"RTN","SAMIZ2",897,0)
 ;@input
"RTN","SAMIZ2",898,0)
 ; value = string being validated
"RTN","SAMIZ2",899,0)
 ; spec = fileman spec which defines validation (e.g., FJ30  D  N5.2)
"RTN","SAMIZ2",900,0)
 ; map = [optional] passed by name, field mapping entry for variable
"RTN","SAMIZ2",901,0)
 ;@output
"RTN","SAMIZ2",902,0)
 ;.msg = custom error message
"RTN","SAMIZ2",903,0)
 ;@throughput
"RTN","SAMIZ2",904,0)
 ;@examples [tbd]
"RTN","SAMIZ2",905,0)
 ;@tests [tbd]
"RTN","SAMIZ2",906,0)
 ;
"RTN","SAMIZ2",907,0)
 ; [description tbd]
"RTN","SAMIZ2",908,0)
 ; extrinsic returns 1 if valid 0 if not valid
"RTN","SAMIZ2",909,0)
 ;
"RTN","SAMIZ2",910,0)
 ;@stanza 2 validate value
"RTN","SAMIZ2",911,0)
 ;
"RTN","SAMIZ2",912,0)
 ;if $get(spec)="" quit 0  ; everything is invalid with no spec
"RTN","SAMIZ2",913,0)
 ;if $get(spec)="" quit 1  ; everything is valid with no spec
"RTN","SAMIZ2",914,0)
 if $get(spec)="" set spec="FJ30" ; make it free text to weed out bad characters
"RTN","SAMIZ2",915,0)
 ;
"RTN","SAMIZ2",916,0)
 ;new valrtn set valrtn
"RTN","SAMIZ2",917,0)
 ;if $get(@map@("VALIDATOR"))'="" do  quit valrtn  ; call a custom validator
"RTN","SAMIZ2",918,0)
 ;. add code to call the custom validator here
"RTN","SAMIZ2",919,0)
 ;
"RTN","SAMIZ2",920,0)
 if spec["S" quit 1  ; all set of codes are valid - let fileman check them
"RTN","SAMIZ2",921,0)
 ;
"RTN","SAMIZ2",922,0)
 if spec["D" quit $$dateValid^%wf(value,spec,$get(map),.msg) ; validate a date
"RTN","SAMIZ2",923,0)
 ;
"RTN","SAMIZ2",924,0)
 if spec["F" quit $$textValid^%wf(value,spec,$get(map)) ; validate free text field
"RTN","SAMIZ2",925,0)
 ;
"RTN","SAMIZ2",926,0)
 if spec["N" quit $$numValid^%wf(value,spec,$get(map)) ; validate a numeric value
"RTN","SAMIZ2",927,0)
 ;
"RTN","SAMIZ2",928,0)
 ;@stanza 3 termination
"RTN","SAMIZ2",929,0)
 ;
"RTN","SAMIZ2",930,0)
 quit 0  ; what else is there? assume it is invalid ; end of $$validate^%wf
"RTN","SAMIZ2",931,0)
 ;
"RTN","SAMIZ2",932,0)
 ;
"RTN","SAMIZ2",933,0)
 ;
"RTN","SAMIZ2",934,0)
dateValid ; code for ppi $$dateValid^%wf, validate date
"RTN","SAMIZ2",935,0)
 ;
"RTN","SAMIZ2",936,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",937,0)
 ;
"RTN","SAMIZ2",938,0)
 ;ven/gpl;private;function;
"RTN","SAMIZ2",939,0)
 ;@signature
"RTN","SAMIZ2",940,0)
 ; $$dateValid^%wf(value,spec,map,msg)
"RTN","SAMIZ2",941,0)
 ;@branches-from
"RTN","SAMIZ2",942,0)
 ; $$dateValid^%wf
"RTN","SAMIZ2",943,0)
 ;@ppi-called-by
"RTN","SAMIZ2",944,0)
 ; $$validate^%wf
"RTN","SAMIZ2",945,0)
 ;@called-by: none
"RTN","SAMIZ2",946,0)
 ;@calls
"RTN","SAMIZ2",947,0)
 ; ^%DT: Vista Fileman date-time input/validation
"RTN","SAMIZ2",948,0)
 ;@input
"RTN","SAMIZ2",949,0)
 ; value = date being validated
"RTN","SAMIZ2",950,0)
 ; spec = 
"RTN","SAMIZ2",951,0)
 ; map = 
"RTN","SAMIZ2",952,0)
 ;@output=
"RTN","SAMIZ2",953,0)
 ; 1 if valid
"RTN","SAMIZ2",954,0)
 ; 0 if invalid
"RTN","SAMIZ2",955,0)
 ;.msg =
"RTN","SAMIZ2",956,0)
 ;@throughput
"RTN","SAMIZ2",957,0)
 ;@examples [tbd]
"RTN","SAMIZ2",958,0)
 ;@tests [tbd]
"RTN","SAMIZ2",959,0)
 ;
"RTN","SAMIZ2",960,0)
 ; [description tbd]
"RTN","SAMIZ2",961,0)
 ; extrinsic which validates a date
"RTN","SAMIZ2",962,0)
 ;
"RTN","SAMIZ2",963,0)
 ;@stanza 2 validate date
"RTN","SAMIZ2",964,0)
 ;
"RTN","SAMIZ2",965,0)
 new X,Y
"RTN","SAMIZ2",966,0)
 set X=value
"RTN","SAMIZ2",967,0)
 do ^%DT
"RTN","SAMIZ2",968,0)
 if Y=-1 quit 0
"RTN","SAMIZ2",969,0)
 ;
"RTN","SAMIZ2",970,0)
 ;@stanza 3 termination
"RTN","SAMIZ2",971,0)
 ;
"RTN","SAMIZ2",972,0)
 quit 1 ; end of $$dateValid^%wf
"RTN","SAMIZ2",973,0)
 ;
"RTN","SAMIZ2",974,0)
 ;
"RTN","SAMIZ2",975,0)
 ;
"RTN","SAMIZ2",976,0)
textValid ; code for ppi $$textValid^%wf, validate free-text field
"RTN","SAMIZ2",977,0)
 ;
"RTN","SAMIZ2",978,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",979,0)
 ;
"RTN","SAMIZ2",980,0)
 ;ven/gpl;private;function;
"RTN","SAMIZ2",981,0)
 ;@signature
"RTN","SAMIZ2",982,0)
 ; $$textValid^%wf(value,spec,map)
"RTN","SAMIZ2",983,0)
 ;@branches-from
"RTN","SAMIZ2",984,0)
 ; $$textValid^%wf
"RTN","SAMIZ2",985,0)
 ;@ppi-called-by
"RTN","SAMIZ2",986,0)
 ; $$validate^%wf
"RTN","SAMIZ2",987,0)
 ;@called-by: none
"RTN","SAMIZ2",988,0)
 ;@calls: none
"RTN","SAMIZ2",989,0)
 ;@input
"RTN","SAMIZ2",990,0)
 ; value = text being validated
"RTN","SAMIZ2",991,0)
 ; spec = fileman spec which defines validation (e.g., FJ30)
"RTN","SAMIZ2",992,0)
 ; map =
"RTN","SAMIZ2",993,0)
 ;@output=
"RTN","SAMIZ2",994,0)
 ; 1 if valid
"RTN","SAMIZ2",995,0)
 ; 0 if invalid
"RTN","SAMIZ2",996,0)
 ;@throughput
"RTN","SAMIZ2",997,0)
 ;@examples [tbd]
"RTN","SAMIZ2",998,0)
 ;@tests [tbd]
"RTN","SAMIZ2",999,0)
 ;
"RTN","SAMIZ2",1000,0)
 ; [description tbd]
"RTN","SAMIZ2",1001,0)
 ; validate a free text field
"RTN","SAMIZ2",1002,0)
 ; uses mumps pattern matching
"RTN","SAMIZ2",1003,0)
 ;
"RTN","SAMIZ2",1004,0)
 ;@stanza 2 validate text
"RTN","SAMIZ2",1005,0)
 ;
"RTN","SAMIZ2",1006,0)
 if spec'["F" quit 0  ; not a text field
"RTN","SAMIZ2",1007,0)
 ;
"RTN","SAMIZ2",1008,0)
 new min,max,x,specn
"RTN","SAMIZ2",1009,0)
 set specn=+$translate(spec,"FJX ","") ; gets rid of the alphabetics 
"RTN","SAMIZ2",1010,0)
 if specn["." do  ; there is a minimum and maximum
"RTN","SAMIZ2",1011,0)
 . set min=$piece(specn,".",1)
"RTN","SAMIZ2",1012,0)
 . set max=$piece(specn,".",2)
"RTN","SAMIZ2",1013,0)
 . set x="value?"_min_"."_max_"LUNP"
"RTN","SAMIZ2",1014,0)
 . quit
"RTN","SAMIZ2",1015,0)
 else  do  ; no minimum
"RTN","SAMIZ2",1016,0)
 . set x="value?."_specn_"LUNP"
"RTN","SAMIZ2",1017,0)
 . quit
"RTN","SAMIZ2",1018,0)
 ;w !,x
"RTN","SAMIZ2",1019,0)
 if @x quit 1
"RTN","SAMIZ2",1020,0)
 ;
"RTN","SAMIZ2",1021,0)
 ;@stanza 3 termination
"RTN","SAMIZ2",1022,0)
 ;
"RTN","SAMIZ2",1023,0)
 quit 0 ; end of $$textValid^%wf
"RTN","SAMIZ2",1024,0)
 ;
"RTN","SAMIZ2",1025,0)
 ;
"RTN","SAMIZ2",1026,0)
 ;
"RTN","SAMIZ2",1027,0)
numValid ; code for ppi $$numValid^%wf, validate numeric field
"RTN","SAMIZ2",1028,0)
 ;
"RTN","SAMIZ2",1029,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",1030,0)
 ;
"RTN","SAMIZ2",1031,0)
 ;ven/gpl;private;function;
"RTN","SAMIZ2",1032,0)
 ;@signature
"RTN","SAMIZ2",1033,0)
 ; $$numValid^%wf(value,spec,map)
"RTN","SAMIZ2",1034,0)
 ;@branches-from
"RTN","SAMIZ2",1035,0)
 ; $$numValid^%wf
"RTN","SAMIZ2",1036,0)
 ;@ppi-called-by
"RTN","SAMIZ2",1037,0)
 ; $$validate^%wf
"RTN","SAMIZ2",1038,0)
 ;@called-by: none
"RTN","SAMIZ2",1039,0)
 ;@calls: none
"RTN","SAMIZ2",1040,0)
 ;@input
"RTN","SAMIZ2",1041,0)
 ; value = number being validated
"RTN","SAMIZ2",1042,0)
 ; spec = fileman spec which defines validation (e.g., N5.2)
"RTN","SAMIZ2",1043,0)
 ; map =
"RTN","SAMIZ2",1044,0)
 ;@output=
"RTN","SAMIZ2",1045,0)
 ; 1 if valid
"RTN","SAMIZ2",1046,0)
 ; 0 if invalid
"RTN","SAMIZ2",1047,0)
 ;@throughput
"RTN","SAMIZ2",1048,0)
 ;@examples [tbd]
"RTN","SAMIZ2",1049,0)
 ;@tests [tbd]
"RTN","SAMIZ2",1050,0)
 ;
"RTN","SAMIZ2",1051,0)
 ; [description tbd]
"RTN","SAMIZ2",1052,0)
 ; validate a numeric field
"RTN","SAMIZ2",1053,0)
 ; uses mumps pattern matching, handles decimal points
"RTN","SAMIZ2",1054,0)
 ;
"RTN","SAMIZ2",1055,0)
 ;@stanza 2 validate number
"RTN","SAMIZ2",1056,0)
 ;
"RTN","SAMIZ2",1057,0)
 if spec'["N" quit 0  ; not a numeric field
"RTN","SAMIZ2",1058,0)
 new left,right,x,specn
"RTN","SAMIZ2",1059,0)
 set specn=$translate(spec,"NJX ","") ; gets rid of the alphabetics 
"RTN","SAMIZ2",1060,0)
 new result set result=1 ; assume valid
"RTN","SAMIZ2",1061,0)
 if specn["," do  quit result  ; there is a left and right
"RTN","SAMIZ2",1062,0)
 . set left=$piece(specn,",",1) ; digits left of the decimal
"RTN","SAMIZ2",1063,0)
 . new valleft set valleft=$piece(value,".",1)
"RTN","SAMIZ2",1064,0)
 . set x="valleft?."_left_"N"
"RTN","SAMIZ2",1065,0)
 . if @x s result=1
"RTN","SAMIZ2",1066,0)
 . else  set result=0 quit  ;
"RTN","SAMIZ2",1067,0)
 . ; now test the number of digits right of the decimal 
"RTN","SAMIZ2",1068,0)
 . set right=$piece(specn,",",2)
"RTN","SAMIZ2",1069,0)
 . new valright set valright=$piece(value,".",2) ; digits right of the decimal
"RTN","SAMIZ2",1070,0)
 . set x="valright?."_right_"N"
"RTN","SAMIZ2",1071,0)
 . if @x set result=1
"RTN","SAMIZ2",1072,0)
 . else  set result=0
"RTN","SAMIZ2",1073,0)
 . quit
"RTN","SAMIZ2",1074,0)
 else  do  ; no right of decimal point
"RTN","SAMIZ2",1075,0)
 . set x="value?."_specn_"N"
"RTN","SAMIZ2",1076,0)
 . quit
"RTN","SAMIZ2",1077,0)
 write !,x
"RTN","SAMIZ2",1078,0)
 if @x quit 1
"RTN","SAMIZ2",1079,0)
 ;
"RTN","SAMIZ2",1080,0)
 ;@stanza 3 termination
"RTN","SAMIZ2",1081,0)
 ;
"RTN","SAMIZ2",1082,0)
 quit 0 ; end of $$numValid^%wf
"RTN","SAMIZ2",1083,0)
 ;
"RTN","SAMIZ2",1084,0)
 ;
"RTN","SAMIZ2",1085,0)
 ;
"RTN","SAMIZ2",1086,0)
dateFormat ; code for ppi $$dateFormat^%wf, date in elcap format
"RTN","SAMIZ2",1087,0)
 ;
"RTN","SAMIZ2",1088,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",1089,0)
 ;
"RTN","SAMIZ2",1090,0)
 ;ven/gpl;private;procedure;
"RTN","SAMIZ2",1091,0)
 ;@signature
"RTN","SAMIZ2",1092,0)
 ; do dateFormat^%wf(.val,form,name)
"RTN","SAMIZ2",1093,0)
 ;@branches-from
"RTN","SAMIZ2",1094,0)
 ; dateFormat^%wf
"RTN","SAMIZ2",1095,0)
 ;@ppi-called-by
"RTN","SAMIZ2",1096,0)
 ; wsGetForm
"RTN","SAMIZ2",1097,0)
 ;@called-by: none
"RTN","SAMIZ2",1098,0)
 ;@calls
"RTN","SAMIZ2",1099,0)
 ; $$getFieldSpec^%wffmap
"RTN","SAMIZ2",1100,0)
 ; ^%DT
"RTN","SAMIZ2",1101,0)
 ; $$FMTE^XLFDT
"RTN","SAMIZ2",1102,0)
 ;@input
"RTN","SAMIZ2",1103,0)
 ; form = 
"RTN","SAMIZ2",1104,0)
 ; name = 
"RTN","SAMIZ2",1105,0)
 ;@throughput
"RTN","SAMIZ2",1106,0)
 ;.val = date
"RTN","SAMIZ2",1107,0)
 ;@examples [tbd]
"RTN","SAMIZ2",1108,0)
 ;@tests [tbd]
"RTN","SAMIZ2",1109,0)
 ;
"RTN","SAMIZ2",1110,0)
 ; [description tbd]
"RTN","SAMIZ2",1111,0)
 ; reformat date in elcap format
"RTN","SAMIZ2",1112,0)
 ;
"RTN","SAMIZ2",1113,0)
 ;@stanza 2 reformat date
"RTN","SAMIZ2",1114,0)
 ;
"RTN","SAMIZ2",1115,0)
 new spec set spec=$$getFieldSpec^%wffmap(form,name)
"RTN","SAMIZ2",1116,0)
 if spec'["D" quit  ; not a date field
"RTN","SAMIZ2",1117,0)
 new X,Y
"RTN","SAMIZ2",1118,0)
 set X=val
"RTN","SAMIZ2",1119,0)
 do ^%DT
"RTN","SAMIZ2",1120,0)
 if Y=-1 quit  ; invalid date, can't reformat
"RTN","SAMIZ2",1121,0)
 new dtmp set dtmp=$$FMTE^XLFDT(Y,"D") ; default exteral date format
"RTN","SAMIZ2",1122,0)
 if $length(dtmp)=12 do
"RTN","SAMIZ2",1123,0)
 . set val=$extract(dtmp,5,6)_"/"_$extract(dtmp,1,3)_"/"_$extract(dtmp,9,12) ; jan 01,1987
"RTN","SAMIZ2",1124,0)
 . quit
"RTN","SAMIZ2",1125,0)
 else  do
"RTN","SAMIZ2",1126,0)
 . set val=dtmp
"RTN","SAMIZ2",1127,0)
 . quit
"RTN","SAMIZ2",1128,0)
 if $length(val)=8 do
"RTN","SAMIZ2",1129,0)
 . set val=$extract(val,5,8)
"RTN","SAMIZ2",1130,0)
 . quit
"RTN","SAMIZ2",1131,0)
 ;
"RTN","SAMIZ2",1132,0)
 ;@stanza 3 termination
"RTN","SAMIZ2",1133,0)
 ;
"RTN","SAMIZ2",1134,0)
 quit  ; end of dateFormat^%wf
"RTN","SAMIZ2",1135,0)
 ;
"RTN","SAMIZ2",1136,0)
 ;
"RTN","SAMIZ2",1137,0)
 ;
"RTN","SAMIZ2",1138,0)
 ;@section 6 wsPostForm^%wf web service & parseBody ppi
"RTN","SAMIZ2",1139,0)
 ;
"RTN","SAMIZ2",1140,0)
 ;
"RTN","SAMIZ2",1141,0)
 ;
"RTN","SAMIZ2",1142,0)
wsPostForm ; code for ws wsPostForm^%wf, submit HTML form
"RTN","SAMIZ2",1143,0)
 ;
"RTN","SAMIZ2",1144,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",1145,0)
 ;
"RTN","SAMIZ2",1146,0)
 ;ven/gpl;web service;procedure;
"RTN","SAMIZ2",1147,0)
 ;@signature
"RTN","SAMIZ2",1148,0)
 ; do wsPostForm^%wf(.ARGS,BODY,RESULT)
"RTN","SAMIZ2",1149,0)
 ;@branches-from
"RTN","SAMIZ2",1150,0)
 ; wsPostForm^%wf
"RTN","SAMIZ2",1151,0)
 ;@ppi-called-by
"RTN","SAMIZ2",1152,0)
 ; web service POST:form/*
"RTN","SAMIZ2",1153,0)
 ;@called-by: none
"RTN","SAMIZ2",1154,0)
 ;@calls
"RTN","SAMIZ2",1155,0)
 ; parseBody^%wf
"RTN","SAMIZ2",1156,0)
 ; $$setroot^%wd
"RTN","SAMIZ2",1157,0)
 ; wsGetForm^%wf
"RTN","SAMIZ2",1158,0)
 ; fileForm^%wffiler
"RTN","SAMIZ2",1159,0)
 ; fmx^%sfv2g
"RTN","SAMIZ2",1160,0)
 ; ENCODE^VPRJSON
"RTN","SAMIZ2",1161,0)
 ; beautify^%wd
"RTN","SAMIZ2",1162,0)
 ; ADDCRLF^VPRJRUT
"RTN","SAMIZ2",1163,0)
 ;@input
"RTN","SAMIZ2",1164,0)
 ;.ARGS =
"RTN","SAMIZ2",1165,0)
 ;.BODY =
"RTN","SAMIZ2",1166,0)
 ;@output
"RTN","SAMIZ2",1167,0)
 ;.RESULT =
"RTN","SAMIZ2",1168,0)
 ;@throughput
"RTN","SAMIZ2",1169,0)
 ;@examples [tbd]
"RTN","SAMIZ2",1170,0)
 ;@tests [tbd]
"RTN","SAMIZ2",1171,0)
 ;
"RTN","SAMIZ2",1172,0)
 ; [description tbd]
"RTN","SAMIZ2",1173,0)
 ; receive from form
"RTN","SAMIZ2",1174,0)
 ;
"RTN","SAMIZ2",1175,0)
 ;@stanza 2 receive from form
"RTN","SAMIZ2",1176,0)
 ;
"RTN","SAMIZ2",1177,0)
 new %json,form,sid,body,tbdy
"RTN","SAMIZ2",1178,0)
 set form=$get(ARGS("form"))
"RTN","SAMIZ2",1179,0)
 set sid=$get(ARGS("studyid"))
"RTN","SAMIZ2",1180,0)
 set body=$get(BODY(1))
"RTN","SAMIZ2",1181,0)
 if $data(BODY(2)) set body=body_$get(BODY(2))
"RTN","SAMIZ2",1182,0)
 if $data(BODY(3)) set body=body_$get(BODY(3))
"RTN","SAMIZ2",1183,0)
 if form="" set form="sbform"
"RTN","SAMIZ2",1184,0)
 if sid="" set sid="XXXX17"
"RTN","SAMIZ2",1185,0)
 quit:form=""
"RTN","SAMIZ2",1186,0)
 quit:sid=""
"RTN","SAMIZ2",1187,0)
 ;set %json(sid,form,"form")=form
"RTN","SAMIZ2",1188,0)
 do parseBody^%wf("tbdy",.body)
"RTN","SAMIZ2",1189,0)
 ; 
"RTN","SAMIZ2",1190,0)
 ; change log
"RTN","SAMIZ2",1191,0)
 ;
"RTN","SAMIZ2",1192,0)
 if form["siform" do  ;
"RTN","SAMIZ2",1193,0)
 . new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIZ2",1194,0)
 . merge tbdy("changelog")=@root@("graph",sid,form,"changelog")
"RTN","SAMIZ2",1195,0)
 . do CLOG^SAMICLOG(sid,form,"tbdy")
"RTN","SAMIZ2",1196,0)
 . quit
"RTN","SAMIZ2",1197,0)
 ;
"RTN","SAMIZ2",1198,0)
 ; we want to store the form by the date in the form.. and delete the old one
"RTN","SAMIZ2",1199,0)
 ; 
"RTN","SAMIZ2",1200,0)
 new useform set useform=form
"RTN","SAMIZ2",1201,0)
 set useform=$$SAVFILTR^SAMISAV(sid,form,.tbdy) ; make this a framework call
"RTN","SAMIZ2",1202,0)
 ;
"RTN","SAMIZ2",1203,0)
 ; generate the change log
"RTN","SAMIZ2",1204,0)
 ;
"RTN","SAMIZ2",1205,0)
 ;set %json(sid,form,"form")=form
"RTN","SAMIZ2",1206,0)
 set %json(sid,useform,"form")=useform
"RTN","SAMIZ2",1207,0)
 set ARGS("form")=useform
"RTN","SAMIZ2",1208,0)
 ;merge %json(sid,form)=tbdy
"RTN","SAMIZ2",1209,0)
 merge %json(sid,useform)=tbdy
"RTN","SAMIZ2",1210,0)
 new gr set gr=$$setroot^%wd("vapals-patients")
"RTN","SAMIZ2",1211,0)
 merge @gr@("graph")=%json
"RTN","SAMIZ2",1212,0)
 ;
"RTN","SAMIZ2",1213,0)
 if $get(ARGS("debug"))=1 do  ;
"RTN","SAMIZ2",1214,0)
 . kill ^SAMIUL("sami")
"RTN","SAMIZ2",1215,0)
 . merge ^SAMIUL("sami","args")=ARGS
"RTN","SAMIZ2",1216,0)
 . merge ^SAMIUL("sami","body")=BODY
"RTN","SAMIZ2",1217,0)
 . merge ^SAMIUL("sami","json")=%json
"RTN","SAMIZ2",1218,0)
 . quit
"RTN","SAMIZ2",1219,0)
 ;
"RTN","SAMIZ2",1220,0)
 ;if $get(ARGS("debug"))="" do  quit  ;
"RTN","SAMIZ2",1221,0)
 do  quit  ;
"RTN","SAMIZ2",1222,0)
 . do WSCASE^SAMICASE(.RESULT,.ARGS)
"RTN","SAMIZ2",1223,0)
 . quit
"RTN","SAMIZ2",1224,0)
 ;
"RTN","SAMIZ2",1225,0)
 ;
"RTN","SAMIZ2",1226,0)
 quit  ; no validation process
"RTN","SAMIZ2",1227,0)
 ;
"RTN","SAMIZ2",1228,0)
 ;
"RTN","SAMIZ2",1229,0)
 ; validation process
"RTN","SAMIZ2",1230,0)
 ;
"RTN","SAMIZ2",1231,0)
 ;new errflag set errflag=0
"RTN","SAMIZ2",1232,0)
 ;new revise
"RTN","SAMIZ2",1233,0)
 ;do wsGetForm^%wf(.revise,.ARGS,1)
"RTN","SAMIZ2",1234,0)
 ;if form="sbform2" if errflag'=0 do  quit  ;
"RTN","SAMIZ2",1235,0)
 ;. merge RESULT=revise
"RTN","SAMIZ2",1236,0)
 ;
"RTN","SAMIZ2",1237,0)
 ; end validation process
"RTN","SAMIZ2",1238,0)
 ;
"RTN","SAMIZ2",1239,0)
 ; no errors, file it into fileman
"RTN","SAMIZ2",1240,0)
 ;new status s status=""
"RTN","SAMIZ2",1241,0)
 ;if form["sbform" do  ;
"RTN","SAMIZ2",1242,0)
 ;. do fileForm^%wffiler("tbdy","sbform",sid,"status")
"RTN","SAMIZ2",1243,0)
 ;. ;
"RTN","SAMIZ2",1244,0)
 ;. ; now return the fileman record that was created
"RTN","SAMIZ2",1245,0)
 ;. new fman,fien
"RTN","SAMIZ2",1246,0)
 ;. set fien=$order(^SAMI(311.102,"B",sid,""))
"RTN","SAMIZ2",1247,0)
 ;. quit:fien=""
"RTN","SAMIZ2",1248,0)
 ;. do fmx^%sfv2g("fman",311.102,fien)
"RTN","SAMIZ2",1249,0)
 ;. quit
"RTN","SAMIZ2",1250,0)
 ;merge fman=status
"RTN","SAMIZ2",1251,0)
 ;
"RTN","SAMIZ2",1252,0)
 ; this code is cut off for now by the quit above
"RTN","SAMIZ2",1253,0)
 ;
"RTN","SAMIZ2",1254,0)
 new fman
"RTN","SAMIZ2",1255,0)
 merge fman(form)=tbdy
"RTN","SAMIZ2",1256,0)
 new tjson
"RTN","SAMIZ2",1257,0)
 do ENCODE^VPRJSON("fman","tjson")
"RTN","SAMIZ2",1258,0)
 do beautify^%wd("tjson","RESULT")
"RTN","SAMIZ2",1259,0)
 do ADDCRLF^VPRJRUT(.RESULT)
"RTN","SAMIZ2",1260,0)
 set HTTPRSP("mime")="application/json"
"RTN","SAMIZ2",1261,0)
 kill ^SAMIUL("sami")
"RTN","SAMIZ2",1262,0)
 merge ^SAMIUL("sami","args")=ARGS
"RTN","SAMIZ2",1263,0)
 merge ^SAMIUL("sami","body")=BODY
"RTN","SAMIZ2",1264,0)
 merge ^SAMIUL("sami","json")=%json
"RTN","SAMIZ2",1265,0)
 merge ^SAMIUL("sami","fman")=fman
"RTN","SAMIZ2",1266,0)
 ;
"RTN","SAMIZ2",1267,0)
 ;@stanza 3 termination
"RTN","SAMIZ2",1268,0)
 ;
"RTN","SAMIZ2",1269,0)
 quit  ; end of wsPostForm^%wf
"RTN","SAMIZ2",1270,0)
 ;
"RTN","SAMIZ2",1271,0)
 ;
"RTN","SAMIZ2",1272,0)
 ;
"RTN","SAMIZ2",1273,0)
parseBody ; code for ppi parseBody^%wf, get field values from form
"RTN","SAMIZ2",1274,0)
 ;
"RTN","SAMIZ2",1275,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",1276,0)
 ;
"RTN","SAMIZ2",1277,0)
 ;ven/gpl;private;procedure;
"RTN","SAMIZ2",1278,0)
 ;@signature
"RTN","SAMIZ2",1279,0)
 ; do parseBody^%wf(rtn,body)
"RTN","SAMIZ2",1280,0)
 ;@branches-from
"RTN","SAMIZ2",1281,0)
 ; parseBody^%wf
"RTN","SAMIZ2",1282,0)
 ;@ppi-called-by
"RTN","SAMIZ2",1283,0)
 ; wsPostForm^%wf
"RTN","SAMIZ2",1284,0)
 ; wsNuFormPost^SAMICASE
"RTN","SAMIZ2",1285,0)
 ; wsLookup^SAMISRCH
"RTN","SAMIZ2",1286,0)
 ;@called-by: none
"RTN","SAMIZ2",1287,0)
 ;@calls
"RTN","SAMIZ2",1288,0)
 ; $$URLDEC^VPRJRUT
"RTN","SAMIZ2",1289,0)
 ;@input
"RTN","SAMIZ2",1290,0)
 ; rtn = [pass by name]
"RTN","SAMIZ2",1291,0)
 ; body = 
"RTN","SAMIZ2",1292,0)
 ;@output
"RTN","SAMIZ2",1293,0)
 ; @rtn =
"RTN","SAMIZ2",1294,0)
 ;@throughput
"RTN","SAMIZ2",1295,0)
 ;@examples [tbd]
"RTN","SAMIZ2",1296,0)
 ;@tests [tbd]
"RTN","SAMIZ2",1297,0)
 ;
"RTN","SAMIZ2",1298,0)
 ; [description tbd]
"RTN","SAMIZ2",1299,0)
 ; parse the variables sent by a form
"RTN","SAMIZ2",1300,0)
 ; rtn is passed by name
"RTN","SAMIZ2",1301,0)
 ;
"RTN","SAMIZ2",1302,0)
 ;@stanza 2 parse variables from form
"RTN","SAMIZ2",1303,0)
 ;
"RTN","SAMIZ2",1304,0)
 new ii set ii=""
"RTN","SAMIZ2",1305,0)
 if '$data(body) set body=$get(^SAMIUL("sami","body",1))
"RTN","SAMIZ2",1306,0)
 quit:'$data(body)
"RTN","SAMIZ2",1307,0)
 new tmp set tmp=body
"RTN","SAMIZ2",1308,0)
 kill @rtn
"RTN","SAMIZ2",1309,0)
 for ii=1:1:$length(tmp,"&") do  ;
"RTN","SAMIZ2",1310,0)
 . new ij
"RTN","SAMIZ2",1311,0)
 . set ij=$piece(tmp,"&",ii)
"RTN","SAMIZ2",1312,0)
 . quit:ij=""
"RTN","SAMIZ2",1313,0)
 . set @rtn@($piece(ij,"=",1))=$$URLDEC^VPRJRUT($piece(ij,"=",2))
"RTN","SAMIZ2",1314,0)
 . quit
"RTN","SAMIZ2",1315,0)
 ;
"RTN","SAMIZ2",1316,0)
 ;@stanza 3 termination
"RTN","SAMIZ2",1317,0)
 ;
"RTN","SAMIZ2",1318,0)
 quit  ; end of parseBody^%wf
"RTN","SAMIZ2",1319,0)
 ;
"RTN","SAMIZ2",1320,0)
 ;
"RTN","SAMIZ2",1321,0)
 ;
"RTN","SAMIZ2",1322,0)
 ;@section 7 commented-out procedures
"RTN","SAMIZ2",1323,0)
 ;
"RTN","SAMIZ2",1324,0)
 ;
"RTN","SAMIZ2",1325,0)
 ;
"RTN","SAMIZ2",1326,0)
replaceSrc ; code for ppi replaceSrc^%wf, chg resources in src & href
"RTN","SAMIZ2",1327,0)
 ;
"RTN","SAMIZ2",1328,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",1329,0)
 ;
"RTN","SAMIZ2",1330,0)
 ;ven/gpl;private;function;
"RTN","SAMIZ2",1331,0)
 ;@signature
"RTN","SAMIZ2",1332,0)
 ; $$replaceSrc^%wf(.line)
"RTN","SAMIZ2",1333,0)
 ;@branches-from
"RTN","SAMIZ2",1334,0)
 ; $$replaceSrc^%wf
"RTN","SAMIZ2",1335,0)
 ;@ppi-called-by
"RTN","SAMIZ2",1336,0)
 ; wsGetForm^%wf [commented out]
"RTN","SAMIZ2",1337,0)
 ;@called-by: none
"RTN","SAMIZ2",1338,0)
 ;@calls
"RTN","SAMIZ2",1339,0)
 ; findReplaceAll^%ts
"RTN","SAMIZ2",1340,0)
 ;@input
"RTN","SAMIZ2",1341,0)
 ;.line = 
"RTN","SAMIZ2",1342,0)
 ;@output=
"RTN","SAMIZ2",1343,0)
 ; 1 if replacement was done
"RTN","SAMIZ2",1344,0)
 ; 0 if not
"RTN","SAMIZ2",1345,0)
 ;@throughput
"RTN","SAMIZ2",1346,0)
 ;@examples [tbd]
"RTN","SAMIZ2",1347,0)
 ;@tests [tbd]
"RTN","SAMIZ2",1348,0)
 ;
"RTN","SAMIZ2",1349,0)
 ; [description tbd]
"RTN","SAMIZ2",1350,0)
 ; do replacements on lines for src= to use see service to locate resource
"RTN","SAMIZ2",1351,0)
 ; deprecated, needed changes are in template now.
"RTN","SAMIZ2",1352,0)
 ;
"RTN","SAMIZ2",1353,0)
 ;@stanza 2 insert see service in src & href lines
"RTN","SAMIZ2",1354,0)
 ;
"RTN","SAMIZ2",1355,0)
 new done set done=0
"RTN","SAMIZ2",1356,0)
 if line["src='/" do  ;
"RTN","SAMIZ2",1357,0)
 . do findReplaceAll^%ts(.line,"src='/","src='see/")
"RTN","SAMIZ2",1358,0)
 . set done=1
"RTN","SAMIZ2",1359,0)
 . quit
"RTN","SAMIZ2",1360,0)
 if line["src=""/" do  ;
"RTN","SAMIZ2",1361,0)
 . quit:done
"RTN","SAMIZ2",1362,0)
 . do findReplaceAll^%ts(.line,"src=""/","src=""see/")
"RTN","SAMIZ2",1363,0)
 . set done=1
"RTN","SAMIZ2",1364,0)
 . quit
"RTN","SAMIZ2",1365,0)
 if line["src=" do  ; 
"RTN","SAMIZ2",1366,0)
 . quit:done
"RTN","SAMIZ2",1367,0)
 . do findReplaceAll^%ts(.line,"src=""","src=""see/")
"RTN","SAMIZ2",1368,0)
 . set done=1
"RTN","SAMIZ2",1369,0)
 . quit
"RTN","SAMIZ2",1370,0)
 if line["href='/" do  ;
"RTN","SAMIZ2",1371,0)
 . do findReplaceAll^%ts(.line,"href='/","href='see/")
"RTN","SAMIZ2",1372,0)
 . set done=1
"RTN","SAMIZ2",1373,0)
 . quit
"RTN","SAMIZ2",1374,0)
 if line["href='" do  ;
"RTN","SAMIZ2",1375,0)
 . quit:done
"RTN","SAMIZ2",1376,0)
 . if line["href=""#" quit  ;
"RTN","SAMIZ2",1377,0)
 . if line["href=""javascript" quit  ;
"RTN","SAMIZ2",1378,0)
 . do findReplaceAll^%ts(.line,"href='","href='see/")
"RTN","SAMIZ2",1379,0)
 . set done=1 
"RTN","SAMIZ2",1380,0)
 . quit
"RTN","SAMIZ2",1381,0)
 if line["href=" do  ; 
"RTN","SAMIZ2",1382,0)
 . quit:done
"RTN","SAMIZ2",1383,0)
 . if line["href=""#" quit  ;
"RTN","SAMIZ2",1384,0)
 . if line["href=""javascript" quit  ;
"RTN","SAMIZ2",1385,0)
 . do findReplaceAll^%ts(.line,"href=""","href=""see/")
"RTN","SAMIZ2",1386,0)
 . set done=1
"RTN","SAMIZ2",1387,0)
 . quit
"RTN","SAMIZ2",1388,0)
 ;
"RTN","SAMIZ2",1389,0)
 ;@stanza 3 termination
"RTN","SAMIZ2",1390,0)
 ;
"RTN","SAMIZ2",1391,0)
 quit done ; end of $$replaceSrc^%wf
"RTN","SAMIZ2",1392,0)
 ;
"RTN","SAMIZ2",1393,0)
 ;
"RTN","SAMIZ2",1394,0)
 ;
"RTN","SAMIZ2",1395,0)
replaceHref ; code for ppi replaceHref^%wf, chg resources in href
"RTN","SAMIZ2",1396,0)
 ;
"RTN","SAMIZ2",1397,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIZ2",1398,0)
 ;
"RTN","SAMIZ2",1399,0)
 ;ven/gpl;private;function;
"RTN","SAMIZ2",1400,0)
 ;@signature
"RTN","SAMIZ2",1401,0)
 ; $$replaceHref^%wf(.line)
"RTN","SAMIZ2",1402,0)
 ;@branches-from
"RTN","SAMIZ2",1403,0)
 ; $$replaceHref^%wf
"RTN","SAMIZ2",1404,0)
 ;@ppi-called-by
"RTN","SAMIZ2",1405,0)
 ; wsGetForm^%wf [commented out]
"RTN","SAMIZ2",1406,0)
 ;@called-by: none
"RTN","SAMIZ2",1407,0)
 ;@calls
"RTN","SAMIZ2",1408,0)
 ; findReplace^%ts
"RTN","SAMIZ2",1409,0)
 ;@input
"RTN","SAMIZ2",1410,0)
 ;.line = 
"RTN","SAMIZ2",1411,0)
 ;@output=
"RTN","SAMIZ2",1412,0)
 ; 1 if replacement was done
"RTN","SAMIZ2",1413,0)
 ; 0 if not
"RTN","SAMIZ2",1414,0)
 ;@throughput
"RTN","SAMIZ2",1415,0)
 ;@examples [tbd]
"RTN","SAMIZ2",1416,0)
 ;@tests [tbd]
"RTN","SAMIZ2",1417,0)
 ;
"RTN","SAMIZ2",1418,0)
 ; [description tbd]
"RTN","SAMIZ2",1419,0)
 ; do replacements on html lines for href values ; extrinsic returns true if
"RTN","SAMIZ2",1420,0)
 ; replacement was done
"RTN","SAMIZ2",1421,0)
 ; deprecated, use replaceSrc instead, if needed
"RTN","SAMIZ2",1422,0)
 ;
"RTN","SAMIZ2",1423,0)
 ;@stanza 2 process href lines
"RTN","SAMIZ2",1424,0)
 ;
"RTN","SAMIZ2",1425,0)
 new conds,done
"RTN","SAMIZ2",1426,0)
 set done=0
"RTN","SAMIZ2",1427,0)
 set conds("""sami.css""")="""resources/sami/sami.css"""
"RTN","SAMIZ2",1428,0)
 set conds("""sami.js""")="""resources/sami/sami.js"""
"RTN","SAMIZ2",1429,0)
 set conds("""sami2.js""")="""resources/sami/sami2.js"""
"RTN","SAMIZ2",1430,0)
 set conds("""jquery-3.2.1.min.js""")="""resources/sami/jquery-3.2.1.min.js"""
"RTN","SAMIZ2",1431,0)
 set conds("""jquery-ui.min.js""")="""resources/sami/jquery-ui.min.js"""
"RTN","SAMIZ2",1432,0)
 ;
"RTN","SAMIZ2",1433,0)
 new %ig set %ig=""
"RTN","SAMIZ2",1434,0)
 for  set %ig=$order(conds(%ig)) quit:%ig=""  do  ;
"RTN","SAMIZ2",1435,0)
 . if line[%ig do  ;
"RTN","SAMIZ2",1436,0)
 . . do findReplace^%ts(.line,%ig,$get(conds(%ig)))
"RTN","SAMIZ2",1437,0)
 . . set done=1
"RTN","SAMIZ2",1438,0)
 . . quit
"RTN","SAMIZ2",1439,0)
 . quit
"RTN","SAMIZ2",1440,0)
 ;
"RTN","SAMIZ2",1441,0)
 ;@stanza 3 termination
"RTN","SAMIZ2",1442,0)
 ;
"RTN","SAMIZ2",1443,0)
 quit done ; end of $$replaceHref^%wf
"RTN","SAMIZ2",1444,0)
 ;
"RTN","SAMIZ2",1445,0)
 ;
"RTN","SAMIZ2",1446,0)
 ;
"RTN","SAMIZ2",1447,0)
eor ; end of routine %wfhform
"RTN","SAMIZ3")
0^95^B73028800
"RTN","SAMIZ3",1,0)
%yottaweb ;ven/gpl-yottadb extension: utilities ;2018-02-08T20:06Z
"RTN","SAMIZ3",2,0)
 ;;1.8;Mash;;;Build 1
"RTN","SAMIZ3",3,0)
 ;
"RTN","SAMIZ3",4,0)
 ; %yottaweb implements Yottadb Extension Library web-interface
"RTN","SAMIZ3",5,0)
 ; ppis & apis. This will eventually be migrated to other Mash
"RTN","SAMIZ3",6,0)
 ; namespaces, perhaps %ww. In the meantime, they will be added
"RTN","SAMIZ3",7,0)
 ; to the new %yotta ppi library.
"RTN","SAMIZ3",8,0)
 ; It is currently untested & in progress.
"RTN","SAMIZ3",9,0)
 ;
"RTN","SAMIZ3",10,0)
 quit  ; no entry from top
"RTN","SAMIZ3",11,0)
 ;
"RTN","SAMIZ3",12,0)
 ;
"RTN","SAMIZ3",13,0)
 ;
"RTN","SAMIZ3",14,0)
 ;@section 0 primary development
"RTN","SAMIZ3",15,0)
 ;
"RTN","SAMIZ3",16,0)
 ;
"RTN","SAMIZ3",17,0)
 ;
"RTN","SAMIZ3",18,0)
 ;@routine-credits
"RTN","SAMIZ3",19,0)
 ;@primary-dev: George P. Lilly (gpl)
"RTN","SAMIZ3",20,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIZ3",21,0)
 ;@primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIZ3",22,0)
 ; http://vistaexpertise.net
"RTN","SAMIZ3",23,0)
 ;@copyright: 2017/2018, gpl, all rights reserved
"RTN","SAMIZ3",24,0)
 ;@license: Apache 2.0
"RTN","SAMIZ3",25,0)
 ; https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIZ3",26,0)
 ;
"RTN","SAMIZ3",27,0)
 ;@last-updated: 2018-02-08T20:06Z
"RTN","SAMIZ3",28,0)
 ;@application: Mumps Advanced Shell (Mash)
"RTN","SAMIZ3",29,0)
 ;@module: Yottadb Extension - %yotta
"RTN","SAMIZ3",30,0)
 ;@version: 1.8T04
"RTN","SAMIZ3",31,0)
 ;@release-date: not yet released
"RTN","SAMIZ3",32,0)
 ;@patch-list: none yet
"RTN","SAMIZ3",33,0)
 ;
"RTN","SAMIZ3",34,0)
 ;@additional-dev: Frederick D. S. Marshall (toad)
"RTN","SAMIZ3",35,0)
 ; toad@vistaexpertise.net
"RTN","SAMIZ3",36,0)
 ;
"RTN","SAMIZ3",37,0)
 ;@module-credits
"RTN","SAMIZ3",38,0)
 ;@primary-dev: George P. Lilly (gpl)
"RTN","SAMIZ3",39,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIZ3",40,0)
 ;@project: VA Partnership to Increase Access to Lung Screening
"RTN","SAMIZ3",41,0)
 ; (VA-PALS)
"RTN","SAMIZ3",42,0)
 ; http://va-pals.org/
"RTN","SAMIZ3",43,0)
 ;@funding: 2017, gpl
"RTN","SAMIZ3",44,0)
 ;@funding: 2017, ven
"RTN","SAMIZ3",45,0)
 ;@funding: 2017/2018, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMIZ3",46,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMIZ3",47,0)
 ;@partner-org: Veterans Affairs Office of Rural health
"RTN","SAMIZ3",48,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMIZ3",49,0)
 ;@partner-org: International Early Lung Cancer Action Program (I-ELCAP)
"RTN","SAMIZ3",50,0)
 ; http://ielcap.com/
"RTN","SAMIZ3",51,0)
 ;@partner-org: Paraxial Technologies
"RTN","SAMIZ3",52,0)
 ; http://paraxialtech.com/
"RTN","SAMIZ3",53,0)
 ;@partner-org: Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMIZ3",54,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMIZ3",55,0)
 ;
"RTN","SAMIZ3",56,0)
 ;@module-log
"RTN","SAMIZ3",57,0)
 ; 2017-07-04 ven/gpl %*1.8t01 %yottaweb: create routine to hold
"RTN","SAMIZ3",58,0)
 ; yottadb web-interface methods.
"RTN","SAMIZ3",59,0)
 ;
"RTN","SAMIZ3",60,0)
 ; 2017-09-12 ven/gpl %*1.8t01 %yottaweb: update
"RTN","SAMIZ3",61,0)
 ;
"RTN","SAMIZ3",62,0)
 ; 2017-09-27 ven/gpl %*1.8t01 %yottaweb: update
"RTN","SAMIZ3",63,0)
 ;
"RTN","SAMIZ3",64,0)
 ; 2017-10-07 ven/gpl %*1.8t01 %yottaweb: update
"RTN","SAMIZ3",65,0)
 ;
"RTN","SAMIZ3",66,0)
 ; 2018-02-08 ven/toad %*1.8t04 %yottaweb: passim add white space &
"RTN","SAMIZ3",67,0)
 ; hdr comments & do-dot quits, tag w/Apache license & attribution
"RTN","SAMIZ3",68,0)
 ; & to-do to shift namespace later.
"RTN","SAMIZ3",69,0)
 ;
"RTN","SAMIZ3",70,0)
 ;@to-do
"RTN","SAMIZ3",71,0)
 ; implement the camel parameter:
"RTN","SAMIZ3",72,0)
 ; example - fileman_field if camel=1 becomes filemanfield
"RTN","SAMIZ3",73,0)
 ;  if camel=2 becomes filemanfield
"RTN","SAMIZ3",74,0)
 ; %yotta: create entry points in ppi/api style
"RTN","SAMIZ3",75,0)
 ; r/all local calls w/calls through ^%yotta
"RTN","SAMIZ3",76,0)
 ; eventually renamespace, perhaps under %ww
"RTN","SAMIZ3",77,0)
 ;
"RTN","SAMIZ3",78,0)
 ;@contents
"RTN","SAMIZ3",79,0)
 ;
"RTN","SAMIZ3",80,0)
 ;
"RTN","SAMIZ3",81,0)
 ;
"RTN","SAMIZ3",82,0)
 ;@section 1 code to implement ppis & apis
"RTN","SAMIZ3",83,0)
 ;
"RTN","SAMIZ3",84,0)
 ;
"RTN","SAMIZ3",85,0)
 ;
"RTN","SAMIZ3",86,0)
fmrec(file,ien) ; extrinsic which returns the json version of the fmx return
"RTN","SAMIZ3",87,0)
 ;
"RTN","SAMIZ3",88,0)
 new %g,%gj
"RTN","SAMIZ3",89,0)
 do fmx("%g",file,ien)
"RTN","SAMIZ3",90,0)
 do ENCODE^VPRJSON("%g","%gj")
"RTN","SAMIZ3",91,0)
 ;
"RTN","SAMIZ3",92,0)
 quit %gj ; end of $$fmrec
"RTN","SAMIZ3",93,0)
 ;
"RTN","SAMIZ3",94,0)
 ;
"RTN","SAMIZ3",95,0)
 ;
"RTN","SAMIZ3",96,0)
fmx(rtn,file,ien,camel) ; return an array of a fileman record for external 
"RTN","SAMIZ3",97,0)
 ;
"RTN","SAMIZ3",98,0)
 ; use in rtn, which is passed by name. 
"RTN","SAMIZ3",99,0)
 ;
"RTN","SAMIZ3",100,0)
 kill @rtn
"RTN","SAMIZ3",101,0)
 new trec,filenm
"RTN","SAMIZ3",102,0)
 do GETS^DIQ(file,ien_",","**","ENR","trec")
"RTN","SAMIZ3",103,0)
 set filenm=$order(^DD(file,0,"NM",""))
"RTN","SAMIZ3",104,0)
 set filenm=$translate(filenm," ","_")
"RTN","SAMIZ3",105,0)
 ; zwrite trec
"RTN","SAMIZ3",106,0)
 if $get(debug)=1 break
"RTN","SAMIZ3",107,0)
 new % set %=$query(trec(""))
"RTN","SAMIZ3",108,0)
 for  do  quit:%=""  ;
"RTN","SAMIZ3",109,0)
 . new fnum,fname,iens,field,val
"RTN","SAMIZ3",110,0)
 . set fnum=$qsubscript(%,1)
"RTN","SAMIZ3",111,0)
 . if $data(^DD(fnum,0,"NM")) do  ;
"RTN","SAMIZ3",112,0)
 . . set fname=$order(^DD(fnum,0,"NM",""))
"RTN","SAMIZ3",113,0)
 . . set fname=$translate(fname," ","_")
"RTN","SAMIZ3",114,0)
 . . quit
"RTN","SAMIZ3",115,0)
 . else  set fname=fnum
"RTN","SAMIZ3",116,0)
 . set iens=$qsubscript(%,2)
"RTN","SAMIZ3",117,0)
 . set field=$qsubscript(%,3)
"RTN","SAMIZ3",118,0)
 . set field=$translate(field," ","_")
"RTN","SAMIZ3",119,0)
 . set val=@%
"RTN","SAMIZ3",120,0)
 . if fnum=file do  ; not a subfile
"RTN","SAMIZ3",121,0)
 . . set @rtn@(fname,ien,field)=val
"RTN","SAMIZ3",122,0)
 . . set @rtn@(fname,"ien")=$piece(iens,",",1)
"RTN","SAMIZ3",123,0)
 . . quit
"RTN","SAMIZ3",124,0)
 . else  do  ;
"RTN","SAMIZ3",125,0)
 . . new i2 set i2=$order(@rtn@(fname,""),-1)+1
"RTN","SAMIZ3",126,0)
 . . set @rtn@(fname,$piece(iens,","),field)=val
"RTN","SAMIZ3",127,0)
 . . ; set @rtn@(fname,i2,field)=val
"RTN","SAMIZ3",128,0)
 . . ; set @rtn@(fname,i2,"iens")=iens
"RTN","SAMIZ3",129,0)
 . . quit
"RTN","SAMIZ3",130,0)
 . write:$get(debug)=1 !,%,"=",@%
"RTN","SAMIZ3",131,0)
 . set %=$query(@%)
"RTN","SAMIZ3",132,0)
 . quit
"RTN","SAMIZ3",133,0)
 ;
"RTN","SAMIZ3",134,0)
 quit  ; end of fmx
"RTN","SAMIZ3",135,0)
 ;
"RTN","SAMIZ3",136,0)
 ;
"RTN","SAMIZ3",137,0)
 ;
"RTN","SAMIZ3",138,0)
 ; example
"RTN","SAMIZ3",139,0)
 ; g("bsts_concept","codeset")=36
"RTN","SAMIZ3",140,0)
 ; g("bsts_concept","concept_id")=370206005
"RTN","SAMIZ3",141,0)
 ; g("bsts_concept","counter")=75
"RTN","SAMIZ3",142,0)
 ; g("bsts_concept","dts_id")=370206
"RTN","SAMIZ3",143,0)
 ; g("bsts_concept","fully_specified_name")="asthma limits walking on the flat (finding)"
"RTN","SAMIZ3",144,0)
 ; g("bsts_concept","last_modified")="may 11, 2015"
"RTN","SAMIZ3",145,0)
 ; g("bsts_concept","out_of_date")="no"
"RTN","SAMIZ3",146,0)
 ; g("bsts_concept","partial_entry")="non-patial (full entry)"
"RTN","SAMIZ3",147,0)
 ; g("bsts_concept","revision_in")="mar 01, 2012"
"RTN","SAMIZ3",148,0)
 ; g("bsts_concept","revision_out")="jan 01, 2050"
"RTN","SAMIZ3",149,0)
 ; g("bsts_concept","version")=20140901
"RTN","SAMIZ3",150,0)
 ; g("bsts_concept","ien")="75"
"RTN","SAMIZ3",151,0)
 ; g("is_a_relationship",1,"is_a_relationship")=2
"RTN","SAMIZ3",152,0)
 ; g("subsets",1,"subsets")="ehr ipl asthma dxs"
"RTN","SAMIZ3",153,0)
 ; g("subsets",2,"subsets")="srch cardiology"
"RTN","SAMIZ3",154,0)
 ; g("subsets",3,"subsets")="ihs problem list"
"RTN","SAMIZ3",155,0)
 ;
"RTN","SAMIZ3",156,0)
 ;
"RTN","SAMIZ3",157,0)
 ;
"RTN","SAMIZ3",158,0)
gpltest(rtn,filter) ;
"RTN","SAMIZ3",159,0)
 ;
"RTN","SAMIZ3",160,0)
 if '$data(rtn) set rtn=$name(^tmp("gpltest",$job))
"RTN","SAMIZ3",161,0)
 kill @rtn
"RTN","SAMIZ3",162,0)
 new gtop,gbot
"RTN","SAMIZ3",163,0)
 do htmltb(.gtop,.gbot,"gpltest page")
"RTN","SAMIZ3",164,0)
 merge @rtn=gtop
"RTN","SAMIZ3",165,0)
 new dfn set dfn=$get(filter("dfn"))
"RTN","SAMIZ3",166,0)
 if dfn="" set dfn=2
"RTN","SAMIZ3",167,0)
 new gary,ary,hary
"RTN","SAMIZ3",168,0)
 do fmx^kbaiweb("gary",2,dfn)
"RTN","SAMIZ3",169,0)
 set ary("header",1)="name"
"RTN","SAMIZ3",170,0)
 set ary("header",2)="date of birth"
"RTN","SAMIZ3",171,0)
 set ary("header",3)="age"
"RTN","SAMIZ3",172,0)
 set ary("title")="test html"
"RTN","SAMIZ3",173,0)
 set ary(1,1)=gary("patient","name")
"RTN","SAMIZ3",174,0)
 set ary(1,2)=gary("patient","date_of_birth")
"RTN","SAMIZ3",175,0)
 set ary(1,3)=gary("patient","age")          
"RTN","SAMIZ3",176,0)
 do genhtml2^kbaiutil(rtn,"ary")
"RTN","SAMIZ3",177,0)
 set @rtn@($order(@rtn@(""),-1)+1)=gbot
"RTN","SAMIZ3",178,0)
 kill @rtn@(0)
"RTN","SAMIZ3",179,0)
 set HTTPRSP("mime")="text/html"
"RTN","SAMIZ3",180,0)
 ;
"RTN","SAMIZ3",181,0)
 quit  ; end of gpltest
"RTN","SAMIZ3",182,0)
 ;
"RTN","SAMIZ3",183,0)
 ;
"RTN","SAMIZ3",184,0)
 ;
"RTN","SAMIZ3",185,0)
htmltb(gtop,gbot,title) ; sets beginning and ending fixed html
"RTN","SAMIZ3",186,0)
 ;
"RTN","SAMIZ3",187,0)
 ; set gtop="<!doctype html><html><head></head><body>"
"RTN","SAMIZ3",188,0)
 set gtop(1)="<!doctype html>"
"RTN","SAMIZ3",189,0)
 set gtop(2)="<html>"
"RTN","SAMIZ3",190,0)
 set gtop(3)="<head>"
"RTN","SAMIZ3",191,0)
 set gtop(4)="<meta charset=""utf-8"">"
"RTN","SAMIZ3",192,0)
 set gtop(5)="<meta http-equiv=""content-type"" content=""text/html; charset=utf-8"" />"
"RTN","SAMIZ3",193,0)
 set gtop(6)="<title>"_$g(title)_"</title>"
"RTN","SAMIZ3",194,0)
 set gtop(7)="<link rel=""stylesheet"" type=""text/css"" href=""/resources/css/c0tstyle.css"" />"
"RTN","SAMIZ3",195,0)
 set gtop(8)="</head>"
"RTN","SAMIZ3",196,0)
 set gtop(9)="<body>"
"RTN","SAMIZ3",197,0)
 ;
"RTN","SAMIZ3",198,0)
 set gbot="</body></html>"
"RTN","SAMIZ3",199,0)
 ;
"RTN","SAMIZ3",200,0)
 quit  ; end of htmltb
"RTN","SAMIZ3",201,0)
 ;
"RTN","SAMIZ3",202,0)
 ;
"RTN","SAMIZ3",203,0)
 ;
"RTN","SAMIZ3",204,0)
htmltb2(gtop,gbot,title) ; sets beginning and ending fixed html
"RTN","SAMIZ3",205,0)
 ;
"RTN","SAMIZ3",206,0)
 ; this one is for standalone html files - no remote css
"RTN","SAMIZ3",207,0)
 ;
"RTN","SAMIZ3",208,0)
 ; set gtop="<!doctype html><html><head></head><body>"
"RTN","SAMIZ3",209,0)
 set gtop(1)="<!doctype html>"
"RTN","SAMIZ3",210,0)
 set gtop(2)="<html>"
"RTN","SAMIZ3",211,0)
 set gtop(3)="<head>"
"RTN","SAMIZ3",212,0)
 set gtop(4)="<meta charset=""utf-8"">"
"RTN","SAMIZ3",213,0)
 set gtop(5)="<meta http-equiv=""content-type"" content=""text/html; charset=utf-8"" />"
"RTN","SAMIZ3",214,0)
 set gtop(6)="<title>"_$get(title)_"</title>"
"RTN","SAMIZ3",215,0)
 ; set gtop(7)="<link rel=""stylesheet"" type=""text/css"" href=""/resources/css/c0tstyle.css"" />"
"RTN","SAMIZ3",216,0)
 ; set gtop(6.5)="<style>"
"RTN","SAMIZ3",217,0)
 set gtop(7)="<style>body {"
"RTN","SAMIZ3",218,0)
 set gtop(8)="    font-family: verdana, sans-serif;"
"RTN","SAMIZ3",219,0)
 set gtop(9)="    font-size: 10pt;"
"RTN","SAMIZ3",220,0)
 set gtop(10)="}"
"RTN","SAMIZ3",221,0)
 set gtop(11)="div.formats {"
"RTN","SAMIZ3",222,0)
 set gtop(12)="    border: 1px solid black;"
"RTN","SAMIZ3",223,0)
 ; set gtop(13)="    margin: 2em;"
"RTN","SAMIZ3",224,0)
 set gtop(13)="    margin: .02em;"
"RTN","SAMIZ3",225,0)
 set gtop(14)="    width: 20em;"
"RTN","SAMIZ3",226,0)
 set gtop(15)="    padding: 0.4em;"
"RTN","SAMIZ3",227,0)
 set gtop(16)="}"
"RTN","SAMIZ3",228,0)
 set gtop(17)="div.formats p {"
"RTN","SAMIZ3",229,0)
 set gtop(18)="    display: inline;"
"RTN","SAMIZ3",230,0)
 set gtop(19)="}"
"RTN","SAMIZ3",231,0)
 set gtop(20)="div.formats ul, div.formats li {"
"RTN","SAMIZ3",232,0)
 set gtop(21)="    display: inline;"
"RTN","SAMIZ3",233,0)
 set gtop(22)="    color: #333399;"
"RTN","SAMIZ3",234,0)
 set gtop(23)="    margin: 0px;"
"RTN","SAMIZ3",235,0)
 set gtop(24)="    padding: 0px;"
"RTN","SAMIZ3",236,0)
 set gtop(25)="    font-weight: bold;"
"RTN","SAMIZ3",237,0)
 set gtop(26)="}"
"RTN","SAMIZ3",238,0)
 set gtop(27)="div.formats li {"
"RTN","SAMIZ3",239,0)
 set gtop(28)="    padding: 0px 0.1em;"
"RTN","SAMIZ3",240,0)
 set gtop(29)="}"
"RTN","SAMIZ3",241,0)
 set gtop(30)="div.tables {"
"RTN","SAMIZ3",242,0)
 set gtop(31)="    margin: 1em auto; align: left;"
"RTN","SAMIZ3",243,0)
 set gtop(32)="}"
"RTN","SAMIZ3",244,0)
 set gtop(33)="table {"
"RTN","SAMIZ3",245,0)
 set gtop(34)="    border-collapse: collapse;"
"RTN","SAMIZ3",246,0)
 ; set gtop(35)="    margin: 3em auto;"
"RTN","SAMIZ3",247,0)
 ; set gtop(35)="    margin: 3em auto;"
"RTN","SAMIZ3",248,0)
 set gtop(35)=" "
"RTN","SAMIZ3",249,0)
 set gtop(36)="}"
"RTN","SAMIZ3",250,0)
 set gtop(37)="table caption {"
"RTN","SAMIZ3",251,0)
 set gtop(38)="    font-size: 110%;"
"RTN","SAMIZ3",252,0)
 set gtop(39)="    padding: 0.4em;"
"RTN","SAMIZ3",253,0)
 set gtop(40)="    background-color: black;"
"RTN","SAMIZ3",254,0)
 set gtop(41)="    color: white;"
"RTN","SAMIZ3",255,0)
 set gtop(42)="    font-weight: bold;"
"RTN","SAMIZ3",256,0)
 set gtop(43)="}"
"RTN","SAMIZ3",257,0)
 set gtop(44)="table td, table th {"
"RTN","SAMIZ3",258,0)
 set gtop(45)="    border: 1px solid #e0e0e0;"
"RTN","SAMIZ3",259,0)
 set gtop(46)="    margin: 0px;"
"RTN","SAMIZ3",260,0)
 set gtop(47)="    padding: 0.4em;"
"RTN","SAMIZ3",261,0)
 set gtop(48)="    white-space: normal; word-wrap: break-word;"
"RTN","SAMIZ3",262,0)
 set gtop(49)="}"
"RTN","SAMIZ3",263,0)
 set gtop(50)="table th {"
"RTN","SAMIZ3",264,0)
 set gtop(51)="    background-color: #808080;"
"RTN","SAMIZ3",265,0)
 set gtop(52)="    color: white;"
"RTN","SAMIZ3",266,0)
 set gtop(53)="    font-weight: bold;"
"RTN","SAMIZ3",267,0)
 set gtop(54)="    text-align: center;"
"RTN","SAMIZ3",268,0)
 set gtop(55)="}"
"RTN","SAMIZ3",269,0)
 set gtop(56)="table td {"
"RTN","SAMIZ3",270,0)
 set gtop(57)="    font-size: 90%;"
"RTN","SAMIZ3",271,0)
 set gtop(58)="    padding: 0.4em; white-space:normal; word-wrap: break-word;"
"RTN","SAMIZ3",272,0)
 set gtop(59)="}"
"RTN","SAMIZ3",273,0)
 set gtop(60)="</style>"
"RTN","SAMIZ3",274,0)
 set gtop(61)="</head>"
"RTN","SAMIZ3",275,0)
 set gtop(62)="<body>"
"RTN","SAMIZ3",276,0)
 ;
"RTN","SAMIZ3",277,0)
 set gbot="</body></html>"
"RTN","SAMIZ3",278,0)
 ;
"RTN","SAMIZ3",279,0)
 quit  ; end of htmltb2
"RTN","SAMIZ3",280,0)
 ;
"RTN","SAMIZ3",281,0)
 ;
"RTN","SAMIZ3",282,0)
 ;
"RTN","SAMIZ3",283,0)
eor ; end of routine %yottaweb
"RTN","SAMIZ4")
0^96^B331590902
"RTN","SAMIZ4",1,0)
%yottautl ;ven/gpl-yottadb extension: utilities ;2018-02-08T19:18Z
"RTN","SAMIZ4",2,0)
 ;;1.8;Mash;;;Build 1
"RTN","SAMIZ4",3,0)
 ;
"RTN","SAMIZ4",4,0)
 ; %yottaq implements the Yottadb Extension Library's utilities
"RTN","SAMIZ4",5,0)
 ; ppis & apis. This will eventually be reorganized into topics &
"RTN","SAMIZ4",6,0)
 ; migrated to other Mash namespaces. In the meantime, they will be
"RTN","SAMIZ4",7,0)
 ; added to the new %yotta ppi library.
"RTN","SAMIZ4",8,0)
 ; It is currently untested & in progress.
"RTN","SAMIZ4",9,0)
 ;
"RTN","SAMIZ4",10,0)
 quit  ; no entry from top
"RTN","SAMIZ4",11,0)
 ;
"RTN","SAMIZ4",12,0)
 ;
"RTN","SAMIZ4",13,0)
 ;
"RTN","SAMIZ4",14,0)
 ;@section 0 primary development
"RTN","SAMIZ4",15,0)
 ;
"RTN","SAMIZ4",16,0)
 ;
"RTN","SAMIZ4",17,0)
 ;
"RTN","SAMIZ4",18,0)
 ;@routine-credits
"RTN","SAMIZ4",19,0)
 ;@primary-dev: George P. Lilly (gpl)
"RTN","SAMIZ4",20,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIZ4",21,0)
 ;@primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIZ4",22,0)
 ; http://vistaexpertise.net
"RTN","SAMIZ4",23,0)
 ;@copyright: 2017/2018, gpl, all rights reserved
"RTN","SAMIZ4",24,0)
 ;@license: Apache 2.0
"RTN","SAMIZ4",25,0)
 ; https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIZ4",26,0)
 ;
"RTN","SAMIZ4",27,0)
 ;@last-updated: 2018-02-08T19:18Z
"RTN","SAMIZ4",28,0)
 ;@application: Mumps Advanced Shell (Mash)
"RTN","SAMIZ4",29,0)
 ;@module: Yottadb Extension - %yotta
"RTN","SAMIZ4",30,0)
 ;@version: 1.8T04
"RTN","SAMIZ4",31,0)
 ;@release-date: not yet released
"RTN","SAMIZ4",32,0)
 ;@patch-list: none yet
"RTN","SAMIZ4",33,0)
 ;
"RTN","SAMIZ4",34,0)
 ;@additional-dev: Frederick D. S. Marshall (toad)
"RTN","SAMIZ4",35,0)
 ; toad@vistaexpertise.net
"RTN","SAMIZ4",36,0)
 ;
"RTN","SAMIZ4",37,0)
 ;@module-credits
"RTN","SAMIZ4",38,0)
 ;@primary-dev: George P. Lilly (gpl)
"RTN","SAMIZ4",39,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIZ4",40,0)
 ;@project: VA Partnership to Increase Access to Lung Screening
"RTN","SAMIZ4",41,0)
 ; (VA-PALS)
"RTN","SAMIZ4",42,0)
 ; http://va-pals.org/
"RTN","SAMIZ4",43,0)
 ;@funding: 2017, gpl
"RTN","SAMIZ4",44,0)
 ;@funding: 2017, ven
"RTN","SAMIZ4",45,0)
 ;@funding: 2017/2018, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMIZ4",46,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMIZ4",47,0)
 ;@partner-org: Veterans Affairs Office of Rural health
"RTN","SAMIZ4",48,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMIZ4",49,0)
 ;@partner-org: International Early Lung Cancer Action Program (I-ELCAP)
"RTN","SAMIZ4",50,0)
 ; http://ielcap.com/
"RTN","SAMIZ4",51,0)
 ;@partner-org: Paraxial Technologies
"RTN","SAMIZ4",52,0)
 ; http://paraxialtech.com/
"RTN","SAMIZ4",53,0)
 ;@partner-org: Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMIZ4",54,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMIZ4",55,0)
 ;
"RTN","SAMIZ4",56,0)
 ;@module-log
"RTN","SAMIZ4",57,0)
 ; 2017-07-04 ven/gpl %*1.8t01 %yottautl: create routine to hold
"RTN","SAMIZ4",58,0)
 ; yottadb utility methods.
"RTN","SAMIZ4",59,0)
 ;
"RTN","SAMIZ4",60,0)
 ; 2017-09-12 ven/gpl %*1.8t01 %yottautl: update
"RTN","SAMIZ4",61,0)
 ;
"RTN","SAMIZ4",62,0)
 ; 2017-09-18 ven/gpl %*1.8t01 %yottautl: update
"RTN","SAMIZ4",63,0)
 ;
"RTN","SAMIZ4",64,0)
 ; 2018-02-07/08 ven/toad %*1.8t04 %yottautl: passim add white space
"RTN","SAMIZ4",65,0)
 ; & hdr comments & do-dot quits, tag w/Apache license & attribution
"RTN","SAMIZ4",66,0)
 ; & to-do to shift namespace later.
"RTN","SAMIZ4",67,0)
 ;
"RTN","SAMIZ4",68,0)
 ;@to-do
"RTN","SAMIZ4",69,0)
 ; %yotta: create entry points in ppi/api style
"RTN","SAMIZ4",70,0)
 ; r/all local calls w/calls through ^%yotta
"RTN","SAMIZ4",71,0)
 ; organize by topic & renamespace variously
"RTN","SAMIZ4",72,0)
 ;
"RTN","SAMIZ4",73,0)
 ;@contents
"RTN","SAMIZ4",74,0)
 ; [too big, organize & break up]
"RTN","SAMIZ4",75,0)
 ;
"RTN","SAMIZ4",76,0)
 ;
"RTN","SAMIZ4",77,0)
 ;
"RTN","SAMIZ4",78,0)
 ;@section 1 code to implement ppis & apis
"RTN","SAMIZ4",79,0)
 ;
"RTN","SAMIZ4",80,0)
 ;
"RTN","SAMIZ4",81,0)
 ;
"RTN","SAMIZ4",82,0)
starttm(ary) ; timestamp the start time
"RTN","SAMIZ4",83,0)
 ;
"RTN","SAMIZ4",84,0)
 set @ary@("starttimefm")=$$timei
"RTN","SAMIZ4",85,0)
 set @ary@("starttime")=$$timee(@ary@("starttimefm"))
"RTN","SAMIZ4",86,0)
 ;
"RTN","SAMIZ4",87,0)
 quit  ; end of starttm
"RTN","SAMIZ4",88,0)
 ;
"RTN","SAMIZ4",89,0)
 ;
"RTN","SAMIZ4",90,0)
 ;
"RTN","SAMIZ4",91,0)
endtm(ary) ; timestamp the start time
"RTN","SAMIZ4",92,0)
 ;
"RTN","SAMIZ4",93,0)
 set @ary@("endtimefm")=$$timei
"RTN","SAMIZ4",94,0)
 set @ary@("endtime")=$$timee(@ary@("endtimefm"))
"RTN","SAMIZ4",95,0)
 set @ary@("elapsedtime")=$$elapsed(@ary@("endtimefm"),@ary@("starttimefm")) ;
"RTN","SAMIZ4",96,0)
 ; in seconds
"RTN","SAMIZ4",97,0)
 ;
"RTN","SAMIZ4",98,0)
 quit  ; end of endtm
"RTN","SAMIZ4",99,0)
 ;
"RTN","SAMIZ4",100,0)
 ;
"RTN","SAMIZ4",101,0)
 ;
"RTN","SAMIZ4",102,0)
elapsed(end,start) ; elapsed time in seconds. end and start are fm format
"RTN","SAMIZ4",103,0)
 ;
"RTN","SAMIZ4",104,0)
 quit $$fmdiff^xlfdt(end,start,2) ; end of $$elapsed
"RTN","SAMIZ4",105,0)
 ;
"RTN","SAMIZ4",106,0)
 ;
"RTN","SAMIZ4",107,0)
 ;
"RTN","SAMIZ4",108,0)
timei() ; internal time
"RTN","SAMIZ4",109,0)
 ;
"RTN","SAMIZ4",110,0)
 quit $$now^xlfdt ; end of $$timei
"RTN","SAMIZ4",111,0)
 ;
"RTN","SAMIZ4",112,0)
 ;
"RTN","SAMIZ4",113,0)
 ;
"RTN","SAMIZ4",114,0)
timee(fmtime) ; external time
"RTN","SAMIZ4",115,0)
 ;
"RTN","SAMIZ4",116,0)
 quit $$FMTE^XLFDT(fmtime) ; end of $$timee
"RTN","SAMIZ4",117,0)
 ;
"RTN","SAMIZ4",118,0)
 ;
"RTN","SAMIZ4",119,0)
 ;
"RTN","SAMIZ4",120,0)
addat(outary,inary,tag) ; both passed by name..
"RTN","SAMIZ4",121,0)
 ;
"RTN","SAMIZ4",122,0)
 ;  inary("attr")="xx" is converted to outary("tag@attr")="xx"
"RTN","SAMIZ4",123,0)
 ;   to make better xml - only works with simple arrays
"RTN","SAMIZ4",124,0)
 ;
"RTN","SAMIZ4",125,0)
 if '$data(tag) set tag="item"
"RTN","SAMIZ4",126,0)
 new zi set zi=""
"RTN","SAMIZ4",127,0)
 for  set zi=$order(@inary@(zi)) quit:zi=""  do  ;
"RTN","SAMIZ4",128,0)
 . set @outary@(tag_"@"_zi)=@inary@(zi)
"RTN","SAMIZ4",129,0)
 . quit
"RTN","SAMIZ4",130,0)
 ;
"RTN","SAMIZ4",131,0)
 quit  ; end of addat
"RTN","SAMIZ4",132,0)
 ;
"RTN","SAMIZ4",133,0)
 ;
"RTN","SAMIZ4",134,0)
 ;
"RTN","SAMIZ4",135,0)
testadd ; test of addat routine
"RTN","SAMIZ4",136,0)
 ;
"RTN","SAMIZ4",137,0)
 new gn set gn=$name(^xtmp("ehexpat",1))
"RTN","SAMIZ4",138,0)
 new gpl
"RTN","SAMIZ4",139,0)
 do addat("gpl",gn,"patient")
"RTN","SAMIZ4",140,0)
 zwrite gpl
"RTN","SAMIZ4",141,0)
 ;
"RTN","SAMIZ4",142,0)
 quit  ; end of testadd
"RTN","SAMIZ4",143,0)
 ;
"RTN","SAMIZ4",144,0)
 ;
"RTN","SAMIZ4",145,0)
 ;
"RTN","SAMIZ4",146,0)
genhtml2(hout,hary) ; generate an html table from array hary
"RTN","SAMIZ4",147,0)
 ;
"RTN","SAMIZ4",148,0)
 ; hout and hary are passed by name
"RTN","SAMIZ4",149,0)
 ;
"RTN","SAMIZ4",150,0)
 ;  hary("title")="problem list"
"RTN","SAMIZ4",151,0)
 ;  hary("header",1)="column 1 header"
"RTN","SAMIZ4",152,0)
 ;  hary("header",2)="col 2 header"
"RTN","SAMIZ4",153,0)
 ;  hary(1,1)="row 1 col1 value"
"RTN","SAMIZ4",154,0)
 ;  hary(1,2)="row 1 col2 value"
"RTN","SAMIZ4",155,0)
 ;  hary(1,2,"id")="the id of the element" 
"RTN","SAMIZ4",156,0)
 ;  etc...
"RTN","SAMIZ4",157,0)
 ;
"RTN","SAMIZ4",158,0)
 new c0i,c0j
"RTN","SAMIZ4",159,0)
 do addto(hout,"<div align=""center"">")
"RTN","SAMIZ4",160,0)
 ;
"RTN","SAMIZ4",161,0)
 ; if $data(@hary@("title")) do  ;
"RTN","SAMIZ4",162,0)
 ; . new x
"RTN","SAMIZ4",163,0)
 ; . set x="<title>"_@hary@("title")_"</title>"
"RTN","SAMIZ4",164,0)
 ; . do addto(hout,x)
"RTN","SAMIZ4",165,0)
 ; . quit
"RTN","SAMIZ4",166,0)
 ;
"RTN","SAMIZ4",167,0)
 do addto(hout,"<text>")
"RTN","SAMIZ4",168,0)
 do addto(hout,"<table border=""1"" style=""width:80%"">")
"RTN","SAMIZ4",169,0)
 if $data(@hary@("title")) do  ;
"RTN","SAMIZ4",170,0)
 . new x
"RTN","SAMIZ4",171,0)
 . set x="<caption><b>"_@hary@("title")_"</b></caption>"
"RTN","SAMIZ4",172,0)
 . do addto(hout,x)
"RTN","SAMIZ4",173,0)
 . quit
"RTN","SAMIZ4",174,0)
 if $data(@hary@("header")) do  ;
"RTN","SAMIZ4",175,0)
 . do addto(hout,"<thead>")
"RTN","SAMIZ4",176,0)
 . do addto(hout,"<tr>")
"RTN","SAMIZ4",177,0)
 . set c0i=0
"RTN","SAMIZ4",178,0)
 . for  set c0i=$order(@hary@("header",c0i)) quit:+c0i=0  do  ;
"RTN","SAMIZ4",179,0)
 . . do addto(hout,"<th>"_@hary@("header",c0i)_"</th>")
"RTN","SAMIZ4",180,0)
 . . quit
"RTN","SAMIZ4",181,0)
 . do addto(hout,"</tr>")
"RTN","SAMIZ4",182,0)
 . do addto(hout,"</thead>")
"RTN","SAMIZ4",183,0)
 . quit
"RTN","SAMIZ4",184,0)
 do addto(hout,"<tbody>")
"RTN","SAMIZ4",185,0)
 if $data(@hary@(1)) do  ;
"RTN","SAMIZ4",186,0)
 . set c0i=0 set c0j=0
"RTN","SAMIZ4",187,0)
 . for  set c0i=$order(@hary@(c0i)) quit:+c0i=0  do  ;
"RTN","SAMIZ4",188,0)
 . . do addto(hout,"<tr>")
"RTN","SAMIZ4",189,0)
 . . for  set c0j=$order(@hary@(c0i,c0j)) quit:+c0j=0  do  ;
"RTN","SAMIZ4",190,0)
 . . . new uid set uid=$get(@hary@(c0i,c0j,"id"))
"RTN","SAMIZ4",191,0)
 . . . if uid'="" do addto(hout,"<td style=""padding:5px;"" id="""_uid_""">"_@hary@(c0i,c0j)_"</td>")
"RTN","SAMIZ4",192,0)
 . . . else  do addto(hout,"<td style=""padding:5px;"">"_@hary@(c0i,c0j)_"</td>")
"RTN","SAMIZ4",193,0)
 . . do addto(hout,"</tr>")
"RTN","SAMIZ4",194,0)
 . . quit
"RTN","SAMIZ4",195,0)
 . quit
"RTN","SAMIZ4",196,0)
 do addto(hout,"</tbody>")
"RTN","SAMIZ4",197,0)
 do addto(hout,"</table>")
"RTN","SAMIZ4",198,0)
 do addto(hout,"</text>")
"RTN","SAMIZ4",199,0)
 do addto(hout,"</div>")
"RTN","SAMIZ4",200,0)
 ;
"RTN","SAMIZ4",201,0)
 quit  ; end of genhtml2
"RTN","SAMIZ4",202,0)
 ;
"RTN","SAMIZ4",203,0)
 ;
"RTN","SAMIZ4",204,0)
 ;
"RTN","SAMIZ4",205,0)
genhtml(hout,hary) ; generate an html table from array hary
"RTN","SAMIZ4",206,0)
 ;
"RTN","SAMIZ4",207,0)
 ; hout and hary are passed by name
"RTN","SAMIZ4",208,0)
 ;
"RTN","SAMIZ4",209,0)
 ;  hary("title")="problem list"
"RTN","SAMIZ4",210,0)
 ;  hary("header",1)="column 1 header"
"RTN","SAMIZ4",211,0)
 ;  hary("header",2)="col 2 header"
"RTN","SAMIZ4",212,0)
 ;  hary(1,1)="row 1 col1 value"
"RTN","SAMIZ4",213,0)
 ;  hary(1,2)="row 1 col2 value"
"RTN","SAMIZ4",214,0)
 ;  hary(1,2,"id")="the id of the element" 
"RTN","SAMIZ4",215,0)
 ;  etc...
"RTN","SAMIZ4",216,0)
 ;
"RTN","SAMIZ4",217,0)
 new divclass,tblclass
"RTN","SAMIZ4",218,0)
 set divclass=$get(@hary@("divclass"))
"RTN","SAMIZ4",219,0)
 set tblclass=$get(@hary@("tableclass"))
"RTN","SAMIZ4",220,0)
 if divclass="" set divclass="tables"
"RTN","SAMIZ4",221,0)
 if tblclass="" set tblclass="patient"
"RTN","SAMIZ4",222,0)
 new c0i,c0j
"RTN","SAMIZ4",223,0)
 do addto(hout,"<div class=""tables"">")
"RTN","SAMIZ4",224,0)
 ;
"RTN","SAMIZ4",225,0)
 ; if $data(@hary@("title")) do  ;
"RTN","SAMIZ4",226,0)
 ; . new x
"RTN","SAMIZ4",227,0)
 ; . set x="<title>"_@hary@("title")_"</title>"
"RTN","SAMIZ4",228,0)
 ; . do addto(hout,x)
"RTN","SAMIZ4",229,0)
 ; . quit
"RTN","SAMIZ4",230,0)
 ; do addto(hout,"<text>")
"RTN","SAMIZ4",231,0)
 ;
"RTN","SAMIZ4",232,0)
 new zwidth set zwidth=$get(@hary@("width"))
"RTN","SAMIZ4",233,0)
 if zwidth="" set zwidth="80%"
"RTN","SAMIZ4",234,0)
 do addto(hout,"<table class=""summary"" style=""width:"_zwidth_""">")
"RTN","SAMIZ4",235,0)
 if $data(@hary@("title")) do  ;
"RTN","SAMIZ4",236,0)
 . new x
"RTN","SAMIZ4",237,0)
 . set x="<caption>"_@hary@("title")_"</caption>"
"RTN","SAMIZ4",238,0)
 . do addto(hout,x)
"RTN","SAMIZ4",239,0)
 . quit
"RTN","SAMIZ4",240,0)
 if $data(@hary@("header")) do  ;
"RTN","SAMIZ4",241,0)
 . do addto(hout,"<thead>")
"RTN","SAMIZ4",242,0)
 . do addto(hout,"<tr>")
"RTN","SAMIZ4",243,0)
 . new numcol set numcol=$order(@hary@("header",""),-1)
"RTN","SAMIZ4",244,0)
 . set c0i=0
"RTN","SAMIZ4",245,0)
 . for  set c0i=$order(@hary@("header",c0i)) quit:+c0i=0  do  ;
"RTN","SAMIZ4",246,0)
 . . ; new th set th="<th colspan="""_numcol_""">"_@hary@("header",c0i)_"</th>"
"RTN","SAMIZ4",247,0)
 . . new th set th="<th>"_@hary@("header",c0i)_"</th>"
"RTN","SAMIZ4",248,0)
 . . do addto(hout,th)
"RTN","SAMIZ4",249,0)
 . . quit
"RTN","SAMIZ4",250,0)
 . do addto(hout,"</tr>")
"RTN","SAMIZ4",251,0)
 . do addto(hout,"</thead>")
"RTN","SAMIZ4",252,0)
 . quit
"RTN","SAMIZ4",253,0)
 do addto(hout,"<tbody>")
"RTN","SAMIZ4",254,0)
 if $data(@hary@(1)) do  ;
"RTN","SAMIZ4",255,0)
 . set c0i=0 set c0j=0
"RTN","SAMIZ4",256,0)
 . for  set c0i=$order(@hary@(c0i)) quit:+c0i=0  do  ;
"RTN","SAMIZ4",257,0)
 . . do addto(hout,"<tr>")
"RTN","SAMIZ4",258,0)
 . . for  set c0j=$order(@hary@(c0i,c0j)) quit:+c0j=0  do  ;
"RTN","SAMIZ4",259,0)
 . . . new uid set uid=$get(@hary@(c0i,c0j,"id"))
"RTN","SAMIZ4",260,0)
 . . . if uid'="" do addto(hout,"<td id="""_uid_""">"_@hary@(c0i,c0j)_"</td>")
"RTN","SAMIZ4",261,0)
 . . . else  do addto(hout,"<td>"_@hary@(c0i,c0j)_"</td>")
"RTN","SAMIZ4",262,0)
 . . . quit
"RTN","SAMIZ4",263,0)
 . . do addto(hout,"</tr>")
"RTN","SAMIZ4",264,0)
 . . quit
"RTN","SAMIZ4",265,0)
 . quit
"RTN","SAMIZ4",266,0)
 do addto(hout,"</tbody>")
"RTN","SAMIZ4",267,0)
 do addto(hout,"</table>")
"RTN","SAMIZ4",268,0)
 ; do addto(hout,"</text>")
"RTN","SAMIZ4",269,0)
 do addto(hout,"</div>")
"RTN","SAMIZ4",270,0)
 ;
"RTN","SAMIZ4",271,0)
 quit  ; end of genhtml
"RTN","SAMIZ4",272,0)
 ;
"RTN","SAMIZ4",273,0)
 ;
"RTN","SAMIZ4",274,0)
 ;
"RTN","SAMIZ4",275,0)
genvhtml(hout,hary) ; generate a vertical html table from array hary
"RTN","SAMIZ4",276,0)
 ;
"RTN","SAMIZ4",277,0)
 ; headers are in the first row
"RTN","SAMIZ4",278,0)
 ; hout and hary are passed by name
"RTN","SAMIZ4",279,0)
 ;
"RTN","SAMIZ4",280,0)
 ; format of the table:
"RTN","SAMIZ4",281,0)
 ;  hary("title")="problem list"
"RTN","SAMIZ4",282,0)
 ;  hary("header",1)="row 1 column 1 header"
"RTN","SAMIZ4",283,0)
 ;  hary("header",2)="row 2 col 2 header"
"RTN","SAMIZ4",284,0)
 ;  hary(1,1)="row 1 col2 value"
"RTN","SAMIZ4",285,0)
 ;  hary(2,1)="row 2 col2 value"
"RTN","SAMIZ4",286,0)
 ;  etc...
"RTN","SAMIZ4",287,0)
 ;
"RTN","SAMIZ4",288,0)
 new divclass,tblclass
"RTN","SAMIZ4",289,0)
 set divclass=$get(@hary@("divclass"))
"RTN","SAMIZ4",290,0)
 set tblclass=$get(@hary@("tableclass"))
"RTN","SAMIZ4",291,0)
 if divclass="" set divclass="tables"
"RTN","SAMIZ4",292,0)
 if tblclass="" set tblclass="patient"
"RTN","SAMIZ4",293,0)
 new c0i,c0j
"RTN","SAMIZ4",294,0)
 do addto(hout,"<div class=""tables"">")
"RTN","SAMIZ4",295,0)
 ; do addto(hout,"<div align=""center"">")
"RTN","SAMIZ4",296,0)
 new zwidth set zwidth=$get(@hary@("width"))
"RTN","SAMIZ4",297,0)
 if zwidth="" set zwidth="80%"
"RTN","SAMIZ4",298,0)
 do addto(hout,"<table class=""summary"" style=""width:"_zwidth_""">")
"RTN","SAMIZ4",299,0)
 ; do addto(hout,"<text>")
"RTN","SAMIZ4",300,0)
 ; do addto(hout,"<table border=""1"" style=""width:40%"">")
"RTN","SAMIZ4",301,0)
 if $d(@hary@("title")) do  ;
"RTN","SAMIZ4",302,0)
 . new x
"RTN","SAMIZ4",303,0)
 . set x="<caption><b>"_@hary@("title")_"</b></caption>"
"RTN","SAMIZ4",304,0)
 . do addto(hout,x)
"RTN","SAMIZ4",305,0)
 . quit
"RTN","SAMIZ4",306,0)
 if $data(@hary@("header")) do  ;
"RTN","SAMIZ4",307,0)
 . do addto(hout,"<thead>")
"RTN","SAMIZ4",308,0)
 . do addto(hout,"<tr>")
"RTN","SAMIZ4",309,0)
 . new numcol set numcol=$order(@hary@("header",""),-1)
"RTN","SAMIZ4",310,0)
 . set c0i=0
"RTN","SAMIZ4",311,0)
 . for  set c0i=$order(@hary@("header",c0i)) quit:+c0i=0  do  ;
"RTN","SAMIZ4",312,0)
 . . do addto(hout,"<th style=""padding:5px;"">"_@hary@("header",c0i)_"</th>")
"RTN","SAMIZ4",313,0)
 . . do addto(hout,"<td style=""padding:5px;"">"_@hary@(c0i,1)_"</td>")
"RTN","SAMIZ4",314,0)
 . . quit
"RTN","SAMIZ4",315,0)
 . do addto(hout,"</tr>")
"RTN","SAMIZ4",316,0)
 . quit
"RTN","SAMIZ4",317,0)
 do addto(hout,"</table>")
"RTN","SAMIZ4",318,0)
 do addto(hout,"</text>")
"RTN","SAMIZ4",319,0)
 do addto(hout,"</div>")
"RTN","SAMIZ4",320,0)
 ;
"RTN","SAMIZ4",321,0)
 quit  ; end of genvhtml
"RTN","SAMIZ4",322,0)
 ;
"RTN","SAMIZ4",323,0)
 ;
"RTN","SAMIZ4",324,0)
 ;
"RTN","SAMIZ4",325,0)
tstyle1 ; table style template
"RTN","SAMIZ4",326,0)
 ;;<style>
"RTN","SAMIZ4",327,0)
 ;;table, th, td
"RTN","SAMIZ4",328,0)
 ;;{
"RTN","SAMIZ4",329,0)
 ;;border-collapse:collapse;
"RTN","SAMIZ4",330,0)
 ;;border:1px solid black;
"RTN","SAMIZ4",331,0)
 ;;}
"RTN","SAMIZ4",332,0)
 ;;th, td
"RTN","SAMIZ4",333,0)
 ;;{
"RTN","SAMIZ4",334,0)
 ;;padding:5px;
"RTN","SAMIZ4",335,0)
 ;;}
"RTN","SAMIZ4",336,0)
 ;;</style>
"RTN","SAMIZ4",337,0)
 quit  ; end of tstyle1
"RTN","SAMIZ4",338,0)
 ;
"RTN","SAMIZ4",339,0)
 ;
"RTN","SAMIZ4",340,0)
 ;
"RTN","SAMIZ4",341,0)
testhtml ;
"RTN","SAMIZ4",342,0)
 ;
"RTN","SAMIZ4",343,0)
 new html
"RTN","SAMIZ4",344,0)
 set html("title")="problem list"
"RTN","SAMIZ4",345,0)
 set html("header",1)="column 1 header"
"RTN","SAMIZ4",346,0)
 set html("header",2)="col 2 header"
"RTN","SAMIZ4",347,0)
 set html(1,1)="row 1 col1 value"
"RTN","SAMIZ4",348,0)
 set html(1,2)="row 1 col2 value"
"RTN","SAMIZ4",349,0)
 new ghtml
"RTN","SAMIZ4",350,0)
 do genhtml("ghtml","html")
"RTN","SAMIZ4",351,0)
 zwrite ghtml
"RTN","SAMIZ4",352,0)
 ;
"RTN","SAMIZ4",353,0)
 quit  ; end of testhtml
"RTN","SAMIZ4",354,0)
 ;
"RTN","SAMIZ4",355,0)
 ;
"RTN","SAMIZ4",356,0)
 ;
"RTN","SAMIZ4",357,0)
test2 ;
"RTN","SAMIZ4",358,0)
 ;
"RTN","SAMIZ4",359,0)
 new html
"RTN","SAMIZ4",360,0)
 set html("title")="problem list"
"RTN","SAMIZ4",361,0)
 set html("header",1)="column 1 header"
"RTN","SAMIZ4",362,0)
 set html("header",2)="col 2 header"
"RTN","SAMIZ4",363,0)
 set html(1,1)="row 1 col1 value"
"RTN","SAMIZ4",364,0)
 set html(1,2)="row 1 col2 value"
"RTN","SAMIZ4",365,0)
 new ghtml
"RTN","SAMIZ4",366,0)
 do genhtml2("ghtml","html")
"RTN","SAMIZ4",367,0)
 zwrite ghtml
"RTN","SAMIZ4",368,0)
 ;
"RTN","SAMIZ4",369,0)
 quit  ; end of test2
"RTN","SAMIZ4",370,0)
 ;
"RTN","SAMIZ4",371,0)
 ;
"RTN","SAMIZ4",372,0)
 ;
"RTN","SAMIZ4",373,0)
addto(dest,what) ; adds string what to list dest 
"RTN","SAMIZ4",374,0)
 ;
"RTN","SAMIZ4",375,0)
 ; dest is passed by name
"RTN","SAMIZ4",376,0)
 ;
"RTN","SAMIZ4",377,0)
 new gn
"RTN","SAMIZ4",378,0)
 set gn=$o(@dest@("aaaaaa"),-1)+1
"RTN","SAMIZ4",379,0)
 set @dest@(gn)=what
"RTN","SAMIZ4",380,0)
 set @dest@(0)=gn ; count
"RTN","SAMIZ4",381,0)
 ;
"RTN","SAMIZ4",382,0)
 quit  ; end of addto
"RTN","SAMIZ4",383,0)
 ;
"RTN","SAMIZ4",384,0)
 ;
"RTN","SAMIZ4",385,0)
 ;
"RTN","SAMIZ4",386,0)
addary(dest,what) ; adds array what to list dest 
"RTN","SAMIZ4",387,0)
 ;
"RTN","SAMIZ4",388,0)
 ; dest and what are passed by name
"RTN","SAMIZ4",389,0)
 ;
"RTN","SAMIZ4",390,0)
 new gn
"RTN","SAMIZ4",391,0)
 set gn=$order(@dest@("aaaaaa"),-1)+1
"RTN","SAMIZ4",392,0)
 new zzi set zzi=0
"RTN","SAMIZ4",393,0)
 for  set zzi=$order(@what@(zzi)) quit:'zzi  do  ;
"RTN","SAMIZ4",394,0)
 . set @dest@(gn)=$get(@what@(zzi))
"RTN","SAMIZ4",395,0)
 . set @dest@(0)=gn ; count
"RTN","SAMIZ4",396,0)
 . set gn=gn+1
"RTN","SAMIZ4",397,0)
 . quit
"RTN","SAMIZ4",398,0)
 ;
"RTN","SAMIZ4",399,0)
 quit  ; end of addary
"RTN","SAMIZ4",400,0)
 ;
"RTN","SAMIZ4",401,0)
 ;
"RTN","SAMIZ4",402,0)
 ;
"RTN","SAMIZ4",403,0)
orgoid() ; extrinsic which returns the organization oid
"RTN","SAMIZ4",404,0)
 ;
"RTN","SAMIZ4",405,0)
 quit "2.16.840.1.113883.5.83" ; worldvista hl7 oid - 
"RTN","SAMIZ4",406,0)
 ;
"RTN","SAMIZ4",407,0)
 ; replace with oid lookup from institution file
"RTN","SAMIZ4",408,0)
 ;
"RTN","SAMIZ4",409,0)
 ;
"RTN","SAMIZ4",410,0)
 ;
"RTN","SAMIZ4",411,0)
tree(where,prefix,docid,zout) ; show a tree starting at a node in mxml. 
"RTN","SAMIZ4",412,0)
 ;
"RTN","SAMIZ4",413,0)
 ; node is passed by name
"RTN","SAMIZ4",414,0)
 ; 
"RTN","SAMIZ4",415,0)
 if $get(prefix)="" set prefix="|--" ; starting prefix
"RTN","SAMIZ4",416,0)
 if '$data(kbaijob) set kbaijob=$job
"RTN","SAMIZ4",417,0)
 new node set node=$name(^TMP("MXMLDOM",kbaijob,docid,where))
"RTN","SAMIZ4",418,0)
 new txt set txt=$$clean($$alltxt(node))
"RTN","SAMIZ4",419,0)
 write:'$get(diquiet) !,prefix_@node_" "_txt
"RTN","SAMIZ4",420,0)
 do oneout(zout,prefix_@node_" "_txt)
"RTN","SAMIZ4",421,0)
 new zi set zi=""
"RTN","SAMIZ4",422,0)
 for  set zi=$order(@node@("a",zi)) quit:zi=""  do  ;
"RTN","SAMIZ4",423,0)
 . write:'$get(diquiet) !,prefix_"  : "_zi_"^"_$get(@node@("a",zi))
"RTN","SAMIZ4",424,0)
 . do oneout(zout,prefix_"  : "_zi_"^"_$get(@node@("a",zi)))
"RTN","SAMIZ4",425,0)
 . quit
"RTN","SAMIZ4",426,0)
 for  set zi=$order(@node@("c",zi)) quit:zi=""  do  ;
"RTN","SAMIZ4",427,0)
 . do tree(zi,"|  "_prefix,docid,zout)
"RTN","SAMIZ4",428,0)
 . quit
"RTN","SAMIZ4",429,0)
 ;
"RTN","SAMIZ4",430,0)
 quit  ; end of tree
"RTN","SAMIZ4",431,0)
 ;
"RTN","SAMIZ4",432,0)
 ;
"RTN","SAMIZ4",433,0)
 ;
"RTN","SAMIZ4",434,0)
oneout(zbuf,ztxt) ; adds a line to zbuf
"RTN","SAMIZ4",435,0)
 ;
"RTN","SAMIZ4",436,0)
 new zi set zi=$order(@zbuf@(""),-1)+1
"RTN","SAMIZ4",437,0)
 set @zbuf@(zi)=ztxt
"RTN","SAMIZ4",438,0)
 ;
"RTN","SAMIZ4",439,0)
 quit  ; end of oneout
"RTN","SAMIZ4",440,0)
 ;
"RTN","SAMIZ4",441,0)
 ;
"RTN","SAMIZ4",442,0)
 ;
"RTN","SAMIZ4",443,0)
alltxt(where) ; extrinsic which returns all text lines from the node .. concatinated 
"RTN","SAMIZ4",444,0)
 ;
"RTN","SAMIZ4",445,0)
 ; together
"RTN","SAMIZ4",446,0)
 ;
"RTN","SAMIZ4",447,0)
 new zti set zti=""
"RTN","SAMIZ4",448,0)
 new ztr set ztr=""
"RTN","SAMIZ4",449,0)
 for  s zti=$order(@where@("t",zti)) quit:zti=""  do  ;
"RTN","SAMIZ4",450,0)
 . set ztr=ztr_$get(@where@("t",zti))
"RTN","SAMIZ4",451,0)
 . quit
"RTN","SAMIZ4",452,0)
 ;
"RTN","SAMIZ4",453,0)
 quit ztr ; end of $$alltxt
"RTN","SAMIZ4",454,0)
 ;
"RTN","SAMIZ4",455,0)
 ;
"RTN","SAMIZ4",456,0)
 ;
"RTN","SAMIZ4",457,0)
clean(str) ; extrinsic function; returns string - gpl borrowed from the ccr package
"RTN","SAMIZ4",458,0)
 ;
"RTN","SAMIZ4",459,0)
 ;; removes all non printable characters from a string.
"RTN","SAMIZ4",460,0)
 ;; str by value
"RTN","SAMIZ4",461,0)
 ;
"RTN","SAMIZ4",462,0)
 new tr,i
"RTN","SAMIZ4",463,0)
 for i=0:1:31 s tr=$get(tr)_$char(i)
"RTN","SAMIZ4",464,0)
 set tr=tr_$char(127)
"RTN","SAMIZ4",465,0)
 new zr set zr=$translate(str,tr)
"RTN","SAMIZ4",466,0)
 set zr=$$ldblnks(zr) ; get rid of leading blanks
"RTN","SAMIZ4",467,0)
 ;
"RTN","SAMIZ4",468,0)
 quit zr ; end of $$clean
"RTN","SAMIZ4",469,0)
 ;
"RTN","SAMIZ4",470,0)
 ;
"RTN","SAMIZ4",471,0)
 ;
"RTN","SAMIZ4",472,0)
ldblnks(st) ; extrinsic which removes leading blanks from a string
"RTN","SAMIZ4",473,0)
 ;
"RTN","SAMIZ4",474,0)
 new pos for pos=1:1:$length(st)  quit:$extract(st,pos)'=" "
"RTN","SAMIZ4",475,0)
 ;
"RTN","SAMIZ4",476,0)
 quit $extract(st,pos,$length(st)) ; end of $$ldblnks
"RTN","SAMIZ4",477,0)
 ;
"RTN","SAMIZ4",478,0)
 ;
"RTN","SAMIZ4",479,0)
 ;
"RTN","SAMIZ4",480,0)
show(what,docid,zout) ;
"RTN","SAMIZ4",481,0)
 ;
"RTN","SAMIZ4",482,0)
 if '$data(c0xjob) set c0xjob=$job
"RTN","SAMIZ4",483,0)
 do tree(what,,docid,zout)
"RTN","SAMIZ4",484,0)
 ;
"RTN","SAMIZ4",485,0)
 quit  ; end of show
"RTN","SAMIZ4",486,0)
 ;
"RTN","SAMIZ4",487,0)
 ;
"RTN","SAMIZ4",488,0)
 ;
"RTN","SAMIZ4",489,0)
listm(out,in) ; out is passed by name in is passed by reference
"RTN","SAMIZ4",490,0)
 ;
"RTN","SAMIZ4",491,0)
 new i set i=$query(@in@(""))
"RTN","SAMIZ4",492,0)
 for  set i=$query(@i) quit:i=""  do oneout(out,i_"="_@i)
"RTN","SAMIZ4",493,0)
 ;
"RTN","SAMIZ4",494,0)
 quit  ; end of listm
"RTN","SAMIZ4",495,0)
 ;
"RTN","SAMIZ4",496,0)
 ;
"RTN","SAMIZ4",497,0)
 ;
"RTN","SAMIZ4",498,0)
peel(out,in) ; compress a complex global into something simpler
"RTN","SAMIZ4",499,0)
 ;
"RTN","SAMIZ4",500,0)
 new i set i=$query(@in@(""))
"RTN","SAMIZ4",501,0)
 for  s i=$query(@i) quit:i=""  do  ;
"RTN","SAMIZ4",502,0)
 . new j,k,l,m,n,m1
"RTN","SAMIZ4",503,0)
 . set (l,m)=""
"RTN","SAMIZ4",504,0)
 . set n=$$shrink($qsubscript(i,$qlength(i)))
"RTN","SAMIZ4",505,0)
 . set k=$qsubscript(i,0)_"("""
"RTN","SAMIZ4",506,0)
 . for j=1:1:$qlength(i)-1  do  ;
"RTN","SAMIZ4",507,0)
 . . if +$qsubscript(i,j)>0 do  ;
"RTN","SAMIZ4",508,0)
 . . . if m'="" quit
"RTN","SAMIZ4",509,0)
 . . . set m=$qsubscript(i,j)
"RTN","SAMIZ4",510,0)
 . . . set m1=j
"RTN","SAMIZ4",511,0)
 . . . if j>1 set l=$qsubscript(i,j-1)
"RTN","SAMIZ4",512,0)
 . . . else  set l=$qsubscript(i,j)
"RTN","SAMIZ4",513,0)
 . . . if l["substanceadministration" set l=$p(l,"substanceadministration",2)
"RTN","SAMIZ4",514,0)
 . . . quit
"RTN","SAMIZ4",515,0)
 . . set k=k_$qsubscript(i,j)_""","""
"RTN","SAMIZ4",516,0)
 . . write:$get(debug) !,j," ",k
"RTN","SAMIZ4",517,0)
 . . quit
"RTN","SAMIZ4",518,0)
 . set k=k_$qsubscript(i,$qlength(i))_""")"
"RTN","SAMIZ4",519,0)
 . write:$get(debug) !,k,"=",@k
"RTN","SAMIZ4",520,0)
 . if l'="" do  quit  ;
"RTN","SAMIZ4",521,0)
 . . do:$get(@out@(l,m,n))'=""
"RTN","SAMIZ4",522,0)
 . . . ; new jj,n2
"RTN","SAMIZ4",523,0)
 . . . ; for jj=2:1 write !,jj set n2=$qsubscript(i,$qlength(i)-1)_"["_jj_"]"_n quit:$get(@out@(l,m,n2))=""  write !,n2
"RTN","SAMIZ4",524,0)
 . . . ; set n=n2
"RTN","SAMIZ4",525,0)
 . . . ; set n=$$shrink($qsubscript(i,$qlength(i)-1))_"_"_n
"RTN","SAMIZ4",526,0)
 . . . set n=$$mkxpath(i,m1)
"RTN","SAMIZ4",527,0)
 . . . break:$get(@out@(l,m,n))'=""
"RTN","SAMIZ4",528,0)
 . . . quit
"RTN","SAMIZ4",529,0)
 . . set @out@(l,m,n)=@k
"RTN","SAMIZ4",530,0)
 . . quit
"RTN","SAMIZ4",531,0)
 . if @k'="" do  ;
"RTN","SAMIZ4",532,0)
 . . if $qlength(i)>1 do  quit  ;
"RTN","SAMIZ4",533,0)
 . . . set l=$$shrink($qsubscript(i,$qlength(i)-1))
"RTN","SAMIZ4",534,0)
 . . . do:$get(@out@(l,n))'=""
"RTN","SAMIZ4",535,0)
 . . . . ; new jj,n2
"RTN","SAMIZ4",536,0)
 . . . . ; for jj=2:1 set n2=$qsubscript(i,$qlength(i)-1)_"["_jj_"]"_"_"_n quit:$get(@out@(l,n2))=""
"RTN","SAMIZ4",537,0)
 . . . . ; set n=n2
"RTN","SAMIZ4",538,0)
 . . . . ; break:$get(@out@(l,n))'=""
"RTN","SAMIZ4",539,0)
 . . . . set n=$$shrink($qsubscript(i,$qlength(i)-1))_"_"_n
"RTN","SAMIZ4",540,0)
 . . . . quit
"RTN","SAMIZ4",541,0)
 . . . set @out@(l,n)=@k
"RTN","SAMIZ4",542,0)
 . . . quit
"RTN","SAMIZ4",543,0)
 . . set @out@(n)=@k
"RTN","SAMIZ4",544,0)
 . . quit
"RTN","SAMIZ4",545,0)
 . quit
"RTN","SAMIZ4",546,0)
 ;
"RTN","SAMIZ4",547,0)
 quit  ; end of peel
"RTN","SAMIZ4",548,0)
 ;
"RTN","SAMIZ4",549,0)
 ;
"RTN","SAMIZ4",550,0)
 ;
"RTN","SAMIZ4",551,0)
shrink(x) ; reduce strings 
"RTN","SAMIZ4",552,0)
 ;
"RTN","SAMIZ4",553,0)
 new y,z
"RTN","SAMIZ4",554,0)
 set y=x
"RTN","SAMIZ4",555,0)
 set z="substanceadministration"
"RTN","SAMIZ4",556,0)
 if x[z set y=$piece(x,z,2)
"RTN","SAMIZ4",557,0)
 ;
"RTN","SAMIZ4",558,0)
 quit y ; end of $$shrink
"RTN","SAMIZ4",559,0)
 ;
"RTN","SAMIZ4",560,0)
 ;
"RTN","SAMIZ4",561,0)
 ;
"RTN","SAMIZ4",562,0)
mkxpath(zq,zm) ; extrinsic which returns the xpath derived from the $query value 
"RTN","SAMIZ4",563,0)
 ;
"RTN","SAMIZ4",564,0)
 ;passed by value. zm is the index to begin with
"RTN","SAMIZ4",565,0)
 ;
"RTN","SAMIZ4",566,0)
 new zr set zr=""
"RTN","SAMIZ4",567,0)
 new zi set zi=""
"RTN","SAMIZ4",568,0)
 for zi=1:1:$qlength(zq) set zr=zr_"/"_$qsubscript(zq,zi)
"RTN","SAMIZ4",569,0)
 ;
"RTN","SAMIZ4",570,0)
 quit zr ; end of $$mkxpath
"RTN","SAMIZ4",571,0)
 ;
"RTN","SAMIZ4",572,0)
 ;
"RTN","SAMIZ4",573,0)
 ;
"RTN","SAMIZ4",574,0)
 ; todo: make this work for regular xml files - only works now with 
"RTN","SAMIZ4",575,0)
 ;   attributes to a single tag per entry
"RTN","SAMIZ4",576,0)
 ;
"RTN","SAMIZ4",577,0)
 ;
"RTN","SAMIZ4",578,0)
 ;
"RTN","SAMIZ4",579,0)
ary2xml(outxml,inary,stk,child) ; convert an array to xml
"RTN","SAMIZ4",580,0)
 ;
"RTN","SAMIZ4",581,0)
 if '$data(@outxml@(1)) set @outxml@(1)="<?xml version=""1.0"" encoding=""utf-8"" ?>"
"RTN","SAMIZ4",582,0)
 new ii set ii=""
"RTN","SAMIZ4",583,0)
 new dattr set dattr="" ; deffered attributes
"RTN","SAMIZ4",584,0)
 for  set ii=$order(@inary@(ii),-1) quit:ii=""  do  ;
"RTN","SAMIZ4",585,0)
 . new attr,tag
"RTN","SAMIZ4",586,0)
 . set attr="" set tag=""
"RTN","SAMIZ4",587,0)
 . if ii["@" do  ;
"RTN","SAMIZ4",588,0)
 . . if tag="" set tag=$piece(ii,"@",1) set attr=$piece(ii,"@",2)_"="""_@inary@(ii)_""""
"RTN","SAMIZ4",589,0)
 . . write:$get(debug) !,"tag="_tag_" attr="_attr
"RTN","SAMIZ4",590,0)
 . . ; if $order(@inary@(ii))["@" do  ;
"RTN","SAMIZ4",591,0)
 . . ; for  set ii=$order(@inary@(ii),-1) quit:ii=""  quit:$order(@inary@(ii),-1)'[(tag_"@")  do  ;
"RTN","SAMIZ4",592,0)
 . . for  set ii=$order(@inary@(ii),-1) quit:ii=""  quit:ii'[(tag_"@")  do  ;
"RTN","SAMIZ4",593,0)
 . . . set attr=attr_" "_$piece(ii,"@",2)_"="""_@inary@(ii)_""""
"RTN","SAMIZ4",594,0)
 . . . write:$get(debug) !,"attr= ",attr
"RTN","SAMIZ4",595,0)
 . . . write:$get(debug) !,"ii= ",ii
"RTN","SAMIZ4",596,0)
 . . . quit
"RTN","SAMIZ4",597,0)
 . . set ii=$order(@inary@(ii)) ; reset to previous
"RTN","SAMIZ4",598,0)
 . . new ending set ending="/"
"RTN","SAMIZ4",599,0)
 . . if ii["@" do  ;
"RTN","SAMIZ4",600,0)
 . . . if $order(@inary@(ii),-1)=tag set dattr=" "_attr quit  ; deffered attributes
"RTN","SAMIZ4",601,0)
 . . . if $data(@inary@(tag)) set ending=""
"RTN","SAMIZ4",602,0)
 . . . do oneout(outxml,"<"_tag_" "_attr_ending_">")
"RTN","SAMIZ4",603,0)
 . . . if ending="" do push("stk","</"_tag_">")
"RTN","SAMIZ4",604,0)
 . . . quit
"RTN","SAMIZ4",605,0)
 . . quit
"RTN","SAMIZ4",606,0)
 . if ii'["@" do  ;
"RTN","SAMIZ4",607,0)
 . . if +ii=0 do  ;
"RTN","SAMIZ4",608,0)
 . . . do oneout(outxml,"<"_ii_dattr_">")
"RTN","SAMIZ4",609,0)
 . . . set dattr="" ; reinitialize after use
"RTN","SAMIZ4",610,0)
 . . . do push("stk","</"_ii_">")
"RTN","SAMIZ4",611,0)
 . . . quit
"RTN","SAMIZ4",612,0)
 . . quit
"RTN","SAMIZ4",613,0)
 . if $data(@inary@(ii)) do ary2xml(outxml,$name(@inary@(ii)))
"RTN","SAMIZ4",614,0)
 . quit
"RTN","SAMIZ4",615,0)
 if $data(stk) for  do oneout(outxml,$$pop("stk")) quit:'$data(stk)
"RTN","SAMIZ4",616,0)
 ;
"RTN","SAMIZ4",617,0)
 quit  ; end of ary2xml
"RTN","SAMIZ4",618,0)
 ;
"RTN","SAMIZ4",619,0)
 ;
"RTN","SAMIZ4",620,0)
 ;
"RTN","SAMIZ4",621,0)
push(buf,str) ;
"RTN","SAMIZ4",622,0)
 ;
"RTN","SAMIZ4",623,0)
 do oneout(buf,str)
"RTN","SAMIZ4",624,0)
 ;
"RTN","SAMIZ4",625,0)
 quit  ; end of push
"RTN","SAMIZ4",626,0)
 ;
"RTN","SAMIZ4",627,0)
 ;
"RTN","SAMIZ4",628,0)
 ;
"RTN","SAMIZ4",629,0)
pop(buf) ; extrinsic returns the last element and then deletes it
"RTN","SAMIZ4",630,0)
 ;
"RTN","SAMIZ4",631,0)
 new nm,tx
"RTN","SAMIZ4",632,0)
 set nm=$order(@buf@(""),-1)
"RTN","SAMIZ4",633,0)
 quit:nm="" nm
"RTN","SAMIZ4",634,0)
 set tx=@buf@(nm)
"RTN","SAMIZ4",635,0)
 kill @buf@(nm)
"RTN","SAMIZ4",636,0)
 ;
"RTN","SAMIZ4",637,0)
 quit tx ; end of $$pop
"RTN","SAMIZ4",638,0)
 ;
"RTN","SAMIZ4",639,0)
 ;
"RTN","SAMIZ4",640,0)
 ;
"RTN","SAMIZ4",641,0)
eor ; end of routine %yottautl
"RTN","SAMIZ5")
0^97^B169621353
"RTN","SAMIZ5",1,0)
%webutils ;SLC/KCM -- Utilities for HTTP communications ;Dec 06, 2019@09:57
"RTN","SAMIZ5",2,0)
 ;;2;Mash;;;Build 1
"RTN","SAMIZ5",3,0)
 ;
"RTN","SAMIZ5",4,0)
UP(X) Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","SAMIZ5",5,0)
LOW(X) Q $TR(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","SAMIZ5",6,0)
 ;
"RTN","SAMIZ5",7,0)
LTRIM(%X) ; Trim whitespace from left side of string
"RTN","SAMIZ5",8,0)
 ; derived from XLFSTR, but also removes tabs
"RTN","SAMIZ5",9,0)
 N %L,%R
"RTN","SAMIZ5",10,0)
 S %L=1,%R=$L(%X)
"RTN","SAMIZ5",11,0)
 F %L=1:1:$L(%X) Q:$A($E(%X,%L))>32
"RTN","SAMIZ5",12,0)
 Q $E(%X,%L,%R)
"RTN","SAMIZ5",13,0)
 ;
"RTN","SAMIZ5",14,0)
URLENC(X) ; Encode a string for use in a URL
"RTN","SAMIZ5",15,0)
 ; Q $ZCONVERT(X,"O","URL")  ; uncomment for fastest performance on Cache
"RTN","SAMIZ5",16,0)
 ; =, &, %, +, non-printable 
"RTN","SAMIZ5",17,0)
 ; {, } added JC 7-24-2012
"RTN","SAMIZ5",18,0)
 N I,Y,Z,LAST
"RTN","SAMIZ5",19,0)
     S Y=$P(X,"%") F I=2:1:$L(X,"%") S Y=Y_"%25"_$P(X,"%",I)
"RTN","SAMIZ5",20,0)
 S X=Y,Y=$P(X,"&") F I=2:1:$L(X,"&") S Y=Y_"%26"_$P(X,"&",I)
"RTN","SAMIZ5",21,0)
 S X=Y,Y=$P(X,"=") F I=2:1:$L(X,"=") S Y=Y_"%3D"_$P(X,"=",I)
"RTN","SAMIZ5",22,0)
 S X=Y,Y=$P(X,"+") F I=2:1:$L(X,"+") S Y=Y_"%2B"_$P(X,"+",I)
"RTN","SAMIZ5",23,0)
 S X=Y,Y=$P(X,"{") F I=2:1:$L(X,"{") S Y=Y_"%7B"_$P(X,"{",I)
"RTN","SAMIZ5",24,0)
 S X=Y,Y=$P(X,"}") F I=2:1:$L(X,"}") S Y=Y_"%7D"_$P(X,"}",I)
"RTN","SAMIZ5",25,0)
 S Y=$TR(Y," ","+")
"RTN","SAMIZ5",26,0)
 S Z="",LAST=1
"RTN","SAMIZ5",27,0)
 F I=1:1:$L(Y) I $A(Y,I)<32 D
"RTN","SAMIZ5",28,0)
 . S CODE=$$DEC2HEX($A(Y,I)),CODE=$TR($J(CODE,2)," ","0")
"RTN","SAMIZ5",29,0)
 . S Z=Z_$E(Y,LAST,I-1)_"%"_CODE,LAST=I+1
"RTN","SAMIZ5",30,0)
 S Z=Z_$E(Y,LAST,$L(Y))
"RTN","SAMIZ5",31,0)
 Q Z
"RTN","SAMIZ5",32,0)
 ;
"RTN","SAMIZ5",33,0)
URLDEC(X,PATH) ; Decode a URL-encoded string
"RTN","SAMIZ5",34,0)
 ; Q $ZCONVERT(X,"I","URL")  ; uncomment for fastest performance on Cache
"RTN","SAMIZ5",35,0)
 ;
"RTN","SAMIZ5",36,0)
 N I,OUT,FRAG,ASC
"RTN","SAMIZ5",37,0)
 S:'$G(PATH) X=$TR(X,"+"," ") ; don't convert '+' in path fragment
"RTN","SAMIZ5",38,0)
 F I=1:1:$L(X,"%") D
"RTN","SAMIZ5",39,0)
 . I I=1 S OUT=$P(X,"%") Q
"RTN","SAMIZ5",40,0)
 . S FRAG=$P(X,"%",I),ASC=$E(FRAG,1,2),FRAG=$E(FRAG,3,$L(FRAG))
"RTN","SAMIZ5",41,0)
 . I $L(ASC) S OUT=OUT_$C($$HEX2DEC(ASC))
"RTN","SAMIZ5",42,0)
 . S OUT=OUT_FRAG
"RTN","SAMIZ5",43,0)
 Q OUT
"RTN","SAMIZ5",44,0)
 ;
"RTN","SAMIZ5",45,0)
REFSIZE(ROOT) ; return the size of glvn passed in ROOT
"RTN","SAMIZ5",46,0)
 Q:'$D(ROOT) 0 Q:'$L(ROOT) 0
"RTN","SAMIZ5",47,0)
 Q:$G(ROOT)="" 0
"RTN","SAMIZ5",48,0)
 N SIZE,I
"RTN","SAMIZ5",49,0)
 S SIZE=0
"RTN","SAMIZ5",50,0)
 S ROOT=$NA(@ROOT)
"RTN","SAMIZ5",51,0)
 I $P($SY,",")=47 G REFSIZEGTM
"RTN","SAMIZ5",52,0)
 I $D(@ROOT)#2 S SIZE=$L(@ROOT)
"RTN","SAMIZ5",53,0)
 ; I $D(@ROOT)>1 S I=0 F  S I=$O(@ROOT@(I)) Q:'I  S SIZE=SIZE+$L(@ROOT@(I))
"RTN","SAMIZ5",54,0)
 N ORIG,OL S ORIG=ROOT,OL=$QL(ROOT) ; Orig, Orig Length
"RTN","SAMIZ5",55,0)
 F  S ROOT=$Q(@ROOT) Q:ROOT=""  Q:($NA(@ROOT,OL)'=$NA(@ORIG,OL))  S SIZE=SIZE+$L(@ROOT)
"RTN","SAMIZ5",56,0)
 S ROOT=ORIG
"RTN","SAMIZ5",57,0)
 Q SIZE
"RTN","SAMIZ5",58,0)
 ;
"RTN","SAMIZ5",59,0)
REFSIZEGTM ; Refsize for GT.M/UTF-8
"RTN","SAMIZ5",60,0)
 I $D(@ROOT)#2 S SIZE=$ZL(@ROOT)
"RTN","SAMIZ5",61,0)
 ; I $D(@ROOT)>1 S I=0 F  S I=$O(@ROOT@(I)) Q:'I  S SIZE=SIZE+$L(@ROOT@(I))
"RTN","SAMIZ5",62,0)
 N ORIG,OL S ORIG=ROOT,OL=$QL(ROOT) ; Orig, Orig Length
"RTN","SAMIZ5",63,0)
 F  S ROOT=$Q(@ROOT) Q:ROOT=""  Q:($NA(@ROOT,OL)'=$NA(@ORIG,OL))  S SIZE=SIZE+$ZL(@ROOT)
"RTN","SAMIZ5",64,0)
 S ROOT=ORIG
"RTN","SAMIZ5",65,0)
 Q SIZE
"RTN","SAMIZ5",66,0)
 ;
"RTN","SAMIZ5",67,0)
VARSIZE(V) ; return the size of a variable
"RTN","SAMIZ5",68,0)
 Q:'$D(V) 0
"RTN","SAMIZ5",69,0)
 N SIZE,I
"RTN","SAMIZ5",70,0)
 S SIZE=0
"RTN","SAMIZ5",71,0)
 I $P($SY,",")=47 G VARSIZEGTM
"RTN","SAMIZ5",72,0)
 I $D(V)#2 S SIZE=$L(V)
"RTN","SAMIZ5",73,0)
 I $D(V)>1 S I="" F  S I=$O(V(I)) Q:'I  S SIZE=SIZE+$L(V(I))
"RTN","SAMIZ5",74,0)
 Q SIZE
"RTN","SAMIZ5",75,0)
 ;
"RTN","SAMIZ5",76,0)
VARSIZEGTM ; Varsize for GT.M/UTF-8
"RTN","SAMIZ5",77,0)
 I $D(V)#2 S SIZE=$ZL(V)
"RTN","SAMIZ5",78,0)
 I $D(V)>1 S I="" F  S I=$O(V(I)) Q:'I  S SIZE=SIZE+$ZL(V(I))
"RTN","SAMIZ5",79,0)
 Q SIZE
"RTN","SAMIZ5",80,0)
 ;
"RTN","SAMIZ5",81,0)
setError(ERRCODE,MESSAGE,ERRARRAY) G setError1
"RTN","SAMIZ5",82,0)
SETERROR(ERRCODE,MESSAGE,ERRARRAY) ; set error info into ^TMP("HTTPERR",$J)
"RTN","SAMIZ5",83,0)
setError1 ;
"RTN","SAMIZ5",84,0)
 ; causes HTTPERR system variable to be set
"RTN","SAMIZ5",85,0)
 ; ERRCODE:  query errors are 100-199, update errors are 200-299, M errors are 500
"RTN","SAMIZ5",86,0)
 ; MESSAGE:  additional explanatory material
"RTN","SAMIZ5",87,0)
 ; ERRARRAY: An Array to use instead of the Message for information to the user.
"RTN","SAMIZ5",88,0)
 ;
"RTN","SAMIZ5",89,0)
 N NEXTERR,ERRNAME,TOPMSG
"RTN","SAMIZ5",90,0)
 S HTTPERR=400,TOPMSG="Bad Request"
"RTN","SAMIZ5",91,0)
 ; query errors (100-199)
"RTN","SAMIZ5",92,0)
 I ERRCODE=101 S ERRNAME="Missing name of index"
"RTN","SAMIZ5",93,0)
 I ERRCODE=102 S ERRNAME="Invalid index name"
"RTN","SAMIZ5",94,0)
 I ERRCODE=103 S ERRNAME="Parameter error"
"RTN","SAMIZ5",95,0)
 I ERRCODE=104 S HTTPERR=404,TOPMSG="Not Found",ERRNAME="Bad key"
"RTN","SAMIZ5",96,0)
 I ERRCODE=105 S ERRNAME="Template required"
"RTN","SAMIZ5",97,0)
 I ERRCODE=106 S ERRNAME="Bad Filter Parameter"
"RTN","SAMIZ5",98,0)
 I ERRCODE=107 S ERRNAME="Unsupported Field Name"
"RTN","SAMIZ5",99,0)
 I ERRCODE=108 S ERRNAME="Bad Order Parameter"
"RTN","SAMIZ5",100,0)
 I ERRCODE=109 S ERRNAME="Operation not supported with this index"
"RTN","SAMIZ5",101,0)
 I ERRCODE=110 S ERRNAME="Order field unknown"
"RTN","SAMIZ5",102,0)
 I ERRCODE=111 S ERRNAME="Unrecognized parameter"
"RTN","SAMIZ5",103,0)
 I ERRCODE=112 S ERRNAME="Filter required"
"RTN","SAMIZ5",104,0)
 ; update errors (200-299)
"RTN","SAMIZ5",105,0)
 I ERRCODE=201 S ERRNAME="Unknown collection" ; unused?
"RTN","SAMIZ5",106,0)
 I ERRCODE=202 S ERRNAME="Unable to decode JSON"
"RTN","SAMIZ5",107,0)
 I ERRCODE=203 S HTTPERR=404,TOPMSG="Not Found",ERRNAME="Unable to determine patient"
"RTN","SAMIZ5",108,0)
 I ERRCODE=204 S HTTPERR=404,TOPMSG="Not Found",ERRNAME="Unable to determine collection" ; unused?
"RTN","SAMIZ5",109,0)
 I ERRCODE=205 S ERRNAME="Patient mismatch with object"
"RTN","SAMIZ5",110,0)
 I ERRCODE=207 S ERRNAME="Missing UID"
"RTN","SAMIZ5",111,0)
 I ERRCODE=209 S ERRNAME="Missing range or index" ; unused?
"RTN","SAMIZ5",112,0)
 I ERRCODE=210 S ERRNAME="Unknown UID format"
"RTN","SAMIZ5",113,0)
 I ERRCODE=211 S HTTPERR=404,TOPMSG="Not Found",ERRNAME="Missing patient identifiers"
"RTN","SAMIZ5",114,0)
 I ERRCODE=212 S ERRNAME="Mismatch of patient identifiers"
"RTN","SAMIZ5",115,0)
 I ERRCODE=213 S ERRNAME="Delete demographics only not allowed"
"RTN","SAMIZ5",116,0)
 I ERRCODE=214 S HTTPERR=404,ERRNAME="Patient ID not found in database"
"RTN","SAMIZ5",117,0)
 I ERRCODE=215 S ERRNAME="Missing collection name"
"RTN","SAMIZ5",118,0)
 I ERRCODE=216 S ERRNAME="Incomplete deletion of collection"
"RTN","SAMIZ5",119,0)
 ; HTTP errors
"RTN","SAMIZ5",120,0)
 I ERRCODE=400 S ERRNAME="Bad Request"
"RTN","SAMIZ5",121,0)
 I ERRCODE=401 S ERRNAME="Unauthorized" ; VEN/SMH
"RTN","SAMIZ5",122,0)
 I ERRCODE=404 S ERRNAME="Not Found"
"RTN","SAMIZ5",123,0)
 I ERRCODE=405 S ERRNAME="Method Not Allowed"
"RTN","SAMIZ5",124,0)
 ; system errors (500-599)
"RTN","SAMIZ5",125,0)
 I ERRCODE=501 S ERRNAME="M execution error"
"RTN","SAMIZ5",126,0)
 I ERRCODE=502 S ERRNAME="Unable to lock record"
"RTN","SAMIZ5",127,0)
 I '$L($G(ERRNAME)) S ERRNAME="Unknown error"
"RTN","SAMIZ5",128,0)
 ;
"RTN","SAMIZ5",129,0)
 I ERRCODE>500 S HTTPERR=500,TOPMSG="Internal Server Error"  ; M Server Error
"RTN","SAMIZ5",130,0)
 I ERRCODE<500,ERRCODE>400 S HTTPERR=ERRCODE,TOPMSG=ERRNAME  ; Other HTTP Errors
"RTN","SAMIZ5",131,0)
 Q:$G(NOGBL)
"RTN","SAMIZ5",132,0)
 S NEXTERR=$G(^TMP("HTTPERR",$J,0),0)+1,^TMP("HTTPERR",$J,0)=NEXTERR
"RTN","SAMIZ5",133,0)
 S ^TMP("HTTPERR",$J,1,"apiVersion")="1.0"
"RTN","SAMIZ5",134,0)
 S ^TMP("HTTPERR",$J,1,"error","code")=HTTPERR
"RTN","SAMIZ5",135,0)
 S ^TMP("HTTPERR",$J,1,"error","message")=TOPMSG
"RTN","SAMIZ5",136,0)
 S ^TMP("HTTPERR",$J,1,"error","request")=$G(HTTPREQ("method"))_" "_$G(HTTPREQ("path"))_" "_$G(HTTPREQ("query"))
"RTN","SAMIZ5",137,0)
 I $D(ERRARRAY) M ^TMP("HTTPERR",$J,1,"error","errors",NEXTERR)=ERRARRAY  ; VEN/SMH
"RTN","SAMIZ5",138,0)
 E  S ^TMP("HTTPERR",$J,1,"error","errors",NEXTERR,"reason")=ERRCODE
"RTN","SAMIZ5",139,0)
 E  S ^TMP("HTTPERR",$J,1,"error","errors",NEXTERR,"message")=ERRNAME
"RTN","SAMIZ5",140,0)
 I $L($G(MESSAGE)) S ^TMP("HTTPERR",$J,1,"error","errors",NEXTERR,"domain")=MESSAGE
"RTN","SAMIZ5",141,0)
 Q
"RTN","SAMIZ5",142,0)
 ;
"RTN","SAMIZ5",143,0)
 ; Cache specific functions (selected one support GT.M too!)
"RTN","SAMIZ5",144,0)
 ;
"RTN","SAMIZ5",145,0)
GMT() ; return HTTP date string (this is really using UTC instead of GMT)
"RTN","SAMIZ5",146,0)
 N TM,DAY
"RTN","SAMIZ5",147,0)
 I $$UP($ZV)["CACHE" D  Q $P(DAY," ")_", "_$ZDATETIME(TM,2)_" GMT"
"RTN","SAMIZ5",148,0)
 . S TM=$ZTIMESTAMP,DAY=$ZDATETIME(TM,11)
"RTN","SAMIZ5",149,0)
 ;
"RTN","SAMIZ5",150,0)
 N OUT
"RTN","SAMIZ5",151,0)
 I $$UP($ZV)["GT.M" D  Q OUT
"RTN","SAMIZ5",152,0)
 . N D S D="datetimepipe"
"RTN","SAMIZ5",153,0)
 . N OLDIO S OLDIO=$I
"RTN","SAMIZ5",154,0)
 . O D:(shell="/bin/sh":comm="date -u +'%a, %d %b %Y %H:%M:%S %Z'|sed 's/UTC/GMT/g'")::"pipe"
"RTN","SAMIZ5",155,0)
 . U D R OUT:1 
"RTN","SAMIZ5",156,0)
 . U OLDIO C D
"RTN","SAMIZ5",157,0)
 ;
"RTN","SAMIZ5",158,0)
 QUIT "UNIMPLEMENTED"
"RTN","SAMIZ5",159,0)
 ;
"RTN","SAMIZ5",160,0)
 ;
"RTN","SAMIZ5",161,0)
DEC2HEX(NUM) ; return a decimal number as hex
"RTN","SAMIZ5",162,0)
 Q $$BASE(NUM,10,16)
"RTN","SAMIZ5",163,0)
 ;Q $ZHEX(NUM)
"RTN","SAMIZ5",164,0)
 ;
"RTN","SAMIZ5",165,0)
HEX2DEC(HEX) ; return a hex number as decimal
"RTN","SAMIZ5",166,0)
 Q $$BASE(HEX,16,10)
"RTN","SAMIZ5",167,0)
 ;Q $ZHEX(HEX_"H")
"RTN","SAMIZ5",168,0)
 ;
"RTN","SAMIZ5",169,0)
BASE(%X1,%X2,%X3) ;Convert %X1 from %X2 base to %X3 base
"RTN","SAMIZ5",170,0)
 I (%X2<2)!(%X2>16)!(%X3<2)!(%X3>16) Q -1
"RTN","SAMIZ5",171,0)
 Q $$CNV($$DEC(%X1,%X2),%X3)
"RTN","SAMIZ5",172,0)
DEC(N,B) ;Cnv N from B to 10
"RTN","SAMIZ5",173,0)
 Q:B=10 N N I,Y S Y=0
"RTN","SAMIZ5",174,0)
 F I=1:1:$L(N) S Y=Y*B+($F("0123456789ABCDEF",$E(N,I))-2)
"RTN","SAMIZ5",175,0)
 Q Y
"RTN","SAMIZ5",176,0)
CNV(N,B) ;Cnv N from 10 to B
"RTN","SAMIZ5",177,0)
 Q:B=10 N N I,Y S Y=""
"RTN","SAMIZ5",178,0)
 F I=1:1 S Y=$E("0123456789ABCDEF",N#B+1)_Y,N=N\B Q:N<1
"RTN","SAMIZ5",179,0)
 Q Y
"RTN","SAMIZ5",180,0)
 ;
"RTN","SAMIZ5",181,0)
HTFM(%H,%F) ;$H to FM, %F=1 for date only
"RTN","SAMIZ5",182,0)
 N X,%,%T,%Y,%M,%D S:'$D(%F) %F=0
"RTN","SAMIZ5",183,0)
 I $$HR(%H) Q -1 ;Check Range
"RTN","SAMIZ5",184,0)
 I '%F,%H[",0" S %H=(%H-1)_",86400"
"RTN","SAMIZ5",185,0)
 D YMD S:%T&('%F) X=X_%T
"RTN","SAMIZ5",186,0)
 Q X
"RTN","SAMIZ5",187,0)
YMD ;21608 = 28 feb 1900, 94657 = 28 feb 2100, 141 $H base year
"RTN","SAMIZ5",188,0)
 S %=(%H>21608)+(%H>94657)+%H-.1,%Y=%\365.25+141,%=%#365.25\1
"RTN","SAMIZ5",189,0)
 S %D=%+306#(%Y#4=0+365)#153#61#31+1,%M=%-%D\29+1
"RTN","SAMIZ5",190,0)
 S X=%Y_"00"+%M_"00"+%D,%=$P(%H,",",2)
"RTN","SAMIZ5",191,0)
 S %T=%#60/100+(%#3600\60)/100+(%\3600)/100 S:'%T %T=".0"
"RTN","SAMIZ5",192,0)
 Q
"RTN","SAMIZ5",193,0)
HR(%V) ;Check $H in valid range
"RTN","SAMIZ5",194,0)
 Q (%V<2)!(%V>99999)
"RTN","SAMIZ5",195,0)
 ;
"RTN","SAMIZ5",196,0)
HTE(%H,%F) ;$H to external
"RTN","SAMIZ5",197,0)
 Q:$$HR(%H) %H ;Range Check
"RTN","SAMIZ5",198,0)
 N Y,%T,%R
"RTN","SAMIZ5",199,0)
 S %F=$G(%F,1) S Y=$$HTFM(%H,0)
"RTN","SAMIZ5",200,0)
T2 S %T="."_$E($P(Y,".",2)_"000000",1,7)
"RTN","SAMIZ5",201,0)
 D FMT Q %R
"RTN","SAMIZ5",202,0)
FMT ;
"RTN","SAMIZ5",203,0)
 N %G S %G=+%F
"RTN","SAMIZ5",204,0)
 G F1:%G=1,F2:%G=2,F3:%G=3,F4:%G=4,F5:%G=5,F6:%G=6,F7:%G=7,F8:%G=8,F9:%G=9,F1
"RTN","SAMIZ5",205,0)
 Q
"RTN","SAMIZ5",206,0)
 ;
"RTN","SAMIZ5",207,0)
F1 ;Apr 10, 2002
"RTN","SAMIZ5",208,0)
 S %R=$P($$M()," ",$S($E(Y,4,5):$E(Y,4,5)+2,1:0))_$S($E(Y,4,5):" ",1:"")_$S($E(Y,6,7):$E(Y,6,7)_", ",1:"")_($E(Y,1,3)+1700)
"RTN","SAMIZ5",209,0)
 ;
"RTN","SAMIZ5",210,0)
TM ;All formats come here to format Time.
"RTN","SAMIZ5",211,0)
 N %,%S Q:%T'>0!(%F["D")
"RTN","SAMIZ5",212,0)
 I %F'["P" S %R=%R_"@"_$E(%T,2,3)_":"_$E(%T,4,5)_$S(%F["M":"",$E(%T,6,7)!(%F["S"):":"_$E(%T,6,7),1:"")
"RTN","SAMIZ5",213,0)
 I %F["P" D
"RTN","SAMIZ5",214,0)
 . S %R=%R_" "_$S($E(%T,2,3)>12:$E(%T,2,3)-12,+$E(%T,2,3)=0:"12",1:+$E(%T,2,3))_":"_$E(%T,4,5)_$S(%F["M":"",$E(%T,6,7)!(%F["S"):":"_$E(%T,6,7),1:"")
"RTN","SAMIZ5",215,0)
 . S %R=%R_$S($E(%T,2,7)<120000:" am",$E(%T,2,3)=24:" am",1:" pm")
"RTN","SAMIZ5",216,0)
 . Q
"RTN","SAMIZ5",217,0)
 Q
"RTN","SAMIZ5",218,0)
 ;Return Month names
"RTN","SAMIZ5",219,0)
M() Q "  Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec"
"RTN","SAMIZ5",220,0)
 ;
"RTN","SAMIZ5",221,0)
F2 ;4/10/02
"RTN","SAMIZ5",222,0)
 S %R=$J(+$E(Y,4,5),2)_"/"_$J(+$E(Y,6,7),2)_"/"_$E(Y,2,3)
"RTN","SAMIZ5",223,0)
 S:%F["Z" %R=$TR(%R," ","0") S:%F'["F" %R=$TR(%R," ")
"RTN","SAMIZ5",224,0)
 G TM
"RTN","SAMIZ5",225,0)
F3 ;10/4/02
"RTN","SAMIZ5",226,0)
 S %R=$J(+$E(Y,6,7),2)_"/"_$J(+$E(Y,4,5),2)_"/"_$E(Y,2,3)
"RTN","SAMIZ5",227,0)
 S:%F["Z" %R=$TR(%R," ","0") S:%F'["F" %R=$TR(%R," ")
"RTN","SAMIZ5",228,0)
 G TM
"RTN","SAMIZ5",229,0)
F4 ;02/4/10
"RTN","SAMIZ5",230,0)
 S %R=$E(Y,2,3)_"/"_$J(+$E(Y,4,5),2)_"/"_$J(+$E(Y,6,7),2)
"RTN","SAMIZ5",231,0)
 S:%F["Z" %R=$TR(%R," ","0") S:%F'["F" %R=$TR(%R," ")
"RTN","SAMIZ5",232,0)
 G TM
"RTN","SAMIZ5",233,0)
F5 ;4/10/2002
"RTN","SAMIZ5",234,0)
 S %R=$J(+$E(Y,4,5),2)_"/"_$J(+$E(Y,6,7),2)_"/"_($E(Y,1,3)+1700)
"RTN","SAMIZ5",235,0)
 S:%F["Z" %R=$TR(%R," ","0") S:%F'["F" %R=$TR(%R," ")
"RTN","SAMIZ5",236,0)
 G TM
"RTN","SAMIZ5",237,0)
F6 ;10/4/2002
"RTN","SAMIZ5",238,0)
 S %R=$J(+$E(Y,6,7),2)_"/"_$J(+$E(Y,4,5),2)_"/"_($E(Y,1,3)+1700)
"RTN","SAMIZ5",239,0)
 S:%F["Z" %R=$TR(%R," ","0") S:%F'["F" %R=$TR(%R," ")
"RTN","SAMIZ5",240,0)
 G TM
"RTN","SAMIZ5",241,0)
F7 ;2002/4/10
"RTN","SAMIZ5",242,0)
 S %R=($E(Y,1,3)+1700)_"/"_$J(+$E(Y,4,5),2)_"/"_$J(+$E(Y,6,7),2)
"RTN","SAMIZ5",243,0)
 S:%F["Z" %R=$TR(%R," ","0") S:%F'["F" %R=$TR(%R," ")
"RTN","SAMIZ5",244,0)
 G TM
"RTN","SAMIZ5",245,0)
F8 ;10 Apr 02
"RTN","SAMIZ5",246,0)
 S %R=$S($E(Y,6,7):$E(Y,6,7)_" ",1:"")_$P($$M()," ",$S($E(Y,4,5):$E(Y,4,5)+2,1:0))_$S($E(Y,4,5):" ",1:"")_$E(Y,2,3)
"RTN","SAMIZ5",247,0)
 G TM
"RTN","SAMIZ5",248,0)
F9 ;10 Apr 2002
"RTN","SAMIZ5",249,0)
 S %R=$S($E(Y,6,7):$E(Y,6,7)_" ",1:"")_$P($$M()," ",$S($E(Y,4,5):$E(Y,4,5)+2,1:0))_$S($E(Y,4,5):" ",1:"")_($E(Y,1,3)+1700)
"RTN","SAMIZ5",250,0)
 G TM
"RTN","SAMIZ5",251,0)
 ;
"RTN","SAMIZ5",252,0)
PARSE10(BODY,PARSED) ; Parse BODY by CRLF and return the array in PARSED
"RTN","SAMIZ5",253,0)
 ; Input: BODY: By Ref - BODY to be parsed
"RTN","SAMIZ5",254,0)
 ; Output: PARSED: By Ref - PARSED Output
"RTN","SAMIZ5",255,0)
 ; E.g. if BODY is ABC_CRLF_DEF_CRLF, PARSED is PARSED(1)="ABC",PARSED(2)="DEF",PARSED(3)=""
"RTN","SAMIZ5",256,0)
 N LL S LL="" ; Last line
"RTN","SAMIZ5",257,0)
 N L S L=1 ; Line counter.
"RTN","SAMIZ5",258,0)
 K PARSED ; Kill return array
"RTN","SAMIZ5",259,0)
 N I S I="" F  S I=$O(BODY(I)) Q:'I  D  ; For each 4000 character block
"RTN","SAMIZ5",260,0)
 . N J F J=1:1:$L(BODY(I),$C(10)) D  ; For each line
"RTN","SAMIZ5",261,0)
 . . S:(J=1&(L>1)) L=L-1 ; Replace old line (see 2 lines below)
"RTN","SAMIZ5",262,0)
 . . S PARSED(L)=$TR($P(BODY(I),$C(10),J),$C(13)) ; Get line; Take CR out if there.
"RTN","SAMIZ5",263,0)
 . . S:(J=1&(L>1)) PARSED(L)=LL_PARSED(L) ; If first line, append the last line before it and replace it.
"RTN","SAMIZ5",264,0)
 . . S LL=PARSED(L) ; Set last line
"RTN","SAMIZ5",265,0)
 . . S L=L+1 ; LineNumber++
"RTN","SAMIZ5",266,0)
 QUIT
"RTN","SAMIZ5",267,0)
 ;
"RTN","SAMIZ5",268,0)
ADDCRLF(RESULT) ; Add CRLF to each line
"RTN","SAMIZ5",269,0)
 I $E($G(RESULT))="^" D  QUIT  ; Global
"RTN","SAMIZ5",270,0)
 . N V,QL S V=RESULT,QL=$QL(V) F  S V=$Q(@V) Q:V=""  Q:$NA(@V,QL)'=RESULT  S @V=@V_$C(13,10)
"RTN","SAMIZ5",271,0)
 E  D  ; Local variable passed by reference
"RTN","SAMIZ5",272,0)
 . I $D(RESULT)#2 S RESULT=RESULT_$C(13,10)
"RTN","SAMIZ5",273,0)
 . N V S V=$NA(RESULT) F  S V=$Q(@V) Q:V=""  S @V=@V_$C(13,10)
"RTN","SAMIZ5",274,0)
 QUIT
"RTN","SAMIZ5",275,0)
 ;
"RTN","SAMIZ5",276,0)
UNKARGS(ARGS,LIST) ; returns true if any argument is unknown
"RTN","SAMIZ5",277,0)
 N X,UNKNOWN
"RTN","SAMIZ5",278,0)
 S UNKNOWN=0,LIST=","_LIST_","
"RTN","SAMIZ5",279,0)
 S X="" F  S X=$O(ARGS(X)) Q:X=""  I LIST'[(","_X_",") D
"RTN","SAMIZ5",280,0)
 . S UNKNOWN=1
"RTN","SAMIZ5",281,0)
 . D SETERROR^VPRJRUT(111,X)
"RTN","SAMIZ5",282,0)
 Q UNKNOWN
"RTN","SAMIZ5",283,0)
 ;
"RTN","SAMIZ5",284,0)
ENCODE64(X) ;
"RTN","SAMIZ5",285,0)
 N RGZ,RGZ1,RGZ2,RGZ3,RGZ4,RGZ5,RGZ6
"RTN","SAMIZ5",286,0)
 S RGZ=$$INIT64,RGZ1=""
"RTN","SAMIZ5",287,0)
 F RGZ2=1:3:$L(X) D
"RTN","SAMIZ5",288,0)
 .S RGZ3=0,RGZ6=""
"RTN","SAMIZ5",289,0)
 .F RGZ4=0:1:2 D
"RTN","SAMIZ5",290,0)
 ..S RGZ5=$A(X,RGZ2+RGZ4),RGZ3=RGZ3*256+$S(RGZ5<0:0,1:RGZ5)
"RTN","SAMIZ5",291,0)
 .F RGZ4=1:1:4 S RGZ6=$E(RGZ,RGZ3#64+2)_RGZ6,RGZ3=RGZ3\64
"RTN","SAMIZ5",292,0)
 .S RGZ1=RGZ1_RGZ6
"RTN","SAMIZ5",293,0)
 S RGZ2=$L(X)#3
"RTN","SAMIZ5",294,0)
 S:RGZ2 RGZ3=$L(RGZ1),$E(RGZ1,RGZ3-2+RGZ2,RGZ3)=$E("==",RGZ2,2)
"RTN","SAMIZ5",295,0)
 Q RGZ1
"RTN","SAMIZ5",296,0)
DECODE64(X) ;
"RTN","SAMIZ5",297,0)
 N RGZ,RGZ1,RGZ2,RGZ3,RGZ4,RGZ5,RGZ6
"RTN","SAMIZ5",298,0)
 S RGZ=$$INIT64,RGZ1=""
"RTN","SAMIZ5",299,0)
 F RGZ2=1:4:$L(X) D
"RTN","SAMIZ5",300,0)
 .S RGZ3=0,RGZ6=""
"RTN","SAMIZ5",301,0)
 .F RGZ4=0:1:3 D
"RTN","SAMIZ5",302,0)
 ..S RGZ5=$F(RGZ,$E(X,RGZ2+RGZ4))-3
"RTN","SAMIZ5",303,0)
 ..S RGZ3=RGZ3*64+$S(RGZ5<0:0,1:RGZ5)
"RTN","SAMIZ5",304,0)
 .F RGZ4=0:1:2 S RGZ6=$C(RGZ3#256)_RGZ6,RGZ3=RGZ3\256
"RTN","SAMIZ5",305,0)
 .S RGZ1=RGZ1_RGZ6
"RTN","SAMIZ5",306,0)
 Q $E(RGZ1,1,$L(RGZ1)-$L(X,"=")+1)
"RTN","SAMIZ5",307,0)
INIT64() Q "=ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
"RTN","SAMIZ5",308,0)
 ;
"RTN","SAMIZ5",309,0)
addService(method,urlPattern,routine,auth,authKey,authOption,params) ; [Public: Add Service Entry Point]
"RTN","SAMIZ5",310,0)
 ; pass all by value except params by ref
"RTN","SAMIZ5",311,0)
 ; do or $$; return if $$ is 0 for failure and ien for success
"RTN","SAMIZ5",312,0)
 ; param format:
"RTN","SAMIZ5",313,0)
 ; - param(1)="U^rpc" URL Component named RPC
"RTN","SAMIZ5",314,0)
 ; - param(2)="F^start" Form Body variable called start
"RTN","SAMIZ5",315,0)
 ; - param(3)="Q^dir" HTTP Query variable called dir
"RTN","SAMIZ5",316,0)
 ; - param(4)="B"     Pass the body
"RTN","SAMIZ5",317,0)
 set method=$get(method)
"RTN","SAMIZ5",318,0)
 set urlPattern=$get(urlPattern)
"RTN","SAMIZ5",319,0)
 set routine=$get(routine)
"RTN","SAMIZ5",320,0)
 ;
"RTN","SAMIZ5",321,0)
 ; validate method
"RTN","SAMIZ5",322,0)
 if "^GET^POST^PUT^OPTIONS^DELETE^TRACE^HEAD^CONNECT^"'["^"_method_"^" quit:$q 0 q
"RTN","SAMIZ5",323,0)
 ;
"RTN","SAMIZ5",324,0)
 ; if urlPattern or routine are empty, bad call
"RTN","SAMIZ5",325,0)
 if urlPattern=""!(routine="") quit:$q 0 q
"RTN","SAMIZ5",326,0)
 ;
"RTN","SAMIZ5",327,0)
 ; Lock for edits
"RTN","SAMIZ5",328,0)
 if $P($SY,",")=47 tstart ():serial
"RTN","SAMIZ5",329,0)
 else  lock +^%webutils:1 else  quit:$q 0 q
"RTN","SAMIZ5",330,0)
 ;
"RTN","SAMIZ5",331,0)
 ; does it already exist; or add new entry
"RTN","SAMIZ5",332,0)
 new ien
"RTN","SAMIZ5",333,0)
 if $data(^%web(17.6001,"B",method,urlPattern)) do
"RTN","SAMIZ5",334,0)
 . new routine set routine=$order(^%web(17.6001,"B",method,urlPattern,""))
"RTN","SAMIZ5",335,0)
 . set ien=$order(^%web(17.6001,"B",method,urlPattern,routine,0))
"RTN","SAMIZ5",336,0)
 . kill ^%web(17.6001,"B",method,urlPattern)
"RTN","SAMIZ5",337,0)
 . set $piece(^%web(17.6001,0),"^",3)=ien
"RTN","SAMIZ5",338,0)
 else  do 
"RTN","SAMIZ5",339,0)
 . set ien=$o(^%web(17.6001," "),-1)+1
"RTN","SAMIZ5",340,0)
 . set $piece(^%web(17.6001,0),"^",3,4)=ien_"^"_ien
"RTN","SAMIZ5",341,0)
 ;
"RTN","SAMIZ5",342,0)
 ; now add the entry at this ien
"RTN","SAMIZ5",343,0)
 ; kill old one first
"RTN","SAMIZ5",344,0)
 kill ^%web(17.6001,ien)
"RTN","SAMIZ5",345,0)
 ;
"RTN","SAMIZ5",346,0)
 ; Add new one
"RTN","SAMIZ5",347,0)
 set ^%web(17.6001,ien,0)=method
"RTN","SAMIZ5",348,0)
 set ^%web(17.6001,ien,1)=urlPattern
"RTN","SAMIZ5",349,0)
 set ^%web(17.6001,ien,2)=routine
"RTN","SAMIZ5",350,0)
 set ^%web(17.6001,"B",method,urlPattern,routine,ien)=""
"RTN","SAMIZ5",351,0)
 ;
"RTN","SAMIZ5",352,0)
 ; Add Auth nodes
"RTN","SAMIZ5",353,0)
 if $text(^XUS)'="" do
"RTN","SAMIZ5",354,0)
 . if $g(auth)           set $piece(^%web(17.6001,ien,"AUTH"),"^",1)=1
"RTN","SAMIZ5",355,0)
 . if $g(authKey)'=""    set $piece(^%web(17.6001,ien,"AUTH"),"^",2)=$$FIND1^DIC(19.1,,"QX",authKey,"B")
"RTN","SAMIZ5",356,0)
 . if $g(authOption)'="" set $piece(^%web(17.6001,ien,"AUTH"),"^",3)=$$FIND1^DIC(19,,"QX",authOption,"B")
"RTN","SAMIZ5",357,0)
 ;
"RTN","SAMIZ5",358,0)
 ; Add Params
"RTN","SAMIZ5",359,0)
 if $order(params("")) do
"RTN","SAMIZ5",360,0)
 . new n for n=0:0 set n=$order(params(n)) quit:'n  set ^%web(17.6001,ien,"PARAMS",n,0)=params(n)
"RTN","SAMIZ5",361,0)
 . new lastn s lastn=+$order(params(""),-1)
"RTN","SAMIZ5",362,0)
 . set ^%web(17.6001,ien,"PARAMS",0)="^17.60012S^"_lastn_"^"_lastn
"RTN","SAMIZ5",363,0)
 ;
"RTN","SAMIZ5",364,0)
 ; Commit our changes and unlock
"RTN","SAMIZ5",365,0)
 if $P($SY,",")=47 tcommit
"RTN","SAMIZ5",366,0)
 else  lock -^%webutils
"RTN","SAMIZ5",367,0)
 ;
"RTN","SAMIZ5",368,0)
 ; Return IEN
"RTN","SAMIZ5",369,0)
 quit:$quit ien quit
"RTN","SAMIZ5",370,0)
 ;
"RTN","SAMIZ5",371,0)
deleteService(method,urlPattern) ; [Public: Delete Service]
"RTN","SAMIZ5",372,0)
 set method=$get(method)
"RTN","SAMIZ5",373,0)
 set urlPattern=$get(urlPattern)
"RTN","SAMIZ5",374,0)
 if method="" quit
"RTN","SAMIZ5",375,0)
 if urlPattern="" quit
"RTN","SAMIZ5",376,0)
 ;
"RTN","SAMIZ5",377,0)
 new ien
"RTN","SAMIZ5",378,0)
 if $P($SY,",")=47 tstart ():serial
"RTN","SAMIZ5",379,0)
 if $data(^%web(17.6001,"B",method,urlPattern)) do
"RTN","SAMIZ5",380,0)
 . new routine set routine=$order(^%web(17.6001,"B",method,urlPattern,""))
"RTN","SAMIZ5",381,0)
 . set ien=$order(^%web(17.6001,"B",method,urlPattern,routine,0))
"RTN","SAMIZ5",382,0)
 . kill ^%web(17.6001,"B",method,urlPattern)
"RTN","SAMIZ5",383,0)
 . kill ^%web(17.6001,ien)
"RTN","SAMIZ5",384,0)
 . set $piece(^%web(17.6001,0),"^",3)=ien
"RTN","SAMIZ5",385,0)
 . set $piece(^%web(17.6001,0),"^",4)=$piece(^%web(17.6001,0),"^",4)-1
"RTN","SAMIZ5",386,0)
 if $P($SY,",")=47 tcommit
"RTN","SAMIZ5",387,0)
 ;
"RTN","SAMIZ5",388,0)
 quit
"RTN","SAMIZ5",389,0)
 ;
"RTN","SAMIZ5",390,0)
 ; Portions of this code are public domain, but it was extensively modified
"RTN","SAMIZ5",391,0)
 ; Copyright 2013-2019 Sam Habiel
"RTN","SAMIZ5",392,0)
 ;
"RTN","SAMIZ5",393,0)
 ;Licensed under the Apache License, Version 2.0 (the "License");
"RTN","SAMIZ5",394,0)
 ;you may not use this file except in compliance with the License.
"RTN","SAMIZ5",395,0)
 ;You may obtain a copy of the License at
"RTN","SAMIZ5",396,0)
 ;
"RTN","SAMIZ5",397,0)
 ;    http://www.apache.org/licenses/LICENSE-2.0
"RTN","SAMIZ5",398,0)
 ;
"RTN","SAMIZ5",399,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","SAMIZ5",400,0)
 ;distributed under the License is distributed on an "AS IS" BASIS,
"RTN","SAMIZ5",401,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","SAMIZ5",402,0)
 ;See the License for the specific language governing permissions and
"RTN","SAMIZ5",403,0)
 ;limitations under the License.
"RTN","SAMIZ6")
0^98^B300891487
"RTN","SAMIZ6",1,0)
yottagr ;ven/gpl-yottadb extension: graphstore ;2018-03-11T22:31Z
"RTN","SAMIZ6",2,0)
 ;;1.8;Mash;;;Build 1
"RTN","SAMIZ6",3,0)
 ;
"RTN","SAMIZ6",4,0)
 ; %yottagr implements the Yottadb Extension Library's graphstore
"RTN","SAMIZ6",5,0)
 ; ppis & apis. These may eventually migrate to another Mash
"RTN","SAMIZ6",6,0)
 ; namespace, tbd. In the meantime, they will get a %yotta ppi &
"RTN","SAMIZ6",7,0)
 ; api library built.
"RTN","SAMIZ6",8,0)
 ; It is currently untested & in progress.
"RTN","SAMIZ6",9,0)
 ;
"RTN","SAMIZ6",10,0)
 quit  ; no entry from top
"RTN","SAMIZ6",11,0)
 ;
"RTN","SAMIZ6",12,0)
 ;
"RTN","SAMIZ6",13,0)
 ;
"RTN","SAMIZ6",14,0)
 ;@section 0 primary development
"RTN","SAMIZ6",15,0)
 ;
"RTN","SAMIZ6",16,0)
 ;
"RTN","SAMIZ6",17,0)
 ;
"RTN","SAMIZ6",18,0)
 ;@routine-credits
"RTN","SAMIZ6",19,0)
 ;@primary-dev: George P. Lilly (gpl)
"RTN","SAMIZ6",20,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIZ6",21,0)
 ;@primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIZ6",22,0)
 ; http://vistaexpertise.net
"RTN","SAMIZ6",23,0)
 ;@copyright: 2017/2018, gpl, all rights reserved
"RTN","SAMIZ6",24,0)
 ;@license: Apache 2.0
"RTN","SAMIZ6",25,0)
 ; https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIZ6",26,0)
 ;
"RTN","SAMIZ6",27,0)
 ;@last-updated: 2018-03-11T22:31Z
"RTN","SAMIZ6",28,0)
 ;@application: Mumps Advanced Shell (Mash)
"RTN","SAMIZ6",29,0)
 ;@module: Yottadb Extension - %yotta
"RTN","SAMIZ6",30,0)
 ;@version: 1.8T04
"RTN","SAMIZ6",31,0)
 ;@release-date: not yet released
"RTN","SAMIZ6",32,0)
 ;@patch-list: none yet
"RTN","SAMIZ6",33,0)
 ;
"RTN","SAMIZ6",34,0)
 ;@additional-dev: Frederick D. S. Marshall (toad)
"RTN","SAMIZ6",35,0)
 ; toad@vistaexpertise.net
"RTN","SAMIZ6",36,0)
 ;
"RTN","SAMIZ6",37,0)
 ;@module-credits
"RTN","SAMIZ6",38,0)
 ;@primary-dev: George P. Lilly (gpl)
"RTN","SAMIZ6",39,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIZ6",40,0)
 ;@project: VA Partnership to Increase Access to Lung Screening
"RTN","SAMIZ6",41,0)
 ; (VA-PALS)
"RTN","SAMIZ6",42,0)
 ; http://va-pals.org/
"RTN","SAMIZ6",43,0)
 ;@funding: 2017, gpl
"RTN","SAMIZ6",44,0)
 ;@funding: 2017, ven
"RTN","SAMIZ6",45,0)
 ;@funding: 2017/2018, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMIZ6",46,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMIZ6",47,0)
 ;@partner-org: Veterans Affairs Office of Rural health
"RTN","SAMIZ6",48,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMIZ6",49,0)
 ;@partner-org: International Early Lung Cancer Action Program (I-ELCAP)
"RTN","SAMIZ6",50,0)
 ; http://ielcap.com/
"RTN","SAMIZ6",51,0)
 ;@partner-org: Paraxial Technologies
"RTN","SAMIZ6",52,0)
 ; http://paraxialtech.com/
"RTN","SAMIZ6",53,0)
 ;@partner-org: Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMIZ6",54,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMIZ6",55,0)
 ;
"RTN","SAMIZ6",56,0)
 ;@module-log
"RTN","SAMIZ6",57,0)
 ; 2017-02-17 ven/gpl %*1.8t01 %yottagr: create routine to hold
"RTN","SAMIZ6",58,0)
 ; all yottadb graph methods.
"RTN","SAMIZ6",59,0)
 ;
"RTN","SAMIZ6",60,0)
 ; 2017-09-16 ven/gpl %*1.8t01 %yottagr: update
"RTN","SAMIZ6",61,0)
 ;
"RTN","SAMIZ6",62,0)
 ; 2017-09-18 ven/gpl %*1.8t01 %yottagr: update
"RTN","SAMIZ6",63,0)
 ;
"RTN","SAMIZ6",64,0)
 ; 2017-10-07 ven/gpl %*1.8t01 %yottagr: update
"RTN","SAMIZ6",65,0)
 ;
"RTN","SAMIZ6",66,0)
 ; 2018-02-07/11 ven/toad %*1.8t04 %yottagr: passim add white space &
"RTN","SAMIZ6",67,0)
 ; hdr comments & do-dot quits, tag w/Apache license & attribution
"RTN","SAMIZ6",68,0)
 ; & to-do to shift namespace later, break up a few long line. debug.
"RTN","SAMIZ6",69,0)
 ;
"RTN","SAMIZ6",70,0)
 ; 2018-03-10/11 ven/toad %*1.8t04 %yottagr: fix $namew typo.
"RTN","SAMIZ6",71,0)
 ;
"RTN","SAMIZ6",72,0)
 ; 2019-05-28 ven/lgc replaced ^%WHOME with ^%webhome and
"RTN","SAMIZ6",73,0)
 ;                             ^%W0 to ^%webapi
"RTN","SAMIZ6",74,0)
 ;
"RTN","SAMIZ6",75,0)
 ;@to-do
"RTN","SAMIZ6",76,0)
 ; %yotta: create entry points in ppi/api style
"RTN","SAMIZ6",77,0)
 ; r/all local calls w/calls through ^%yotta
"RTN","SAMIZ6",78,0)
 ; break up into smaller routines & change branches from %yotta
"RTN","SAMIZ6",79,0)
 ; renamespace elsewhere, research best choice
"RTN","SAMIZ6",80,0)
 ;
"RTN","SAMIZ6",81,0)
 ;@contents
"RTN","SAMIZ6",82,0)
 ; [too big, break up]
"RTN","SAMIZ6",83,0)
 ;
"RTN","SAMIZ6",84,0)
 ;
"RTN","SAMIZ6",85,0)
 ;
"RTN","SAMIZ6",86,0)
 ;@section 1 code to implement ppis & apis
"RTN","SAMIZ6",87,0)
 ;
"RTN","SAMIZ6",88,0)
 ;
"RTN","SAMIZ6",89,0)
 ;
"RTN","SAMIZ6",90,0)
setroot(graph) ; root of working storage
"RTN","SAMIZ6",91,0)
 ;
"RTN","SAMIZ6",92,0)
 if '$data(graph) set graph="seeGraph"
"RTN","SAMIZ6",93,0)
 new %y set %y=$order(^%wd(17.040801,"B",graph,""))
"RTN","SAMIZ6",94,0)
 if %y="" set %y=$$addgraph(graph) ; if graph is not present, add it
"RTN","SAMIZ6",95,0)
 ;
"RTN","SAMIZ6",96,0)
 quit $na(^%wd(17.040801,%y)) ; root for graph ; end of $$setroot
"RTN","SAMIZ6",97,0)
 ;
"RTN","SAMIZ6",98,0)
 ;
"RTN","SAMIZ6",99,0)
 ;
"RTN","SAMIZ6",100,0)
addgraph(graph) ; makes a place in the graph file for a new graph
"RTN","SAMIZ6",101,0)
 ;
"RTN","SAMIZ6",102,0)
 new fda set fda(17.040801,"?+1,",.01)=graph
"RTN","SAMIZ6",103,0)
 new %yerr
"RTN","SAMIZ6",104,0)
 do UPDATE^DIE("","fda","","%yerr")
"RTN","SAMIZ6",105,0)
 new %y set %y=$order(^%wd(17.040801,"B",graph,""))
"RTN","SAMIZ6",106,0)
 ;
"RTN","SAMIZ6",107,0)
 quit %y ; end of $$addgraph
"RTN","SAMIZ6",108,0)
 ;
"RTN","SAMIZ6",109,0)
 ;
"RTN","SAMIZ6",110,0)
 ;
"RTN","SAMIZ6",111,0)
homedir() ; extrinsic which return the document home
"RTN","SAMIZ6",112,0)
 ;
"RTN","SAMIZ6",113,0)
 new kbaihd set kbaihd=$get(^%webhome)
"RTN","SAMIZ6",114,0)
 if kbaihd="" do  break  ;
"RTN","SAMIZ6",115,0)
 . write !,"error, home directory not set"
"RTN","SAMIZ6",116,0)
 . quit
"RTN","SAMIZ6",117,0)
 if $extract(kbaihd,$length(kbaihd))="/" do
"RTN","SAMIZ6",118,0)
 . set kbaihd=$extract(kbaihd,1,$length(kbaihd)-1)
"RTN","SAMIZ6",119,0)
 . quit
"RTN","SAMIZ6",120,0)
 ;
"RTN","SAMIZ6",121,0)
 quit kbaihd ; end of $$homedir
"RTN","SAMIZ6",122,0)
 ;
"RTN","SAMIZ6",123,0)
 ;
"RTN","SAMIZ6",124,0)
 ;
"RTN","SAMIZ6",125,0)
build ; retrieve directory structure and build into xtmp
"RTN","SAMIZ6",126,0)
 ;
"RTN","SAMIZ6",127,0)
 new kbairoot
"RTN","SAMIZ6",128,0)
 set kbairoot=$$setroot()
"RTN","SAMIZ6",129,0)
 ;
"RTN","SAMIZ6",130,0)
 ; kill @kbairoot
"RTN","SAMIZ6",131,0)
 ; if '$data(@kbairoot@(0)) do  quit  ; work area doesn't exist
"RTN","SAMIZ6",132,0)
 ; . write !,"error, work area not found ",kbairoot
"RTN","SAMIZ6",133,0)
 ; . quit
"RTN","SAMIZ6",134,0)
 ; . new X,Y
"RTN","SAMIZ6",135,0)
 ; . set X="T+999" ; a long time from now
"RTN","SAMIZ6",136,0)
 ; . do ^%DT ; covert to fm date format
"RTN","SAMIZ6",137,0)
 ; . set @kbairoot@(0)=Y_"^"_$$NOW^XLFDT_"^kbaiwsai graph"
"RTN","SAMIZ6",138,0)
 ; . quit
"RTN","SAMIZ6",139,0)
 ;
"RTN","SAMIZ6",140,0)
 zsystem "ls -DRL --file-type ~/www > ~/www/dirconfig.txt"
"RTN","SAMIZ6",141,0)
 new zdir set zdir=^%webhome
"RTN","SAMIZ6",142,0)
 new kbails,kbails1,ok
"RTN","SAMIZ6",143,0)
 set kbails=$na(@kbairoot@("ls"))
"RTN","SAMIZ6",144,0)
 set kbails1=$name(@kbails@(1))
"RTN","SAMIZ6",145,0)
 set ok=$$FTG^%ZISH(zdir,"dirconfig.txt",kbails1,4)
"RTN","SAMIZ6",146,0)
 do bldgraph
"RTN","SAMIZ6",147,0)
 ;
"RTN","SAMIZ6",148,0)
 quit  ; end of build
"RTN","SAMIZ6",149,0)
 ;
"RTN","SAMIZ6",150,0)
 ;
"RTN","SAMIZ6",151,0)
 ;
"RTN","SAMIZ6",152,0)
bldgraph ; build the graph in xtmp
"RTN","SAMIZ6",153,0)
 ;
"RTN","SAMIZ6",154,0)
 new kbairoot set kbairoot=$$setroot()
"RTN","SAMIZ6",155,0)
 new hmdir set hmdir=$$homedir()
"RTN","SAMIZ6",156,0)
 new groot set groot=$name(@kbairoot@("graph"))
"RTN","SAMIZ6",157,0)
 ; kill @groot
"RTN","SAMIZ6",158,0)
 new gsrc set gsrc=$name(@kbairoot@("ls"))
"RTN","SAMIZ6",159,0)
 new zi,zj,zln,zien,zien2,uriary,distdir,localdir
"RTN","SAMIZ6",160,0)
 set distdir="root"  ;
"RTN","SAMIZ6",161,0)
 set zien=0
"RTN","SAMIZ6",162,0)
 set zien2=0 ; subfile ien
"RTN","SAMIZ6",163,0)
 set zi=0
"RTN","SAMIZ6",164,0)
 new %cnt set %cnt=0
"RTN","SAMIZ6",165,0)
 for  set zi=$order(@gsrc@(zi)) quit:+zi=0  do  ;
"RTN","SAMIZ6",166,0)
 . new zln,zdir,zpar,ztag
"RTN","SAMIZ6",167,0)
 . set zln=@gsrc@(zi)
"RTN","SAMIZ6",168,0)
 . quit:zln=""
"RTN","SAMIZ6",169,0)
 . if zln[":" do  quit  ;
"RTN","SAMIZ6",170,0)
 . . set %cnt=%cnt+1
"RTN","SAMIZ6",171,0)
 . . ; if %cnt>100000 do counts(groot) set %cnt=1 ; this is for watching progress on big builds
"RTN","SAMIZ6",172,0)
 . . set zien=zien+1
"RTN","SAMIZ6",173,0)
 . . if $extract(zln,$length(zln))=":" set zln=$extract(zln,1,$length(zln)-1) ; strip off the :
"RTN","SAMIZ6",174,0)
 . . if $get(distdir)="" set distdir="root"  ;
"RTN","SAMIZ6",175,0)
 . . set @groot@(zien,"parent",distdir)=""
"RTN","SAMIZ6",176,0)
 . . set @groot@("pos","parent",distdir,zien)=""
"RTN","SAMIZ6",177,0)
 . . set @groot@("ops",distdir,"parent",zien)=""
"RTN","SAMIZ6",178,0)
 . . set localdir=zln
"RTN","SAMIZ6",179,0)
 . . set @groot@(zien,"localdir",localdir)=""
"RTN","SAMIZ6",180,0)
 . . set @groot@("pos","localdir",localdir,zien)=""
"RTN","SAMIZ6",181,0)
 . . set @groot@("ops",localdir,"localdir",zien)=""
"RTN","SAMIZ6",182,0)
 . . ; set graph type
"RTN","SAMIZ6",183,0)
 . . set @groot@(zien,"type","directory")=""
"RTN","SAMIZ6",184,0)
 . . set @groot@("pos","type","directory",zien)=""
"RTN","SAMIZ6",185,0)
 . . set @groot@("ops","directory","type",zien)=""
"RTN","SAMIZ6",186,0)
 . . set distdir=$piece(localdir,$$homedir,2)
"RTN","SAMIZ6",187,0)
 . . if distdir'="" do  ;
"RTN","SAMIZ6",188,0)
 . . . set @groot@(zien,"distdir",distdir)=""
"RTN","SAMIZ6",189,0)
 . . . set @groot@("pos","distdir",distdir,zien)=""
"RTN","SAMIZ6",190,0)
 . . . set @groot@("ops",distdir,"distdir",zien)=""
"RTN","SAMIZ6",191,0)
 . . . set @groot@(zien,"id",distdir)=""
"RTN","SAMIZ6",192,0)
 . . . set @groot@("pos","id",distdir,zien)=""
"RTN","SAMIZ6",193,0)
 . . . set @groot@("ops",distdir,"id",zien)=""
"RTN","SAMIZ6",194,0)
 . . . kill uriary do deuri(distdir,"uriary")
"RTN","SAMIZ6",195,0)
 . . . quit
"RTN","SAMIZ6",196,0)
 . . set zien2=0
"RTN","SAMIZ6",197,0)
 . . quit
"RTN","SAMIZ6",198,0)
 . ; process file names as a subfile to the directory
"RTN","SAMIZ6",199,0)
 . set zien2=zien2+1
"RTN","SAMIZ6",200,0)
 . ; set parent pointer
"RTN","SAMIZ6",201,0)
 . if $get(distdir)="" set distdir="root"  ;
"RTN","SAMIZ6",202,0)
 . set @groot@(zien,zien2,"parent",distdir)=""
"RTN","SAMIZ6",203,0)
 . set @groot@("pos","parent",distdir,zien,zien2)=""
"RTN","SAMIZ6",204,0)
 . set @groot@("ops",distdir,"parent",zien,zien2)=""
"RTN","SAMIZ6",205,0)
 . ; set file name attribute
"RTN","SAMIZ6",206,0)
 . set @groot@(zien,zien2,"file",zln)=""
"RTN","SAMIZ6",207,0)
 . set @groot@("pos","file",zln,zien,zien2)=""
"RTN","SAMIZ6",208,0)
 . set @groot@("ops",zln,"file",zien,zien2)=""
"RTN","SAMIZ6",209,0)
 . ; tag the file name
"RTN","SAMIZ6",210,0)
 . set @groot@(zien,zien2,"tag",zln)=""
"RTN","SAMIZ6",211,0)
 . set @groot@("pos","tag",zln,zien,zien2)=""
"RTN","SAMIZ6",212,0)
 . set @groot@("ops",zln,"tag",zien,zien2)=""
"RTN","SAMIZ6",213,0)
 . ; added to tag qrda cqm names
"RTN","SAMIZ6",214,0)
 . if $extract(zln,1,3)="CMS" do  ;
"RTN","SAMIZ6",215,0)
 . . new cqm
"RTN","SAMIZ6",216,0)
 . . set cqm=$piece(zln,"_",1)
"RTN","SAMIZ6",217,0)
 . . do addtag(cqm,zien,zien2)
"RTN","SAMIZ6",218,0)
 . . quit
"RTN","SAMIZ6",219,0)
 . ;
"RTN","SAMIZ6",220,0)
 . ; set the file id
"RTN","SAMIZ6",221,0)
 . new zid set zid=distdir_"/"_zln
"RTN","SAMIZ6",222,0)
 . if distdir="root" set zid=zln
"RTN","SAMIZ6",223,0)
 . set @groot@(zien,zien2,"id",zid)=""
"RTN","SAMIZ6",224,0)
 . set @groot@("pos","id",zid,zien,zien2)=""
"RTN","SAMIZ6",225,0)
 . set @groot@("ops",zid,"id",zien,zien2)=""
"RTN","SAMIZ6",226,0)
 . new ztyp ; graph type
"RTN","SAMIZ6",227,0)
 . if $extract(zln,$length(zln))="/" set ztyp="directory"
"RTN","SAMIZ6",228,0)
 . else  set ztyp="file"
"RTN","SAMIZ6",229,0)
 . set @groot@(zien,zien2,"type",ztyp)=""
"RTN","SAMIZ6",230,0)
 . set @groot@("pos","type",ztyp,zien,zien2)=""
"RTN","SAMIZ6",231,0)
 . set @groot@("ops",ztyp,"type",zien,zien2)=""
"RTN","SAMIZ6",232,0)
 . new zftyp
"RTN","SAMIZ6",233,0)
 . set zftyp=$reverse($piece($reverse(zln),".",1))
"RTN","SAMIZ6",234,0)
 . if zftyp'="" do  ;
"RTN","SAMIZ6",235,0)
 . . set @groot@(zien,zien2,"filetype",zftyp)=""
"RTN","SAMIZ6",236,0)
 . . set @groot@("pos","filetype",zftyp,zien,zien2)=""
"RTN","SAMIZ6",237,0)
 . . set @groot@("ops",zftyp,"filetype",zien,zien2)=""
"RTN","SAMIZ6",238,0)
 . . set @groot@(zien,zien2,"tag",zftyp)=""
"RTN","SAMIZ6",239,0)
 . . set @groot@("pos","tag",zftyp,zien,zien2)=""
"RTN","SAMIZ6",240,0)
 . . set @groot@("ops",zftyp,"tag",zien,zien2)=""
"RTN","SAMIZ6",241,0)
 . . ; tag the name without the filetype
"RTN","SAMIZ6",242,0)
 . . new zfn2
"RTN","SAMIZ6",243,0)
 . . set zfn2=$reverse($piece($reverse(zln),$reverse(zftyp)_".",2))
"RTN","SAMIZ6",244,0)
 . . if zfn2'="" do  ;
"RTN","SAMIZ6",245,0)
 . . . set @groot@(zien,zien2,"tag",zfn2)=""
"RTN","SAMIZ6",246,0)
 . . . set @groot@("pos","tag",zfn2,zien,zien2)=""
"RTN","SAMIZ6",247,0)
 . . . set @groot@("ops",zfn2,"tag",zien,zien2)=""
"RTN","SAMIZ6",248,0)
 . . . new contents
"RTN","SAMIZ6",249,0)
 . . . if zftyp["xml" do  ;
"RTN","SAMIZ6",250,0)
 . . . . do scan(.contents,zid,zien,zien2) ; not scanning right now
"RTN","SAMIZ6",251,0)
 . . . . quit
"RTN","SAMIZ6",252,0)
 . . . quit
"RTN","SAMIZ6",253,0)
 . . quit
"RTN","SAMIZ6",254,0)
 . set @groot@(zien,zien2,"localdir",localdir)=""
"RTN","SAMIZ6",255,0)
 . set @groot@("pos","localdir",localdir,zien,zien2)=""
"RTN","SAMIZ6",256,0)
 . set @groot@("ops",localdir,"localdir",zien,zien2)=""
"RTN","SAMIZ6",257,0)
 . if $get(distdir)'="" do  ;
"RTN","SAMIZ6",258,0)
 . . set @groot@(zien,zien2,"distdir",distdir)=""
"RTN","SAMIZ6",259,0)
 . . set @groot@("pos","distdir",distdir,zien,zien2)=""
"RTN","SAMIZ6",260,0)
 . . set @groot@("ops",distdir,"distdir",zien,zien2)=""
"RTN","SAMIZ6",261,0)
 . . quit
"RTN","SAMIZ6",262,0)
 . ; add the tags from the directory
"RTN","SAMIZ6",263,0)
 . new zj set zj=""
"RTN","SAMIZ6",264,0)
 . for  set zj=$order(uriary(zj)) quit:zj=""  do  ;
"RTN","SAMIZ6",265,0)
 . . set @groot@(zien,zien2,"tag",uriary(zj))=""
"RTN","SAMIZ6",266,0)
 . . set @groot@("pos","tag",uriary(zj),zien,zien2)=""
"RTN","SAMIZ6",267,0)
 . . set @groot@("ops",uriary(zj),"tag",zien,zien2)=""
"RTN","SAMIZ6",268,0)
 . . quit
"RTN","SAMIZ6",269,0)
 . ; if zien=3344 break
"RTN","SAMIZ6",270,0)
 . quit
"RTN","SAMIZ6",271,0)
 ; compute the counts
"RTN","SAMIZ6",272,0)
 do counts(groot) ;
"RTN","SAMIZ6",273,0)
 ;
"RTN","SAMIZ6",274,0)
 quit  ; end of bldgraph
"RTN","SAMIZ6",275,0)
 ;
"RTN","SAMIZ6",276,0)
 ;
"RTN","SAMIZ6",277,0)
 ;
"RTN","SAMIZ6",278,0)
counts(groot) ;
"RTN","SAMIZ6",279,0)
 ;
"RTN","SAMIZ6",280,0)
 new ztag,zary,zcnt
"RTN","SAMIZ6",281,0)
 kill @groot@("countbytag")
"RTN","SAMIZ6",282,0)
 kill @groot@("tagbycount")
"RTN","SAMIZ6",283,0)
 set ztag=""
"RTN","SAMIZ6",284,0)
 for  set ztag=$order(@groot@("pos","tag",ztag)) quit:ztag=""  do  ;
"RTN","SAMIZ6",285,0)
 . if ztag="" quit  ;
"RTN","SAMIZ6",286,0)
 . kill zary
"RTN","SAMIZ6",287,0)
 . do match("#tag:"_ztag,"zary")
"RTN","SAMIZ6",288,0)
 . ; write !,ztag," ",$data(zary)
"RTN","SAMIZ6",289,0)
 . set zcnt=$$count("zary")
"RTN","SAMIZ6",290,0)
 . if zcnt<1 quit  ;
"RTN","SAMIZ6",291,0)
 . set @groot@("countbytag",ztag,zcnt)=""
"RTN","SAMIZ6",292,0)
 . set @groot@("tagbycount",zcnt,ztag)=""
"RTN","SAMIZ6",293,0)
 . quit
"RTN","SAMIZ6",294,0)
 ;
"RTN","SAMIZ6",295,0)
 quit  ; end of counts
"RTN","SAMIZ6",296,0)
 ;
"RTN","SAMIZ6",297,0)
 ;
"RTN","SAMIZ6",298,0)
 ;
"RTN","SAMIZ6",299,0)
testscan ;
"RTN","SAMIZ6",300,0)
 ;
"RTN","SAMIZ6",301,0)
 set zien=4
"RTN","SAMIZ6",302,0)
 set zien2=1
"RTN","SAMIZ6",303,0)
 ; set zid=$order(^xtmp("kbaiweb","graph",4,1,"id",""))
"RTN","SAMIZ6",304,0)
 set zid=$order(@$$setroot@("graph",4,1,"id",""))
"RTN","SAMIZ6",305,0)
 do scan(.g,zid,zien,zien2)
"RTN","SAMIZ6",306,0)
 ;
"RTN","SAMIZ6",307,0)
 quit  ; end of testscan
"RTN","SAMIZ6",308,0)
 ;
"RTN","SAMIZ6",309,0)
 ;
"RTN","SAMIZ6",310,0)
 ;
"RTN","SAMIZ6",311,0)
scan(rtn,zid,zien,zien2) ; scan the file contents for new tags
"RTN","SAMIZ6",312,0)
 ;
"RTN","SAMIZ6",313,0)
 ; and add them to the graph
"RTN","SAMIZ6",314,0)
 ;
"RTN","SAMIZ6",315,0)
 new zcmd,tmpfile,tmpdir,cmdfile
"RTN","SAMIZ6",316,0)
 set tmpfile="scan.txt"
"RTN","SAMIZ6",317,0)
 set cmdfile="scan.sh"
"RTN","SAMIZ6",318,0)
 set tmpdir=^%webhome
"RTN","SAMIZ6",319,0)
 set zcmd=$name(^tmp("kbaicmd",$job))
"RTN","SAMIZ6",320,0)
 set zcmd1=$name(@zcmd@(1))
"RTN","SAMIZ6",321,0)
 set @zcmd@(1)="rm "_tmpdir_"/"_tmpfile
"RTN","SAMIZ6",322,0)
 new g2 set g2=""
"RTN","SAMIZ6",323,0)
 for i=1:1:$length(zid) set g2=g2_$select($extract(zid,i)=" ":"\ ",1:$extract(zid,i))
"RTN","SAMIZ6",324,0)
 ; set @zcmd@(2)="grep code "_tmpdir_"/"_zid_" > "_tmpdir_"/"_tmpfile
"RTN","SAMIZ6",325,0)
 set @zcmd@(2)="grep code "_tmpdir_g2_" > "_tmpdir_tmpfile
"RTN","SAMIZ6",326,0)
 ; set @zcmd@(3)="grep originaltext "_tmpdir_"/"_zid_" >> "_tmpdir_"/"_tmpfile
"RTN","SAMIZ6",327,0)
 set @zcmd@(3)="grep originaltext "_tmpdir_g2_" >> "_tmpdir_tmpfile
"RTN","SAMIZ6",328,0)
 new ok
"RTN","SAMIZ6",329,0)
 set ok=$$GTF^%ZISH(zcmd1,3,tmpdir,cmdfile)
"RTN","SAMIZ6",330,0)
 zsystem "bash ../www/scan.sh"
"RTN","SAMIZ6",331,0)
 new where set where=$name(^tmp("kbaiscan",$job))
"RTN","SAMIZ6",332,0)
 kill @where
"RTN","SAMIZ6",333,0)
 new where1 set where1=$name(@where@(1))
"RTN","SAMIZ6",334,0)
 set ok=$$FTG^%ZISH(tmpdir,tmpfile,where1,3)
"RTN","SAMIZ6",335,0)
 if ok do  ;
"RTN","SAMIZ6",336,0)
 . new zi set zi=0
"RTN","SAMIZ6",337,0)
 . for  set zi=$order(@where@(zi)) quit:+zi=0  do  ;
"RTN","SAMIZ6",338,0)
 . . new zl set zl=@where@(zi)
"RTN","SAMIZ6",339,0)
 . . if zl["code" do  ;
"RTN","SAMIZ6",340,0)
 . . . new code
"RTN","SAMIZ6",341,0)
 . . . set code=$piece($piece(zl,"code=""",2),""" ")
"RTN","SAMIZ6",342,0)
 . . . if code[">" quit  ;
"RTN","SAMIZ6",343,0)
 . . . if code["""" quit  ;
"RTN","SAMIZ6",344,0)
 . . . ; break
"RTN","SAMIZ6",345,0)
 . . . new name
"RTN","SAMIZ6",346,0)
 . . . set name=$piece($piece(zl,"displayName=""",2),"""")
"RTN","SAMIZ6",347,0)
 . . . if name["[&quot;" set name=$piece($piece(name,"[&quot;",2),"&quot;]")
"RTN","SAMIZ6",348,0)
 . . . if name="" do  ;
"RTN","SAMIZ6",349,0)
 . . . . if zl["<originalText" do  ;
"RTN","SAMIZ6",350,0)
 . . . . . set name=$piece($piece(zl,"<originalText>",2),"</originalText>")
"RTN","SAMIZ6",351,0)
 . . . . . quit
"RTN","SAMIZ6",352,0)
 . . . . quit
"RTN","SAMIZ6",353,0)
 . . . quit:code=""
"RTN","SAMIZ6",354,0)
 . . . do addtag(code_" "_name,zien,zien2)
"RTN","SAMIZ6",355,0)
 . . . ; do addtag(code,zien,zien2)
"RTN","SAMIZ6",356,0)
 . . . quit
"RTN","SAMIZ6",357,0)
 . . quit
"RTN","SAMIZ6",358,0)
 . quit
"RTN","SAMIZ6",359,0)
 ;
"RTN","SAMIZ6",360,0)
 ; zwrite ^tmp("kbaiscan",$job,*)
"RTN","SAMIZ6",361,0)
 ;
"RTN","SAMIZ6",362,0)
 quit  ; end of scan
"RTN","SAMIZ6",363,0)
 ;
"RTN","SAMIZ6",364,0)
 ;
"RTN","SAMIZ6",365,0)
 ;
"RTN","SAMIZ6",366,0)
addtag(tag,zien,zien2) ; add a tag to a graph
"RTN","SAMIZ6",367,0)
 ;
"RTN","SAMIZ6",368,0)
 ; write !,"adding ",tag," at ",zien," ",zien2 
"RTN","SAMIZ6",369,0)
 ;
"RTN","SAMIZ6",370,0)
 new gn set gn=$na(@$$setroot@("graph"))
"RTN","SAMIZ6",371,0)
 set @gn@(zien,zien2,"tag",tag)=""
"RTN","SAMIZ6",372,0)
 set @gn@("pos","tag",tag,zien,zien2)=""
"RTN","SAMIZ6",373,0)
 set @gn@("ops",tag,"tag",zien,zien2)=""
"RTN","SAMIZ6",374,0)
 ; zwrite @$$setroot@("graph",:,:,tag,zien,zien2)
"RTN","SAMIZ6",375,0)
 ;
"RTN","SAMIZ6",376,0)
 quit  ; end of addtag
"RTN","SAMIZ6",377,0)
 ;
"RTN","SAMIZ6",378,0)
 ;
"RTN","SAMIZ6",379,0)
 ;
"RTN","SAMIZ6",380,0)
wssee(rtn,filter) ; web service for browsing files using the graph
"RTN","SAMIZ6",381,0)
 ;
"RTN","SAMIZ6",382,0)
 merge ^SAMIUL("filter")=filter
"RTN","SAMIZ6",383,0)
 new arg set arg=$get(filter("*"))
"RTN","SAMIZ6",384,0)
 if arg="" do toppage^%yottahtm(.rtn,.filter) quit  ;
"RTN","SAMIZ6",385,0)
 ;
"RTN","SAMIZ6",386,0)
 ; if arg="@rewrite" do rewrite(.rtn) quit  ;
"RTN","SAMIZ6",387,0)
 ;
"RTN","SAMIZ6",388,0)
 if arg]"%" set arg=$$URLDEC^VPRJRUT(arg)
"RTN","SAMIZ6",389,0)
 new ptrary ; pointer array for result
"RTN","SAMIZ6",390,0)
 new groot set groot=$name(@$$setroot@("graph"))
"RTN","SAMIZ6",391,0)
 ;
"RTN","SAMIZ6",392,0)
 ; if $$lookup(arg,"id",.ptrary)= do  quit  ; id arg is found
"RTN","SAMIZ6",393,0)
 ; . if $$count(.ptrary)=1 do  ; just one match
"RTN","SAMIZ6",394,0)
 ; . . ;
"RTN","SAMIZ6",395,0)
 ; . . quit
"RTN","SAMIZ6",396,0)
 ; . quit
"RTN","SAMIZ6",397,0)
 ; if $order(@$$setroot@("graph","pos","id","/"_arg,""))'="" do  quit  ;
"RTN","SAMIZ6",398,0)
 ; if $order(@groot@("pos","id","/"_arg,""))'="",arg'="ehmp" do  quit  ;
"RTN","SAMIZ6",399,0)
 ;
"RTN","SAMIZ6",400,0)
 if $order(@groot@("pos","id","/"_arg,""))'="" do  quit  ;
"RTN","SAMIZ6",401,0)
 . ; new zdest set zdest="/"_arg
"RTN","SAMIZ6",402,0)
 . ; if $$stat(arg)'["regular file" set zdest=$$locate(arg)
"RTN","SAMIZ6",403,0)
 . ; if zdest'=arg set filter("*")=zdest
"RTN","SAMIZ6",404,0)
 . if $extract(arg,$length(arg))="/" do dir(.rtn,arg) quit  ; it's a directory
"RTN","SAMIZ6",405,0)
 . ; if $reverse($piece($reverse(arg),"."))="xml" do style(.rtn,arg) quit  ;
"RTN","SAMIZ6",406,0)
 . if $reverse($piece($reverse(arg),"."))="xml" do  quit  ;
"RTN","SAMIZ6",407,0)
 . . do style(.rtn,arg)
"RTN","SAMIZ6",408,0)
 . . do ADDCRLF^VPRJRUT(.rtn)
"RTN","SAMIZ6",409,0)
 . . quit
"RTN","SAMIZ6",410,0)
 . set filter("*")=arg
"RTN","SAMIZ6",411,0)
 . do FILESYS^%webapi(.rtn,.filter)
"RTN","SAMIZ6",412,0)
 . quit
"RTN","SAMIZ6",413,0)
 ;
"RTN","SAMIZ6",414,0)
 ; request is not an id in the graph, so try and find the file if any
"RTN","SAMIZ6",415,0)
 new zf,zuri
"RTN","SAMIZ6",416,0)
 set zuri=$$useuri($$isfile(arg),arg)
"RTN","SAMIZ6",417,0)
 if zuri=-1 set zuri=$$useuri($$altfile($$isfile(arg)),arg)
"RTN","SAMIZ6",418,0)
 if zuri'=-1 do  quit  ;
"RTN","SAMIZ6",419,0)
 . if $reverse($piece($reverse(zuri),"."))="xml" do  quit  ;
"RTN","SAMIZ6",420,0)
 . . do style(.rtn,zuri)
"RTN","SAMIZ6",421,0)
 . . do ADDCRLF^VPRJRUT(.rtn)
"RTN","SAMIZ6",422,0)
 . . quit
"RTN","SAMIZ6",423,0)
 . set filter("*")=zuri
"RTN","SAMIZ6",424,0)
 . do FILESYS^%webapi(.rtn,.filter)
"RTN","SAMIZ6",425,0)
 . quit
"RTN","SAMIZ6",426,0)
 ;
"RTN","SAMIZ6",427,0)
 ; set zf=$$isfile(arg)
"RTN","SAMIZ6",428,0)
 ; if zf'=-1 set zuri=$$useuri(zf) ;
"RTN","SAMIZ6",429,0)
 ; else  do  ;
"RTN","SAMIZ6",430,0)
 ; . set zf=$$altfile(zf)
"RTN","SAMIZ6",431,0)
 ; . if zf'=-1 set zuri=$$useuri(zf)
"RTN","SAMIZ6",432,0)
 ; . quit
"RTN","SAMIZ6",433,0)
 ; if zuri'=1 do  quit  ;
"RTN","SAMIZ6",434,0)
 ; . set filter("*")=zuri
"RTN","SAMIZ6",435,0)
 ; . do FILESYS^%webapi(.rtn,.filter)
"RTN","SAMIZ6",436,0)
 ; . quit
"RTN","SAMIZ6",437,0)
 ;
"RTN","SAMIZ6",438,0)
 new matches
"RTN","SAMIZ6",439,0)
 ;
"RTN","SAMIZ6",440,0)
 ; if arg["%20" s arg=$translate(arg,"%20"," ")
"RTN","SAMIZ6",441,0)
 ;
"RTN","SAMIZ6",442,0)
 do match("#"_arg,"matches")
"RTN","SAMIZ6",443,0)
 ;
"RTN","SAMIZ6",444,0)
 ; merge ^SAMIUL("matches")=matches
"RTN","SAMIZ6",445,0)
 ; if $data(matches) set rtn=$query(matches)
"RTN","SAMIZ6",446,0)
 ;
"RTN","SAMIZ6",447,0)
 if $$count("matches")>0 do  quit  ; more than one match
"RTN","SAMIZ6",448,0)
 . do multout(.rtn,"matches")
"RTN","SAMIZ6",449,0)
 . quit
"RTN","SAMIZ6",450,0)
 ;
"RTN","SAMIZ6",451,0)
 quit  ; end of wssee
"RTN","SAMIZ6",452,0)
 ;
"RTN","SAMIZ6",453,0)
 ;
"RTN","SAMIZ6",454,0)
 ;
"RTN","SAMIZ6",455,0)
style(rtn,zuri) ;
"RTN","SAMIZ6",456,0)
 ;
"RTN","SAMIZ6",457,0)
 new gn set gn=$name(^tmp("kbaiout",$job))
"RTN","SAMIZ6",458,0)
 new gn1 set gn1=$name(@gn@(1))
"RTN","SAMIZ6",459,0)
 kill @gn
"RTN","SAMIZ6",460,0)
 new ok
"RTN","SAMIZ6",461,0)
 set ok=$$FTG^%ZISH($$dirpart(zuri),$$isfile(zuri),gn1,3)
"RTN","SAMIZ6",462,0)
 if 'ok do  quit  ;
"RTN","SAMIZ6",463,0)
 . ; break
"RTN","SAMIZ6",464,0)
 . set filter("*")=zuri
"RTN","SAMIZ6",465,0)
 . do FILESYS^%webapi(.rtn,.filter)
"RTN","SAMIZ6",466,0)
 . quit
"RTN","SAMIZ6",467,0)
 set HTTPRSP("mime")="text/xml"
"RTN","SAMIZ6",468,0)
 ;
"RTN","SAMIZ6",469,0)
 ; new gt1
"RTN","SAMIZ6",470,0)
 ; set gt1="<?xml-stylesheet type=""text/xsl"" href=""/resources/css/cda.xslt""?>"
"RTN","SAMIZ6",471,0)
 ; if $get(@gn@(1))["?>" do  ;
"RTN","SAMIZ6",472,0)
 ; . new gt set gt=$piece(@gn@(1),"?>",1)_"?>"_gt1_$piece(@gn@(1),"?>",2)
"RTN","SAMIZ6",473,0)
 ; . set @gn@(1)=gt
"RTN","SAMIZ6",474,0)
 ; . quit
"RTN","SAMIZ6",475,0)
 ; set @gn@(1)=@gn@(1)_"<?xml-stylesheet type=""text/xml"" href=""/resources/css/cda.xsl""?>"
"RTN","SAMIZ6",476,0)
 ;
"RTN","SAMIZ6",477,0)
 set @gn@(1.5)="<?xml-stylesheet type=""text/xml"" href=""/resources/css/cda.xsl""?>"
"RTN","SAMIZ6",478,0)
 set rtn=gn
"RTN","SAMIZ6",479,0)
 ;
"RTN","SAMIZ6",480,0)
 quit  ; end of style
"RTN","SAMIZ6",481,0)
 ;
"RTN","SAMIZ6",482,0)
 ;
"RTN","SAMIZ6",483,0)
 ;
"RTN","SAMIZ6",484,0)
parent(zarg) ; extrinsic which returns the parent of the zarg
"RTN","SAMIZ6",485,0)
 ;
"RTN","SAMIZ6",486,0)
 new groot set groot=$name(@$$setroot@("graph"))
"RTN","SAMIZ6",487,0)
 new zien
"RTN","SAMIZ6",488,0)
 set zien=$order(@groot@("pos","id","/"_zarg,""))
"RTN","SAMIZ6",489,0)
 if zien="" quit ""
"RTN","SAMIZ6",490,0)
 ;
"RTN","SAMIZ6",491,0)
 quit $order(@groot@(zien,"parent",""))
"RTN","SAMIZ6",492,0)
 ;
"RTN","SAMIZ6",493,0)
 ;
"RTN","SAMIZ6",494,0)
 ;
"RTN","SAMIZ6",495,0)
isfile(zarg) ; extrinsic to return the file name from a uri
"RTN","SAMIZ6",496,0)
 ;
"RTN","SAMIZ6",497,0)
 ; -1 if it's not a file
"RTN","SAMIZ6",498,0)
 ;
"RTN","SAMIZ6",499,0)
 new rslt
"RTN","SAMIZ6",500,0)
 set rslt=$reverse($piece($reverse(zarg),"/"))
"RTN","SAMIZ6",501,0)
 if rslt="" set rslt=-1
"RTN","SAMIZ6",502,0)
 ;
"RTN","SAMIZ6",503,0)
 quit rslt ; end of $$isFile
"RTN","SAMIZ6",504,0)
 ;
"RTN","SAMIZ6",505,0)
 ;
"RTN","SAMIZ6",506,0)
 ;
"RTN","SAMIZ6",507,0)
dirpart(zuri) ; extrinsic which returns the directory part of the file uri
"RTN","SAMIZ6",508,0)
 ;
"RTN","SAMIZ6",509,0)
 new rslt
"RTN","SAMIZ6",510,0)
 set rslt=$piece(zuri,$$isfile(zuri),1)
"RTN","SAMIZ6",511,0)
 if rslt="" set rslt=-1
"RTN","SAMIZ6",512,0)
 ;
"RTN","SAMIZ6",513,0)
 quit ^%webhome_rslt ; end of $$dirpart
"RTN","SAMIZ6",514,0)
 ;
"RTN","SAMIZ6",515,0)
 ;
"RTN","SAMIZ6",516,0)
 ;
"RTN","SAMIZ6",517,0)
altfile(zfile) ; extrinsic which tries to take the version number out of
"RTN","SAMIZ6",518,0)
 ;
"RTN","SAMIZ6",519,0)
 ; the filename ie jasmine-1.3.1.js becomes jasmine.js
"RTN","SAMIZ6",520,0)
 ;
"RTN","SAMIZ6",521,0)
 new z1,z2,z3,z4,z5
"RTN","SAMIZ6",522,0)
 set z1=$reverse(zfile) ; sj.1.3.1-enimsaj
"RTN","SAMIZ6",523,0)
 set z2=$piece(z1,".",4) ; 1-enimsaj
"RTN","SAMIZ6",524,0)
 ; write:$get(debug) !,"z2=",z2
"RTN","SAMIZ6",525,0)
 ; set z3=$piece(z2,"-",2) ; enimsaj
"RTN","SAMIZ6",526,0)
 set z3=$extract(z2,3,$length(z2))
"RTN","SAMIZ6",527,0)
 ; write:$get(debug) !,"z3=",z3,!
"RTN","SAMIZ6",528,0)
 set z4="."_$reverse($piece(z1,".",1)) ; .js
"RTN","SAMIZ6",529,0)
 ; write:$get(debug) !,"z4=",z4,!
"RTN","SAMIZ6",530,0)
 set z5=$reverse(z3)_z4
"RTN","SAMIZ6",531,0)
 ;
"RTN","SAMIZ6",532,0)
 quit z5 ; end of $$altfile
"RTN","SAMIZ6",533,0)
 ;
"RTN","SAMIZ6",534,0)
 ;
"RTN","SAMIZ6",535,0)
 ;
"RTN","SAMIZ6",536,0)
useuri(zfile,zarg) ; extrinsic which returns the uri to use for a filename
"RTN","SAMIZ6",537,0)
 ;
"RTN","SAMIZ6",538,0)
 ; -1 if none found
"RTN","SAMIZ6",539,0)
 ;
"RTN","SAMIZ6",540,0)
 new z1,z2,groot,zr
"RTN","SAMIZ6",541,0)
 set groot=$name(@$$setroot@("graph"))
"RTN","SAMIZ6",542,0)
 set z1=$order(@groot@("pos","file",zfile,""))
"RTN","SAMIZ6",543,0)
 if z1="" quit -1
"RTN","SAMIZ6",544,0)
 set z2=$order(@groot@("pos","file",zfile,z1,""))
"RTN","SAMIZ6",545,0)
 set zr=$order(@groot@(z1,z2,"id",""))
"RTN","SAMIZ6",546,0)
 if zr="" set zr=-1
"RTN","SAMIZ6",547,0)
 ; if zr'=-1 do logrewr(zarg,zr)
"RTN","SAMIZ6",548,0)
 ;
"RTN","SAMIZ6",549,0)
 quit zr ; end of $$useuri
"RTN","SAMIZ6",550,0)
 ;
"RTN","SAMIZ6",551,0)
 ;
"RTN","SAMIZ6",552,0)
 ;
"RTN","SAMIZ6",553,0)
multout(rtn,zary,title) ; return and html page with multiple selections
"RTN","SAMIZ6",554,0)
 ;
"RTN","SAMIZ6",555,0)
 ; zary is passed by name and is usually a "match" array
"RTN","SAMIZ6",556,0)
 ;
"RTN","SAMIZ6",557,0)
 do  ;
"RTN","SAMIZ6",558,0)
 . set rtn=$name(^tmp("kbaiwsai",$j))
"RTN","SAMIZ6",559,0)
 . kill @rtn
"RTN","SAMIZ6",560,0)
 . new gtop,gbot
"RTN","SAMIZ6",561,0)
 . do htmltb2^%yottaweb(.gtop,.gbot,"search results for #"_arg)
"RTN","SAMIZ6",562,0)
 . merge @rtn=gtop
"RTN","SAMIZ6",563,0)
 . if $data(title) do addto^%yottautl(rtn,"<p>"_title_"</p>")
"RTN","SAMIZ6",564,0)
 . do addto^%yottautl(rtn,"<ul>")
"RTN","SAMIZ6",565,0)
 . new zcnt,zstop set (zcnt,zstop)=0
"RTN","SAMIZ6",566,0)
 . new zi set zi=zary
"RTN","SAMIZ6",567,0)
 . for  set zi=$query(@zi) quit:((zi="")!(zstop))  do  ;
"RTN","SAMIZ6",568,0)
 . . set zcnt=zcnt+1
"RTN","SAMIZ6",569,0)
 . . if zcnt>1000 set zstop=1
"RTN","SAMIZ6",570,0)
 . . new zptr set zptr=$$fmtptr(zi)
"RTN","SAMIZ6",571,0)
 . . new zd,zf,zref
"RTN","SAMIZ6",572,0)
 . . set zd=$order(@zptr@("localdir",""))
"RTN","SAMIZ6",573,0)
 . . set zd=$piece(zd,$$homedir,2)
"RTN","SAMIZ6",574,0)
 . . ; if $extract(zd,$length(zd))="/" do  quit  ; it's a directory
"RTN","SAMIZ6",575,0)
 . . set zf=$order(@zptr@("file",""))
"RTN","SAMIZ6",576,0)
 . . set zref="<a href=""/see"_zd_"/"_zf_""">"_zd_"/"_zf_"</a>"
"RTN","SAMIZ6",577,0)
 . . do addto^%yottautl(rtn,"<li>"_zref_"</li>")
"RTN","SAMIZ6",578,0)
 . . quit
"RTN","SAMIZ6",579,0)
 . do addto^%yottautl(rtn,"</ul>")
"RTN","SAMIZ6",580,0)
 . kill @rtn@(0)
"RTN","SAMIZ6",581,0)
 . set HTTPRSP("mime")="text/html"
"RTN","SAMIZ6",582,0)
 . set @rtn@($order(@rtn@(""),-1)+1)=gbot
"RTN","SAMIZ6",583,0)
 . quit
"RTN","SAMIZ6",584,0)
 ;
"RTN","SAMIZ6",585,0)
 ; if $extract(arg,$length(arg))="/" do  quit  ; it's a directory
"RTN","SAMIZ6",586,0)
 ; . set rtn="it's a directory"
"RTN","SAMIZ6",587,0)
 ; . quit
"RTN","SAMIZ6",588,0)
 ; do FILESYS^%webapi(.rtn,.filter)
"RTN","SAMIZ6",589,0)
 ;
"RTN","SAMIZ6",590,0)
 quit  ; end of multout
"RTN","SAMIZ6",591,0)
 ;
"RTN","SAMIZ6",592,0)
 ;
"RTN","SAMIZ6",593,0)
 ;
"RTN","SAMIZ6",594,0)
dir(rtn,zpar)
"RTN","SAMIZ6",595,0)
 ;
"RTN","SAMIZ6",596,0)
 new zi,dirary
"RTN","SAMIZ6",597,0)
 new groot set groot=$name(@$$setroot@("graph"))
"RTN","SAMIZ6",598,0)
 new adj set adj="/"_$extract(zpar,1,$length(zpar)-1)
"RTN","SAMIZ6",599,0)
 merge dirary=@groot@("pos","parent",adj)
"RTN","SAMIZ6",600,0)
 ; set dirary("up")=$get(@groot@("
"RTN","SAMIZ6",601,0)
 ; break
"RTN","SAMIZ6",602,0)
 if '$data(dirary) quit  ;
"RTN","SAMIZ6",603,0)
 do multout(.rtn,"dirary")
"RTN","SAMIZ6",604,0)
 ;
"RTN","SAMIZ6",605,0)
 quit  ; end of dir
"RTN","SAMIZ6",606,0)
 ;
"RTN","SAMIZ6",607,0)
 ;
"RTN","SAMIZ6",608,0)
 ;
"RTN","SAMIZ6",609,0)
deuri(in,out) ; deconstruct a uri. in passed by value out passed by name
"RTN","SAMIZ6",610,0)
 ;
"RTN","SAMIZ6",611,0)
 new zzi
"RTN","SAMIZ6",612,0)
 for zzi=2:1:$length(in,"/") set @out@(zzi-1)=$piece(in,"/",zzi)
"RTN","SAMIZ6",613,0)
 ;
"RTN","SAMIZ6",614,0)
 quit  ; end of deuri
"RTN","SAMIZ6",615,0)
 ;
"RTN","SAMIZ6",616,0)
 ;
"RTN","SAMIZ6",617,0)
 ;
"RTN","SAMIZ6",618,0)
reuri(in) ; extrinsic which reconstructs a uri from an array
"RTN","SAMIZ6",619,0)
 ;
"RTN","SAMIZ6",620,0)
 quit  ; end of reuri
"RTN","SAMIZ6",621,0)
 ;
"RTN","SAMIZ6",622,0)
 ;
"RTN","SAMIZ6",623,0)
 ;
"RTN","SAMIZ6",624,0)
repar(in) ; extrinsic which reconstructs a parent uri from an array
"RTN","SAMIZ6",625,0)
 ;
"RTN","SAMIZ6",626,0)
 quit  ; end of repar
"RTN","SAMIZ6",627,0)
 ;
"RTN","SAMIZ6",628,0)
 ;
"RTN","SAMIZ6",629,0)
 ;
"RTN","SAMIZ6",630,0)
show(zien,zien2) ;
"RTN","SAMIZ6",631,0)
 ;
"RTN","SAMIZ6",632,0)
 if $get(zien)="" set zien=1
"RTN","SAMIZ6",633,0)
 if $get(zien2)="" zwrite @$$setroot@("graph",zien,*) quit  ;
"RTN","SAMIZ6",634,0)
 zwrite @$$setroot@("graph",zien,zien2,*)
"RTN","SAMIZ6",635,0)
 ;
"RTN","SAMIZ6",636,0)
 quit  ; end of show
"RTN","SAMIZ6",637,0)
 ;
"RTN","SAMIZ6",638,0)
 ;
"RTN","SAMIZ6",639,0)
 ;
"RTN","SAMIZ6",640,0)
fmtptr(inref) ; extrinsic forms a closed global reference to the graph
"RTN","SAMIZ6",641,0)
 ;
"RTN","SAMIZ6",642,0)
 ; inref is passed by value and looks like g(2897,3)
"RTN","SAMIZ6",643,0)
 ; returns ^xtmp("kbaiweb","graph",3297,3) based on setroot
"RTN","SAMIZ6",644,0)
 ;
"RTN","SAMIZ6",645,0)
 new %1,%2 set %1=$name(@$$setroot@("graph"))
"RTN","SAMIZ6",646,0)
 set %1=$piece(%1,")",1)
"RTN","SAMIZ6",647,0)
 set %2=$piece(inref,"(",2)
"RTN","SAMIZ6",648,0)
 ;
"RTN","SAMIZ6",649,0)
 quit %1_","_%2 ; end of fmtptr
"RTN","SAMIZ6",650,0)
 ;
"RTN","SAMIZ6",651,0)
 ;
"RTN","SAMIZ6",652,0)
 ;
"RTN","SAMIZ6",653,0)
gshow(inary) ; show the location and file names pointed to by inary
"RTN","SAMIZ6",654,0)
 ;
"RTN","SAMIZ6",655,0)
 ; inary is passed by name
"RTN","SAMIZ6",656,0)
 ;
"RTN","SAMIZ6",657,0)
 new %
"RTN","SAMIZ6",658,0)
 new z1 set z1=inary
"RTN","SAMIZ6",659,0)
 for  set z1=$query(@z1) quit:z1=""  do  ;
"RTN","SAMIZ6",660,0)
 . new z2,z3
"RTN","SAMIZ6",661,0)
 . set %=$$fmtptr(z1)
"RTN","SAMIZ6",662,0)
 . set z2=$name(@%@("file"))
"RTN","SAMIZ6",663,0)
 . write !,z2,"   ",$order(@z2@(""))
"RTN","SAMIZ6",664,0)
 . set z3=$name(@%@("distdir"))
"RTN","SAMIZ6",665,0)
 . write !,"   ",$order(@z3@(""))
"RTN","SAMIZ6",666,0)
 . quit
"RTN","SAMIZ6",667,0)
 ;
"RTN","SAMIZ6",668,0)
 quit  ; end of gshow
"RTN","SAMIZ6",669,0)
 ;
"RTN","SAMIZ6",670,0)
 ;
"RTN","SAMIZ6",671,0)
 ;
"RTN","SAMIZ6",672,0)
match(input,outary) ; extrinsic which returns the count of matches, 0 if none
"RTN","SAMIZ6",673,0)
 ;
"RTN","SAMIZ6",674,0)
 ; input is a string eg.. #ehmp#applets.
"RTN","SAMIZ6",675,0)
 ; outary is passed by name and returns
"RTN","SAMIZ6",676,0)
 ; the iens of the graph elements that match
"RTN","SAMIZ6",677,0)
 ; ie.. outary(1,2)="" and outary(3)
"RTN","SAMIZ6",678,0)
 ;
"RTN","SAMIZ6",679,0)
 new po ; predicate object array
"RTN","SAMIZ6",680,0)
 do hashpars(input,"po")
"RTN","SAMIZ6",681,0)
 if '$data(po) quit 0 ;
"RTN","SAMIZ6",682,0)
 new groot set groot=$$setroot()
"RTN","SAMIZ6",683,0)
 new posroot set posroot=$name(@groot@("graph","pos"))
"RTN","SAMIZ6",684,0)
 if $order(po(""),-1)=1 do  quit  ; $$count(outary)
"RTN","SAMIZ6",685,0)
 . ; only one hash tag to search for
"RTN","SAMIZ6",686,0)
 . new pred,obj
"RTN","SAMIZ6",687,0)
 . set pred=$order(po(1,""))
"RTN","SAMIZ6",688,0)
 . set obj=$order(po(1,pred,""))
"RTN","SAMIZ6",689,0)
 . if '$data(@posroot@(pred,obj)),$data(@posroot@(pred,obj_" ")) do
"RTN","SAMIZ6",690,0)
 . . set obj=obj_" "
"RTN","SAMIZ6",691,0)
 . . quit
"RTN","SAMIZ6",692,0)
 . if $order(@posroot@(pred,obj,""))="" quit  ;
"RTN","SAMIZ6",693,0)
 . kill @outary
"RTN","SAMIZ6",694,0)
 . merge @outary=@posroot@(pred,obj)
"RTN","SAMIZ6",695,0)
 . quit
"RTN","SAMIZ6",696,0)
 ;
"RTN","SAMIZ6",697,0)
 quit  ; end of match
"RTN","SAMIZ6",698,0)
 ;
"RTN","SAMIZ6",699,0)
 ;
"RTN","SAMIZ6",700,0)
 ;
"RTN","SAMIZ6",701,0)
count(ary) ; count the number of entries in the array ary pased by name
"RTN","SAMIZ6",702,0)
 ;
"RTN","SAMIZ6",703,0)
 new zcnt set zcnt=0
"RTN","SAMIZ6",704,0)
 if '$data(@ary) quit zcnt
"RTN","SAMIZ6",705,0)
 new % set %=ary
"RTN","SAMIZ6",706,0)
 for  set %=$query(@%) quit:%=""  set zcnt=zcnt+1
"RTN","SAMIZ6",707,0)
 ;
"RTN","SAMIZ6",708,0)
 quit zcnt ; end of $$count
"RTN","SAMIZ6",709,0)
 ;
"RTN","SAMIZ6",710,0)
 ;
"RTN","SAMIZ6",711,0)
 ;
"RTN","SAMIZ6",712,0)
recount ; recount the tags
"RTN","SAMIZ6",713,0)
 ;
"RTN","SAMIZ6",714,0)
 new groot set groot=$$setroot
"RTN","SAMIZ6",715,0)
 set groot=$name(@groot@("graph"))
"RTN","SAMIZ6",716,0)
 do counts(groot)
"RTN","SAMIZ6",717,0)
 ;
"RTN","SAMIZ6",718,0)
 quit  ; end of recount
"RTN","SAMIZ6",719,0)
 ;
"RTN","SAMIZ6",720,0)
 ;
"RTN","SAMIZ6",721,0)
 ;
"RTN","SAMIZ6",722,0)
hashpars(input,pairs)
"RTN","SAMIZ6",723,0)
 ;
"RTN","SAMIZ6",724,0)
 new kbaii
"RTN","SAMIZ6",725,0)
 if input'["#" quit  ;
"RTN","SAMIZ6",726,0)
 for kbaii=2:1:$length(input,"#") do  ;
"RTN","SAMIZ6",727,0)
 . new zp,zo,pred
"RTN","SAMIZ6",728,0)
 . set zp=$piece(input,"#",kbaii)
"RTN","SAMIZ6",729,0)
 . set pred="tag"
"RTN","SAMIZ6",730,0)
 . set zo=zp
"RTN","SAMIZ6",731,0)
 . if zp[":" do  ;
"RTN","SAMIZ6",732,0)
 . . set pred=$piece(zp,":",1)
"RTN","SAMIZ6",733,0)
 . . set zo=$extract(zp,$find(zp,":"),$length(zp))
"RTN","SAMIZ6",734,0)
 . . if zo["%" set zo=$$URLDEC^VPRJRUT(.zo)
"RTN","SAMIZ6",735,0)
 . . ; write !,zo
"RTN","SAMIZ6",736,0)
 . . ; set zo=$piece(zp,":",2)
"RTN","SAMIZ6",737,0)
 . . quit
"RTN","SAMIZ6",738,0)
 . if $get(pred)="" quit  ;
"RTN","SAMIZ6",739,0)
 . if $get(zo)="" quit  ;
"RTN","SAMIZ6",740,0)
 . set @pairs@(kbaii-1,pred,zo)=""
"RTN","SAMIZ6",741,0)
 . quit
"RTN","SAMIZ6",742,0)
 ;
"RTN","SAMIZ6",743,0)
 quit  ; end of hashpars
"RTN","SAMIZ6",744,0)
 ;
"RTN","SAMIZ6",745,0)
 ;
"RTN","SAMIZ6",746,0)
 ;
"RTN","SAMIZ6",747,0)
stat(zf) ;
"RTN","SAMIZ6",748,0)
 ;
"RTN","SAMIZ6",749,0)
 new zstat,zcmd,zwhere
"RTN","SAMIZ6",750,0)
 set zcmd="""stat --format %f "_zf_" >./stat.txt"""
"RTN","SAMIZ6",751,0)
 zsystem @zcmd
"RTN","SAMIZ6",752,0)
 set zwhere=$name(^tmp("kbaiweb","stat",1))
"RTN","SAMIZ6",753,0)
 new zok set zok=$$FTG^%ZISH("./","stat.txt",zwhere,3)
"RTN","SAMIZ6",754,0)
 ;
"RTN","SAMIZ6",755,0)
 quit @zwhere ; end of $$stat
"RTN","SAMIZ6",756,0)
 ;
"RTN","SAMIZ6",757,0)
 ;
"RTN","SAMIZ6",758,0)
 ;
"RTN","SAMIZ6",759,0)
locate(zarg) ;
"RTN","SAMIZ6",760,0)
 ;
"RTN","SAMIZ6",761,0)
 quit zarg ; end of $$locate
"RTN","SAMIZ6",762,0)
 ;
"RTN","SAMIZ6",763,0)
 ;
"RTN","SAMIZ6",764,0)
 ;
"RTN","SAMIZ6",765,0)
logrewr(from,to) ; log uri rewrite
"RTN","SAMIZ6",766,0)
 ;
"RTN","SAMIZ6",767,0)
 new dt,id,ln
"RTN","SAMIZ6",768,0)
 set dt=httplog("dt"),id=httplog("id")
"RTN","SAMIZ6",769,0)
 set ln=$g(^vprhttp("log",dt,$job,id,"rewrite","from"),0)+1
"RTN","SAMIZ6",770,0)
 set ^vprhttp("log",dt,$job,id,"rewrite","from",0)=ln
"RTN","SAMIZ6",771,0)
 set ^vprhttp("log",dt,$job,id,"rewrite",ln,"from")=$get(from)
"RTN","SAMIZ6",772,0)
 set ^vprhttp("log",dt,$job,id,"rewrite",ln,"to")=$get(to)
"RTN","SAMIZ6",773,0)
 ;
"RTN","SAMIZ6",774,0)
 quit  ; end of logrewr
"RTN","SAMIZ6",775,0)
 ;
"RTN","SAMIZ6",776,0)
 ;
"RTN","SAMIZ6",777,0)
 ;
"RTN","SAMIZ6",778,0)
rewrite(rtn) ; show all the rewrites in the log
"RTN","SAMIZ6",779,0)
 ;
"RTN","SAMIZ6",780,0)
 new zr,zrary
"RTN","SAMIZ6",781,0)
 new gtop,gbot
"RTN","SAMIZ6",782,0)
 do htmltb^%yottaweb(.gtop,.gbot,"search results for #"_arg)
"RTN","SAMIZ6",783,0)
 merge @rtn=gtop
"RTN","SAMIZ6",784,0)
 do addto^%yottautl(rtn,"<h1>items not found</h1>") 
"RTN","SAMIZ6",785,0)
 set zr=$name(^vprhttp("log"))
"RTN","SAMIZ6",786,0)
 for  set zr=$query(@zr) quit:zr=""  do  ;
"RTN","SAMIZ6",787,0)
 . if zr'["rewrite" quit  ;
"RTN","SAMIZ6",788,0)
 . if zr'["from" quit  ;
"RTN","SAMIZ6",789,0)
 . ; write !,zr
"RTN","SAMIZ6",790,0)
 . if $length(@zr)=1 quit  ; the count
"RTN","SAMIZ6",791,0)
 . new title set title="not found - "_@zr
"RTN","SAMIZ6",792,0)
 . do match(@zr,"zrary")
"RTN","SAMIZ6",793,0)
 . do addto^%yottautl(rtn,"<p>"_@zr_"</p>")
"RTN","SAMIZ6",794,0)
 . ; do multout(.rtn,"zrary",title)
"RTN","SAMIZ6",795,0)
 . quit
"RTN","SAMIZ6",796,0)
 kill @rtn@(0)
"RTN","SAMIZ6",797,0)
 set HTTPRSP("mime")="text/html"
"RTN","SAMIZ6",798,0)
 set @rtn@($order(@rtn@(""),-1)+1)=gbot
"RTN","SAMIZ6",799,0)
 ;
"RTN","SAMIZ6",800,0)
 quit  ; end of rewrite
"RTN","SAMIZ6",801,0)
 ;
"RTN","SAMIZ6",802,0)
 ;
"RTN","SAMIZ6",803,0)
 ;
"RTN","SAMIZ6",804,0)
eor ; end of routine %yottagr
"RTN","SAMIZ7")
0^99^B7868524
"RTN","SAMIZ7",1,0)
%thage ;ven/lgc-patient age calculation ;2019-06-26
"RTN","SAMIZ7",2,0)
 ;;1.8;Mash;;;Build 1
"RTN","SAMIZ7",3,0)
 ;
"RTN","SAMIZ7",4,0)
 ; %thage implements MASH Patient age related ppis.
"RTN","SAMIZ7",5,0)
 ; See %thud for an introduction to the Time functions
"RTN","SAMIZ7",6,0)
 ; See %thul for the module's primary-development log.
"RTN","SAMIZ7",7,0)
 ; See %thumc for meter (do case^%tsumc).
"RTN","SAMIZ7",8,0)
 ; See %thutc for unit tests (do ^%tsut).
"RTN","SAMIZ7",9,0)
 ; See %th for the module's ppis & apis.
"RTN","SAMIZ7",10,0)
 ; %thage contains no public entry points.
"RTN","SAMIZ7",11,0)
 ;
"RTN","SAMIZ7",12,0)
 quit  ; no entry from top
"RTN","SAMIZ7",13,0)
 ;
"RTN","SAMIZ7",14,0)
 ;
"RTN","SAMIZ7",15,0)
 ;
"RTN","SAMIZ7",16,0)
 ;@section 0 primary development
"RTN","SAMIZ7",17,0)
 ;
"RTN","SAMIZ7",18,0)
 ;
"RTN","SAMIZ7",19,0)
 ;
"RTN","SAMIZ7",20,0)
 ;@routine-credits
"RTN","SAMIZ7",21,0)
 ;@primary-dev: Frederick D. S. Marshall (toad)
"RTN","SAMIZ7",22,0)
 ; toad@vistaexpertise.net
"RTN","SAMIZ7",23,0)
 ;@primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIZ7",24,0)
 ; http://vistaexpertise.net
"RTN","SAMIZ7",25,0)
 ;@copyright: 2012/2018, toad, all rights reserved
"RTN","SAMIZ7",26,0)
 ;@license: Apache 2.0
"RTN","SAMIZ7",27,0)
 ; https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIZ7",28,0)
 ;
"RTN","SAMIZ7",29,0)
 ;@last-updated: 2018-12-14T18:20Z
"RTN","SAMIZ7",30,0)
 ;@application: Mumps Advanced Shell (Mash)
"RTN","SAMIZ7",31,0)
 ;@module: Type String - %ts
"RTN","SAMIZ7",32,0)
 ;@version: 1.8T04
"RTN","SAMIZ7",33,0)
 ;@release-date: not yet released
"RTN","SAMIZ7",34,0)
 ;@patch-list: none yet
"RTN","SAMIZ7",35,0)
 ;
"RTN","SAMIZ7",36,0)
 ;@original-dev: R. Wally Fort (rwf)
"RTN","SAMIZ7",37,0)
 ;@original-dev-org: U.S. Department of Veterans Affairs
"RTN","SAMIZ7",38,0)
 ; prev. Veterans Administration
"RTN","SAMIZ7",39,0)
 ; National Development Office in San Francisco (vaisf)
"RTN","SAMIZ7",40,0)
 ;
"RTN","SAMIZ7",41,0)
 ;@timing-date: 2018-12-14
"RTN","SAMIZ7",42,0)
 ;@timing-system: andronicus (dev,jvvztm-9.0-ven)
"RTN","SAMIZ7",43,0)
 ;@cpu: Intel(R) Xeon(R) CPU E5-2676 v3 @ 2.40GHz
"RTN","SAMIZ7",44,0)
 ;@ram: 2Gb
"RTN","SAMIZ7",45,0)
 ;@os: Linux Ubuntu 16.04.5 LTS (xenial)
"RTN","SAMIZ7",46,0)
 ;@mumps: YottaDB r1.22 Linux x86_64 (GT.M V6.3-004 Linux x86_64)
"RTN","SAMIZ7",47,0)
 ;
"RTN","SAMIZ7",48,0)
 ; timing performed with all other Vista jobs shut down.
"RTN","SAMIZ7",49,0)
 ; 10,000 iterations were done & duration of call averaged.
"RTN","SAMIZ7",50,0)
 ; values are in microseconds.
"RTN","SAMIZ7",51,0)
 ;
"RTN","SAMIZ7",52,0)
 ;@to-do
"RTN","SAMIZ7",53,0)
 ; do multi-string versions [see JJOHCASE for examples]
"RTN","SAMIZ7",54,0)
 ; apply standard string-length protection consistently
"RTN","SAMIZ7",55,0)
 ; create unit tests for all of these subroutines
"RTN","SAMIZ7",56,0)
 ;
"RTN","SAMIZ7",57,0)
 ;@contents
"RTN","SAMIZ7",58,0)
 ; uthage = code for ppi $$age^thage
"RTN","SAMIZ7",59,0)
 ;  Return patient's age, or patient's age at death
"RTN","SAMIZ7",60,0)
 ;    or -1 if FM dates are improperly formated
"RTN","SAMIZ7",61,0)
 ;
"RTN","SAMIZ7",62,0)
 ;
"RTN","SAMIZ7",63,0)
 ;
"RTN","SAMIZ7",64,0)
 ;@section 1 code
"RTN","SAMIZ7",65,0)
 ;
"RTN","SAMIZ7",66,0)
 ;
"RTN","SAMIZ7",67,0)
 ;
"RTN","SAMIZ7",68,0)
 ;@ppi-code $$age^%th
"RTN","SAMIZ7",69,0)
age ; return patient's age or age at death
"RTN","SAMIZ7",70,0)
 ;
"RTN","SAMIZ7",71,0)
 ;ven/lgc;private;variable;clean;silent;mdc;100% tests
"RTN","SAMIZ7",72,0)
 ;@signature
"RTN","SAMIZ7",73,0)
 ; $$age^%th
"RTN","SAMIZ7",74,0)
 ;@synonyms
"RTN","SAMIZ7",75,0)
 ;
"RTN","SAMIZ7",76,0)
 ;@branches-from
"RTN","SAMIZ7",77,0)
 ; $$age^%th
"RTN","SAMIZ7",78,0)
 ;@ppi-called-by
"RTN","SAMIZ7",79,0)
 ; age^%th
"RTN","SAMIZ7",80,0)
 ;@called-by: none
"RTN","SAMIZ7",81,0)
 ;@calls: none
"RTN","SAMIZ7",82,0)
 ;@inputs:
"RTN","SAMIZ7",83,0)
 ;  dob = date of birth in FM date format
"RTN","SAMIZ7",84,0)
 ;  dod = null or date of death in FM date format
"RTN","SAMIZ7",85,0)
 ;@output = Patient's age or age at death
"RTN","SAMIZ7",86,0)
 ;          or -1 if improper FM date format
"RTN","SAMIZ7",87,0)
 ;@meter:
"RTN","SAMIZ7",88,0)
 ;@timing
"RTN","SAMIZ7",89,0)
 ;@tests
"RTN","SAMIZ7",90,0)
 ;
"RTN","SAMIZ7",91,0)
 ; force dates to numeric
"RTN","SAMIZ7",92,0)
 set dob=+$get(dob)
"RTN","SAMIZ7",93,0)
 set dod=+$get(dod)
"RTN","SAMIZ7",94,0)
 new X,Y
"RTN","SAMIZ7",95,0)
 ;
"RTN","SAMIZ7",96,0)
 ;
"RTN","SAMIZ7",97,0)
 ; Check validity of FM dates
"RTN","SAMIZ7",98,0)
 quit:(dob<1000000)!(dob>9991231) -1
"RTN","SAMIZ7",99,0)
 if dod,(dod<1000000)!(dod>9991231) quit -1
"RTN","SAMIZ7",100,0)
 ;
"RTN","SAMIZ7",101,0)
 new X,Y
"RTN","SAMIZ7",102,0)
 Set X=$select(dod:dod,1:DT) ; Get dod or today's date
"RTN","SAMIZ7",103,0)
 ;
"RTN","SAMIZ7",104,0)
 set X=X,Y(2,.033,1)=X set X=1,Y(2,.033,2)=X set X=3,X=$E(Y(2,.033,1),Y(2,.033,2),X),Y(2,.033,3)=X,Y(2,.033,4)=X
"RTN","SAMIZ7",105,0)
 ;
"RTN","SAMIZ7",106,0)
 set X=dob
"RTN","SAMIZ7",107,0)
 ;
"RTN","SAMIZ7",108,0)
 set X=X set X=X,Y(2,.033,6)=X set X=1,Y(2,.033,7)=X set X=3,X=$E(Y(2,.033,6),Y(2,.033,7),X) set Y=X,X=Y(2,.033,3),X=X-Y
"RTN","SAMIZ7",109,0)
 ;
"RTN","SAMIZ7",110,0)
 set Y(2,.033,8)=X,Y(2,.033,9)=X,Y(2,.033,10)=X
"RTN","SAMIZ7",111,0)
 ;
"RTN","SAMIZ7",112,0)
 set X=$select(dod:dod,1:DT) ; Get dod or today's date
"RTN","SAMIZ7",113,0)
 ;
"RTN","SAMIZ7",114,0)
 set X=X,Y(2,.033,11)=X set X=4,Y(2,.033,12)=X set X=7,X=$E(Y(2,.033,11),Y(2,.033,12),X)
"RTN","SAMIZ7",115,0)
 ;
"RTN","SAMIZ7",116,0)
 set Y(2,.033,13)=X,Y(2,.033,14)=X
"RTN","SAMIZ7",117,0)
 ;
"RTN","SAMIZ7",118,0)
 set X=dob
"RTN","SAMIZ7",119,0)
 ;
"RTN","SAMIZ7",120,0)
 set X=X set X=X,Y(2,.033,15)=X set X=4,Y(2,.033,16)=X set X=7
"RTN","SAMIZ7",121,0)
 ;
"RTN","SAMIZ7",122,0)
 set X=$E(Y(2,.033,15),Y(2,.033,16),X) set Y=X,X=Y(2,.033,13),X=X<Y,Y=X,X=Y(2,.033,8),X=X-Y
"RTN","SAMIZ7",123,0)
 ;
"RTN","SAMIZ7",124,0)
 quit X
"RTN","SAMIZ7",125,0)
 ;
"RTN","SAMIZ7",126,0)
 ;
"RTN","SAMIZ7",127,0)
 ;
"RTN","SAMIZ7",128,0)
 ;
"RTN","SAMIZ7",129,0)
eor ; end of routine %thage
"RTN","SAMIZ8")
0^100^B250219
"RTN","SAMIZ8",1,0)
%th ;ven/toad-time library: api/ppi library ;2018-12-12T14:32Z
"RTN","SAMIZ8",2,0)
 ;;1.8;Mash;;;Build 1
"RTN","SAMIZ8",3,0)
 ;
"RTN","SAMIZ8",4,0)
 ; %th is the Mumps Time Library, an element of the Mumps
"RTN","SAMIZ8",5,0)
 ; Advanced Shell's Data Type Library. It collects all Mumps
"RTN","SAMIZ8",6,0)
 ; Time interfaces, both public application program
"RTN","SAMIZ8",7,0)
 ; interfaces (apis) and private program interfaces (ppis).
"RTN","SAMIZ8",8,0)
 ; Its interfaces are implemented in other %th* routines, none
"RTN","SAMIZ8",9,0)
 ; of which contains any public entry points.
"RTN","SAMIZ8",10,0)
 ; See %thul for the module's primary-development log.
"RTN","SAMIZ8",11,0)
 ; See %thud for documentation introducing the library.
"RTN","SAMIZ8",12,0)
 ; %ts version 1.8 contains no public apis, only private ppis.
"RTN","SAMIZ8",13,0)
 ; Applications may only call these ppis after negotiating a
"RTN","SAMIZ8",14,0)
 ; private subscription.
"RTN","SAMIZ8",15,0)
 ;
"RTN","SAMIZ8",16,0)
 quit  ; no entry from top
"RTN","SAMIZ8",17,0)
 ;
"RTN","SAMIZ8",18,0)
 ;
"RTN","SAMIZ8",19,0)
 ;
"RTN","SAMIZ8",20,0)
 ;@section 0 primary development
"RTN","SAMIZ8",21,0)
 ;
"RTN","SAMIZ8",22,0)
 ;
"RTN","SAMIZ8",23,0)
 ;
"RTN","SAMIZ8",24,0)
 ;@routine-credits
"RTN","SAMIZ8",25,0)
 ;@primary-dev: Frederick D. S. Marshall (toad)
"RTN","SAMIZ8",26,0)
 ; toad@vistaexpertise.net
"RTN","SAMIZ8",27,0)
 ;@primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIZ8",28,0)
 ; http://vistaexpertise.net
"RTN","SAMIZ8",29,0)
 ;@copyright: 2012/2018, toad, all rights reserved
"RTN","SAMIZ8",30,0)
 ;@license: Apache 2.0
"RTN","SAMIZ8",31,0)
 ; https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIZ8",32,0)
 ;
"RTN","SAMIZ8",33,0)
 ;@last-updated: 2018-12-12T14:32Z
"RTN","SAMIZ8",34,0)
 ;@application: Mumps Advanced Shell (Mash)
"RTN","SAMIZ8",35,0)
 ;@module: Type String - %ts
"RTN","SAMIZ8",36,0)
 ;@version: 1.8T04
"RTN","SAMIZ8",37,0)
 ;@release-date: not yet released
"RTN","SAMIZ8",38,0)
 ;@patch-list: none yet
"RTN","SAMIZ8",39,0)
 ;
"RTN","SAMIZ8",40,0)
 ;@contents
"RTN","SAMIZ8",41,0)
 ; (all application programmer interfaces)
"RTN","SAMIZ8",42,0)
 ;
"RTN","SAMIZ8",43,0)
 ;
"RTN","SAMIZ8",44,0)
 ;
"RTN","SAMIZ8",45,0)
 ;@section 1 %thage: Age related issues
"RTN","SAMIZ8",46,0)
 ;
"RTN","SAMIZ8",47,0)
 ;
"RTN","SAMIZ8",48,0)
 ;
"RTN","SAMIZ8",49,0)
 ;@ppi $$age^%th, return patient's age
"RTN","SAMIZ8",50,0)
age(dob,dod) goto age^%thage
"RTN","SAMIZ8",51,0)
 ;
"RTN","SAMIZ8",52,0)
 ;
"RTN","SAMIZ8",53,0)
eor ; end of routine %th
"RTN","SAMIZ9")
0^101^B25699566
"RTN","SAMIZ9",1,0)
%ts ;ven/toad-type string: api/ppi library ;2019-11-22T16:35Z
"RTN","SAMIZ9",2,0)
 ;;2;Mash;;;Build 1
"RTN","SAMIZ9",3,0)
 ;
"RTN","SAMIZ9",4,0)
 ; %ts is the interface routine for the Mumps String Library, an
"RTN","SAMIZ9",5,0)
 ; element of the Mumps Advanced Shell's Data Type Library. It
"RTN","SAMIZ9",6,0)
 ; collects all Mumps String Library interfaces, including application
"RTN","SAMIZ9",7,0)
 ; program interfaces (apis) & private program interfaces (ppis). Its
"RTN","SAMIZ9",8,0)
 ; interfaces are implemented in other %ts* routines, none of which
"RTN","SAMIZ9",9,0)
 ; contains any public entry points.
"RTN","SAMIZ9",10,0)
 ; See %tsul for the module's primary-development log.
"RTN","SAMIZ9",11,0)
 ; See %tsud for documentation introducing the library.
"RTN","SAMIZ9",12,0)
 ; %ts version 2 contains no public apis, only private ppis.
"RTN","SAMIZ9",13,0)
 ; Applications may only call these ppis after negotiating a private
"RTN","SAMIZ9",14,0)
 ; subscription.
"RTN","SAMIZ9",15,0)
 ;
"RTN","SAMIZ9",16,0)
 quit  ; no entry from top
"RTN","SAMIZ9",17,0)
 ;
"RTN","SAMIZ9",18,0)
 ;
"RTN","SAMIZ9",19,0)
 ;
"RTN","SAMIZ9",20,0)
 ;@section 0 primary development
"RTN","SAMIZ9",21,0)
 ;
"RTN","SAMIZ9",22,0)
 ;
"RTN","SAMIZ9",23,0)
 ;
"RTN","SAMIZ9",24,0)
 ;@routine-credits
"RTN","SAMIZ9",25,0)
 ;@primary-dev Frederick D. S. Marshall (toad)
"RTN","SAMIZ9",26,0)
 ; toad@vistaexpertise.net
"RTN","SAMIZ9",27,0)
 ;@primary-dev-org Vista Expertise Network (ven)
"RTN","SAMIZ9",28,0)
 ; http://vistaexpertise.net
"RTN","SAMIZ9",29,0)
 ;@copyright 2012/2019, toad, all rights reserved
"RTN","SAMIZ9",30,0)
 ;@license Apache 2.0
"RTN","SAMIZ9",31,0)
 ; https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIZ9",32,0)
 ;
"RTN","SAMIZ9",33,0)
 ;@last-updated 2019-11-22T16:35Z
"RTN","SAMIZ9",34,0)
 ;@application Mumps Advanced Shell (Mash)
"RTN","SAMIZ9",35,0)
 ;@module Type String - %ts
"RTN","SAMIZ9",36,0)
 ;@version 2
"RTN","SAMIZ9",37,0)
 ;@release-date not yet released
"RTN","SAMIZ9",38,0)
 ;@patch-list none yet
"RTN","SAMIZ9",39,0)
 ;
"RTN","SAMIZ9",40,0)
 ;@contents
"RTN","SAMIZ9",41,0)
 ; (all application programmer interfaces)
"RTN","SAMIZ9",42,0)
 ;
"RTN","SAMIZ9",43,0)
 ;
"RTN","SAMIZ9",44,0)
 ;
"RTN","SAMIZ9",45,0)
 ;@section 1 %tsc string-case tools
"RTN","SAMIZ9",46,0)
 ;
"RTN","SAMIZ9",47,0)
 ;
"RTN","SAMIZ9",48,0)
 ;
"RTN","SAMIZ9",49,0)
 ;@ppi $$upalpha^%ts, abcdefghijklmnopqrstuvwxyz
"RTN","SAMIZ9",50,0)
upalpha() goto upalpha^%tsc
"RTN","SAMIZ9",51,0)
 ;
"RTN","SAMIZ9",52,0)
 ;@ppi $$uac^%ts, idem
"RTN","SAMIZ9",53,0)
uac() goto upalpha^%tsc
"RTN","SAMIZ9",54,0)
 ;
"RTN","SAMIZ9",55,0)
 ;@ppi $$upperAlpha^%ts, idem
"RTN","SAMIZ9",56,0)
upperAlpha() goto upalpha^%tsc
"RTN","SAMIZ9",57,0)
 ;
"RTN","SAMIZ9",58,0)
 ;
"RTN","SAMIZ9",59,0)
 ;
"RTN","SAMIZ9",60,0)
 ;@ppi $$lowalpha^%ts, ABCDEFGHIJKLMNOPQRSTUVWXYZ
"RTN","SAMIZ9",61,0)
lowalpha() goto lowalpha^%tsc
"RTN","SAMIZ9",62,0)
 ;
"RTN","SAMIZ9",63,0)
 ;@ppi $$lac^%ts, idem
"RTN","SAMIZ9",64,0)
lac() goto lowalpha^%tsc
"RTN","SAMIZ9",65,0)
 ;
"RTN","SAMIZ9",66,0)
 ;@ppi $$lowerAlpha^%ts, idem
"RTN","SAMIZ9",67,0)
lowerAlpha() goto lowalpha^%tsc
"RTN","SAMIZ9",68,0)
 ;
"RTN","SAMIZ9",69,0)
 ;
"RTN","SAMIZ9",70,0)
 ;
"RTN","SAMIZ9",71,0)
 ;@ppi $$upcase^%ts, upper case (ALL CAPITAL LETTERS)
"RTN","SAMIZ9",72,0)
upcase(string) goto upcase^%tsc
"RTN","SAMIZ9",73,0)
 ;
"RTN","SAMIZ9",74,0)
 ;@ppi $$uc^%ts, idem
"RTN","SAMIZ9",75,0)
uc(string) goto upcase^%tsc
"RTN","SAMIZ9",76,0)
 ;
"RTN","SAMIZ9",77,0)
 ;@ppi $$upperCase^%ts, idem
"RTN","SAMIZ9",78,0)
upperCase(string) goto upcase^%tsc
"RTN","SAMIZ9",79,0)
 ;
"RTN","SAMIZ9",80,0)
 ;
"RTN","SAMIZ9",81,0)
 ;
"RTN","SAMIZ9",82,0)
 ;@ppi $$lowcase^%ts, lower case (no capital letters)
"RTN","SAMIZ9",83,0)
lowcase(string) goto lowcase^%tsc
"RTN","SAMIZ9",84,0)
 ;
"RTN","SAMIZ9",85,0)
 ;@ppi $$lc^%ts, idem
"RTN","SAMIZ9",86,0)
lc(string) goto lowcase^%tsc
"RTN","SAMIZ9",87,0)
 ;
"RTN","SAMIZ9",88,0)
 ;@ppi $$lowerCase^%ts, idem
"RTN","SAMIZ9",89,0)
lowerCase(string) goto lowcase^%tsc
"RTN","SAMIZ9",90,0)
 ;
"RTN","SAMIZ9",91,0)
 ;
"RTN","SAMIZ9",92,0)
 ;
"RTN","SAMIZ9",93,0)
 ;@ppi $$capcase^%ts, capital case (First Char Of Each Word Capital)
"RTN","SAMIZ9",94,0)
capcase(string) goto capcase^%tsc
"RTN","SAMIZ9",95,0)
 ;
"RTN","SAMIZ9",96,0)
 ;@ppi $$cc^%ts, idem
"RTN","SAMIZ9",97,0)
cc(string) goto capcase^%tsc
"RTN","SAMIZ9",98,0)
 ;
"RTN","SAMIZ9",99,0)
 ;@ppi $$capitalCase^%ts, idem
"RTN","SAMIZ9",100,0)
capitalCase(string) goto capcase^%tsc
"RTN","SAMIZ9",101,0)
 ;
"RTN","SAMIZ9",102,0)
 ;
"RTN","SAMIZ9",103,0)
 ;
"RTN","SAMIZ9",104,0)
 ;@ppi $$invcase^%ts, inverse case (uPPERS TO lOWERS & vice versa)
"RTN","SAMIZ9",105,0)
invcase(string) goto invcase^%tsc
"RTN","SAMIZ9",106,0)
 ;
"RTN","SAMIZ9",107,0)
 ;@ppi $$ic^%ts, idem
"RTN","SAMIZ9",108,0)
ic(string) goto invcase^%tsc
"RTN","SAMIZ9",109,0)
 ;
"RTN","SAMIZ9",110,0)
 ;@ppi $$inverseCase^%ts, idem
"RTN","SAMIZ9",111,0)
inverseCase(string) goto invcase^%tsc
"RTN","SAMIZ9",112,0)
 ;
"RTN","SAMIZ9",113,0)
 ;
"RTN","SAMIZ9",114,0)
 ;
"RTN","SAMIZ9",115,0)
 ;@ppi $$sencase^%ts, sentence case (Character one capital)
"RTN","SAMIZ9",116,0)
sencase(string) goto sencase^%tsc
"RTN","SAMIZ9",117,0)
 ;
"RTN","SAMIZ9",118,0)
 ;@ppi $$sc^%ts, idem
"RTN","SAMIZ9",119,0)
sc(string) goto sencase^%tsc
"RTN","SAMIZ9",120,0)
 ;
"RTN","SAMIZ9",121,0)
 ;@ppi $$sentenceCase^%ts, idem
"RTN","SAMIZ9",122,0)
sentenceCase(string) goto sencase^%tsc
"RTN","SAMIZ9",123,0)
 ;
"RTN","SAMIZ9",124,0)
 ;
"RTN","SAMIZ9",125,0)
 ;
"RTN","SAMIZ9",126,0)
 ;@section 2 %tse string-extract tools
"RTN","SAMIZ9",127,0)
 ;
"RTN","SAMIZ9",128,0)
 ;
"RTN","SAMIZ9",129,0)
 ;
"RTN","SAMIZ9",130,0)
 ;@ppi findex^%ts, find extract (find position of substring)
"RTN","SAMIZ9",131,0)
findex(string,find,flags) goto findex^%tsef
"RTN","SAMIZ9",132,0)
 ;
"RTN","SAMIZ9",133,0)
 ;@ppi fe^%ts, idem
"RTN","SAMIZ9",134,0)
fe(string,find,flags) goto findex^%tsef
"RTN","SAMIZ9",135,0)
 ;
"RTN","SAMIZ9",136,0)
 ;@ppi findExtract^%ts, idem
"RTN","SAMIZ9",137,0)
findExtract(string,find,flags) goto findex^%tsef
"RTN","SAMIZ9",138,0)
 ;
"RTN","SAMIZ9",139,0)
 ;@ppi find^%ts, idem
"RTN","SAMIZ9",140,0)
find(string,find,flags) goto findex^%tsef
"RTN","SAMIZ9",141,0)
 ;
"RTN","SAMIZ9",142,0)
 ;
"RTN","SAMIZ9",143,0)
 ;
"RTN","SAMIZ9",144,0)
 ;@ppi setex^%ts, set extract (change value of positional substring)
"RTN","SAMIZ9",145,0)
setex(string,newval,flags) goto setex^%tses
"RTN","SAMIZ9",146,0)
 ;
"RTN","SAMIZ9",147,0)
 ;@ppi se^%ts, idem
"RTN","SAMIZ9",148,0)
se(string,newval,flags) goto setex^%tses
"RTN","SAMIZ9",149,0)
 ;
"RTN","SAMIZ9",150,0)
 ;@ppi setExtract^%ts, idem
"RTN","SAMIZ9",151,0)
setExtract(string,newval,flags) goto setex^%tses
"RTN","SAMIZ9",152,0)
 ;
"RTN","SAMIZ9",153,0)
 ;@ppi place^%ts, idem
"RTN","SAMIZ9",154,0)
place(string,newval,flags) goto setex^%tses
"RTN","SAMIZ9",155,0)
 ;
"RTN","SAMIZ9",156,0)
 ;
"RTN","SAMIZ9",157,0)
 ;
"RTN","SAMIZ9",158,0)
 ;@section 3 %tsf string-find tools
"RTN","SAMIZ9",159,0)
 ;
"RTN","SAMIZ9",160,0)
 ;
"RTN","SAMIZ9",161,0)
 ;
"RTN","SAMIZ9",162,0)
 ;@ppi setfind^%ts, set find (find & replace substring)
"RTN","SAMIZ9",163,0)
setfind(string,find,replace,flags) goto setfind^%tsfs
"RTN","SAMIZ9",164,0)
 ;
"RTN","SAMIZ9",165,0)
 ;@ppi sf^%ts, idem
"RTN","SAMIZ9",166,0)
sf(string,find,replace,flags) goto setfind^%tsfs
"RTN","SAMIZ9",167,0)
 ;
"RTN","SAMIZ9",168,0)
 ;@ppi setFind^%ts, idem
"RTN","SAMIZ9",169,0)
setFind(string,find,replace,flags) goto setfind^%tsfs
"RTN","SAMIZ9",170,0)
 ;
"RTN","SAMIZ9",171,0)
 ;
"RTN","SAMIZ9",172,0)
 ;
"RTN","SAMIZ9",173,0)
 ;@ppi findReplace^%ts, simple substring find & replace
"RTN","SAMIZ9",174,0)
findReplace(string,find,replace,flags) goto findReplace^%tsfwr
"RTN","SAMIZ9",175,0)
 ;
"RTN","SAMIZ9",176,0)
 ;
"RTN","SAMIZ9",177,0)
 ;
"RTN","SAMIZ9",178,0)
 ;@ppi findReplaceAll^%ts, simple substring find & replace all
"RTN","SAMIZ9",179,0)
findReplaceAll(string,find,replace,flags) goto findReplaceAll^%tsfwra
"RTN","SAMIZ9",180,0)
 ;
"RTN","SAMIZ9",181,0)
 ;
"RTN","SAMIZ9",182,0)
 ;
"RTN","SAMIZ9",183,0)
 ;@ppi $$strip^%ts, strip character(s) from string
"RTN","SAMIZ9",184,0)
strip(string,char) goto strip^%tsvs
"RTN","SAMIZ9",185,0)
 ;
"RTN","SAMIZ9",186,0)
 ;
"RTN","SAMIZ9",187,0)
 ;
"RTN","SAMIZ9",188,0)
 ;@section 4 %tsj string-justify tools
"RTN","SAMIZ9",189,0)
 ;
"RTN","SAMIZ9",190,0)
 ;
"RTN","SAMIZ9",191,0)
 ;
"RTN","SAMIZ9",192,0)
 ;@ppi $$trim^%ts, trim character from end(s) of string
"RTN","SAMIZ9",193,0)
trim(string,end,char) goto trim^%tsjt
"RTN","SAMIZ9",194,0)
 ;
"RTN","SAMIZ9",195,0)
 ;
"RTN","SAMIZ9",196,0)
 ;
"RTN","SAMIZ9",197,0)
 ;@section 5 %tsl string-literal tools
"RTN","SAMIZ9",198,0)
 ;
"RTN","SAMIZ9",199,0)
 ;
"RTN","SAMIZ9",200,0)
 ;
"RTN","SAMIZ9",201,0)
 ;@ppi $$htm2str^%ts, convert html literal to mumps string
"RTN","SAMIZ9",202,0)
htm2str(html) goto htm2str^%tslhs
"RTN","SAMIZ9",203,0)
 ;
"RTN","SAMIZ9",204,0)
 ;@ppi $$h2sl^%ts, idem
"RTN","SAMIZ9",205,0)
h2sl(html) goto htm2str^%tslhs
"RTN","SAMIZ9",206,0)
 ;
"RTN","SAMIZ9",207,0)
 ;@ppi $$h2slit^%ts, idem
"RTN","SAMIZ9",208,0)
h2slit(html) goto htm2str^%tslhs
"RTN","SAMIZ9",209,0)
 ;
"RTN","SAMIZ9",210,0)
 ;
"RTN","SAMIZ9",211,0)
 ;
"RTN","SAMIZ9",212,0)
 ;@ppi $$str2lit^%ts, convert mumps string to mumps string literal
"RTN","SAMIZ9",213,0)
str2lit(string) goto str2lit^%tslsl
"RTN","SAMIZ9",214,0)
 ;
"RTN","SAMIZ9",215,0)
 ;@ppi $$s2ll^%ts, idem
"RTN","SAMIZ9",216,0)
s2ll(string) goto str2lit^%tslsl
"RTN","SAMIZ9",217,0)
 ;
"RTN","SAMIZ9",218,0)
 ;@ppi $$s2llit^%ts, idem
"RTN","SAMIZ9",219,0)
s2llit(string) goto str2lit^%tslsl
"RTN","SAMIZ9",220,0)
 ;
"RTN","SAMIZ9",221,0)
 ;
"RTN","SAMIZ9",222,0)
 ;
"RTN","SAMIZ9",223,0)
 ;@ppi $$lit2str^%ts, convert mumps string literal to mumps string
"RTN","SAMIZ9",224,0)
lit2str(literal) goto lit2str^%tslsl
"RTN","SAMIZ9",225,0)
 ;
"RTN","SAMIZ9",226,0)
 ;@ppi $$s2ll^%ts, idem
"RTN","SAMIZ9",227,0)
l2sl(literal) goto lit2str^%tslsl
"RTN","SAMIZ9",228,0)
 ;
"RTN","SAMIZ9",229,0)
 ;@ppi $$s2llit^%ts, idem
"RTN","SAMIZ9",230,0)
l2slit(literal) goto lit2str^%tslsl
"RTN","SAMIZ9",231,0)
 ;
"RTN","SAMIZ9",232,0)
 ;
"RTN","SAMIZ9",233,0)
 ;
"RTN","SAMIZ9",234,0)
eor ; end of routine %ts
"VER")
8.0^22.2
**END**
**END**
