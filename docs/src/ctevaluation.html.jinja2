{% extends 'layout.jinja2' %}
{% import 'forms.jinja2' as f %}
{% block title %}{{ title | escape }}{% endblock %}

{% block head %}
    <style>
        #wizard-bar.affix-top {
            position: static;
        }

        #wizard-bar.affix {
            position: sticky;
            top: 0;
            z-index: 1000;
        }
    </style>
{% endblock %}


{% block body %}
    <div class="container-fluid" style="max-width:1550px">
        <h1>
            Sample, Sammy G
            <small class="text-muted" title="Study ID">ST0001</small>
        </h1>
        <h2>{{ title }}
            <small class="text-muted" title="Medical Record Number">1234567890</small>
        </h2>

        <hr/>
        {% include '_messages.jinja2' %}
        {# Build a navigation bar that will affix itself to the top of the screen and highligh active sections#}
        {% set tab_list = [("Scan","scan"), ("Nodules", "nodules"), ("Emphysema/Coronary Calcifications","emphysema-coronary"),
                            ("Other Abnormalities","abnormalities"), ("Impression & Follow-Up","impression")] -%}
        <nav class="navbar navbar-default hidden-xs" id="wizard-bar" data-spy="affix" data-offset-top="220"
             data-offset-bottom="70">
            <div class="row">
                <div class="col-sm-12">
                    <ul class="nav navbar-nav">
                        {% for tab_name,tab_id in tab_list -%}
                            <li><a href="#{{ tab_id }}">{{ tab_name }}</a></li>
                        {%- endfor %}
                    </ul>
                </div>
            </div>
        </nav>

        <form action="{{ formPage+".html" if mockup else "/vapals" }}" method="{{ formMethod }}" id="main-form"
              class="validated">
            <input type="hidden" name="samiroute" value="postform"/>
            <input type="hidden" name="studyid" value="@@SID@@"/>
            <input type="hidden" name="site" value="@@SITE@@"/>
            <input type="hidden" name="form" value="@@FORMKEY@@"/>

            {# BEGIN Scan tab#}
            <div id="scan" style="padding-top:8px">
                <h3>Scan information</h3> {# will get hidden with affixed menu#}
                <div class="row">
                    <div class="col-sm-4 col-md-3 col-lg-2 form-group">
                        <label for="cedos" class="control-label required">CT study date</label>
                        {{ f.datepicker("cedos", "past", true) }}
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6 col-md-4 col-lg-3  form-group">
                        <label for="cerads">Signing radiologist</label>
                        <select class="form-control" id="cerads" name="cerads">
                            <option value="-">&mdash;</option>
                            {#TODO#}
                        </select>
                    </div>
                    <div class="col-sm-6 col-md-4 col-lg-3 form-group">
                        {# TODO Get from signed on user, use text instead of input field #}
                        <label for="cerad" class="control-label required">Radiologist</label>
                        <input type="text" class="form-control" id="cerad" name="cerad" required="required"/>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12 form-group">
                        <label for="ceclin" class="control-label">Clinical information</label>
                        <textarea class="form-control" id="ceclin" name="ceclin" rows="3"></textarea>
                        {{ f.inlineCheckbox("ceclini", "y", "Include in impression") }}
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-sm-12">
                        {{ f.inlineCheckbox("ceofr", "y", "CT scan performed at outside institution") }}
                        <i class="fa-regular fa-circle-question" aria-hidden="true" data-toggle="popover" title="Help"
                           data-html="true"
                           data-content="This checkbox should be checked if the CT evaluation form is being completed based on films or a radiology report received from an outside institution."></i>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label class="required">Type of exam</label>
                            <br/>
                            <label class="radio-inline">
                                <input type="radio" name="cetex" id="cetex" value="b" required="required">
                                Baseline <i id="ai-imported" style="display: none;--fa-animation-duration: 0.5s;"
                                            class="fa-regular fa-microchip-ai fa-flip fa-xl"
                                            title="AI Imported"
                                            data-toggle="popover"
                                            data-container="body"
                                            data-content="A structured report has been used to pre-fill some information on this form"></i>
                            </label>
                            <label class="radio-inline">
                                <input type="radio" name="cetex" id="cetex" value="a" required="required">
                                Annual repeat
                            </label>
                            <label class="radio-inline">
                                <input type="radio" name="cetex" id="cetex" value="d" required="required">
                                Follow-up (not annual repeat)
                            </label>
                        </div>

                        <div class="alert alert-warning">
                            Only select Baseline if there is no prior CT or there is a prior CT scan more than 3 years
                            ago
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-12 form-group">
                        <label class="control-label required">CT protocol</label>
                        <br/>
                        <label class="radio-inline">
                            <input type="radio" name="cectp" id="cectp-l" value="l" required="required">
                            Low-Dose CT
                        </label>
                        <label class="radio-inline">
                            <input type="radio" name="cectp" id="cectp-d" value="d" required="required">
                            Standard CT
                        </label>
                        <label class="radio-inline">
                            <input type="radio" name="cectp" id="cectp-i" value="i" required="required"> Limited
                            CT
                        </label>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label for="cectrst" class="control-label required">Reconstructed slice thickness
                                (mm)</label>
                            <select name="cectrst" id="cectrst" class="form-control" required="required">
                                <option value=""> -</option>
                                <option value="0.5">0.5</option>
                                <option value="0.625">0.625</option>
                                <option value="0.75">0.75</option>
                                <option value="0.8">0.8</option>
                                <option value="1.0">1.0</option>
                                <option value="1.25">1.25</option>
                                <option value="o">Other</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-sm-4 form-group" id="cectrsto-container">
                        <label for="cectrsto" class="control-label required">Specify</label>
                        <input class="form-control numeric" type="text" name="cectrsto" id="cectrsto"
                               placeholder="specify" required="required" maxlength="5">
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label for="cectcdti" class="control-label">CTDI (vol)</label>
                            <input class="form-control decimalformat" type="text" name="cectcdti" id="cectcdti"
                                   maxlength="10">
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label for="cectdlp" class="control-label">DLP</label>
                            <input class="form-control decimalformat" type="text" name="cectdlp" id="cectdlp"
                                   maxlength="10">
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label for="cectssde" class="control-label">Size-specific dose estimates
                                (SSDE)</label>
                            <input class="form-control decimalformat" type="text" name="cectssde" id="cectssde"
                                   maxlength="10">
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-4 form-group">
                        <label for="sidoe" class="control-label required">Baseline CT</label>
                        {{ f.datepicker("sidoe", "past", true) }}
                        <small class="form-text text-muted pull-right">
                            <span id="cetsb-text">0</span> months since baseline
                        </small>
                    </div>

                    <div>
                        <div class="col-sm-4 form-group">
                            <label for="cedcs" class="control-label">Most recent comparative study</label>
                            {{ f.datepicker("cedcs", "past") }}
                        </div>
                        <div class="col-sm-4  form-group">
                            <label for="cedps" class="control-label">Prior scans</label>
                            <input type="text" class="form-control" id="cedps" name="cedps"/>
                        </div>
                    </div>
                </div>
            </div>
            {# END Scan tab#}

            {# BEGIN Nodules tab#}
            {% include '_nodule-grid.jinja2' %}
            {# END Nodules tab#}

            {# BEGIN Emphysema tab#}
            <div id="emphysema-coronary" style="padding-top: 1px;">
                <h3>Emphysema/Coronary Calcifications</h3> {# will get hidden with affixed menu#}
                {% include '_emphysema.jinja2' %}
            </div>
            {# END Emphysema tab #}

            {# BEGIN Abnormalities tab#}
            <div id="abnormalities" style="padding-top:8px;">
                <h3>Other Abnormalities</h3> {# will get hidden with affixed menu#}
                {% include '_abnormalities.jinja2' %}
            </div>
            {#  END Abnormalities tab#}

            {# BEGIN Impression & Follow-Up tab#}
            <div id="impression" style="padding-top:2px;">
                {% with base=base, site=site, formPage=formPage %}
                    {% include '_followup.jinja2' %}
                {% endwith %}

                {# will get hidden with affixed menu#}
                <h3>
                    Impression
                    <i class="fa-regular fa-circle-question fa-2xs"
                       aria-hidden="true" data-toggle="popover" data-html="true" title="Help"
                       data-content="The impression refers to the findings on the nodules and other abnormalities previously mentioned."></i>
                </h3>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="alert alert-info">Annual repeat and follow-up CT scans should utilize
                            the same low-dose protocol used for baseline low-dose CT scans.
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12 form-group">
                        <label class="required">Nodules</label>
                        <div class="radio">
                            <label>
                                <input type="radio" name="ceimn" id="ceimn-rs" value="rs" required="required">
                                No evidence of nodules. Follow-up as recommended.
                            </label>
                        </div>
                        <div class="radio">
                            <label>
                                <input type="radio" name="ceimn" id="ceimn-ro" value="ro"> Nodule(s) as
                                described. Consistent with old granulomatous disease. Follow-up as recommended.
                            </label>
                        </div>

                        <div class="radio">
                            <label>
                                <input type="radio" name="ceimn" id="ceimn-ru" value="ru"> Nodule(s)
                                unchanged, as described. Follow-up as recommended.
                            </label>
                        </div>

                        <div class="radio">
                            <label>
                                <input type="radio" name="ceimn" id="ceimn-nf" value="nf"> Nodule(s) as
                                described. Follow-up as recommended.
                            </label>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-12 form-group">
                        <strong>Other Findings</strong>
                        <div class="radio">
                            <label>
                                <input type="radio" name="ceimo" id="ceimo-no" value="no"> No other
                                significant abnormalities.
                            </label>
                        </div>
                        <div class="radio">
                            <label>
                                <input type="radio" name="ceimo" id="ceimn-oa" value="oa"> Other
                                abnormalities and suggested follow-up as described above.
                            </label>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12 form-group">
                        <label for="ceimre">Impression remarks</label>
                        <textarea name="ceimre" id="ceimre" class="form-control"></textarea>
                    </div>
                </div>

                {% if site=='sinai' %}
                    <strong>Special Handling</strong>
                    <div class="row">
                        <div class="col-sm-12">
                            {{ f.checkbox("ceimspr", "y", "Read requires special attention by CH/DY? (will insert message into report)") }}
                            {{ f.checkbox("ceimspr", "y", "Insufficient information for sign off? (will insert message into report)") }}
                        </div>
                    </div>

                    <hr/>
                    <div class="row">
                        <div class="col-sm-12">
                            {{ f.checkbox("cecoi", "y", "Case of Interest?") }}
                        </div>
                        <div class="col-sm-12 form-group">
                            <label for="cecoico">Comments</label>
                            <textarea name="cecoico" id="cecoico" class="form-control"></textarea>
                        </div>
                    </div>
                {% endif %}
            </div>
            {# END Impression tab#}


            <hr/>
            <div>
                <input type="hidden" id="samistatus" name="samistatus" value=""/>
                <button type="submit" class="btn btn-default" id="save-for-later-button" tabindex="1206">Save for
                    Later
                </button>
                <button type="submit" class="btn btn-primary" id="submit-button" tabindex="1207">Submit</button>
                <a id="delete-form" class="btn btn-danger pull-right" tabindex="1204"><span
                        class="glyphicon glyphicon-trash"></span>Delete</a>

            </div>

        </form>
    </div>
    {% include '_ai-import-modal.jinja2' %}
    {{ f.deleteFormModal("ctevaluation.html", mockup, formMethod) }}
{% endblock %}

{% block script %}
    <!--suppress Annotator -->
    <script>
        //calculate Time Since Baseline (TSB)
        function calculateTimeSinceBaseline() {
            const baselineDateString = $("#sidoe").val();
            const studyDateString = $("#cedos").val();
            if (baselineDateString && studyDateString) {
                const baselineDate = moment(baselineDateString, VAPALS.DATE_FORMAT);
                const studyDate = moment(studyDateString, VAPALS.DATE_FORMAT);
                if (baselineDate.isValid() && studyDate.isValid()) {
                    const months = parseInt(studyDate.diff(baselineDate, "months", true));
                    $("#cetsb-text").text(months);
                    $("#cetsb").val(months);
                } else {
                    $("#cetsb-text").text("error")
                }
            }
        }


        function createFormValidator() {

            const $form = $('#main-form');

            // for certain validators that use multiple inputs like checkboxes and radio groups, change the location
            // of the error icon to be based on the form-group element, instead of being immediately adjacent to the
            // first control in that group
            const multiInputValidators = ['followup', 'cetex', 'cectp', 'ceimn'];

            $form.formValidation({
                    fields: {
                        // SCAN
                        cedos: {
                            validators: {
                                notEmpty: {message: 'Study date is required'},
                                date: {max: VAPALS.todaysDate(), message: 'Study date may not be in the future'}
                            }
                        },
                        cerad: {validators: {notEmpty: {message: 'Radioligist is required'}}},
                        cetex: {validators: {notEmpty: {message: 'Type of exam is required'}}},
                        cectp: {validators: {notEmpty: {message: 'CT protocol is required'}}},
                        cectrst: {validators: {notEmpty: {message: 'Reconstructed slice thickness is required'}}},
                        cectrsto: {
                            validators: {
                                notEmpty: {message: 'Other reconstructed slice thickness is required'},
                                numeric: {message: 'Must be a number'},
                                greaterThan: {min: 0, message: 'Value must be greater than 0'}
                            }
                        },

                        cectcdti: {
                            validators: {
                                numeric: {message: 'Must be a number'},
                                greaterThan: {min: 0, message: 'Value must be greater than 0'}
                            }
                        },
                        cectdlp: {
                            validators: {
                                numeric: {message: 'Must be a number'},
                                greaterThan: {min: 0, message: 'Value must be greater than 0'}
                            }
                        },
                        cectssde: {
                            validators: {
                                numeric: {message: 'Must be a number'},
                                greaterThan: {min: 0, message: 'Value must be greater than 0'}
                            }
                        },
                        sidoe: {
                            validators: {
                                notEmpty: {message: 'Baseline CT date is required'},
                                date: {max: VAPALS.todaysDate(), message: 'Baseline CT date may not be in the future'}
                            }
                        },

                        //Nodules, emphysema, abnormality FV additions are done in their respective templates

                        //Impression
                        ceimn: {validators: {notEmpty: {message: 'Nodule impression is required'}}},

                        //Virtual fields don't work with fv.addField, so we have to add it here
                        followup: {
                            selector: '[name^=cefu][type=checkbox], [name^=cefu][type=radio]',
                            validators: {choice: {min: 1, message: 'Select at least one CT or Other follow-up option'}}
                        },

                    },
                    plugins: {
                        declarative: new FormValidation.plugins.Declarative(),
                        trigger: new FormValidation.plugins.Trigger(),
                        bootstrap3: new FormValidation.plugins.Bootstrap3(),
                        submitButton: new FormValidation.plugins.SubmitButton(),
                        // Instead of using the defaultSubmit plugin here, we listen for the core.form.valid event
                        // below to sort nodule grid (if necessary), then submit
                        //defaultSubmit: new FormValidation.plugins.DefaultSubmit(),
                        excluded: new FormValidation.plugins.Excluded(), //disable validators on hidden, disabled fields
                        icon: new FormValidation.plugins.Icon({
                            valid: '',
                            invalid: 'glyphicon glyphicon-remove',
                            validating: 'glyphicon glyphicon-refresh',
                            onPlaced: function (e) {
                                if (multiInputValidators.indexOf(e.field) > -1) {
                                    $fg = $("#" + e.element.id).closest(".form-group");
                                    $c = $fg.find(".fv-plugins-message-container");
                                    if ($c.length == 1) {
                                        $c.append(e.iconElement);
                                    } else {
                                        $fg.append(e.iconElement);
                                    }
                                }
                            },
                        })
                    }
                }
            );

            const fv = $form.data('formValidation');

            fv.on('core.form.invalid', VAPALS.autoScrollToErrorField);
            fv.on('core.element.validated', VAPALS.hideSuccessFormatting);

            return fv;
        }

        let $noduleGrid; //global accessor

        $(function () {
            const fv = createFormValidator();
            $("#save-for-later-button").on('click', function () {
                fv.destroy();
            });

            // SCAN
            // bind to change events on study date and baseline date to calculate "time since baseline"
            const $tsbFields = $("#sidoe, #cedos");
            $tsbFields.closest(".datepicker").on("dp.change", calculateTimeSinceBaseline); //latch onto datetimepicker change events
            $tsbFields.first().trigger("change"); //trigger on page load for existing data;

            const $cedos = $("#cedos");
            if (!$cedos.val()) {
                $cedos.val(moment().format(VAPALS.DATE_FORMAT)).trigger('change');
            }

            let hasImported = false;
            let aiStructuredReport = null;
            //type of exam
            $("[name=cetex]").on("change", function () {
                let isBaseline = $("[name=cetex]:checked").val() === "b";
                console.debug("cetex:change(): isBaseline=%s, hasImported=%s, available=%s", isBaseline,
                    hasImported, aiStructuredReport != null);
                if (isBaseline) { // type of exam (tex) is baseline
                    const $sidoe = $("#sidoe");
                    if (!$sidoe.val()) {
                        $sidoe.val($("#cedos").val()).trigger('change');
                    }

                    if (!hasImported && aiStructuredReport) {
                        importAllData(aiStructuredReport);
                        hasImported = true;
                        const $ai = $("#ai-imported");
                        $ai.show();
                        setTimeout(function () {
                            $ai.removeClass("fa-flip");
                        }, 1000);
                    }
                }
            });

            // If no value is selected for CT Protocol, preselect "low-dose" as the default.
            const ctProtocol = $("[name=cectp]:checked").val();
            if (ctProtocol === undefined) {
                $("#cectp-l").prop("checked", true);
            }

            //reconstructed slice thickness
            $("#cectrst").conditionallyDisplay({sourceValues: "o", enable: "#cectrsto-container"});

            {#NB: Emphysema, Nodule Grid, Abnormalities, Followup JS functionality is in their own template files#}
            $noduleGrid = initNoduleGrid(fv);

            AI.queryStructuredReport(studyId, siteId, function (structuredReport) {
                aiStructuredReport = structuredReport

                //trigger change event on type of exam to display import buttons now that data is set.
                $("[name=cetex]").trigger('change');
            })

            function importAllData(structuredReport) {
                importDicomHeader(structuredReport);

                const study = structuredReport[AI.SR_PATIENT_STUDY_DETAILS_KEY];
                const seriesNumber = study["Series Number"]
                const nodules = structuredReport[AI.SR_NODULES_KEY]
                $noduleGrid.importData(nodules, seriesNumber);
            }

            function importDicomHeader(structuredReport) {
                console.debug("importDicomHeader(): structuredReport=%o", structuredReport);
                const patientData = structuredReport[AI.SR_PATIENT_STUDY_DETAILS_KEY]
                console.debug("importDicomHeader(): patientData=%o", patientData)
                Object.entries(patientData).forEach(([key, value]) => {
                    if (key === "Study Date") {
                        const fieldSelector = "#cedos";
                        const $field = $(fieldSelector);

                        //convert value to VAPALS format
                        const studyDateMoment = moment(value);
                        if (studyDateMoment.isValid()) {
                            value = studyDateMoment.format(VAPALS.DATE_FORMAT);
                        }

                        if ($field.hasClass(AI.IMPORT_FIELD_CLASS)) {
                            $field.val(value);
                        } else {
                            $field.addClass(AI.IMPORT_FIELD_CLASS);
                            $field.attr(AI.IMPORT_ORIGINAL_VALUE_ATTR, $field.val());
                            const originalValue = $field.val();
                            $field.val(value);
                            $field.attr(AI.IMPORT_VALUE_ATTR, value);

                            AI.createRevertElement(fieldSelector, originalValue).insertAfter($("#cedos-addon").parent().parent());
                        }
                    }
                    if (key === "Slice Thickness") {
                        const fieldSelector = "#cectrst";
                        const $field = $(fieldSelector);
                        if ($field.hasClass(AI.IMPORT_FIELD_CLASS)) {
                            $field.val(value);
                        } else {
                            $field.addClass(AI.IMPORT_FIELD_CLASS);
                            $field.attr(AI.IMPORT_ORIGINAL_VALUE_ATTR, $field.val());
                            const originalValue = $field.val();
                            if (!isNaN(value)) { //value is a valid number either as a string or Number
                                if (value === 1) { //handle JSON conversion of 1.0 to 1 (back to 1.0)
                                    value = '1.0';
                                }
                                const strValue = value.toString();
                                $field.val(strValue);
                                $field.attr(AI.IMPORT_VALUE_ATTR, strValue);
                                if (value === "o") {
                                    $("#cectrsto-container").show();
                                } else {
                                    $("#cectrsto-container").hide();
                                }
                                AI.createRevertElement(fieldSelector, originalValue).insertAfter(fieldSelector);
                            }

                        }
                    }
                    if (key === "Specify") {
                        const fieldSelector = "#cectrsto";
                        const $field = $(fieldSelector);
                        $("#cectrsto-container").show();
                        if ($field.hasClass(AI.IMPORT_FIELD_CLASS)) {
                            $field.val(value);
                        } else {
                            $field.addClass(AI.IMPORT_FIELD_CLASS);
                            $field.attr(AI.IMPORT_ORIGINAL_VALUE_ATTR, $field.val());
                            const originalValue = $field.val();
                            $field.val(value);
                            $field.attr(AI.IMPORT_VALUE_ATTR, value);
                            AI.createRevertElement(fieldSelector, originalValue).insertAfter(fieldSelector);
                        }
                    }
                });
            }

            $(".revert-data-button").on('click', function () {
                // for fields not in "#nodule-table"
                $("." + AI.IMPORT_FIELD_CLASS).each(function () {
                    $(this).val($(this).attr(AI.IMPORT_ORIGINAL_VALUE_ATTR));
                    if ($(this).attr("id") === "cectrst") {
                        if ($(this).attr(AI.IMPORT_ORIGINAL_VALUE_ATTR) == "o") {
                            $("#cectrsto-container").show();
                        } else {
                            $("#cectrsto-container").hide();
                        }
                    }
                    $(this).removeAttr(AI.IMPORT_ORIGINAL_VALUE_ATTR);
                    $(this).removeAttr(AI.IMPORT_VALUE_ATTR);
                    $(this).removeClass(AI.IMPORT_FIELD_CLASS);
                });

                $noduleGrid.revertData();

                AI.removeImportIcons();
            });
            initAbnormalities(fv);
            initEmphysema(fv);
            initFollowup(fv);

            fv.on('core.form.valid', function () {
                const examType = $("[name=cetex]:checked").val(); // baseline is "b"; only available on CT Eval form
                if (examType === 'b') {
                    $noduleGrid.sortData();
                }
                $("form").trigger('submit');
            });


            $("#submit-button").on('click.vapals', function () {
                fv.validate().catch(function (error) {
                    console.error(error); // added to trap issues with IE11
                });
            });

            $('#body').scrollspy({target: '#wizard-bar', offset: 10})
        });
    </script>
    )
{% endblock %}
